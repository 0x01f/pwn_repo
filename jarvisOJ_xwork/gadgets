Gadgets information
============================================================
0x00000000004a3cb4 : adc ah, ah ; clc ; push rax ; in eax, 0xf8 ; call rax
0x0000000000429fef : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a059 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049c685 : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004c3f20 : adc al, 0 ; add byte ptr [rax], al ; push rsi ; add byte ptr [rax], al ; clc ; ret
0x00000000004305d5 : adc al, 0x13 ; jmp rdx
0x000000000042ebc5 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000044074a : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x000000000049c37a : adc al, 0x24 ; mov edi, 1 ; call rax
0x000000000040edb8 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000004194f7 : adc al, 0x41 ; pop rsp ; ret
0x000000000043c3d0 : adc al, 0x48 ; lea eax, [rdi + 0x14] ; ret
0x00000000004c43d4 : adc al, 0x5b ; add byte ptr [rax], al ; call 0x144c41aa
0x000000000042066a : adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x00000000004c68d4 : adc al, 0x80 ; add byte ptr [rax], al ; pop rax ; mov edx, edi ; call rsi
0x000000000043fef6 : adc al, 0x89 ; ret 0xdaf7
0x000000000046517e : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000042b480 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000429bae : adc al, 0x91 ; sub eax, edx ; ret
0x00000000004305d1 : adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000421eb7 : adc al, 0xa ; jmp r10
0x000000000042ed33 : adc al, 0xa ; sub eax, edx ; ret
0x00000000004c97d4 : adc al, 0xaf ; add byte ptr [rax], al ; cmp byte ptr [rsi - 3], cl ; jmp qword ptr [rbx]
0x0000000000401979 : adc al, 0xdd ; fcomp dword ptr [rsi - 0x7cb7ff94] ; ret
0x0000000000423391 : adc al, 0xe ; sub eax, edx ; ret
0x0000000000400a78 : adc al, 0xf3 ; add eax, dword ptr [rax] ; nop ; pop rbp ; ret
0x000000000049c75a : adc al, 0xf7 ; add rsp, 8 ; ret
0x00000000004a41f9 : adc al, 0xf9 ; call qword ptr [rax + 0x10fff913]
0x00000000004a41f5 : adc al, 0xf9 ; call qword ptr [rax]
0x00000000004c7509 : adc al, 0xfb ; jmp qword ptr [rdx]
0x0000000000476d12 : adc al, 3 ; add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x0000000000491c9e : adc al, 9 ; ret 0xa074
0x00000000004a38dd : adc al, bh ; call rax
0x000000000042a197 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a201 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000040db17 : adc al, ch ; push rbx ; ret
0x000000000048013e : adc bh, byte ptr [rcx] ; ret 0x850f
0x00000000004a40c9 : adc bh, cl ; call qword ptr [rdx + 0x22fff911]
0x00000000004a40c5 : adc bh, cl ; jmp qword ptr [rdx]
0x00000000004a4245 : adc bh, cl ; jmp rax
0x00000000004c5b49 : adc bh, dl ; jmp rdx
0x0000000000468872 : adc bl, byte ptr [rsi - 0x34] ; add byte ptr [r8 - 0x77], cl ; ret
0x0000000000427655 : adc bl, ch ; call 0xffffffffc412ffaa
0x0000000000424125 : adc bl, ch ; call 0xffffffffc43aca7a
0x00000000004792c2 : adc bl, ch ; jno 0x479318 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000483d64 : adc bl, ch ; ret 0x8348
0x0000000000427044 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000043bd06 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043bd77 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043bcd7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043bd05 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000474a40 : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000413966 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x000000000045043d : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000450f9b : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x0000000000450436 : adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000478a3f : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000046ad39 : adc byte ptr [r8 - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0x46ad0d
0x000000000041736c : adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x0000000000471a84 : adc byte ptr [r8 - 0x7d], cl ; ret
0x0000000000441222 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000410f23 : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x0000000000478ebc : adc byte ptr [rax + 0x29], cl ; ret
0x000000000045a7ee : adc byte ptr [rax + 0x29], cl ; ret 0x8b48
0x0000000000450437 : adc byte ptr [rax + 0x39], cl ; ret
0x00000000004190b3 : adc byte ptr [rax + 0x39], cl ; ret 0xef75
0x0000000000426f8a : adc byte ptr [rax + 0x43], ah ; add bl, dh ; ret
0x00000000004436f0 : adc byte ptr [rax + 0x48004436], ah ; mov dword ptr [rax + 8], edx ; ret
0x0000000000443fa8 : adc byte ptr [rax + 0x4a], bl ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000478a40 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000412e87 : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000048880a : adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x000000000047995e : adc byte ptr [rax + 1], cl ; ret
0x000000000040043d : adc byte ptr [rax - 0x39], cl ; ret 0xffd0
0x0000000000474db4 : adc byte ptr [rax - 0x6df0fe06], al ; ret 0x8348
0x000000000042cbc4 : adc byte ptr [rax - 0x73], cl ; jg 0x42cbe1 ; jne 0x42cbb8 ; ret
0x000000000046b345 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000046b344 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000440e92 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000447cb8 : adc byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x000000000044861b : adc byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000042cfda : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x0000000000409d27 : adc byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x406027
0x0000000000463f07 : adc byte ptr [rax - 0x77], cl ; jo 0x463f25 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000046523c : adc byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x77] ; ret
0x000000000046ad3a : adc byte ptr [rax - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0x46ad0c
0x0000000000463ec7 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000040e753 : adc byte ptr [rax - 0x77], cl ; ret
0x000000000041736d : adc byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000048608f : adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000048a734 : adc byte ptr [rax - 0x77], cl ; ret 0x875
0x000000000041d0a9 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4e
0x00000000004332bf : adc byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000438a77 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000438ab3 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000400eea : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000421573 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042054b : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000479e99 : adc byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ba4c : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a3a1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043edaa : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000041948a : adc byte ptr [rbp + 0x39], cl ; ret
0x0000000000478e65 : adc byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8d4a
0x0000000000427168 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x000000000042cbc8 : adc byte ptr [rbp - 0x1b], dh ; ret
0x0000000000440d07 : adc byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x0000000000400fc6 : adc byte ptr [rbx + 0x410c247c], cl ; call rsp
0x000000000049d27c : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041f4ab : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000410613 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004c1052 : adc byte ptr [rbx + 0xa], cl ; ret
0x0000000000413967 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x0000000000416e22 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000047ab67 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x47ab81 ; ret
0x000000000043ea5a : adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x00000000004be244 : adc byte ptr [rbx - 3], 0xff ; rcl byte ptr [rbp - 3], 1 ; jmp qword ptr [rax]
0x00000000004be1ac : adc byte ptr [rbx - 3], ch ; push rax ; insb byte ptr [rdi], dx ; std ; call rax
0x0000000000419837 : adc byte ptr [rbx], ch ; add byte ptr [rbx + rcx*4 + 0x2d], al ; ret
0x0000000000410f24 : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000044cee4 : adc byte ptr [rcx + 0x39], cl ; ret
0x0000000000450e37 : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call r15
0x0000000000420393 : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000004625d0 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a41f8 : adc byte ptr [rcx + rdi*8], dl ; call qword ptr [rax + 0x10fff913]
0x000000000049f128 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000040d71c : adc byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x0000000000419437 : adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000423413 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000494847 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000004a4328 : adc byte ptr [rcx - 7], bh ; jmp qword ptr [rax]
0x000000000043f1d4 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000416e25 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000420d79 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000043f2bf : adc byte ptr [rdi + rdx*8 + 0x48], dh ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004be258 : adc byte ptr [rdi - 3], bl ; call qword ptr [rax]
0x000000000043c5e3 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000497cbb : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004967bf : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004979bf : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004970bf : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004973bf : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496ab7 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496d64 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497964 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497c64 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497364 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497064 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000496a5c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000495aed : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049590d : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004962e5 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495205 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496105 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000045043e : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000450f9c : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x00000000004a41e0 : adc byte ptr [rdi], dl ; stc ; call qword ptr [rax + 0x10fff916]
0x00000000004509bc : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x0000000000430ac9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000048636a : adc byte ptr [rdx + rdx*8 - 0x76b7d08c], al ; ret
0x00000000004be1cc : adc byte ptr [rdx - 3], bh ; push rax ; jnp 0x4be1d7 ; call rax
0x00000000004a39e4 : adc byte ptr [rdx - 8], cl ; jmp qword ptr [rax]
0x000000000042fa2b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004a41f0 : adc byte ptr [rip + 0x1490fff9], dl ; stc ; call qword ptr [rax]
0x000000000042f8da : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000042eed5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000422005 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000427abb : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000004a41e8 : adc byte ptr [rsi], dl ; stc ; call qword ptr [rax + 0x10fff915]
0x0000000000491ccf : adc byte ptr [rsp - 4], al ; ret
0x0000000000491d15 : adc byte ptr [rsp - 8], al ; ret
0x0000000000419836 : adc byte ptr cs:[rbx], ch ; add byte ptr [rbx + rcx*4 + 0x2d], al ; ret
0x0000000000496d67 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000440bcc : adc ch, bl ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004a3ae8 : adc cl, al ; clc ; inc dword ptr [rax] ; ret 0xfff8
0x00000000004a4211 : adc cl, bh ; call qword ptr [rax + 0x10fff918]
0x00000000004a41d1 : adc cl, bh ; jmp qword ptr [rax + 0x20fff918]
0x0000000000452b4f : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x0000000000424115 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000452b52 : adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x000000000047539a : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000049b95c : adc cl, byte ptr [rcx + 1] ; ret 0x3ee9
0x0000000000479e91 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000464ae4 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4410
0x00000000004270d0 : adc dh, bh ; ret
0x000000000041ba81 : adc dh, dh ; ret 0xf0f
0x00000000004a3cd0 : adc dl, ah ; clc ; call rax
0x0000000000479803 : adc dword ptr [rax + 1], ecx ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000004124c2 : adc dword ptr [rax - 0x39], ecx ; ret 0xffd0
0x000000000044fe95 : adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x0000000000410f15 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000479edc : adc dword ptr [rax - 0x73], ecx ; add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000044ff6c : adc dword ptr [rax - 0x75], ecx ; add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x000000000041863e : adc dword ptr [rax - 0x77], ecx ; ret 0x8348
0x0000000000416dcc : adc dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x000000000047644a : adc dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x000000000042ba4b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000042a337 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b94f : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000421b2b : adc dword ptr [rbp - 0x76b70001], esi ; ret 0xc6eb
0x00000000004196e2 : adc dword ptr [rbx], ebp ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000436447 : adc dword ptr [rcx + 7], edi ; ret
0x00000000004360e2 : adc dword ptr [rcx - 1], ebx ; ret
0x00000000004360a6 : adc dword ptr [rcx - 1], edi ; ret
0x0000000000469ccf : adc dword ptr [rcx], eax ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004032f4 : adc dword ptr [rdi + 0x6cbfe0], edi ; call rax
0x00000000004365a9 : adc dword ptr [rdi - 8], edi ; ret
0x000000000043e6ac : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000043e7df : adc dword ptr [rsi + 3], edx ; ret
0x000000000043e87c : adc dword ptr [rsi + 7], edx ; ret
0x000000000043e67e : adc dword ptr [rsi - 1], edx ; ret
0x000000000042a336 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a41f1 : adc eax, 0x1490fff9 ; stc ; call qword ptr [rax]
0x0000000000400dc1 : adc eax, 0x1bf004a ; add byte ptr [rax], al ; add al, ch ; ret 0x3ef
0x000000000044fe76 : adc eax, 0x27bbbd ; je 0x44fe88 ; ret
0x0000000000444af7 : adc eax, 0x28549c ; pop rbx ; ret
0x000000000047166d : adc eax, 0x4000003 ; add rsp, 8 ; ret
0x00000000004715a9 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x0000000000429ec1 : adc eax, 0x83480000 ; ret 0xe910
0x000000000046e879 : adc eax, 0x89000003 ; ret 0xe8c0
0x0000000000466aea : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000042b7ae : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000495029 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041802f : adc eax, dword ptr [rdx] ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0x418056
0x0000000000496a5f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047a7c9 : adc eax, eax ; ret
0x000000000047a906 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000004b98e5 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004a3b24 : adc ebx, eax ; clc ; call qword ptr [rcx + 0x11fff8c3]
0x000000000046b34c : adc ebx, eax ; nop ; mov eax, edi ; ret
0x000000000049bfc2 : adc ecx, dword ptr [rax + 0x63] ; ret 0xbc80
0x0000000000442a6f : adc ecx, dword ptr [rax - 0x39] ; ret 0xffd0
0x0000000000415e3a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000447c51 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000044d1b4 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000452e11 : adc ecx, dword ptr [rcx + rax - 0x16] ; call qword ptr [r10 + rax*8]
0x00000000004a4091 : adc ecx, edi ; call rdx
0x00000000004a40cd : adc ecx, edi ; jmp qword ptr [rdx]
0x00000000004a408d : adc ecx, edi ; ljmp [rcx + rdx] ; stc ; call rdx
0x00000000004a38e5 : adc edi, eax ; call rax
0x00000000004a41fd : adc edi, ecx ; call qword ptr [rax]
0x00000000004a4041 : adc edi, ecx ; jmp rax
0x00000000004a4241 : adc edi, ecx ; push qword ptr [rax + 0x12] ; stc ; jmp rax
0x00000000004a403d : adc edi, ecx ; push qword ptr [rax + 0x13] ; stc ; jmp rax
0x0000000000403789 : adc esi, 3 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004badfe : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x000000000049d2bc : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004a3b2c : adc esp, eax ; clc ; call qword ptr [rcx + 0x11fff8c4]
0x0000000000496c42 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000436446 : adc qword ptr [rcx + 7], rdi ; ret
0x00000000004360e1 : adc qword ptr [rcx - 1], rbx ; ret
0x00000000004360a5 : adc qword ptr [rcx - 1], rdi ; ret
0x00000000004365a8 : adc qword ptr [rdi - 8], rdi ; ret
0x000000000043e7de : adc qword ptr [rsi + 3], rdx ; ret
0x000000000043e87b : adc qword ptr [rsi + 7], rdx ; ret
0x000000000043e67d : adc qword ptr [rsi - 1], rdx ; ret
0x0000000000427043 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000495190 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047a905 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004270cf : adc sil, r15b ; ret
0x00000000004bee83 : add ah, al ; add eax, 0x62180000 ; hlt ; call qword ptr [rax]
0x00000000004c35bb : add ah, bh ; add byte ptr [rax], r8b ; xor ch, cl ; std ; jmp qword ptr [rdx]
0x000000000043ed0e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043ed2e : add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000043edbd : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043eced : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004c2d9b : add ah, bl ; add byte ptr [rax], r8b ; nop ; add bh, al ; call qword ptr [rcx]
0x00000000004c869b : add ah, bl ; popfq ; add byte ptr [rax], al ; and byte ptr [rdi], al ; cld ; call qword ptr [rax]
0x00000000004c00bf : add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000004c0198 : add ah, byte ptr [rdx + 0x41280e0a] ; ret
0x000000000043e7da : add ah, byte ptr [rdx - 0xf] ; jl 0x43e82f ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004c31ab : add ah, ch ; add byte ptr [rax], al ; and byte ptr [rbx], bl ; clc ; call qword ptr [rax]
0x00000000004bf4ab : add ah, ch ; or eax, dword ptr [rax] ; add al, dh ; sti ; hlt ; call qword ptr [rax]
0x00000000004c6fab : add ah, ch ; xchg byte ptr [rax], al ; add byte ptr [rax - 0x26], al ; cli ; call rsi
0x00000000004c86b3 : add ah, dh ; popfq ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; cld ; call qword ptr [rdx]
0x00000000004c6eb3 : add ah, dh ; test dword ptr [rax], eax ; add byte ptr [rax - 0x2a], bl ; cli ; jmp rdi
0x00000000004c7393 : add ah, dl ; mov al, byte ptr [rax] ; add byte ptr [rax], bl ; or ebx, edi ; jmp rsi
0x00000000004bf493 : add ah, dl ; or eax, dword ptr [rax] ; add al, ch ; sti ; hlt ; call qword ptr [rdx]
0x00000000004c4393 : add ah, dl ; pop rdx ; add byte ptr [rax], al ; js 0x4c4357 ; clc ; call qword ptr [rdi]
0x00000000004c3c93 : add ah, dl ; push rbx ; add byte ptr [rax], al ; js 0x4c3d1c ; clc ; call qword ptr [rcx]
0x000000000044a2f1 : add al, 0 ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000044a329 : add al, 0 ; add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x000000000041c70b : add al, 0 ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xffff
0x0000000000471ae9 : add al, 0 ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret
0x0000000000423b4d : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042c66f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423b71 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049cfc1 : add al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004416f2 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x00000000004276e8 : add al, 0 ; add byte ptr [rax], al ; ret
0x000000000044a651 : add al, 0 ; add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x0000000000418b7d : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000402ff5 : add al, 0 ; add byte ptr [rdi + 0x6cc720], bh ; call rbx
0x00000000004196a6 : add al, 0 ; add dh, dh ; ret
0x0000000000400d20 : add al, 0 ; leave ; ret
0x000000000046b34b : add al, 0x11 ; ret
0x000000000043ed5d : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004749e9 : add al, 0x16 ; jae 0x474997 ; xor eax, eax ; ret
0x000000000042ebc1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000042324a : add al, 0x17 ; sub eax, ecx ; ret
0x00000000004c0bc4 : add al, 0x23 ; add byte ptr [rax], al ; sub byte ptr [rsi - 0xb], ah ; jmp qword ptr [rax]
0x000000000046a445 : add al, 0x24 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x46a416
0x000000000043fc1d : add al, 0x24 ; add rsp, 0x18 ; ret
0x0000000000409d2a : add al, 0x24 ; call 0x406024
0x0000000000471a8c : add al, 0x24 ; call rax
0x000000000046fda3 : add al, 0x24 ; lea rdi, [rax + 0x6cb1e0] ; call rdx
0x000000000044feda : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000047cd45 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x000000000040ee00 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000044d90d : add al, 0x29 ; ret 0x8941
0x0000000000465e6e : add al, 0x31 ; ret
0x0000000000465d6a : add al, 0x37 ; ret
0x000000000041651f : add al, 0x3a ; ret
0x0000000000480ffc : add al, 0x41 ; cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x480fd1
0x0000000000466c36 : add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x0000000000426f81 : add al, 0x43 ; add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x0000000000471671 : add al, 0x48 ; add esp, 8 ; ret
0x000000000043c23b : add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x000000000043b749 : add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x000000000043b75b : add al, 0x48 ; lea eax, [rdx + 5] ; ret
0x00000000004643f3 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000464333 : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000435b2a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000464214 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000439f89 : add al, 0x48 ; mov eax, edi ; ret
0x0000000000465a64 : add al, 0x48 ; xor eax, eax ; ret
0x00000000004749e6 : add al, 0x4c ; cmp eax, dword ptr [rsi + rdx] ; jae 0x47499a ; xor eax, eax ; ret
0x00000000004742d6 : add al, 0x4c ; cmp edx, eax ; jne 0x474284 ; mov eax, dword ptr [rsi + 4] ; ret
0x00000000004c4cc4 : add al, 0x64 ; add byte ptr [rax], al ; clc ; jge 0x4c4ccb ; call rdx
0x000000000043b757 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x0000000000439f97 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000004c51c4 : add al, 0x69 ; add byte ptr [rax], al ; js 0x4c51bb ; stc ; call qword ptr [rsi]
0x000000000044d1b2 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000041c6c4 : add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x0000000000466c34 : add al, 0x75 ; add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000042084a : add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000004c0157 : add al, 0x79 ; ret
0x0000000000475621 : add al, 0x80 ; cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000049a353 : add al, 0x81 ; je 0x49a335 ; ret
0x0000000000429bab : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000049a34f : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0x49a339 ; ret
0x000000000042b483 : add al, 0x81 ; sub eax, edx ; ret
0x000000000043ee58 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x43ee48 ; ret
0x0000000000429907 : add al, 0x82 ; sub eax, ecx ; ret
0x0000000000449cbd : add al, 0x83 ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000000000046b5a0 : add al, 0x85 ; leave ; jne 0x46b558 ; xor eax, eax ; ret
0x0000000000467319 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000049be6b : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000043b746 : add al, 0x88 ; add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x0000000000439f86 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x000000000049a3bb : add al, 0x88 ; add r8, rax ; jmp r8
0x000000000040e62a : add al, 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000043ee5b : add al, 0x8a ; je 0x43ee45 ; ret
0x000000000045c8d0 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x000000000041c0c4 : add al, 0x8d ; dec byte ptr [r8 - 0x75] ; ret
0x000000000048a403 : add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000004c2520 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000004c59a6 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000049b8e3 : add al, 0x98 ; add rax, r8 ; jmp rax
0x00000000004bf3c4 : add al, 0xb ; add byte ptr [rax], al ; pop rax ; cli ; hlt ; call qword ptr [rbx]
0x00000000004bf4c4 : add al, 0xc ; add byte ptr [rax], al ; call 0x134be9cf
0x00000000004578f4 : add al, 0xc5 ; xor byte ptr [rbx + rcx*2], 0 ; jmp rax
0x00000000004be7b4 : add al, 0xd7 ; std ; call rsp
0x000000000047a85d : add al, 0xde ; lea r9, [rdx] ; jmp 0x47a8b9
0x000000000048036d : add al, 0xde ; lea r9, [rdx] ; jmp 0x4803c9
0x000000000047b1d5 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042338d : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000435e93 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000043fc9b : add al, 0xf3 ; ret
0x0000000000427129 : add al, 0xf6 ; ret 0x7408
0x00000000004c2f21 : add al, 0xf8 ; call rsp
0x00000000004a42bd : add al, 0xf9 ; call rax
0x00000000004816f8 : add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000047499c : add al, 1 ; cmp rax, -1 ; cmove rax, rdx ; ret
0x00000000004c01cf : add al, 2 ; hlt ; ret
0x0000000000430137 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004c8220 : add al, 3 ; mov dword ptr [rcx], eax ; ret
0x0000000000421c2d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000042d758 : add al, 7 ; ret
0x000000000042ed2f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004bcb3f : add al, ah ; ret 0x4b
0x00000000004c2dff : add al, al ; add bh, al ; call qword ptr [rdi]
0x0000000000412578 : add al, al ; and cl, byte ptr [rdx] ; pop rbx ; ret
0x00000000004a3a8f : add al, al ; lahf ; clc ; jmp rax
0x00000000004aeae7 : add al, al ; sldt word ptr [rax] ; ret
0x00000000004c4cc7 : add al, bh ; jge 0x4c4cc8 ; call rdx
0x00000000004c06f7 : add al, bh ; push rsi ; cmc ; call qword ptr [rcx]
0x00000000004bc89f : add al, bh ; ret
0x00000000004c6bb7 : add al, bh ; ret 0xfffa
0x00000000004c9007 : add al, bh ; xor edi, ebp ; call rsp
0x000000000041b5a5 : add al, bpl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000449287 : add al, bpl ; ret 0xfb88
0x000000000041b706 : add al, bpl ; ret 0xffff
0x00000000004657b6 : add al, bpl ; xchg eax, ebx ; ret
0x0000000000497b42 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000424111 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x0000000000419b0d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000426703 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000410ff5 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000046a246 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000418030 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x0000000000420186 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000044668d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000040f1bd : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000423ced : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047dfec : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000042b241 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423d11 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049cfd1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004408e2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x0000000000441b62 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000004418d5 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000004417a1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000441719 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000466b53 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000046a95a : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043dbe4 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x000000000047558d : add al, byte ptr [rax] ; add byte ptr [rcx + 0x48b48d8], cl ; ret 0x8b48
0x000000000048344e : add al, byte ptr [rax] ; add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x0000000000419158 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041d967 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000041af5c : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000044853c : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000447bbc : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000044d344 : add al, byte ptr [rax] ; mov rdi, rbx ; call r12
0x00000000004c99e4 : add al, byte ptr [rax] ; ret
0x0000000000444b0a : add al, byte ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x444afe
0x000000000044319e : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004bfcf0 : add al, byte ptr [rdi + 0xa] ; ret
0x00000000004c55c5 : add al, byte ptr [rdx] ; pop rsi ; ret
0x00000000004c539d : add al, byte ptr [rdx] ; push rsi ; ret
0x00000000004c0a3d : add al, byte ptr [rdx] ; ret
0x000000000047ad95 : add al, byte ptr [rip + 0x5b000000] ; ret
0x00000000004c2524 : add al, byte ptr [rsi + rcx + 0x38] ; ret
0x0000000000444b09 : add al, byte ptr fs:[rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x444aff
0x0000000000400a76 : add al, ch ; adc al, 0xf3 ; add eax, dword ptr [rax] ; nop ; pop rbp ; ret
0x00000000004a3c9c : add al, ch ; clc ; jmp rax
0x000000000045575e : add al, ch ; in al, dx ; ret
0x0000000000400ab9 : add al, ch ; jno 0x400ab6 ; add eax, dword ptr [rax] ; pop rbp ; ret
0x000000000041b5a6 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c4117 : add al, ch ; pushfq ; clc ; jmp rbx
0x0000000000421257 : add al, ch ; ret
0x0000000000400dc8 : add al, ch ; ret 0x3ef
0x000000000048ee88 : add al, ch ; ret 0xf72c
0x000000000048bf88 : add al, ch ; ret 0xf75b
0x0000000000449288 : add al, ch ; ret 0xfb88
0x000000000041b707 : add al, ch ; ret 0xffff
0x00000000004bf497 : add al, ch ; sti ; hlt ; call qword ptr [rdx]
0x00000000004657b7 : add al, ch ; xchg eax, ebx ; ret
0x00000000004c4bc7 : add al, cl ; jnp 0x4c4bc8 ; call rdi
0x00000000004c4087 : add al, cl ; pushfq ; clc ; call qword ptr [rdx]
0x00000000004c1b5f : add al, dh ; cmc ; cmc ; call qword ptr [rdx]
0x00000000004c71ef : add al, dh ; in al, dx ; cli ; jmp qword ptr [rdx]
0x00000000004bf47f : add al, dh ; sti ; hlt ; call qword ptr [rax]
0x00000000004c8c6f : add al, dl ; mov bh, 0xfc ; call qword ptr [rax]
0x00000000004bc867 : add al, dl ; ret
0x00000000004bcb37 : add al, dl ; ret 0x4b
0x00000000004c7322 : add bh, ah ; ret
0x000000000044538f : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004c2da1 : add bh, al ; call qword ptr [rcx]
0x00000000004c2e01 : add bh, al ; call qword ptr [rdi]
0x000000000045fbfe : add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000413d4a : add bh, bh ; nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000400ee7 : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047e64f : add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x00000000004425f4 : add bh, bh ; ror dword ptr [rcx + rcx*4 - 0x11], cl ; call 0x41e8e8
0x0000000000402ffc : add bh, bh ; sar dword ptr [rdi + 0x6cbfe0], cl ; call rbx
0x000000000047a970 : add bh, byte ptr [rax + 1] ; ret
0x0000000000412cb2 : add bh, byte ptr [rax - 1] ; pop rbx ; ret
0x000000000040dffb : add bh, byte ptr [rax - 1] ; ret
0x00000000004bf8f3 : add bh, byte ptr [rcx + 0x41380e0a] ; ret
0x000000000043dfb2 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004a4279 : add bh, cl ; call rax
0x0000000000470696 : add bh, dh ; ret 0x804
0x00000000004a3d34 : add bl, ah ; clc ; call rax
0x00000000004269e6 : add bl, al ; lea rax, [rip + 0x15e71] ; ret
0x00000000004672f1 : add bl, al ; mov eax, 2 ; ret
0x0000000000421a94 : add bl, al ; mov rsi, rbx ; mov rdi, rax ; call rcx
0x0000000000444aba : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000004c612f : add bl, byte ptr [rax + 0x41180e0a] ; ret
0x00000000004c536f : add bl, byte ptr [rcx + 0xa] ; ret
0x00000000004c61ed : add bl, byte ptr [rdx + 0xa] ; ret
0x00000000004a3eb8 : add bl, byte ptr [rsi] ; stc ; call qword ptr [rdx + 0x22fff91d]
0x000000000046a44a : add bl, ch ; ret 0x1f0f
0x00000000004066d7 : add bl, dh ; ret
0x00000000004c0dfb : add byte ptr [0x6b300000], bh ; cmc ; call qword ptr [rdx]
0x0000000000465948 : add byte ptr [r15 + 0x4b2edc], dil ; call 0x401b99
0x000000000047af40 : add byte ptr [r15 + 0x6cc9c0], r15b ; call rax
0x000000000047b06b : add byte ptr [r15 + 0x6cc9c4], r15b ; call rdx
0x000000000045bb83 : add byte ptr [r15 + r9 + 0x44], cl ; ret 0xf4c
0x000000000045ab6f : add byte ptr [r15 + r9 + 0x45], cl ; ret 0xf4c
0x0000000000474a21 : add byte ptr [r8 + 0x39], r9b ; ret
0x000000000042665f : add byte ptr [r8 + 0xf], cl ; ret 0x66c3
0x00000000004692fe : add byte ptr [r8 + 0xf], cl ; ret 0x8d48
0x0000000000426f82 : add byte ptr [r8 + 0xf], cl ; ret 0xb8c3
0x000000000049d98f : add byte ptr [r8 + 1], r9b ; ret
0x0000000000468875 : add byte ptr [r8 - 0x77], cl ; ret
0x0000000000443ab1 : add byte ptr [r8 - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x0000000000459bd8 : add byte ptr [r8 - 0x7d], r9b ; call 0xffffffffc27ee3ea
0x0000000000447755 : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x00000000004bcb3a : add byte ptr [r8], al ; add byte ptr [rax], al ; add al, ah ; ret 0x4b
0x00000000004bc89a : add byte ptr [r8], al ; add byte ptr [rax], al ; add al, bh ; ret
0x00000000004bc862 : add byte ptr [r8], al ; add byte ptr [rax], al ; add al, dl ; ret
0x00000000004bcb32 : add byte ptr [r8], al ; add byte ptr [rax], al ; add al, dl ; ret 0x4b
0x00000000004bcb52 : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x00000000004bcb5a : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x00000000004bcafa : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ret 0x4b
0x00000000004bcaf2 : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rdi], dl ; ret 0x4b
0x00000000004bcb42 : add byte ptr [r8], al ; add byte ptr [rax], al ; add dl, dh ; ret 0x4b
0x00000000004c3665 : add byte ptr [r8], r8b ; pop rax ; xor edi, eax ; jmp rsp
0x000000000043fce9 : add byte ptr [r8], r8b ; ret
0x00000000004c2dfd : add byte ptr [r8], r8b ; rol byte ptr [rdx], 0xf8 ; call qword ptr [rdi]
0x00000000004c770f : add byte ptr [rax + 0x16], ah ; sti ; call qword ptr [rax]
0x0000000000421a8f : add byte ptr [rax + 0x16], bh ; ret
0x000000000043e57f : add byte ptr [rax + 0x27201fa], al ; mov byte ptr [rdi], cl ; ret
0x0000000000405807 : add byte ptr [rax + 0x29], cl ; ret
0x000000000044cb68 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000419665 : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000044bce0 : add byte ptr [rax + 0x29], cl ; ret 0xe183
0x00000000004c3667 : add byte ptr [rax + 0x33], bl ; clc ; jmp rsp
0x00000000004c9227 : add byte ptr [rax + 0x38], bh ; std ; call rcx
0x0000000000417bfb : add byte ptr [rax + 0x39], cl ; ret
0x000000000046dfe7 : add byte ptr [rax + 0x39], cl ; ret 0x7874
0x000000000048403b : add byte ptr [rax + 0x39], cl ; ret 0x820f
0x0000000000418046 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000044f34b : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000418007 : add byte ptr [rax + 0x39], cl ; ret 0x8948
0x000000000046e1c5 : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000042665b : add byte ptr [rax + 0x43dfd0], bh ; cmove rax, rdx ; ret
0x000000000047ac16 : add byte ptr [rax + 0x4740000], al ; mov eax, edx ; pop rbx ; ret
0x0000000000443f88 : add byte ptr [rax + 0x4a], bl ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004632c7 : add byte ptr [rax + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045d37e : add byte ptr [rax + 0x63], cl ; ret
0x0000000000464fbf : add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000046afaf : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x000000000046af9f : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x000000000043f35f : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x00000000004185a2 : add byte ptr [rax + 0x6ca800], bh ; ret
0x000000000042410f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000476c44 : add byte ptr [rax + 0x75], al ; cmp bl, dh ; ret
0x000000000043c1df : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000004c3c97 : add byte ptr [rax + 0x7a], bh ; clc ; call qword ptr [rcx]
0x00000000004100ea : add byte ptr [rax + 0x8740000], al ; mov eax, edx ; pop rbx ; ret
0x000000000046764f : add byte ptr [rax + 0xc9], bh ; syscall ; ret
0x0000000000465cd5 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x0000000000443f6b : add byte ptr [rax + 0xf], cl ; ret
0x0000000000413027 : add byte ptr [rax + 0xf], cl ; ret 0x294d
0x0000000000426660 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000410289 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004692ff : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000000000426f83 : add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x000000000044942a : add byte ptr [rax + 0xf], cl ; ret 0xc985
0x0000000000448c7d : add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x000000000044b83a : add byte ptr [rax + 0xf], cl ; ret 0xed85
0x0000000000401850 : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x0000000000474d57 : add byte ptr [rax + 1], bh ; ret
0x0000000000426705 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000410ff7 : add byte ptr [rax + 1], cl ; ret
0x0000000000488f8f : add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000047b9ac : add byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000047f617 : add byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000479e00 : add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x000000000049b0df : add byte ptr [rax + 5], bh ; ret
0x000000000043ed7e : add byte ptr [rax + 8], bh ; pop rbx ; ret
0x000000000043ed7d : add byte ptr [rax + 8], dil ; pop rbx ; ret
0x00000000004ada8b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x00000000004c68d3 : add byte ptr [rax + rax*4], dl ; add byte ptr [rax], al ; pop rax ; mov edx, edi ; call rsi
0x000000000041c8e8 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041d1f9 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004c4113 : add byte ptr [rax + rbx*2], dl ; add al, ch ; pushfq ; clc ; jmp rbx
0x0000000000471670 : add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x00000000004c7143 : add byte ptr [rax + rcx*4 - 0x1e480000], al ; cli ; jmp qword ptr [rdx]
0x00000000004c20f3 : add byte ptr [rax + rdi], dh ; add byte ptr [rax], al ; call 0x114c1798
0x00000000004aec37 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x00000000004c7963 : add byte ptr [rax + rdx*4 + 0x28b80000], ah ; sti ; call rsp
0x000000000049c61f : add byte ptr [rax + rsi*4 + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004c51c7 : add byte ptr [rax - 0x16], bh ; stc ; call qword ptr [rsi]
0x0000000000403656 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8948
0x00000000004c4eff : add byte ptr [rax - 0x1e], al ; stc ; jmp rax
0x00000000004c6faf : add byte ptr [rax - 0x26], al ; cli ; call rsi
0x00000000004c8c9f : add byte ptr [rax - 0x29], dh ; cld ; call qword ptr [rax]
0x00000000004c6eb7 : add byte ptr [rax - 0x2a], bl ; cli ; jmp rdi
0x00000000004406a1 : add byte ptr [rax - 0x39], cl ; ret
0x0000000000452b3f : add byte ptr [rax - 0x39], cl ; ret 0xffb0
0x000000000040dfef : add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x000000000042196b : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000044ff6f : add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x0000000000458b2f : add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x0000000000411017 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000466b5f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000466b3f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x0000000000466b9f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000466b4f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x0000000000466b8f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000459528 : add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000044d35d : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000041e39c : add byte ptr [rax - 0x418aff94], ch ; ret
0x00000000004899a2 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000004c4397 : add byte ptr [rax - 0x4b], bh ; clc ; call qword ptr [rdi]
0x0000000000450433 : add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x000000000044a30f : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000044a2f3 : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000044a32b : add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x000000000047bcaa : add byte ptr [rax - 0x73], cl ; jl 0x47bcda ; js 0x47bcf9 ; call rsp
0x000000000047bfbf : add byte ptr [rax - 0x73], cl ; jl 0x47bfef ; js 0x47c00e ; call rsp
0x000000000047c386 : add byte ptr [rax - 0x73], cl ; jl 0x47c3b6 ; js 0x47c3d5 ; call rsp
0x000000000049b03f : add byte ptr [rax - 0x73], cl ; jl 0x49b070 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000041ba7d : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000475397 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000049bfbf : add byte ptr [rax - 0x75], cl ; adc ecx, dword ptr [rax + 0x63] ; ret 0xbc80
0x00000000004578f1 : add byte ptr [rax - 0x75], cl ; add al, 0xc5 ; xor byte ptr [rbx + rcx*2], 0 ; jmp rax
0x000000000044d38f : add byte ptr [rax - 0x75], cl ; add eax, 0x27f361 ; ret
0x000000000044601f : add byte ptr [rax - 0x75], cl ; add eax, 0x287321 ; ret
0x00000000004170ff : add byte ptr [rax - 0x75], cl ; add eax, 0x2b2fb9 ; ret
0x000000000041a4cb : add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x000000000045044f : add byte ptr [rax - 0x75], cl ; jl 0x450480 ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x0000000000415ad6 : add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000465276 : add byte ptr [rax - 0x75], cl ; jp 0x4652c1 ; jmp 0x465246
0x00000000004652af : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000047daad : add byte ptr [rax - 0x75], cl ; or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8008
0x00000000004176a7 : add byte ptr [rax - 0x75], cl ; push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x149
0x0000000000431eff : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000041ecc7 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; call rax
0x0000000000445b42 : add byte ptr [rax - 0x75], cl ; ret
0x00000000004c68d7 : add byte ptr [rax - 0x77], bl ; cli ; call rsi
0x000000000049c757 : add byte ptr [rax - 0x77], cl ; adc al, 0xf7 ; add rsp, 8 ; ret
0x000000000041712f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000410382 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000041e8d3 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x0000000000415642 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00000000004157b2 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000469c89 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000441fb5 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000441eb5 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x000000000041c70d : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xffff
0x0000000000443ae8 : add byte ptr [rax - 0x77], cl ; imul eax ; call rsi
0x0000000000469758 : add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbf0920ae
0x00000000004101d1 : add byte ptr [rax - 0x77], cl ; mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000441b71 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000041ef80 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000040378c : add byte ptr [rax - 0x77], cl ; ret
0x0000000000418032 : add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000041e4ac : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000047ad33 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000046a51f : add byte ptr [rax - 0x77], cl ; ret 0x3e9
0x0000000000486064 : add byte ptr [rax - 0x77], cl ; ret 0x63e8
0x000000000043f6da : add byte ptr [rax - 0x77], cl ; ret 0x6b8
0x0000000000402dfe : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000046cadf : add byte ptr [rax - 0x77], cl ; ret 0x8349
0x000000000041a3bf : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000459ea9 : add byte ptr [rax - 0x77], cl ; ret 0x858b
0x000000000044f6a4 : add byte ptr [rax - 0x77], cl ; ret 0x8840
0x0000000000455971 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000043f543 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000044fa77 : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000471177 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000042660b : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000045ae4f : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000045a5b4 : add byte ptr [rax - 0x77], cl ; ret 0xf0e9
0x0000000000413d50 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000047244f : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000049e4fd : add byte ptr [rax - 0x77], cl ; sub bl, r14b ; ret
0x0000000000471113 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000465a5f : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000046849f : add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rax + 0xf] ; fucompp ; ret 0xfffe
0x0000000000464d9a : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000443ab2 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x0000000000411ec7 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x0000000000471aeb : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret
0x0000000000459bd9 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc27ee3e9
0x000000000041ee98 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000421bad : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000401ae8 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000455458 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000456a7f : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000041efc2 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000040197e : add byte ptr [rax - 0x7d], cl ; ret
0x000000000041c66f : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000043e0af : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000041d049 : add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x000000000046a07f : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x000000000040f1bf : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047632f : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a0e2f : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045345f : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000004016df : add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x0000000000447756 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000044c740 : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000000000042340f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000464cb7 : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000004268ff : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000042688f : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000047dfee : add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x0000000000447b4f : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000462aa7 : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x0000000000484daf : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x0000000000425ea0 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000429d23 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423433 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004679cf : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000042ec6f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000465b9f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000044cec4 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000044e94f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000468da0 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000044743c : add byte ptr [rax - 0x7f], cl ; ret 0x6040
0x000000000043367b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000464322 : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000410b42 : add byte ptr [rax - 1], bh ; ret
0x000000000041725e : add byte ptr [rax - 1], dil ; ret
0x00000000004c57a7 : add byte ptr [rax - 2], bl ; stc ; call rsi
0x00000000004bf3c7 : add byte ptr [rax - 6], bl ; hlt ; call qword ptr [rbx]
0x00000000004a39e0 : add byte ptr [rax - 8], cl ; call qword ptr [rax]
0x00000000004c2dfb : add byte ptr [rax*2 + 0x2c00000], bh ; clc ; call qword ptr [rdi]
0x0000000000468da4 : add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000414d19 : add byte ptr [rax], 0 ; add bl, dh ; ret
0x000000000041859f : add byte ptr [rax], 0 ; add byte ptr [rax + 0x6ca800], bh ; ret
0x0000000000410d79 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000048bad0 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000413d4d : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000047e4ab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call rax
0x0000000000435e9b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000047881b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000046660b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000044f2e3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000041d393 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000004185ab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d6fb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000047c955 : add byte ptr [rax], 0 ; add byte ptr [rcx], bh ; ret
0x000000000042f151 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000447942 : add byte ptr [rax], 0 ; add dh, dh ; ret 0x4801
0x00000000004100eb : add byte ptr [rax], 0 ; je 0x410100 ; mov eax, edx ; pop rbx ; ret
0x000000000047ac17 : add byte ptr [rax], 0 ; je 0x47ac28 ; mov eax, edx ; pop rbx ; ret
0x00000000004c68d5 : add byte ptr [rax], 0 ; pop rax ; mov edx, edi ; call rsi
0x00000000004c2f1f : add byte ptr [rax], ah ; add al, 0xf8 ; call rsp
0x00000000004bcb57 : add byte ptr [rax], ah ; ret
0x00000000004c31af : add byte ptr [rax], ah ; sbb edi, eax ; call qword ptr [rax]
0x00000000004a3fe4 : add byte ptr [rax], ah ; stc ; call qword ptr [rax + 0x20fff91f]
0x00000000004c8ccf : add byte ptr [rax], ah ; xchg eax, ecx ; cld ; call qword ptr [rax]
0x00000000004c43d2 : add byte ptr [rax], al ; adc al, 0x5b ; add byte ptr [rax], al ; call 0x144c41ac
0x00000000004c68d2 : add byte ptr [rax], al ; adc al, 0x80 ; add byte ptr [rax], al ; pop rax ; mov edx, edi ; call rsi
0x00000000004c97d2 : add byte ptr [rax], al ; adc al, 0xaf ; add byte ptr [rax], al ; cmp byte ptr [rsi - 3], cl ; jmp qword ptr [rbx]
0x00000000004c0bc2 : add byte ptr [rax], al ; add al, 0x23 ; add byte ptr [rax], al ; sub byte ptr [rsi - 0xb], ah ; jmp qword ptr [rax]
0x000000000047166f : add byte ptr [rax], al ; add al, 0x48 ; add esp, 8 ; ret
0x00000000004c4cc2 : add byte ptr [rax], al ; add al, 0x64 ; add byte ptr [rax], al ; clc ; jge 0x4c4ccd ; call rdx
0x00000000004c51c2 : add byte ptr [rax], al ; add al, 0x69 ; add byte ptr [rax], al ; js 0x4c51bd ; stc ; call qword ptr [rsi]
0x00000000004bf3c2 : add byte ptr [rax], al ; add al, 0xb ; add byte ptr [rax], al ; pop rax ; cli ; hlt ; call qword ptr [rbx]
0x00000000004bf4c2 : add byte ptr [rax], al ; add al, 0xc ; add byte ptr [rax], al ; call 0x134be9d1
0x00000000004bcb3d : add byte ptr [rax], al ; add al, ah ; ret 0x4b
0x00000000004a3a8d : add byte ptr [rax], al ; add al, al ; lahf ; clc ; jmp rax
0x00000000004bc89d : add byte ptr [rax], al ; add al, bh ; ret
0x0000000000400ab7 : add byte ptr [rax], al ; add al, ch ; jno 0x400ab8 ; add eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000421255 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000400dc6 : add byte ptr [rax], al ; add al, ch ; ret 0x3ef
0x00000000004bc865 : add byte ptr [rax], al ; add al, dl ; ret
0x00000000004bcb35 : add byte ptr [rax], al ; add al, dl ; ret 0x4b
0x0000000000460876 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x00000000004672ef : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x000000000046a448 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x0000000000414d1a : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000421a8d : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x000000000045cb5b : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000046dfe5 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x7874
0x0000000000484039 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000044f349 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000464fbd : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00000000004185a0 : add byte ptr [rax], al ; add byte ptr [rax + 0x6ca800], bh ; ret
0x000000000043c1dd : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x0000000000449428 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x0000000000448c7b : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x000000000044b838 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xed85
0x000000000040184e : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000000000047a9a3 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000004890b4 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000488f8d : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000049b0dd : add byte ptr [rax], al ; add byte ptr [rax + 5], bh ; ret
0x000000000049c61d : add byte ptr [rax], al ; add byte ptr [rax + rsi*4 + 0x48], dh ; add esp, 0x18 ; ret
0x000000000044069f : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000413bfd : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x0000000000458b2d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x0000000000410d7a : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000044d35b : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000047bca8 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47bcdc ; js 0x47bcfb ; call rsp
0x000000000047bfbd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47bff1 ; js 0x47c010 ; call rsp
0x000000000047c384 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47c3b8 ; js 0x47c3d7 ; call rsp
0x000000000041a4c9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x0000000000415ad4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000465274 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jp 0x4652c3 ; jmp 0x465248
0x000000000041712d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000469c87 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000441fb3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000441eb3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x0000000000443ae6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; imul eax ; call rsi
0x0000000000441b6f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000410211 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041e4aa : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000486062 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x63e8
0x000000000046cadd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8349
0x000000000046e1f2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000043f541 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000426609 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000045ae4d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000413d4e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000047244d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000044350c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043e0ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000445393 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047632d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a0e2d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045345d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000044c73e : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000000000042b377 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004268fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000042688d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x0000000000447b4d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000484e8d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000042b3e1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004679cd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000042ec6d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000044e94d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000434e88 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000410b40 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000004bcb55 : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x00000000004bcb3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret 0x4b
0x00000000004a3a8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; lahf ; clc ; jmp rax
0x00000000004bc89b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret
0x00000000004bc863 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret
0x00000000004bcb33 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret 0x4b
0x00000000004170eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000474a0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000464fbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00000000004631fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000413bfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x0000000000458b2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x000000000049b14b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000041712b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000041e4a8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000486060 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x63e8
0x000000000045ed5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000045851b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043e0ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000047632b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a0e2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045345b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000004268fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000042688b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x0000000000447b4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000484e8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000049aabb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000004bcb53 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x0000000000415f2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004af912 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004afe02 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004bcb5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x000000000041790b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000043e2eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000049b79b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0xde89
0x00000000004233eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000421fbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000004bcafb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ret 0x4b
0x00000000004126fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x00000000004bcaf3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], dl ; ret 0x4b
0x0000000000443699 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x00000000004bcb43 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, dh ; ret 0x4b
0x0000000000466b1c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000004785ff : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000047e4ac : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004b193c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004b0aec : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004bc89c : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret
0x00000000004bcb74 : add byte ptr [rax], al ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x00000000004bd8fc : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rbx]
0x000000000045fc84 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000043c80c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x000000000043c81c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x000000000043c82c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x000000000043c83c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x000000000043c84c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000043c78c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x000000000043c79c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000043c7ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000043c7bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x000000000043c7cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x000000000043c7dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x000000000043c7ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x000000000043c7fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x000000000043c77c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000043c1dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000043bbbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x0000000000421a8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x00000000004159bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000047a9a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000049b0dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 5 ; ret
0x0000000000435e9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000047881c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000041711c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000041712c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000004126fc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000435fec : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000044369a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000004008ec : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000415da0 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004155a1 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004bcb0c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rsp ; ret 0x4b
0x0000000000415f2d : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b090c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004b10a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004af914 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004afe04 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004a4524 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43ec
0x00000000004b3324 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4575
0x00000000004b5ed4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4726
0x00000000004bcb04 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4b
0x00000000004bc914 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4bbe
0x00000000004bcb24 : add byte ptr [rax], al ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; ret 0x4b
0x00000000004009a1 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x4009a1 ; call rax
0x00000000004bcb1c : add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esi ; ret 0x4b
0x000000000041d394 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000041246c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d6fc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004bcb5d : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x000000000045c92c : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000443038 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004624cd : add byte ptr [rax], al ; add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x00000000004488e2 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x000000000043e9da : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x000000000043ed29 : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000047bfef : add byte ptr [rax], al ; add byte ptr [rbx + 0x3950245c], cl ; ret
0x00000000004432cc : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000043577d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000411eb3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000415da1 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000413860 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004609f6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000045e19c : add byte ptr [rax], al ; add byte ptr [rbx - 0x4db43], al ; call qword ptr [rax]
0x000000000044449d : add byte ptr [rax], al ; add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x0000000000463326 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000416f2c : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000045d7a2 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045d725 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x00000000004040d3 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret
0x000000000043e2ed : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000049b79d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0xde89
0x0000000000421058 : add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x00000000004417b1 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x00000000004418e5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000044171a : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000442de2 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0x40f0b8
0x0000000000441729 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000426201 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000458e8c : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004233ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000421fbd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041da15 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000426a10 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x0000000000426a36 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000047c956 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x000000000045bc2a : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x000000000040f00a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004bcafd : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ret 0x4b
0x000000000049c437 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000049c45f : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000043ec85 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x0000000000435f7d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000435fed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000004494dc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000462f45 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x00000000004126fd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042693d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000467665 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3bba
0x000000000044df16 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x00000000004438f4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x000000000046bfe7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x00000000004bcaf5 : add byte ptr [rax], al ; add byte ptr [rdi], dl ; ret 0x4b
0x000000000042f152 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000426852 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000004416f3 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x000000000049eb45 : add byte ptr [rax], al ; add byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000004c972e : add byte ptr [rax], al ; add byte ptr [rsi + rcx + 0x10], bh ; add dword ptr [rdx], 0x69 ; ret
0x00000000004c3f21 : add byte ptr [rax], al ; add byte ptr [rsi + rdx*2], ah ; add al, bh ; ret
0x000000000044369b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x0000000000458b7d : add byte ptr [rax], al ; add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x000000000044a375 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000472832 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x0000000000465970 : add byte ptr [rax], al ; add dh, al ; and al, 0x14 ; add al, ch ; ret
0x0000000000417e08 : add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000447943 : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000043da41 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000485f30 : add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00000000004bcb45 : add byte ptr [rax], al ; add dl, dh ; ret 0x4b
0x000000000049b285 : add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000478d77 : add byte ptr [rax], al ; add rax, -8 ; ret
0x0000000000466b1e : add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000426704 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x000000000043eefe : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000043f247 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000049c688 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000040151c : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x0000000000450236 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x000000000040fca5 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x0000000000446087 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040e01e : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004c64e2 : add byte ptr [rax], al ; and al, 0x7c ; add byte ptr [rax], al ; sbb byte ptr [rax - 6], dl ; jmp rsp
0x00000000004c86e2 : add byte ptr [rax], al ; and al, 0x9e ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; cld ; call qword ptr [rdx]
0x00000000004c2f1e : add byte ptr [rax], al ; and byte ptr [rax + rdi*8], al ; call rsp
0x00000000004c31ae : add byte ptr [rax], al ; and byte ptr [rbx], bl ; clc ; call qword ptr [rax]
0x00000000004bfd2e : add byte ptr [rax], al ; and byte ptr [rdi], 0xf5 ; jmp qword ptr [rsi]
0x00000000004c869e : add byte ptr [rax], al ; and byte ptr [rdi], al ; cld ; call qword ptr [rax]
0x000000000042693e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000424200 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000465cd4 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000004c20f6 : add byte ptr [rax], al ; call 0x114c1795
0x00000000004bf496 : add byte ptr [rax], al ; call 0x134be99d
0x00000000004bf4c6 : add byte ptr [rax], al ; call 0x134be9cd
0x00000000004c43d6 : add byte ptr [rax], al ; call 0x144c41a8
0x00000000004c1ff6 : add byte ptr [rax], al ; call 0x174c1651
0x0000000000402edb : add byte ptr [rax], al ; call 0x41f0f4
0x00000000004c4116 : add byte ptr [rax], al ; call 0xffffffffe44c39be
0x00000000004c5e26 : add byte ptr [rax], al ; call 0xffffffffe84c5851
0x000000000044d06b : add byte ptr [rax], al ; call r12
0x000000000047be64 : add byte ptr [rax], al ; call r14
0x000000000044d145 : add byte ptr [rax], al ; call r15
0x0000000000401a3a : add byte ptr [rax], al ; call rax
0x00000000004416f9 : add byte ptr [rax], al ; call rbx
0x00000000004b193e : add byte ptr [rax], al ; call rdi
0x000000000040edbc : add byte ptr [rax], al ; call rdx
0x00000000004b0aee : add byte ptr [rax], al ; call rsp
0x00000000004c4cc6 : add byte ptr [rax], al ; clc ; jge 0x4c4cc9 ; call rdx
0x00000000004c06f6 : add byte ptr [rax], al ; clc ; push rsi ; cmc ; call qword ptr [rcx]
0x00000000004bc89e : add byte ptr [rax], al ; clc ; ret
0x00000000004c6bb6 : add byte ptr [rax], al ; clc ; ret 0xfffa
0x00000000004c9006 : add byte ptr [rax], al ; clc ; xor edi, ebp ; call rsp
0x00000000004c35ba : add byte ptr [rax], al ; cld ; add byte ptr [rax], r8b ; xor ch, cl ; std ; jmp qword ptr [rdx]
0x00000000004c0dfa : add byte ptr [rax], al ; cmp al, 0x25 ; add byte ptr [rax], al ; xor byte ptr [rbx - 0xb], ch ; call qword ptr [rdx]
0x00000000004c2dfa : add byte ptr [rax], al ; cmp al, 0x45 ; add byte ptr [rax], al ; rol byte ptr [rdx], 0xf8 ; call qword ptr [rdi]
0x00000000004c4efa : add byte ptr [rax], al ; cmp al, 0x66 ; add byte ptr [rax], al ; loop 0x4c4f05 ; jmp rax
0x00000000004c86fa : add byte ptr [rax], al ; cmp al, 0x9e ; add byte ptr [rax], al ; and byte ptr [rdi], al ; cld ; call qword ptr [rax]
0x00000000004c8cfa : add byte ptr [rax], al ; cmp al, 0xa4 ; add byte ptr [rax], al ; sal al, 0xfc ; call qword ptr [rax]
0x00000000004c7506 : add byte ptr [rax], al ; cmp byte ptr [rbx + rdi*8], dl ; jmp qword ptr [rdx]
0x00000000004c97d6 : add byte ptr [rax], al ; cmp byte ptr [rsi - 3], cl ; jmp qword ptr [rbx]
0x0000000000411537 : add byte ptr [rax], al ; cmp eax, -1 ; jne 0x411548 ; pop rbx ; ret
0x0000000000464d35 : add byte ptr [rax], al ; cmp qword ptr [rax + 0x30], 0 ; je 0x464d49 ; ret
0x00000000004c9002 : add byte ptr [rax], al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; clc ; xor edi, ebp ; call rsp
0x00000000004c0526 : add byte ptr [rax], al ; cwde ; push rax ; cmc ; jmp qword ptr [rcx]
0x00000000004c2d9a : add byte ptr [rax], al ; fadd qword ptr [rax + rax] ; nop ; add bh, al ; call qword ptr [rcx]
0x00000000004c869a : add byte ptr [rax], al ; fcomp qword ptr [rbp + 0x7200000] ; cld ; call qword ptr [rax]
0x00000000004c8c9a : add byte ptr [rax], al ; fsub qword ptr [rbx - 0x28900000] ; cld ; call qword ptr [rax]
0x00000000004c86b2 : add byte ptr [rax], al ; hlt ; popfq ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; cld ; call qword ptr [rdx]
0x00000000004c6eb2 : add byte ptr [rax], al ; hlt ; test dword ptr [rax], eax ; add byte ptr [rax - 0x2a], bl ; cli ; jmp rdi
0x00000000004c1e7f : add byte ptr [rax], al ; idiv dil ; ret
0x00000000004c31aa : add byte ptr [rax], al ; in al, dx ; add byte ptr [rax], al ; and byte ptr [rbx], bl ; clc ; call qword ptr [rax]
0x00000000004bf4aa : add byte ptr [rax], al ; in al, dx ; or eax, dword ptr [rax] ; add al, dh ; sti ; hlt ; call qword ptr [rax]
0x00000000004c6faa : add byte ptr [rax], al ; in al, dx ; xchg byte ptr [rax], al ; add byte ptr [rax - 0x26], al ; cli ; call rsi
0x00000000004bcb76 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x00000000004100ec : add byte ptr [rax], al ; je 0x4100ff ; mov eax, edx ; pop rbx ; ret
0x00000000004218f7 : add byte ptr [rax], al ; je 0x421904 ; ret
0x000000000047ac18 : add byte ptr [rax], al ; je 0x47ac27 ; mov eax, edx ; pop rbx ; ret
0x000000000049c61e : add byte ptr [rax], al ; je 0x49c5da ; add rsp, 0x18 ; ret
0x000000000049eb46 : add byte ptr [rax], al ; je 0x49eb55 ; ret
0x000000000046a449 : add byte ptr [rax], al ; jmp 0x46a412
0x00000000004bd8fe : add byte ptr [rax], al ; jmp qword ptr [rbx]
0x00000000004408e4 : add byte ptr [rax], al ; jmp rax
0x00000000004c8c9e : add byte ptr [rax], al ; jo 0x4c8c7e ; cld ; call qword ptr [rax]
0x00000000004c3c96 : add byte ptr [rax], al ; js 0x4c3d19 ; clc ; call qword ptr [rcx]
0x00000000004c4396 : add byte ptr [rax], al ; js 0x4c4354 ; clc ; call qword ptr [rdi]
0x00000000004c51c6 : add byte ptr [rax], al ; js 0x4c51b9 ; stc ; call qword ptr [rsi]
0x00000000004c9226 : add byte ptr [rax], al ; js 0x4c9267 ; std ; call rcx
0x000000000043c80e : add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x000000000043c81e : add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x000000000043c82e : add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x000000000043c83e : add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x000000000043c84e : add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000043c76d : add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000043c78e : add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x000000000043c79e : add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000043c7ae : add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000043c7be : add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x000000000043c7ce : add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x000000000043c7de : add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x000000000043c71a : add byte ptr [rax], al ; lea rax, [rdi + 7] ; ret
0x000000000043c7ee : add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x000000000043c7fe : add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x000000000043c77e : add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000047bca9 : add byte ptr [rax], al ; lea rdi, [rsp + 0x78] ; call r12
0x00000000004c6b4f : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cli ; call rdx
0x00000000004c4efe : add byte ptr [rax], al ; loop 0x4c4f01 ; jmp rax
0x00000000004c4efd : add byte ptr [rax], al ; loop 0x4c4f02 ; jmp rax
0x00000000004bfece : add byte ptr [rax], al ; loopne 0x4bff06 ; cmc ; call qword ptr [rax]
0x00000000004c4772 : add byte ptr [rax], al ; mov ah, 0x5e ; add byte ptr [rax], al ; test al, 0xdd ; clc ; call qword ptr [rbx]
0x00000000004c5c4e : add byte ptr [rax], al ; mov al, 0x16 ; cli ; jmp qword ptr [rax]
0x00000000004c16ee : add byte ptr [rax], al ; mov al, 0xd3 ; cmc ; call rdx
0x000000000043b6ee : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x0000000000439f3e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000043c1de : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000043bbbe : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004c5b46 : add byte ptr [rax], al ; mov byte ptr [rdx], dl ; cli ; jmp rdx
0x0000000000464e0b : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043bbce : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000421a8e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000046afae : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x000000000046af9e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x000000000043f35e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x00000000004185a1 : add byte ptr [rax], al ; mov eax, 0x6ca800 ; ret
0x0000000000464321 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000410b41 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000474d56 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000049b0de : add byte ptr [rax], al ; mov eax, 5 ; ret
0x0000000000416dee : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000049e52e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e549 ; ret
0x000000000049e74e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e769 ; ret
0x0000000000488a2e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2448aa] ; ret
0x000000000040ff01 : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000473996 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x0000000000410135 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000445333 : add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000043bbfe : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000046591b : add byte ptr [rax], al ; mov edi, 0x4b2edc ; call 0x401b99
0x0000000000402ff6 : add byte ptr [rax], al ; mov edi, 0x6cc720 ; call rbx
0x000000000049c438 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000049c460 : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000043577e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435e9e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004416f4 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x00000000004bf47a : add byte ptr [rax], al ; mov esp, 0xf000000b ; sti ; hlt ; call qword ptr [rax]
0x000000000047b3d8 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x00000000004553d5 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x0000000000488342 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x00000000004883c6 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x00000000004710e4 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000042d38e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000049c79e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000047a990 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000044ff7f : add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x000000000041709e : add byte ptr [rax], al ; mov rax, -1 ; ret
0x0000000000466b3e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x0000000000466b4e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x0000000000466b5e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x0000000000466b6e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x0000000000466b7e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x0000000000466b8e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x0000000000466b9e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x00000000004155d9 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000411550 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000415ad5 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000047881e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000471f1e : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x00000000004652ae : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000041711e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000049c76e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000049c7ae : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000049c80e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000049c7fe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000049c7be : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000044601e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x287321] ; ret
0x00000000004170fe : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2b2fb9] ; ret
0x0000000000474bbf : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049c917 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000410381 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041e8d2 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000041c8eb : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041712e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041ef7f : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047ad59 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x0000000000465275 : add byte ptr [rax], al ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x465247
0x00000000004418e6 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000004417b2 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000442de3 : add byte ptr [rax], al ; mov rdi, r14 ; call 0x40f0b7
0x000000000044172a : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x000000000044171b : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000441b70 : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000041c70c : add byte ptr [rax], al ; mov rdi, rbx ; call 0x418967
0x0000000000462c76 : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000046258b : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000435cde : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000418031 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x418054
0x000000000049cd7e : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x00000000004005d4 : add byte ptr [rax], al ; mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e7 ; ret
0x00000000004c6b4a : add byte ptr [rax], al ; mov word ptr [rdx - 0x54000000], es ; cli ; call rdx
0x00000000004c3662 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [r8], r8b ; pop rax ; xor edi, eax ; jmp rsp
0x000000000049a5df : add byte ptr [rax], al ; movsxd rcx, dword ptr [r14 + rsi*4] ; add rcx, r14 ; jmp rcx
0x00000000004126fe : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000043590e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000435fee : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000435f7e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004c2d9e : add byte ptr [rax], al ; nop ; add bh, al ; call qword ptr [rcx]
0x0000000000400a0f : add byte ptr [rax], al ; nop ; leave ; ret
0x000000000044369c : add byte ptr [rax], al ; nop ; ret
0x00000000004bfeca : add byte ptr [rax], al ; or al, 0x16 ; add byte ptr [rax], al ; loopne 0x4bff0a ; cmc ; call qword ptr [rax]
0x00000000004c86ca : add byte ptr [rax], al ; or al, 0x9e ; add byte ptr [rax], al ; and byte ptr [rdi], al ; cld ; call qword ptr [rax]
0x00000000004c0d16 : add byte ptr [rax], al ; or byte ptr [rdx - 0xb], ch ; call qword ptr [rsi]
0x00000000004c36f6 : add byte ptr [rax], al ; or byte ptr [rsi], bh ; clc ; call qword ptr [rax]
0x0000000000476d14 : add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x00000000004bee46 : add byte ptr [rax], al ; pop rax ; add esi, edi ; call rdi
0x00000000004bf3c6 : add byte ptr [rax], al ; pop rax ; cli ; hlt ; call qword ptr [rbx]
0x00000000004c68d6 : add byte ptr [rax], al ; pop rax ; mov edx, edi ; call rsi
0x00000000004c3666 : add byte ptr [rax], al ; pop rax ; xor edi, eax ; jmp rsp
0x000000000045c85d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000045c92d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004008ee : add byte ptr [rax], al ; pop rbp ; ret
0x000000000043ed2a : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x0000000000463327 : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045a92c : add byte ptr [rax], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000004432cd : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000411eb4 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000400606 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004004ce : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041249b : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004c2f1a : add byte ptr [rax], al ; pop rsp ; add byte ptr [rax], r8b ; and byte ptr [rax + rdi*8], al ; call rsp
0x00000000004c761a : add byte ptr [rax], al ; pop rsp ; lea eax, [rax] ; add byte ptr [rax], dh ; xchg eax, edi ; std ; call rcx
0x00000000004bcb0e : add byte ptr [rax], al ; pop rsp ; ret 0x4b
0x00000000004c3f22 : add byte ptr [rax], al ; push rsi ; add byte ptr [rax], al ; clc ; ret
0x00000000004c0d12 : add byte ptr [rax], al ; push rsp ; and al, 0 ; add byte ptr [rax], cl ; push -0xb ; call qword ptr [rsi]
0x00000000004c4112 : add byte ptr [rax], al ; push rsp ; pop rax ; add byte ptr [rax], al ; call 0xffffffffe44c39c2
0x00000000004c8712 : add byte ptr [rax], al ; push rsp ; sahf ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; cld ; call qword ptr [rdx]
0x00000000004c7c12 : add byte ptr [rax], al ; push rsp ; xchg eax, ebx ; add byte ptr [rax], al ; test al, 0x89 ; jmp qword ptr [rsi]
0x00000000004c1b5a : add byte ptr [rax], al ; pushfq ; xor al, byte ptr [rax] ; add al, dh ; cmc ; cmc ; call qword ptr [rdx]
0x00000000004c6e2e : add byte ptr [rax], al ; rcl ah, 0xfa ; jmp rsi
0x0000000000401523 : add byte ptr [rax], al ; ret
0x00000000004a7cc6 : add byte ptr [rax], al ; ret 0
0x00000000004aec3e : add byte ptr [rax], al ; ret 0x10
0x00000000004b090e : add byte ptr [rax], al ; ret 0x1d4
0x00000000004b10a6 : add byte ptr [rax], al ; ret 0x1d5
0x00000000004af916 : add byte ptr [rax], al ; ret 0x24
0x00000000004afe06 : add byte ptr [rax], al ; ret 0x33
0x00000000004a4526 : add byte ptr [rax], al ; ret 0x43ec
0x00000000004b3326 : add byte ptr [rax], al ; ret 0x4575
0x00000000004b5ed6 : add byte ptr [rax], al ; ret 0x4726
0x00000000004bcb06 : add byte ptr [rax], al ; ret 0x4b
0x00000000004bc916 : add byte ptr [rax], al ; ret 0x4bbe
0x00000000004ae43e : add byte ptr [rax], al ; ret 0xa
0x00000000004ae83e : add byte ptr [rax], al ; ret 0xd
0x00000000004b1ce2 : add byte ptr [rax], al ; ret 1
0x00000000004b1ee2 : add byte ptr [rax], al ; ret 2
0x00000000004b20e2 : add byte ptr [rax], al ; ret 3
0x00000000004b22e2 : add byte ptr [rax], al ; ret 4
0x00000000004b24e2 : add byte ptr [rax], al ; ret 5
0x00000000004adfe6 : add byte ptr [rax], al ; ret 6
0x00000000004b28e2 : add byte ptr [rax], al ; ret 7
0x00000000004b2ae2 : add byte ptr [rax], al ; ret 8
0x00000000004b2ce2 : add byte ptr [rax], al ; ret 9
0x00000000004b22de : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000004c2dfe : add byte ptr [rax], al ; rol byte ptr [rdx], 0xf8 ; call qword ptr [rdi]
0x00000000004ae6e6 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000004c8cfe : add byte ptr [rax], al ; sal al, 0xfc ; call qword ptr [rax]
0x00000000004c83f6 : add byte ptr [rax], al ; sbb bh, bh ; sti ; jmp qword ptr [rax]
0x00000000004c64e6 : add byte ptr [rax], al ; sbb byte ptr [rax - 6], dl ; jmp rsp
0x00000000004c7396 : add byte ptr [rax], al ; sbb byte ptr [rcx], cl ; sti ; jmp rsi
0x00000000004c86b6 : add byte ptr [rax], al ; sbb byte ptr [rdi], al ; cld ; call qword ptr [rdx]
0x00000000004bee86 : add byte ptr [rax], al ; sbb byte ptr [rdx - 0xc], ah ; call qword ptr [rax]
0x00000000004bcb26 : add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; ret 0x4b
0x00000000004c16ea : add byte ptr [rax], al ; sub al, 0x2e ; add byte ptr [rax], al ; mov al, 0xd3 ; cmc ; call rdx
0x00000000004c0bc6 : add byte ptr [rax], al ; sub byte ptr [rsi - 0xb], ah ; jmp qword ptr [rax]
0x000000000042fb9c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000416526 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x0000000000443185 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x000000000043f363 : add byte ptr [rax], al ; syscall ; ret
0x00000000004c7c16 : add byte ptr [rax], al ; test al, 0x89 ; jmp qword ptr [rsi]
0x00000000004c4776 : add byte ptr [rax], al ; test al, 0xdd ; clc ; call qword ptr [rbx]
0x00000000004c7142 : add byte ptr [rax], al ; test byte ptr [rax - 0x1e480000], cl ; cli ; jmp qword ptr [rdx]
0x00000000004c9222 : add byte ptr [rax], al ; test eax, 0x38780000 ; std ; call rcx
0x0000000000443039 : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x00000000004009a3 : add byte ptr [rax], al ; test rax, rax ; je 0x40099f ; call rax
0x00000000004bcb1e : add byte ptr [rax], al ; xchg eax, esi ; ret 0x4b
0x00000000004c06f2 : add byte ptr [rax], al ; xor al, 0x1e ; add byte ptr [rax], al ; clc ; push rsi ; cmc ; call qword ptr [rcx]
0x00000000004c1ff2 : add byte ptr [rax], al ; xor al, 0x37 ; add byte ptr [rax], al ; call 0x174c1655
0x00000000004c20f2 : add byte ptr [rax], al ; xor al, 0x38 ; add byte ptr [rax], al ; call 0x114c1799
0x00000000004c36f2 : add byte ptr [rax], al ; xor al, 0x4e ; add byte ptr [rax], al ; or byte ptr [rsi], bh ; clc ; call qword ptr [rax]
0x00000000004c83f2 : add byte ptr [rax], al ; xor al, 0x9b ; add byte ptr [rax], al ; sbb bh, bh ; sti ; jmp qword ptr [rax]
0x00000000004c0dfe : add byte ptr [rax], al ; xor byte ptr [rbx - 0xb], ch ; call qword ptr [rdx]
0x00000000004c35be : add byte ptr [rax], al ; xor ch, cl ; std ; jmp qword ptr [rdx]
0x0000000000452517 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000040f00b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a945 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000041d396 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000041246e : add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000413cfe : add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x413d19 ; ret
0x00000000004885b1 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000441666 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x000000000044168b : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000004416af : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000004416cf : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000004268ed : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004c7507 : add byte ptr [rax], bh ; adc al, 0xfb ; jmp qword ptr [rdx]
0x00000000004c6737 : add byte ptr [rax], bh ; jl 0x4c6739 ; call rax
0x00000000004c97d7 : add byte ptr [rax], bh ; std ; jmp qword ptr [rbx]
0x00000000004c7397 : add byte ptr [rax], bl ; or ebx, edi ; jmp rsi
0x00000000004c64e7 : add byte ptr [rax], bl ; push rax ; cli ; jmp rsp
0x00000000004c0bc7 : add byte ptr [rax], ch ; cmc ; jmp qword ptr [rax]
0x00000000004c36f7 : add byte ptr [rax], cl ; clc ; call qword ptr [rax]
0x0000000000476d15 : add byte ptr [rax], cl ; je 0x476d82 ; pop rbx ; ret
0x000000000049aebe : add byte ptr [rax], cl ; mov byte ptr [rip + 0x231c99], 8 ; ret
0x00000000004c0d17 : add byte ptr [rax], cl ; push -0xb ; call qword ptr [rsi]
0x000000000049aec5 : add byte ptr [rax], cl ; ret
0x00000000004bcb5f : add byte ptr [rax], dh ; ret
0x00000000004c761f : add byte ptr [rax], dh ; xchg eax, edi ; std ; call rcx
0x000000000040140f : add byte ptr [rax], dl ; jmp 0x401373
0x00000000004711cd : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004787ed : add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x00000000004c2f1d : add byte ptr [rax], r8b ; and byte ptr [rax + rdi*8], al ; call rsp
0x000000000047e64d : add byte ptr [rax], r8b ; call rbx
0x0000000000474d55 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000043bbed : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000042d38d : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000043bc2d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000004c2d9d : add byte ptr [rax], r8b ; nop ; add bh, al ; call qword ptr [rcx]
0x00000000004c36f5 : add byte ptr [rax], r8b ; or byte ptr [rsi], bh ; clc ; call qword ptr [rax]
0x000000000047b155 : add byte ptr [rax], r8b ; pop rbx ; ret
0x000000000041351d : add byte ptr [rax], r8b ; ret
0x00000000004c35bd : add byte ptr [rax], r8b ; xor ch, cl ; std ; jmp qword ptr [rdx]
0x000000000049a515 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000413cdd : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x0000000000467877 : add byte ptr [rbp + 0x39440750], cl ; ret 0x8d0f
0x000000000041bb91 : add byte ptr [rbp + 0x39], cl ; ret 0x8948
0x000000000041bd0e : add byte ptr [rbp + 0x39], cl ; ret 0x976
0x0000000000478c0c : add byte ptr [rbp + 0x39], dh ; xor eax, eax ; add rsp, 0x68 ; ret
0x000000000045c85e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000045c92e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000040070a : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000474b27 : add byte ptr [rbp + 0x6348ff59], cl ; ret
0x0000000000478a92 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x38 ; ret
0x000000000047942f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x000000000047931f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000478b34 : add byte ptr [rbp + 9], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000004ae837 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x00000000004c3663 : add byte ptr [rbp + rcx*2 + 0x33580000], ah ; clc ; jmp rsp
0x00000000004653fe : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x00000000004c761b : add byte ptr [rbp + rcx*4], bl ; add byte ptr [rax], dh ; xchg eax, edi ; std ; call rcx
0x00000000004c1e7b : add byte ptr [rbp + rsi + 0x42000000], bh ; idiv bh ; ret
0x000000000049f0b4 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x000000000044303a : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004aeae3 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x000000000041e39f : add byte ptr [rbp - 0x42], dh ; ret
0x0000000000452c69 : add byte ptr [rbp - 0x75], cl ; jl 0x452c9a ; and byte ptr [rax + 1], cl ; ret
0x000000000045cee9 : add byte ptr [rbp - 0x75], cl ; jl 0x45cf1a ; and byte ptr [rax + 1], cl ; ret
0x00000000004624cf : add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x00000000004488e4 : add byte ptr [rbp - 0x77], cl ; fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x000000000043e9dc : add byte ptr [rbp - 0x7b], al ; fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x0000000000469f5a : add byte ptr [rbp - 0x7c], al ; ror byte ptr [rax - 0x75], 5 ; ret
0x0000000000480abf : add byte ptr [rbp - 0x7cb776f4], cl ; ret 0x8d01
0x0000000000429ba9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000474d48 : add byte ptr [rbx + 0x2564200d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000043ed2b : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000470690 : add byte ptr [rbx + 0x25cbe115], cl ; add bh, dh ; ret 0x804
0x0000000000411538 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x0000000000417197 : add byte ptr [rbx + 0x2b540505], al ; add byte ptr [rcx], al ; ret
0x000000000047bff1 : add byte ptr [rbx + 0x3950245c], cl ; ret
0x00000000004432ce : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000045a92d : add byte ptr [rbx + 0x44], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000043bbff : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000043b72f : add byte ptr [rbx + 0x48028901], cl ; lea eax, [rdx + 3] ; ret
0x0000000000420b57 : add byte ptr [rbx + 0x4c], bl ; mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x000000000043577f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000004711c6 : add byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000041f087 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x0000000000412f31 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000411eb5 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000400607 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004004cf : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000049e52f : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x0000000000484035 : add byte ptr [rbx + 0xa880], cl ; add byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000044fe7a : add byte ptr [rbx + rax - 0xd], dh ; ret
0x0000000000426f80 : add byte ptr [rbx + rax*2], 0 ; cmove rax, rdx ; ret
0x00000000004c4473 : add byte ptr [rbx + rbx*2 - 0x45680000], dh ; clc ; call qword ptr [rcx]
0x00000000004c445b : add byte ptr [rbx + rbx*2 - 0x45700000], bl ; clc ; call qword ptr [rcx]
0x00000000004c4443 : add byte ptr [rbx + rbx*2 - 0x45780000], al ; clc ; call qword ptr [rcx]
0x00000000004c43d3 : add byte ptr [rbx + rbx*2], dl ; add byte ptr [rax], al ; call 0x144c41ab
0x00000000004c83f3 : add byte ptr [rbx + rbx*4], dh ; add byte ptr [rax], al ; sbb bh, bh ; sti ; jmp qword ptr [rax]
0x00000000004bf47b : add byte ptr [rbx + rcx - 0x4100000], bh ; hlt ; call qword ptr [rax]
0x0000000000419839 : add byte ptr [rbx + rcx*4 + 0x2d], al ; ret
0x0000000000475552 : add byte ptr [rbx + rcx*4 + 0x45], al ; test byte ptr [rax - 0x77], cl ; ret
0x000000000047a8f7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000480407 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004bf3c3 : add byte ptr [rbx + rcx], al ; add byte ptr [rax], al ; pop rax ; cli ; hlt ; call qword ptr [rbx]
0x00000000004c7c5b : add byte ptr [rbx + rdx*4 + 0x36a00000], bl ; sti ; jmp qword ptr [rdx]
0x00000000004c5c4b : add byte ptr [rbx + rsi*2 + 0x16b00000], cl ; cli ; jmp qword ptr [rax]
0x00000000004609f8 : add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x0000000000444adf : add byte ptr [rbx - 0x18], dl ; mov edx, 0x89000264 ; ret
0x000000000047cd17 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0x47cd31 ; ret
0x0000000000467f6a : add byte ptr [rbx - 0x38b7cf18], al ; ret
0x00000000004114cf : add byte ptr [rbx - 0x3b7cb7fe], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000043eda6 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x000000000043ed9f : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x000000000043ed98 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x000000000043ed91 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x000000000043ed8a : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x000000000043ed83 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x00000000004c8c6b : add byte ptr [rbx - 0x48300000], ch ; cld ; call qword ptr [rax]
0x000000000045e19e : add byte ptr [rbx - 0x4db43], al ; call qword ptr [rax]
0x000000000043eaf5 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0x72e9
0x000000000043eae0 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xaf0f
0x0000000000474db1 : add byte ptr [rbx - 0x57fef1e], al ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x000000000047561e : add byte ptr [rbx - 0x57ffb1e], al ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000044449f : add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x0000000000463328 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000410d34 : add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x000000000043dbe6 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000406b93 : add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000462f54 : add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x000000000040a808 : add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x000000000044332f : add byte ptr [rbx - 0xc8a0008], al ; xor eax, eax ; leave ; ret
0x0000000000416f2e : add byte ptr [rbx - 0xd], bl ; ret
0x00000000004a4380 : add byte ptr [rbx - 7], bh ; jmp qword ptr [rax]
0x0000000000471117 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000004c0bc3 : add byte ptr [rbx], al ; add byte ptr [rax], al ; sub byte ptr [rsi - 0xb], ah ; jmp qword ptr [rax]
0x00000000004a4240 : add byte ptr [rbx], dl ; stc ; push qword ptr [rax + 0x12] ; stc ; jmp rax
0x000000000044f7ff : add byte ptr [rcx + 0x29], cl ; ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x0000000000465bcf : add byte ptr [rcx + 0x39], cl ; ret
0x000000000041bacf : add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x0000000000489edd : add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000427266 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000047e89e : add byte ptr [rcx + 0x3c8b48d8], cl ; ret 0x87f6
0x000000000040ff02 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x0000000000400bf4 : add byte ptr [rcx + 0x458bf845], cl ; clc ; leave ; ret
0x000000000047558f : add byte ptr [rcx + 0x48b48d8], cl ; ret 0x8b48
0x0000000000415df6 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x000000000045fbfb : add byte ptr [rcx + 0x4b], al ; add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x00000000004711c3 : add byte ptr [rcx + 0x5d5b006c], dh ; jmp rax
0x0000000000464e0c : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x00000000004305ce : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000042ee4c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000043ba78 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000049a5e0 : add byte ptr [rcx + 0x63], cl ; or al, 0xb6 ; add rcx, r14 ; jmp rcx
0x0000000000440f05 : add byte ptr [rcx + 0xf], al ; lahf ; ret
0x000000000045d7a4 : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045d727 : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000041b7c7 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000046f83e : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8545
0x00000000004040d5 : add byte ptr [rcx + 0xf], cl ; ret
0x000000000043e2ef : add byte ptr [rcx + 1], cl ; ret
0x000000000049b79f : add byte ptr [rcx + 1], cl ; ret 0xde89
0x000000000042105a : add byte ptr [rcx + 9], al ; ret
0x0000000000412e82 : add byte ptr [rcx + r9*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004c51c3 : add byte ptr [rcx + rbp*2], al ; add byte ptr [rax], al ; js 0x4c51bc ; stc ; call qword ptr [rsi]
0x00000000004c9223 : add byte ptr [rcx + rbp*4], ah ; add byte ptr [rax + 0x38], bh ; std ; call rcx
0x000000000042d38f : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x0000000000412e83 : add byte ptr [rcx + rcx*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004417b3 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x000000000047e79f : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x00000000004418e7 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000445cb2 : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000049cd7f : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x000000000044171c : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000442de4 : add byte ptr [rcx + rcx*4 - 9], cl ; call 0x40f0b6
0x0000000000445c0c : add byte ptr [rcx + rcx*4 - 9], cl ; call r15
0x000000000044172b : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x000000000048f33b : add byte ptr [rcx - 0x39], cl ; ret 0xc001
0x000000000048c483 : add byte ptr [rcx - 0x39], cl ; ret 0xfc01
0x0000000000489283 : add byte ptr [rcx - 0x39], cl ; ret 0xff81
0x000000000045b4a4 : add byte ptr [rcx - 0x39], cl ; ret 0xffe0
0x0000000000405914 : add byte ptr [rcx - 0x55551e], al ; call rcx
0x000000000044a653 : add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x000000000044a670 : add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x000000000044a68d : add byte ptr [rcx - 0x73], cl ; add r9d, dword ptr [r8 + 0x39] ; ret
0x0000000000483450 : add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x000000000048013b : add byte ptr [rcx - 0x75], al ; adc bh, byte ptr [rcx] ; ret 0x850f
0x000000000044121f : add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x000000000040ed1f : add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x0000000000443197 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000426203 : add byte ptr [rcx - 0x77], cl ; ret
0x0000000000411da3 : add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x0000000000458e8e : add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000444997 : add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000446707 : add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x000000000046ce0f : add byte ptr [rcx - 0x7d], cl ; ret 0x4b30
0x00000000004233ef : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004206a0 : add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x0000000000421fbf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000418b7f : add byte ptr [rcx - 0xa], al ; ret
0x000000000041aa89 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000041aa93 : add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000047d1f1 : add byte ptr [rcx - 0xb37b], cl ; inc dword ptr [rcx - 0x77] ; ret
0x000000000047cd1a : add byte ptr [rcx - 0xcf68130], cl ; ret
0x00000000004a4324 : add byte ptr [rcx - 7], bh ; call qword ptr [rax]
0x0000000000426a12 : add byte ptr [rcx - 9], cl ; ret 1
0x0000000000426a38 : add byte ptr [rcx - 9], cl ; ret 2
0x00000000004438f2 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x0000000000474d4e : add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000400969 : add byte ptr [rcx], al ; ret
0x0000000000444aec : add byte ptr [rcx], bh ; ret
0x000000000040102c : add byte ptr [rcx], bh ; ret 0x860f
0x0000000000468589 : add byte ptr [rcx], bh ; ror dword ptr [rdi], 0x94 ; ret
0x000000000049cdf0 : add byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x4e ; or byte ptr [rdi], cl ; ret 0xfc3
0x000000000045bc2c : add byte ptr [rcx], ch ; ret 0xd089
0x000000000041418a : add byte ptr [rcx], cl ; ret 0x8948
0x000000000047b917 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000040f00c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004bcaff : add byte ptr [rcx], dh ; ret 0x4b
0x000000000046b55f : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7c], 0xdb ; je 0x46b55a ; ret
0x000000000046b1da : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x46b211 ; ret
0x0000000000488fa7 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x0000000000413cff : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x413d18 ; ret
0x000000000047ac08 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000004885b2 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000044853e : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000447737 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x0000000000447bbe : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x0000000000444b0b : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x000000000041b71b : add byte ptr [rdi + 0x4a295c], bh ; call 0x417958
0x000000000041b71a : add byte ptr [rdi + 0x4a295c], dil ; call 0x417959
0x000000000041b702 : add byte ptr [rdi + 0x4a298b], bh ; call 0x417958
0x000000000041b701 : add byte ptr [rdi + 0x4a298b], dil ; call 0x417959
0x000000000046591c : add byte ptr [rdi + 0x4b2edc], bh ; call 0x401b98
0x0000000000433585 : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x00000000004460c0 : add byte ptr [rdi + 0x6cc6d0], bh ; call rax
0x00000000004460bf : add byte ptr [rdi + 0x6cc6d0], r15b ; call rax
0x0000000000402ff7 : add byte ptr [rdi + 0x6cc720], bh ; call rbx
0x000000000047af41 : add byte ptr [rdi + 0x6cc9c0], bh ; call rax
0x000000000047b06c : add byte ptr [rdi + 0x6cc9c4], bh ; call rdx
0x000000000049c439 : add byte ptr [rdi + 1], bh ; call r14
0x000000000049c461 : add byte ptr [rdi + 1], bh ; call rax
0x00000000004c97d3 : add byte ptr [rdi + rbp*4], dl ; add byte ptr [rax], al ; cmp byte ptr [rsi - 3], cl ; jmp qword ptr [rbx]
0x000000000045bb84 : add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x000000000045ab70 : add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x00000000004c1ff3 : add byte ptr [rdi + rsi], dh ; add byte ptr [rax], al ; call 0x174c1654
0x00000000004c9003 : add byte ptr [rdi], al ; add al, bh ; xor edi, ebp ; call rsp
0x00000000004b5ecf : add byte ptr [rdi], bl ; sub al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4726
0x0000000000434f1a : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000043ec87 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x0000000000435f7f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000435fef : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000004494de : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000462f47 : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000042325f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000466cc0 : add byte ptr [rdi], cl ; mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x00000000004126ff : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042ee5f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000426abf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042d6bf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042695f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042694f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000042693f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000467667 : add byte ptr [rdi], cl ; ret 0x3bba
0x000000000044df18 : add byte ptr [rdi], cl ; ret 0x4389
0x0000000000403673 : add byte ptr [rdi], cl ; ret 0x8d49
0x0000000000449d8a : add byte ptr [rdi], cl ; test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000421054 : add byte ptr [rdi], cl ; test cl, dl ; add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x0000000000460fc9 : add byte ptr [rdi], cl ; test dword ptr [rax - 0x16000006], ebp ; ret 0xffef
0x000000000040f1b9 : add byte ptr [rdi], cl ; test dword ptr [rbx], esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047dfe8 : add byte ptr [rdi], cl ; test dword ptr [rcx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000042096a : add byte ptr [rdi], cl ; test edi, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000040f679 : add byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045e3cb : add byte ptr [rdi], cl ; xchg dword ptr [rbx + rcx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000468119 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000004438f6 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x000000000046808d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x000000000046bfea : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x00000000004bcaf7 : add byte ptr [rdi], dl ; ret 0x4b
0x0000000000426f7e : add byte ptr [rdx + 0x430480], bh ; cmove rax, rdx ; ret
0x000000000043b6ef : add byte ptr [rdx + 0x48028801], cl ; lea eax, [rdx] ; ret
0x0000000000439f3f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000044532f : add byte ptr [rdx + 8], bh ; mov eax, edx ; ret
0x00000000004c6b4b : add byte ptr [rdx + rax*4 - 0x54000000], cl ; cli ; call rdx
0x000000000049c5d6 : add byte ptr [rdx + rbp*2 + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004ae437 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x00000000004c1b5b : add byte ptr [rdx + rsi - 0xa100000], bl ; cmc ; call qword ptr [rdx]
0x00000000004c5b43 : add byte ptr [rdx + rsi*2 + 0x12880000], al ; cli ; jmp rdx
0x0000000000469dd0 : add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x469de5
0x00000000004a4360 : add byte ptr [rdx - 7], bh ; jmp qword ptr [rax]
0x0000000000489335 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000044ff7d : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000410286 : add byte ptr [rip + 0xf48004a], ah ; ret 0x8948
0x000000000042f154 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000458263 : add byte ptr [rsi + 0xf], ah ; ror byte ptr cs:[rdi], 0x8a ; ret 8
0x0000000000426854 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000004416f5 : add byte ptr [rsi + 1], bh ; call rbx
0x00000000004418e2 : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x00000000004417ae : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x0000000000441726 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x0000000000441b60 : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x00000000004418d3 : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x000000000044179f : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x0000000000441717 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x000000000049eb47 : add byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000004c2f1b : add byte ptr [rsi + rax*2], bl ; add byte ptr [rax], ah ; add al, 0xf8 ; call rsp
0x00000000004c16eb : add byte ptr [rsi + rbp], ch ; add byte ptr [rax], al ; mov al, 0xd3 ; cmc ; call rdx
0x00000000004c4773 : add byte ptr [rsi + rbx*2 - 0x22580000], dh ; clc ; call qword ptr [rbx]
0x00000000004c86e3 : add byte ptr [rsi + rbx*4], ah ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; cld ; call qword ptr [rdx]
0x00000000004c86fb : add byte ptr [rsi + rbx*4], bh ; add byte ptr [rax], al ; and byte ptr [rdi], al ; cld ; call qword ptr [rax]
0x00000000004c86cb : add byte ptr [rsi + rbx*4], cl ; add byte ptr [rax], al ; and byte ptr [rdi], al ; cld ; call qword ptr [rax]
0x00000000004c06f3 : add byte ptr [rsi + rbx], dh ; add byte ptr [rax], al ; clc ; push rsi ; cmc ; call qword ptr [rcx]
0x00000000004c9730 : add byte ptr [rsi + rcx + 0x10], bh ; add dword ptr [rdx], 0x69 ; ret
0x00000000004c36f3 : add byte ptr [rsi + rcx*2], dh ; add byte ptr [rax], al ; or byte ptr [rsi], bh ; clc ; call qword ptr [rax]
0x00000000004c770b : add byte ptr [rsi + rcx*4], cl ; add byte ptr [rax + 0x16], ah ; sti ; call qword ptr [rax]
0x00000000004c6733 : add byte ptr [rsi + rdi*2], dh ; add byte ptr [rax], bh ; jl 0x4c673d ; call rax
0x00000000004bc90f : add byte ptr [rsi + rdi*4 + 0x4b], dh ; add byte ptr [rax], al ; ret 0x4bbe
0x00000000004c3f23 : add byte ptr [rsi + rdx*2], ah ; add al, bh ; ret
0x00000000004bfecb : add byte ptr [rsi + rdx], cl ; add byte ptr [rax], al ; loopne 0x4bff09 ; cmc ; call qword ptr [rax]
0x000000000044369d : add byte ptr [rsi - 0x70], ah ; ret
0x00000000004c4efb : add byte ptr [rsi], bh ; add byte ptr [rax], al ; loop 0x4c4f04 ; jmp rax
0x00000000004c7503 : add byte ptr [rsp + rcx*4], al ; add byte ptr [rax], bh ; adc al, 0xfb ; jmp qword ptr [rdx]
0x00000000004bf4c3 : add byte ptr [rsp + rcx], al ; add byte ptr [rax], al ; call 0x134be9d0
0x00000000004c64e3 : add byte ptr [rsp + rdi*2], ah ; add byte ptr [rax], al ; sbb byte ptr [rax - 6], dl ; jmp rsp
0x00000000004c4cc3 : add byte ptr [rsp], al ; add byte ptr [rax], al ; clc ; jge 0x4c4ccc ; call rdx
0x00000000004c8cfb : add byte ptr [rsp], bh ; add byte ptr [rax], al ; sal al, 0xfc ; call qword ptr [rax]
0x00000000004c0d13 : add byte ptr [rsp], dl ; add byte ptr [rax], cl ; push -0xb ; call qword ptr [rsi]
0x000000000045ccb6 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c16ed : add byte ptr cs:[rax], al ; mov al, 0xd3 ; cmc ; call rdx
0x0000000000469757 : add byte ptr es:[rax - 0x77], cl ; jmp 0xffffffffbf0920af
0x0000000000468343 : add byte ptr es:[rax - 0x7d], cl ; ret
0x0000000000469f59 : add byte ptr es:[rbp - 0x7c], al ; ror byte ptr [rax - 0x75], 5 ; ret
0x0000000000468118 : add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x000000000046808c : add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xf748
0x0000000000469dcf : add byte ptr es:[rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x469de6
0x0000000000426608 : add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000443037 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004c4cc5 : add byte ptr fs:[rax], al ; clc ; jge 0x4c4cca ; call rdx
0x0000000000413cd0 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000412433 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000458b7f : add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x00000000004bb93c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004bb93d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x000000000046781b : add ch, byte ptr [rcx] ; ret 0x48d
0x000000000046511a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000045d7e0 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x000000000041b6dd : add ch, cl ; paddd mm7, mm7 ; dec dword ptr [rax - 0x39] ; ret 0xffd0
0x0000000000472908 : add ch, cl ; ret 0xfffd
0x000000000045ac49 : add cl, bl ; in eax, 0xdf ; loopne 0x45abde ; ret 0xe680
0x0000000000439f67 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x000000000045e0de : add cl, byte ptr [rax + 0x29] ; ret
0x00000000004899d4 : add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x00000000004899fd : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000044a313 : add cl, byte ptr [rax + 0x39] ; ret
0x000000000046fcfb : add cl, byte ptr [rax + 0x39] ; ret 0x860f
0x0000000000410f19 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000484295 : add cl, byte ptr [rax + 1] ; ret
0x000000000044d983 : add cl, byte ptr [rax + 1] ; ret 0x394c
0x0000000000439f68 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x0000000000439ed5 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000047c341 : add cl, byte ptr [rax - 0x77] ; pop rsp ; and al, 0x78 ; call r12
0x0000000000416dd2 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000041b8c2 : add cl, byte ptr [rax - 0x7d] ; enter 0x4801, -0x7d ; ret 0x4810
0x000000000046b629 : add cl, byte ptr [rax - 0x7d] ; mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x0000000000479d4c : add cl, byte ptr [rax - 0x7d] ; ret 0x4101
0x00000000004240a0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000448f24 : add cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x0000000000424103 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x0000000000464741 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x00000000004c02c8 : add cl, byte ptr [rbp + 0xa] ; ret
0x000000000048a3c3 : add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000435dc2 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000041c964 : add cl, byte ptr [rcx + 0x548d48d0] ; ret
0x000000000043feff : add cl, byte ptr [rdi] ; ret 0x8348
0x000000000043fe57 : add cl, byte ptr [rdi] ; ret 0xfc3
0x000000000041bd08 : add cl, byte ptr [rdi] ; test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x0000000000463125 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x000000000046e749 : add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x000000000043ea5d : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00000000004c814f : add cl, byte ptr [rdx] ; ret
0x0000000000476a1d : add cl, ch ; mov esi, 0x89fffffe ; ret 0x758b
0x000000000044470f : add cl, ch ; ret
0x0000000000408a08 : add cl, ch ; ret 0xffe2
0x0000000000472834 : add cl, ch ; ret 0xfffd
0x0000000000400d21 : add cl, cl ; ret
0x00000000004c01d0 : add dh, ah ; ret
0x0000000000465972 : add dh, al ; and al, 0x14 ; add al, ch ; ret
0x00000000004b1937 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000435f73 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000044070b : add dh, bl ; ret
0x00000000004c00ce : add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x000000000049eb52 : add dh, byte ptr [rbp + 6] ; mov eax, 8 ; ret
0x0000000000417e0a : add dh, dh ; ret
0x0000000000447945 : add dh, dh ; ret 0x4801
0x0000000000427118 : add dh, dh ; ret 0x7404
0x000000000040126a : add dh, dh ; ret 0x7420
0x000000000043c617 : add dh, dh ; ret 0x7501
0x000000000043c624 : add dh, dh ; ret 0x7502
0x000000000043c631 : add dh, dh ; ret 0x7504
0x000000000043c5e9 : add dh, dh ; ret 0x7510
0x000000000043c5f6 : add dh, dh ; ret 0x7520
0x000000000043c603 : add dh, dh ; ret 0x7540
0x000000000041bd05 : add dh, dh ; ret 0xf02
0x0000000000470d0a : add dh, dh ; ret 0xf08
0x00000000004a3aec : add dl, al ; clc ; jmp qword ptr [rsi]
0x00000000004a3d90 : add dl, cl ; clc ; call rax
0x00000000004bcb47 : add dl, dh ; ret 0x4b
0x00000000004c216c : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x000000000044a656 : add dword ptr [r8 + 0x39], r9d ; ret
0x000000000046285e : add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000462fb2 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x0000000000449cc0 : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000000000043b6f1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x0000000000415a51 : add dword ptr [rax + 0x39], ecx ; ret
0x0000000000474b99 : add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000474bab : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x0000000000479ee0 : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x0000000000459bdd : add dword ptr [rax + 0x39], ecx ; ret 0x8d0f
0x000000000049cf29 : add dword ptr [rax + 0x63], ecx ; ret
0x000000000047c28d : add dword ptr [rax + 1], ecx ; ret
0x000000000040df56 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000049eb42 : add dword ptr [rax + 3], edi ; je 0x49eb59 ; ret
0x00000000004c5476 : add dword ptr [rax + rbp*2], 0xa ; ret
0x00000000004586c6 : add dword ptr [rax - 0x39], ecx ; ret 0xfff0
0x0000000000402c43 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x000000000049b88a : add dword ptr [rax - 0x73], ecx ; push rdi ; add ecx, dword ptr [rax + 0x63] ; ret
0x0000000000439f41 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x0000000000474a3d : add dword ptr [rax - 0x77], ecx ; adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000439ed2 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000415853 : add dword ptr [rax - 0x77], ecx ; or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x00000000004190ce : add dword ptr [rax - 0x77], ecx ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x00000000004159ea : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x00000000004658a1 : add dword ptr [rax - 0x77], ecx ; ret
0x0000000000472077 : add dword ptr [rax - 0x77], ecx ; ret 0x8348
0x000000000041373f : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x000000000047499d : add dword ptr [rax - 0x7d], ecx ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004260c2 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000473c54 : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000046285f : add dword ptr [rax - 0x7d], ecx ; ret 0x4502
0x0000000000450f19 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000041b8c6 : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x0000000000444f0c : add dword ptr [rax - 0x7d], ecx ; ret 0x4830
0x0000000000452f03 : add dword ptr [rax - 0x7d], ecx ; ret 0x4910
0x000000000044761e : add dword ptr [rax - 0x7d], ecx ; ret 0x4d02
0x000000000048a2b4 : add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x000000000047dab3 : add dword ptr [rax - 0x7d], ecx ; ret 0x8008
0x0000000000462fb3 : add dword ptr [rax - 0x7d], ecx ; ret 0x8508
0x00000000004816fa : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x0000000000412576 : add dword ptr [rax], eax ; add al, al ; and cl, byte ptr [rdx] ; pop rbx ; ret
0x00000000004101d6 : add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000044cb66 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000044bcde : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x0000000000473d64 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000047f0d7 : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x0000000000421969 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000041ba7b : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000411df6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044fa75 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000049c2c5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000464d98 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x000000000041ee96 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041efc0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000405e27 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041d047 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x000000000040f67d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000423e8d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044a114 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000425e9e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000042c90f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423de1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044cec2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000464320 : add dword ptr [rax], eax ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000445391 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004b193a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004b0aea : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004b0912 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b090a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004b10a2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000049c43b : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x0000000000401a38 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x00000000004416f7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x000000000046a447 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x46a414
0x000000000049cd2d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000049c9a8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000047a98e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x00000000004418e4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000004417b0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000441728 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000441b6e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x0000000000462c74 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x0000000000462589 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000045c92b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000415e53 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043f2dc : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000444ab7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000041bd0c : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000049c29e : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000400605 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000444ba3 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000467f68 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x38b7cf18], al ; ret
0x0000000000410d32 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x0000000000462f52 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x000000000044678c : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000042069e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x0000000000449d8e : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041da0b : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000041aa91 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000468587 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], 0x94 ; ret
0x0000000000414188 : add dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret 0x8948
0x0000000000447735 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x000000000043c615 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x000000000043c622 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000043c62f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x000000000043c5e7 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000043c5f4 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000043c601 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000400cd0 : add dword ptr [rax], eax ; nop ; leave ; ret
0x0000000000421bd8 : add dword ptr [rax], eax ; ret
0x00000000004264c1 : add dword ptr [rax], edi ; ret
0x000000000043ea97 : add dword ptr [rbp + 0x41], ebx ; pop rsp ; pop r13 ; ret
0x000000000047e792 : add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000048a3a3 : add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004862c7 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret 0x2941
0x0000000000442fa9 : add dword ptr [rbp - 0xc], esi ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000435e32 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000040d98d : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000004c99e1 : add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000004c99de : add dword ptr [rbx], ecx ; fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x000000000046a559 : add dword ptr [rcx + 0x39], ecx ; ret 0x850f
0x000000000044775a : add dword ptr [rcx + 0x39], ecx ; ret 0xe077
0x0000000000447be8 : add dword ptr [rcx + 0x39], ecx ; ret 0xe277
0x000000000041c33a : add dword ptr [rcx - 0x75], ecx ; push rax ; or dh, dh ; ret 0xf04
0x0000000000439f71 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x0000000000462370 : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000044673d : add dword ptr [rcx - 0x7d], ecx ; ret 0x4101
0x000000000040467d : add dword ptr [rcx - 0x7d], ecx ; ret 0x4804
0x0000000000458d7b : add dword ptr [rcx - 0x7f], ecx ; jmp qword ptr [rax]
0x0000000000425eb7 : add dword ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000041c645 : add dword ptr [rcx], eax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x0000000000477a0b : add dword ptr [rcx], ebp ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004c736d : add dword ptr [rdi], 0x48 ; or eax, 0x1370303 ; ret
0x00000000004c72ad : add dword ptr [rdi], 0x48 ; or eax, 0x34b0303 ; ret
0x00000000004c730d : add dword ptr [rdi], 0x48 ; or eax, 0x35b0303 ; ret
0x00000000004c72be : add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004c731e : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x00000000004c737e : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c3025 : add dword ptr [rdi], 3 ; mov bh, 1 ; ret
0x00000000004c814b : add dword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x00000000004c809a : add dword ptr [rdi], 3 ; test byte ptr [rcx], al ; ret
0x000000000043eaf8 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x72e9
0x000000000043eae3 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000000000045c111 : add dword ptr [rdi], ecx ; test bl, dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000418c2e : add dword ptr [rdi], ecx ; test dword ptr [rbx], ecx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041afad : add dword ptr [rdi], ecx ; test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000041da11 : add dword ptr [rdi], ecx ; test edx, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000474db7 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x0000000000475624 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000043e9bd : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000049a350 : add dword ptr [rdx + 0x2b], 0xd9748104 ; ret
0x000000000043e582 : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043617d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000048882b : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000004c01ce : add dword ptr [rdx + rax], -0xc ; ret
0x000000000046dd57 : add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x000000000046e047 : add dword ptr [rdx - 0x77], eax ; je 0x46dfd7 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x000000000046e046 : add dword ptr [rdx - 0x77], eax ; je 0x46dfd8 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x00000000004c143d : add dword ptr [rdx], 0x43 ; ret
0x00000000004c707d : add dword ptr [rdx], 0x48 ; ret
0x00000000004c976c : add dword ptr [rdx], 0x54 ; ret
0x00000000004c6b3c : add dword ptr [rdx], 0x55 ; ret
0x00000000004c7074 : add dword ptr [rdx], 0x5b ; ret
0x00000000004c9714 : add dword ptr [rdx], 0x69 ; ret
0x00000000004c55c4 : add dword ptr [rdx], 2 ; pop rsi ; ret
0x00000000004c539c : add dword ptr [rdx], 2 ; push rsi ; ret
0x00000000004c0a3c : add dword ptr [rdx], 2 ; ret
0x00000000004c02da : add dword ptr [rdx], ecx ; ret
0x0000000000417198 : add dword ptr [rip + 0x2b5405], 1 ; ret
0x00000000004bf73e : add dword ptr [rsi + rcx + 0x10], ecx ; je 0x4bf754 ; ret
0x00000000004bf74c : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000439f52 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004c05de : add dword ptr [rsi], 0xa ; ret
0x00000000004c0650 : add dword ptr [rsi], 2 ; xchg eax, ebp ; ret
0x00000000004c216d : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x00000000004010dd : add dword ptr [rsi], edx ; and eax, 0xf ; mov dword ptr [r8], eax ; pop rbx ; ret
0x00000000004c2b66 : add dword ptr [rsp + rbp*2], 0xa ; ret
0x0000000000497c67 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c8162 : add dword ptr es:[rdx], ecx ; ret
0x000000000041719a : add eax, 0x1002b54 ; ret
0x0000000000427578 : add eax, 0x12ad3 ; ret
0x0000000000424048 : add eax, 0x14853 ; ret
0x00000000004269ea : add eax, 0x15e71 ; ret
0x0000000000426fc4 : add eax, 0x17647 ; ret
0x0000000000421bd5 : add eax, 0x1a966 ; ret
0x00000000004269ce : add eax, 0x1d ; ret
0x000000000044ff7c : add eax, 0x200 ; mov qword ptr fs:[rdx], rax ; ret
0x00000000004c1cb4 : add eax, 0x2300e4a ; ret
0x0000000000488a31 : add eax, 0x2448aa ; ret
0x0000000000476c40 : add eax, 0x256632 ; jne 0x476c89 ; ret
0x000000000047444c : add eax, 0x258997 ; mov qword ptr [rsi], rax ; ret
0x00000000004743eb : add eax, 0x258a00 ; ret
0x000000000047430a : add eax, 0x258ae1 ; add rsp, 8 ; ret
0x000000000044d392 : add eax, 0x27f361 ; ret
0x0000000000446022 : add eax, 0x287321 ; ret
0x0000000000444ad1 : add eax, 0x28885a ; test eax, eax ; je 0x444ae9 ; ret
0x000000000041e529 : add eax, 0x2ae0d6 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000417102 : add eax, 0x2b2fb9 ; ret
0x0000000000417206 : add eax, 0x2b5399 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040191b : add eax, 0x2c8770 ; xor eax, eax ; ret
0x0000000000400706 : add eax, 0x2ca9a5 ; pop rbp ; pop r12 ; ret
0x0000000000400965 : add eax, 0x2cb1f5 ; add ebx, esi ; ret
0x00000000004c216b : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x0000000000400d1c : add eax, 0x4290ee8 ; add cl, cl ; ret
0x000000000043b788 : add eax, 0x48054289 ; lea eax, [rdx + 8] ; ret
0x0000000000439fb8 : add eax, 0x48054289 ; mov eax, edi ; ret
0x000000000043bc86 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00000000004bcb50 : add eax, 0x4bc3 ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x000000000043b809 : add eax, 0x5428948 ; lea rax, [rdx + 0xc] ; ret
0x0000000000439ff9 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x000000000047ad96 : add eax, 0x5b000000 ; ret
0x00000000004b24dd : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x00000000004194c5 : add eax, 0x5c415d5b ; ret
0x00000000004bee85 : add eax, 0x62180000 ; hlt ; call qword ptr [rax]
0x0000000000427694 : add eax, 0x67 ; ret
0x00000000004a42c1 : add eax, 0x750fff9 ; stc ; call rax
0x000000000048a423 : add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000043e9b7 : add eax, 0x8307e083 ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x0000000000423a7d : add eax, 0x83480000 ; ret 0x4910
0x000000000042af01 : add eax, 0x83480000 ; ret 0xe910
0x00000000004239d1 : add eax, 0x83480000 ; ret 0xeb10
0x0000000000456a7d : add eax, 0x83480001 ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000043b78b : add eax, 0x8428d48 ; ret
0x00000000004269e2 : add eax, 0x8449 ; ret
0x0000000000485b0a : add eax, 0x89000001 ; ret 0x348
0x000000000044a30d : add eax, 0x8d480000 ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000044a66e : add eax, 0x8d490000 ; add r9b, byte ptr [r8 + 0x39] ; ret
0x000000000044a68b : add eax, 0x8d490000 ; add r9d, dword ptr [r8 + 0x39] ; ret
0x000000000042fe8a : add eax, 0xc0310000 ; ret
0x000000000043b80d : add eax, 0xc428d48 ; ret
0x000000000043c2ed : add eax, 0xc478d48 ; ret
0x0000000000441b92 : add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x0000000000441bb7 : add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x0000000000441d00 : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x0000000000441d99 : add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x000000000041aa87 : add eax, 0xf6410000 ; ret 0xf01
0x0000000000435e23 : add eax, 0xf7f0ff3 ; ret
0x0000000000473c4f : add eax, 0xfffffbd8 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x0000000000478d7a : add eax, 0xfffffff8 ; ret
0x000000000043ea95 : add eax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000466b11 : add eax, 1 ; ret
0x0000000000445375 : add eax, 2 ; push rax ; call rbx
0x0000000000466b08 : add eax, 2 ; ret
0x0000000000421e28 : add eax, 3 ; ret
0x00000000004276e7 : add eax, 4 ; ret
0x000000000044fed9 : add eax, dword ptr [0] ; ret
0x0000000000471118 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000419663 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000041812b : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000047166e : add eax, dword ptr [rax] ; add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x000000000044e598 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000470053 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000423c1d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b0a1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423c41 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000445fc6 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000049eb44 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x49eb57 ; ret
0x00000000004408fc : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x00000000004420dd : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000442134 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000004421b4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000004422b4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000421e29 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000476d13 : add eax, dword ptr [rax] ; add byte ptr [rax], cl ; je 0x476d84 ; pop rbx ; ret
0x000000000043eaf3 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0x72e9
0x000000000047e89c : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x3c8b48d8], cl ; ret 0x87f6
0x0000000000443195 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000418c32 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000470d08 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x0000000000400bf3 : add eax, dword ptr [rax] ; mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; leave ; ret
0x0000000000445cb1 : add eax, dword ptr [rax] ; mov rdi, r12 ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000445c0b : add eax, dword ptr [rax] ; mov rdi, r14 ; call r15
0x00000000004455ba : add eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x0000000000400a7a : add eax, dword ptr [rax] ; nop ; pop rbp ; ret
0x0000000000400abd : add eax, dword ptr [rax] ; pop rbp ; ret
0x000000000043ed10 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043ed30 : add eax, dword ptr [rax] ; ret
0x00000000004c6513 : add eax, dword ptr [rbx + 0xaf10204] ; ret
0x00000000004c02c2 : add eax, dword ptr [rbx + 0xe] ; and byte ptr [rbx + 0xa4d0204], al ; ret
0x000000000047eec1 : add eax, dword ptr [rbx] ; call rax
0x00000000004c72c1 : add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x0000000000411ba4 : add eax, dword ptr [rcx + 0x39] ; fadd dword ptr [rdi + rcx + 0x47] ; ret
0x000000000047d14d : add eax, dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x00000000004c821b : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0x1890304], al ; ret
0x00000000004bfcea : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa470204], al ; ret
0x000000000046b34a : add eax, dword ptr [rcx + rdx] ; ret
0x0000000000471f25 : add eax, dword ptr [rdi] ; call rax
0x0000000000478b24 : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000476279 : add eax, dword ptr [rdx + 8] ; call rax
0x00000000004c7321 : add eax, dword ptr [rdx] ; cld ; ret
0x00000000004c7381 : add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004bfa3a : add eax, dword ptr [rsi + 0x180e6e02] ; ret
0x00000000004c4b4a : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004c01ca : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], -0xc ; ret
0x00000000004c2b62 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rsp + rbp*2], 0xa ; ret
0x0000000000471a8b : add eax, dword ptr [rsp] ; call rax
0x000000000043edd8 : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000049a3be : add eax, eax ; jmp r8
0x000000000049b8e6 : add eax, eax ; jmp rax
0x000000000045a878 : add eax, eax ; ret
0x0000000000426606 : add eax, ebp ; add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000405986 : add eax, ebp ; hlt ; out 1, eax ; add byte ptr [rax + 0x29], cl ; ret
0x000000000049b58e : add eax, ebp ; jmp rax
0x0000000000416e73 : add eax, ecx ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000042670a : add eax, ecx ; ret
0x0000000000426707 : add eax, edi ; add rax, rcx ; ret
0x0000000000426944 : add eax, edi ; ret
0x0000000000424316 : add eax, edx ; sub rax, rdi ; ret
0x000000000049be6e : add eax, esi ; jmp rax
0x0000000000467687 : add eax, esi ; ret
0x000000000045a877 : add eax, r8d ; ret
0x0000000000457db8 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047bb8d : add ebp, dword ptr [rcx] ; ret 0x48d
0x000000000047c13d : add ebp, eax ; mov qword ptr [rsp + 0x78], rbp ; call r12
0x0000000000471a87 : add ebx, 0x18 ; add rax, qword ptr [r12] ; call rax
0x0000000000488a6a : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004c7312 : add ebx, dword ptr [rbx + 3] ; ret
0x0000000000471723 : add ebx, dword ptr [rbx - 0xd] ; ret
0x00000000004c02d8 : add ebx, dword ptr [rdi] ; add dword ptr [rdx], ecx ; ret
0x0000000000478e11 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000048588a : add ebx, ebp ; ret 0x8d48
0x0000000000435fe3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000040096a : add ebx, esi ; ret
0x00000000004270a4 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x427099 ; ret
0x0000000000439fa5 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x0000000000418a99 : add ecx, dword ptr [rax + 0x29] ; ret
0x000000000044a32f : add ecx, dword ptr [rax + 0x39] ; ret
0x0000000000464747 : add ecx, dword ptr [rax + 0x39] ; ret 0xf48
0x000000000046df89 : add ecx, dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8348
0x000000000049b88e : add ecx, dword ptr [rax + 0x63] ; ret
0x0000000000439fa9 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000047e108 : add ecx, dword ptr [rax - 0x77] ; ret 0x8948
0x000000000041dd3e : add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x0000000000419588 : add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x0000000000447b55 : add ecx, dword ptr [rax - 0x7d] ; mov byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000040e3ed : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040e4c7 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000412327 : add ecx, dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000048a3e3 : add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000435d52 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004c72b2 : add ecx, dword ptr [rbx + 3] ; ret
0x000000000043bc24 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000047e75f : add ecx, dword ptr [rcx + rcx*4 - 0x16] ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000439fa6 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x000000000046dfbb : add ecx, dword ptr [rcx - 0x7bf0cf8d] ; ret 2
0x00000000004c2522 : add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000004c59a8 : add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000046bb8d : add ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x000000000040f49c : add ecx, ebp ; ret
0x00000000004304ae : add ecx, ebx ; jmp r9
0x000000000042ee52 : add ecx, ebx ; jmp rcx
0x00000000004a42b5 : add ecx, edi ; call rax
0x000000000049a5e6 : add ecx, esi ; jmp rcx
0x000000000049f11f : add edi, dword ptr [rbp + 0x10] ; call r12
0x00000000004304ab : add edi, edx ; add r9, r11 ; jmp r9
0x00000000004c58e1 : add edi, edx ; jmp rdx
0x00000000004be811 : add edi, esi ; call rax
0x00000000004be80d : add edi, esi ; ljmp [rax] ; add edi, esi ; call rax
0x0000000000472a6c : add edx, dword ptr [rax] ; mov rax, rdx ; call rax
0x00000000004c990b : add edx, dword ptr [rcx + rax + 0x41380e0a] ; ret
0x0000000000476735 : add edx, eax ; jmp 0x47674a
0x00000000004799a2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x0000000000452e13 : add edx, ebp ; call qword ptr [r10 + rax*8]
0x0000000000444bc0 : add edx, ebx ; loopne 0x444c24 ; pop rbp ; ret
0x00000000004bfbaa : add esi, dword ptr [rbx + 0x47380e01] ; ret
0x00000000004c2c5a : add esi, dword ptr [rsi + 0x44380e04] ; ret
0x000000000044dd87 : add esi, dword ptr [rsi + rax + 0x5b] ; ret
0x00000000004c99e2 : add esi, ebp ; add al, byte ptr [rax] ; ret
0x0000000000435f03 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000043fc4c : add esi, ebx ; ret
0x00000000004bee49 : add esi, edi ; call rdi
0x000000000043edc0 : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x00000000004304a8 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000463678 : add esi, esi ; ret 0x7420
0x0000000000487fc7 : add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000410611 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043ef19 : add esp, 0x10 ; pop rbx ; ret
0x0000000000420d77 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043ef01 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000473992 : add esp, 0x140 ; mov eax, ebx ; pop rbx ; ret
0x0000000000473974 : add esp, 0x140 ; pop rbx ; ret
0x000000000044074d : add esp, 0x18 ; mov eax, edx ; ret
0x00000000004175f1 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000411497 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043fc20 : add esp, 0x18 ; ret
0x0000000000444ba0 : add esp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x0000000000452693 : add esp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x000000000048839c : add esp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x00000000004460e1 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004158ff : add esp, 0x20 ; pop rbx ; ret
0x000000000047b429 : add esp, 0x28 ; movzx eax, al ; neg eax ; ret
0x000000000040df28 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041515e : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004882f1 : add esp, 0x28 ; ret
0x000000000046b192 : add esp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000478a09 : add esp, 0x30 ; pop rbx ; ret
0x000000000043f5e0 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000043f3a3 : add esp, 0x38 ; ret
0x000000000047891c : add esp, 0x48 ; jmp qword ptr [rax]
0x000000000046b102 : add esp, 0x48 ; movzx eax, al ; ret
0x0000000000478b28 : add esp, 0x48 ; ret
0x00000000004788aa : add esp, 0x50 ; jmp qword ptr [rax]
0x0000000000488444 : add esp, 0x50 ; mov rax, rbx ; pop rbx ; ret
0x0000000000466ccc : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043fed0 : add esp, 0x60 ; pop rbx ; ret
0x00000000004004ca : add esp, 0x608 ; pop rbx ; pop rbp ; ret
0x0000000000478c12 : add esp, 0x68 ; ret
0x0000000000442fad : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000410131 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x000000000046ae2b : add esp, 0x80 ; pop rbx ; ret
0x0000000000414d17 : add esp, 0x80 ; ret
0x0000000000420836 : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x000000000046af29 : add esp, 0x90 ; pop rbx ; ret
0x000000000046af47 : add esp, 0x90 ; xor eax, eax ; pop rbx ; ret
0x000000000041385d : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000040151f : add esp, 0x98 ; ret
0x0000000000450239 : add esp, 0xd0 ; ret
0x000000000040fca8 : add esp, 0xd8 ; ret
0x00000000004787e5 : add esp, 8 ; jmp rax
0x0000000000411843 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041049c : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004406aa : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000418198 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000040ef70 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000041fd13 : add esp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000488327 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000041e69e : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000405d71 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401bf3 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004134a8 : add esp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00000000004002de : add esp, 8 ; ret
0x0000000000424169 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000474261 : add esp, 8 ; xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004c6ee2 : add esp, dword ptr [rdx + 0x380e0a01] ; ret
0x00000000004c8161 : add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x000000000044761d : add qword ptr [rax - 0x7d], r9 ; ret 0x4d02
0x000000000042404a : add qword ptr [rax], rax ; ret
0x000000000041c644 : add qword ptr [rcx], rax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x00000000004c814a : add qword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x0000000000426f8c : add r11b, sil ; ret
0x0000000000435fe2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435f72 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435f02 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000045fbfd : add r15b, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000496090 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049a3bd : add r8, rax ; jmp r8
0x000000000045575d : add r8b, bpl ; in al, dx ; ret
0x0000000000475336 : add r8b, bpl ; ret
0x000000000048ee87 : add r8b, bpl ; ret 0xf72c
0x000000000048bf87 : add r8b, bpl ; ret 0xf75b
0x00000000004304ad : add r9, r11 ; jmp r9
0x000000000044a673 : add r9b, byte ptr [r8 + 0x39] ; ret
0x000000000044a690 : add r9d, dword ptr [r8 + 0x39] ; ret
0x0000000000497842 : add rax, -0x7cb80000 ; ret 0xe910
0x0000000000478d79 : add rax, -8 ; ret
0x000000000043ea94 : add rax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000466b10 : add rax, 1 ; ret
0x0000000000466b07 : add rax, 2 ; ret
0x0000000000466b20 : add rax, 3 ; ret
0x000000000044fed8 : add rax, qword ptr [0] ; ret
0x0000000000471a8a : add rax, qword ptr [r12] ; call rax
0x0000000000471f24 : add rax, qword ptr [r15] ; call rax
0x000000000047eec0 : add rax, qword ptr [rbx] ; call rax
0x0000000000478b23 : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000476278 : add rax, qword ptr [rdx + 8] ; call rax
0x000000000044fed7 : add rax, qword ptr fs:[0] ; ret
0x000000000049be6d : add rax, r14 ; jmp rax
0x000000000049b8e5 : add rax, r8 ; jmp rax
0x000000000049b58d : add rax, rbp ; jmp rax
0x0000000000426709 : add rax, rcx ; ret
0x0000000000426706 : add rax, rdi ; add rax, rcx ; ret
0x0000000000426943 : add rax, rdi ; ret
0x0000000000424315 : add rax, rdx ; sub rax, rdi ; ret
0x000000000047c13c : add rbp, rax ; mov qword ptr [rsp + 0x78], rbp ; call r12
0x0000000000471a86 : add rbx, 0x18 ; add rax, qword ptr [r12] ; call rax
0x000000000042ee51 : add rcx, r11 ; jmp rcx
0x000000000049a5e5 : add rcx, r14 ; jmp rcx
0x000000000049f11e : add rdi, qword ptr [r13 + 0x10] ; call r12
0x00000000004304aa : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000472a6b : add rdx, qword ptr [rax] ; mov rax, rdx ; call rax
0x0000000000452e12 : add rdx, r13 ; call qword ptr [r10 + rax*8]
0x00000000004799a1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000476734 : add rdx, rax ; jmp 0x47674b
0x0000000000487fc6 : add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000410610 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043ef18 : add rsp, 0x10 ; pop rbx ; ret
0x000000000043ef00 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000473973 : add rsp, 0x140 ; pop rbx ; ret
0x000000000044074c : add rsp, 0x18 ; mov eax, edx ; ret
0x0000000000411496 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043fc1f : add rsp, 0x18 ; ret
0x0000000000444b9f : add rsp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x0000000000452692 : add rsp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x000000000048839b : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x00000000004460e0 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004158fe : add rsp, 0x20 ; pop rbx ; ret
0x000000000047b428 : add rsp, 0x28 ; movzx eax, al ; neg eax ; ret
0x000000000041515d : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004882f0 : add rsp, 0x28 ; ret
0x000000000046b191 : add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000478a08 : add rsp, 0x30 ; pop rbx ; ret
0x000000000043f5df : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000043f3a2 : add rsp, 0x38 ; ret
0x000000000047891b : add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046b101 : add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000478b27 : add rsp, 0x48 ; ret
0x00000000004788a9 : add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000488443 : add rsp, 0x50 ; mov rax, rbx ; pop rbx ; ret
0x0000000000466ccb : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043fecf : add rsp, 0x60 ; pop rbx ; ret
0x00000000004004c9 : add rsp, 0x608 ; pop rbx ; pop rbp ; ret
0x0000000000478c11 : add rsp, 0x68 ; ret
0x0000000000442fac : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000046ae2a : add rsp, 0x80 ; pop rbx ; ret
0x0000000000414d16 : add rsp, 0x80 ; ret
0x000000000046af28 : add rsp, 0x90 ; pop rbx ; ret
0x000000000041385c : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000040151e : add rsp, 0x98 ; ret
0x0000000000450238 : add rsp, 0xd0 ; ret
0x000000000040fca7 : add rsp, 0xd8 ; ret
0x00000000004787e4 : add rsp, 8 ; jmp rax
0x0000000000411842 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041049b : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004406a9 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000418197 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000040ef6f : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000041fd12 : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000488326 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000041e69d : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000401bf2 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004134a7 : add rsp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00000000004002dd : add rsp, 8 ; ret
0x0000000000424168 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000042cb7e : add sil, sil ; ret 0x7404
0x000000000048882a : add word ptr [rdx + rax*2], 1 ; ret
0x00000000004a3c64 : and ah, ch ; clc ; jmp qword ptr [rax]
0x00000000004c0d15 : and al, 0 ; add byte ptr [rax], cl ; push -0xb ; call qword ptr [rsi]
0x0000000000488828 : and al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000488a34 : and al, 0 ; ret
0x000000000043fefd : and al, 0x10 ; add cl, byte ptr [rdi] ; ret 0x8348
0x000000000049c7e8 : and al, 0x10 ; add rsp, 0x28 ; ret
0x00000000004479c3 : and al, 0x10 ; call r12
0x000000000041bebd : and al, 0x10 ; call rax
0x0000000000465329 : and al, 0x10 ; call rbx
0x0000000000400fc5 : and al, 0x10 ; mov edi, dword ptr [rsp + 0xc] ; call r12
0x0000000000440e91 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000447cb7 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000044861a : and al, 0x10 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x00000000004882eb : and al, 0x10 ; mov rax, rdx ; add rsp, 0x28 ; ret
0x000000000049ce95 : and al, 0x10 ; mov rsi, qword ptr [r15] ; call r14
0x0000000000450e36 : and al, 0x10 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000465975 : and al, 0x14 ; add al, ch ; ret
0x00000000004194f6 : and al, 0x14 ; pop r12 ; ret
0x000000000041e69b : and al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000044c20c : and al, 0x18 ; call r14
0x0000000000401022 : and al, 0x18 ; call rax
0x0000000000465324 : and al, 0x18 ; lea r9, [rsp + 0x10] ; call rbx
0x000000000041beb8 : and al, 0x18 ; mov qword ptr [rsp + 0x10], r10 ; call rax
0x00000000004452e8 : and al, 0x18 ; mov r9, r14 ; call rbx
0x0000000000448a00 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000047b4f0 : and al, 0x18 ; mov rax, rdx ; add rsp, 0x38 ; ret
0x00000000004479be : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x10] ; call r12
0x0000000000465402 : and al, 0x18 ; mov rdi, r12 ; call rbx
0x00000000004194c2 : and al, 0x1c ; je 0x4194d3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004194c1 : and al, 0x1c ; je 0x4194d4 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000447cbc : and al, 0x20 ; call rax
0x0000000000466e87 : and al, 0x20 ; lea rsi, [rsp + 0x40] ; call rbx
0x0000000000451453 : and al, 0x20 ; mov rdi, r12 ; call r15
0x00000000004b9a84 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000478a90 : and al, 0x28 ; add byte ptr [rbp + 0xb], dh ; add rsp, 0x38 ; ret
0x0000000000489edb : and al, 0x28 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000448137 : and al, 0x28 ; call r12
0x0000000000448e62 : and al, 0x28 ; call r14
0x00000000004477c4 : and al, 0x28 ; call r15
0x000000000044861f : and al, 0x28 ; call rax
0x00000000004481eb : and al, 0x28 ; call rbx
0x00000000004671a2 : and al, 0x28 ; lea rsi, [rsp + 0x30] ; call rbx
0x0000000000466f2f : and al, 0x28 ; lea rsi, [rsp + 0x40] ; call rbx
0x000000000041f3b3 : and al, 0x28 ; mov rdi, rbp ; call rax
0x000000000048ff6f : and al, 0x30 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000044ba4c : and al, 0x30 ; call r14
0x000000000047393f : and al, 0x30 ; call r9
0x000000000044a06a : and al, 0x30 ; call rbx
0x000000000048840f : and al, 0x30 ; je 0x488423 ; mov edi, 0x6cb140 ; call rax
0x000000000040e489 : and al, 0x30 ; lea r15, [rbx + r14] ; call rax
0x0000000000466d6d : and al, 0x30 ; lea rcx, [rax + 1] ; call rbx
0x000000000044a4aa : and al, 0x30 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000447861 : and al, 0x30 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x00000000004481e6 : and al, 0x30 ; mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x000000000048257f : and al, 0x31 ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000048d112 : and al, 0x38 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000478c3e : and al, 0x38 ; add rsp, 0x68 ; ret
0x000000000047393a : and al, 0x38 ; mov r9, qword ptr [rsp + 0x30] ; call r9
0x000000000044a065 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000478919 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x00000000004788a7 : and al, 0x40 ; add rsp, 0x50 ; jmp qword ptr [rax]
0x00000000004493ea : and al, 0x40 ; call r15
0x0000000000466e8c : and al, 0x40 ; call rbx
0x0000000000449791 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000044074b : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x000000000043fc1e : and al, 0x48 ; add esp, 0x18 ; ret
0x000000000041e9c3 : and al, 0x48 ; call rax
0x000000000046fda4 : and al, 0x48 ; lea edi, [rax + 0x6cb1e0] ; call rdx
0x0000000000448132 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r12
0x00000000004477bf : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x00000000004493e5 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000467592 : and al, 0x48 ; mov rdi, r12 ; call rbx
0x000000000049e31c : and al, 0x49 ; mov esi, dword ptr [rdi + rbp*8 + 0x10] ; call rbx
0x00000000004657b5 : and al, 0x4a ; add al, ch ; xchg eax, ebx ; ret
0x000000000043fda8 : and al, 0x4f ; add byte ptr [rax], al ; ret
0x000000000044c207 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x000000000041d1dd : and al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004194f1 : and al, 0x5d ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x00000000004670a0 : and al, 0x60 ; lea rsi, [rsp + 0x30] ; call rbx
0x000000000041eccb : and al, 0x68 ; call rax
0x000000000041ffab : and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x0000000000411ece : and al, 0x74 ; ret 0x8b4c
0x0000000000472fda : and al, 0x75 ; ret
0x000000000047bcae : and al, 0x78 ; call r12
0x000000000047c17d : and al, 0x78 ; lea rdi, [rsp + 0x78] ; call r12
0x0000000000448e5d : and al, 0x78 ; mov rdi, qword ptr [rsp + 0x28] ; call r14
0x000000000044ba47 : and al, 0x78 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x00000000004c64e4 : and al, 0x7c ; add byte ptr [rax], al ; sbb byte ptr [rax - 6], dl ; jmp rsp
0x000000000048bacf : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047c954 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x0000000000447941 : and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000041c6c6 : and al, 0x89 ; ret 0xb48b
0x000000000041c642 : and al, 0x8d ; add qword ptr [rcx], rax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x00000000004c86e4 : and al, 0x9e ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; cld ; call qword ptr [rdx]
0x000000000043fe55 : and al, 0xa8 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x000000000049c37b : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000478abf : and al, 0xc ; add rsp, 0x38 ; ret
0x0000000000400fc9 : and al, 0xc ; call r12
0x000000000040101d : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000047bf2a : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000408c1b : and al, 0xe8 ; call rbx
0x0000000000409d74 : and al, 0xe8 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x0000000000409d8a : and al, 0xe8 ; nop ; ret 0xffff
0x0000000000409d2b : and al, 0xe8 ; out dx, eax ; ret 0xffff
0x0000000000409dac : and al, 0xe8 ; outsb dx, byte ptr [rsi] ; ret 0xffff
0x0000000000409dc2 : and al, 0xe8 ; pop rax ; ret 0xffff
0x0000000000409ccc : and al, 0xe8 ; ret
0x0000000000409dd3 : and al, 0xe8 ; ret 0xffff
0x000000000040b4cb : and al, 0xe8 ; sysenter
0x0000000000409c83 : and al, 0xe8 ; xchg eax, edi ; ret
0x0000000000491d58 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x000000000049d275 : and al, 0xf ; ret 0x8348
0x000000000041cb67 : and al, 0xf ; xchg eax, ebp ; ret 0x8348
0x000000000042cc86 : and al, 0xf8 ; jne 0x42cb62 ; ret
0x0000000000491d11 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000491d17 : and al, 0xf8 ; ret
0x0000000000491ccb : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000491cd1 : and al, 0xfc ; ret
0x000000000044ffa7 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x000000000044ffab : and al, 0xfe ; ret
0x000000000046a446 : and al, 1 ; add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x00000000004503bc : and al, 6 ; mov rbx, rax ; mov rdi, r12 ; call r15
0x000000000043ef16 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000047afa2 : and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000440da8 : and al, 8 ; call rbx
0x0000000000488369 : and al, 8 ; je 0x48837d ; mov edi, 0x6cb140 ; call rax
0x000000000043ff61 : and al, 8 ; jmp 0x43fed8
0x0000000000478650 : and al, 8 ; mov edi, 0x6cb140 ; call rax
0x000000000041bf74 : and al, 8 ; mov qword ptr [rsp], rcx ; call rdx
0x000000000040e646 : and al, 8 ; mov rsi, r15 ; mov rdi, r13 ; call r14
0x00000000004a3ae4 : and al, al ; clc ; call qword ptr [rax]
0x00000000004a0d48 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000411536 : and al, byte ptr [rax] ; add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x000000000049f0b3 : and al, byte ptr [rax] ; jne 0x49f09d ; pop rbx ; ret
0x000000000049e474 : and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x000000000042411a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x0000000000476c42 : and ax, 0x4000 ; jne 0x476c87 ; ret
0x000000000045d7de : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004a3e15 : and bh, cl ; call qword ptr [rsi + 0x26fff921]
0x00000000004bcb58 : and bl, al ; add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x000000000040dfcf : and bl, dh ; ret
0x00000000004678be : and byte ptr [r11 + 0x5d], r11b ; pop r12 ; pop r13 ; ret
0x0000000000415524 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x000000000049ed14 : and byte ptr [rax + 0x39], cl ; ret
0x000000000041a7c9 : and byte ptr [rax + 0x39], cl ; ret 0x820f
0x0000000000452c6e : and byte ptr [rax + 1], cl ; ret
0x00000000004c2f20 : and byte ptr [rax + rdi*8], al ; call rsp
0x0000000000466e88 : and byte ptr [rax - 0x73], cl ; je 0x466eb7 ; call rbx
0x000000000041c3d3 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x000000000040f123 : and byte ptr [rax - 0x77], cl ; ret
0x0000000000469dd4 : and byte ptr [rax - 0x77], cl ; ret 0x4eb
0x0000000000446714 : and byte ptr [rax - 0x77], cl ; ret 0xee75
0x000000000044f8b4 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x44f8c8 ; call rax
0x000000000049d4eb : and byte ptr [rax - 0x7b], cl ; ret 0x840f
0x00000000004465ae : and byte ptr [rax - 0x7d], cl ; ret
0x0000000000412d22 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000043eda3 : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004a41d8 : and byte ptr [rax], bl ; stc ; call qword ptr [rax + 0x10fff917]
0x00000000004be1f4 : and byte ptr [rbp + rdi*8 - 0x2725f01], cl ; jmp qword ptr [rax]
0x00000000004be20c : and byte ptr [rbp - 0x695f0003], dl ; std ; jmp qword ptr [rax]
0x00000000004c821e : and byte ptr [rbx + 0x1890304], al ; ret
0x0000000000405f78 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004678bf : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004460e3 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004bfced : and byte ptr [rbx + 0xa470204], al ; ret
0x00000000004c02c5 : and byte ptr [rbx + 0xa4d0204], al ; ret
0x000000000046093e : and byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x00000000004559a0 : and byte ptr [rbx - 0x4ef43], al ; call qword ptr [rax]
0x00000000004632c9 : and byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000413024 : and byte ptr [rbx], 0x4a ; add byte ptr [rax + 0xf], cl ; ret 0x294d
0x0000000000412d78 : and byte ptr [rbx], 0x4a ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004a42f8 : and byte ptr [rbx], bh ; stc ; jmp qword ptr [rax]
0x00000000004c31b0 : and byte ptr [rbx], bl ; clc ; call qword ptr [rax]
0x00000000004a42d8 : and byte ptr [rbx], ch ; stc ; jmp qword ptr [rax]
0x00000000004a42e8 : and byte ptr [rbx], dh ; stc ; jmp qword ptr [rax]
0x0000000000415525 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x00000000004c4a7e : and byte ptr [rcx + 0xa], al ; ret
0x0000000000451454 : and byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x0000000000452695 : and byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x0000000000491d55 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00000000004be1ec : and byte ptr [rcx - 0x755f0003], cl ; std ; jmp qword ptr [rax]
0x000000000044669c : and byte ptr [rcx - 0x77], cl ; ret 0xee75
0x00000000004a4304 : and byte ptr [rcx - 7], al ; jmp qword ptr [rax]
0x00000000004a42f4 : and byte ptr [rcx], bh ; stc ; jmp qword ptr [rax]
0x00000000004a42d4 : and byte ptr [rcx], ch ; stc ; jmp qword ptr [rax]
0x00000000004a42e4 : and byte ptr [rcx], dh ; stc ; jmp qword ptr [rax]
0x00000000004a3acc : and byte ptr [rdi - 0x40a00008], bl ; clc ; push qword ptr [rax] ; ret 0xfff8
0x00000000004be1fc : and byte ptr [rdi - 0x6f5f0003], cl ; std ; jmp qword ptr [rax]
0x00000000004bfd30 : and byte ptr [rdi], 0xf5 ; jmp qword ptr [rsi]
0x00000000004a42d0 : and byte ptr [rdi], ah ; stc ; jmp qword ptr [rax]
0x00000000004c86a0 : and byte ptr [rdi], al ; cld ; call qword ptr [rax]
0x00000000004a4300 : and byte ptr [rdi], bh ; stc ; jmp qword ptr [rax]
0x00000000004a42e0 : and byte ptr [rdi], ch ; stc ; jmp qword ptr [rax]
0x0000000000446689 : and byte ptr [rdi], cl ; test cl, bh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043c5f0 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000004a42f0 : and byte ptr [rdi], dh ; stc ; jmp qword ptr [rax]
0x00000000004be204 : and byte ptr [rdx - 0x6c5f0003], dl ; std ; jmp qword ptr [rax]
0x00000000004a42dc : and byte ptr [rip + 0x2f20fff9], ch ; stc ; jmp qword ptr [rax]
0x00000000004a42ec : and byte ptr [rip + 0x3720fff9], dh ; stc ; jmp qword ptr [rax]
0x00000000004a42fc : and byte ptr [rip + 0x3f20fff9], bh ; stc ; jmp qword ptr [rax]
0x000000000042eeea : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004c4b4d : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004be1e4 : and byte ptr [rsi - 0x785f0003], al ; std ; jmp qword ptr [rax]
0x0000000000419a0c : and byte ptr [rsi - 1], al ; dec dword ptr [rax - 0x7d] ; ret 0x4007
0x0000000000466b02 : and ch, 0xf ; je 0x466b29 ; add rax, 2 ; ret
0x0000000000466aed : and cl, 0xf ; je 0x466b15 ; ret
0x00000000004a3fe5 : and cl, bh ; call qword ptr [rax + 0x20fff91f]
0x00000000004a3e25 : and cl, bh ; call rsi
0x00000000004a3e21 : and cl, bh ; inc dword ptr [rsi + 0x20] ; stc ; call rsi
0x000000000041cebe : and cl, bpl ; ret 0xfff9
0x000000000047ee03 : and cl, byte ptr [rax + 0x29] ; fmul dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000426acd : and cl, byte ptr [rcx - 0x77] ; ret
0x000000000041257a : and cl, byte ptr [rdx] ; pop rbx ; ret
0x000000000041cebf : and cl, ch ; ret 0xfff9
0x00000000004a3e24 : and cl, r15b ; call rsi
0x00000000004a3c68 : and dh, ch ; clc ; jmp qword ptr [rax]
0x00000000004270b7 : and dh, dh ; ret 0x7504
0x000000000045d7dd : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004a3c90 : and dl, 0xf8 ; inc dword ptr [rax - 0x1c] ; clc ; jmp qword ptr [rax]
0x00000000004a40c8 : and dl, byte ptr [rdx] ; stc ; call qword ptr [rdx + 0x22fff911]
0x0000000000457c19 : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004bb5a2 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x000000000041648c : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000048f11c : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9e74
0x00000000004b8659 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000468c6b : and dword ptr [rsi], edi ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004bb5a1 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000044fedb : and eax, 0 ; ret
0x000000000049d00a : and eax, 0x10468b48 ; add rsp, 8 ; ret
0x000000000047cd46 : and eax, 0x2d0 ; ret
0x000000000040ee01 : and eax, 0x30 ; call rax
0x000000000040edb9 : and eax, 0x30 ; call rdx
0x0000000000476c43 : and eax, 0x38754000 ; ret
0x000000000043ed0d : and eax, 0x3fc00 ; pop rbx ; ret
0x000000000043ed2d : and eax, 0x3fc00 ; ret
0x000000000043ecec : and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000004715c0 : and eax, 0x48c03100 ; add esp, 8 ; ret
0x000000000047444f : and eax, 0x6894800 ; ret
0x00000000004c0dfd : and eax, 0x6b300000 ; cmc ; call qword ptr [rdx]
0x000000000043ed60 : and eax, 0x7ff80000 ; ret
0x0000000000474d33 : and eax, 0x89485300 ; ret
0x0000000000474b93 : and eax, 0x8d48fffb ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000041b7c6 : and eax, 0x950f4100 ; ret
0x0000000000443217 : and eax, 0xc ; cmp eax, 4 ; je 0x443228 ; ret
0x00000000004010df : and eax, 0xf ; mov dword ptr [r8], eax ; pop rbx ; ret
0x0000000000410287 : and eax, 0xf48004a ; ret 0x8948
0x0000000000444cd6 : and eax, 0xffffffd0 ; or rax, 0xffffffffffffffff ; ret
0x0000000000478e0c : and eax, 2 ; sub eax, 1 ; ret
0x00000000004c0bc5 : and eax, dword ptr [rax] ; add byte ptr [rax], ch ; cmc ; jmp qword ptr [rax]
0x000000000041648d : and ebp, edi ; pop rbx ; ret
0x00000000004431b2 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x4431c5 ; ret
0x0000000000430465 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000042fb98 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000041a84b : and ecx, dword ptr [rax + 0x39] ; ret
0x000000000042066c : and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000041723c : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x00000000004a3e99 : and ecx, edi ; call qword ptr [rdx]
0x00000000004a3ddd : and ecx, edi ; call rax
0x00000000004a3dd9 : and ecx, edi ; inc dword ptr [rax + 0x21] ; stc ; call rax
0x00000000004a3e19 : and ecx, edi ; jmp qword ptr [rsi]
0x00000000004a3fd9 : and ecx, edi ; jmp rax
0x0000000000491d2e : and esi, 0xe0837fff ; jg 0x491d47 ; ret 0x5488
0x000000000043fce7 : and esp, 0x4f ; add byte ptr [rax], al ; ret
0x0000000000467317 : bnd je 0x467326 ; test edx, edx ; jne 0x467318 ; ret
0x000000000042d55a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000426940 : bsf eax, eax ; add rax, rdi ; ret
0x0000000000426950 : bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x0000000000426960 : bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x0000000000426930 : bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x000000000042687f : bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000042d753 : bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x00000000004241b6 : bsf eax, edx ; ret
0x0000000000424312 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000042d870 : bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x0000000000424202 : bsf rax, rdx ; ret
0x0000000000465cd7 : bsr eax, eax ; add rax, rdi ; ret
0x0000000000465f5b : bsr eax, esi ; add rax, rdi ; ret
0x0000000000465e69 : bsr esi, esi ; lea rax, [rcx + rsi] ; ret
0x0000000000465d65 : bsr esi, esi ; lea rax, [rdi + rsi] ; ret
0x0000000000465cd6 : bsr rax, rax ; add rax, rdi ; ret
0x0000000000465f5a : bsr rax, rsi ; add rax, rdi ; ret
0x0000000000465e68 : bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x0000000000465d64 : bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x000000000047c037 : call 0x1009f85e
0x000000000047c99a : call 0x100a01c1
0x00000000004c20f8 : call 0x114c1793
0x00000000004bf498 : call 0x134be99b
0x00000000004bf4c8 : call 0x134be9cb
0x00000000004c43d8 : call 0x144c41a6
0x00000000004c1ff8 : call 0x174c164f
0x000000000044bb38 : call 0x2073e88
0x000000000042ce94 : call 0x24b759ed
0x0000000000465922 : call 0x401b92
0x0000000000409d2c : call 0x406022
0x000000000044bbde : call 0x407ece
0x0000000000442de8 : call 0x40f0b2
0x0000000000401ab2 : call 0x410068
0x000000000041b708 : call 0x417952
0x000000000041c711 : call 0x418962
0x0000000000420db1 : call 0x41d042
0x0000000000452249 : call 0x41e542
0x00000000004425df : call 0x41e8e2
0x0000000000408a04 : call 0x41e8e6
0x0000000000402edd : call 0x41f0f2
0x000000000045cd28 : call 0x4270f7
0x00000000004108df : call 0x42cb52
0x0000000000400721 : call 0x43ec76
0x00000000004a0390 : call 0x4424b9
0x0000000000458a96 : call 0x463b76
0x000000000048d1cc : call 0x479492
0x000000000043556a : call 0x4fc26568
0x0000000000435569 : call 0x4fc26569
0x000000000044d3d1 : call 0xffffffff89451e42
0x000000000047bb9b : call 0xffffffff8a09e4c2
0x000000000047bd02 : call 0xffffffff8a09e629
0x000000000047beef : call 0xffffffff8a09e816
0x000000000047c51b : call 0xffffffff8a09ee42
0x000000000047c678 : call 0xffffffff8a09ef9f
0x000000000047c846 : call 0xffffffff8a09f16d
0x00000000004b90c3 : call 0xffffffffaf0e2f39
0x000000000047b81a : call 0xffffffffc2710062
0x000000000041c7e8 : call 0xffffffffc27b0ff9
0x0000000000459bdc : call 0xffffffffc27ee3e6
0x000000000041d0a8 : call 0xffffffffc2cb18c1
0x000000000046963d : call 0xffffffffc37fdf4a
0x00000000004861ea : call 0xffffffffc381adf4
0x0000000000466f6c : call 0xffffffffc3a2b0d2
0x00000000004503b5 : call 0xffffffffc3f41306
0x0000000000467f6c : call 0xffffffffc40dc7a5
0x0000000000427657 : call 0xffffffffc412ffa8
0x0000000000424127 : call 0xffffffffc43aca78
0x000000000040095e : call 0xffffffffd13f09b1
0x00000000004c4118 : call 0xffffffffe44c39bc
0x00000000004c5e28 : call 0xffffffffe84c584f
0x0000000000452e15 : call qword ptr [r10 + rax*8]
0x00000000004a41fb : call qword ptr [rax + 0x10fff913]
0x00000000004a41f3 : call qword ptr [rax + 0x10fff914]
0x00000000004a41eb : call qword ptr [rax + 0x10fff915]
0x00000000004a41e3 : call qword ptr [rax + 0x10fff916]
0x00000000004a41db : call qword ptr [rax + 0x10fff917]
0x00000000004a4213 : call qword ptr [rax + 0x10fff918]
0x00000000004a3fe7 : call qword ptr [rax + 0x20fff91f]
0x0000000000410d77 : call qword ptr [rax + 0x80]
0x00000000004be237 : call qword ptr [rax - 0x1f0002b4]
0x00000000004a3dc3 : call qword ptr [rax - 0x1f000724]
0x00000000004a3d6f : call qword ptr [rax - 0x1f00072b]
0x00000000004a39ab : call qword ptr [rax - 0x1f00077a]
0x00000000004a38bb : call qword ptr [rax - 0x2f00080c]
0x00000000004a38ab : call qword ptr [rax - 0x2f000811]
0x00000000004a389b : call qword ptr [rax - 0x2f000816]
0x000000000040fd2e : call qword ptr [rax]
0x0000000000400ee8 : call qword ptr [rbx + 0x10]
0x0000000000401978 : call qword ptr [rbx*8 + 0x6c9ed8]
0x000000000047e7a8 : call qword ptr [rbx]
0x00000000004a3b1f : call qword ptr [rcx + 0x11fff8c2]
0x00000000004a3b27 : call qword ptr [rcx + 0x11fff8c3]
0x00000000004a3b2f : call qword ptr [rcx + 0x11fff8c4]
0x000000000049aade : call qword ptr [rcx]
0x00000000004c2e03 : call qword ptr [rdi]
0x00000000004a40cb : call qword ptr [rdx + 0x22fff911]
0x00000000004a3ebb : call qword ptr [rdx + 0x22fff91d]
0x0000000000452e16 : call qword ptr [rdx + rax*8]
0x00000000004be2ef : call qword ptr [rdx - 0x2d00023b]
0x00000000004a3e9b : call qword ptr [rdx]
0x00000000004a3e17 : call qword ptr [rsi + 0x26fff921]
0x0000000000492cd2 : call qword ptr [rsi]
0x000000000047729c : call r11
0x0000000000400fcb : call r12
0x000000000040e410 : call r14
0x0000000000403951 : call r15
0x0000000000462c7b : call r8
0x0000000000473941 : call r9
0x000000000049edc1 : call rax
0x0000000000402ffd : call rbx
0x000000000040591a : call rcx
0x0000000000403952 : call rdi
0x000000000040edbe : call rdx
0x000000000040e411 : call rsi
0x0000000000400fcc : call rsp
0x000000000044fa74 : cdq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000004bae00 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000417207 : cdq ; push rbx ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000049aec2 : cdq ; sbb al, 0x23 ; add byte ptr [rax], cl ; ret
0x000000000048608e : clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000041c6c3 : clc ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x000000000045930a : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000045e0dd : clc ; add cl, byte ptr [rax + 0x29] ; ret
0x000000000040d98c : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000043e9bc : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000047d14c : clc ; add eax, dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x000000000046dfba : clc ; add ecx, dword ptr [rcx - 0x7bf0cf8d] ; ret 2
0x0000000000426708 : clc ; add rax, rcx ; ret
0x00000000004a3dc2 : clc ; call qword ptr [rax - 0x1f000724]
0x00000000004a3d6e : clc ; call qword ptr [rax - 0x1f00072b]
0x00000000004a39aa : clc ; call qword ptr [rax - 0x1f00077a]
0x00000000004a3952 : clc ; call qword ptr [rax]
0x00000000004c477a : clc ; call qword ptr [rbx]
0x00000000004a3b1e : clc ; call qword ptr [rcx + 0x11fff8c2]
0x00000000004a3b26 : clc ; call qword ptr [rcx + 0x11fff8c3]
0x00000000004a3b2e : clc ; call qword ptr [rcx + 0x11fff8c4]
0x00000000004a3b22 : clc ; call qword ptr [rcx]
0x00000000004c2e02 : clc ; call qword ptr [rdi]
0x00000000004c408a : clc ; call qword ptr [rdx]
0x00000000004a3b7a : clc ; call qword ptr [rsi]
0x00000000004a3d7e : clc ; call rax
0x00000000004a3af2 : clc ; call rdx
0x00000000004a3b86 : clc ; call rsi
0x00000000004c2f22 : clc ; call rsp
0x00000000004a429d : clc ; clc ; call rax
0x0000000000430409 : clc ; cmp rcx, rax ; jne 0x43043b ; xor eax, eax ; ret
0x0000000000430408 : clc ; cmp rcx, rax ; jne 0x43043c ; xor eax, eax ; ret
0x00000000004749a0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000421bb0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000412e56 : clc ; dec dword ptr [rax + 0xf] ; ret 0x938b
0x0000000000401aeb : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000045545b : clc ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000456a82 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000047ac0d : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000004a3cca : clc ; inc dword ptr [rax + 0x10fff8ef] ; loop 0x4a3cd4 ; call rax
0x00000000004a3c8e : clc ; inc dword ptr [rax + 0x40fff8e2] ; in al, 0xf8 ; jmp qword ptr [rax]
0x00000000004a3c4a : clc ; inc dword ptr [rax - 0x10] ; clc ; call rax
0x00000000004a3cea : clc ; inc dword ptr [rax - 0x11] ; clc ; call rax
0x00000000004a3c46 : clc ; inc dword ptr [rax - 0x12] ; clc ; inc dword ptr [rax - 0x10] ; clc ; call rax
0x00000000004a3ce6 : clc ; inc dword ptr [rax - 0x13] ; clc ; inc dword ptr [rax - 0x11] ; clc ; call rax
0x00000000004a3c92 : clc ; inc dword ptr [rax - 0x1c] ; clc ; jmp qword ptr [rax]
0x00000000004a3dbe : clc ; inc dword ptr [rax - 0x25] ; clc ; call qword ptr [rax - 0x1f000724]
0x00000000004a3d6a : clc ; inc dword ptr [rax - 0x2c] ; clc ; call qword ptr [rax - 0x1f00072b]
0x00000000004a39b6 : clc ; inc dword ptr [rax - 0x2f000776] ; mov edi, eax ; jmp qword ptr [rax]
0x00000000004a3be6 : clc ; inc dword ptr [rax - 0x3d] ; clc ; inc eax ; ret
0x00000000004a3bde : clc ; inc dword ptr [rax - 0x3e] ; clc ; inc eax ; ret 0xfff8
0x00000000004a39a6 : clc ; inc dword ptr [rax - 0x7b] ; clc ; call qword ptr [rax - 0x1f00077a]
0x00000000004a3cc6 : clc ; inc dword ptr [rax - 0x7f000713] ; out dx, eax ; clc ; call qword ptr [rax]
0x00000000004a39de : clc ; inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x00000000004a3d32 : clc ; inc dword ptr [rax] ; jrcxz 0x4a3d34 ; call rax
0x00000000004a3aea : clc ; inc dword ptr [rax] ; ret 0xfff8
0x00000000004a3d8e : clc ; inc dword ptr [rax] ; retf 0xfff8 ; ror ah, 1 ; clc ; jmp qword ptr [rax]
0x00000000004a3ab6 : clc ; inc dword ptr [rax] ; stosd dword ptr [rdi], eax ; clc ; jmp qword ptr [rax]
0x000000000044ed19 : clc ; inc dword ptr [rcx - 0x77] ; ret
0x00000000004a3bea : clc ; inc eax ; ret
0x00000000004a3be2 : clc ; inc eax ; ret 0xfff8
0x00000000004a3d9e : clc ; inc eax ; sar al, 1 ; call qword ptr [rax]
0x00000000004a3aae : clc ; inc eax ; test al, 0xf8 ; jmp rax
0x000000000044a4fe : clc ; jg 0x44a48d ; ret 0x5c77
0x00000000004c4cc8 : clc ; jge 0x4c4cc7 ; call rdx
0x00000000004a39be : clc ; jmp qword ptr [rax]
0x00000000004a3b7e : clc ; jmp qword ptr [rsi + 0x36fff8c6]
0x000000000047e6f8 : clc ; jmp qword ptr [rsi + 0xf]
0x00000000004a3aee : clc ; jmp qword ptr [rsi]
0x00000000004a3a92 : clc ; jmp rax
0x00000000004c411a : clc ; jmp rbx
0x00000000004c366a : clc ; jmp rsp
0x000000000042cc87 : clc ; jne 0x42cb61 ; ret
0x00000000004a3bca : clc ; lcall [rbx - 0x38] ; clc ; jmp rax
0x00000000004a3ace : clc ; lcall [rdi - 0x41] ; clc ; push qword ptr [rax] ; ret 0xfff8
0x0000000000400bfa : clc ; leave ; ret
0x00000000004b9a62 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000400bf7 : clc ; mov eax, dword ptr [rbp - 8] ; leave ; ret
0x0000000000431ee7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000432857 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004352f7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000432a57 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435267 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000432c57 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004351d7 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431f03 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043614c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000049ca88 : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000491d12 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000004a396e : clc ; push qword ptr [rax + 0x6f] ; clc ; call qword ptr [rax]
0x00000000004a3d4a : clc ; push qword ptr [rax - 0x12] ; clc ; jmp qword ptr [rax]
0x00000000004a3d46 : clc ; push qword ptr [rax - 0x14] ; clc ; push qword ptr [rax - 0x12] ; clc ; jmp qword ptr [rax]
0x00000000004a3d9a : clc ; push qword ptr [rax - 0x31] ; clc ; inc eax ; sar al, 1 ; call qword ptr [rax]
0x00000000004a3966 : clc ; push qword ptr [rax] ; insb byte ptr [rdi], dx ; clc ; call rax
0x00000000004a3ad2 : clc ; push qword ptr [rax] ; ret 0xfff8
0x000000000041153a : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x00000000004164e0 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000443331 : clc ; push qword ptr [rbp - 0xd] ; xor eax, eax ; leave ; ret
0x0000000000416488 : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000415965 : clc ; push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x000000000046af0c : clc ; push qword ptr [rsi + rsi - 0x77] ; ret 0xe283
0x00000000004a3b66 : clc ; push qword ptr [rsi - 0x3d] ; clc ; push rsi ; ret
0x00000000004a3b5e : clc ; push qword ptr [rsi - 0x3e] ; clc ; push rsi ; ret 0xfff8
0x00000000004a39da : clc ; push rax ; clc ; inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x00000000004a3cb6 : clc ; push rax ; in eax, 0xf8 ; call rax
0x00000000004a3b02 : clc ; push rax ; mov edi, 0xc0e0fff8 ; clc ; call rax
0x00000000004c06f8 : clc ; push rsi ; cmc ; call qword ptr [rcx]
0x00000000004a3b6a : clc ; push rsi ; ret
0x00000000004a3b62 : clc ; push rsi ; ret 0xfff8
0x0000000000417132 : clc ; ret
0x00000000004c6bb8 : clc ; ret 0xfffa
0x000000000047936a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000004785dd : clc ; std ; jbe 0x4785ec ; ret
0x00000000004c9008 : clc ; xor edi, ebp ; call rsp
0x00000000004c35bc : cld ; add byte ptr [rax], r8b ; xor ch, cl ; std ; jmp qword ptr [rdx]
0x000000000046e748 : cld ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x000000000043ed0f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043ed2f : cld ; add eax, dword ptr [rax] ; ret
0x00000000004c86a2 : cld ; call qword ptr [rax]
0x00000000004c86ba : cld ; call qword ptr [rdx]
0x00000000004a4269 : cld ; clc ; call rax
0x0000000000480fff : cld ; cmove rsi, r9 ; jmp 0x480fce
0x000000000045cd2b : cld ; dec dword ptr [rax - 0x39] ; ret 0xffb0
0x000000000044d3b5 : cld ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 5 ; lahf ; jmp qword ptr [rdi]
0x000000000047171e : cld ; inc dword ptr [rbp + 0x5b0378c0] ; ret
0x000000000043edbe : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043ecee : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x0000000000432672 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000432875 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432a75 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432c75 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043615e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000004331a8 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000004322a6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435486 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432486 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435406 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432666 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435386 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004320c6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435506 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000491ccc : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000004270d8 : cld ; ret
0x00000000004425e0 : cld ; ret 0xfffd
0x00000000004b8f16 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000420669 : cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x00000000004a41d0 : cli ; adc cl, bh ; jmp qword ptr [rax + 0x20fff918]
0x0000000000420849 : cli ; add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x000000000041e39b : cli ; add byte ptr [rax - 0x418aff94], ch ; ret
0x000000000047cd19 : cli ; add byte ptr [rcx - 0xcf68130], cl ; ret
0x000000000046781a : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000004899d3 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x00000000004899fc : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000410f18 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000043ea5c : cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x0000000000449cbf : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000000000474db6 : cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x0000000000475623 : cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000043e581 : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043617c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000047bb8c : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000004c673a : cli ; call rax
0x00000000004c6b52 : cli ; call rdx
0x00000000004c68da : cli ; call rsi
0x00000000004bf3c9 : cli ; hlt ; call qword ptr [rbx]
0x000000000043316b : cli ; jg 0x43317e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000436137 : cli ; jg 0x43614a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000043e541 : cli ; jg 0x43e553 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043e6c6 : cli ; jg 0x43e6d8 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000004c5c52 : cli ; jmp qword ptr [rax]
0x00000000004c714a : cli ; jmp qword ptr [rdx]
0x00000000004c5e2a : cli ; jmp rdi
0x00000000004c58e2 : cli ; jmp rdx
0x00000000004c6e32 : cli ; jmp rsi
0x00000000004c64ea : cli ; jmp rsp
0x0000000000432a78 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000426ae8 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000047b676 : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x000000000048a388 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004bb381 : cli ; push 0x6e ; ja 0x4bb30e ; ret 0x48f
0x00000000004b9e25 : cli ; ret 0xac65
0x000000000044313b : cli ; setae al ; ret
0x0000000000424259 : cli ; test rdx, rdx ; je 0x424279 ; bsf rax, rdx ; ret
0x0000000000465b68 : cli ; test rdx, rdx ; je 0x465b99 ; bsf rax, rdx ; ret
0x00000000004b8a6a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004c99e3 : cmc ; add al, byte ptr [rax] ; ret
0x00000000004962e8 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044449c : cmc ; add byte ptr [rax], al ; add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x000000000041e6e0 : cmc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004bfed2 : cmc ; call qword ptr [rax]
0x00000000004c06fa : cmc ; call qword ptr [rcx]
0x00000000004c0e02 : cmc ; call qword ptr [rdx]
0x00000000004c0d1a : cmc ; call qword ptr [rsi]
0x00000000004c16f2 : cmc ; call rdx
0x00000000004a4295 : cmc ; clc ; call rax
0x00000000004c1b61 : cmc ; cmc ; call qword ptr [rdx]
0x00000000004c0bca : cmc ; jmp qword ptr [rax]
0x00000000004c052a : cmc ; jmp qword ptr [rcx]
0x00000000004bfd32 : cmc ; jmp qword ptr [rsi]
0x00000000004bb7a9 : cmc ; mov ch, 0xab ; ret
0x0000000000400966 : cmc ; mov cl, 0x2c ; add byte ptr [rcx], al ; ret
0x000000000043540a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004322fe : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043dad3 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004b8657 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000047aebd : cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043dad7 : cmc ; sub eax, edx ; ret
0x00000000004bade5 : cmc ; xlatb ; ret 0x4e27
0x000000000049cdf7 : cmova eax, edx ; ret
0x0000000000467681 : cmova esi, edx ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x0000000000417939 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000417938 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000043fc1b : cmove eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000465291 : cmove eax, ecx ; ret
0x000000000043ff00 : cmove eax, edx ; add rsp, 0x60 ; pop rbx ; ret
0x0000000000421bb3 : cmove eax, edx ; add rsp, 8 ; ret
0x0000000000426662 : cmove eax, edx ; ret
0x0000000000481001 : cmove esi, ecx ; jmp 0x480fcc
0x0000000000465290 : cmove r8, rcx ; ret
0x000000000043fc1a : cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x000000000046b5d0 : cmove rax, r9 ; ret
0x0000000000421bb2 : cmove rax, rdx ; add rsp, 8 ; ret
0x0000000000426661 : cmove rax, rdx ; ret
0x0000000000481000 : cmove rsi, r9 ; jmp 0x480fcd
0x000000000041547b : cmovg eax, ecx ; test rdx, rdx ; jne 0x415479 ; ret
0x0000000000463e8b : cmovg eax, ecx ; test rdx, rdx ; jne 0x463e89 ; ret
0x0000000000413f13 : cmovne eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000421c33 : cmovne eax, edx ; ret
0x0000000000421c32 : cmovne rax, rdx ; ret
0x0000000000444443 : cmovno eax, dword ptr [rbx - 0x76bef907] ; ret 0x840f
0x0000000000456a4d : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret
0x000000000044750c : cmovs eax, edx ; ret
0x000000000041a670 : cmovs ebp, dword ptr [rcx] ; ret 0x14c
0x000000000049cd28 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x0000000000480ffe : cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x480fcf
0x0000000000440df1 : cmp al, 0x24 ; call rbx
0x000000000049e31b : cmp al, 0x24 ; mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x00000000004c0dfc : cmp al, 0x25 ; add byte ptr [rax], al ; xor byte ptr [rbx - 0xb], ch ; call qword ptr [rdx]
0x0000000000468c6c : cmp al, 0x26 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000040e48d : cmp al, 0x33 ; call rax
0x00000000004c2dfc : cmp al, 0x45 ; add byte ptr [rax], al ; rol byte ptr [rdx], 0xf8 ; call qword ptr [rdi]
0x00000000004b9a60 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004c4efc : cmp al, 0x66 ; add byte ptr [rax], al ; loop 0x4c4f03 ; jmp rax
0x00000000004c86fc : cmp al, 0x9e ; add byte ptr [rax], al ; and byte ptr [rdi], al ; cld ; call qword ptr [rax]
0x00000000004c8cfc : cmp al, 0xa4 ; add byte ptr [rax], al ; sal al, 0xfc ; call qword ptr [rax]
0x00000000004887ea : cmp al, byte ptr [rbx + 0x24] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000043df96 : cmp al, byte ptr [rsi - 1] ; jne 0x43dfbc ; xor eax, eax ; ret
0x0000000000426936 : cmp al, dh ; ret
0x0000000000426935 : cmp al, r14b ; ret
0x0000000000453553 : cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xe920
0x0000000000487569 : cmp bl, ch ; ret 0x8148
0x000000000042d393 : cmp bl, dh ; ret
0x0000000000410bbb : cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x000000000045e2c6 : cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004016e3 : cmp byte ptr [rax + 0x39], cl ; ret 0x2773
0x000000000044f6a1 : cmp byte ptr [rax + 0x4a], ch ; add byte ptr [rax - 0x77], cl ; ret 0x8840
0x000000000042749f : cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000426977 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x0000000000440da4 : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x0000000000410bbc : cmp byte ptr [rax - 0x77], cl ; ret 0x2b48
0x0000000000483577 : cmp byte ptr [rax - 0x7d], cl ; ret
0x0000000000426966 : cmp byte ptr [rax], ah ; ret
0x0000000000415933 : cmp byte ptr [rax], al ; je 0x415944 ; ret
0x000000000049c5d5 : cmp byte ptr [rax], al ; je 0x49c64b ; add rsp, 0x18 ; ret
0x0000000000421c30 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x0000000000426956 : cmp byte ptr [rax], dl ; ret
0x0000000000426955 : cmp byte ptr [rax], r10b ; ret
0x0000000000426965 : cmp byte ptr [rax], r12b ; ret
0x0000000000421c2f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000004c3024 : cmp byte ptr [rbx + 0x1b70307], al ; ret
0x00000000004c731d : cmp byte ptr [rbx + 0x2030d07], al ; cld ; ret
0x00000000004c737d : cmp byte ptr [rbx + 0x2030d07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c72bd : cmp byte ptr [rbx + 0x3030d07], al ; or al, byte ptr [rcx] ; ret
0x000000000043f5e2 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x000000000047393b : cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x00000000004c7508 : cmp byte ptr [rbx + rdi*8], dl ; jmp qword ptr [rdx]
0x0000000000464d67 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x0000000000477276 : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000004158f8 : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000042f8dd : cmp byte ptr [rdi], dl ; ret
0x00000000004303f0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x00000000004303d9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000004303c2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042ee7e : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000046b5cc : cmp byte ptr [rsi - 2], 0x3a ; cmove rax, r9 ; ret
0x00000000004c97d8 : cmp byte ptr [rsi - 3], cl ; jmp qword ptr [rbx]
0x000000000044a373 : cmp byte ptr [rsi], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004c9229 : cmp ch, bh ; call rcx
0x00000000004a43ed : cmp cl, 0xff ; mov al, 0x80 ; stc ; call rax
0x000000000041b170 : cmp cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000048225b : cmp cl, byte ptr [rax - 0x77] ; ret 0x8d4a
0x000000000046b5cf : cmp cl, byte ptr [rcx + 0xf] ; rol ebx, 0x4c ; mov eax, ecx ; ret
0x0000000000489a96 : cmp cl, ch ; ret
0x000000000046b59e : cmp dh, byte ptr [rbp + 4] ; test ecx, ecx ; jne 0x46b55a ; xor eax, eax ; ret
0x000000000046e743 : cmp dh, byte ptr [rcx] ; rol byte ptr [rcx - 0x80], cl ; cld ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x000000000043617b : cmp dl, 1 ; jb 0x43618d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043e580 : cmp dl, 1 ; jb 0x43e58e ; mov byte ptr [rdi], cl ; ret
0x000000000043e6fa : cmp dl, 1 ; jb 0x43e708 ; mov byte ptr [rdi], cl ; ret
0x0000000000464d38 : cmp dword ptr [rax + 0x30], 0 ; je 0x464d46 ; ret
0x0000000000434f1c : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000004512be : cmp dword ptr [rcx - 0x7d], ecx ; ret 0xf301
0x0000000000415931 : cmp dword ptr [rdi + 0x38], 0 ; je 0x415946 ; ret
0x0000000000443320 : cmp dword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x000000000049cdf4 : cmp dword ptr [rsi + 8], ecx ; cmova eax, edx ; ret
0x000000000043fe53 : cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x000000000047499f : cmp eax, -1 ; cmove rax, rdx ; ret
0x0000000000415964 : cmp eax, -1 ; je 0x415979 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000416487 : cmp eax, -1 ; je 0x416498 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464f4a : cmp eax, -1 ; je 0x464f5b ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464f8e : cmp eax, -1 ; je 0x464f9f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000411539 : cmp eax, -1 ; jne 0x411546 ; pop rbx ; ret
0x00000000004164df : cmp eax, -1 ; jne 0x4164d0 ; pop rbx ; ret
0x0000000000443330 : cmp eax, -1 ; jne 0x443330 ; xor eax, eax ; leave ; ret
0x00000000004785dc : cmp eax, -3 ; jbe 0x4785ed ; ret
0x000000000047b289 : cmp eax, 0x251736 ; call rax
0x000000000047b14c : cmp eax, 0x251873 ; jmp rax
0x00000000004a42fd : cmp eax, 0x3f20fff9 ; stc ; jmp qword ptr [rax]
0x000000000040dfc9 : cmp eax, 0xfffff000 ; ja 0x40dff8 ; ret
0x000000000043fc46 : cmp eax, 0xfffff000 ; ja 0x43fc58 ; ret
0x000000000043fc95 : cmp eax, 0xfffff000 ; ja 0x43fca8 ; ret
0x000000000043fe24 : cmp eax, 0xfffff000 ; ja 0x43fe68 ; ret
0x00000000004502d1 : cmp eax, 0xfffff000 ; ja 0x4502e8 ; ret
0x000000000046ac58 : cmp eax, 0xfffff000 ; ja 0x46ac70 ; pop rbx ; ret
0x000000000046afd6 : cmp eax, 0xfffff000 ; ja 0x46afe8 ; ret
0x000000000046b02b : cmp eax, 0xfffff000 ; ja 0x46b040 ; ret
0x000000000043ee0b : cmp eax, 2 ; je 0x43ee1f ; xor eax, eax ; ret
0x000000000044321a : cmp eax, 4 ; je 0x443225 ; ret
0x0000000000413965 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x413978 ; movzx eax, byte ptr [rax] ; ret
0x0000000000441b91 : cmp eax, dword ptr [rip - 0x9cf0000] ; mov rdi, r12 ; call rbx
0x00000000004749e8 : cmp eax, dword ptr [rsi + rdx] ; jae 0x474998 ; xor eax, eax ; ret
0x0000000000417239 : cmp eax, ecx ; jae 0x417267 ; movzx eax, byte ptr [rax] ; ret
0x000000000043dfb3 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004787b4 : cmp eax, esi ; je 0x4787c4 ; ret
0x00000000004431b6 : cmp ebx, 0xa ; je 0x4431c1 ; ret
0x0000000000444b0e : cmp ebx, eax ; setne dl ; jmp 0x444afa
0x0000000000471a81 : cmp ecx, dword ptr [rax - 0x75] ; adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000046da5e : cmp ecx, dword ptr [rax - 0x7b] ; sal byte ptr [rsp + 0x48], 0x83 ; ret
0x00000000004485b9 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000467680 : cmp ecx, dword ptr [rdi] ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000046528e : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000043040b : cmp ecx, eax ; jne 0x430439 ; xor eax, eax ; ret
0x00000000004a42f5 : cmp ecx, edi ; jmp qword ptr [rax]
0x00000000004742c6 : cmp ecx, edx ; jne 0x4742a5 ; ret
0x000000000045a865 : cmp edi, ecx ; ja 0x45a850 ; mov eax, r8d ; ret
0x00000000004a42f9 : cmp edi, ecx ; jmp qword ptr [rax]
0x000000000046b1de : cmp edi, edx ; ja 0x46b20d ; ret
0x000000000047cd18 : cmp edx, 0 ; mov eax, edx ; jle 0x47cd30 ; ret
0x00000000004430d1 : cmp edx, 0x1b ; add byte ptr [rax], al ; ret
0x000000000041e39a : cmp edx, 0x6ca800 ; jne 0x41e369 ; ret
0x00000000004742d8 : cmp edx, eax ; jne 0x474282 ; mov eax, dword ptr [rsi + 4] ; ret
0x00000000004270a8 : cmp edx, ecx ; jne 0x427095 ; ret
0x000000000044313a : cmp edx, edi ; setae al ; ret
0x0000000000467316 : cmp edx, esi ; je 0x467327 ; test edx, edx ; jne 0x467319 ; ret
0x0000000000417279 : cmp esi, -1 ; setne al ; neg eax ; ret
0x000000000044dd85 : cmp esi, 3 ; je 0x44dd96 ; pop rbx ; ret
0x00000000004bade4 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x0000000000464fea : cmp esi, ecx ; jb 0x464fe7 ; lea eax, [rdx + rdi] ; ret
0x000000000041651a : cmp esi, ecx ; jne 0x416517 ; lea eax, [rdx + rdi] ; ret
0x0000000000464d37 : cmp qword ptr [rax + 0x30], 0 ; je 0x464d47 ; ret
0x0000000000415930 : cmp qword ptr [rdi + 0x38], 0 ; je 0x415947 ; ret
0x000000000049cdf3 : cmp qword ptr [rsi + 8], rcx ; cmova eax, edx ; ret
0x000000000042d392 : cmp r11b, r14b ; ret
0x00000000004431b5 : cmp r11d, 0xa ; je 0x4431c2 ; ret
0x0000000000480ffd : cmp r12b, 0x49 ; cmove esi, ecx ; jmp 0x480fd0
0x00000000004749e7 : cmp r8, qword ptr [rsi + rdx] ; jae 0x474999 ; xor eax, eax ; ret
0x000000000040dfc8 : cmp rax, -0x1000 ; ja 0x40dff9 ; ret
0x000000000043fc45 : cmp rax, -0x1000 ; ja 0x43fc59 ; ret
0x000000000043fc94 : cmp rax, -0x1000 ; ja 0x43fca9 ; ret
0x000000000043fe23 : cmp rax, -0x1000 ; ja 0x43fe69 ; ret
0x00000000004502d0 : cmp rax, -0x1000 ; ja 0x4502e9 ; ret
0x000000000046ac57 : cmp rax, -0x1000 ; ja 0x46ac71 ; pop rbx ; ret
0x000000000046afd5 : cmp rax, -0x1000 ; ja 0x46afe9 ; ret
0x000000000046b02a : cmp rax, -0x1000 ; ja 0x46b041 ; ret
0x000000000047499e : cmp rax, -1 ; cmove rax, rdx ; ret
0x00000000004785db : cmp rax, -3 ; jbe 0x4785ee ; ret
0x0000000000413964 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x413979 ; movzx eax, byte ptr [rax] ; ret
0x0000000000417238 : cmp rax, rcx ; jae 0x417268 ; movzx eax, byte ptr [rax] ; ret
0x00000000004787b3 : cmp rax, rsi ; je 0x4787c5 ; ret
0x000000000046528d : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000043040a : cmp rcx, rax ; jne 0x43043a ; xor eax, eax ; ret
0x00000000004742c5 : cmp rcx, rdx ; jne 0x4742a6 ; ret
0x000000000046b1dd : cmp rdi, rdx ; ja 0x46b20e ; ret
0x00000000004742d7 : cmp rdx, r8 ; jne 0x474283 ; mov eax, dword ptr [rsi + 4] ; ret
0x00000000004270a7 : cmp rdx, rcx ; jne 0x427096 ; ret
0x00000000004270a6 : cmp rdx, rcx ; jne 0x427097 ; ret
0x0000000000443139 : cmp rdx, rdi ; setae al ; ret
0x0000000000464fe9 : cmp rsi, rcx ; jb 0x464fe8 ; lea eax, [rdx + rdi] ; ret
0x0000000000416519 : cmp rsi, rcx ; jne 0x416518 ; lea eax, [rdx + rdi] ; ret
0x00000000004968e7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496be7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497ae7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041d046 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x0000000000426415 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004977e7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x000000000042fe89 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000004005da : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e1 ; ret
0x000000000042a9b6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004974e7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004971e7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000409d76 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x00000000004c9005 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; clc ; xor edi, ebp ; call rsp
0x00000000004a3aad : cmpsd dword ptr [rsi], dword ptr [rdi] ; clc ; inc eax ; test al, 0xf8 ; jmp rax
0x00000000004747f0 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov ebp, 0xc031fff8 ; ret
0x000000000041385f : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000049b8e4 : cwde ; add rax, r8 ; jmp rax
0x000000000041568c : cwde ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x00000000004c0528 : cwde ; push rax ; cmc ; jmp qword ptr [rcx]
0x0000000000439cb1 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x000000000041c0c6 : dec byte ptr [r8 - 0x75] ; ret
0x0000000000439cb2 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000047a3a6 : dec byte ptr [rax + 0x29] ; ret 0x8d49
0x000000000041c144 : dec byte ptr [rax - 0x73] ; ret
0x000000000045d43c : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffffb60 ; call rax
0x000000000041c0c7 : dec byte ptr [rax - 0x75] ; ret
0x0000000000465a1d : dec byte ptr [rax - 0x77] ; ret
0x000000000040e64a : dec byte ptr [rcx + rcx*4 - 0x11] ; call r14
0x000000000047e8fd : dec dword ptr [r13 + r9*4 + 0x7c] ; ret
0x0000000000483453 : dec dword ptr [r8 + 0x39] ; ret
0x00000000004785d9 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x4785f0 ; ret
0x000000000041b8fc : dec dword ptr [r9 - 0x7b] ; ret 0x840f
0x0000000000410ed9 : dec dword ptr [rax + 0x29] ; ret
0x0000000000439df2 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000473ed1 : dec dword ptr [rax + 0x29] ; ret 0x48e9
0x000000000045eaa6 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000419a5d : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x000000000041e0dd : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x0000000000419115 : dec dword ptr [rax + 0x39] ; ret
0x0000000000481124 : dec dword ptr [rax + 0x39] ; ret 0x840f
0x0000000000485f1d : dec dword ptr [rax + 0x39] ; ret 0x940f
0x0000000000470bc5 : dec dword ptr [rax + 0x39] ; ret 0xed75
0x0000000000474b2a : dec dword ptr [rax + 0x63] ; ret
0x000000000046285b : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000462faf : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x0000000000465f59 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x00000000004749a1 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000421bb1 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000045996e : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x0000000000412e57 : dec dword ptr [rax + 0xf] ; ret 0x938b
0x0000000000410f3c : dec dword ptr [rax + 1] ; ret
0x000000000047de67 : dec dword ptr [rax + 1] ; ret 0x3948
0x000000000045d9f6 : dec dword ptr [rax - 0x39] ; ret
0x000000000045cd2c : dec dword ptr [rax - 0x39] ; ret 0xffb0
0x00000000004120c7 : dec dword ptr [rax - 0x39] ; ret 0xffd0
0x000000000048108e : dec dword ptr [rax - 0x39] ; ret 0xfffe
0x000000000043f64c : dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000469aae : dec dword ptr [rax - 0x73] ; dec dword ptr [rax + 0x39] ; ret
0x0000000000474b95 : dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000410bb8 : dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x0000000000482258 : dec dword ptr [rax - 0x75] ; cmp cl, byte ptr [rax - 0x77] ; ret 0x8d4a
0x0000000000440b2d : dec dword ptr [rax - 0x75] ; jge 0x440b37 ; call rbx
0x0000000000440de0 : dec dword ptr [rax - 0x75] ; jge 0x440dea ; call rbx
0x0000000000442978 : dec dword ptr [rax - 0x75] ; jge 0x442982 ; call rbx
0x0000000000479697 : dec dword ptr [rax - 0x75] ; pop rbp ; enter -0x74b8, 0x14 ; ret
0x000000000041c3bf : dec dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x7404
0x0000000000414941 : dec dword ptr [rax - 0x75] ; push rbx ; sub cl, ch ; ret 0xfffe
0x0000000000478a3c : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000484292 : dec dword ptr [rax - 0x77] ; add cl, byte ptr [rax + 1] ; ret
0x0000000000488a67 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000427218 : dec dword ptr [rax - 0x77] ; clc ; ret
0x000000000045ef35 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret 0xfe41
0x0000000000452245 : dec dword ptr [rax - 0x77] ; iretd ; call 0x41e546
0x000000000049f11a : dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x0000000000401aec : dec dword ptr [rax - 0x77] ; ret
0x000000000046b1ce : dec dword ptr [rax - 0x77] ; ret 0x1477
0x00000000004842df : dec dword ptr [rax - 0x77] ; ret 0x348
0x000000000041e681 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000450152 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000045ea6a : dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000466896 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000483b69 : dec dword ptr [rax - 0x77] ; ret 0x89e9
0x0000000000455697 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000460236 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000482b9d : dec dword ptr [rax - 0x77] ; ret 0xc6e9
0x0000000000421b2e : dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000046b793 : dec dword ptr [rax - 0x77] ; ret 0xf0eb
0x0000000000402f18 : dec dword ptr [rax - 0x77] ; ret 0xf4e9
0x00000000004789a1 : dec dword ptr [rax - 0x77] ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000044d3b6 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 5 ; lahf ; jmp qword ptr [rdi]
0x0000000000487dd8 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x000000000048608b : dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00000000004785da : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x4785ef ; ret
0x0000000000454111 : dec dword ptr [rax - 0x7d] ; jge 0x45414e ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004044dc : dec dword ptr [rax - 0x7d] ; ret
0x0000000000419a0f : dec dword ptr [rax - 0x7d] ; ret 0x4007
0x00000000004494e2 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000470fcf : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000470fbd : dec dword ptr [rax - 0x7d] ; ret 0x4810
0x0000000000457474 : dec dword ptr [rax - 0x7d] ; ret 0x4820
0x000000000046a5b6 : dec dword ptr [rax - 0x7d] ; ret 0x4909
0x000000000047105b : dec dword ptr [rax - 0x7d] ; ret 0x8908
0x0000000000485a82 : dec dword ptr [rax - 0x7d] ; ret 0xb908
0x0000000000453556 : dec dword ptr [rax - 0x7d] ; ret 0xe920
0x0000000000434f20 : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000046cdf0 : dec dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000047e8fe : dec dword ptr [rbp + rcx*4 + 0x7c] ; ret
0x000000000049b959 : dec dword ptr [rbp - 0x75] ; adc cl, byte ptr [rcx + 1] ; ret 0x3ee9
0x0000000000440fee : dec dword ptr [rbp - 0x75] ; push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x000000000041bcff : dec dword ptr [rbx + 0x2aeafe15] ; add dh, dh ; ret 0xf02
0x0000000000478abc : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x0000000000484926 : dec dword ptr [rcx + 0x29] ; fmul dword ptr [rax - 0x77] ; ret 0x348
0x0000000000455954 : dec dword ptr [rcx + 0x29] ; ret
0x000000000046dff3 : dec dword ptr [rcx + 0x29] ; ret 0x8d49
0x0000000000455563 : dec dword ptr [rcx + 0x39] ; ret
0x000000000046ce22 : dec dword ptr [rcx + 0x39] ; ret 0x830f
0x00000000004554e1 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x00000000004726fa : dec dword ptr [rcx + 0x39] ; ret 0x870f
0x000000000049d98c : dec dword ptr [rcx + 0x63] ; add byte ptr [r8 + 1], r9b ; ret
0x0000000000469a86 : dec dword ptr [rcx + 0x6b] ; ret
0x000000000045b06c : dec dword ptr [rcx + 0xf40244c] ; ret 0x548b
0x00000000004531b9 : dec dword ptr [rcx + rcx*4 - 2] ; mov rdi, rbx ; call rax
0x000000000048119f : dec dword ptr [rcx - 0x60f73] ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x0000000000440965 : dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000440dee : dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00000000004409f8 : dec dword ptr [rcx - 0x75] ; jge 0x440a02 ; call rbx
0x0000000000440b1f : dec dword ptr [rcx - 0x75] ; jge 0x440b29 ; call rbx
0x0000000000440c62 : dec dword ptr [rcx - 0x75] ; jge 0x440c6c ; call rbx
0x0000000000440dd2 : dec dword ptr [rcx - 0x75] ; jge 0x440ddc ; call rbx
0x00000000004425f0 : dec dword ptr [rcx - 0x75] ; jge 0x4425fa ; call rbx
0x0000000000442718 : dec dword ptr [rcx - 0x75] ; jge 0x442722 ; call rbx
0x000000000044285b : dec dword ptr [rcx - 0x75] ; jge 0x442865 ; call rbx
0x000000000044295c : dec dword ptr [rcx - 0x75] ; jge 0x442966 ; call rbx
0x000000000047d10c : dec dword ptr [rcx - 0x77] ; imul ecx ; ret
0x0000000000454153 : dec dword ptr [rcx - 0x77] ; ret
0x0000000000446988 : dec dword ptr [rcx - 0x77] ; ret 0x11e9
0x000000000044f1e7 : dec dword ptr [rcx - 0x77] ; ret 0x87e9
0x0000000000456783 : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000041b8fd : dec dword ptr [rcx - 0x7b] ; ret 0x840f
0x00000000004861e7 : dec dword ptr [rcx - 0x7d] ; call 0xffffffffc381adf7
0x000000000043fce5 : dec dword ptr [rdi] ; and esp, 0x4f ; add byte ptr [rax], al ; ret
0x00000000004430cf : dec dword ptr [rdi] ; cmp edx, 0x1b ; add byte ptr [rax], al ; ret
0x0000000000484606 : dec dword ptr [rdi] ; lahf ; ret 0xb60f
0x0000000000486ebf : dec dword ptr [rdi] ; lahf ; ret 0xd729
0x000000000044750b : dec dword ptr [rdi] ; ret 0x41c3
0x00000000004430ec : dec dword ptr [rdi] ; sbb ebp, 0x1b ; add byte ptr [rax], al ; ret
0x000000000043fbec : dec dword ptr [rdi] ; sbb ebp, 0x50 ; add byte ptr [rax], al ; ret
0x0000000000410ff1 : dec dword ptr [rdi] ; test al, ah ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000043de40 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000470c5c : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xdaf7
0x000000000041727b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000485ddf : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x000000000047ac0e : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000459fb6 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xfa80
0x000000000043f53d : dec dword ptr [rdi] ; xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000043fdd9 : dec dword ptr [rdi] ; xor eax, 0x4e ; add byte ptr [rax], al ; ret
0x000000000047a72d : dec ecx ; ret
0x0000000000439df1 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x00000000004629e6 : dec qword ptr [r8 + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x00000000004494e1 : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x000000000046dff2 : dec qword ptr [rcx + 0x29] ; ret 0x8d49
0x0000000000465a62 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000047aebc : div ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045a875 : div ecx ; add eax, r8d ; ret
0x000000000043edc1 : div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000004634c6 : div esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047aebb : div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040054c : enter -0x1401, -0x3b ; ret
0x000000000040053c : enter -0x2eff, 0x39 ; ret 0xffb8
0x000000000043dfb4 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000439cae : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000439dee : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000047969b : enter -0x74b8, 0x14 ; ret
0x000000000046dbd4 : enter -0x76b4, -7 ; mov r15, rax ; jmp 0x46dba8
0x0000000000440a44 : enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x0000000000452242 : enter -2, -1 ; mov rdi, rcx ; call 0x41e549
0x000000000041723a : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x000000000047aa2e : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000042324d : enter 0x31c3, -0x40 ; ret
0x00000000004c24fb : enter 0x380e, 0x41 ; ret
0x00000000004190cd : enter 0x4801, -0x77 ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000041b8c5 : enter 0x4801, -0x7d ; ret 0x4810
0x000000000046b556 : enter 0x4f75, -0xd ; ret
0x00000000004bb59c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000042ff36 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000421c81 : enter 0xf66, -0x15 ; ret
0x00000000004155d7 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000415ad3 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000040fcaa : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000443326 : fadd dword ptr [rax] ; leave ; ret
0x000000000041d36f : fadd dword ptr [rbp - 0x78] ; or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x0000000000412430 : fadd dword ptr [rcx + rcx*4 + 0x65] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000444ba2 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004c99e0 : fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x0000000000411ba7 : fadd dword ptr [rdi + rcx + 0x47] ; ret
0x00000000004c2d9c : fadd qword ptr [rax + rax] ; nop ; add bh, al ; call qword ptr [rcx]
0x000000000047bb99 : fadd st(1) ; call 0xffffffff8a09e4c4
0x000000000047bd00 : fadd st(1) ; call 0xffffffff8a09e62b
0x000000000047c519 : fadd st(1) ; call 0xffffffff8a09ee44
0x000000000047c676 : fadd st(1) ; call 0xffffffff8a09efa1
0x0000000000477d85 : fadd st(3) ; mov eax, 0xffffffff ; ret
0x000000000042fa81 : fbld tbyte ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049ef44 : fbstp tbyte ptr [rbp - 0x17] ; pop rbx ; ret
0x00000000004babd8 : fcmovb st(0), st(3) ; ret
0x000000000044f9ee : fcom dword ptr [rax - 0x3ece49f1] ; ret 0x4809
0x00000000004a0d07 : fcomi st(7) ; push rbx ; ret
0x0000000000469027 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041026a : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000041034f : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004406af : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041e8d6 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000004bb959 : fcomp dword ptr [rdx + 0x21] ; ret
0x000000000040197b : fcomp dword ptr [rsi - 0x7cb7ff94] ; ret
0x00000000004c869c : fcomp qword ptr [rbp + 0x7200000] ; cld ; call qword ptr [rax]
0x00000000004b9bc0 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000041e67f : fcos ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000004a3dc5 : fdiv st(0), st(0) ; jmp rax
0x0000000000440c53 : fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000440c60 : fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; jge 0x440c6e ; call rbx
0x00000000004409e9 : fdivp st(5) ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004409f6 : fdivp st(5) ; dec dword ptr [rcx - 0x75] ; jge 0x440a04 ; call rbx
0x00000000004b8f15 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000043dfb8 : fdivr st(7) ; ret
0x000000000043fe52 : fiadd dword ptr [rbx + 0x2a8247c] ; cmove eax, edx ; ret
0x0000000000464744 : fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x00000000004411a9 : ficomp word ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004bb7a6 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000444ab5 : fidivr dword ptr [rax + 1] ; ret
0x000000000045bb81 : fidivr word ptr [rcx] ; add byte ptr [r15 + r9 + 0x44], cl ; ret 0xf4c
0x000000000043e9df : fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x000000000042665e : fild word ptr [rbx] ; cmove rax, rdx ; ret
0x000000000045a868 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x000000000048a995 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x0000000000410fe0 : fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x00000000004051d8 : fimul dword ptr [rax - 0x7d] ; ret
0x0000000000427242 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x000000000048b1b2 : fimul word ptr [rax + 0x29] ; ret
0x00000000004121be : fimul word ptr [rax - 0x77] ; ret
0x000000000047352a : fimul word ptr [rax - 0x7d] ; ret
0x000000000047a85e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x47a8b8
0x000000000048036e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x4803c8
0x0000000000450420 : fimul word ptr [rcx + rcx*4 - 0x19] ; call r15
0x0000000000415645 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00000000004157b5 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000417ef8 : fisttp dword ptr [rax + 0x21] ; ret
0x00000000004684a2 : fisttp dword ptr [rax + 0xf] ; fucompp ; ret 0xfffe
0x000000000049ef41 : fisttp dword ptr [rax - 0x77] ; fbstp tbyte ptr [rbp - 0x17] ; pop rbx ; ret
0x00000000004744f9 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000479901 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000049b8e0 : fisttp dword ptr [rbx + 0x63] ; add al, 0x98 ; add rax, r8 ; jmp rax
0x000000000047991b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000441689 : fisttp dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000041ecfe : fisttp qword ptr [rax + 0x39] ; ret 0x860f
0x00000000004488e7 : fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x000000000041d109 : fisttp word ptr [rax + 9] ; ret 0x8948
0x000000000047999f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000452a24 : fisttp word ptr [rbp - 0x77] ; imul eax ; ret
0x000000000042bced : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000042fe51 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042fb51 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043323c : fisubr word ptr [rcx] ; ret 0xfec5
0x000000000047dad2 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000040102a : fld qword ptr [rax] ; add byte ptr [rcx], bh ; ret 0x860f
0x00000000004b9c01 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000491d5a : fld xword ptr [rsp - 0x18] ; ret
0x000000000044ffa9 : fldcw word ptr [rsp - 2] ; ret
0x0000000000426869 : fldenv [rsi + 0xf] ; je 0x4268c6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042d697 : fldenv [rsi + 0xf] ; je 0x42d6f4 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042fed1 : fldenv [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000426761 : fldenv [rsi + 0xf] ; xlatb ; ret
0x000000000047a904 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000041969f : fmul dword ptr [rax + 0x39] ; ret
0x000000000047eae1 : fmul dword ptr [rax + 0x39] ; ret 0x4976
0x000000000047ee06 : fmul dword ptr [rax + 0x39] ; ret 0x860f
0x000000000048f3e7 : fmul dword ptr [rax - 0x39] ; ret
0x0000000000458b81 : fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x0000000000411ca1 : fmul dword ptr [rax - 0x77] ; ret
0x0000000000484929 : fmul dword ptr [rax - 0x77] ; ret 0x348
0x000000000047d523 : fmul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0xf], cl ; ret 0x8349
0x0000000000469c8c : fmul dword ptr [rax - 0x7d] ; ret
0x000000000041232a : fmul dword ptr [rcx + 0x21] ; ret
0x000000000045b27e : fmul dword ptr [rcx + 0xf] ; ret
0x000000000049ab8d : fmul dword ptr [rcx + 9] ; ret 0x65e9
0x000000000049ae25 : fmul dword ptr [rcx + 9] ; ret 0x85e9
0x000000000045d2db : fmul dword ptr [rdi] ; ret
0x000000000048b0b7 : fmul qword ptr [rcx + 0x19] ; ret 0x8545
0x000000000048a73c : fmul qword ptr [rcx + 0xf] ; mov esi, 0xbe0f2414 ; ret 0x8349
0x0000000000422009 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000427abf : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000048f2e2 : fmul st(0) ; ret
0x000000000048f260 : fmulp st(1) ; ret
0x000000000040df75 : fpatan ; ret
0x00000000004a3d7d : fprem ; call rax
0x000000000042fc51 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b98e7 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004430ef : fstp qword ptr [rbx] ; add byte ptr [rax], al ; ret
0x00000000004b9c60 : fstp st(0) ; ret 0xde5d
0x000000000040197a : fstp st(0) ; sahf ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000040dff8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000042ff51 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000438b24 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004c8c9c : fsub qword ptr [rbx - 0x28900000] ; cld ; call qword ptr [rax]
0x000000000047cd42 : fsub qword ptr [rcx + rcx*4 + 4] ; and eax, 0x2d0 ; ret
0x000000000043e3cb : fsub qword ptr [rsi + 0xf] ; jmp 0x43e397
0x000000000042fd51 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000421d9c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000440a42 : fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000044254b : fsubp st(0) ; mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x000000000044294a : fsubp st(0) ; rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000441fb8 : fsubp st(0) ; ret 0xffe8
0x0000000000441eb8 : fsubp st(0) ; ret 0xffe9
0x00000000004bb938 : fucom st(5) ; loop 0x4bb991 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000047f285 : fucomi st(1) ; ret
0x000000000049ebb7 : fucomip st(0) ; ret
0x000000000045ef38 : fucomip st(0) ; ret 0xfe41
0x000000000041c710 : fucomip st(0) ; ret 0xffff
0x0000000000446182 : fucomip st(3) ; ret
0x00000000004684a6 : fucompp ; ret 0xfffe
0x000000000043f540 : hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000442fab : hlt ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004bee8a : hlt ; call qword ptr [rax]
0x00000000004bf3ca : hlt ; call qword ptr [rbx]
0x00000000004becaa : hlt ; call qword ptr [rdx]
0x00000000004409e8 : hlt ; fdivp st(5) ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004b9ce8 : hlt ; jmp 0x4b9cbd
0x0000000000400b85 : hlt ; leave ; ret
0x000000000043538a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004324ee : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043dac3 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000405988 : hlt ; out 1, eax ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004c86b4 : hlt ; popfq ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; cld ; call qword ptr [rdx]
0x0000000000443f68 : hlt ; push rdi ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004c01d1 : hlt ; ret
0x00000000004b9e23 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000043dac7 : hlt ; sub eax, edx ; ret
0x00000000004c6eb4 : hlt ; test dword ptr [rax], eax ; add byte ptr [rax - 0x2a], bl ; cli ; jmp rdi
0x00000000004a4259 : idiv al ; call rax
0x00000000004c1e82 : idiv bh ; ret
0x0000000000401a36 : idiv byte ptr [rdi + 1] ; call rax
0x0000000000447506 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x00000000004c1e81 : idiv dil ; ret
0x000000000049d98a : idiv edi ; dec dword ptr [rcx + 0x63] ; add byte ptr [r8 + 1], r9b ; ret
0x000000000049be0f : idiv edi ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004a034b : idiv edi ; nop dword ptr [rax] ; ret
0x00000000004a0308 : idiv edi ; nop word ptr [rax + rax] ; ret
0x00000000004a3862 : idiv edi ; push rax ; push rdi ; jmp qword ptr [rax]
0x00000000004a0d08 : idiv edi ; ret
0x0000000000410bb6 : idiv esi ; dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x0000000000443aeb : imul eax ; call rsi
0x00000000004425eb : imul eax ; out dx, eax ; ret 0xfffd
0x0000000000442de7 : imul eax ; ret
0x000000000040a018 : imul eax ; ret 0x148
0x000000000046b7c8 : imul eax ; ret 0xfff8
0x000000000044268d : imul eax ; ret 0xfffd
0x00000000004c51c5 : imul eax, dword ptr [rax], 0xf9ea7800 ; call qword ptr [rsi]
0x000000000044bcdd : imul eax, dword ptr [rcx], 0 ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x000000000043c621 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x0000000000447bbb : imul eax, dword ptr [rdx], 0 ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000047d10f : imul ecx ; ret
0x0000000000467684 : imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000043ba9c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x000000000046ee3f : in al, 0x25 ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000043fce8 : in al, 0x4f ; add byte ptr [rax], al ; ret
0x000000000042411c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000043ea58 : in al, 0x75 ; adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x00000000004862ca : in al, 0xf ; lahf ; ret 0x2941
0x0000000000457ef8 : in al, 0xf ; test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x000000000043536a : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004270ab : in al, 0xf3 ; ret
0x00000000004a3c95 : in al, 0xf8 ; jmp qword ptr [rax]
0x00000000004a3cb5 : in al, 0xf8 ; push rax ; in eax, 0xf8 ; call rax
0x0000000000468da3 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000004c31ac : in al, dx ; add byte ptr [rax], al ; and byte ptr [rbx], bl ; clc ; call qword ptr [rax]
0x00000000004239d0 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x00000000004a3c65 : in al, dx ; clc ; jmp qword ptr [rax]
0x00000000004a3d49 : in al, dx ; clc ; push qword ptr [rax - 0x12] ; clc ; jmp qword ptr [rax]
0x00000000004c71f1 : in al, dx ; cli ; jmp qword ptr [rdx]
0x0000000000491d59 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x00000000004324ea : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043576a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000465897 : in al, dx ; or al, ch ; ret 1
0x000000000041d3a7 : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004bf4ac : in al, dx ; or eax, dword ptr [rax] ; add al, dh ; sti ; hlt ; call qword ptr [rax]
0x0000000000455760 : in al, dx ; ret
0x00000000004c6fac : in al, dx ; xchg byte ptr [rax], al ; add byte ptr [rax - 0x26], al ; cli ; call rsi
0x00000000004bb37e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4bb311 ; ret 0x48f
0x00000000004bb37d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4bb312 ; ret 0x48f
0x00000000004b9a83 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000042716a : in eax, 0x48 ; mov eax, edi ; ret
0x0000000000452582 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000004b8d19 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x000000000045ac4b : in eax, 0xdf ; loopne 0x45abdc ; ret 0xe680
0x00000000004bb939 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000466b03 : in eax, 0xf ; je 0x466b28 ; add rax, 2 ; ret
0x00000000004353ea : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042cbca : in eax, 0xf3 ; ret
0x00000000004a3cb9 : in eax, 0xf8 ; call rax
0x00000000004bae01 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004a3ce9 : in eax, dx ; clc ; inc dword ptr [rax - 0x11] ; clc ; call rax
0x000000000049ef8f : in eax, dx ; jne 0x49ef71 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043e2e2 : in eax, dx ; lea rax, [rcx - 1] ; ret
0x00000000004322fa : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004357ea : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000495af0 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004790ab : in eax, dx ; or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], 0x89 ; ret 0xf749
0x000000000047e7b2 : in eax, dx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000415482 : in eax, dx ; ret
0x000000000043e432 : in eax, dx ; sub rax, 1 ; ret
0x000000000049d035 : in eax, dx ; xor eax, eax ; add rsp, 8 ; ret
0x000000000043e6f8 : inc bl ; cmp dl, 1 ; jb 0x43e70a ; mov byte ptr [rdi], cl ; ret
0x00000000004331c6 : inc bl ; jb 0x4331d6 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004270d1 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000004158f2 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000044dd86 : inc byte ptr [rbx] ; je 0x44dd95 ; pop rbx ; ret
0x00000000004a3ccb : inc dword ptr [rax + 0x10fff8ef] ; loop 0x4a3cd3 ; call rax
0x00000000004a3ff3 : inc dword ptr [rax + 0x1e] ; stc ; call rax
0x00000000004a3ddb : inc dword ptr [rax + 0x21] ; stc ; call rax
0x00000000004a3c8f : inc dword ptr [rax + 0x40fff8e2] ; in al, 0xf8 ; jmp qword ptr [rax]
0x00000000004be233 : inc dword ptr [rax + 0x4a] ; std ; call qword ptr [rax - 0x1f0002b4]
0x00000000004a385f : inc dword ptr [rax + 0x50fff7fe] ; push rdi ; jmp qword ptr [rax]
0x00000000004be1a7 : inc dword ptr [rax + 0x69] ; std ; call qword ptr [rax]
0x00000000004a3c4b : inc dword ptr [rax - 0x10] ; clc ; call rax
0x00000000004a3ceb : inc dword ptr [rax - 0x11] ; clc ; call rax
0x00000000004a3c47 : inc dword ptr [rax - 0x12] ; clc ; inc dword ptr [rax - 0x10] ; clc ; call rax
0x00000000004a3ce7 : inc dword ptr [rax - 0x13] ; clc ; inc dword ptr [rax - 0x11] ; clc ; call rax
0x00000000004a3c93 : inc dword ptr [rax - 0x1c] ; clc ; jmp qword ptr [rax]
0x00000000004a3dbf : inc dword ptr [rax - 0x25] ; clc ; call qword ptr [rax - 0x1f000724]
0x00000000004a3d6b : inc dword ptr [rax - 0x2c] ; clc ; call qword ptr [rax - 0x1f00072b]
0x00000000004be243 : inc dword ptr [rax - 0x2f0002ad] ; push rbp ; std ; jmp qword ptr [rax]
0x00000000004a39b7 : inc dword ptr [rax - 0x2f000776] ; mov edi, eax ; jmp qword ptr [rax]
0x00000000004a3be7 : inc dword ptr [rax - 0x3d] ; clc ; inc eax ; ret
0x00000000004a3bdf : inc dword ptr [rax - 0x3e] ; clc ; inc eax ; ret 0xfff8
0x000000000045382a : inc dword ptr [rax - 0x4d343] ; jmp qword ptr [rax]
0x00000000004559dc : inc dword ptr [rax - 0x50f43] ; jmp qword ptr [rax]
0x00000000004a39a7 : inc dword ptr [rax - 0x7b] ; clc ; call qword ptr [rax - 0x1f00077a]
0x00000000004a3cc7 : inc dword ptr [rax - 0x7f000713] ; out dx, eax ; clc ; call qword ptr [rax]
0x00000000004a423f : inc dword ptr [rax] ; adc edi, ecx ; push qword ptr [rax + 0x12] ; stc ; jmp rax
0x0000000000460583 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000430467 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000004a3fe3 : inc dword ptr [rax] ; and cl, bh ; call qword ptr [rax + 0x20fff91f]
0x00000000004a39df : inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x00000000004a437f : inc dword ptr [rax] ; jnp 0x4a4380 ; jmp qword ptr [rax]
0x00000000004a4323 : inc dword ptr [rax] ; jns 0x4a4324 ; call qword ptr [rax]
0x00000000004a435f : inc dword ptr [rax] ; jp 0x4a4360 ; jmp qword ptr [rax]
0x00000000004a3d33 : inc dword ptr [rax] ; jrcxz 0x4a3d33 ; call rax
0x00000000004a3aeb : inc dword ptr [rax] ; ret 0xfff8
0x00000000004a3d8f : inc dword ptr [rax] ; retf 0xfff8 ; ror ah, 1 ; clc ; jmp qword ptr [rax]
0x00000000004a3ab7 : inc dword ptr [rax] ; stosd dword ptr [rdi], eax ; clc ; jmp qword ptr [rax]
0x000000000047171f : inc dword ptr [rbp + 0x5b0378c0] ; ret
0x0000000000473930 : inc dword ptr [rbp - 0x76b48a40] ; ret
0x000000000045b750 : inc dword ptr [rbx + 0x394401c3] ; jrcxz 0x45b7d5 ; ret
0x000000000041aca5 : inc dword ptr [rbx + rcx*4 + 0x15] ; ret
0x0000000000460977 : inc dword ptr [rbx - 0x10ab43] ; jmp qword ptr [rax]
0x000000000040d98a : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000049d4c2 : inc dword ptr [rbx - 0x38b7f808] ; ret 0xffff
0x000000000044ed17 : inc dword ptr [rbx - 0x76be0008] ; ret
0x0000000000468aec : inc dword ptr [rbx - 0x7bf0fd08] ; ret
0x0000000000407a42 : inc dword ptr [rbx - 0x7bf0fe08] ; ret
0x000000000043edbf : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043ecef : inc dword ptr [rbx] ; pop rbx ; ret
0x000000000045e649 : inc dword ptr [rcx + 0xf] ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x0000000000477d50 : inc dword ptr [rcx + rcx*4 - 0x40] ; sub eax, ecx ; ret
0x000000000044ed1a : inc dword ptr [rcx - 0x77] ; ret
0x00000000004c99dd : inc dword ptr [rcx] ; or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000004be7b3 : inc dword ptr [rdi + rdx*8] ; std ; call rsp
0x00000000004801f0 : inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a3ec7 : inc dword ptr [rdx + 0x1c] ; stc ; call rdx
0x000000000042c4cd : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000004a3e23 : inc dword ptr [rsi + 0x20] ; stc ; call rsi
0x00000000004a3e13 : inc dword ptr [rsi] ; and bh, cl ; call qword ptr [rsi + 0x26fff921]
0x00000000004a43cf : inc eax ; jg 0x4a43d0 ; call rax
0x00000000004a43a7 : inc eax ; jle 0x4a43a8 ; call rax
0x00000000004a4353 : inc eax ; jns 0x4a4354 ; jmp rax
0x00000000004a4377 : inc eax ; jp 0x4a4378 ; jmp rax
0x00000000004a4313 : inc eax ; js 0x4a4314 ; call rax
0x00000000004be253 : inc eax ; pop rsp ; std ; call qword ptr [rax]
0x00000000004a3beb : inc eax ; ret
0x00000000004a3be3 : inc eax ; ret 0xfff8
0x00000000004a3d9f : inc eax ; sar al, 1 ; call qword ptr [rax]
0x00000000004a3dfb : inc eax ; sbb eax, 0x1d50fff9 ; stc ; jmp rax
0x00000000004a3aaf : inc eax ; test al, 0xf8 ; jmp rax
0x000000000046529c : inc ebx ; nop ; xor eax, eax ; ret
0x000000000043dfb9 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000413518 : inc ebx ; nop word ptr [rax + rax] ; ret
0x0000000000477d8b : inc ebx ; sub eax, edx ; ret
0x0000000000460732 : inc edi ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x00000000004816f6 : inc esi ; add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x0000000000402ffb : insb byte ptr [rdi], dx ; add bh, bh ; sar dword ptr [rdi + 0x6cbfe0], cl ; call rbx
0x000000000040197d : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041e39e : insb byte ptr [rdi], dx ; add byte ptr [rbp - 0x42], dh ; ret
0x00000000004711c5 : insb byte ptr [rdi], dx ; add byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000047b2c6 : insb byte ptr [rdi], dx ; add cl, ch ; ret
0x000000000047c141 : insb byte ptr [rdi], dx ; and al, 0x78 ; call r12
0x0000000000491d5b : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000044ffaa : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x00000000004a3969 : insb byte ptr [rdi], dx ; clc ; call rax
0x00000000004bb93e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004bcb78 : insb byte ptr [rdi], dx ; ret
0x00000000004108e0 : insb byte ptr [rdi], dx ; ret 1
0x0000000000487dd6 : insb byte ptr [rdi], dx ; stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000000004be1b1 : insb byte ptr [rdi], dx ; std ; call rax
0x00000000004be7b0 : insb byte ptr [rdi], dx ; xlatb ; std ; inc dword ptr [rdi + rdx*8] ; std ; call rsp
0x0000000000495370 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004460be : insd dword ptr [rdi], dx ; add byte ptr [rdi + 0x6cc6d0], r15b ; call rax
0x0000000000496270 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000462f51 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x00000000004a396d : insd dword ptr [rdi], dx ; clc ; push qword ptr [rax + 0x6f] ; clc ; call qword ptr [rax]
0x00000000004bb93f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004b9ced : insd dword ptr [rdi], dx ; ret 0xb9b9
0x00000000004babff : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000478f53 : int 0x48
0x00000000004badc7 : int 0x80
0x00000000004c2479 : int 0xa
0x0000000000488d9f : int 0xfc
0x000000000045a876 : int1 ; add eax, r8d ; ret
0x00000000004452ec : int1 ; call rbx
0x000000000047171d : int1 ; cld ; inc dword ptr [rbp + 0x5b0378c0] ; ret
0x00000000004742c4 : int1 ; cmp rcx, rdx ; jne 0x4742a7 ; ret
0x000000000043e67b : int1 ; jl 0x43e6cc ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043e69c : int1 ; jl 0x43e6ed ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043e6af : int1 ; jl 0x43e700 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043e784 : int1 ; jl 0x43e7d5 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043e7dc : int1 ; jl 0x43e82d ; adc dword ptr [rsi + 3], edx ; ret
0x000000000043e879 : int1 ; jl 0x43e8ca ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000481003 : int1 ; jmp 0x480fca
0x0000000000481002 : int1 ; jmp 0x480fcb
0x000000000049a5e7 : int1 ; jmp rcx
0x00000000004351db : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000432abf : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043da93 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000043edc2 : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000004bb316 : int1 ; ret 0x5803
0x0000000000469e2b : int1 ; sub ah, byte ptr [rsi] ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x000000000043da97 : int1 ; sub eax, edx ; ret
0x0000000000452248 : iretd ; call 0x41e543
0x00000000004a3d9d : iretd ; clc ; inc eax ; sar al, 1 ; call qword ptr [rax]
0x000000000040dfce : ja 0x40dff3 ; ret
0x0000000000427032 : ja 0x427043 ; ret
0x000000000042cb58 : ja 0x42cb52 ; ret 0x7401
0x00000000004365a3 : ja 0x4365a7 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000043bbe7 : ja 0x43bbed ; ret
0x000000000043bc03 : ja 0x43bc0d ; mov dword ptr [rdi], ecx ; ret
0x000000000043bc44 : ja 0x43bc53 ; mov qword ptr [rdi], rcx ; ret
0x000000000043bcc9 : ja 0x43bcdd ; ret
0x000000000043bd1f : ja 0x43bd37 ; ret
0x000000000043bda1 : ja 0x43bdbd ; ret
0x000000000043c207 : ja 0x43c211 ; lea rax, [rdi + 2] ; ret
0x000000000043c223 : ja 0x43c231 ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x000000000043c274 : ja 0x43c287 ; mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x000000000043c359 : ja 0x43c371 ; lea rax, [rdi + 0x10] ; ret
0x000000000043c3cf : ja 0x43c3eb ; lea rax, [rdi + 0x14] ; ret
0x000000000043c451 : ja 0x43c471 ; lea rax, [rdi + 0x18] ; ret
0x000000000043fc4b : ja 0x43fc53 ; ret
0x000000000043fc9a : ja 0x43fca3 ; ret
0x000000000043fe29 : ja 0x43fe63 ; ret
0x000000000043fecd : ja 0x43ff17 ; add rsp, 0x60 ; pop rbx ; ret
0x00000000004502d6 : ja 0x4502e3 ; ret
0x000000000045a867 : ja 0x45a84e ; mov eax, r8d ; ret
0x000000000046ac5d : ja 0x46ac6b ; pop rbx ; ret
0x000000000046afdb : ja 0x46afe3 ; ret
0x000000000046b030 : ja 0x46b03b ; ret
0x000000000046b1e0 : ja 0x46b20b ; ret
0x000000000046c175 : ja 0x46c12c ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000004793ce : ja 0x479420 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000484fc4 : ja 0x484f51 ; ret 0x348
0x000000000048793b : ja 0x4878c8 ; ret 0x348
0x00000000004bb384 : ja 0x4bb30b ; ret 0x48f
0x0000000000413968 : jae 0x413975 ; movzx eax, byte ptr [rax] ; ret
0x000000000041723b : jae 0x417265 ; movzx eax, byte ptr [rax] ; ret
0x0000000000444ab4 : jae 0x444a97 ; mov eax, 1 ; ret
0x000000000043fbed : jae 0x444cd6 ; ret
0x00000000004749eb : jae 0x474995 ; xor eax, eax ; ret
0x00000000004b9942 : jae 0x4b9924 ; jo 0x4b99c0 ; mov ebp, 0xfb67d10d ; ret
0x00000000004ba7de : jae 0x4ba7b9 ; push rsi ; pop rdx ; je 0x4ba7ae ; ret 0xacfc
0x00000000004bf749 : jae 0x4bf761 ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000004c53af : jae 0x4c53bd ; ret
0x0000000000430aca : jb 0x430ada ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430c1a : jb 0x430c2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430d6a : jb 0x430d7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430eba : jb 0x430eca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043100a : jb 0x43101a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043115a : jb 0x43116a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004312aa : jb 0x4312ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004313fa : jb 0x43140a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043154a : jb 0x43155a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043169a : jb 0x4316aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004317ea : jb 0x4317fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043193a : jb 0x43194a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431a8a : jb 0x431a9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431bda : jb 0x431bea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431d2a : jb 0x431d3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004330c1 : jb 0x4330aa ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000433124 : jb 0x43310d ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x00000000004331c8 : jb 0x4331d4 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043617e : jb 0x43618a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043e567 : jb 0x43e577 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043e573 : jb 0x43e589 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043e583 : jb 0x43e58b ; mov byte ptr [rdi], cl ; ret
0x000000000043e6e5 : jb 0x43e6f4 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043e6f0 : jb 0x43e703 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043e6fd : jb 0x43e705 ; mov byte ptr [rdi], cl ; ret
0x0000000000464fec : jb 0x464fe5 ; lea eax, [rdx + rdi] ; ret
0x000000000049b283 : jb 0x49b28d ; add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000041568b : jbe 0x41562b ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000426976 : jbe 0x4269b5 ; add rax, rdi ; ret
0x0000000000426986 : jbe 0x4269b7 ; lea rax, [rdi + rax + 0x10] ; ret
0x0000000000426996 : jbe 0x4269b7 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000004269a6 : jbe 0x4269b7 ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000042cbc3 : jbe 0x42cbde ; lea rdi, [rdi + 0x10] ; jne 0x42cbb9 ; ret
0x000000000045b032 : jbe 0x45afbf ; ret 0x8166
0x000000000046451a : jbe 0x464490 ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000004785df : jbe 0x4785ea ; ret
0x000000000049e116 : jbe 0x49e128 ; mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x00000000004a3b5c : jbe 0x4a3b28 ; clc ; push qword ptr [rsi - 0x3e] ; clc ; push rsi ; ret 0xfff8
0x00000000004a3b60 : jbe 0x4a3b29 ; clc ; push rsi ; ret 0xfff8
0x00000000004a3b68 : jbe 0x4a3b32 ; clc ; push rsi ; ret
0x00000000004be1c5 : jbe 0x4be1ca ; push qword ptr [rax] ; js 0x4be1ce ; call qword ptr [rax]
0x00000000004008dd : je 0x4008f8 ; pop rbp ; mov edi, 0x6cbb50 ; jmp rax
0x000000000040092b : je 0x400940 ; pop rbp ; mov edi, 0x6cbb50 ; jmp rax
0x000000000040095a : je 0x40096a ; mov edi, 0x4be8c0 ; call rax
0x00000000004009a8 : je 0x40099a ; call rax
0x0000000000400fc4 : je 0x400ff2 ; adc byte ptr [rbx + 0x410c247c], cl ; call rsp
0x0000000000401a33 : je 0x401a47 ; xor esi, esi ; mov edi, 1 ; call rax
0x0000000000402579 : je 0x40258d ; lea rdi, [rbx + 0x80] ; call rax
0x00000000004027c5 : je 0x4027d9 ; lea rdi, [rbx + 0x80] ; call rax
0x00000000004030a4 : je 0x4030b4 ; mov edi, 0x6cc060 ; call rax
0x00000000004032f3 : je 0x40330d ; mov edi, 0x6cbfe0 ; call rax
0x00000000004034e7 : je 0x403501 ; mov edi, 0x6cbfe0 ; call rax
0x0000000000403902 : je 0x403912 ; mov edi, 0x6cc0a0 ; call rax
0x000000000040394a : je 0x40395c ; mov edi, 0x6cc0a0 ; call r15
0x0000000000403a4a : je 0x403a5a ; mov edi, 0x6cc0a0 ; call rax
0x00000000004100ee : je 0x4100fd ; mov eax, edx ; pop rbx ; ret
0x0000000000414a7b : je 0x414a21 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000415653 : je 0x41560d ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004157c3 : je 0x41577d ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000415935 : je 0x415942 ; ret
0x0000000000415967 : je 0x415976 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041648a : je 0x416495 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000041802d : je 0x41824e ; mov rdx, rax ; jmp 0x418058
0x00000000004185fa : je 0x418601 ; pop rbx ; ret
0x00000000004186d7 : je 0x4186dd ; call rax
0x00000000004194c4 : je 0x4194d1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041e9c2 : je 0x41e9eb ; call rax
0x000000000041f3b2 : je 0x41f3de ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000041f8f8 : je 0x41f8fe ; call rax
0x00000000004218f9 : je 0x421902 ; ret
0x0000000000421b82 : je 0x421b97 ; mov eax, 0x16 ; ret
0x0000000000421bd1 : je 0x421be3 ; lea rax, [rip + 0x1a966] ; ret
0x0000000000423303 : je 0x4232cd ; lea r10, [r10 + r9] ; jmp r10
0x0000000000423fd5 : je 0x423fdd ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000424044 : je 0x424056 ; lea rax, [rip + 0x14853] ; ret
0x00000000004241b4 : je 0x4241be ; bsf eax, edx ; ret
0x00000000004241b4 : je 0x4241bf ; bsf eax, edx ; ret
0x000000000042425d : je 0x424275 ; bsf rax, rdx ; ret
0x000000000042425d : je 0x424276 ; bsf rax, rdx ; ret
0x00000000004241fc : je 0x424289 ; bsf rax, rdx ; ret
0x000000000042686c : je 0x4268c3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004269de : je 0x4269f1 ; lea rax, [rip + 0x8449] ; ret
0x0000000000426fc0 : je 0x426fd2 ; lea rax, [rip + 0x17647] ; ret
0x0000000000427574 : je 0x427586 ; lea rax, [rip + 0x12ad3] ; ret
0x0000000000429a43 : je 0x429a0d ; lea r10, [r10 + r9] ; jmp r10
0x000000000042b5d3 : je 0x42b59d ; lea r10, [r10 + r9] ; jmp r10
0x000000000042d69a : je 0x42d6f1 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042d751 : je 0x42d769 ; bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x00000000004301c7 : je 0x4301d1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043ecfd : je 0x43ecc6 ; movzx eax, dl ; pop rbx ; ret
0x000000000043ecd5 : je 0x43ecc8 ; movzx eax, cl ; pop rbx ; ret
0x000000000043ecfd : je 0x43ecc8 ; movzx eax, dl ; pop rbx ; ret
0x000000000043ee0e : je 0x43ee1c ; xor eax, eax ; ret
0x000000000043ee09 : je 0x43ee29 ; cmp eax, 2 ; je 0x43ee21 ; xor eax, eax ; ret
0x000000000043ee5d : je 0x43ee43 ; ret
0x000000000043ef48 : je 0x43ef58 ; mov edi, 0x6cc720 ; call rax
0x000000000043ef60 : je 0x43ef70 ; mov edi, 0x6cc720 ; call rax
0x000000000043f2c0 : je 0x43f2a1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000044070a : je 0x440711 ; ret
0x0000000000441a50 : je 0x441a62 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000004431b9 : je 0x4431be ; ret
0x000000000044321d : je 0x443222 ; ret
0x00000000004447c3 : je 0x4447d3 ; mov edi, 0x6cb140 ; call rax
0x0000000000444951 : je 0x444961 ; mov edi, 0x6cb140 ; call rax
0x0000000000444ad8 : je 0x444ae2 ; ret
0x0000000000444af4 : je 0x444b09 ; mov dword ptr [rip + 0x28549c], edx ; pop rbx ; ret
0x00000000004452e7 : je 0x445313 ; sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x00000000004493e4 : je 0x449413 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000044dd88 : je 0x44dd93 ; pop rbx ; ret
0x000000000044dd83 : je 0x44dd98 ; cmp esi, 3 ; je 0x44dd98 ; pop rbx ; ret
0x000000000044e310 : je 0x44e320 ; mov edi, 0x6cc720 ; call rax
0x000000000044e33f : je 0x44e357 ; mov edi, 0x6cc720 ; call rax
0x000000000044e440 : je 0x44e446 ; call rax
0x000000000044e49f : je 0x44e4af ; mov edi, 0x6cc720 ; call rax
0x000000000044e618 : je 0x44e62f ; mov edi, 0x6cc720 ; call rax
0x000000000044e8f8 : je 0x44e908 ; mov edi, 0x6cc720 ; call rax
0x000000000044e9fc : je 0x44ea02 ; call rax
0x000000000044f8bb : je 0x44f8c1 ; call rax
0x000000000044fe7b : je 0x44fe83 ; ret
0x0000000000451452 : je 0x45147f ; and byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x00000000004632c8 : je 0x4632f2 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000463f56 : je 0x463fa6 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000463f55 : je 0x463fa7 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000464d3c : je 0x464d42 ; ret
0x0000000000464d6a : je 0x464dcc ; pop rbp ; pop r12 ; ret
0x0000000000464e0f : je 0x464e71 ; pop rbp ; pop r12 ; ret
0x0000000000464f4d : je 0x464f58 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464f91 : je 0x464f9c ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000465b6c : je 0x465b95 ; bsf rax, rdx ; ret
0x0000000000465b6c : je 0x465b96 ; bsf rax, rdx ; ret
0x0000000000465afc : je 0x465ba9 ; bsf rax, rdx ; ret
0x0000000000466ae9 : je 0x466b09 ; mov cl, dl ; and cl, 0xf ; je 0x466b19 ; ret
0x0000000000466af0 : je 0x466b12 ; ret
0x0000000000466b05 : je 0x466b26 ; add rax, 2 ; ret
0x0000000000466e8b : je 0x466eb4 ; call rbx
0x0000000000466f33 : je 0x466f5c ; call rbx
0x0000000000467318 : je 0x467325 ; test edx, edx ; jne 0x467317 ; ret
0x000000000046b565 : je 0x46b554 ; ret
0x000000000046e04a : je 0x46dfd4 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x0000000000471154 : je 0x471164 ; mov edi, 0x6cb100 ; call rax
0x0000000000475148 : je 0x475158 ; mov edi, 0x6cb140 ; call rax
0x0000000000475170 : je 0x475180 ; mov edi, 0x6cb140 ; call rax
0x00000000004751e6 : je 0x4751f6 ; mov edi, 0x6cb140 ; call rax
0x000000000047670b : je 0x47671f ; mov rdi, qword ptr [rbp - 0x88] ; call rax
0x000000000047672e : je 0x47677a ; shl rdx, 5 ; add rdx, rax ; jmp 0x476751
0x0000000000476cfc : je 0x476d21 ; pop rbx ; mov edi, 0x6cb140 ; jmp rax
0x0000000000476cb3 : je 0x476d27 ; mov edi, 0x6cb140 ; call rax
0x0000000000476d17 : je 0x476d80 ; pop rbx ; ret
0x0000000000476e54 : je 0x476e5b ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000047704f : je 0x477056 ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000047866e : je 0x478639 ; mov edi, 0x6cb140 ; call rax
0x000000000047864f : je 0x47867d ; or byte ptr [rdi + 0x6cb140], bh ; call rax
0x00000000004787b6 : je 0x4787c2 ; ret
0x00000000004787cc : je 0x4787dc ; mov edi, 0x6cb140 ; call rax
0x000000000047ac1a : je 0x47ac25 ; mov eax, edx ; pop rbx ; ret
0x000000000047b512 : je 0x47b526 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047c17c : je 0x47c1ab ; js 0x47c1d1 ; lea edi, [rsp + 0x78] ; call r12
0x000000000047ebe8 : je 0x47ebf8 ; mov edi, 0x6cb140 ; call rax
0x000000000047ec14 : je 0x47ec24 ; mov edi, 0x6cb140 ; call rax
0x000000000047eeba : je 0x47eece ; mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000487beb : je 0x487b78 ; ret 0x348
0x000000000048836b : je 0x48837b ; mov edi, 0x6cb140 ; call rax
0x0000000000488392 : je 0x4883a2 ; mov edi, 0x6cb140 ; call rax
0x0000000000488411 : je 0x488421 ; mov edi, 0x6cb140 ; call rax
0x000000000048843a : je 0x48844a ; mov edi, 0x6cb140 ; call rax
0x0000000000494573 : je 0x49453d ; lea r10, [r10 + r9] ; jmp r10
0x0000000000496523 : je 0x4964ed ; lea r10, [r10 + r9] ; jmp r10
0x000000000049a355 : je 0x49a333 ; ret
0x000000000049c620 : je 0x49c5d8 ; add rsp, 0x18 ; ret
0x000000000049c5d7 : je 0x49c649 ; add rsp, 0x18 ; ret
0x000000000049e513 : je 0x49e524 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e529 ; ret
0x000000000049e6cd : je 0x49e737 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049eb48 : je 0x49eb53 ; ret
0x000000000049edba : je 0x49edca ; mov edi, 0x6cb100 ; call rax
0x000000000049ee7b : je 0x49ee8b ; mov edi, 0x6cb100 ; call rax
0x00000000004a0b1e : je 0x4a0b29 ; call rax
0x00000000004b9aa8 : je 0x4b9a73 ; xor al, 0xd8 ; ret
0x00000000004b9ce7 : je 0x4b9ce4 ; jmp 0x4b9cbe
0x00000000004ba7e2 : je 0x4ba7aa ; ret 0xacfc
0x00000000004bf742 : je 0x4bf750 ; ret
0x0000000000427042 : jg 0x427094 ; adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000427167 : jg 0x427180 ; jne 0x427157 ; mov rax, rdi ; ret
0x000000000042cbc7 : jg 0x42cbde ; jne 0x42cbb5 ; ret
0x00000000004326a9 : jg 0x4326fc ; ret
0x000000000043272f : jg 0x43277a ; ret
0x00000000004328a9 : jg 0x4328fc ; ret 0x894c
0x000000000043292f : jg 0x43297a ; ret 0x894c
0x00000000004330c0 : jg 0x43313c ; loopne 0x433091 ; jp 0x43314d ; jp 0x4330c0 ; ret
0x000000000043316c : jg 0x43317d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00000000004351b8 : jg 0x435209 ; loope 0x4351b7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043522f : jg 0x43527a ; ret 0xff2
0x0000000000435248 : jg 0x435299 ; loop 0x435247 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004352bf : jg 0x43530a ; ret
0x00000000004352d8 : jg 0x435329 ; jrcxz 0x4352d7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435368 : jg 0x4353b9 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004353e8 : jg 0x435439 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435468 : jg 0x4354b9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004354e8 : jg 0x435539 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435568 : jg 0x4355b9 ; call 0x4fc2656a
0x00000000004355e8 : jg 0x435639 ; jmp 0x4fc265ea
0x0000000000435768 : jg 0x4357b9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004357e8 : jg 0x435839 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435878 : jg 0x4358c9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004358f8 : jg 0x435949 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043596c : jg 0x435977 ; ret
0x00000000004359c6 : jg 0x4359d9 ; ret
0x00000000004359c1 : jg 0x435a11 ; psllq mm1, qword ptr [rdi] ; jg 0x4359de ; ret
0x0000000000435a36 : jg 0x435a49 ; ret
0x0000000000435aa6 : jg 0x435ab9 ; ret
0x0000000000435aa1 : jg 0x435af1 ; or eax, 0xf7f0ff3 ; ret
0x0000000000435b16 : jg 0x435b29 ; ret
0x0000000000435b11 : jg 0x435b61 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435b86 : jg 0x435b99 ; ret
0x0000000000435b81 : jg 0x435bd1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435bf6 : jg 0x435c09 ; ret
0x0000000000435bf1 : jg 0x435c41 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435c66 : jg 0x435c79 ; ret
0x0000000000435c61 : jg 0x435cb1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435cd6 : jg 0x435ce9 ; ret
0x0000000000435cd1 : jg 0x435d21 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435d46 : jg 0x435d59 ; ret
0x0000000000435db6 : jg 0x435dc9 ; ret
0x0000000000435e26 : jg 0x435e39 ; ret
0x0000000000435e21 : jg 0x435e71 ; add eax, 0xf7f0ff3 ; ret
0x0000000000435e96 : jg 0x435ea9 ; ret
0x0000000000435e91 : jg 0x435ee1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435f06 : jg 0x435f19 ; ret
0x0000000000435f01 : jg 0x435f51 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435f76 : jg 0x435f89 ; ret
0x0000000000435f71 : jg 0x435fc1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435fe6 : jg 0x435ff9 ; ret
0x0000000000435fe1 : jg 0x436031 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436124 : jg 0x436135 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000436138 : jg 0x436149 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000004365aa : jg 0x4365a6 ; ret
0x000000000043bcb6 : jg 0x43bcc1 ; ret
0x000000000043bcc6 : jg 0x43bcd4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043bcda : jg 0x43bce9 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043bcf9 : jg 0x43bd07 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043bd09 : jg 0x43bd17 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043bd19 : jg 0x43bd2a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043bd3a : jg 0x43bd49 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043bd5a : jg 0x43bd69 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043bd7a : jg 0x43bd89 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043bd9a : jg 0x43bdac ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043bddd : jg 0x43bdef ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043bdfd : jg 0x43be0f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043be1b : jg 0x43be2b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043be3b : jg 0x43be4b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043be5b : jg 0x43be6b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043be7b : jg 0x43be8b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043c346 : jg 0x43c355 ; lea rax, [rdi + 0xf] ; ret
0x000000000043c356 : jg 0x43c368 ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x000000000043c389 : jg 0x43c39b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x000000000043c3a9 : jg 0x43c3bb ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x000000000043c4cf : jg 0x43c52f ; or eax, 0x1c478d48 ; ret
0x000000000043e542 : jg 0x43e552 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043e5e3 : jg 0x43e634 ; loopne 0x43e638 ; sub eax, edx ; vzeroupper ; ret
0x000000000043e6c7 : jg 0x43e6d7 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043e6bd : jg 0x43e6dd ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043ec90 : jg 0x43eccd ; ret 0x2b77
0x000000000044470d : jg 0x44473b ; add cl, ch ; ret
0x000000000044a4ff : jg 0x44a48c ; ret 0x5c77
0x000000000047392d : jg 0x4738fe ; std ; inc dword ptr [rbp - 0x76b48a40] ; ret
0x000000000047f621 : jg 0x47f627 ; add byte ptr [rcx], bh ; ret
0x0000000000491d34 : jg 0x491d41 ; ret 0x5488
0x00000000004a43d1 : jg 0x4a43ce ; call rax
0x00000000004a43cd : jg 0x4a43ce ; inc eax ; jg 0x4a43d2 ; call rax
0x00000000004a43d9 : jg 0x4a43d6 ; call qword ptr [rax]
0x00000000004a43d5 : jg 0x4a43d6 ; push rax ; jg 0x4a43da ; call qword ptr [rax]
0x00000000004be1d9 : jg 0x4be1da ; jmp rax
0x000000000040e40e : jge 0x40e413 ; call r14
0x000000000044064f : jge 0x44069b ; add byte ptr [rax], al ; ret
0x000000000044084f : jge 0x440899 ; add byte ptr [rax], al ; ret
0x00000000004409fb : jge 0x4409ff ; call rbx
0x0000000000440b22 : jge 0x440b26 ; call rbx
0x0000000000440b30 : jge 0x440b34 ; call rbx
0x0000000000440c5f : jge 0x440c45 ; std ; dec dword ptr [rcx - 0x75] ; jge 0x440c6f ; call rbx
0x0000000000440c65 : jge 0x440c69 ; call rbx
0x0000000000440dd5 : jge 0x440dd9 ; call rbx
0x0000000000440de3 : jge 0x440de7 ; call rbx
0x0000000000441236 : jge 0x441201 ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000004425f3 : jge 0x4425f7 ; call rbx
0x000000000044271b : jge 0x44271f ; call rbx
0x000000000044285e : jge 0x442862 ; call rbx
0x000000000044295f : jge 0x442963 ; call rbx
0x000000000044297b : jge 0x44297f ; call rbx
0x0000000000454114 : jge 0x45414b ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000466cc6 : jge 0x466ccb ; call r12
0x000000000049c9ef : jge 0x49c9ec ; leave ; ret
0x000000000049ca87 : jge 0x49ca8a ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049cb1b : jge 0x49cb18 ; leave ; ret
0x000000000049cb67 : jge 0x49cb6a ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049cc30 : jge 0x49cc33 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049ccbf : jge 0x49ccbc ; leave ; ret
0x000000000049cd10 : jge 0x49cd13 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049f120 : jge 0x49f135 ; call r12
0x00000000004c4cc9 : jge 0x4c4cc6 ; call rdx
0x0000000000400fc8 : jl 0x400ff2 ; or al, 0x41 ; call rsp
0x000000000040101c : jl 0x40104a ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000041482b : jl 0x414876 ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041bb15 : jl 0x41bb40 ; or byte ptr [rax + 1], cl ; ret 0x8948
0x000000000041bc4c : jl 0x41bc77 ; or byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004360a4 : jl 0x4360f3 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000004360e0 : jl 0x43612f ; adc dword ptr [rcx - 1], ebx ; ret
0x00000000004362de : jl 0x43632d ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000436445 : jl 0x436494 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000004365a7 : jl 0x4365f6 ; adc dword ptr [rdi - 8], edi ; ret
0x000000000043e67c : jl 0x43e6cb ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043e69d : jl 0x43e6ec ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043e6b0 : jl 0x43e6ff ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043e785 : jl 0x43e7d4 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043e7dd : jl 0x43e82c ; adc dword ptr [rsi + 3], edx ; ret
0x000000000043e87a : jl 0x43e8c9 ; adc dword ptr [rsi + 7], edx ; ret
0x000000000043fe54 : jl 0x43fe80 ; test al, 2 ; cmove eax, edx ; ret
0x000000000043fe54 : jl 0x43fe81 ; test al, 2 ; cmove eax, edx ; ret
0x0000000000440e90 : jl 0x440ebe ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000447cb6 : jl 0x447ce4 ; adc byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x0000000000448619 : jl 0x448647 ; adc byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x00000000004489ff : jl 0x448a2d ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x00000000004493e9 : jl 0x449413 ; call r15
0x0000000000449790 : jl 0x4497be ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000044a4a9 : jl 0x44a4d7 ; xor byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x000000000044b3b5 : jl 0x44b3e3 ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000044d968 : jl 0x44d993 ; sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x0000000000450452 : jl 0x45047d ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x0000000000452c6c : jl 0x452c97 ; and byte ptr [rax + 1], cl ; ret
0x0000000000459308 : jl 0x4592d2 ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000045ceec : jl 0x45cf17 ; and byte ptr [rax + 1], cl ; ret
0x0000000000464cb5 : jl 0x464c51 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000473939 : jl 0x473968 ; cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x000000000047bcad : jl 0x47bcd7 ; js 0x47bcf6 ; call rsp
0x000000000047bfc2 : jl 0x47bfec ; js 0x47c00b ; call rsp
0x000000000047c181 : jl 0x47c1ab ; js 0x47c1ca ; call rsp
0x000000000047c389 : jl 0x47c3b3 ; js 0x47c3d2 ; call rsp
0x000000000049b042 : jl 0x49b06d ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000000004c64e5 : jl 0x4c64ed ; add byte ptr [rax], bl ; push rax ; cli ; jmp rsp
0x00000000004c6739 : jl 0x4c6737 ; call rax
0x00000000004241fe : jle 0x424207 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000004241fe : jle 0x424208 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000044ddd2 : jle 0x44dde5 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000047cd1d : jle 0x47cd2b ; ret
0x00000000004a43a9 : jle 0x4a43a6 ; call rax
0x00000000004a43a5 : jle 0x4a43a6 ; inc eax ; jle 0x4a43aa ; call rax
0x00000000004a43ad : jle 0x4a43aa ; jmp rax
0x00000000004a43b5 : jle 0x4a43b2 ; call qword ptr [rax]
0x00000000004a43b1 : jle 0x4a43b2 ; push rax ; jle 0x4a43b6 ; call qword ptr [rax]
0x00000000004c6735 : jle 0x4c673d ; add byte ptr [rax], bh ; jl 0x4c673b ; call rax
0x00000000004007bd : jmp 0x400782
0x0000000000401411 : jmp 0x401371
0x00000000004024a2 : jmp 0x4024b8
0x0000000000402852 : jmp 0x402601
0x0000000000404b3e : jmp 0x4040e0
0x00000000004120c3 : jmp 0x411fcb
0x000000000041aca1 : jmp 0x41a6d2
0x000000000041b6cd : jmp 0x41abdc
0x000000000041b6de : jmp 0x41b4f9
0x0000000000421c84 : jmp 0x421c4a
0x0000000000421dd8 : jmp 0x421d9d
0x000000000042d7ac : jmp 0x42d772
0x000000000042d8f8 : jmp 0x42d8bd
0x000000000043e28e : jmp 0x43e254
0x000000000043e35f : jmp 0x43e325
0x000000000043e3ce : jmp 0x43e394
0x000000000043ff63 : jmp 0x43fed6
0x0000000000440803 : jmp 0x4407a6
0x000000000044460c : jmp 0x4440ef
0x0000000000446183 : jmp 0x446149
0x00000000004465fe : jmp 0x4465c3
0x000000000044fdbf : jmp 0x44f9e1
0x0000000000450c51 : jmp 0x450c5b
0x0000000000456f53 : jmp 0x456f2f
0x0000000000462ae4 : jmp 0x462aa9
0x0000000000462ae3 : jmp 0x462aaa
0x000000000046527b : jmp 0x465241
0x000000000046527a : jmp 0x465242
0x000000000046638b : jmp 0x4661e1
0x000000000046a44b : jmp 0x46a410
0x000000000046ad40 : jmp 0x46ad06
0x000000000046dbdb : jmp 0x46dba1
0x000000000047a862 : jmp 0x47a8b4
0x000000000047d9cc : jmp 0x47d9de
0x000000000047cd35 : jmp 0x47f4fb
0x0000000000480372 : jmp 0x4803c4
0x0000000000482fb6 : jmp 0x4806ee
0x0000000000481004 : jmp 0x480fc9
0x0000000000483d65 : jmp 0x483d2a
0x000000000048588b : jmp 0x485850
0x000000000048756a : jmp 0x48752f
0x00000000004b8faa : jmp 0x4b8fe9
0x00000000004b9ce9 : jmp 0x4b9cbc
0x00000000004bace0 : jmp 0x4bac74
0x00000000004bacdf : jmp 0x4bac75
0x00000000004355ea : jmp 0x4fc265e8
0x00000000004355e9 : jmp 0x4fc265e9
0x000000000046975b : jmp 0xffffffffbf0920ab
0x00000000004793d1 : jmp 0xffffffffc3571d26
0x00000000004a41d3 : jmp qword ptr [rax + 0x20fff918]
0x00000000004be1df : jmp qword ptr [rax + 0x20fffd84]
0x00000000004be1e7 : jmp qword ptr [rax + 0x20fffd87]
0x00000000004be1ef : jmp qword ptr [rax + 0x20fffd8a]
0x00000000004be1f7 : jmp qword ptr [rax + 0x20fffd8d]
0x00000000004be1ff : jmp qword ptr [rax + 0x20fffd90]
0x00000000004be207 : jmp qword ptr [rax + 0x20fffd93]
0x00000000004be20f : jmp qword ptr [rax + 0x20fffd96]
0x000000000041d519 : jmp qword ptr [rax]
0x000000000048398e : jmp qword ptr [rbx + rcx*4 + 1]
0x00000000004be30f : jmp qword ptr [rbx - 0x1f000239]
0x00000000004bd900 : jmp qword ptr [rbx]
0x00000000004c052b : jmp qword ptr [rcx]
0x000000000044d3be : jmp qword ptr [rdi]
0x00000000004a3ebf : jmp qword ptr [rdx]
0x00000000004a3b7f : jmp qword ptr [rsi + 0x36fff8c6]
0x000000000047e6f9 : jmp qword ptr [rsi + 0xf]
0x000000000045d41e : jmp qword ptr [rsi]
0x0000000000421eb9 : jmp r10
0x0000000000476f01 : jmp r11
0x000000000049a3c0 : jmp r8
0x00000000004304b0 : jmp r9
0x00000000004be313 : jmp rax
0x0000000000476f02 : jmp rbx
0x0000000000420e3e : jmp rcx
0x00000000004c5e2b : jmp rdi
0x0000000000421eba : jmp rdx
0x00000000004a3e4b : jmp rsi
0x00000000004605c2 : jmp rsp
0x00000000004005db : jne 0x4005e0 ; ret
0x000000000040df74 : jne 0x40df52 ; ret
0x000000000041034b : jne 0x410361 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041153c : jne 0x411543 ; pop rbx ; ret
0x0000000000413d05 : jne 0x413d12 ; ret
0x0000000000415481 : jne 0x415473 ; ret
0x0000000000416191 : jne 0x4161a8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004164e2 : jne 0x4164cd ; pop rbx ; ret
0x000000000041651c : jne 0x416515 ; lea eax, [rdx + rdi] ; ret
0x0000000000416dd6 : jne 0x416dcb ; ret
0x000000000041e3a0 : jne 0x41e363 ; ret
0x0000000000421e24 : jne 0x421e36 ; lea rax, [rip + 3] ; ret
0x0000000000426929 : jne 0x426985 ; xor rax, rax ; ret
0x00000000004268e9 : jne 0x4269a9 ; xor rax, rax ; ret
0x00000000004269ca : jne 0x4269dd ; lea rax, [rip + 0x1d] ; ret
0x00000000004270aa : jne 0x427093 ; ret
0x0000000000427213 : jne 0x4270ff ; mov rax, rdi ; ret
0x0000000000427169 : jne 0x427155 ; mov rax, rdi ; ret
0x0000000000427690 : jne 0x4276a2 ; lea rax, [rip + 0x67] ; ret
0x00000000004276e3 : jne 0x4276f5 ; lea rax, [rip + 4] ; ret
0x000000000042cc88 : jne 0x42cb60 ; ret
0x000000000042cbc9 : jne 0x42cbb3 ; ret
0x000000000042ee1c : jne 0x42ee06 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000043040d : jne 0x430437 ; xor eax, eax ; ret
0x000000000042fa01 : jne 0x43043b ; xor eax, eax ; ret
0x000000000042fa29 : jne 0x430447 ; xor eax, eax ; ret
0x000000000043c635 : jne 0x43c5c6 ; lea rax, [rdi + 3] ; ret
0x000000000043c607 : jne 0x43c5c6 ; lea rax, [rdi + 7] ; ret
0x000000000043c606 : jne 0x43c5c7 ; lea rax, [rdi + 7] ; ret
0x000000000043dd94 : jne 0x43dfa8 ; xor eax, eax ; ret
0x000000000043df99 : jne 0x43dfb9 ; xor eax, eax ; ret
0x000000000043de41 : jne 0x43dfbd ; xor eax, eax ; ret
0x000000000043dfb1 : jne 0x43dfbe ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000043e0c1 : jne 0x43e0b2 ; ret
0x000000000043e171 : jne 0x43e162 ; ret
0x000000000043e2e1 : jne 0x43e2d6 ; lea rax, [rcx - 1] ; ret
0x000000000043e431 : jne 0x43e426 ; sub rax, 1 ; ret
0x00000000004411a8 : jne 0x441190 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000442967 : jne 0x442930 ; std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000442faa : jne 0x442fa8 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000044301a : jne 0x443018 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000443162 : jne 0x443159 ; pop rdx ; pop r10 ; ret
0x0000000000443333 : jne 0x44332d ; xor eax, eax ; leave ; ret
0x00000000004465fc : jne 0x4465d3 ; jmp 0x4465c5
0x0000000000452581 : jne 0x45256d ; mov rax, rsi ; ret
0x0000000000452605 : jne 0x4525e5 ; mov rax, rsi ; ret
0x0000000000463e91 : jne 0x463e83 ; ret
0x0000000000465a63 : jne 0x465a6e ; xor rax, rax ; ret
0x0000000000466c35 : jne 0x466c42 ; mov dword ptr [r9 + 8], esi ; ret
0x00000000004672db : jne 0x467296 ; mov rax, rdx ; ret
0x000000000046731c : jne 0x467313 ; ret
0x000000000046b5a3 : jne 0x46b555 ; xor eax, eax ; ret
0x000000000046b557 : jne 0x46b5ab ; ret
0x000000000046b59f : jne 0x46b5ad ; test ecx, ecx ; jne 0x46b559 ; xor eax, eax ; ret
0x00000000004742da : jne 0x474280 ; mov eax, dword ptr [rsi + 4] ; ret
0x00000000004742c8 : jne 0x4742a3 ; ret
0x00000000004743e7 : jne 0x4743fa ; mov rax, qword ptr [rip + 0x258a00] ; ret
0x0000000000474430 : jne 0x474403 ; ret
0x0000000000476c46 : jne 0x476c83 ; ret
0x0000000000476c45 : jne 0x476c84 ; ret
0x0000000000478a93 : jne 0x478aa6 ; add rsp, 0x38 ; ret
0x0000000000478b35 : jne 0x478b48 ; xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000478c0d : jne 0x478c50 ; xor eax, eax ; add rsp, 0x68 ; ret
0x0000000000478cc5 : jne 0x478cd8 ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000047ae90 : jne 0x47aea6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047e648 : jne 0x47e605 ; nop word ptr [rax + rax] ; call rbx
0x0000000000491d90 : jne 0x491da2 ; lea rax, [rip + 0x67] ; ret
0x0000000000491de3 : jne 0x491df5 ; lea rax, [rip + 4] ; ret
0x000000000049c6e3 : jne 0x49c6dc ; mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000049c747 : jne 0x49c73c ; mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x000000000049c9eb : jne 0x49c9e4 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049cb17 : jne 0x49cb10 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049ccbb : jne 0x49ccb4 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049d034 : jne 0x49d02b ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049d094 : jne 0x49d08b ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049e519 : jne 0x49e523 ; ret
0x000000000049e534 : jne 0x49e543 ; ret
0x000000000049e754 : jne 0x49e763 ; ret
0x000000000049eb53 : jne 0x49eb62 ; mov eax, 8 ; ret
0x000000000049ef45 : jne 0x49ef33 ; pop rbx ; ret
0x000000000049ef90 : jne 0x49ef70 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000049f0b5 : jne 0x49f09b ; pop rbx ; ret
0x0000000000400abb : jno 0x400ab4 ; add eax, dword ptr [rax] ; pop rbp ; ret
0x00000000004269eb : jno 0x426a4f ; add dword ptr [rax], eax ; ret
0x000000000042fcbe : jno 0x42fccd ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004360a0 : jno 0x4360a9 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000004362da : jno 0x4362e3 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000436441 : jno 0x436452 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00000000004365a6 : jno 0x43662a ; adc qword ptr [rdi - 8], rdi ; ret
0x0000000000466c33 : jno 0x466c42 ; jne 0x466c44 ; mov dword ptr [r9 + 8], esi ; ret
0x0000000000466c39 : jno 0x466c46 ; ret
0x00000000004792c4 : jno 0x479316 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000402ed6 : jnp 0x402f21 ; mov esi, 8 ; call 0x41f0f9
0x00000000004a4381 : jnp 0x4a437e ; jmp qword ptr [rax]
0x00000000004b97c5 : jnp 0x4b9782 ; ret
0x00000000004be1d1 : jnp 0x4be1d2 ; call rax
0x00000000004c4bc9 : jnp 0x4c4bc6 ; call rdi
0x00000000004007b7 : jns 0x4006ab ; jmp 0x400788
0x00000000004360a7 : jns 0x4360aa ; ret
0x00000000004362e1 : jns 0x4362e4 ; ret
0x0000000000436448 : jns 0x436453 ; ret
0x000000000046f83c : jns 0x46f84a ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8545
0x000000000049c5d4 : jns 0x49c617 ; add byte ptr [rdx + rbp*2 + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004a4325 : jns 0x4a4322 ; call qword ptr [rax]
0x00000000004a4329 : jns 0x4a4326 ; jmp qword ptr [rax]
0x00000000004a4351 : jns 0x4a4352 ; inc eax ; jns 0x4a4356 ; jmp rax
0x00000000004a4355 : jns 0x4a4352 ; jmp rax
0x00000000004a435d : jns 0x4a435e ; inc dword ptr [rax] ; jp 0x4a4362 ; jmp qword ptr [rax]
0x00000000004b88ce : jns 0x4b8864 ; ret 0xf869
0x00000000004b88cd : jns 0x4b8865 ; ret 0xf869
0x00000000004bacde : jns 0x4bad35 ; jmp 0x4bac76
0x000000000040191c : jo 0x4018ab ; sub al, 0 ; xor eax, eax ; ret
0x0000000000413b84 : jo 0x413bd5 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044ed15 : jo 0x44ed1a ; inc dword ptr [rbx - 0x76be0008] ; ret
0x0000000000463f0a : jo 0x463f22 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000046742c : jo 0x467440 ; xchg eax, ebp ; ret 0x8b4c
0x000000000047ab6a : jo 0x47aaf7 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000047ab69 : jo 0x47aaf8 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x00000000004a3950 : jo 0x4a39b7 ; clc ; call qword ptr [rax]
0x00000000004a3970 : jo 0x4a39e4 ; clc ; call qword ptr [rax]
0x00000000004a3d48 : jo 0x4a3d3d ; clc ; push qword ptr [rax - 0x12] ; clc ; jmp qword ptr [rax]
0x00000000004a3d4c : jo 0x4a3d3f ; clc ; jmp qword ptr [rax]
0x00000000004a3d9c : jo 0x4a3d74 ; clc ; inc eax ; sar al, 1 ; call qword ptr [rax]
0x00000000004a4040 : jo 0x4a4058 ; stc ; jmp rax
0x00000000004a4244 : jo 0x4a425b ; stc ; jmp rax
0x00000000004b9944 : jo 0x4b99be ; mov ebp, 0xfb67d10d ; ret
0x00000000004be250 : jo 0x4be2b3 ; std ; inc eax ; pop rsp ; std ; call qword ptr [rax]
0x00000000004c8ca0 : jo 0x4c8c7c ; cld ; call qword ptr [rax]
0x00000000004270f5 : jp 0x4270ef ; ret 0x7401
0x00000000004330c6 : jp 0x4330ba ; ret
0x0000000000433129 : jp 0x43311d ; ret
0x00000000004330bf : jp 0x433149 ; jb 0x4330ac ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00000000004330c4 : jp 0x433149 ; jp 0x4330bc ; ret
0x0000000000465279 : jp 0x4652be ; jmp 0x465243
0x000000000047b9ee : jp 0x47ba03 ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000488a65 : jp 0x488a6e ; dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004a4361 : jp 0x4a435e ; jmp qword ptr [rax]
0x00000000004a4375 : jp 0x4a4376 ; inc eax ; jp 0x4a437a ; jmp rax
0x00000000004a4379 : jp 0x4a4376 ; jmp rax
0x00000000004a437d : jp 0x4a437e ; inc dword ptr [rax] ; jnp 0x4a4382 ; jmp qword ptr [rax]
0x00000000004be1cd : jp 0x4be1d2 ; push rax ; jnp 0x4be1d6 ; call rax
0x00000000004c3c99 : jp 0x4c3c95 ; call qword ptr [rcx]
0x000000000042ccd4 : jrcxz 0x42cd08 ; add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x00000000004352da : jrcxz 0x4352d5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004352d9 : jrcxz 0x4352d6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004431b3 : jrcxz 0x443178 ; cmp r11d, 0xa ; je 0x4431c4 ; ret
0x000000000045b756 : jrcxz 0x45b7cf ; ret
0x000000000045d768 : jrcxz 0x45d762 ; ret 0xf40
0x00000000004a3d15 : jrcxz 0x4a3d11 ; jmp qword ptr [rax]
0x00000000004a3d35 : jrcxz 0x4a3d31 ; call rax
0x00000000004b8725 : jrcxz 0x4b877f ; ret
0x0000000000409d26 : js 0x409d40 ; mov qword ptr [rsp], rax ; call 0x406028
0x0000000000409d37 : js 0x409d49 ; mov qword ptr [rsp], rax ; call 0x406028
0x0000000000409d4d : js 0x409d6f ; mov qword ptr [rsp], rax ; call 0x406028
0x0000000000409d5e : js 0x409d78 ; mov qword ptr [rsp], rax ; call 0x406028
0x0000000000409d6f : js 0x409d81 ; mov qword ptr [rsp], rax ; call 0x406028
0x0000000000409d85 : js 0x409da7 ; mov qword ptr [rsp], rax ; call 0x406028
0x0000000000409d96 : js 0x409db0 ; mov qword ptr [rsp], rax ; call 0x406028
0x0000000000409da7 : js 0x409db9 ; mov qword ptr [rsp], rax ; call 0x406028
0x0000000000409dbd : js 0x409ddf ; mov qword ptr [rsp], rax ; call 0x406028
0x0000000000409dce : js 0x409de8 ; mov qword ptr [rsp], rax ; call 0x406028
0x0000000000409ddf : js 0x409df1 ; mov qword ptr [rsp], rax ; call 0x406028
0x0000000000409df5 : js 0x409e17 ; mov qword ptr [rsp], rax ; call 0x406028
0x0000000000409e06 : js 0x409e20 ; mov qword ptr [rsp], rax ; call 0x406028
0x0000000000442faf : js 0x44300f ; pop rbp ; ret
0x000000000044301f : js 0x44307f ; pop rbp ; ret
0x0000000000448e5e : js 0x448eaf ; mov edi, dword ptr [rsp + 0x28] ; call r14
0x000000000044ba48 : js 0x44ba99 ; mov edi, dword ptr [rsp + 0x30] ; call r14
0x000000000044c8a8 : js 0x44c8f9 ; mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000471722 : js 0x47172b ; pop rbx ; ret
0x000000000047ab6d : js 0x47ab7b ; ret
0x000000000047bcaf : js 0x47bcf4 ; call rsp
0x000000000047bfc4 : js 0x47c009 ; call rsp
0x000000000047c143 : js 0x47c188 ; call rsp
0x000000000047c183 : js 0x47c1c8 ; call rsp
0x000000000047c17e : js 0x47c1cf ; lea edi, [rsp + 0x78] ; call r12
0x000000000047c346 : js 0x47c38b ; call rsp
0x000000000047c38b : js 0x47c3d0 ; call rsp
0x000000000049c915 : js 0x49c922 ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000049c922 : js 0x49c92e ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004a4315 : js 0x4a4312 ; call rax
0x00000000004a4311 : js 0x4a4312 ; inc eax ; js 0x4a4316 ; call rax
0x00000000004a4319 : js 0x4a4316 ; jmp rax
0x00000000004a4321 : js 0x4a4322 ; inc dword ptr [rax] ; jns 0x4a4326 ; call qword ptr [rax]
0x00000000004be1c9 : js 0x4be1ca ; call qword ptr [rax]
0x00000000004c20c9 : js 0x4c20c3 ; call qword ptr [rax]
0x00000000004c3c98 : js 0x4c3d17 ; clc ; call qword ptr [rcx]
0x00000000004c4398 : js 0x4c4352 ; clc ; call qword ptr [rdi]
0x00000000004c51c8 : js 0x4c51b7 ; stc ; call qword ptr [rsi]
0x00000000004c9228 : js 0x4c9265 ; std ; call rcx
0x000000000042069d : lahf ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x00000000004a3a91 : lahf ; clc ; jmp rax
0x00000000004a3acd : lahf ; clc ; lcall [rdi - 0x41] ; clc ; push qword ptr [rax] ; ret 0xfff8
0x000000000044d3bd : lahf ; jmp qword ptr [rdi]
0x00000000004bae03 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004742db : lahf ; mov eax, dword ptr [rsi + 4] ; ret
0x000000000042c22d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000440f08 : lahf ; ret
0x00000000004862cc : lahf ; ret 0x2941
0x00000000004105de : lahf ; ret 0x3841
0x0000000000440f0e : lahf ; ret 0x3845
0x00000000004b865d : lahf ; ret 0x871e
0x00000000004844a1 : lahf ; ret 0xb60f
0x0000000000486f38 : lahf ; ret 0xd129
0x0000000000486faf : lahf ; ret 0xd629
0x0000000000486ec1 : lahf ; ret 0xd729
0x000000000043ec89 : lahf ; ret 0xea81
0x000000000049bc76 : lahf ; ret 0xf45
0x0000000000400a0d : lahf ; stc ; add byte ptr [rax], al ; nop ; leave ; ret
0x00000000004b5ef8 : lahf ; sub dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4726
0x000000000042c8bd : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004be2b3 : lcall [rax] ; ret 0xfffd
0x00000000004119e3 : lcall [rbp + 0x41] ; pop rsp ; ret
0x000000000048872a : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044d503 : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000452322 : lcall [rbx + 0x5d] ; pop r12 ; ret
0x000000000041182d : lcall [rbx + 0x5d] ; ret
0x0000000000474d66 : lcall [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x00000000004a3bcb : lcall [rbx - 0x38] ; clc ; jmp rax
0x0000000000420913 : lcall [rbx - 0x3d] ; mov eax, 0xfffffffe ; pop rbx ; ret
0x00000000004a408b : lcall [rcx + rdx + 0x112cfff9] ; stc ; call rdx
0x00000000004a3acf : lcall [rdi - 0x41] ; clc ; push qword ptr [rax] ; ret 0xfff8
0x00000000004be383 : lcall [rdx - 0x35] ; std ; jmp rsp
0x00000000004be37f : lcall [rdx - 0x35] ; std ; lcall [rdx - 0x35] ; std ; jmp rsp
0x0000000000435966 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000041652b : lea eax, [r8 - 1] ; ret
0x000000000046b5cb : lea eax, [rax + 0x493afe7e] ; cmove eax, ecx ; ret
0x0000000000426954 : lea eax, [rax + rdi + 0x10] ; ret
0x0000000000426964 : lea eax, [rax + rdi + 0x20] ; ret
0x0000000000426934 : lea eax, [rax + rdi - 0x10] ; ret
0x0000000000462048 : lea eax, [rax - 0x17000011] ; jmp rsp
0x000000000041652c : lea eax, [rax - 1] ; ret
0x00000000004c761d : lea eax, [rax] ; add byte ptr [rax], dh ; xchg eax, edi ; std ; call rcx
0x0000000000465e6d : lea eax, [rcx + rsi] ; ret
0x000000000043e2e4 : lea eax, [rcx - 1] ; ret
0x000000000043c35c : lea eax, [rdi + 0x10] ; ret
0x000000000043c371 : lea eax, [rdi + 0x11] ; ret
0x000000000043c38f : lea eax, [rdi + 0x12] ; ret
0x000000000043c3af : lea eax, [rdi + 0x13] ; ret
0x000000000043c3d2 : lea eax, [rdi + 0x14] ; ret
0x000000000043c3f1 : lea eax, [rdi + 0x15] ; ret
0x000000000043c411 : lea eax, [rdi + 0x16] ; ret
0x000000000043c431 : lea eax, [rdi + 0x17] ; ret
0x000000000043c454 : lea eax, [rdi + 0x18] ; ret
0x000000000043c479 : lea eax, [rdi + 0x19] ; ret
0x000000000043c497 : lea eax, [rdi + 0x1a] ; ret
0x000000000043c4b7 : lea eax, [rdi + 0x1b] ; ret
0x000000000043c4d3 : lea eax, [rdi + 0x1c] ; ret
0x000000000043c4f3 : lea eax, [rdi + 0x1d] ; ret
0x000000000043c513 : lea eax, [rdi + 0x1e] ; ret
0x000000000043c533 : lea eax, [rdi + 0x1f] ; ret
0x000000000043c2ad : lea eax, [rdi + 0xa] ; ret
0x000000000043c2cd : lea eax, [rdi + 0xb] ; ret
0x000000000043c2ef : lea eax, [rdi + 0xc] ; ret
0x000000000043c30f : lea eax, [rdi + 0xd] ; ret
0x000000000043c32f : lea eax, [rdi + 0xe] ; ret
0x000000000043c349 : lea eax, [rdi + 0xf] ; ret
0x000000000043c1f7 : lea eax, [rdi + 1] ; ret
0x000000000043c20a : lea eax, [rdi + 2] ; ret
0x000000000043c215 : lea eax, [rdi + 3] ; ret
0x000000000043c228 : lea eax, [rdi + 4] ; ret
0x000000000043c23d : lea eax, [rdi + 5] ; ret
0x000000000043c25b : lea eax, [rdi + 6] ; ret
0x000000000043c267 : lea eax, [rdi + 7] ; ret
0x000000000043c27a : lea eax, [rdi + 8] ; ret
0x000000000043c28f : lea eax, [rdi + 9] ; ret
0x0000000000426989 : lea eax, [rdi + rax + 0x10] ; ret
0x0000000000426999 : lea eax, [rdi + rax + 0x20] ; ret
0x0000000000426883 : lea eax, [rdi + rax + 0x30] ; ret
0x000000000042d757 : lea eax, [rdi + rax] ; ret
0x0000000000465d69 : lea eax, [rdi + rsi] ; ret
0x00000000004785d8 : lea eax, [rdi - 1] ; cmp rax, -3 ; jbe 0x4785f1 ; ret
0x000000000043c1e3 : lea eax, [rdi] ; ret
0x000000000043b7cd : lea eax, [rdx + 0xa] ; ret
0x000000000043b7ed : lea eax, [rdx + 0xb] ; ret
0x000000000043b80f : lea eax, [rdx + 0xc] ; ret
0x000000000043b82f : lea eax, [rdx + 0xd] ; ret
0x000000000043b84f : lea eax, [rdx + 0xe] ; ret
0x000000000043b6df : lea eax, [rdx + 0xf] ; ret
0x000000000043b707 : lea eax, [rdx + 1] ; ret
0x000000000043b71d : lea eax, [rdx + 2] ; ret
0x000000000043b735 : lea eax, [rdx + 3] ; ret
0x000000000043b74b : lea eax, [rdx + 4] ; ret
0x000000000043b75d : lea eax, [rdx + 5] ; ret
0x000000000043b77b : lea eax, [rdx + 6] ; ret
0x000000000043b687 : lea eax, [rdx + 7] ; ret
0x000000000043b78d : lea eax, [rdx + 8] ; ret
0x000000000043b7ad : lea eax, [rdx + 9] ; ret
0x000000000041651e : lea eax, [rdx + rdi] ; ret
0x000000000043ed5c : lea eax, [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000417a06 : lea eax, [rdx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000043b6f5 : lea eax, [rdx] ; ret
0x0000000000427577 : lea eax, [rip + 0x12ad3] ; ret
0x0000000000424047 : lea eax, [rip + 0x14853] ; ret
0x00000000004269e9 : lea eax, [rip + 0x15e71] ; ret
0x0000000000426fc3 : lea eax, [rip + 0x17647] ; ret
0x0000000000421bd4 : lea eax, [rip + 0x1a966] ; ret
0x00000000004269cd : lea eax, [rip + 0x1d] ; ret
0x0000000000427693 : lea eax, [rip + 0x67] ; ret
0x00000000004269e1 : lea eax, [rip + 0x8449] ; ret
0x0000000000421e27 : lea eax, [rip + 3] ; ret
0x00000000004276e6 : lea eax, [rip + 4] ; ret
0x00000000004c59a5 : lea eax, [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000044d140 : lea eax, [rsp + 0x88] ; call r15
0x000000000047c33f : lea ebx, [rdx + rax] ; mov qword ptr [rsp + 0x78], rbx ; call r12
0x00000000004b8f11 : lea ebx, [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000049ce45 : lea ebx, [rsp + rcx*8] ; mov rsi, qword ptr [rbx] ; call r14
0x0000000000466d70 : lea ecx, [rax + 1] ; call rbx
0x0000000000469dd2 : lea ecx, [rax] ; mov rdx, rax ; jmp 0x469de3
0x0000000000430507 : lea ecx, [rbx + rcx] ; jmp r9
0x000000000043ba7e : lea ecx, [rbx + rcx] ; jmp rcx
0x0000000000452e0f : lea ecx, [rbx + rdx] ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x00000000004643f1 : lea ecx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000047a860 : lea ecx, [rdx] ; jmp 0x47a8b6
0x0000000000480370 : lea ecx, [rdx] ; jmp 0x4803c6
0x000000000046b347 : lea ecx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000465327 : lea ecx, [rsp + 0x10] ; call rbx
0x0000000000465400 : lea ecx, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000466e85 : lea ecx, [rsp + 0x20] ; lea rsi, [rsp + 0x40] ; call rbx
0x00000000004671a0 : lea ecx, [rsp + 0x28] ; lea rsi, [rsp + 0x30] ; call rbx
0x000000000046709e : lea ecx, [rsp + 0x60] ; lea rsi, [rsp + 0x30] ; call rbx
0x000000000046fda6 : lea edi, [rax + 0x6cb1e0] ; call rdx
0x000000000040257c : lea edi, [rbx + 0x80] ; call rax
0x000000000040e48c : lea edi, [rbx + rsi] ; call rax
0x0000000000427166 : lea edi, [rdi + 0x10] ; jne 0x427158 ; mov rax, rdi ; ret
0x000000000042cbc6 : lea edi, [rdi + 0x10] ; jne 0x42cbb6 ; ret
0x000000000047bcac : lea edi, [rsp + 0x78] ; call r12
0x000000000047c052 : lea edi, [rsp + 0x80] ; call r12
0x000000000047be5f : lea edi, [rsp + 0x88] ; call r14
0x0000000000416ddb : lea edx, [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000004655d0 : lea edx, [rbp - 0x40] ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000004305d4 : lea edx, [rbx + rdx] ; jmp rdx
0x000000000046517d : lea edx, [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000421eb6 : lea edx, [rdx + rcx] ; jmp r10
0x00000000004309c8 : lea edx, [rdx - 0x40] ; jmp r9
0x0000000000464331 : lea edx, [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000465322 : lea edx, [rsp + 0x18] ; lea r9, [rsp + 0x10] ; call rbx
0x0000000000466f2d : lea edx, [rsp + 0x28] ; lea rsi, [rsp + 0x40] ; call rbx
0x0000000000467590 : lea edx, [rsp + 0x48] ; mov rdi, r12 ; call rbx
0x000000000044d066 : lea edx, [rsp + 0x80] ; call r12
0x000000000048638c : lea esi, [rax - 0x77000005] ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000048d1c5 : lea esi, [rax*8 + 0x4b83a8] ; call 0x479499
0x00000000004670a3 : lea esi, [rsp + 0x30] ; call rbx
0x0000000000466d6b : lea esi, [rsp + 0x30] ; lea rcx, [rax + 1] ; call rbx
0x0000000000466e8a : lea esi, [rsp + 0x40] ; call rbx
0x000000000046b6ed : lea esp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000040fdb1 : lea esp, [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000421eb5 : lea r10, [r10 + r9] ; jmp r10
0x000000000040e48b : lea r15, [rbx + r14] ; call rax
0x000000000044d13f : lea r8, [rsp + 0x88] ; call r15
0x0000000000430506 : lea r9, [r11 + r9] ; jmp r9
0x000000000047a85f : lea r9, [rdx] ; jmp 0x47a8b7
0x000000000048036f : lea r9, [rdx] ; jmp 0x4803c7
0x0000000000465326 : lea r9, [rsp + 0x10] ; call rbx
0x00000000004653ff : lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000426953 : lea rax, [rax + rdi + 0x10] ; ret
0x0000000000426963 : lea rax, [rax + rdi + 0x20] ; ret
0x0000000000426933 : lea rax, [rax + rdi - 0x10] ; ret
0x0000000000465e6c : lea rax, [rcx + rsi] ; ret
0x000000000043e2e3 : lea rax, [rcx - 1] ; ret
0x000000000043c35b : lea rax, [rdi + 0x10] ; ret
0x000000000043c370 : lea rax, [rdi + 0x11] ; ret
0x000000000043c38e : lea rax, [rdi + 0x12] ; ret
0x000000000043c3ae : lea rax, [rdi + 0x13] ; ret
0x000000000043c3d1 : lea rax, [rdi + 0x14] ; ret
0x000000000043c3f0 : lea rax, [rdi + 0x15] ; ret
0x000000000043c410 : lea rax, [rdi + 0x16] ; ret
0x000000000043c430 : lea rax, [rdi + 0x17] ; ret
0x000000000043c453 : lea rax, [rdi + 0x18] ; ret
0x000000000043c478 : lea rax, [rdi + 0x19] ; ret
0x000000000043c496 : lea rax, [rdi + 0x1a] ; ret
0x000000000043c4b6 : lea rax, [rdi + 0x1b] ; ret
0x000000000043c4d2 : lea rax, [rdi + 0x1c] ; ret
0x000000000043c4f2 : lea rax, [rdi + 0x1d] ; ret
0x000000000043c512 : lea rax, [rdi + 0x1e] ; ret
0x000000000043c532 : lea rax, [rdi + 0x1f] ; ret
0x000000000043c2ac : lea rax, [rdi + 0xa] ; ret
0x000000000043c2cc : lea rax, [rdi + 0xb] ; ret
0x000000000043c2ee : lea rax, [rdi + 0xc] ; ret
0x000000000043c30e : lea rax, [rdi + 0xd] ; ret
0x000000000043c32e : lea rax, [rdi + 0xe] ; ret
0x000000000043c348 : lea rax, [rdi + 0xf] ; ret
0x000000000043c1f6 : lea rax, [rdi + 1] ; ret
0x000000000043c209 : lea rax, [rdi + 2] ; ret
0x000000000043c214 : lea rax, [rdi + 3] ; ret
0x000000000043c227 : lea rax, [rdi + 4] ; ret
0x000000000043c23c : lea rax, [rdi + 5] ; ret
0x000000000043c25a : lea rax, [rdi + 6] ; ret
0x000000000043c266 : lea rax, [rdi + 7] ; ret
0x000000000043c279 : lea rax, [rdi + 8] ; ret
0x000000000043c28e : lea rax, [rdi + 9] ; ret
0x0000000000426988 : lea rax, [rdi + rax + 0x10] ; ret
0x0000000000426998 : lea rax, [rdi + rax + 0x20] ; ret
0x0000000000426882 : lea rax, [rdi + rax + 0x30] ; ret
0x000000000042d756 : lea rax, [rdi + rax] ; ret
0x0000000000465d68 : lea rax, [rdi + rsi] ; ret
0x000000000043c1e2 : lea rax, [rdi] ; ret
0x000000000043b7cc : lea rax, [rdx + 0xa] ; ret
0x000000000043b7ec : lea rax, [rdx + 0xb] ; ret
0x000000000043b80e : lea rax, [rdx + 0xc] ; ret
0x000000000043b82e : lea rax, [rdx + 0xd] ; ret
0x000000000043b84e : lea rax, [rdx + 0xe] ; ret
0x000000000043b6de : lea rax, [rdx + 0xf] ; ret
0x000000000043b706 : lea rax, [rdx + 1] ; ret
0x000000000043b71c : lea rax, [rdx + 2] ; ret
0x000000000043b734 : lea rax, [rdx + 3] ; ret
0x000000000043b74a : lea rax, [rdx + 4] ; ret
0x000000000043b75c : lea rax, [rdx + 5] ; ret
0x000000000043b77a : lea rax, [rdx + 6] ; ret
0x000000000043b686 : lea rax, [rdx + 7] ; ret
0x000000000043b78c : lea rax, [rdx + 8] ; ret
0x000000000043b7ac : lea rax, [rdx + 9] ; ret
0x000000000043b6f4 : lea rax, [rdx] ; ret
0x0000000000427576 : lea rax, [rip + 0x12ad3] ; ret
0x0000000000424046 : lea rax, [rip + 0x14853] ; ret
0x00000000004269e8 : lea rax, [rip + 0x15e71] ; ret
0x0000000000426fc2 : lea rax, [rip + 0x17647] ; ret
0x0000000000421bd3 : lea rax, [rip + 0x1a966] ; ret
0x00000000004269cc : lea rax, [rip + 0x1d] ; ret
0x0000000000427692 : lea rax, [rip + 0x67] ; ret
0x00000000004269e0 : lea rax, [rip + 0x8449] ; ret
0x0000000000421e26 : lea rax, [rip + 3] ; ret
0x00000000004276e5 : lea rax, [rip + 4] ; ret
0x000000000049ce44 : lea rbx, [r12 + rcx*8] ; mov rsi, qword ptr [rbx] ; call r14
0x000000000043ba7d : lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000466d6f : lea rcx, [rax + 1] ; call rbx
0x0000000000469dd1 : lea rcx, [rax + r12] ; mov rdx, rax ; jmp 0x469de4
0x000000000046b346 : lea rcx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000046fda5 : lea rdi, [rax + 0x6cb1e0] ; call rdx
0x000000000040257b : lea rdi, [rbx + 0x80] ; call rax
0x0000000000427165 : lea rdi, [rdi + 0x10] ; jne 0x427159 ; mov rax, rdi ; ret
0x000000000042cbc5 : lea rdi, [rdi + 0x10] ; jne 0x42cbb7 ; ret
0x000000000047bcab : lea rdi, [rsp + 0x78] ; call r12
0x000000000047c051 : lea rdi, [rsp + 0x80] ; call r12
0x000000000047be5e : lea rdi, [rsp + 0x88] ; call r14
0x00000000004305d3 : lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004309c7 : lea rdx, [rdx - 0x40] ; jmp r9
0x000000000046758f : lea rdx, [rsp + 0x48] ; mov rdi, r12 ; call rbx
0x000000000044d065 : lea rdx, [rsp + 0x80] ; call r12
0x00000000004670a2 : lea rsi, [rsp + 0x30] ; call rbx
0x0000000000466d6a : lea rsi, [rsp + 0x30] ; lea rcx, [rax + 1] ; call rbx
0x0000000000466e89 : lea rsi, [rsp + 0x40] ; call rbx
0x000000000046b6ec : lea rsp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000004885b6 : leave ; cmove rax, rdx ; ret
0x000000000047b2c5 : leave ; insb byte ptr [rdi], dx ; add cl, ch ; ret
0x000000000043e0c0 : leave ; jne 0x43e0b3 ; ret
0x000000000043e170 : leave ; jne 0x43e163 ; ret
0x000000000043e430 : leave ; jne 0x43e427 ; sub rax, 1 ; ret
0x00000000004672da : leave ; jne 0x467297 ; mov rax, rdx ; ret
0x000000000046b5a2 : leave ; jne 0x46b556 ; xor eax, eax ; ret
0x000000000049a3b8 : leave ; movsxd rax, dword ptr [r8 + rcx*4] ; add r8, rax ; jmp r8
0x0000000000445370 : leave ; not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x0000000000400a12 : leave ; ret
0x00000000004be80f : ljmp [rax] ; add edi, esi ; call rax
0x00000000004be80b : ljmp [rax] ; add edi, esi ; ljmp [rax] ; add edi, esi ; call rax
0x00000000004be30b : ljmp [rbp - 0x39] ; std ; jmp qword ptr [rbx - 0x1f000239]
0x00000000004a408f : ljmp [rcx + rdx] ; stc ; call rdx
0x00000000004be7af : ljmp [rdi + rdx*8 - 3] ; inc dword ptr [rdi + rdx*8] ; std ; call rsp
0x0000000000410210 : lock add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047ab55 : lock add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000042f20e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043fddc : lock add byte ptr [rax], r8b ; ret
0x00000000004801ef : lock inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000423d10 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043da40 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000048bace : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c6b51 : lodsb al, byte ptr [rsi] ; cli ; call rdx
0x00000000004787af : lodsb al, byte ptr [rsi] ; mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x4787c9 ; ret
0x00000000004bb59d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000047aeb1 : lodsb al, byte ptr [rsi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x000000000046b5a4 : lodsb al, byte ptr [rsi] ; xor eax, eax ; ret
0x0000000000495730 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000479432 : lodsd eax, dword ptr [rsi] ; ret
0x000000000041c70a : loop 0x41c719 ; add byte ptr [rax], al ; mov rdi, rbx ; call 0x418969
0x000000000042ee1d : loop 0x42ee55 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000043524a : loop 0x435245 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435249 : loop 0x435246 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000045ccdb : loop 0x45cc68 ; ret
0x000000000047654e : loop 0x476511 ; ret
0x0000000000476732 : loop 0x47673d ; add rdx, rax ; jmp 0x47674d
0x00000000004a3c91 : loop 0x4a3c91 ; inc dword ptr [rax - 0x1c] ; clc ; jmp qword ptr [rax]
0x00000000004a3cb1 : loop 0x4a3cad ; call qword ptr [rax]
0x00000000004a3cd1 : loop 0x4a3ccd ; call rax
0x00000000004bb93a : loop 0x4bb98f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004c4f01 : loop 0x4c4efe ; jmp rax
0x00000000004c4f00 : loop 0x4c4eff ; jmp rax
0x000000000041e4cc : loope 0x41e500 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041e4cb : loope 0x41e501 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000042d162 : loope 0x42d1b9 ; or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000004351ba : loope 0x4351b5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004351b9 : loope 0x4351b6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043c76b : loope 0x43c775 ; add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000043ee5e : loope 0x43ee55 ; ret
0x0000000000444bbf : loope 0x444bca ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x0000000000466aee : loope 0x466b03 ; je 0x466b14 ; ret
0x000000000046af1c : loope 0x46aea9 ; ret 0xf631
0x00000000004792c7 : loope 0x479319 ; mov dword ptr [rdi], ecx ; ret
0x00000000004792f8 : loope 0x47934b ; mov dword ptr [rdi - 8], ecx ; ret
0x000000000047936d : loope 0x4793c0 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000049f0b6 : loope 0x49f115 ; ret
0x00000000004a3d31 : loope 0x4a3d31 ; inc dword ptr [rax] ; jrcxz 0x4a3d35 ; call rax
0x00000000004c7149 : loope 0x4c7147 ; jmp qword ptr [rdx]
0x00000000004010e0 : loopne 0x4010f7 ; mov dword ptr [r8], eax ; pop rbx ; ret
0x0000000000413309 : loopne 0x413370 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004133b7 : loopne 0x41341e ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000414f06 : loopne 0x414f6a ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004175d5 : loopne 0x417639 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042124b : loopne 0x4212ad ; pop rbp ; pop r12 ; ret
0x0000000000426e9d : loopne 0x426f01 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000426f32 : loopne 0x426f96 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042d41d : loopne 0x42d475 ; mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000430a21 : loopne 0x430a38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430a20 : loopne 0x430a39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430b71 : loopne 0x430b88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430b70 : loopne 0x430b89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430cc1 : loopne 0x430cd8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430cc0 : loopne 0x430cd9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430e11 : loopne 0x430e28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430e10 : loopne 0x430e29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430f61 : loopne 0x430f78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430f60 : loopne 0x430f79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004310b1 : loopne 0x4310c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004310b0 : loopne 0x4310c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431201 : loopne 0x431218 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431200 : loopne 0x431219 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043134f : loopne 0x431366 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043134e : loopne 0x431367 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004314a1 : loopne 0x4314b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004314a0 : loopne 0x4314b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004315f1 : loopne 0x431608 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004315f0 : loopne 0x431609 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431741 : loopne 0x431758 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431740 : loopne 0x431759 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431891 : loopne 0x4318a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431890 : loopne 0x4318a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004319e1 : loopne 0x4319f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004319e0 : loopne 0x4319f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431b31 : loopne 0x431b48 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431b30 : loopne 0x431b49 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431c81 : loopne 0x431c98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431c80 : loopne 0x431c99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004330c2 : loopne 0x43308f ; jp 0x43314b ; jp 0x4330be ; ret
0x000000000043e5e5 : loopne 0x43e636 ; sub eax, edx ; vzeroupper ; ret
0x000000000043e5e4 : loopne 0x43e637 ; sub eax, edx ; vzeroupper ; ret
0x0000000000442f3a : loopne 0x442f8d ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000443218 : loopne 0x44322d ; cmp eax, 4 ; je 0x443227 ; ret
0x0000000000444bc2 : loopne 0x444c22 ; pop rbp ; ret
0x000000000045ac4d : loopne 0x45abda ; ret 0xe680
0x000000000046221b : loopne 0x46227f ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004625d3 : loopne 0x462635 ; pop rbp ; pop r12 ; ret
0x00000000004625fd : loopne 0x46265f ; pop rbp ; pop r12 ; ret
0x0000000000462cbb : loopne 0x462d1d ; pop rbp ; pop r12 ; ret
0x0000000000462d2d : loopne 0x462d8f ; pop rbp ; pop r12 ; ret
0x00000000004642fe : loopne 0x464297 ; mov eax, 0xffffffff ; ret
0x0000000000478e0d : loopne 0x478e16 ; sub eax, 1 ; ret
0x000000000047b2c4 : loopne 0x47b294 ; insb byte ptr [rdi], dx ; add cl, ch ; ret
0x0000000000486089 : loopne 0x48608d ; dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00000000004a3ab4 : loopne 0x4a3a66 ; clc ; inc dword ptr [rax] ; stosd dword ptr [rdi], eax ; clc ; jmp qword ptr [rax]
0x00000000004a3b08 : loopne 0x4a3acd ; clc ; call rax
0x00000000004a437c : loopne 0x4a43ff ; stc ; inc dword ptr [rax] ; jnp 0x4a4383 ; jmp qword ptr [rax]
0x00000000004a43b0 : loopne 0x4a4437 ; stc ; push rax ; jle 0x4a43b7 ; call qword ptr [rax]
0x00000000004b8f14 : loopne 0x4b8ef4 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004bcb40 : loopne 0x4bcb0d ; add byte ptr [r8], al ; add byte ptr [rax], al ; add dl, dh ; ret 0x4b
0x00000000004be1dc : loopne 0x4be248 ; std ; jmp qword ptr [rax + 0x20fffd84]
0x00000000004bfed0 : loopne 0x4bff04 ; cmc ; call qword ptr [rax]
0x00000000004b892a : mov ah, 0x13 ; ret
0x0000000000401268 : mov ah, 0x2c ; add dh, dh ; ret 0x7420
0x00000000004c4774 : mov ah, 0x5e ; add byte ptr [rax], al ; test al, 0xdd ; clc ; call qword ptr [rbx]
0x00000000004b8dd0 : mov ah, 0xa5 ; ret
0x00000000004b8724 : mov ah, bl ; push rsi ; ret
0x000000000049a50a : mov al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000049c803 : mov al, 0 ; add byte ptr [rax], al ; ret
0x0000000000458a98 : mov al, 0 ; add cl, ch ; ret
0x00000000004c5c50 : mov al, 0x16 ; cli ; jmp qword ptr [rax]
0x00000000004a3ff0 : mov al, 0x1e ; stc ; inc dword ptr [rax + 0x1e] ; stc ; call rax
0x00000000004a3dd8 : mov al, 0x21 ; stc ; inc dword ptr [rax + 0x21] ; stc ; call rax
0x000000000049c621 : mov al, 0x48 ; add esp, 0x18 ; ret
0x000000000043fd1c : mov al, 0x4f ; add byte ptr [rax], al ; ret
0x00000000004460bd : mov al, 0x6d ; add byte ptr [rdi + 0x6cc6d0], r15b ; call rax
0x00000000004a4310 : mov al, 0x78 ; stc ; inc eax ; js 0x4a4317 ; call rax
0x00000000004a4350 : mov al, 0x79 ; stc ; inc eax ; jns 0x4a4357 ; jmp rax
0x00000000004a43cc : mov al, 0x7f ; stc ; inc eax ; jg 0x4a43d3 ; call rax
0x00000000004be1d8 : mov al, 0x7f ; std ; jmp rax
0x00000000004a43f0 : mov al, 0x80 ; stc ; call rax
0x00000000004c16f0 : mov al, 0xd3 ; cmc ; call rdx
0x00000000004babd6 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x00000000004a4250 : mov al, 0xf3 ; clc ; call rax
0x00000000004c00bd : mov al, 1 ; add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000004c612d : mov al, 1 ; add bl, byte ptr [rax + 0x41180e0a] ; ret
0x00000000004c7395 : mov al, byte ptr [rax] ; add byte ptr [rax], bl ; or ebx, edi ; jmp rsi
0x0000000000439f66 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000439f84 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000043b6f0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x0000000000439f40 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000041020f : mov al, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000439f50 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000435f81 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000044d90b : mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x000000000044d48e : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x3a76
0x000000000043c608 : mov bh, 0x48 ; lea eax, [rdi + 7] ; ret
0x0000000000468870 : mov bh, 0x84 ; adc bl, byte ptr [rsi - 0x34] ; add byte ptr [r8 - 0x77], cl ; ret
0x00000000004b9c04 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004c8c71 : mov bh, 0xfc ; call qword ptr [rax]
0x00000000004c3028 : mov bh, 1 ; ret
0x00000000004bb313 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004a39b9 : mov bh, al ; call rax
0x00000000004be1f1 : mov bh, ch ; jmp qword ptr [rax]
0x000000000043defe : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004672dc : mov bl, 0x48 ; mov eax, edx ; ret
0x000000000047e649 : mov bl, 0x66 ; nop dword ptr [rax + rax] ; call rbx
0x00000000004bace3 : mov bl, 0x8e ; ret 0xdcd9
0x0000000000440c52 : mov bl, ah ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000447438 : mov bl, byte ptr [rdx + 0x60] ; add byte ptr [rax - 0x7f], cl ; ret 0x6040
0x000000000041d370 : mov byte ptr [r8 + rbx], r9b ; mov rax, r8 ; pop rbx ; ret
0x000000000041220c : mov byte ptr [r8 - 0x75], r9b ; or cl, byte ptr [rax - 0x7d] ; ret
0x000000000041d371 : mov byte ptr [rax + rbx], cl ; mov rax, r8 ; pop rbx ; ret
0x0000000000447b58 : mov byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000041220d : mov byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x000000000047be62 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r14
0x000000000044d143 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r15
0x00000000004c2040 : mov byte ptr [rcx], al ; ret
0x000000000043c358 : mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x000000000043bcc8 : mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043c3ce : mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x000000000043bd1e : mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043c450 : mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x000000000043bda0 : mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043c206 : mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x000000000043bbe6 : mov byte ptr [rdi + 2], dh ; ret
0x000000000043c222 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x000000000043bc02 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000043bc43 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000043204b : mov byte ptr [rdi - 1], dl ; ret
0x00000000004331cc : mov byte ptr [rdi], cl ; ret
0x000000000043c1e0 : mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000043bbc0 : mov byte ptr [rdi], dh ; ret
0x0000000000435ff3 : mov byte ptr [rdi], dl ; ret
0x000000000043b719 : mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x0000000000439f69 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000043b747 : mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x0000000000439f87 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000043b6f2 : mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x0000000000439f42 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000441664 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x00000000004c5b48 : mov byte ptr [rdx], dl ; cli ; jmp rdx
0x000000000049aec0 : mov byte ptr [rip + 0x231c99], 8 ; ret
0x0000000000400964 : mov byte ptr [rip + 0x2cb1f5], 1 ; ret
0x0000000000452603 : mov byte ptr [rsi], al ; jne 0x4525e7 ; mov rax, rsi ; ret
0x000000000045257f : mov byte ptr [rsi], dl ; jne 0x45256f ; mov rax, rsi ; ret
0x000000000047ad57 : mov ch, 0 ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00000000004b8722 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004b9a63 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004badff : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004bb7aa : mov ch, 0xab ; ret
0x00000000004c4399 : mov ch, 0xf8 ; call qword ptr [rdi]
0x0000000000421b2c : mov ch, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000042fd86 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004268eb : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000400967 : mov cl, 0x2c ; add byte ptr [rcx], al ; ret
0x000000000047b06a : mov cl, 0x47 ; add byte ptr [rdi + 0x6cc9c4], bh ; call rdx
0x00000000004711c4 : mov cl, 0x6c ; add byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000044fd8b : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000429905 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000421eb4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004babd2 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x00000000004331ca : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000466aeb : mov cl, dl ; and cl, 0xf ; je 0x466b17 ; ret
0x00000000004bae8c : mov cs, edi ; ret 0x8b36
0x000000000042bd3e : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x000000000043bbe0 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000004126ee : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004159f0 : mov dh, 0 ; pop rbx ; ret
0x000000000041396b : mov dh, 0 ; ret
0x0000000000435ff1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000426ac4 : mov dh, 0x16 ; sub eax, edx ; ret
0x000000000040df70 : mov dh, 0x17 ; test dl, dl ; jne 0x40df56 ; ret
0x00000000004a3e20 : mov dh, 0x20 ; stc ; inc dword ptr [rsi + 0x20] ; stc ; call rsi
0x000000000046236e : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000040dea5 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b7938c], eax ; ret 0xfff0
0x00000000004629a3 : mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000468116 : mov dh, 0x47 ; add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x000000000043dad1 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000043dac1 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000043da91 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000043dab1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000043daa1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00000000004494e0 : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000049a5e4 : mov dh, 0x4c ; add ecx, esi ; jmp rcx
0x00000000004b9bc2 : mov dh, 0x4e ; ret 0x474c
0x000000000046dd55 : mov dh, 0x53 ; add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x0000000000462f49 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000043dad5 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x000000000043dac5 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x000000000043da95 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x000000000043daa5 : mov dh, 0x56 ; sub eax, edx ; ret
0x000000000045d7a7 : mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045d72a : mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000046e877 : mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x000000000044f69f : mov dh, 0xb2 ; cmp byte ptr [rax + 0x4a], ch ; add byte ptr [rax - 0x77], cl ; ret 0x8840
0x000000000045002d : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047b42d : mov dh, 0xc0 ; neg eax ; ret
0x000000000047b1d7 : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046b106 : mov dh, 0xc0 ; ret
0x000000000043ecd8 : mov dh, 0xc1 ; pop rbx ; ret
0x000000000043ed00 : mov dh, 0xc2 ; pop rbx ; ret
0x000000000041482e : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004bae04 : mov dh, 0xc7 ; ret 0xe71f
0x0000000000426aea : mov dh, 0xd2 ; sub eax, edx ; ret
0x000000000049b8df : mov dh, 0xdb ; movsxd rax, dword ptr [r8 + r11*4] ; add rax, r8 ; jmp rax
0x0000000000423261 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042ee64 : mov dh, 0xe ; sub eax, ecx ; ret
0x0000000000466cc2 : mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000049d36a : mov dh, 1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041568e : mov dh, 2 ; pop rbx ; ret
0x0000000000412701 : mov dh, 2 ; ret
0x000000000042ee61 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000426ac1 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000423264 : mov dh, 7 ; sub eax, ecx ; ret
0x00000000004101d4 : mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000043ee5c : mov dh, byte ptr [rcx - 0xd] ; ret
0x00000000004a40c4 : mov dl, 0x12 ; stc ; jmp qword ptr [rdx]
0x00000000004a3ec4 : mov dl, 0x1c ; stc ; inc dword ptr [rdx + 0x1c] ; stc ; call rdx
0x000000000044f6a0 : mov dl, 0x38 ; push -0x76b7ffb6 ; ret 0x8840
0x0000000000440b2a : mov dl, 0xdd ; std ; dec dword ptr [rax - 0x75] ; jge 0x440b3a ; call rbx
0x00000000004320d0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000047cd44 : mov dword ptr [0x2d0], eax ; ret
0x000000000047b9ec : mov dword ptr [r10 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000004194f3 : mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x000000000046a443 : mov dword ptr [r12], 1 ; jmp 0x46a418
0x00000000004010e2 : mov dword ptr [r8], eax ; pop rbx ; ret
0x0000000000466c37 : mov dword ptr [r9 + 8], esi ; ret
0x0000000000436176 : mov dword ptr [r9 - 2], ecx ; ret
0x0000000000436161 : mov dword ptr [r9 - 4], ecx ; ret
0x0000000000463ec9 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000463f09 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464e69 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000463ecd : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000464f07 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000447448 : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x000000000044744b : mov dword ptr [rax + 0x54], edx ; ret
0x0000000000415fda : mov dword ptr [rax + 8], 0 ; ret
0x00000000004436f6 : mov dword ptr [rax + 8], edx ; ret
0x00000000004270ce : mov dword ptr [rax + rdx - 2], ecx ; ret
0x000000000049d333 : mov dword ptr [rax - 0x7d], ecx ; ret
0x0000000000480992 : mov dword ptr [rax - 0x7d], ecx ; ret 0x8d01
0x000000000044e4c8 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000041c8e7 : mov dword ptr [rax], 0xc ; mov rax, rcx ; ret
0x000000000041d1f8 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x000000000046a958 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x00000000004c71ed : mov dword ptr [rax], eax ; add al, dh ; in al, dx ; cli ; jmp qword ptr [rdx]
0x00000000004010e3 : mov dword ptr [rax], eax ; pop rbx ; ret
0x00000000004643f5 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000487568 : mov dword ptr [rax], edi ; jmp 0x487531
0x000000000047b385 : mov dword ptr [rax], edi ; pop rbx ; ret
0x0000000000483d63 : mov dword ptr [rax], edx ; jmp 0x483d2c
0x0000000000464335 : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047b379 : mov dword ptr [rax], edx ; pop rbx ; ret
0x0000000000465181 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00000000004553d8 : mov dword ptr [rbp - 0x4e8], esi ; jmp rax
0x0000000000472981 : mov dword ptr [rbp - 0xa8], edx ; call rax
0x0000000000472b6a : mov dword ptr [rbp - 0xa8], esi ; call rax
0x0000000000459e3f : mov dword ptr [rbp - 0xb8], ecx ; mov rdi, rbx ; call rax
0x0000000000472130 : mov dword ptr [rbp - 0xc8], edx ; call rax
0x0000000000400bf5 : mov dword ptr [rbp - 8], eax ; mov eax, dword ptr [rbp - 8] ; leave ; ret
0x0000000000491b21 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000412432 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412431 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044ddc1 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000478a05 : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000412507 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000046ad38 : mov dword ptr [rbx + 0x10], eax ; mov rsi, rbp ; xor edx, edx ; jmp 0x46ad0e
0x0000000000478a3e : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000474a3f : mov dword ptr [rbx + 0x10], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412d09 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x00000000004789a3 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488345 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x0000000000415523 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000047cd83 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000045002f : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000041559e : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000416d21 : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000413b82 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000463f54 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000464d68 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412497 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x0000000000415855 : mov dword ptr [rbx + 8], eax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000044ddd7 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000004159ec : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000047e426 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004158fc : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000488a69 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000464e6c : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000415526 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x0000000000466c38 : mov dword ptr [rcx + 8], esi ; ret
0x0000000000436177 : mov dword ptr [rcx - 2], ecx ; ret
0x0000000000436162 : mov dword ptr [rcx - 4], ecx ; ret
0x0000000000436151 : mov dword ptr [rcx - 8], ecx ; ret
0x000000000046b62c : mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x0000000000485889 : mov dword ptr [rcx], eax ; jmp 0x485852
0x00000000004c8222 : mov dword ptr [rcx], eax ; ret
0x000000000049c74a : mov dword ptr [rcx], edx ; add rsp, 8 ; ret
0x0000000000417db2 : mov dword ptr [rcx], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000043c36d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x11] ; ret
0x000000000043c3ab : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x000000000043c42d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x17] ; ret
0x000000000043bd1b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043bd9d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043bcdd : mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043bde0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043be00 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043bdc1 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000043c493 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x000000000043bde3 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000004154b3 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000043c475 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x19] ; ret
0x000000000043c4b3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x000000000043bdc5 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000004678bd : mov dword ptr [rdi + 0x20], ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000471115 : mov dword ptr [rdi + 0x300], eax ; ret
0x00000000004710e7 : mov dword ptr [rdi + 0x308], eax ; ret
0x000000000042d391 : mov dword ptr [rdi + 0x38], ecx ; ret
0x00000000004154e3 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004190d0 : mov dword ptr [rdi + 0x58], ecx ; mov dword ptr [rdi + 4], eax ; ret
0x000000000049c7a1 : mov dword ptr [rdi + 0x98], esi ; ret
0x000000000043c3ed : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x15] ; ret
0x000000000043bd3d : mov dword ptr [rdi + 0xe], ecx ; ret
0x000000000043c38b : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x000000000043c40d : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x16] ; ret
0x000000000043bcfb : mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000435e35 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435c78 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435f18 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000435dc5 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435c08 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043c257 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x0000000000435d55 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435b98 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043bc27 : mov dword ptr [rdi + 3], edx ; ret
0x00000000004190d3 : mov dword ptr [rdi + 4], eax ; ret
0x000000000043c239 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 5] ; ret
0x0000000000435b28 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043bc19 : mov dword ptr [rdi + 4], edx ; ret
0x000000000043c2eb : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xc] ; ret
0x0000000000435ab8 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043bc8b : mov dword ptr [rdi + 5], edx ; ret
0x000000000043c30b : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xd] ; ret
0x0000000000435a48 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043bc9b : mov dword ptr [rdi + 6], edx ; ret
0x000000000043c2a9 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x000000000043c32b : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xe] ; ret
0x00000000004359d8 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043bc69 : mov dword ptr [rdi + 7], edx ; ret
0x00000000004154b7 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000479404 : mov dword ptr [rdi + 8], ecx ; ret
0x000000000043c2c9 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x000000000043c28b : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 9] ; ret
0x000000000047a7c4 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000043bc5b : mov dword ptr [rdi + 8], edx ; ret
0x00000000004331c3 : mov dword ptr [rdi + rdx - 2], ecx ; ret
0x00000000004270d5 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000004270de : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x000000000049c759 : mov dword ptr [rdi + rsi*8], edx ; add rsp, 8 ; ret
0x0000000000431d95 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431dd3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000047936f : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000043211c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435488 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004322fc : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435408 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004324ec : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435388 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004326bd : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004352f9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004328bd : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435269 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000432abd : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004351d9 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000043249d : mov dword ptr [rdi - 2], ecx ; ret
0x00000000004322b5 : mov dword ptr [rdi - 2], edx ; ret
0x0000000000432499 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000432879 : mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431f4f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000432876 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432a76 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432c76 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431d99 : mov dword ptr [rdi - 8], ecx ; ret
0x0000000000431dd7 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000431f4c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000432048 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431f94 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435508 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004792f4 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00000000004793fe : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000045c916 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000043c225 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x000000000043c277 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 8] ; ret
0x000000000043c204 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x000000000043bbe4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000043c255 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x000000000043bc25 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000043c2a7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x000000000043bc67 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043c2c7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x000000000043bc77 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000004270d3 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000043e569 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043bc88 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000043bc98 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000043bca8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000004270db : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000043bc16 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000043bc58 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x000000000043e576 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x000000000042d167 : mov dword ptr [rdi], ecx ; pop rbx ; ret
0x0000000000400598 : mov dword ptr [rdi], ecx ; ret
0x000000000043c1f4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; ret
0x000000000043c212 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x000000000043c264 : mov dword ptr [rdi], edx ; lea rax, [rdi + 7] ; ret
0x0000000000435ce4 : mov dword ptr [rdi], edx ; ret
0x000000000043615f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000004331ab : mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000047a96d : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000043614e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000043318e : mov dword ptr [rdi], esi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000436173 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x00000000004331c0 : mov dword ptr [rdi], esi ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000047a993 : mov dword ptr [rdi], esi ; ret
0x00000000004101d3 : mov dword ptr [rdx + 0x130], ecx ; ret
0x000000000042d41f : mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047b9ed : mov dword ptr [rdx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000043b777 : mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x0000000000439fa7 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000043b759 : mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x0000000000439f99 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000043b80b : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 0xc] ; ret
0x000000000043b789 : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x0000000000439fb9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000043b82b : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 0xd] ; ret
0x000000000043b7a9 : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x0000000000439fc9 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000043b7c9 : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x000000000043b84b : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xe] ; ret
0x0000000000439fd9 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000043b7e9 : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x000000000043b6db : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xf] ; ret
0x0000000000439f2b : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000416e76 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x000000000047ad94 : mov dword ptr [rdx], 5 ; pop rbx ; ret
0x000000000046b1af : mov dword ptr [rdx], eax ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x000000000049a3ec : mov dword ptr [rdx], eax ; add rsp, 8 ; ret
0x000000000041b6dc : mov dword ptr [rdx], eax ; jmp 0x41b4fb
0x000000000043b704 : mov dword ptr [rdx], eax ; lea rax, [rdx + 1] ; ret
0x000000000043b732 : mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x000000000043b684 : mov dword ptr [rdx], eax ; lea rax, [rdx + 7] ; ret
0x0000000000412cb1 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dffa : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000047a96f : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000413510 : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x0000000000439ed4 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000047b365 : mov dword ptr [rdx], eax ; pop rbx ; ret
0x0000000000416de2 : mov dword ptr [rdx], eax ; ret
0x0000000000464216 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000049f0af : mov dword ptr [rip + 0x22d4cb], ebx ; jne 0x49f0a1 ; pop rbx ; ret
0x000000000044fe75 : mov dword ptr [rip + 0x27bbbd], edx ; je 0x44fe89 ; ret
0x0000000000444af6 : mov dword ptr [rip + 0x28549c], edx ; pop rbx ; ret
0x000000000040191a : mov dword ptr [rip + 0x2c8770], eax ; xor eax, eax ; ret
0x0000000000400705 : mov dword ptr [rip + 0x2ca9a5], eax ; pop rbp ; pop r12 ; ret
0x000000000047444e : mov dword ptr [rip + 0x6894800], esp ; ret
0x000000000049e477 : mov dword ptr [rsi + 0x28], eax ; ret
0x000000000043e579 : mov dword ptr [rsi - 2], ecx ; ret
0x000000000043e56b : mov dword ptr [rsi - 4], ecx ; ret
0x000000000046e461 : mov dword ptr [rsi], 0xffffffff ; xor eax, eax ; ret
0x000000000049c78b : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x0000000000474452 : mov dword ptr [rsi], eax ; ret
0x000000000049ce93 : mov dword ptr [rsp + 0x10], ecx ; mov rsi, qword ptr [r15] ; call r14
0x000000000041bebb : mov dword ptr [rsp + 0x10], edx ; call rax
0x00000000004194f4 : mov dword ptr [rsp + 0x14], eax ; pop r12 ; ret
0x000000000041beb6 : mov dword ptr [rsp + 0x18], eax ; mov qword ptr [rsp + 0x10], r10 ; call rax
0x000000000047c140 : mov dword ptr [rsp + 0x78], ebp ; call r12
0x000000000047c343 : mov dword ptr [rsp + 0x78], ebx ; call r12
0x000000000047c292 : mov dword ptr [rsp + 0x88], ebx ; call r14
0x0000000000440da6 : mov dword ptr [rsp + 8], eax ; call rbx
0x000000000041bf72 : mov dword ptr [rsp + 8], eax ; mov qword ptr [rsp], rcx ; call rdx
0x000000000047864e : mov dword ptr [rsp + 8], esi ; mov edi, 0x6cb140 ; call rax
0x0000000000491d56 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000044ffa5 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x000000000046a444 : mov dword ptr [rsp], 1 ; jmp 0x46a417
0x0000000000409d29 : mov dword ptr [rsp], eax ; call 0x406025
0x000000000041bf77 : mov dword ptr [rsp], ecx ; call rdx
0x000000000047cd43 : mov dword ptr fs:[0x2d0], eax ; ret
0x000000000044e4c7 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x000000000041d1f7 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x000000000046a957 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000487567 : mov dword ptr fs:[rax], edi ; jmp 0x487532
0x0000000000483d62 : mov dword ptr fs:[rax], edx ; jmp 0x483d2d
0x000000000046b1fc : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x0000000000485888 : mov dword ptr fs:[rcx], eax ; jmp 0x485853
0x000000000047ad93 : mov dword ptr fs:[rdx], 5 ; pop rbx ; ret
0x0000000000412cb0 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dff9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000004331aa : mov dword ptr ss:[rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000004322b0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000043bbd0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000043eda9 : mov eax, 0x10 ; pop rbx ; ret
0x00000000004218f4 : mov eax, 0x16 ; je 0x421907 ; ret
0x0000000000421a90 : mov eax, 0x16 ; ret
0x000000000043eda2 : mov eax, 0x20 ; pop rbx ; ret
0x000000000043ed9b : mov eax, 0x30 ; pop rbx ; ret
0x000000000043ed94 : mov eax, 0x40 ; pop rbx ; ret
0x0000000000426f89 : mov eax, 0x436010 ; ret
0x000000000042665c : mov eax, 0x43dfd0 ; cmove rax, rdx ; ret
0x00000000004b8d1b : mov eax, 0x45155e93 ; ret 0x591c
0x000000000049a533 : mov eax, 0x48000000 ; add esp, 8 ; ret
0x000000000042753a : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x000000000043ed8d : mov eax, 0x60 ; pop rbx ; ret
0x000000000046af90 : mov eax, 0x66 ; syscall ; ret
0x000000000046afb0 : mov eax, 0x68 ; syscall ; ret
0x000000000046afa0 : mov eax, 0x6b ; syscall ; ret
0x000000000043f360 : mov eax, 0x6c ; syscall ; ret
0x00000000004185a3 : mov eax, 0x6ca800 ; ret
0x000000000046fda7 : mov eax, 0x6cb1e0 ; call rdx
0x000000000043ed86 : mov eax, 0x80 ; pop rbx ; ret
0x00000000004753be : mov eax, 0x83004bcb ; ret
0x0000000000411841 : mov eax, 0x8c48348 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000467650 : mov eax, 0xc9 ; syscall ; ret
0x0000000000443182 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x000000000041b5a3 : mov eax, 0xe8004a2d ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000420916 : mov eax, 0xfffffffe ; pop rbx ; ret
0x00000000004119df : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x000000000045231e : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411829 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000004124a1 : mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dffc : mov eax, 0xffffffff ; ret
0x000000000047a98d : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000415e52 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043f2db : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000444ab6 : mov eax, 1 ; ret
0x000000000049cfd0 : mov eax, 2 ; add rsp, 8 ; ret
0x0000000000466b51 : mov eax, 2 ; ret
0x000000000049eb43 : mov eax, 3 ; je 0x49eb58 ; ret
0x0000000000466b61 : mov eax, 3 ; ret
0x000000000049cfc0 : mov eax, 4 ; add rsp, 8 ; ret
0x0000000000466b71 : mov eax, 4 ; ret
0x0000000000466b81 : mov eax, 5 ; ret
0x0000000000466b91 : mov eax, 6 ; ret
0x0000000000466ba1 : mov eax, 7 ; ret
0x000000000049cfa1 : mov eax, 8 ; add rsp, 8 ; ret
0x000000000043ed7f : mov eax, 8 ; pop rbx ; ret
0x000000000049eb55 : mov eax, 8 ; ret
0x000000000046424c : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000004155dc : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000411553 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00000000004157b8 : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000415ad8 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x0000000000487fc3 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000415dfc : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x00000000004652b4 : mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000047eebd : mov eax, dword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000478821 : mov eax, dword ptr [rax + 8] ; ret
0x000000000047442a : mov eax, dword ptr [rax + 8] ; test r8, r8 ; jne 0x474409 ; ret
0x000000000044febf : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000400d77 : mov eax, dword ptr [rax*8 + 0x4a1580] ; jmp rax
0x00000000004557b2 : mov eax, dword ptr [rax*8 + 0x4b3280] ; jmp rax
0x0000000000455803 : mov eax, dword ptr [rax*8 + 0x4b3380] ; jmp rax
0x00000000004578f3 : mov eax, dword ptr [rax*8 + 0x4b3480] ; jmp rax
0x0000000000456426 : mov eax, dword ptr [rax*8 + 0x4b3780] ; jmp rax
0x0000000000460601 : mov eax, dword ptr [rax*8 + 0x4b3c00] ; jmp rax
0x0000000000461925 : mov eax, dword ptr [rax*8 + 0x4b3d00] ; jmp rax
0x0000000000461e09 : mov eax, dword ptr [rax*8 + 0x4b3e00] ; jmp rax
0x0000000000460697 : mov eax, dword ptr [rax*8 + 0x4b4100] ; jmp rax
0x000000000049c6e6 : mov eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000049a3e9 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; add rsp, 8 ; ret
0x0000000000474d69 : mov eax, dword ptr [rax] ; ret
0x000000000044123c : mov eax, dword ptr [rbp - 0x48] ; call rax
0x0000000000445cb7 : mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000400b83 : mov eax, dword ptr [rbp - 0xc] ; leave ; ret
0x0000000000400bf8 : mov eax, dword ptr [rbp - 8] ; leave ; ret
0x0000000000476275 : mov eax, dword ptr [rbp] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000471f21 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000047b381 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000439fa4 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000439fb6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000439fc6 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000439fd6 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000439fe6 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000429baa : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000042b482 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043b730 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x0000000000439f70 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000043b681 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x0000000000439ed1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000043b701 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x0000000000439f51 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000004650ff : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x0000000000416df0 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000416e18 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004a0b18 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x4a0b2f ; call rax
0x00000000004652b1 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000417121 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000047ab68 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x47ab80 ; ret
0x000000000049c6f1 : mov eax, dword ptr [rdi + 0x90] ; ret
0x000000000049c771 : mov eax, dword ptr [rdi + 0x98] ; ret
0x000000000049c7b1 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000049c811 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000049c801 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000049c7c1 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x000000000044e4dc : mov eax, dword ptr [rdi*8 + 0x6cba40] ; ret
0x00000000004787b1 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x4787c7 ; ret
0x0000000000416ddf : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000049e515 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e527 ; ret
0x000000000049e530 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e547 ; ret
0x000000000049e750 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e767 ; ret
0x000000000043ee57 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x43ee49 ; ret
0x0000000000429906 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000043f6d8 : mov eax, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x6b8
0x00000000004114d0 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004643f7 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000410a10 : mov eax, dword ptr [rdx] ; ret
0x0000000000416dd1 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x416dd0 ; ret
0x0000000000488a30 : mov eax, dword ptr [rip + 0x2448aa] ; ret
0x000000000047444b : mov eax, dword ptr [rip + 0x258997] ; mov qword ptr [rsi], rax ; ret
0x00000000004743ea : mov eax, dword ptr [rip + 0x258a00] ; ret
0x000000000044d391 : mov eax, dword ptr [rip + 0x27f361] ; ret
0x0000000000446021 : mov eax, dword ptr [rip + 0x287321] ; ret
0x0000000000417101 : mov eax, dword ptr [rip + 0x2b2fb9] ; ret
0x000000000049d00c : mov eax, dword ptr [rsi + 0x10] ; add rsp, 8 ; ret
0x00000000004742dc : mov eax, dword ptr [rsi + 4] ; ret
0x000000000049d041 : mov eax, dword ptr [rsi + 8] ; add rsp, 8 ; ret
0x0000000000464337 : mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000049c7e6 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000401020 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000447cba : mov eax, dword ptr [rsp + 0x20] ; call rax
0x000000000044861d : mov eax, dword ptr [rsp + 0x28] ; call rax
0x000000000040e487 : mov eax, dword ptr [rsp + 0x30] ; lea r15, [rbx + r14] ; call rax
0x0000000000478c3c : mov eax, dword ptr [rsp + 0x38] ; add rsp, 0x68 ; ret
0x0000000000478abd : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x000000000043ef14 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000474d68 : mov eax, dword ptr fs:[rax] ; ret
0x000000000041d4e5 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045a930 : mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041d375 : mov eax, eax ; pop rbx ; ret
0x00000000004332a5 : mov eax, eax ; ret
0x0000000000477d52 : mov eax, eax ; sub eax, ecx ; ret
0x000000000041347a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046350b : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000463b59 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000463b2c : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040ff03 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411846 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047a903 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000413bed : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000475038 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000466389 : mov eax, ebx ; jmp 0x4661e3
0x0000000000410269 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041034e : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004406ae : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000041250b : mov eax, ebx ; pop rbx ; ret
0x000000000047a7c7 : mov eax, ecx ; adc eax, eax ; ret
0x000000000046b555 : mov eax, ecx ; jne 0x46b5ad ; ret
0x000000000046dbd3 : mov eax, ecx ; mov rcx, r15 ; mov r15, rax ; jmp 0x46dba9
0x000000000041c8ee : mov eax, ecx ; ret
0x0000000000417131 : mov eax, edi ; ret
0x00000000004882ee : mov eax, edx ; add rsp, 0x28 ; ret
0x000000000047b4f3 : mov eax, edx ; add rsp, 0x38 ; ret
0x000000000041e5f8 : mov eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000417db5 : mov eax, edx ; add rsp, 8 ; ret
0x0000000000472a6f : mov eax, edx ; call rax
0x000000000047cd1b : mov eax, edx ; jle 0x47cd2d ; ret
0x00000000004632cb : mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045c71a : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041ef82 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041049f : mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004100f0 : mov eax, edx ; pop rbx ; ret
0x0000000000427659 : mov eax, edx ; ret
0x0000000000478dc7 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000046ad83 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000488118 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040ef74 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000452584 : mov eax, esi ; ret
0x000000000043e5fb : mov eax, esi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000414f05 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042124a : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414f04 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045a92f : mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000045a869 : mov eax, r8d ; ret
0x0000000000477d51 : mov eax, r8d ; sub eax, ecx ; ret
0x00000000004bc899 : mov ebp, 0x4b ; add byte ptr [rax], al ; clc ; ret
0x00000000004bc8b1 : mov ebp, 0x4b ; add byte ptr [rax], al ; ret
0x000000000044fe77 : mov ebp, 0x740027bb ; add esi, ebx ; ret
0x0000000000467f67 : mov ebp, 0x83000001 ; call 0xffffffffc40dc7aa
0x00000000004aeae4 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000004747f1 : mov ebp, 0xc031fff8 ; ret
0x00000000004b81dd : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000465cd8 : mov ebp, 0xf80148c0 ; ret
0x0000000000465f5c : mov ebp, 0xf80148c6 ; ret
0x00000000004b9946 : mov ebp, 0xfb67d10d ; ret
0x000000000045596c : mov ebp, 0xfffffb08 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000455ef1 : mov ebp, 0xfffffb10 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000045d43f : mov ebp, 0xfffffb60 ; call rax
0x000000000047670f : mov ebp, 0xffffff78 ; call rax
0x000000000049ca8a : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000041b704 : mov ebp, dword ptr [rcx] ; add al, bpl ; ret 0xffff
0x0000000000420daf : mov ebp, eax ; call 0x41d044
0x0000000000440897 : mov ebp, eax ; call rax
0x0000000000441239 : mov ebp, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000478dcd : mov ebp, ecx ; nop ; jmp rdx
0x00000000004be1ed : mov ebp, edi ; jmp qword ptr [rax + 0x20fffd8a]
0x000000000047d9c7 : mov ebp, edi ; mov r15, rax ; jmp 0x47d9e3
0x000000000044163f : mov ebp, edi ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x00000000004a0d47 : mov ebx, 0x22 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000044fe78 : mov ebx, 0x3740027 ; ret
0x000000000040257d : mov ebx, 0x80 ; call rax
0x00000000004431b4 : mov ebx, 0xafb8341 ; je 0x4431c3 ; ret
0x00000000004b81db : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000400930 : mov ebx, 0xe0ff006c ; nop dword ptr [rax] ; pop rbp ; ret
0x0000000000483294 : mov ebx, 0xe8e7894c ; ret
0x00000000004465f6 : mov ebx, dword ptr [rbx + 0x28] ; test rbx, rbx ; jne 0x4465d9 ; jmp 0x4465cb
0x0000000000441646 : mov ebx, eax ; call rax
0x00000000004503bf : mov ebx, eax ; mov rdi, r12 ; call r15
0x000000000044f8b6 : mov ebx, edi ; test rax, rax ; je 0x44f8c6 ; call rax
0x00000000004c7c19 : mov ebx, esi ; jmp qword ptr [rsi]
0x00000000004bf8f4 : mov ecx, 0x41380e0a ; ret
0x0000000000442723 : mov ecx, 0x49fffdc1 ; mov edi, dword ptr [rsp] ; call rbx
0x0000000000442715 : mov ecx, 0x8b49fffd ; jge 0x442725 ; call rbx
0x00000000004b81d9 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x000000000043615c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000430505 : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x000000000046528b : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000429903 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000432873 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432a73 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432c73 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043bc00 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000043bc41 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000435e33 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435dc3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435d53 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435c75 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435c05 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435b95 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435b25 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435ab5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435a45 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004359d5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435f15 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000043bbe1 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000047393d : mov ecx, dword ptr [rsp + 0x30] ; call r9
0x0000000000478917 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x00000000004788a5 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000467418 : mov ecx, edi ; call rbx
0x000000000046dbd6 : mov ecx, edi ; mov r15, rax ; jmp 0x46dba6
0x00000000004332c1 : mov ecx, edx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004332c4 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000415df7 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000004452eb : mov ecx, esi ; call rbx
0x00000000004742c3 : mov ecx, esi ; cmp rcx, rdx ; jne 0x4742a8 ; ret
0x0000000000442992 : mov edi, 0x1f0ffffd ; add bl, dh ; ret
0x0000000000442f10 : mov edi, 0x24448b48 ; or byte ptr [rax + 0x39], cl ; ret
0x000000000044254d : mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x000000000041b71c : mov edi, 0x4a295c ; call 0x417957
0x000000000041b703 : mov edi, 0x4a298b ; call 0x417957
0x000000000046591d : mov edi, 0x4b2edc ; call 0x401b97
0x000000000040095c : mov edi, 0x4be8c0 ; call rax
0x0000000000471156 : mov edi, 0x6cb100 ; call rax
0x00000000004711c2 : mov edi, 0x6cb100 ; pop rbx ; pop rbp ; jmp rax
0x00000000004787df : mov edi, 0x6cb140 ; add rsp, 8 ; jmp rax
0x00000000004447c5 : mov edi, 0x6cb140 ; call rax
0x0000000000476cff : mov edi, 0x6cb140 ; jmp rax
0x00000000004008e0 : mov edi, 0x6cbb50 ; jmp rax
0x00000000004032f5 : mov edi, 0x6cbfe0 ; call rax
0x0000000000402fff : mov edi, 0x6cbfe0 ; call rbx
0x00000000004030a6 : mov edi, 0x6cc060 ; call rax
0x000000000040394c : mov edi, 0x6cc0a0 ; call r15
0x0000000000403904 : mov edi, 0x6cc0a0 ; call rax
0x00000000004460c1 : mov edi, 0x6cc6d0 ; call rax
0x000000000043ef4a : mov edi, 0x6cc720 ; call rax
0x0000000000402ff8 : mov edi, 0x6cc720 ; call rbx
0x000000000047af42 : mov edi, 0x6cc9c0 ; call rax
0x000000000047b06d : mov edi, 0x6cc9c4 ; call rdx
0x0000000000442976 : mov edi, 0x8b48fffd ; jge 0x442984 ; call rbx
0x0000000000442975 : mov edi, 0x8b48fffd ; jge 0x442985 ; call rbx
0x00000000004428ee : mov edi, 0x8b49fffd ; call rbx
0x0000000000442968 : mov edi, 0x8b49fffd ; cmp al, 0x24 ; call rbx
0x000000000044295a : mov edi, 0x8b49fffd ; jge 0x442968 ; call rbx
0x00000000004a3b01 : mov edi, 0xbff0fff8 ; clc ; jmp rax
0x00000000004a3ae1 : mov edi, 0xc020fff8 ; clc ; call qword ptr [rax]
0x00000000004a3b05 : mov edi, 0xc0e0fff8 ; clc ; call rax
0x000000000049c43a : mov edi, 1 ; call r14
0x0000000000401a37 : mov edi, 1 ; call rax
0x000000000049cd2c : mov edi, 1 ; jmp rax
0x0000000000409d25 : mov edi, dword ptr [rax + 0x10] ; mov qword ptr [rsp], rax ; call 0x406029
0x0000000000409d4c : mov edi, dword ptr [rax + 0x18] ; mov qword ptr [rsp], rax ; call 0x406029
0x0000000000409d36 : mov edi, dword ptr [rax + 8] ; mov qword ptr [rsp], rax ; call 0x406029
0x0000000000440da3 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000045d43e : mov edi, dword ptr [rbp - 0x4a0] ; call rax
0x000000000047670e : mov edi, dword ptr [rbp - 0x88] ; call rax
0x000000000049c9ee : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x0000000000466cc5 : mov edi, dword ptr [rbp] ; call r12
0x000000000040e40d : mov edi, dword ptr [rbp] ; call r14
0x00000000004409fa : mov edi, dword ptr [rbp] ; call rbx
0x00000000004409a8 : mov edi, dword ptr [rdi] ; call rbx
0x0000000000465278 : mov edi, dword ptr [rdx + 0x40] ; jmp 0x465244
0x00000000004b9c06 : mov edi, dword ptr [rdx] ; ret
0x000000000047b288 : mov edi, dword ptr [rip + 0x251736] ; call rax
0x000000000047b14b : mov edi, dword ptr [rip + 0x251873] ; jmp rax
0x0000000000440967 : mov edi, dword ptr [rsi] ; call rbx
0x00000000004479c1 : mov edi, dword ptr [rsp + 0x10] ; call r12
0x0000000000440e8f : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000447cb5 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000448618 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000044c20a : mov edi, dword ptr [rsp + 0x18] ; call r14
0x00000000004489fe : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000448135 : mov edi, dword ptr [rsp + 0x28] ; call r12
0x0000000000448e60 : mov edi, dword ptr [rsp + 0x28] ; call r14
0x00000000004477c2 : mov edi, dword ptr [rsp + 0x28] ; call r15
0x00000000004481e9 : mov edi, dword ptr [rsp + 0x28] ; call rbx
0x000000000044ba4a : mov edi, dword ptr [rsp + 0x30] ; call r14
0x000000000044a068 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x000000000044a4a8 : mov edi, dword ptr [rsp + 0x30] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000004493e8 : mov edi, dword ptr [rsp + 0x40] ; call r15
0x000000000044978f : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000400fc7 : mov edi, dword ptr [rsp + 0xc] ; call r12
0x000000000040101b : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000440df0 : mov edi, dword ptr [rsp] ; call rbx
0x000000000049e31a : mov edi, dword ptr [rsp] ; mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x0000000000408a02 : mov edi, eax ; call 0x41e8e8
0x0000000000421a9a : mov edi, eax ; call rcx
0x000000000046dbd9 : mov edi, eax ; jmp 0x46dba3
0x000000000047d9ca : mov edi, eax ; jmp 0x47d9e0
0x00000000004a39bd : mov edi, eax ; jmp qword ptr [rax]
0x000000000045257d : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x452571 ; mov rax, rsi ; ret
0x0000000000420dac : mov edi, eax ; mov rbp, rax ; call 0x41d047
0x0000000000420e38 : mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000049f11c : mov edi, ebp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00000000004425f8 : mov edi, ebp ; call 0x41e8e4
0x00000000004108dd : mov edi, ebp ; call 0x42cb54
0x000000000047e7a6 : mov edi, ebp ; call qword ptr [rbx]
0x000000000040e64c : mov edi, ebp ; call r14
0x0000000000450407 : mov edi, ebp ; call r15
0x000000000041f3b6 : mov edi, ebp ; call rax
0x0000000000441690 : mov edi, ebp ; call rbx
0x0000000000450984 : mov edi, ebp ; mov rdx, rbp ; call r15
0x000000000041fd17 : mov edi, ebp ; pop rbx ; pop rbp ; jmp rax
0x000000000041c70f : mov edi, ebx ; call 0x418964
0x000000000044d347 : mov edi, ebx ; call r12
0x00000000004455bd : mov edi, ebx ; call r14
0x0000000000462c79 : mov edi, ebx ; call r8
0x0000000000412ac7 : mov edi, ebx ; call rax
0x0000000000446181 : mov edi, ebx ; jmp 0x44614b
0x000000000049ef43 : mov edi, ebx ; jne 0x49ef35 ; pop rbx ; ret
0x0000000000415644 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004157b4 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000452247 : mov edi, ecx ; call 0x41e544
0x00000000004425dd : mov edi, edi ; call 0x41e8e4
0x0000000000410eb5 : mov edi, edi ; call rax
0x00000000004416d4 : mov edi, edi ; call rbx
0x00000000004655d4 : mov edi, edi ; xor r8d, r8d ; call rbx
0x0000000000452601 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x4525e9 ; mov rax, rsi ; ret
0x0000000000442de6 : mov edi, esi ; call 0x40f0b4
0x00000000004425ea : mov edi, esi ; call 0x41e8e4
0x000000000045cd26 : mov edi, esi ; call 0x4270f9
0x0000000000445c0e : mov edi, esi ; call r15
0x00000000004416b4 : mov edi, esi ; call rbx
0x00000000004503c2 : mov edi, esp ; call r15
0x000000000044166b : mov edi, esp ; call rbx
0x0000000000467415 : mov edi, esp ; mov r9, r15 ; call rbx
0x0000000000445cb4 : mov edi, esp ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000473889 : mov edi, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000473888 : mov edi, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000426f7f : mov edx, 0x430480 ; cmove rax, rdx ; ret
0x0000000000443036 : mov edx, 0x64 ; test eax, eax ; cmove eax, edx ; ret
0x0000000000444ae2 : mov edx, 0x89000264 ; ret
0x00000000004b90be : mov edx, 0xcac982a4 ; call 0xffffffffaf0e2f3e
0x0000000000447507 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x00000000004104be : mov edx, 0xffffffff ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000445330 : mov edx, 8 ; mov eax, edx ; ret
0x0000000000464218 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000047b361 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000412ac0 : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000042b47f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000429bad : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000047b375 : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000410eae : mov edx, dword ptr [rdi + 0x40] ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x000000000049e119 : mov edx, dword ptr [rdi] ; mov rdi, rbp ; call rbx
0x0000000000472a68 : mov edx, dword ptr [rdx + 8] ; add rdx, qword ptr [rax] ; mov rax, rdx ; call rax
0x000000000043bc22 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000043bc13 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000043bc63 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043bc73 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000004322b1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000432670 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431f01 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043c210 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x0000000000435ea0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000043c261 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x0000000000435ce1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000043c1f1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x000000000043bbd1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000041ecc9 : mov edx, dword ptr [rsp + 0x68] ; call rax
0x000000000049c379 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x0000000000418034 : mov edx, eax ; jmp 0x418051
0x0000000000421b30 : mov edx, eax ; jmp 0x421afb
0x0000000000469dd6 : mov edx, eax ; jmp 0x469ddf
0x000000000046b795 : mov edx, eax ; jmp 0x46b78a
0x0000000000450987 : mov edx, ebp ; call r15
0x00000000004108da : mov edx, ebp ; mov rdi, r13 ; call 0x42cb57
0x000000000047e7a1 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e761 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000450401 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x000000000045041c : mov edx, ebp ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x00000000004c68d9 : mov edx, edi ; call rsi
0x0000000000458a94 : mov edx, esp ; call 0x463b78
0x00000000004c770d : mov es, word ptr [rax] ; add byte ptr [rax + 0x16], ah ; sti ; call qword ptr [rax]
0x000000000046b349 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x0000000000441bb6 : mov es, word ptr [rip - 0x9cf0000] ; mov rdi, r13 ; call rbx
0x0000000000447445 : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000447437 : mov esi, 0x4a605a8a ; add byte ptr [rax - 0x7f], cl ; ret 0x6040
0x00000000004bc911 : mov esi, 0x4b ; add byte ptr [rax], al ; ret 0x4bbe
0x00000000004a3f4c : mov esi, 0x64fff91b ; sbb edi, ecx ; call rsp
0x0000000000476a1f : mov esi, 0x89fffffe ; ret 0x758b
0x000000000048a73f : mov esi, 0xbe0f2414 ; ret 0x8349
0x00000000004b81de : mov esi, 0xc2c1c0bf ; ret
0x000000000041515b : mov esi, 0xc48348ff ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000043ec84 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x00000000004416f6 : mov esi, 1 ; call rbx
0x00000000004418e3 : mov esi, 1 ; mov rdi, r12 ; call rbx
0x00000000004417af : mov esi, 1 ; mov rdi, r13 ; call rbx
0x0000000000441727 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x0000000000441b6d : mov esi, 1 ; mov rdi, rbp ; call rbx
0x0000000000462c73 : mov esi, 1 ; mov rdi, rbx ; call r8
0x0000000000462588 : mov esi, 1 ; mov rdi, rbx ; call rax
0x00000000004408e1 : mov esi, 2 ; jmp rax
0x0000000000441b61 : mov esi, 2 ; mov rdi, r12 ; call rbx
0x00000000004418d4 : mov esi, 2 ; mov rdi, r13 ; call rbx
0x00000000004417a0 : mov esi, 2 ; mov rdi, r14 ; call rbx
0x0000000000441718 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x00000000004408fb : mov esi, 3 ; jmp rax
0x00000000004420dc : mov esi, 3 ; mov rdi, r12 ; call rbx
0x0000000000442133 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x00000000004421b3 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x00000000004422b3 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000402ed8 : mov esi, 8 ; call 0x41f0f7
0x0000000000402ed7 : mov esi, 8 ; call 0x41f0f8
0x000000000049c9ea : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049ce49 : mov esi, dword ptr [rbx] ; call r14
0x000000000049e31e : mov esi, dword ptr [rdi + rbp*8 + 0x10] ; call rbx
0x000000000049ce98 : mov esi, dword ptr [rdi] ; call r14
0x000000000040e40a : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [r13] ; call r14
0x000000000049e115 : mov esi, dword ptr [rsi + 8] ; mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x00000000004331a9 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000400fc3 : mov esi, dword ptr [rsp + 0x10] ; mov edi, dword ptr [rsp + 0xc] ; call r12
0x00000000004452e6 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x0000000000451451 : mov esi, dword ptr [rsp + 0x20] ; mov rdi, r12 ; call r15
0x000000000041f3b1 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000004481e4 : mov esi, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x000000000044a063 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000041e9c1 : mov esi, dword ptr [rsp + 0x48] ; call rax
0x00000000004005d7 : mov esi, eax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e4 ; ret
0x000000000041ffae : mov esi, ebp ; mov rdi, rbx ; call rax
0x000000000046ad3c : mov esi, ebp ; xor edx, edx ; jmp 0x46ad0a
0x000000000047b286 : mov esi, ebx ; mov edi, dword ptr [rip + 0x251736] ; call rax
0x000000000045041f : mov esi, ebx ; mov rdi, r12 ; call r15
0x0000000000421a97 : mov esi, ebx ; mov rdi, rax ; call rcx
0x0000000000415689 : mov esi, ecx ; jbe 0x41562d ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000049cd2a : mov esi, edi ; mov edi, 1 ; jmp rax
0x000000000045d43b : mov esi, edi ; mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x000000000040e649 : mov esi, edi ; mov rdi, r13 ; call r14
0x00000000004531bb : mov esi, edi ; mov rdi, rbx ; call rax
0x000000000049cd81 : mov esi, esi ; mov rdi, r12 ; call r15
0x0000000000467412 : mov esi, esi ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x0000000000450981 : mov esi, esi ; mov rdi, r13 ; mov rdx, rbp ; call r15
0x000000000047e7a4 : mov esi, esp ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e764 : mov esi, esp ; mov edi, ebp ; call rax
0x00000000004503d3 : mov esi, esp ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000420e35 : mov esi, esp ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x0000000000450404 : mov esi, esp ; mov rdi, rbp ; call r15
0x0000000000420b5a : mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x0000000000420395 : mov esi, esp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000004c1e7c : mov esp, 0x35 ; idiv dil ; ret
0x0000000000426931 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000426961 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000426951 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000004bcb30 : mov esp, 0x4bc2 ; add byte ptr [rax], al ; add al, dl ; ret 0x4b
0x000000000043f3a0 : mov esp, 0xc48348ff ; cmp bl, dh ; ret
0x0000000000424313 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x00000000004bf47c : mov esp, 0xf000000b ; sti ; hlt ; call qword ptr [rax]
0x000000000042d55b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x0000000000426941 : mov esp, 0xf80148c0 ; ret
0x000000000040071f : mov esp, eax ; call 0x43ec78
0x0000000000478dca : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x000000000049ca8e : mov esp, ecx ; ret
0x0000000000440894 : mov esp, edx ; mov rbp, rax ; call rax
0x000000000042d41e : mov qword ptr [r10 + 0x18], r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049a3eb : mov qword ptr [r10], r8 ; add rsp, 8 ; ret
0x0000000000436150 : mov qword ptr [r9 - 8], rcx ; ret
0x0000000000463ec8 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000463f08 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464e68 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000463ecc : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464f06 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000415fd9 : mov qword ptr [rax + 8], 0 ; ret
0x00000000004436f5 : mov qword ptr [rax + 8], rdx ; ret
0x00000000004643f4 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000047b384 : mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000464334 : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047b378 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000465180 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000004553d7 : mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x0000000000472980 : mov qword ptr [rbp - 0xa8], r10 ; call rax
0x0000000000472b69 : mov qword ptr [rbp - 0xa8], rsi ; call rax
0x000000000047212f : mov qword ptr [rbp - 0xc8], r10 ; call rax
0x000000000044ddc0 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000478a04 : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000412506 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000478a3d : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000474a3e : mov qword ptr [rbx + 0x10], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412d08 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x00000000004789a2 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488344 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000415522 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000047cd82 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000041559d : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000412496 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x0000000000415854 : mov qword ptr [rbx + 8], rax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x00000000004159eb : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000047e425 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000488a68 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000049c749 : mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x000000000047947e : mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000043c42c : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x000000000043bd9c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043bd7c : mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043bddf : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043bdff : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043bdc0 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000004154b2 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000471114 : mov qword ptr [rdi + 0x300], rax ; ret
0x00000000004710e6 : mov qword ptr [rdi + 0x308], rax ; ret
0x000000000042d390 : mov qword ptr [rdi + 0x38], r9 ; ret
0x00000000004154e2 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004190cf : mov qword ptr [rdi + 0x58], rcx ; mov dword ptr [rdi + 4], eax ; ret
0x000000000049c7a0 : mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000043c3ec : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x000000000043bd3c : mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043c40c : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x000000000043bd5c : mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000435c77 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435c07 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435b97 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435b27 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043c2ea : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x0000000000435ab7 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043bc8a : mov qword ptr [rdi + 5], rdx ; ret
0x000000000043c30a : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x0000000000435a47 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043bc9a : mov qword ptr [rdi + 6], rdx ; ret
0x000000000043c32a : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x00000000004359d7 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043bcaa : mov qword ptr [rdi + 7], rdx ; ret
0x000000000047a7c3 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000479403 : mov qword ptr [rdi + 8], r9 ; ret
0x00000000004154b6 : mov qword ptr [rdi + 8], rax ; ret
0x00000000004270dd : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000049c758 : mov qword ptr [rdi + rsi*8], rdx ; add rsp, 8 ; ret
0x0000000000431d94 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431dd2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000047936e : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000043211b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435487 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004322fb : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435407 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004324eb : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435387 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004326bc : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004352f8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004328bc : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435268 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000432abc : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004351d8 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004792f9 : mov qword ptr [rdi - 8], r9 ; ret
0x0000000000431d98 : mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431dd6 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000431f4b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000432047 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431f93 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435507 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000045c915 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042d166 : mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000004792c8 : mov qword ptr [rdi], r9 ; ret
0x000000000043c276 : mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x000000000043bc66 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043bc76 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000043bc87 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000043bc97 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000043bca7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000004270da : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000043bc57 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000400597 : mov qword ptr [rdi], rcx ; ret
0x000000000043c263 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x0000000000435ce3 : mov qword ptr [rdi], rdx ; ret
0x000000000043614d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000043318d : mov qword ptr [rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000047a992 : mov qword ptr [rdi], rsi ; ret
0x00000000004101d2 : mov qword ptr [rdx + 0x130], rcx ; ret
0x000000000043b80a : mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x0000000000439ffa : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000043b82a : mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x000000000043a01a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000043b84a : mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x000000000043a03a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000043b6da : mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x0000000000439f2a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000416e75 : mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000043b683 : mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x0000000000439ed3 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000047b364 : mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000416de1 : mov qword ptr [rdx], rax ; ret
0x0000000000464215 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000401919 : mov qword ptr [rip + 0x2c8770], rax ; xor eax, eax ; ret
0x000000000049e476 : mov qword ptr [rsi + 0x28], rax ; ret
0x000000000046e460 : mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x0000000000474451 : mov qword ptr [rsi], rax ; ret
0x000000000041beba : mov qword ptr [rsp + 0x10], r10 ; call rax
0x000000000049ce92 : mov qword ptr [rsp + 0x10], r9 ; mov rsi, qword ptr [r15] ; call r14
0x000000000047c13f : mov qword ptr [rsp + 0x78], rbp ; call r12
0x000000000047c342 : mov qword ptr [rsp + 0x78], rbx ; call r12
0x000000000047c291 : mov qword ptr [rsp + 0x88], rbx ; call r14
0x000000000041bf71 : mov qword ptr [rsp + 8], r8 ; mov qword ptr [rsp], rcx ; call rdx
0x0000000000440da5 : mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000409d28 : mov qword ptr [rsp], rax ; call 0x406026
0x000000000041bf76 : mov qword ptr [rsp], rcx ; call rdx
0x000000000044fe9d : mov qword ptr fs:[rdx], rax ; ret
0x000000000043318c : mov qword ptr ss:[rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00000000004b90bd : mov r10d, 0xcac982a4 ; call 0xffffffffaf0e2f3f
0x000000000040071e : mov r12, rax ; call 0x43ec79
0x0000000000440893 : mov r12d, edx ; mov rbp, rax ; call rax
0x000000000047d9c6 : mov r13, r15 ; mov r15, rax ; jmp 0x47d9e4
0x0000000000441238 : mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000049c9e9 : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c9ed : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000046dbd8 : mov r15, rax ; jmp 0x46dba4
0x000000000047d9c9 : mov r15, rax ; jmp 0x47d9e1
0x000000000047393c : mov r9, qword ptr [rsp + 0x30] ; call r9
0x00000000004452ea : mov r9, r14 ; call rbx
0x0000000000467417 : mov r9, r15 ; call rbx
0x00000000004124a0 : mov rax, -1 ; pop rbx ; ret
0x0000000000413512 : mov rax, -1 ; ret
0x0000000000466b40 : mov rax, 1 ; ret
0x0000000000466b50 : mov rax, 2 ; ret
0x0000000000466b60 : mov rax, 3 ; ret
0x0000000000466b70 : mov rax, 4 ; ret
0x0000000000466b80 : mov rax, 5 ; ret
0x0000000000466b90 : mov rax, 6 ; ret
0x0000000000466ba0 : mov rax, 7 ; ret
0x0000000000476274 : mov rax, qword ptr [r13] ; add rax, qword ptr [rdx + 8] ; call rax
0x00000000004155db : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000411552 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004157b7 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000415ad7 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000487fc2 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000415dfb : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000004652b3 : mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000047eebc : mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000478820 : mov rax, qword ptr [rax + 8] ; ret
0x000000000044febe : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000400d76 : mov rax, qword ptr [rax*8 + 0x4a1580] ; jmp rax
0x00000000004557b1 : mov rax, qword ptr [rax*8 + 0x4b3280] ; jmp rax
0x0000000000455802 : mov rax, qword ptr [rax*8 + 0x4b3380] ; jmp rax
0x00000000004578f2 : mov rax, qword ptr [rax*8 + 0x4b3480] ; jmp rax
0x0000000000456425 : mov rax, qword ptr [rax*8 + 0x4b3780] ; jmp rax
0x0000000000460600 : mov rax, qword ptr [rax*8 + 0x4b3c00] ; jmp rax
0x0000000000461924 : mov rax, qword ptr [rax*8 + 0x4b3d00] ; jmp rax
0x0000000000461e08 : mov rax, qword ptr [rax*8 + 0x4b3e00] ; jmp rax
0x0000000000460696 : mov rax, qword ptr [rax*8 + 0x4b4100] ; jmp rax
0x000000000049c6e5 : mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000044123b : mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000445cb6 : mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000471f20 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000047b380 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000439ed0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000004a0b17 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x4a0b30 ; call rax
0x00000000004652b0 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000417120 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000049c6f0 : mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000049c770 : mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000049c7b0 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000049c810 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000049c800 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000049c7c0 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000044e4db : mov rax, qword ptr [rdi*8 + 0x6cba40] ; ret
0x00000000004787b0 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x4787c8 ; ret
0x0000000000416dde : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000416dd0 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x416dd1 ; ret
0x00000000004743e9 : mov rax, qword ptr [rip + 0x258a00] ; ret
0x000000000044d390 : mov rax, qword ptr [rip + 0x27f361] ; ret
0x0000000000446020 : mov rax, qword ptr [rip + 0x287321] ; ret
0x0000000000417100 : mov rax, qword ptr [rip + 0x2b2fb9] ; ret
0x000000000049d00b : mov rax, qword ptr [rsi + 0x10] ; add rsp, 8 ; ret
0x000000000049d040 : mov rax, qword ptr [rsi + 8] ; add rsp, 8 ; ret
0x000000000049c7e5 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000040101f : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000447cb9 : mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000044861c : mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000040e486 : mov rax, qword ptr [rsp + 0x30] ; lea r15, [rbx + r14] ; call rax
0x0000000000478c3b : mov rax, qword ptr [rsp + 0x38] ; add rsp, 0x68 ; ret
0x00000000004175d3 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000421249 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041d4e4 : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041d374 : mov rax, r8 ; pop rbx ; ret
0x00000000004332a4 : mov rax, r8 ; ret
0x000000000046b554 : mov rax, r9 ; jne 0x46b5ae ; ret
0x000000000046b5d5 : mov rax, r9 ; ret
0x0000000000413479 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000463b58 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000463b2b : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000474bc1 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049c919 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000413bec : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000475037 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000410268 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041034d : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004406ad : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000041250a : mov rax, rbx ; pop rbx ; ret
0x000000000041c8ed : mov rax, rcx ; ret
0x0000000000417130 : mov rax, rdi ; ret
0x00000000004882ed : mov rax, rdx ; add rsp, 0x28 ; ret
0x000000000047b4f2 : mov rax, rdx ; add rsp, 0x38 ; ret
0x000000000041e5f7 : mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000417db4 : mov rax, rdx ; add rsp, 8 ; ret
0x0000000000472a6e : mov rax, rdx ; call rax
0x000000000041ef81 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041819b : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000043edc7 : mov rax, rdx ; pop rbx ; ret
0x0000000000427658 : mov rax, rdx ; ret
0x000000000046ad82 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000488117 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040ef73 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000452583 : mov rax, rsi ; ret
0x000000000043e5fa : mov rax, rsi ; sub rax, rdx ; vzeroupper ; ret
0x000000000049ca89 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000478dcc : mov rbp, r9 ; nop ; jmp rdx
0x0000000000420dae : mov rbp, rax ; call 0x41d045
0x0000000000440896 : mov rbp, rax ; call rax
0x0000000000441645 : mov rbx, rax ; call rax
0x00000000004503be : mov rbx, rax ; mov rdi, r12 ; call r15
0x000000000044f8b5 : mov rbx, rdi ; test rax, rax ; je 0x44f8c7 ; call rax
0x000000000043bc40 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000478916 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x00000000004788a4 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x000000000046dbd5 : mov rcx, r15 ; mov r15, rax ; jmp 0x46dba7
0x00000000004332c0 : mov rcx, rdx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004332c3 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004742c2 : mov rcx, rsi ; cmp rcx, rdx ; jne 0x4742a9 ; ret
0x0000000000440def : mov rdi, qword ptr [r12] ; call rbx
0x000000000040e40c : mov rdi, qword ptr [r13] ; call r14
0x00000000004409f9 : mov rdi, qword ptr [r13] ; call rbx
0x0000000000440966 : mov rdi, qword ptr [r14] ; call rbx
0x00000000004409a7 : mov rdi, qword ptr [r15] ; call rbx
0x0000000000440da2 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000045d43d : mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x000000000047670d : mov rdi, qword ptr [rbp - 0x88] ; call rax
0x0000000000466cc4 : mov rdi, qword ptr [rbp] ; call r12
0x0000000000440b2e : mov rdi, qword ptr [rbp] ; call rbx
0x0000000000465277 : mov rdi, qword ptr [rdx + 0x40] ; jmp 0x465245
0x00000000004479c0 : mov rdi, qword ptr [rsp + 0x10] ; call r12
0x000000000044c209 : mov rdi, qword ptr [rsp + 0x18] ; call r14
0x0000000000448134 : mov rdi, qword ptr [rsp + 0x28] ; call r12
0x0000000000448e5f : mov rdi, qword ptr [rsp + 0x28] ; call r14
0x00000000004477c1 : mov rdi, qword ptr [rsp + 0x28] ; call r15
0x00000000004481e8 : mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x000000000044ba49 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000044a067 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004493e7 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000049e319 : mov rdi, qword ptr [rsp] ; mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x00000000004503c1 : mov rdi, r12 ; call r15
0x000000000044166a : mov rdi, r12 ; call rbx
0x0000000000467414 : mov rdi, r12 ; mov r9, r15 ; call rbx
0x0000000000445cb3 : mov rdi, r12 ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00000000004425f7 : mov rdi, r13 ; call 0x41e8e5
0x00000000004108dc : mov rdi, r13 ; call 0x42cb55
0x000000000040e64b : mov rdi, r13 ; call r14
0x000000000044168f : mov rdi, r13 ; call rbx
0x0000000000450983 : mov rdi, r13 ; mov rdx, rbp ; call r15
0x0000000000442de5 : mov rdi, r14 ; call 0x40f0b5
0x00000000004425e9 : mov rdi, r14 ; call 0x41e8e5
0x0000000000445c0d : mov rdi, r14 ; call r15
0x00000000004416b3 : mov rdi, r14 ; call rbx
0x00000000004425dc : mov rdi, r15 ; call 0x41e8e5
0x0000000000410eb4 : mov rdi, r15 ; call rax
0x00000000004416d3 : mov rdi, r15 ; call rbx
0x00000000004655d3 : mov rdi, r15 ; xor r8d, r8d ; call rbx
0x0000000000408a01 : mov rdi, rax ; call 0x41e8e9
0x0000000000421a99 : mov rdi, rax ; call rcx
0x0000000000420dab : mov rdi, rax ; mov rbp, rax ; call 0x41d048
0x0000000000420e37 : mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000049f11b : mov rdi, rbp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x0000000000450406 : mov rdi, rbp ; call r15
0x000000000041f3b5 : mov rdi, rbp ; call rax
0x0000000000441b72 : mov rdi, rbp ; call rbx
0x000000000041fd16 : mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000041c70e : mov rdi, rbx ; call 0x418965
0x000000000044d346 : mov rdi, rbx ; call r12
0x00000000004455bc : mov rdi, rbx ; call r14
0x0000000000462c78 : mov rdi, rbx ; call r8
0x0000000000412ac6 : mov rdi, rbx ; call rax
0x0000000000446180 : mov rdi, rbx ; jmp 0x44614c
0x000000000049ef42 : mov rdi, rbx ; jne 0x49ef36 ; pop rbx ; ret
0x0000000000415643 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004157b3 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000452246 : mov rdi, rcx ; call 0x41e545
0x000000000049c378 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x000000000049e118 : mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x000000000047b360 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000047b374 : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000431f00 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435ce0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000041ecc8 : mov rdx, qword ptr [rsp + 0x68] ; call rax
0x0000000000458a93 : mov rdx, r12 ; call 0x463b79
0x000000000047e7a0 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e760 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000418033 : mov rdx, rax ; jmp 0x418052
0x0000000000421b2f : mov rdx, rax ; jmp 0x421afc
0x0000000000469dd5 : mov rdx, rax ; jmp 0x469de0
0x000000000046b794 : mov rdx, rax ; jmp 0x46b78b
0x0000000000450986 : mov rdx, rbp ; call r15
0x00000000004108d9 : mov rdx, rbp ; mov rdi, r13 ; call 0x42cb58
0x000000000049e31d : mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x000000000049ce97 : mov rsi, qword ptr [r15] ; call r14
0x000000000040e409 : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r13] ; call r14
0x000000000049ce48 : mov rsi, qword ptr [rbx] ; call r14
0x00000000004452e5 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x0000000000451450 : mov rsi, qword ptr [rsp + 0x20] ; mov rdi, r12 ; call r15
0x000000000041f3b0 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000041e9c0 : mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000047e7a3 : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e763 : mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004503d2 : mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000450403 : mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000420b59 : mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x0000000000420394 : mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000041ffad : mov rsi, r13 ; mov rdi, rbx ; call rax
0x000000000049cd80 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x0000000000467411 : mov rsi, r14 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x000000000040e648 : mov rsi, r15 ; mov rdi, r13 ; call r14
0x00000000004531ba : mov rsi, r15 ; mov rdi, rbx ; call rax
0x00000000004005d6 : mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e5 ; ret
0x000000000046ad3b : mov rsi, rbp ; xor edx, edx ; jmp 0x46ad0b
0x000000000047b285 : mov rsi, rbx ; mov edi, dword ptr [rip + 0x251736] ; call rax
0x000000000045041e : mov rsi, rbx ; mov rdi, r12 ; call r15
0x0000000000421a96 : mov rsi, rbx ; mov rdi, rax ; call rcx
0x0000000000415688 : mov rsi, rcx ; jbe 0x41562e ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000049cd29 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x0000000000478dc9 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000049ca8d : mov rsp, rcx ; ret
0x0000000000436175 : mov word ptr [r9 - 2], cx ; ret
0x0000000000443509 : mov word ptr [rax + rcx*4], gs ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004270cd : mov word ptr [rax + rdx - 2], cx ; ret
0x00000000004c7505 : mov word ptr [rax], es ; add byte ptr [rax], bh ; adc al, 0xfb ; jmp qword ptr [rdx]
0x000000000043c36c : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x000000000043bcdc : mov word ptr [rdi + 0x10], cx ; ret
0x000000000043c474 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x000000000043bdc4 : mov word ptr [rdi + 0x18], cx ; ret
0x0000000000435f17 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000043c238 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
0x000000000043bc18 : mov word ptr [rdi + 4], dx ; ret
0x000000000043c28a : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x000000000043bc5a : mov word ptr [rdi + 8], dx ; ret
0x00000000004331c2 : mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000043249c : mov word ptr [rdi - 2], cx ; ret
0x00000000004322b4 : mov word ptr [rdi - 2], dx ; ret
0x0000000000432498 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x000000000043bbe3 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000043e575 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000435f1b : mov word ptr [rdi], cx ; ret
0x000000000043c1f3 : mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x0000000000435f83 : mov word ptr [rdi], dx ; ret
0x0000000000436172 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000004331bf : mov word ptr [rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000043b758 : mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x0000000000439f98 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000004c6b4c : mov word ptr [rdx - 0x54000000], es ; cli ; call rdx
0x000000000043b703 : mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x0000000000439f53 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000417b1e : mov word ptr [rdx], es ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c216a : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x000000000043e578 : mov word ptr [rsi - 2], cx ; ret
0x00000000004c8098 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; test byte ptr [rcx], al ; ret
0x00000000004c8148 : mov word ptr [rsi], es ; add qword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x000000000044ffa4 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x00000000004331be : mov word ptr ss:[rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x00000000004be2ac : movabs al, byte ptr [0x18fffdc128fffdc1] ; ret 0xfffd
0x000000000048af3d : movabs al, byte ptr [0x293ff08348000000] ; ret 0xfa81
0x00000000004c9909 : movabs al, byte ptr [0x41380e0a01940301] ; ret
0x00000000004c1131 : movabs al, byte ptr [0x41380e0a01cf0301] ; ret
0x000000000048f335 : movabs al, byte ptr [0xc74900758b48fffe] ; ret 0xc001
0x0000000000465273 : movabs al, byte ptr [0xeb407a8b48000000] ; ret
0x0000000000430a22 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000430a1e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000430acc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043bcb0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043c52d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000043be7d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000435bef : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435b7f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435b0f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435a9f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043c4cd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1c] ; ret
0x000000000043be1d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000435a2f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043c4ed : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x000000000043be3d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000004359bf : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043c50d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000043be5d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000435fdf : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435f6f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435eff : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435e8f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435e1f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435daf : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435d3f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435ccf : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435c5f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042702c : movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; ja 0x427049 ; ret
0x0000000000427045 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x000000000043514b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x00000000004351bb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043c344 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0xf] ; ret
0x000000000043bcc4 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043bd07 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043bcf7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043bd78 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043bd38 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043bd58 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043bcd8 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043be79 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043be19 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043be39 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043be59 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043596a : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004359c4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bcb1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043c52e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000043be7e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x0000000000435bf0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435b80 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435b10 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435aa0 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043c4ce : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1c] ; ret
0x000000000043be1e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x0000000000435a30 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043c4ee : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x000000000043be3e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000004359c0 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043c50e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000043be5e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x0000000000435fe0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435f70 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435f00 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435e90 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435e20 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435db0 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435d40 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435cd0 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435c60 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042702d : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x427048 ; ret
0x0000000000427046 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000043514c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x00000000004351bc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004358f7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435877 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004357e7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435767 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004356e7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435667 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004355e7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435567 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004354e7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435467 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004353e7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435367 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004352d7 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435247 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004351b7 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043c345 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0xf] ; ret
0x000000000043bcc5 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043bd18 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043bd08 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043bcf8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043bd79 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043bd39 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043bd59 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043bcd9 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043be7a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043be1a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043be3a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043be5a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043596b : movq qword ptr [rdi], mm0 ; ret
0x00000000004359c5 : movq qword ptr [rdi], mm1 ; ret
0x00000000004c3664 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [r8], r8b ; pop rax ; xor edi, eax ; jmp rsp
0x00000000004c8cfd : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; sal al, 0xfc ; call qword ptr [rax]
0x00000000004b9a82 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004bacdd : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x4bad36 ; jmp 0x4bac77
0x000000000041b5a8 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004749ec : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0x0000000000417e07 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000004bb315 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004babd1 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000479322 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000400707 : movsd dword ptr [rdi], dword ptr [rsi] ; test eax, 0x415d002c ; pop rsp ; ret
0x0000000000491d13 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000491ccd : movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000477d81 : movsx eax, dl ; neg eax ; ret
0x0000000000421eb1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x0000000000433586 : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x0000000000430502 : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000049be69 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000049b8e1 : movsxd rax, dword ptr [r8 + r11*4] ; add rax, r8 ; jmp rax
0x000000000049a3b9 : movsxd rax, dword ptr [r8 + rcx*4] ; add r8, rax ; jmp r8
0x000000000049b8e2 : movsxd rax, dword ptr [rax + rbx*4] ; add rax, r8 ; jmp rax
0x000000000049a3ba : movsxd rax, dword ptr [rax + rcx*4] ; add r8, rax ; jmp r8
0x00000000004c4bc5 : movsxd rax, dword ptr [rax] ; add al, cl ; jnp 0x4c4bca ; call rdi
0x000000000049b589 : movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x000000000049be6a : movsxd rax, dword ptr [rsi + rax*4] ; add rax, r14 ; jmp rax
0x000000000042ee4d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000043ba79 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000049a5e1 : movsxd rcx, dword ptr [r14 + rsi*4] ; add rcx, r14 ; jmp rcx
0x000000000040ef15 : movsxd rcx, dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000004666dc : movsxd rcx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000433587 : movsxd rcx, dword ptr [rbx + rcx*4] ; add r9, r11 ; jmp r9
0x0000000000430503 : movsxd rcx, dword ptr [rbx + rcx*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000042ee4e : movsxd rcx, dword ptr [rbx + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000043ba7a : movsxd rcx, dword ptr [rbx + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000421eb2 : movsxd rcx, dword ptr [rdx + rcx*4] ; lea r10, [r10 + r9] ; jmp r10
0x000000000049a5e2 : movsxd rcx, dword ptr [rsi + rsi*4] ; add rcx, r14 ; jmp rcx
0x00000000004be1dd : movsxd rdi, ebp ; jmp qword ptr [rax + 0x20fffd84]
0x00000000004305cf : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004305d0 : movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000043da5c : movsxd rsi, esi ; ret 0x7520
0x0000000000491cce : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x0000000000491d14 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x000000000045002c : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047b42c : movzx eax, al ; neg eax ; ret
0x000000000047b1d6 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046b105 : movzx eax, al ; ret
0x000000000041482c : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004164c6 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000004126ed : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004159ef : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000041396a : movzx eax, byte ptr [rax] ; ret
0x000000000049d369 : movzx eax, byte ptr [rcx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000423248 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000042ee60 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000426ac0 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000423263 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000041568d : movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000412700 : movzx eax, byte ptr [rdx] ; ret
0x000000000041482d : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043ecd7 : movzx eax, cl ; pop rbx ; ret
0x000000000043ecff : movzx eax, dl ; pop rbx ; ret
0x000000000043e0ba : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x43e0b9 ; ret
0x000000000043e16a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x43e169 ; ret
0x000000000042fd04 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000423260 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042ee63 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000040df6f : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40df57 ; ret
0x000000000042ed31 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000042338f : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000042ebc3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000043da84 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000043dae4 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000043dad4 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000043dac4 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000043dab4 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000043daa4 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000043da94 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000435910 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042fab7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000043da6b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x0000000000435ff0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000426ac3 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000426ae9 : movzx edx, dl ; sub eax, edx ; ret
0x0000000000435890 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000435f80 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000466cc1 : movzx esi, bl ; mov rdi, qword ptr [rbp] ; call r12
0x000000000046b104 : movzx rax, al ; ret
0x0000000000465da7 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000004634c7 : neg byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000041727f : neg eax ; ret
0x000000000043fe51 : neg edx ; cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x00000000004a41f4 : nop ; adc al, 0xf9 ; call qword ptr [rax]
0x00000000004a41fc : nop ; adc edi, ecx ; call qword ptr [rax]
0x00000000004c2da0 : nop ; add bh, al ; call qword ptr [rcx]
0x0000000000410d78 : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000413d4c : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000043503b : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000047bfee : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x3950245c], cl ; ret
0x00000000004631bb : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000042f16c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041ba7a : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000468586 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], 0x94 ; ret
0x00000000004bf73d : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; je 0x4bf755 ; ret
0x00000000004bf74b : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000043ef1f : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000004454af : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042692f : nop ; bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x0000000000488b8f : nop ; call rax
0x00000000004a43ec : nop ; cmp cl, 0xff ; mov al, 0x80 ; stc ; call rax
0x00000000004a3dc4 : nop ; fdiv st(0), st(0) ; jmp rax
0x00000000004120c2 : nop ; jmp 0x411fcc
0x0000000000478dcf : nop ; jmp rdx
0x0000000000400a11 : nop ; leave ; ret
0x00000000004320cf : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004322af : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000046af8f : nop ; mov eax, 0x66 ; syscall ; ret
0x000000000041772f : nop ; mov eax, 0xffffffff ; ret
0x0000000000410a0f : nop ; mov eax, dword ptr [rdx] ; ret
0x000000000046b34f : nop ; mov eax, edi ; ret
0x000000000043266f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043c20f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x000000000041249f : nop ; mov rax, -1 ; pop rbx ; ret
0x000000000041644f : nop ; mov rax, -1 ; ret
0x0000000000417a44 : nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044617f : nop ; mov rdi, rbx ; jmp 0x44614d
0x000000000041f3af : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000043bcaf : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000462adf : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x462aae
0x0000000000462ade : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x462aaf
0x0000000000400a7c : nop ; pop rbp ; ret
0x00000000004a3964 : nop ; push -8 ; push qword ptr [rax] ; insb byte ptr [rdi], dx ; clc ; call rax
0x000000000043e44f : nop ; ret
0x0000000000409d8c : nop ; ret 0xffff
0x00000000004a4214 : nop ; sbb cl, bh ; call qword ptr [rax]
0x00000000004be201 : nop ; std ; jmp qword ptr [rax]
0x00000000004be238 : nop ; std ; jmp rax
0x0000000000416e1f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004a39ac : nop ; xchg al, bh ; jmp rax
0x0000000000426aef : nop ; xor eax, eax ; ret
0x00000000004269af : nop ; xor rax, rax ; ret
0x00000000004787eb : nop dword ptr [rax + rax] ; add rsp, 8 ; ret
0x000000000047e64b : nop dword ptr [rax + rax] ; call rbx
0x000000000043bbeb : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004008e8 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x000000000047b153 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x000000000041351b : nop dword ptr [rax + rax] ; ret
0x0000000000413cdb : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000466b0c : nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000400ee5 : nop dword ptr [rax] ; call qword ptr [rbx + 0x10]
0x000000000047e4a9 : nop dword ptr [rax] ; call rax
0x000000000041725c : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x000000000041149d : nop dword ptr [rax] ; mov eax, dword ptr [rdx] ; ret
0x000000000042d0e4 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x000000000041ecc4 : nop dword ptr [rax] ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x0000000000400935 : nop dword ptr [rax] ; pop rbp ; ret
0x000000000041f084 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000043eebc : nop dword ptr [rax] ; pop rbx ; ret
0x00000000004066d5 : nop dword ptr [rax] ; ret
0x000000000049e9ad : nop dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000411ce4 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000047e64a : nop word ptr [rax + rax] ; call rbx
0x000000000041351a : nop word ptr [rax + rax] ; ret
0x0000000000413cda : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000445371 : not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x00000000004bf4c5 : or al, 0 ; add al, ch ; sti ; hlt ; call qword ptr [rdx]
0x000000000042a817 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042be8f : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046b212 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000041c8e9 : or al, 0 ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041d1fa : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000046b18f : or al, 0 ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000452e10 : or al, 0x13 ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x00000000004bfecc : or al, 0x16 ; add byte ptr [rax], al ; loopne 0x4bff08 ; cmc ; call qword ptr [rax]
0x0000000000423246 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000041d372 : or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x0000000000469dd3 : or al, 0x20 ; mov rdx, rax ; jmp 0x469de2
0x000000000041bf78 : or al, 0x24 ; call rdx
0x00000000004447c1 : or al, 0x24 ; je 0x4447d5 ; mov edi, 0x6cb140 ; call rax
0x00000000004186d0 : or al, 0x3f ; sub eax, dword ptr [rax] ; test rax, rax ; je 0x4186e4 ; call rax
0x0000000000462ae2 : or al, 0x40 ; jmp 0x462aab
0x0000000000462ae1 : or al, 0x40 ; jmp 0x462aac
0x0000000000400fca : or al, 0x41 ; call rsp
0x00000000004460df : or al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000478ac0 : or al, 0x48 ; add esp, 0x38 ; ret
0x000000000040101e : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000047493b : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047b513 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000047b9ef : or al, 0x5d ; pop r12 ; pop r14 ; ret
0x000000000046282a : or al, 0x7e ; ret
0x000000000045d7a9 : or al, 0x83 ; ret
0x00000000004590ac : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000421eb3 : or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x0000000000429904 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000433588 : or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000430504 : or al, 0x8b ; lea r9, [r11 + r9] ; jmp r9
0x000000000048a4fb : or al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000046b348 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000042ee4f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000043ba7b : or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000004c86cc : or al, 0x9e ; add byte ptr [rax], al ; and byte ptr [rdi], al ; cld ; call qword ptr [rax]
0x0000000000430508 : or al, 0xb ; jmp r9
0x000000000043ba7f : or al, 0xb ; jmp rcx
0x000000000049a5e3 : or al, 0xb6 ; add rcx, r14 ; jmp rcx
0x0000000000435b13 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000427033 : or al, 0xf3 ; ret
0x0000000000462f4b : or al, 0xf6 ; ret 0xf04
0x000000000045d72c : or al, 0xf6 ; ret 0xf08
0x00000000004c815c : or al, 7 ; or byte ptr [rcx + 0xb], al ; add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x0000000000450431 : or al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x00000000004234dd : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042aa21 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423501 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049c45e : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000442de1 : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call 0x40f0b9
0x0000000000408796 : or al, byte ptr [rbx - 0x7bf0fd07] ; ret
0x000000000047dab0 : or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8008
0x000000000048a027 : or al, byte ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8348
0x00000000004c72c3 : or al, byte ptr [rcx] ; ret
0x0000000000497367 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000477a09 : or al, ch ; add dword ptr [rcx], ebp ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000409257 : or al, ch ; ret
0x000000000040c658 : or al, ch ; ret 0xff99
0x0000000000465898 : or al, ch ; ret 1
0x00000000004a42cd : or bh, cl ; jmp qword ptr [rax]
0x00000000004436f8 : or bl, al ; nop word ptr [rax + rax] ; ret
0x0000000000435cd3 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00000000004502d7 : or bl, dh ; ret
0x000000000040a805 : or byte ptr [eax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x0000000000415856 : or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x0000000000472901 : or byte ptr [r8 + 0x29], cl ; ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x0000000000410f27 : or byte ptr [r8 + 0x29], r9b ; ret
0x00000000004744df : or byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000439f28 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047e8f6 : or byte ptr [r8 - 0x77], cl ; ret
0x000000000040ed22 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x0000000000441267 : or byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000497542 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046a533 : or byte ptr [r9 + 0x39], cl ; ret 0x8e0f
0x000000000049be67 : or byte ptr [r9 + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x0000000000439fe7 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x000000000046479f : or byte ptr [r9 - 0x77], r9b ; ret
0x0000000000410f28 : or byte ptr [rax + 0x29], cl ; ret
0x00000000004176ab : or byte ptr [rax + 0x29], cl ; ret 0x149
0x0000000000472902 : or byte ptr [rax + 0x29], cl ; ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x0000000000417237 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000442f15 : or byte ptr [rax + 0x39], cl ; ret
0x000000000041c7e9 : or byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000479705 : or byte ptr [rax + 0x39], cl ; ret 0x8949
0x00000000004c61f2 : or byte ptr [rax + 0xb], cl ; push rdx ; ret
0x00000000004c2b74 : or byte ptr [rax + 0xb], cl ; ret
0x0000000000475e7b : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x00000000004042dc : or byte ptr [rax + 1], cl ; ret
0x000000000041bb17 : or byte ptr [rax + 1], cl ; ret 0x8948
0x000000000046815c : or byte ptr [rax - 0x39], cl ; ret
0x00000000004269cb : or byte ptr [rax - 0x73], cl ; add eax, 0x1d ; ret
0x00000000004269df : or byte ptr [rax - 0x73], cl ; add eax, 0x8449 ; ret
0x0000000000419433 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x00000000004743e8 : or byte ptr [rax - 0x75], cl ; add eax, 0x258a00 ; ret
0x0000000000440da1 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x0000000000409d38 : or byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x406027
0x000000000040e3ea : or byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000439f2d : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000004744e0 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004406ac : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041bf75 : or byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rdx
0x0000000000439f29 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000041fd15 : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x000000000041819a : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000047e357 : or byte ptr [rax - 0x77], cl ; ret
0x0000000000473230 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000040ed23 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004731d9 : or byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000047322f : or byte ptr [rax - 0x77], r9b ; ret 0x8948
0x000000000041c7e5 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc27b0ffc
0x000000000041c7e4 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc27b0ffd
0x000000000041d3a8 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000450454 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x0000000000441197 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000042d176 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042d1fe : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004633ae : or byte ptr [rax - 0x7d], cl ; ret 0x4803
0x0000000000473498 : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045c8d2 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x0000000000411828 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000410fdd : or byte ptr [rax - 9], cl ; fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x000000000042373c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000418044 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000418005 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8948
0x000000000042373d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042abc1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423761 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000415fdc : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041e4a6 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000049cfa2 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000402ed9 : or byte ptr [rax], al ; add byte ptr [rax], al ; call 0x41f0f6
0x0000000000445331 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000043ed80 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000049eb56 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040a806 : or byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x000000000042c27e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049dd40 : or byte ptr [rbp + 0x39], cl ; ret 0x4776
0x00000000004790ac : or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], 0x89 ; ret 0xf749
0x000000000047e589 : or byte ptr [rbp + 0x440f4cf6], al ; ret
0x000000000048a383 : or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000047442c : or byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x32], 0xf3 ; ret
0x000000000041e6a0 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000405d73 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000401bf5 : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004134aa : or byte ptr [rbx + 0x5d], bl ; sub rax, rdx ; ret
0x000000000049cf26 : or byte ptr [rbx + 0x634801eb], al ; ret
0x0000000000462ae0 : or byte ptr [rbx + 0xc], 0x40 ; jmp 0x462aad
0x0000000000457db7 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000040ff71 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x00000000004710e9 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000000000047a8fb : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000046a534 : or byte ptr [rcx + 0x39], cl ; ret 0x8e0f
0x000000000045c719 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x000000000047f89a : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000049be68 : or byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000004c815e : or byte ptr [rcx + 0xb], al ; add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x00000000004c1057 : or byte ptr [rcx + 0xb], al ; ret
0x000000000046236b : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000048040b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004799a0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x000000000040e647 : or byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, r13 ; call r14
0x000000000047a902 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000049ce43 : or byte ptr [rcx - 0x73], cl ; sbb al, 0xcc ; mov rsi, qword ptr [rbx] ; call r14
0x000000000041220a : or byte ptr [rcx - 0x74b777bb], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x0000000000439fe8 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x00000000004647a0 : or byte ptr [rcx - 0x77], cl ; ret
0x0000000000489ee2 : or byte ptr [rcx - 0x77], cl ; ret 0x44c6
0x000000000041df39 : or byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000040e53a : or byte ptr [rcx - 0x7d], cl ; ret
0x00000000004506d3 : or byte ptr [rcx - 0x7d], cl ; ret 0xf301
0x0000000000449339 : or byte ptr [rcx - 0xa], al ; ret
0x000000000045b5f1 : or byte ptr [rcx], al ; ret 0xd529
0x000000000049da46 : or byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x1c ; and al, 0xf ; ret 0x8348
0x000000000049d26f : or byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x34 ; and al, 0xf ; ret 0x8348
0x00000000004432ae : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000452420 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000004181db : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004bb59e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004715a7 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x00000000004711c1 : or byte ptr [rdi + 0x6cb100], bh ; pop rbx ; pop rbp ; jmp rax
0x0000000000478651 : or byte ptr [rdi + 0x6cb140], bh ; call rax
0x000000000040394b : or byte ptr [rdi + 0x6cc0a0], bh ; call r15
0x00000000004c00cb : or byte ptr [rdi + 0xb], al ; add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x00000000004c53ac : or byte ptr [rdi + 0xb], al ; jae 0x4c53c0 ; ret
0x00000000004825a8 : or byte ptr [rdi + rcx - 0x4a], al ; sub byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000044a6c3 : or byte ptr [rdi], 0x94 ; ret 0x8348
0x000000000044d909 : or byte ptr [rdi], cl ; mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x00000000004159ee : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x00000000004629a1 : or byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000488329 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000415857 : or byte ptr [rdi], cl ; mov dh, 2 ; pop rbx ; ret
0x000000000049cdf6 : or byte ptr [rdi], cl ; ret 0xfc3
0x0000000000430acb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000044e594 : or byte ptr [rdi], cl ; test dh, dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000455ef6 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000049cdf5 : or byte ptr [rdi], r9b ; ret 0xfc3
0x00000000004a39b8 : or byte ptr [rdx - 0x742f0008], 0xf8 ; jmp qword ptr [rax]
0x00000000004c0d18 : or byte ptr [rdx - 0xb], ch ; call qword ptr [rsi]
0x00000000004004cc : or byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004c36f8 : or byte ptr [rsi], bh ; clc ; call qword ptr [rax]
0x0000000000476d16 : or byte ptr [rsp + 0x5b], dh ; ret
0x00000000004a4289 : or cl, bh ; call rax
0x000000000047b677 : or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x000000000044d490 : or cl, byte ptr [rax + 0x39] ; ret 0x3a76
0x00000000004126de : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000412f27 : or cl, byte ptr [rax + 1] ; ret 0x8949
0x000000000046523f : or cl, byte ptr [rax - 0x77] ; ret
0x0000000000412210 : or cl, byte ptr [rax - 0x7d] ; ret
0x0000000000425c8a : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000452a77 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000048a4c3 : or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000464217 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x0000000000400538 : or cl, byte ptr [rcx + 0x1c829f0] ; sar dword ptr [rcx], 1 ; ret 0xffb8
0x000000000048a389 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000408498 : or cl, ch ; ret
0x0000000000462db2 : or cl, ch ; ret 0xfffc
0x00000000004885b5 : or cl, cl ; cmove rax, rdx ; ret
0x0000000000435bf3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000049e535 : or dh, bl ; ret
0x000000000047e647 : or dh, byte ptr [rbp - 0x4d] ; nop word ptr [rax + rax] ; call rbx
0x000000000041c3c3 : or dh, dh ; ret 0x7404
0x000000000041c33e : or dh, dh ; ret 0xf04
0x0000000000402bce : or dh, dh ; ret 0xfdf
0x000000000040dea7 : or dword ptr [rax + rax*8 - 0x38b7938c], eax ; ret 0xfff0
0x000000000040257a : or dword ptr [rax - 0x73], ecx ; mov ebx, 0x80 ; call rax
0x000000000047670c : or dword ptr [rax - 0x75], ecx ; mov ebp, 0xffffff78 ; call rax
0x000000000042411e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000042366d : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042c12f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004235c7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000410b3f : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000048a4a3 : or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000430286 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000412d20 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000044dd5b : or dword ptr [rbx], 0xf390fffd ; ret
0x00000000004791fc : or dword ptr [rcx + 0x39], ecx ; ret 0x870f
0x0000000000420666 : or dword ptr [rcx - 0x7d], ecx ; cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000042084c : or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x0000000000401a34 : or dword ptr [rcx], esi ; idiv byte ptr [rdi + 1] ; call rax
0x0000000000478b36 : or dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x0000000000466893 : or dword ptr [rdx - 0x76b70005], eax ; ret 0x8949
0x0000000000474d49 : or dword ptr [rip + 0x256420], 1 ; pop rbx ; ret
0x00000000004c72c0 : or eax, 0x10a0303 ; ret
0x00000000004c7370 : or eax, 0x1370303 ; ret
0x000000000043c4d1 : or eax, 0x1c478d48 ; ret
0x0000000000416192 : or eax, 0x28c48348 ; pop rbx ; pop rbp ; ret
0x00000000004c72b0 : or eax, 0x34b0303 ; ret
0x00000000004c7310 : or eax, 0x35b0303 ; ret
0x000000000046239a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000462aa2 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000042d752 : or eax, 0x48c0bc0f ; lea eax, [rdi + rax] ; ret
0x0000000000440dcf : or eax, 0x49fffddb ; mov edi, dword ptr [rbp] ; call rbx
0x000000000048a517 : or eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000042a677 : or eax, 0x83480000 ; ret 0x4910
0x000000000042a6e1 : or eax, 0x83480000 ; ret 0xe910
0x00000000004a132d : or eax, 0x834825eb ; ret 0x4810
0x00000000004ae839 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x00000000004babd3 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x00000000004416ce : or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x0000000000435aa3 : or eax, 0xf7f0ff3 ; ret
0x0000000000444cdc : or eax, 0xffffffff ; ret
0x00000000004c815f : or eax, dword ptr [r11] ; add dword ptr es:[rdx], ecx ; ret
0x00000000004bf495 : or eax, dword ptr [rax] ; add al, ch ; sti ; hlt ; call qword ptr [rdx]
0x00000000004bf47d : or eax, dword ptr [rax] ; add al, dh ; sti ; hlt ; call qword ptr [rax]
0x000000000045e3cf : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042340d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a881 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423431 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004bf3c5 : or eax, dword ptr [rax] ; add byte ptr [rax - 6], bl ; hlt ; call qword ptr [rbx]
0x000000000044dd84 : or eax, dword ptr [rbx + 0x67403fe] ; pop rbx ; ret
0x00000000004c8160 : or eax, dword ptr [rbx] ; add dword ptr es:[rdx], ecx ; ret
0x00000000004c9629 : or eax, dword ptr [rsi + rcx + 0x38] ; ret
0x000000000045e3ce : or eax, dword ptr fs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000416e14 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004c99df : or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000004c7399 : or ebx, edi ; jmp rsi
0x0000000000435c63 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000047ab6e : or ebx, esi ; ret
0x000000000041dd3a : or ecx, dword ptr [rax - 0x3f] ; out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x0000000000419584 : or ecx, dword ptr [rax - 0x3f] ; out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x000000000041034c : or ecx, dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004104f7 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x00000000004484d5 : or ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000048a4df : or ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004c5376 : or ecx, dword ptr [rdx + 0xa] ; ret
0x00000000004a428d : or ecx, edi ; call qword ptr [rax]
0x000000000042d164 : or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000004c53ae : or esi, dword ptr [rbx + 0xa] ; ret
0x00000000004bf748 : or esi, dword ptr [rbx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000435b83 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000412d21 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000435cd2 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435c62 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435bf2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004c53ad : or r14d, dword ptr [r11 + 0xa] ; ret
0x0000000000435b82 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004c9628 : or r8d, dword ptr [r14 + rcx + 0x38] ; ret
0x000000000042d163 : or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x000000000044d48f : or r9b, byte ptr [r8 + 0x39] ; ret 0x3a76
0x0000000000462db1 : or r9b, r13b ; ret 0xfffc
0x00000000004c5375 : or r9d, dword ptr [r10 + 0xa] ; ret
0x00000000004c736f : or rax, 0x1370303 ; ret
0x00000000004c72af : or rax, 0x34b0303 ; ret
0x00000000004c730f : or rax, 0x35b0303 ; ret
0x0000000000462399 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000462aa1 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x0000000000444cdb : or rax, 0xffffffffffffffff ; ret
0x0000000000497242 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004503c3 : out 0x41, eax ; call rdi
0x0000000000475e29 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004503d4 : out 0x48, al ; mov edi, dword ptr [rsp + 0x28] ; call r15
0x0000000000420e36 : out 0x48, al ; mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x0000000000450405 : out 0x48, al ; mov edi, ebp ; call r15
0x0000000000445cb5 : out 0x48, eax ; mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000467416 : out 0x4d, eax ; mov ecx, edi ; call rbx
0x0000000000420396 : out 0x5b, al ; pop rbp ; pop r12 ; jmp rax
0x00000000004164e3 : out 0x5b, al ; ret
0x000000000047388a : out 0x5b, eax ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000420b5b : out 0x5d, al ; pop r12 ; jmp rax
0x000000000047e7a5 : out 0x89, al ; out dx, eax ; call qword ptr [rbx]
0x000000000047e765 : out 0x89, al ; out dx, eax ; call rax
0x000000000040365b : out 0x89, eax ; ret 0x8948
0x00000000004b9a80 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004409f5 : out 0xde, eax ; std ; dec dword ptr [rcx - 0x75] ; jge 0x440a05 ; call rbx
0x0000000000483297 : out 0xe8, eax ; ret
0x000000000049e828 : out 0xe8, eax ; ret 0xffe7
0x000000000043546a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004354ea : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004bb7a8 : out 0xf5, eax ; mov ch, 0xab ; ret
0x00000000004a3891 : out 0xf7, al ; call qword ptr [rax]
0x00000000004a38cd : out 0xf7, al ; call rax
0x0000000000405989 : out 1, eax ; add byte ptr [rax + 0x29], cl ; ret
0x000000000049eb51 : out 2, al ; jne 0x49eb64 ; mov eax, 8 ; ret
0x000000000042cfd9 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x0000000000458d7a : out dx, al ; add dword ptr [rcx - 0x7f], ecx ; jmp qword ptr [rax]
0x000000000041dd3d : out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x00000000004009a9 : out dx, al ; call rax
0x00000000004a3c49 : out dx, al ; clc ; inc dword ptr [rax - 0x10] ; clc ; call rax
0x00000000004a3c69 : out dx, al ; clc ; jmp qword ptr [rax]
0x00000000004babd7 : out dx, al ; fcmovb st(0), st(3) ; ret
0x000000000041e67e : out dx, al ; fcos ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000043211a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000049c6e4 : out dx, al ; mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000041ffaf : out dx, al ; mov rdi, rbx ; call rax
0x000000000043587a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042bfde : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046ad3d : out dx, al ; xor edx, edx ; jmp 0x46ad09
0x000000000041c0c3 : out dx, eax ; add al, 0x8d ; dec byte ptr [r8 - 0x75] ; ret
0x000000000041ee95 : out dx, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000419587 : out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x000000000049f11d : out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00000000004425f9 : out dx, eax ; call 0x41e8e3
0x00000000004108de : out dx, eax ; call 0x42cb53
0x000000000047e7a7 : out dx, eax ; call qword ptr [rbx]
0x000000000040e64d : out dx, eax ; call r14
0x0000000000450408 : out dx, eax ; call r15
0x000000000041f3b7 : out dx, eax ; call rax
0x0000000000441691 : out dx, eax ; call rbx
0x00000000004a3ccd : out dx, eax ; clc ; call qword ptr [rax]
0x00000000004a3ced : out dx, eax ; clc ; call rax
0x00000000004428ed : out dx, eax ; mov edi, 0x8b49fffd ; call rbx
0x0000000000431f4a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000432046 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431f92 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000450985 : out dx, eax ; mov rdx, rbp ; call r15
0x00000000004358fa : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042c0dd : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041fd18 : out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x000000000041648e : out dx, eax ; pop rbx ; ret
0x000000000042eed3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042eee8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042eefd : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043e203 : out dx, eax ; ret 0xf66
0x00000000004425ed : out dx, eax ; ret 0xfffd
0x0000000000409d2d : out dx, eax ; ret 0xffff
0x00000000004303ec : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x00000000004303d5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000004303be : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042ee7a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000469755 : out dx, eax ; xor dword ptr [rsi], esp ; add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbf0920b1
0x0000000000429fee : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000443ab0 : outsb dx, byte ptr [rsi] ; add byte ptr [r8 - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x000000000043c62e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000004bb383 : outsb dx, byte ptr [rsi] ; ja 0x4bb30c ; ret 0x48f
0x0000000000409dae : outsb dx, byte ptr [rsi] ; ret 0xffff
0x00000000004b90c4 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x000000000042749a : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x00000000004a3971 : outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rax]
0x0000000000422008 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000427abe : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000004301ed : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000043028d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000465daa : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000004301f2 : outsd dx, dword ptr [rsi] ; ret
0x00000000004b9a86 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000432887 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x0000000000430292 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x0000000000465dfa : outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004b9a85 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000041b6df : paddd mm7, mm7 ; dec dword ptr [rax - 0x39] ; ret 0xffd0
0x0000000000423302 : pcmpeqb mm0, mm1 ; lea r10, [r10 + r9] ; jmp r10
0x0000000000466b04 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x0000000000466aef : pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000423301 : pcmpeqb xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000004bae85 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004bae86 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004241af : pmovmskb edx, mm4 ; test edx, edx ; je 0x4241c3 ; bsf eax, edx ; ret
0x0000000000443165 : pop r10 ; ret
0x00000000004bb30f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000041f08a : pop r12 ; jmp rax
0x0000000000420e3c : pop r12 ; jmp rcx
0x00000000004408df : pop r12 ; mov esi, 2 ; jmp rax
0x00000000004408f9 : pop r12 ; mov esi, 3 ; jmp rax
0x000000000047388d : pop r12 ; pop r13 ; jmp rax
0x000000000048f2dc : pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048f25a : pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x00000000004420ab : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004024c3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040189f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004019c2 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040fdb5 : pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000405d76 : pop r12 ; pop r13 ; ret
0x000000000047b91c : pop r12 ; pop r14 ; ret
0x000000000046b6f1 : pop r12 ; pop rbp ; ret
0x000000000040060a : pop r12 ; ret
0x000000000047388f : pop r13 ; jmp rax
0x000000000048f2de : pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048f25c : pop r13 ; pop r14 ; fmulp st(1) ; ret
0x00000000004420ad : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004024c5 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004018a1 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004019c4 : pop r13 ; pop r14 ; ret
0x000000000040fdb7 : pop r13 ; pop rbp ; ret
0x0000000000405d78 : pop r13 ; ret
0x000000000048f2e0 : pop r14 ; fmul st(0) ; ret
0x000000000048f25e : pop r14 ; fmulp st(1) ; ret
0x00000000004420af : pop r14 ; pop r15 ; jmp rax
0x00000000004024c7 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004018a3 : pop r14 ; pop r15 ; ret
0x00000000004019c6 : pop r14 ; ret
0x00000000004420b1 : pop r15 ; jmp rax
0x00000000004024c9 : pop r15 ; pop rbp ; ret
0x00000000004018a5 : pop r15 ; ret
0x00000000004190d1 : pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000443f89 : pop rax ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004c4115 : pop rax ; add byte ptr [rax], al ; call 0xffffffffe44c39bf
0x00000000004bee48 : pop rax ; add esi, edi ; call rdi
0x00000000004bf3c8 : pop rax ; cli ; hlt ; call qword ptr [rbx]
0x00000000004190d2 : pop rax ; mov dword ptr [rdi + 4], eax ; ret
0x00000000004c68d8 : pop rax ; mov edx, edi ; call rsi
0x00000000004789a6 : pop rax ; pop rdx ; pop rbx ; ret
0x000000000041e518 : pop rax ; ret 0x2a
0x0000000000409dc4 : pop rax ; ret 0xffff
0x00000000004c3668 : pop rax ; xor edi, eax ; jmp rsp
0x000000000044086f : pop rbp ; add byte ptr [rax], r8b ; ret
0x000000000047969a : pop rbp ; enter -0x74b8, 0x14 ; ret
0x000000000041e6a2 : pop rbp ; jmp rax
0x0000000000400963 : pop rbp ; mov byte ptr [rip + 0x2cb1f5], 1 ; ret
0x00000000004194f2 : pop rbp ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x00000000004008df : pop rbp ; mov edi, 0x6cbb50 ; jmp rax
0x000000000041f089 : pop rbp ; pop r12 ; jmp rax
0x0000000000420e3b : pop rbp ; pop r12 ; jmp rcx
0x00000000004408de : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x00000000004408f8 : pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x000000000047388c : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000048f2db : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048f259 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x00000000004420aa : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040189e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004019c1 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000405d75 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b91b : pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000400609 : pop rbp ; pop r12 ; ret
0x000000000048f2df : pop rbp ; pop r14 ; fmul st(0) ; ret
0x000000000048f25d : pop rbp ; pop r14 ; fmulp st(1) ; ret
0x00000000004420ae : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x00000000004024c6 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004018a2 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004019c5 : pop rbp ; pop r14 ; ret
0x000000000040fdb8 : pop rbp ; pop rbp ; ret
0x000000000047a908 : pop rbp ; pop rbx ; ret
0x00000000004004d1 : pop rbp ; ret
0x00000000004796a2 : pop rbp ; ror byte ptr [rax - 0x77], 0x14 ; ret
0x00000000004134ac : pop rbp ; sub rax, rdx ; ret
0x00000000004c43d5 : pop rbx ; add byte ptr [rax], al ; call 0x144c41a9
0x00000000004c814e : pop rbx ; add cl, byte ptr [rdx] ; ret
0x00000000004b8658 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000043ed2c : pop rbx ; and eax, 0x3fc00 ; ret
0x000000000043ed5f : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004b8656 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000487fca : pop rbx ; jmp rax
0x00000000004119de : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000474d67 : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x000000000043edc3 : pop rbx ; mov eax, eax ; ret
0x00000000004632ca : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045a92e : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000476cfe : pop rbx ; mov edi, 0x6cb140 ; jmp rax
0x0000000000415646 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004157b6 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000463b57 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000420b58 : pop rbx ; mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000040fdb4 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000046b6f0 : pop rbx ; pop r12 ; pop rbp ; ret
0x000000000041e6a1 : pop rbx ; pop rbp ; jmp rax
0x000000000041f088 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000420e3a : pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000004408dd : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x00000000004408f7 : pop rbx ; pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x000000000047388b : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000004019c0 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000405d74 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b91a : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000400608 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004004d0 : pop rbx ; pop rbp ; ret
0x00000000004134ab : pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00000000004010e5 : pop rbx ; ret
0x00000000004bb940 : pop rbx ; ret 0x6f9
0x00000000004a3ba0 : pop rbx ; ret 0xfff8
0x0000000000420de1 : pop rbx ; ret 0xffff
0x00000000004a3b98 : pop rbx ; sar al, 0xff ; pop rbx ; sar eax, 0xff ; pop rbx ; ret 0xfff8
0x00000000004a3b9c : pop rbx ; sar eax, 0xff ; pop rbx ; ret 0xfff8
0x0000000000466f69 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000004411aa : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000047b148 : pop rbx ; xor esi, esi ; mov edi, dword ptr [rip + 0x251873] ; jmp rax
0x0000000000474b29 : pop rcx ; dec dword ptr [rax + 0x63] ; ret
0x000000000048921f : pop rcx ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000430ac8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042c76d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004324e9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004322f9 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004babfe : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004420b2 : pop rdi ; jmp rax
0x00000000004b9bc1 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x000000000049e6ce : pop rdi ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000432119 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431f49 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000432045 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431f91 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004024ca : pop rdi ; pop rbp ; ret
0x00000000004018a6 : pop rdi ; ret
0x00000000004be259 : pop rdi ; std ; call qword ptr [rax]
0x00000000004c4395 : pop rdx ; add byte ptr [rax], al ; js 0x4c4355 ; clc ; call qword ptr [rdi]
0x00000000004ba7e1 : pop rdx ; je 0x4ba7ab ; ret 0xacfc
0x00000000004a394f : pop rdx ; jo 0x4a39b8 ; clc ; call qword ptr [rax]
0x00000000004bb7a7 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x0000000000443164 : pop rdx ; pop r10 ; ret
0x00000000004789a7 : pop rdx ; pop rbx ; ret
0x00000000004a394e : pop rdx ; pop rdx ; jo 0x4a39b9 ; clc ; call qword ptr [rax]
0x00000000004a394d : pop rdx ; pop rdx ; pop rdx ; jo 0x4a39ba ; clc ; call qword ptr [rax]
0x00000000004a394c : pop rdx ; pop rdx ; pop rdx ; pop rdx ; jo 0x4a39bb ; clc ; call qword ptr [rax]
0x00000000004a394b : pop rdx ; pop rdx ; pop rdx ; pop rdx ; pop rdx ; jo 0x4a39bc ; clc ; call qword ptr [rax]
0x00000000004a394a : pop rdx ; pop rdx ; pop rdx ; pop rdx ; pop rdx ; pop rdx ; jo 0x4a39bd ; clc ; call qword ptr [rax]
0x0000000000443189 : pop rdx ; pop rsi ; ret
0x0000000000443166 : pop rdx ; ret
0x0000000000442682 : pop rdx ; ret 0xfffd
0x00000000004be384 : pop rdx ; retf ; std ; jmp rsp
0x00000000004be380 : pop rdx ; retf ; std ; lcall [rdx - 0x35] ; std ; jmp rsp
0x00000000004be251 : pop rdx ; std ; inc eax ; pop rsp ; std ; call qword ptr [rax]
0x00000000004bb310 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000042c66e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004c4775 : pop rsi ; add byte ptr [rax], al ; test al, 0xdd ; clc ; call qword ptr [rbx]
0x0000000000473d63 : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004269ec : pop rsi ; add dword ptr [rax], eax ; ret
0x000000000048f2e1 : pop rsi ; fmul st(0) ; ret
0x000000000048f25f : pop rsi ; fmulp st(1) ; ret
0x000000000042d175 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004420b0 : pop rsi ; pop r15 ; jmp rax
0x00000000004024c8 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004018a4 : pop rsi ; pop r15 ; ret
0x00000000004019c7 : pop rsi ; ret
0x000000000042a200 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004c2f1c : pop rsp ; add byte ptr [rax], r8b ; and byte ptr [rax + rdi*8], al ; call rsp
0x000000000042af00 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x0000000000475334 : pop rsp ; add r8b, bpl ; ret
0x000000000047c344 : pop rsp ; and al, 0x78 ; call r12
0x000000000041f08b : pop rsp ; jmp rax
0x0000000000420e3d : pop rsp ; jmp rcx
0x00000000004c761c : pop rsp ; lea eax, [rax] ; add byte ptr [rax], dh ; xchg eax, edi ; std ; call rcx
0x00000000004408e0 : pop rsp ; mov esi, 2 ; jmp rax
0x00000000004408fa : pop rsp ; mov esi, 3 ; jmp rax
0x0000000000423760 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000047388e : pop rsp ; pop r13 ; jmp rax
0x000000000048f2dd : pop rsp ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048f25b : pop rsp ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x00000000004420ac : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004024c4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004018a0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004019c3 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040fdb6 : pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000405d77 : pop rsp ; pop r13 ; ret
0x000000000047b91d : pop rsp ; pop r14 ; ret
0x000000000046b6f2 : pop rsp ; pop rbp ; ret
0x000000000040060b : pop rsp ; ret
0x00000000004bcb10 : pop rsp ; ret 0x4b
0x00000000004be255 : pop rsp ; std ; call qword ptr [rax]
0x000000000041b71d : pop rsp ; sub dword ptr [rdx], ecx ; call 0x417956
0x00000000004c869d : popfq ; add byte ptr [rax], al ; and byte ptr [rdi], al ; cld ; call qword ptr [rax]
0x00000000004c86b5 : popfq ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; cld ; call qword ptr [rdx]
0x000000000044082f : popfq ; add byte ptr [rax], r8b ; ret
0x000000000049bc89 : popfq ; ret 0xf45
0x0000000000494840 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045fcd9 : popfq ; sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x00000000004359c2 : psllq mm1, qword ptr [r15] ; jg 0x4359dd ; ret
0x00000000004359c3 : psllq mm1, qword ptr [rdi] ; jg 0x4359dc ; ret
0x000000000043bcf6 : psllq mm1, qword ptr [rdi] ; jg 0x43bd0a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043bcf5 : psllq mm1, qword ptr [rdi] ; jg 0x43bd0b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043bd57 : psllq mm1, qword ptr [rdi] ; jg 0x43bd6c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000452f7f : push -0x76000005 ; ret 0x8941
0x000000000044f6a2 : push -0x76b7ffb6 ; ret 0x8840
0x000000000047c1fe : push -0x7a000006 ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x000000000048142f : push -0x7c000006 ; ret 0x8908
0x0000000000485f4a : push -0x9000007 ; ret 0xf02
0x000000000043c614 : push -0x9ffffff ; ret 0x7501
0x00000000004c0d19 : push -0xb ; call qword ptr [rsi]
0x00000000004a3965 : push -8 ; push qword ptr [rax] ; insb byte ptr [rdi], dx ; clc ; call rax
0x000000000049c5d8 : push 0x48 ; add esp, 0x18 ; ret
0x000000000041ffac : push 0x48ee894c ; mov edi, ebx ; call rax
0x00000000004bb382 : push 0x6e ; ja 0x4bb30d ; ret 0x48f
0x0000000000485ddc : push 0xffffff9 ; xchg eax, esp ; ret
0x000000000045a871 : push qword ptr [r9] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x00000000004a4243 : push qword ptr [rax + 0x12] ; stc ; jmp rax
0x00000000004a403f : push qword ptr [rax + 0x13] ; stc ; jmp rax
0x00000000004a3dd7 : push qword ptr [rax + 0x40fff921] ; and ecx, edi ; call rax
0x00000000004be24f : push qword ptr [rax + 0x5a] ; std ; inc eax ; pop rsp ; std ; call qword ptr [rax]
0x00000000004a396f : push qword ptr [rax + 0x6f] ; clc ; call qword ptr [rax]
0x00000000004a3d4b : push qword ptr [rax - 0x12] ; clc ; jmp qword ptr [rax]
0x00000000004a3d47 : push qword ptr [rax - 0x14] ; clc ; push qword ptr [rax - 0x12] ; clc ; jmp qword ptr [rax]
0x00000000004a3d9b : push qword ptr [rax - 0x31] ; clc ; inc eax ; sar al, 1 ; call qword ptr [rax]
0x00000000004a43cb : push qword ptr [rax - 0x3f000681] ; jg 0x4a43d4 ; call rax
0x00000000004a434f : push qword ptr [rax - 0x3f000687] ; jns 0x4a4358 ; jmp rax
0x00000000004a430f : push qword ptr [rax - 0x3f000688] ; js 0x4a4318 ; call rax
0x00000000004a3967 : push qword ptr [rax] ; insb byte ptr [rdi], dx ; clc ; call rax
0x00000000004be1c7 : push qword ptr [rax] ; js 0x4be1cc ; call qword ptr [rax]
0x00000000004a38cb : push qword ptr [rax] ; out 0xf7, al ; call rax
0x00000000004a3ad3 : push qword ptr [rax] ; ret 0xfff8
0x000000000043df98 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x000000000041153b : push qword ptr [rbp + 2] ; pop rbx ; ret
0x0000000000415e3d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000464df5 : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000483fd5 : push qword ptr [rbp + rcx - 0x18] ; ret
0x0000000000464d9d : push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x00000000004164e1 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000443332 : push qword ptr [rbp - 0xd] ; xor eax, eax ; leave ; ret
0x0000000000416489 : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x00000000004670ba : push qword ptr [rbx + rdx*2 - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xe883
0x0000000000411a11 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000474c59 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000045a872 : push qword ptr [rcx] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x000000000040dfcd : push qword ptr [rdi + 0x20] ; ret
0x000000000043fe28 : push qword ptr [rdi + 0x35] ; ret
0x000000000043fecc : push qword ptr [rdi + 0x41] ; add rsp, 0x60 ; pop rbx ; ret
0x000000000043fc4a : push qword ptr [rdi + 3] ; ret
0x000000000043fc99 : push qword ptr [rdi + 4] ; ret
0x000000000046b02f : push qword ptr [rdi + 6] ; ret
0x00000000004502d5 : push qword ptr [rdi + 8] ; ret
0x000000000046ac5c : push qword ptr [rdi + 9] ; pop rbx ; ret
0x0000000000415966 : push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000004a3ec3 : push qword ptr [rdx + 0x42fff91c] ; sbb al, 0xf9 ; call rdx
0x00000000004a3e1f : push qword ptr [rsi + 0x46fff920] ; and cl, bh ; call rsi
0x000000000046af0d : push qword ptr [rsi + rsi - 0x77] ; ret 0xe283
0x00000000004a3b67 : push qword ptr [rsi - 0x3d] ; clc ; push rsi ; ret
0x00000000004a3b5f : push qword ptr [rsi - 0x3e] ; clc ; push rsi ; ret 0xfff8
0x000000000041559f : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004a38dc : push rax ; adc al, bh ; call rax
0x0000000000463eca : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000416e21 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004a420f : push rax ; adc cl, bh ; call qword ptr [rax + 0x10fff918]
0x000000000041ba80 : push rax ; adc dh, dh ; ret 0xf0f
0x00000000004a38e4 : push rax ; adc edi, eax ; call rax
0x00000000004a403b : push rax ; adc edi, ecx ; push qword ptr [rax + 0x13] ; stc ; jmp rax
0x0000000000418bf4 : push rax ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x00000000004a42bc : push rax ; add al, 0xf9 ; call rax
0x00000000004a4278 : push rax ; add bh, cl ; call rax
0x00000000004692fd : push rax ; add byte ptr [r8 + 0xf], cl ; ret 0x8d48
0x000000000043fd7c : push rax ; add byte ptr [r8], r8b ; ret
0x00000000004155a0 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000043fbf0 : push rax ; add byte ptr [rax], al ; ret
0x000000000041aebf : push rax ; add eax, 0xf6410000 ; ret 0xf01
0x0000000000426605 : push rax ; add eax, ebp ; add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000004a42b4 : push rax ; add ecx, edi ; call rax
0x00000000004a3fd8 : push rax ; and ecx, edi ; jmp rax
0x0000000000445378 : push rax ; call rbx
0x00000000004a429c : push rax ; clc ; clc ; call rax
0x00000000004a39db : push rax ; clc ; inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x00000000004a4268 : push rax ; cld ; clc ; call rax
0x00000000004c64e9 : push rax ; cli ; jmp rsp
0x00000000004a4294 : push rax ; cmc ; clc ; call rax
0x00000000004c0529 : push rax ; cmc ; jmp qword ptr [rcx]
0x000000000045e2c5 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004a4258 : push rax ; idiv al ; call rax
0x00000000004a3cb7 : push rax ; in eax, 0xf8 ; call rax
0x00000000004be1af : push rax ; insb byte ptr [rdi], dx ; std ; call rax
0x00000000004be1c4 : push rax ; jbe 0x4be1cb ; push qword ptr [rax] ; js 0x4be1cf ; call qword ptr [rax]
0x00000000004a43d7 : push rax ; jg 0x4a43d8 ; call qword ptr [rax]
0x00000000004a43b3 : push rax ; jle 0x4a43b4 ; call qword ptr [rax]
0x00000000004788ac : push rax ; jmp qword ptr [rax]
0x000000000049d033 : push rax ; jne 0x49d02c ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049d093 : push rax ; jne 0x49d08c ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004be1cf : push rax ; jnp 0x4be1d4 ; call rax
0x00000000004a435b : push rax ; jns 0x4a4360 ; inc dword ptr [rax] ; jp 0x4a4364 ; jmp qword ptr [rax]
0x00000000004a3d14 : push rax ; jrcxz 0x4a3d12 ; jmp qword ptr [rax]
0x00000000004a431f : push rax ; js 0x4a4324 ; inc dword ptr [rax] ; jns 0x4a4328 ; call qword ptr [rax]
0x00000000004a3cb0 : push rax ; loop 0x4a3cae ; call qword ptr [rax]
0x00000000004a3d30 : push rax ; loope 0x4a3d32 ; inc dword ptr [rax] ; jrcxz 0x4a3d36 ; call rax
0x000000000044744a : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004a3b03 : push rax ; mov edi, 0xc0e0fff8 ; clc ; call rax
0x0000000000488446 : push rax ; mov rax, rbx ; pop rbx ; ret
0x000000000044c208 : push rax ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x00000000004a42cc : push rax ; or bh, cl ; jmp qword ptr [rax]
0x0000000000419432 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x00000000004a4288 : push rax ; or cl, bh ; call rax
0x000000000041c3c2 : push rax ; or dh, dh ; ret 0x7404
0x000000000041c33d : push rax ; or dh, dh ; ret 0xf04
0x000000000042366c : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000466cce : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a3864 : push rax ; push rdi ; jmp qword ptr [rax]
0x000000000044744c : push rax ; push rsp ; ret
0x00000000004a38fc : push rax ; sbb al, 0xf8 ; call rax
0x0000000000416e16 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000464e6a : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004a38f4 : push rax ; sbb eax, edi ; call rax
0x00000000004a4260 : push rax ; stc ; clc ; call rax
0x00000000004a42a4 : push rax ; sti ; clc ; call rax
0x00000000004164dd : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x000000000049f127 : push rbp ; adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000479dff : push rbp ; add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000440ff1 : push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x0000000000474b98 : push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000495988 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004c6b3e : push rbp ; ret
0x00000000004655d1 : push rbp ; ror byte ptr [rcx + rcx*4 - 1], 0x45 ; xor eax, eax ; call rbx
0x00000000004be249 : push rbp ; std ; jmp qword ptr [rax]
0x000000000042692a : push rbp ; xor rax, rax ; ret
0x0000000000400ee9 : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047b1d4 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004c3c95 : push rbx ; add byte ptr [rax], al ; js 0x4c3d1a ; clc ; call qword ptr [rcx]
0x000000000046dd56 : push rbx ; add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x0000000000424049 : push rbx ; add qword ptr [rax], rax ; ret
0x0000000000440a89 : push rbx ; fdivp st(5) ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000044dd82 : push rbx ; je 0x44dd99 ; cmp esi, 3 ; je 0x44dd99 ; pop rbx ; ret
0x0000000000464d69 : push rbx ; je 0x464dcd ; pop rbp ; pop r12 ; ret
0x0000000000464e0e : push rbx ; je 0x464e72 ; pop rbp ; pop r12 ; ret
0x0000000000462f4a : push rbx ; or al, 0xf6 ; ret 0xf04
0x00000000004176aa : push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x149
0x00000000004159ed : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000040db19 : push rbx ; ret
0x00000000004be245 : push rbx ; std ; call rax
0x0000000000414944 : push rbx ; sub cl, ch ; ret 0xfffe
0x0000000000417208 : push rbx ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000412ac1 : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000004ba7dc : push rbx ; xchg eax, edx ; jae 0x4ba7bb ; push rsi ; pop rdx ; je 0x4ba7b0 ; ret 0xacfc
0x00000000004b9a65 : push rcx ; call qword ptr [rsi]
0x00000000004362dd : push rcx ; jl 0x43632e ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000436444 : push rcx ; jl 0x436495 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000004a3ae0 : push rcx ; mov edi, 0xc020fff8 ; clc ; call qword ptr [rax]
0x000000000049dd3f : push rcx ; or byte ptr [rbp + 0x39], cl ; ret 0x4776
0x000000000048a385 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000043c23a : push rdi ; add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x0000000000435b29 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000443f69 : push rdi ; add byte ptr [rax + 0xf], cl ; ret
0x000000000043c2ec : push rdi ; add eax, 0xc478d48 ; ret
0x000000000049b88d : push rdi ; add ecx, dword ptr [rax + 0x63] ; ret
0x0000000000431dd8 : push rdi ; clc ; ret
0x0000000000431f50 : push rdi ; cld ; ret
0x0000000000432a77 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000435409 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000435389 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004351da : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004a3865 : push rdi ; jmp qword ptr [rax]
0x00000000004154e4 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000043526a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000045d7a8 : push rdi ; or al, 0x83 ; ret
0x000000000045d72b : push rdi ; or al, 0xf6 ; ret 0xf08
0x000000000047a8fa : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000048040a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000047a901 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000043c4d0 : push rdi ; or eax, 0x1c478d48 ; ret
0x0000000000420ee0 : push rdi ; ret
0x0000000000401415 : push rdi ; ret 0
0x000000000043028e : push rdi ; ret 0xff3
0x0000000000432c77 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043249a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000432877 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000041ceba : push rdi ; sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret 0xfff9
0x0000000000410eaf : push rdi ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x0000000000465dab : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000046b38a : push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000474d32 : push rdx ; and eax, 0x89485300 ; ret
0x00000000004c61f5 : push rdx ; ret
0x0000000000447446 : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x000000000042eed4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043e7d9 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x43e830 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000464332 : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000004c3f25 : push rsi ; add byte ptr [rax], al ; clc ; ret
0x0000000000435dc1 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000435e31 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000043bc85 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000435d51 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000043bc23 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000042eee9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000431f02 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000432671 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004322a5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000432485 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000432665 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004320c5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004bb380 : push rsi ; cli ; push 0x6e ; ja 0x4bb30f ; ret 0x48f
0x00000000004c06f9 : push rsi ; cmc ; call qword ptr [rcx]
0x000000000043dad6 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000043dac6 : push rsi ; hlt ; sub eax, edx ; ret
0x000000000043da96 : push rsi ; int1 ; sub eax, edx ; ret
0x000000000042d1fd : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004ba7e0 : push rsi ; pop rdx ; je 0x4ba7ac ; ret 0xacfc
0x000000000041f592 : push rsi ; ret
0x0000000000485f4d : push rsi ; ret 0xf02
0x000000000045f248 : push rsi ; ret 0xf10
0x00000000004a3b63 : push rsi ; ret 0xfff8
0x00000000004a3e48 : push rsi ; sbb al, 0xf9 ; jmp rsi
0x000000000043daa6 : push rsi ; sub eax, edx ; ret
0x000000000042eefe : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004c0d14 : push rsp ; and al, 0 ; add byte ptr [rax], cl ; push -0xb ; call qword ptr [rsi]
0x000000000041bebc : push rsp ; and al, 0x10 ; call rax
0x0000000000465323 : push rsp ; and al, 0x18 ; lea r9, [rsp + 0x10] ; call rbx
0x0000000000466f2e : push rsp ; and al, 0x28 ; lea rsi, [rsp + 0x40] ; call rbx
0x0000000000448131 : push rsp ; and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r12
0x00000000004477be : push rsp ; and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000467591 : push rsp ; and al, 0x48 ; mov rdi, r12 ; call rbx
0x000000000044c206 : push rsp ; and al, 0x50 ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x000000000041ecca : push rsp ; and al, 0x68 ; call rax
0x000000000041ffaa : push rsp ; and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x0000000000448e5c : push rsp ; and al, 0x78 ; mov rdi, qword ptr [rsp + 0x28] ; call r14
0x000000000044ba46 : push rsp ; and al, 0x78 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000491d10 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000491cca : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000041b7c5 : push rsp ; and eax, 0x950f4100 ; ret
0x00000000004c4114 : push rsp ; pop rax ; add byte ptr [rax], al ; call 0xffffffffe44c39c0
0x000000000041c64a : push rsp ; ret
0x00000000004c8714 : push rsp ; sahf ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; cld ; call qword ptr [rdx]
0x0000000000444af9 : push rsp ; sub byte ptr [rax], al ; pop rbx ; ret
0x00000000004c7c14 : push rsp ; xchg eax, ebx ; add byte ptr [rax], al ; test al, 0x89 ; jmp qword ptr [rsi]
0x0000000000429ec0 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004a408c : pushfq ; adc ecx, edi ; ljmp [rcx + rdx] ; stc ; call rdx
0x0000000000447940 : pushfq ; and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000004c4089 : pushfq ; clc ; call qword ptr [rdx]
0x00000000004c4119 : pushfq ; clc ; jmp rbx
0x0000000000414a7c : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000041634a : pushfq ; mov esi, 0xc48348ff ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000042abc0 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000444af8 : pushfq ; push rsp ; sub byte ptr [rax], al ; pop rbx ; ret
0x00000000004689f3 : pushfq ; ret 0xb60f
0x000000000049bc50 : pushfq ; ret 0xf45
0x00000000004c1b5c : pushfq ; xor al, byte ptr [rax] ; add al, dh ; cmc ; cmc ; call qword ptr [rdx]
0x00000000004c6e30 : rcl ah, 0xfa ; jmp rsi
0x00000000004a3da0 : rcl al, 0xf8 ; call qword ptr [rax]
0x00000000004be248 : rcl byte ptr [rbp - 3], 1 ; jmp qword ptr [rax]
0x00000000004ba7df : rcl dword ptr [rsi + 0x5a], cl ; je 0x4ba7ad ; ret 0xacfc
0x00000000004ba7db : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4ba7b1 ; ret 0xacfc
0x000000000044294c : rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000042665d : rcr bh, 1 ; add byte ptr [r8 + 0xf], cl ; ret 0x66c3
0x000000000046351a : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000004411ac : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004632cc : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000047a907 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x00000000004be254 : rcr byte ptr [rbp + rdi*8 - 1], 0x10 ; pop rdi ; std ; call qword ptr [rax]
0x00000000004432b0 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000417eff : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000041f4ce : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047b919 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000040f00e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000049c927 : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax + rax] ; ret
0x000000000045c71b : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x000000000041ef83 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x00000000004104a0 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004babfd : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004a3dfc : rcr byte ptr [rip + 0x1d50fff9], 0xf9 ; jmp rax
0x00000000004a3900 : rcr byte ptr [rip + 0x1f50fff8], 1 ; clc ; call rax
0x0000000000440b1c : rcr ch, 0xfd ; dec dword ptr [rcx - 0x75] ; jge 0x440b2c ; call rbx
0x00000000004a3d80 : rcr dl, 1 ; clc ; jmp qword ptr [rax]
0x0000000000478e09 : rcr dword ptr [rcx], 0xc0 ; and eax, 2 ; sub eax, 1 ; ret
0x00000000004332c6 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004005d9 : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e2 ; ret
0x00000000004002e1 : ret
0x0000000000400624 : ret 0
0x00000000004aec40 : ret 0x10
0x000000000044ff4b : ret 0x100
0x0000000000462eff : ret 0x107
0x0000000000476736 : ret 0x10eb
0x000000000041c672 : ret 0x110
0x000000000047a8dc : ret 0x114d
0x0000000000447bf8 : ret 0x1189
0x000000000044698b : ret 0x11e9
0x0000000000483a0a : ret 0x12
0x0000000000474b9c : ret 0x1272
0x000000000049daf3 : ret 0x1374
0x000000000046e04f : ret 0x1376
0x000000000040b01a : ret 0x138
0x000000000046b1d1 : ret 0x1477
0x000000000040a01a : ret 0x148
0x00000000004164f2 : ret 0x149
0x000000000041a673 : ret 0x14c
0x000000000043669c : ret 0x14d
0x0000000000407a1a : ret 0x16e
0x000000000042437a : ret 0x17
0x00000000004365d9 : ret 0x180f
0x000000000044f9e6 : ret 0x1874
0x0000000000426995 : ret 0x1876
0x0000000000418035 : ret 0x18eb
0x0000000000468585 : ret 0x190
0x0000000000488f92 : ret 0x1a75
0x00000000004bb15a : ret 0x1ad4
0x00000000004b98ed : ret 0x1b49
0x000000000041e4af : ret 0x1be
0x00000000004b0910 : ret 0x1d4
0x00000000004b10a8 : ret 0x1d5
0x0000000000401095 : ret 0x1d89
0x0000000000448543 : ret 0x1e76
0x000000000044a0d7 : ret 0x1f0f
0x000000000041f10e : ret 0x1f76
0x000000000044fe67 : ret 0x200
0x000000000044773c : ret 0x2176
0x0000000000424118 : ret 0x2288
0x00000000004a0322 : ret 0x22c3
0x000000000049d582 : ret 0x22e5
0x00000000004303f2 : ret 0x2373
0x000000000043fdc7 : ret 0x23e8
0x00000000004af918 : ret 0x24
0x0000000000415019 : ret 0x2501
0x0000000000476a1a : ret 0x2563
0x000000000041e65d : ret 0x2575
0x00000000004016e6 : ret 0x2773
0x0000000000465ba6 : ret 0x2774
0x00000000004406c5 : ret 0x28
0x0000000000431ba6 : ret 0x280f
0x0000000000426985 : ret 0x2876
0x000000000047f9a8 : ret 0x28f5
0x00000000004862cd : ret 0x2941
0x0000000000410f1d : ret 0x2948
0x000000000049bbda : ret 0x2949
0x0000000000433311 : ret 0x294c
0x000000000041302b : ret 0x294d
0x000000000041e519 : ret 0x2a
0x000000000041f01b : ret 0x2a75
0x0000000000410bbf : ret 0x2b48
0x0000000000446c2e : ret 0x2b49
0x000000000043ec92 : ret 0x2b77
0x000000000043e937 : ret 0x2c76
0x0000000000401aba : ret 0x2c96
0x0000000000483994 : ret 0x2e
0x0000000000462ae5 : ret 0x2e66
0x0000000000446b15 : ret 0x3101
0x0000000000403af6 : ret 0x3145
0x0000000000470152 : ret 0x314c
0x00000000004afe08 : ret 0x33
0x00000000004042a1 : ret 0x348
0x000000000044cb6b : ret 0x349
0x0000000000488fe8 : ret 0x357e
0x00000000004baa3a : ret 0x3827
0x000000000047c0f2 : ret 0x3840
0x00000000004105df : ret 0x3841
0x0000000000440f0f : ret 0x3845
0x0000000000426975 : ret 0x3876
0x0000000000443ab9 : ret 0x3880
0x00000000004158fb : ret 0x389
0x00000000004b90c6 : ret 0x38ae
0x000000000047ad36 : ret 0x38b
0x0000000000450441 : ret 0x3948
0x000000000041d932 : ret 0x3949
0x000000000044d986 : ret 0x394c
0x0000000000452e18 : ret 0x394d
0x000000000043e0b2 : ret 0x3a01
0x00000000004303db : ret 0x3a73
0x000000000044d493 : ret 0x3a76
0x00000000004432a1 : ret 0x3b01
0x000000000046766a : ret 0x3bba
0x000000000040e9de : ret 0x3ce8
0x0000000000446355 : ret 0x3d83
0x000000000046a522 : ret 0x3e9
0x000000000049b95f : ret 0x3ee9
0x0000000000400dca : ret 0x3ef
0x0000000000419a12 : ret 0x4007
0x0000000000466d76 : ret 0x408d
0x000000000047866f : ret 0x40bf
0x0000000000446740 : ret 0x4101
0x0000000000455430 : ret 0x4108
0x0000000000456ef8 : ret 0x4110
0x000000000041d04c : ret 0x4117
0x000000000046f2ec : ret 0x412f
0x000000000044021d : ret 0x4164
0x000000000044750e : ret 0x41c3
0x000000000042ed6a : ret 0x4266
0x0000000000468682 : ret 0x428d
0x000000000044d48a : ret 0x4372
0x000000000044df1b : ret 0x4389
0x00000000004465ff : ret 0x438b
0x00000000004a4528 : ret 0x43ec
0x0000000000411c13 : ret 0x4401
0x00000000004559b7 : ret 0x440f
0x0000000000464ae7 : ret 0x4410
0x000000000047bbe1 : ret 0x448d
0x0000000000489ee5 : ret 0x44c6
0x0000000000462862 : ret 0x4502
0x000000000046dce8 : ret 0x4574
0x00000000004b3328 : ret 0x4575
0x00000000004633a8 : ret 0x45f6
0x00000000004b5ed8 : ret 0x4726
0x00000000004b9bc4 : ret 0x474c
0x000000000049dd43 : ret 0x4776
0x000000000045a823 : ret 0x47e9
0x0000000000448fc5 : ret 0x4801
0x000000000042cfe1 : ret 0x4802
0x000000000042d0bd : ret 0x4803
0x0000000000404680 : ret 0x4804
0x000000000042d08d : ret 0x4805
0x000000000042d075 : ret 0x4806
0x00000000004240a3 : ret 0x4808
0x000000000044f9f4 : ret 0x4809
0x0000000000458ce4 : ret 0x480f
0x000000000041b8c9 : ret 0x4810
0x000000000044d360 : ret 0x4811
0x0000000000453462 : ret 0x481e
0x000000000041b80b : ret 0x4820
0x000000000045bf2c : ret 0x482d
0x0000000000444f0f : ret 0x4830
0x00000000004016e2 : ret 0x4838
0x000000000042ec76 : ret 0x4840
0x00000000004241b8 : ret 0x48c3
0x000000000046781d : ret 0x48d
0x0000000000473ed4 : ret 0x48e9
0x00000000004bb386 : ret 0x48f
0x000000000040338e : ret 0x4901
0x000000000044c743 : ret 0x4904
0x000000000042d2fe : ret 0x4906
0x0000000000457568 : ret 0x4908
0x000000000046a5b9 : ret 0x4909
0x0000000000423412 : ret 0x4910
0x0000000000421686 : ret 0x4920
0x0000000000420600 : ret 0x4930
0x000000000047eae4 : ret 0x4976
0x0000000000404b44 : ret 0x4a18
0x00000000004bcaf9 : ret 0x4b
0x000000000046ce12 : ret 0x4b30
0x0000000000474c33 : ret 0x4b64
0x00000000004bc918 : ret 0x4bbe
0x0000000000405d05 : ret 0x4c01
0x000000000042d241 : ret 0x4c02
0x000000000044d24f : ret 0x4c04
0x0000000000486015 : ret 0x4c08
0x0000000000452b56 : ret 0x4c40
0x0000000000449210 : ret 0x4c88
0x0000000000447621 : ret 0x4d02
0x00000000004bade7 : ret 0x4e27
0x0000000000469dd7 : ret 0x4eb
0x00000000004453c8 : ret 0x4ee9
0x000000000044621e : ret 0x4f74
0x0000000000459b1b : ret 0x4fe8
0x00000000004303c4 : ret 0x5173
0x000000000044f7f3 : ret 0x527e
0x0000000000463128 : ret 0x5389
0x000000000045b41b : ret 0x53e9
0x000000000047be7d : ret 0x5438
0x0000000000491d36 : ret 0x5488
0x000000000044d80a : ret 0x5489
0x000000000045b073 : ret 0x548b
0x00000000004b904c : ret 0x5508
0x000000000040590f : ret 0x5525
0x0000000000421af2 : ret 0x575
0x000000000046e05d : ret 0x576
0x00000000004bb318 : ret 0x5803
0x000000000040eb9b : ret 0x589
0x00000000004b8d20 : ret 0x591c
0x00000000004b9a87 : ret 0x5ae4
0x000000000044a501 : ret 0x5c77
0x000000000044743f : ret 0x6040
0x00000000004bb7b2 : ret 0x62c1
0x000000000045c8e3 : ret 0x6348
0x0000000000412232 : ret 0x6349
0x000000000047f597 : ret 0x63e8
0x00000000004036e6 : ret 0x64e8
0x000000000049ab90 : ret 0x65e9
0x000000000048a2b7 : ret 0x6610
0x0000000000426902 : ret 0x6620
0x0000000000424205 : ret 0x66c3
0x0000000000474bae : ret 0x674
0x00000000004b8d3f : ret 0x67b2
0x000000000047dbfd : ret 0x6876
0x000000000049df42 : ret 0x68e8
0x000000000043f6dd : ret 0x6b8
0x000000000049bc37 : ret 0x6be9
0x000000000044fcdd : ret 0x6de8
0x000000000043484a : ret 0x6f7
0x00000000004bb941 : ret 0x6f9
0x00000000004be952 : ret 0x70c
0x000000000043335e : ret 0x7280
0x0000000000476589 : ret 0x728d
0x000000000043eafb : ret 0x72e9
0x0000000000415e41 : ret 0x7401
0x000000000041f20f : ret 0x7402
0x000000000041c3c5 : ret 0x7404
0x0000000000411733 : ret 0x7408
0x000000000040126c : ret 0x7420
0x00000000004590b2 : ret 0x7450
0x000000000043c619 : ret 0x7501
0x000000000043c626 : ret 0x7502
0x00000000004270b9 : ret 0x7504
0x000000000043da54 : ret 0x7508
0x000000000043c5eb : ret 0x7510
0x00000000004270b4 : ret 0x7518
0x000000000043c5f8 : ret 0x7520
0x000000000043c605 : ret 0x7540
0x0000000000473521 : ret 0x758b
0x000000000042f2b2 : ret 0x7677
0x0000000000446c22 : ret 0x774
0x00000000004790ca : ret 0x777
0x000000000049ba2b : ret 0x77e9
0x000000000046dfea : ret 0x7874
0x000000000041bcfa : ret 0x7ae9
0x000000000044776a : ret 0x7b8
0x0000000000426892 : ret 0x7e20
0x000000000042200c : ret 0x7f10
0x0000000000461d66 : ret 0x7f3c
0x000000000043367e : ret 0x80
0x00000000004231e9 : ret 0x8000
0x0000000000469ddc : ret 0x8001
0x0000000000472c8f : ret 0x8005
0x000000000047dab6 : ret 0x8008
0x000000000046a7c2 : ret 0x8010
0x0000000000473dce : ret 0x8018
0x0000000000470698 : ret 0x804
0x000000000046ca50 : ret 0x8116
0x000000000048756b : ret 0x8148
0x000000000045b034 : ret 0x8166
0x000000000041a7cc : ret 0x820f
0x0000000000404460 : ret 0x8301
0x000000000047dff1 : ret 0x8308
0x000000000042ee80 : ret 0x830f
0x000000000043e9c0 : ret 0x8341
0x0000000000421bb5 : ret 0x8348
0x000000000041bdc3 : ret 0x8349
0x0000000000480159 : ret 0x8364
0x000000000043fd67 : ret 0x83e8
0x0000000000411b80 : ret 0x840
0x000000000046b632 : ret 0x8401
0x0000000000418049 : ret 0x840f
0x000000000043ea60 : ret 0x8444
0x000000000049bba7 : ret 0x8445
0x000000000045c8d5 : ret 0x8504
0x0000000000462fb6 : ret 0x8508
0x0000000000413742 : ret 0x850f
0x00000000004688e5 : ret 0x8545
0x0000000000419ae2 : ret 0x8548
0x000000000044f805 : ret 0x854d
0x0000000000459eac : ret 0x858b
0x000000000045774d : ret 0x85c6
0x000000000045579a : ret 0x85c7
0x000000000049ae28 : ret 0x85e9
0x000000000040102e : ret 0x860f
0x0000000000450155 : ret 0x870f
0x00000000004b865e : ret 0x871e
0x0000000000461d6d : ret 0x875
0x00000000004269a5 : ret 0x876
0x0000000000489ee0 : ret 0x87e
0x000000000044f1ea : ret 0x87e9
0x000000000047e8a4 : ret 0x87f6
0x0000000000448751 : ret 0x8804
0x000000000045e5a2 : ret 0x880f
0x000000000044f6a7 : ret 0x8840
0x0000000000447b52 : ret 0x8901
0x000000000047105e : ret 0x8908
0x00000000004010d6 : ret 0x890f
0x000000000044d90f : ret 0x8941
0x0000000000400669 : ret 0x8944
0x0000000000411bfb : ret 0x8945
0x000000000044a5c1 : ret 0x8948
0x00000000004109ad : ret 0x8949
0x0000000000403ec7 : ret 0x894c
0x000000000044671f : ret 0x894d
0x000000000047999b : ret 0x894e
0x0000000000483b6c : ret 0x89e9
0x00000000004786fe : ret 0x8b
0x0000000000462aaa : ret 0x8b04
0x000000000046b323 : ret 0x8b05
0x00000000004bae8e : ret 0x8b36
0x000000000044fa7a : ret 0x8b41
0x0000000000401854 : ret 0x8b48
0x0000000000411376 : ret 0x8b49
0x000000000047991e : ret 0x8b4a
0x0000000000411ed0 : ret 0x8b4c
0x0000000000480995 : ret 0x8d01
0x0000000000452a7a : ret 0x8d04
0x0000000000459be0 : ret 0x8d0f
0x000000000040d71f : ret 0x8d48
0x0000000000403676 : ret 0x8d49
0x0000000000466128 : ret 0x8d4a
0x0000000000411e86 : ret 0x8d4c
0x000000000041d0ac : ret 0x8d4e
0x0000000000410ec1 : ret 0x8e0f
0x0000000000459bfc : ret 0x8ee8
0x000000000040187e : ret 0x900
0x0000000000421c35 : ret 0x90c3
0x0000000000412e5b : ret 0x938b
0x000000000046b257 : ret 0x93e8
0x0000000000485f20 : ret 0x940f
0x000000000048ab36 : ret 0x941
0x0000000000465e48 : ret 0x94c
0x000000000047b1cf : ret 0x950f
0x0000000000455ef9 : ret 0x9522
0x0000000000403d08 : ret 0x953d
0x00000000004b9cb3 : ret 0x9576
0x0000000000481cd0 : ret 0x9589
0x000000000041bd11 : ret 0x976
0x0000000000489069 : ret 0x9e74
0x0000000000410dd8 : ret 0x9e9
0x00000000004742d9 : ret 0x9f75
0x00000000004ae440 : ret 0xa
0x0000000000491ca0 : ret 0xa074
0x00000000004b99a3 : ret 0xa514
0x000000000046930e : ret 0xa9be
0x00000000004b9e27 : ret 0xac65
0x000000000049e1fe : ret 0xace8
0x00000000004ba7e4 : ret 0xacfc
0x000000000043eae6 : ret 0xaf0f
0x000000000041c6af : ret 0xb48b
0x0000000000402c49 : ret 0xb60f
0x000000000046869b : ret 0xb70f
0x000000000043f610 : ret 0xb8
0x0000000000460239 : ret 0xb848
0x000000000044f845 : ret 0xb87f
0x0000000000426f87 : ret 0xb8c3
0x00000000004675d2 : ret 0xb8e9
0x0000000000484db2 : ret 0xb908
0x00000000004b9cee : ret 0xb9b9
0x000000000045671d : ret 0xbb41
0x00000000004791f2 : ret 0xbc41
0x000000000049bfc5 : ret 0xbc80
0x0000000000460cee : ret 0xbd83
0x0000000000484fa0 : ret 0xbe08
0x00000000004b9a44 : ret 0xbe57
0x000000000045b108 : ret 0xbf07
0x0000000000484381 : ret 0xbf08
0x00000000004230a9 : ret 0xc000
0x000000000048f33e : ret 0xc001
0x000000000048f2f2 : ret 0xc002
0x0000000000413683 : ret 0xc031
0x000000000046bb90 : ret 0xc084
0x0000000000426750 : ret 0xc085
0x000000000040ed26 : ret 0xc148
0x000000000046773d : ret 0xc269
0x0000000000400b62 : ret 0xc283
0x0000000000430294 : ret 0xc2b2
0x000000000043ed01 : ret 0xc35b
0x00000000004b81e2 : ret 0xc4c3
0x00000000004b95f8 : ret 0xc4ff
0x00000000004333f8 : ret 0xc580
0x000000000049bbdd : ret 0xc5e9
0x0000000000482ba0 : ret 0xc6e9
0x0000000000421b31 : ret 0xc6eb
0x0000000000438af0 : ret 0xc748
0x000000000041c95c : ret 0xc789
0x00000000004158ec : ret 0xc883
0x000000000047d703 : ret 0xc931
0x00000000004438f9 : ret 0xc985
0x0000000000424071 : ret 0xc9ff
0x000000000048172d : ret 0xcb73
0x00000000004b908a : ret 0xcca7
0x00000000004bb16d : ret 0xcd11
0x000000000041dd41 : ret 0xce31
0x0000000000405114 : ret 0xce80
0x0000000000481005 : ret 0xce83
0x000000000041958b : ret 0xcf31
0x00000000004ae840 : ret 0xd
0x000000000047c00a : ret 0xd021
0x0000000000442d9f : ret 0xd029
0x000000000043326c : ret 0xd073
0x000000000040591e : ret 0xd089
0x0000000000464725 : ret 0xd108
0x0000000000486f39 : ret 0xd129
0x000000000049a7f6 : ret 0xd284
0x0000000000485e37 : ret 0xd309
0x000000000048944b : ret 0xd348
0x000000000045b5f3 : ret 0xd529
0x0000000000486fb0 : ret 0xd629
0x000000000046748d : ret 0xd721
0x0000000000486ec2 : ret 0xd729
0x000000000043eaeb : ret 0xd889
0x00000000004bac05 : ret 0xd8f
0x0000000000477d83 : ret 0xd8f7
0x0000000000400806 : ret 0xd975
0x000000000047bdd0 : ret 0xda38
0x00000000004100e5 : ret 0xdaf7
0x0000000000448c81 : ret 0xdb85
0x00000000004bace6 : ret 0xdcd9
0x000000000046ad20 : ret 0xdd72
0x00000000004b9c62 : ret 0xde5d
0x00000000004114b5 : ret 0xde74
0x000000000049b7a2 : ret 0xde89
0x00000000004b89f1 : ret 0xde9e
0x0000000000487388 : ret 0xdee9
0x0000000000422f69 : ret 0xe000
0x000000000043c5a9 : ret 0xe074
0x000000000044775d : ret 0xe077
0x0000000000444599 : ret 0xe083
0x00000000004001c0 : ret 0xe18
0x000000000044bce3 : ret 0xe183
0x0000000000444b12 : ret 0xe1eb
0x0000000000447beb : ret 0xe277
0x000000000040df5c : ret 0xe281
0x00000000004011dd : ret 0xe283
0x000000000043fd07 : ret 0xe3e8
0x00000000004667f0 : ret 0xe575
0x0000000000418027 : ret 0xe675
0x0000000000458123 : ret 0xe680
0x00000000004bae06 : ret 0xe71f
0x00000000004016d8 : ret 0xe72
0x0000000000452fb0 : ret 0xe783
0x000000000046e4d5 : ret 0xe874
0x0000000000459a95 : ret 0xe87f
0x0000000000455332 : ret 0xe883
0x000000000046e87e : ret 0xe8c0
0x00000000004007be : ret 0xe8c1
0x0000000000425ea3 : ret 0xe901
0x0000000000402f12 : ret 0xe902
0x000000000044a6c9 : ret 0xe904
0x000000000047ba01 : ret 0xe907
0x0000000000424106 : ret 0xe908
0x0000000000429d26 : ret 0xe910
0x0000000000453559 : ret 0xe920
0x00000000004206a3 : ret 0xe96e
0x00000000004b9167 : ret 0xe970
0x0000000000488fac : ret 0xe974
0x000000000042084f : ret 0xe977
0x000000000043ec8a : ret 0xea81
0x00000000004580a7 : ret 0xeac0
0x00000000004010b1 : ret 0xeac1
0x0000000000423436 : ret 0xeb10
0x000000000042066f : ret 0xeb5b
0x000000000040e99a : ret 0xeb72
0x00000000004025a8 : ret 0xebe8
0x00000000004bb918 : ret 0xec2
0x000000000047f939 : ret 0xec75
0x0000000000470bc8 : ret 0xed75
0x000000000044b83e : ret 0xed85
0x000000000044669f : ret 0xee75
0x00000000004bb5ba : ret 0xef32
0x00000000004190b6 : ret 0xef75
0x0000000000444411 : ret 0xefc1
0x0000000000422e29 : ret 0xf000
0x000000000040d8e8 : ret 0xf001
0x0000000000402bfa : ret 0xf01
0x000000000041aa96 : ret 0xf02
0x000000000041c340 : ret 0xf04
0x000000000045d72e : ret 0xf08
0x000000000045a5b7 : ret 0xf0e9
0x000000000046b796 : ret 0xf0eb
0x000000000041ba83 : ret 0xf0f
0x0000000000421fc2 : ret 0xf10
0x00000000004624d5 : ret 0xf229
0x00000000004506d6 : ret 0xf301
0x000000000045d76a : ret 0xf40
0x000000000046886d : ret 0xf43
0x000000000049bc51 : ret 0xf45
0x000000000046474a : ret 0xf48
0x000000000045ab74 : ret 0xf4c
0x0000000000402f1b : ret 0xf4e9
0x000000000044457c : ret 0xf631
0x0000000000421dd9 : ret 0xf66
0x000000000043e8ac : ret 0xf685
0x000000000041c693 : ret 0xf710
0x000000000048ee8a : ret 0xf72c
0x000000000047a405 : ret 0xf74
0x000000000042742c : ret 0xf748
0x0000000000466290 : ret 0xf749
0x000000000048bf8a : ret 0xf75b
0x000000000043331e : ret 0xf80
0x0000000000422ce9 : ret 0xf800
0x00000000004b88d0 : ret 0xf869
0x000000000048569a : ret 0xf900
0x00000000004a40bc : ret 0xf913
0x00000000004a40b4 : ret 0xf914
0x00000000004a40ac : ret 0xf915
0x00000000004a40a4 : ret 0xf916
0x00000000004a409c : ret 0xf917
0x00000000004a3ea8 : ret 0xf91f
0x000000000040489a : ret 0xf929
0x0000000000459fb9 : ret 0xfa80
0x000000000048af46 : ret 0xfa81
0x0000000000405932 : ret 0xfac1
0x000000000044928a : ret 0xfb88
0x0000000000422ba9 : ret 0xfc00
0x000000000048c486 : ret 0xfc01
0x000000000048c43a : ret 0xfc02
0x000000000043fe5a : ret 0xfc3
0x0000000000447830 : ret 0xfd83
0x00000000004be31c : ret 0xfdc8
0x0000000000440c1a : ret 0xfddc
0x0000000000402bd0 : ret 0xfdf
0x0000000000422a69 : ret 0xfe00
0x000000000045ef3a : ret 0xfe41
0x000000000043e9e3 : ret 0xfe83
0x000000000043323e : ret 0xfec5
0x0000000000422929 : ret 0xff00
0x0000000000435231 : ret 0xff2
0x000000000042ec9a : ret 0xff3
0x00000000004227e9 : ret 0xff80
0x0000000000489286 : ret 0xff81
0x000000000048923a : ret 0xff82
0x000000000040c65a : ret 0xff99
0x0000000000487520 : ret 0xff9f
0x0000000000452b42 : ret 0xffb0
0x0000000000400540 : ret 0xffb8
0x000000000048f227 : ret 0xffbf
0x00000000004226a9 : ret 0xffc0
0x00000000004003e6 : ret 0xffd0
0x000000000042196e : ret 0xffdf
0x000000000044fe98 : ret 0xffe0
0x0000000000408a0a : ret 0xffe2
0x000000000049e82a : ret 0xffe7
0x0000000000441fba : ret 0xffe8
0x0000000000441eba : ret 0xffe9
0x000000000045a25c : ret 0xffee
0x000000000040f24c : ret 0xffef
0x000000000040deae : ret 0xfff0
0x00000000004222e9 : ret 0xfff8
0x000000000041cec1 : ret 0xfff9
0x00000000004c6bb9 : ret 0xfffa
0x000000000043fa19 : ret 0xfffb
0x00000000004221a9 : ret 0xfffc
0x00000000004425e1 : ret 0xfffd
0x00000000004056c8 : ret 0xfffe
0x000000000041101a : ret 0xffff
0x0000000000402edf : ret 1
0x000000000041a65a : ret 2
0x0000000000430052 : ret 3
0x0000000000426a59 : ret 4
0x000000000041afa6 : ret 5
0x0000000000419700 : ret 6
0x00000000004b28e4 : ret 7
0x000000000040a80e : ret 8
0x000000000043d05a : ret 9
0x0000000000492ccf : retf 0x850f ; call qword ptr [rsi]
0x0000000000462add : retf 0x9066 ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x462ab0
0x00000000004a3d91 : retf 0xfff8 ; ror ah, 1 ; clc ; jmp qword ptr [rax]
0x00000000004be385 : retf ; std ; jmp rsp
0x00000000004be381 : retf ; std ; lcall [rdx - 0x35] ; std ; jmp rsp
0x000000000043e175 : rol bl, 0x48 ; mov eax, edi ; ret
0x000000000043edc5 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x00000000004672eb : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000416e27 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000477d8e : rol bl, 1 ; mov eax, 1 ; ret
0x0000000000426aed : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000042ec72 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000465ba2 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000004b22e0 : rol byte ptr [rax + rax], 0 ; ret 4
0x00000000004484d8 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000048a386 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000004a43f4 : rol byte ptr [rax - 0x7f0f0007], 1 ; stc ; call qword ptr [rax]
0x00000000004609f5 : rol byte ptr [rax], 0 ; add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000042f1bd : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049c686 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000045023b : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000047ad31 : rol byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000042d682 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000482581 : rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000046b561 : rol byte ptr [rbp - 0x7c], 0xdb ; je 0x46b558 ; ret
0x0000000000478e0b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000443666 : rol byte ptr [rbx - 0x24e6fe08], 0x83 ; ret
0x0000000000417278 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x0000000000466b62 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000043ec81 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000044ce3b : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000441237 : rol byte ptr [rcx - 0x77], 0xdd ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000046e745 : rol byte ptr [rcx - 0x80], cl ; cld ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x00000000004a39d4 : rol byte ptr [rcx - 8], 1 ; jmp rax
0x0000000000466b42 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000043ea96 : rol byte ptr [rcx], 0x5d ; pop r12 ; pop r13 ; ret
0x000000000044e952 : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000043eaf7 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x72e9
0x000000000043eae2 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000000000043326e : rol byte ptr [rcx], 1 ; ret 0x148
0x0000000000466ba2 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000466b52 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x0000000000445376 : rol byte ptr [rdx], 0x50 ; call rbx
0x00000000004c2e00 : rol byte ptr [rdx], 0xf8 ; call qword ptr [rdi]
0x000000000047cd47 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x00000000004a42c0 : rol byte ptr [rip + 0x750fff9], 1 ; stc ; call rax
0x0000000000466b92 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000004b81e0 : rol cl, 0xc2 ; ret
0x000000000046866f : rol cl, cl ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000004a3be4 : rol dl, 0xf8 ; inc dword ptr [rax - 0x3d] ; clc ; inc eax ; ret
0x00000000004bcb38 : rol dl, 1 ; add byte ptr [r8], al ; add byte ptr [rax], al ; add al, ah ; ret 0x4b
0x0000000000466aec : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x0000000000400593 : rol dword ptr [rbx + rbp*8], 0xcc ; mov qword ptr [rdi], rcx ; ret
0x000000000041e51d : rol dword ptr [rcx], cl ; ret
0x000000000046b5d3 : rol ebx, 0x4c ; mov eax, ecx ; ret
0x0000000000444bbd : rol ecx, 0xe1 ; add edx, ebx ; loopne 0x444c27 ; pop rbp ; ret
0x00000000004a3d94 : ror ah, 1 ; clc ; jmp qword ptr [rax]
0x0000000000426972 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x4269b9 ; add rax, rdi ; ret
0x0000000000424317 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000004112ca : ror byte ptr [rax + 0x29], 1 ; ret
0x0000000000473e19 : ror byte ptr [rax + 0x29], cl ; ret 0x3949
0x000000000044772a : ror byte ptr [rax + 0x29], cl ; ret 0x8348
0x000000000049da48 : ror byte ptr [rax + 0x39], 0x1c ; and al, 0xf ; ret 0x8348
0x000000000049d271 : ror byte ptr [rax + 0x39], 0x34 ; and al, 0xf ; ret 0x8348
0x000000000049cdf2 : ror byte ptr [rax + 0x39], 0x4e ; or byte ptr [rdi], cl ; ret 0xfc3
0x000000000046b1dc : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x46b20f ; ret
0x0000000000443138 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000479806 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000004016d5 : ror byte ptr [rax + 0x39], 1 ; ret 0xe72
0x000000000049b587 : ror byte ptr [rax + 0x63], 0x44 ; test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x0000000000443ab5 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x0000000000467ff0 : ror byte ptr [rax + 0xf], 0xaf ; ret
0x000000000044fd9d : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000046df8c : ror byte ptr [rax + 0xf], 1 ; ret 0x8348
0x000000000044fd8e : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000047a38e : ror byte ptr [rax + 0xf], 1 ; ret 0xf631
0x000000000042d55c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x0000000000426942 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000489066 : ror byte ptr [rax + 1], cl ; ret 0x9e74
0x0000000000488fa9 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x0000000000424314 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000004ae6e8 : ror byte ptr [rax + rax], 0 ; ret
0x0000000000426ae5 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000488806 : ror byte ptr [rax - 0x3f], 0xe9 ; adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x000000000046963a : ror byte ptr [rax - 0x3f], 1 ; call 0xffffffffc37fdf4d
0x000000000045e0da : ror byte ptr [rax - 0x3f], 1 ; clc ; add cl, byte ptr [rax + 0x29] ; ret
0x000000000047b9a8 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x0000000000426932 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x0000000000426962 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x0000000000426952 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000041c647 : ror byte ptr [rax - 0x73], 0x54 ; ret
0x000000000041c966 : ror byte ptr [rax - 0x73], 1 ; push rsp ; ret
0x0000000000400d75 : ror byte ptr [rax - 0x75], 4 ; vunpckhps xmm1, xmm15, xmmword ptr [rdx] ; jmp rax
0x0000000000469f5d : ror byte ptr [rax - 0x75], 5 ; ret
0x0000000000415dfa : ror byte ptr [rax - 0x75], cl ; jmp rax
0x00000000004796a3 : ror byte ptr [rax - 0x77], 0x14 ; ret
0x00000000004132b5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x000000000046a455 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x0000000000459bf9 : ror byte ptr [rax - 0x77], 1 ; ret 0x8ee8
0x000000000040df59 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000421582 : ror byte ptr [rax - 0x77], 1 ; xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000044d3b9 : ror byte ptr [rax - 0x77], 5 ; lahf ; jmp qword ptr [rdi]
0x00000000004181dd : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000413d01 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x413d16 ; ret
0x000000000047b1c9 : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000041060f : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000046b100 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000041d4e6 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000478b38 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000000000049d2be : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000041d0a5 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb18c4
0x0000000000472452 : ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000004731dc : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000457262 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x000000000047ac0a : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000047635d : ror byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000449cc3 : ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000000000046a0ae : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000449204 : ror byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000047aeba : ror byte ptr [rax - 9], cl ; cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004885b4 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000046dfef : ror byte ptr [rbp + rcx*4 + 0x4a], cl ; dec dword ptr [rcx + 0x29] ; ret 0x8d49
0x000000000049dd3c : ror byte ptr [rbp - 0x75], 0x51 ; or byte ptr [rbp + 0x39], cl ; ret 0x4776
0x0000000000448540 : ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000447739 : ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x0000000000447bc0 : ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000046b553 : ror byte ptr [rcx + rcx*4 - 0x38], 0x75 ; ret
0x00000000004655d2 : ror byte ptr [rcx + rcx*4 - 1], 0x45 ; xor eax, eax ; call rbx
0x000000000045002e : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x0000000000472905 : ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x000000000043e934 : ror byte ptr [rcx - 0x77], 1 ; ret 0x2c76
0x0000000000411eca : ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x00000000004a428c : ror byte ptr [rcx], 1 ; stc ; call qword ptr [rax]
0x0000000000427269 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000044303c : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x0000000000468698 : ror byte ptr [rdi], 0x48 ; ret 0xb70f
0x000000000041e6dd : ror byte ptr [rdi], 0x84 ; cmc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046b387 : ror byte ptr [rdi], 0x84 ; push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047f3c6 : ror byte ptr [rdi], 0x84 ; ret
0x0000000000446f8c : ror byte ptr [rdi], 0x84 ; test dword ptr [rdx], 0x83480000 ; ret
0x0000000000438a7a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000438ab6 : ror byte ptr [rdi], 0x85 ; ret
0x000000000045a259 : ror byte ptr [rdi], 0x85 ; ret 0xffee
0x0000000000458267 : ror byte ptr [rdi], 0x8a ; ret 8
0x0000000000490f88 : ror byte ptr [rdi], 0x8f ; ret
0x0000000000442d9c : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000047c73c : ror byte ptr [rdi], 0x94 ; ret 0x3840
0x000000000047be7a : ror byte ptr [rdi], 0x94 ; ret 0x5438
0x000000000041bcf7 : ror byte ptr [rdi], 0x94 ; ret 0x7ae9
0x0000000000461d63 : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x000000000047b1cc : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000485e34 : ror byte ptr [rdi], 0x94 ; ret 0xd309
0x000000000047bdcd : ror byte ptr [rdi], 0x94 ; ret 0xda38
0x00000000004104fa : ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x00000000004675cf : ror byte ptr [rdi], 0x95 ; ret 0xb8e9
0x000000000046748a : ror byte ptr [rdi], 0x95 ; ret 0xd721
0x00000000004100e2 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x00000000004670be : ror byte ptr [rdi], 0x95 ; ret 0xe883
0x00000000004105dc : ror byte ptr [rdi], 0x9f ; ret 0x3841
0x000000000040df6e : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x40df58 ; ret
0x0000000000419b09 : ror byte ptr [rdi], 1 ; test byte ptr [rax], dh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000046dc65 : ror byte ptr [rdi], cl ; test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000047c0ef : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3840
0x000000000047c203 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000458266 : ror byte ptr cs:[rdi], 0x8a ; ret 8
0x0000000000410fe3 : ror dword ptr [rax + 0x29], cl ; ret
0x000000000047d526 : ror dword ptr [rax + 0xf], cl ; ret 0x8349
0x000000000047322c : ror dword ptr [rax - 0x75], 0x46 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000047a693 : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x000000000045a820 : ror dword ptr [rax - 0x77], 1 ; ret 0x47e9
0x00000000004332c2 : ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000047e651 : ror dword ptr [rax - 0x77], cl ; ret
0x000000000041547d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x415477 ; ret
0x0000000000463e8d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x463e87 ; ret
0x000000000040ef18 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000405702 : ror dword ptr [rax - 0x7d], cl ; ret
0x00000000004bcaf1 : ror dword ptr [rbx], 0 ; add byte ptr [rax], al ; add byte ptr [rdi], dl ; ret 0x4b
0x000000000044f802 : ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x000000000042d165 : ror dword ptr [rcx + rcx*4 + 0xf], 1 ; pop rbx ; ret
0x00000000004425f6 : ror dword ptr [rcx + rcx*4 - 0x11], cl ; call 0x41e8e6
0x00000000004425db : ror dword ptr [rcx + rcx*4 - 1], cl ; call 0x41e8e6
0x00000000004425e8 : ror dword ptr [rcx + rcx*4 - 9], cl ; call 0x41e8e6
0x000000000043c5a7 : ror dword ptr [rcx], cl ; ret 0xe074
0x000000000042fa28 : ror dword ptr [rdi], 0x85 ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000430134 : ror dword ptr [rdi], 0x85 ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042ff06 : ror dword ptr [rdi], 0x85 ; add eax, 0xc0310000 ; ret
0x000000000042fe86 : ror dword ptr [rdi], 0x85 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000004301c4 : ror dword ptr [rdi], 0x85 ; je 0x4301d4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042fcbb : ror dword ptr [rdi], 0x85 ; jno 0x42fcd0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042fd83 : ror dword ptr [rdi], 0x85 ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042fa00 : ror dword ptr [rdi], 0x85 ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000046858b : ror dword ptr [rdi], 0x94 ; ret
0x0000000000489448 : ror dword ptr [rdi], 0x95 ; ret 0xd348
0x000000000041547c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x415478 ; ret
0x0000000000463e8c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x463e88 ; ret
0x00000000004c86cd : sahf ; add byte ptr [rax], al ; and byte ptr [rdi], al ; cld ; call qword ptr [rax]
0x00000000004c86e5 : sahf ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; cld ; call qword ptr [rdx]
0x0000000000447734 : sahf ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x000000000040197c : sahf ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042c12e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000479ce1 : sahf ; ret 0x148
0x00000000004b90c5 : sahf ; ret 0x38ae
0x0000000000451950 : sahf ; ret 0x8348
0x000000000047c034 : sahf ; ret 0xe8c1
0x000000000049bc63 : sahf ; ret 0xf45
0x00000000004a3dd0 : sahf ; sbb edi, ecx ; jmp qword ptr [rax]
0x00000000004c8d00 : sal al, 0xfc ; call qword ptr [rax]
0x000000000041727e : sal bh, 0xd8 ; ret
0x000000000043edd9 : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x00000000004231e7 : sal bh, 1 ; ret 0x8000
0x00000000004230a7 : sal bh, 1 ; ret 0xc000
0x0000000000422f67 : sal bh, 1 ; ret 0xe000
0x0000000000422e27 : sal bh, 1 ; ret 0xf000
0x0000000000422ce7 : sal bh, 1 ; ret 0xf800
0x0000000000422ba7 : sal bh, 1 ; ret 0xfc00
0x0000000000422a67 : sal bh, 1 ; ret 0xfe00
0x0000000000422927 : sal bh, 1 ; ret 0xff00
0x00000000004227e7 : sal bh, 1 ; ret 0xff80
0x00000000004226a7 : sal bh, 1 ; ret 0xffc0
0x0000000000422567 : sal bh, 1 ; ret 0xffe0
0x0000000000422427 : sal bh, 1 ; ret 0xfff0
0x00000000004222e7 : sal bh, 1 ; ret 0xfff8
0x00000000004221a7 : sal bh, 1 ; ret 0xfffc
0x0000000000422067 : sal bh, 1 ; ret 0xfffe
0x000000000045a874 : sal bh, cl ; int1 ; add eax, r8d ; ret
0x00000000004672df : sal bl, 1 ; ret
0x0000000000473932 : sal byte ptr [rbp + 0x4b], 0x89 ; ret
0x0000000000426928 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x000000000049e533 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x000000000049e518 : sal byte ptr [rbp + 5], 0xf3 ; ret
0x00000000004590ae : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000413d04 : sal byte ptr [rbp + 9], cl ; ret
0x0000000000443161 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x0000000000416dd5 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000043e2e0 : sal byte ptr [rbp - 0x13], cl ; lea rax, [rcx - 1] ; ret
0x0000000000415480 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000042ee1b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000040df73 : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000047442f : sal byte ptr [rbp - 0x32], 0xf3 ; ret
0x000000000046731b : sal byte ptr [rbp - 0xe], cl ; ret
0x000000000047e78d : sal byte ptr [rbx - 0x7d], 0xe8 ; add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000042425c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000443136 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000441642 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xc3 ; call rax
0x0000000000400959 : sal byte ptr [rdi + rax - 0x41], 0xc0 ; call 0xffffffffd13f09b6
0x0000000000465b6b : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000047672d : sal byte ptr [rdx + rax*2 + 0x48], cl ; shl edx, 5 ; add rdx, rax ; jmp 0x476752
0x0000000000424113 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x000000000046da61 : sal byte ptr [rsp + 0x48], 0x83 ; ret
0x000000000040dea9 : sal byte ptr [rsp + rbp*2 + 0x48], 0xc7 ; ret 0xfff0
0x000000000047b511 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x00000000004790af : sal dword ptr [rbp + rsi*2 + 0x4c], 0x89 ; ret 0xf749
0x00000000004742c7 : sal dword ptr [rbp - 0x2a], 1 ; ret
0x0000000000415df8 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x00000000004c16f1 : sal ebp, cl ; call rdx
0x00000000004332c5 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004a3ae5 : sar al, 0xff ; adc cl, al ; clc ; inc dword ptr [rax] ; ret 0xfff8
0x00000000004a3b99 : sar al, 0xff ; pop rbx ; sar eax, 0xff ; pop rbx ; ret 0xfff8
0x00000000004a3bd9 : sar al, 0xff ; sar eax, 0xff ; ret 0xfff8
0x00000000004a3b19 : sar al, 0xff ; xchg eax, ecx ; sar eax, 0xff ; xchg eax, ecx ; ret 0xfff8
0x00000000004a3da1 : sar al, 1 ; call qword ptr [rax]
0x0000000000485f1a : sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x00000000004842dc : sar bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000484923 : sar bl, 0xff ; dec dword ptr [rcx + 0x29] ; fmul dword ptr [rax - 0x77] ; ret 0x348
0x000000000044df13 : sar byte ptr [rax + 1], 0xf ; ret 0x4389
0x0000000000471721 : sar byte ptr [rax + 3], 0x5b ; ret
0x000000000047ab6c : sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000044a6c1 : sar byte ptr [rax + rax*4], 0xf ; xchg eax, esp ; ret 0x8348
0x00000000004a4314 : sar byte ptr [rax - 7], 0xff ; sar byte ptr [rax - 7], 1 ; jmp rax
0x00000000004a4318 : sar byte ptr [rax - 7], 1 ; jmp rax
0x000000000044e439 : sar byte ptr [rcx - 0x7ab7ff94], 0xc0 ; je 0x44e44d ; call rax
0x0000000000444b0d : sar byte ptr [rcx], cl ; ret
0x0000000000475332 : sar byte ptr [rdi + 0x4b655c], 0xe8 ; ret
0x00000000004753bc : sar byte ptr [rdi + 0x4bcbb8], 0x83 ; ret
0x00000000004a43d4 : sar byte ptr [rdi - 7], 1 ; push rax ; jg 0x4a43db ; call qword ptr [rax]
0x00000000004a39d0 : sar byte ptr [rdi], 0xf8 ; call rax
0x0000000000478d40 : sar byte ptr [rdx - 0x7cb7ff94], 0xc4 ; ret
0x0000000000441b6c : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x000000000047cd1c : sar byte ptr [rsi + 9], 1 ; ret
0x00000000004b9a5f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004a43a8 : sar byte ptr [rsi - 7], 0xff ; sar byte ptr [rsi - 7], 1 ; jmp rax
0x00000000004a43ac : sar byte ptr [rsi - 7], 1 ; jmp rax
0x0000000000442859 : sar ch, 0xff ; mov rdi, qword ptr [r13] ; call rbx
0x000000000044284c : sar ch, 0xff ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004a388c : sar dl, 0xf7 ; call rax
0x00000000004360a3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x4360ae ; ret
0x000000000040053e : sar dword ptr [rcx], 1 ; ret 0xffb8
0x0000000000402ffe : sar dword ptr [rdi + 0x6cbfe0], cl ; call rbx
0x00000000004a3ae9 : sar eax, 0xff ; add dl, al ; clc ; jmp qword ptr [rsi]
0x00000000004a3b5d : sar eax, 0xff ; jbe 0x4a3b2c ; clc ; push rsi ; ret 0xfff8
0x00000000004a3b9d : sar eax, 0xff ; pop rbx ; ret 0xfff8
0x00000000004a3bdd : sar eax, 0xff ; ret 0xfff8
0x00000000004a3b1d : sar eax, 0xff ; xchg eax, ecx ; ret 0xfff8
0x0000000000464ffc : sar eax, 2 ; lea eax, [r8 - 1] ; ret
0x000000000047d14b : sar eax, 3 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000442724 : sar ebp, 0xff ; mov rdi, qword ptr [r12] ; call rbx
0x0000000000442716 : sar ebp, 0xff ; mov rdi, qword ptr [r13] ; call rbx
0x0000000000442709 : sar ebp, 0xff ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004be2b1 : sar ebp, 0xff ; sbb dl, al ; std ; lcall [rax] ; ret 0xfffd
0x00000000004be2cd : sar ebp, 0xff ; sub cl, al ; std ; jmp rsp
0x00000000004be2ad : sar ebp, 0xff ; sub cl, al ; std ; lcall [rax] ; ret 0xfffd
0x00000000004b97c3 : sar ecx, 1 ; jnp 0x4b9784 ; ret
0x0000000000426ae7 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000464ffb : sar r8, 2 ; lea eax, [r8 - 1] ; ret
0x0000000000426ae6 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x000000000049aec3 : sbb al, 0x23 ; add byte ptr [rax], cl ; ret
0x00000000004194c3 : sbb al, 0x74 ; add eax, 0x5c415d5b ; ret
0x0000000000467fee : sbb al, 0x89 ; ror byte ptr [rax + 0xf], 0xaf ; ret
0x000000000047aeb0 : sbb al, 0xac ; stc ; dec dword ptr [rax + 0x39] ; ret
0x000000000049ce46 : sbb al, 0xcc ; mov rsi, qword ptr [rbx] ; call r14
0x00000000004a38fd : sbb al, 0xf8 ; call rax
0x00000000004a4005 : sbb al, 0xf9 ; call qword ptr [rax]
0x00000000004a3ec9 : sbb al, 0xf9 ; call rdx
0x00000000004a3ec5 : sbb al, 0xf9 ; inc dword ptr [rdx + 0x1c] ; stc ; call rdx
0x00000000004a3e49 : sbb al, 0xf9 ; jmp rsi
0x000000000047c340 : sbb al, 2 ; mov qword ptr [rsp + 0x78], rbx ; call r12
0x0000000000460fa5 : sbb al, byte ptr [rcx - 0x7d] ; ret
0x00000000004c83f8 : sbb bh, bh ; sti ; jmp qword ptr [rax]
0x0000000000440dc2 : sbb bl, bl ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004b8545 : sbb bl, byte ptr [rsi] ; ret
0x00000000004789a4 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000049f12b : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000041107a : sbb byte ptr [r9 - 0x77], r9b ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000047b1c6 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000471b6b : sbb byte ptr [rax + 0x39], cl ; ret
0x00000000004789a5 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000417a43 : sbb byte ptr [rax + 0x5bd88948], dl ; pop rbp ; pop r12 ; ret
0x000000000043f2da : sbb byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000448a01 : sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000409d4e : sbb byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x406027
0x00000000004154e1 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000410dd1 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x000000000041e777 : sbb byte ptr [rax - 0x77], cl ; xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x0000000000412e53 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x938b
0x000000000049f12c : sbb byte ptr [rax - 0x7d], cl ; ret
0x000000000042cfde : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000449da4 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042cfdd : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000004c64e8 : sbb byte ptr [rax - 6], dl ; jmp rsp
0x0000000000415d9f : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000465325 : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; call rbx
0x00000000004452e9 : sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x00000000004175f3 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000042d421 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000411499 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000416e17 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000464e6b : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000471a89 : sbb byte ptr [rcx + 3], cl ; add al, 0x24 ; call rax
0x000000000041beb9 : sbb byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x10 ; call rax
0x0000000000465403 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000041d373 : sbb byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x0000000000411373 : sbb byte ptr [rcx - 0x77], cl ; ret 0x8b49
0x000000000041107b : sbb byte ptr [rcx - 0x77], cl ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x00000000004c7398 : sbb byte ptr [rcx], cl ; sti ; jmp rsi
0x000000000045575b : sbb byte ptr [rcx], dh ; add r8b, bpl ; in al, dx ; ret
0x0000000000465457 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047b1c7 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x00000000004a3dec : sbb byte ptr [rdi], 0xf9 ; call qword ptr [rax]
0x00000000004c86b8 : sbb byte ptr [rdi], al ; cld ; call qword ptr [rdx]
0x000000000041ee92 : sbb byte ptr [rdi], cl ; test edi, ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004bee88 : sbb byte ptr [rdx - 0xc], ah ; call qword ptr [rax]
0x0000000000404b3b : sbb byte ptr [rdx], cl ; jmp 0x4040e3
0x000000000048ee85 : sbb ch, bl ; add r8b, bpl ; ret 0xf72c
0x00000000004a3d7c : sbb cl, 0xf8 ; call rax
0x00000000004a41d9 : sbb cl, bh ; call qword ptr [rax + 0x10fff917]
0x00000000004a4215 : sbb cl, bh ; call qword ptr [rax]
0x00000000004a41d5 : sbb cl, bh ; jmp qword ptr [rax]
0x0000000000413505 : sbb cl, byte ptr [rax - 0x39] ; ret 0xffd0
0x0000000000423ddd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a87d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004239cd : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x00000000004234d9 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000423ce9 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042c4ca : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000042bcea : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000042c0da : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b8fa : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b3dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042abbd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000042375d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a39d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000423a9d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000423db9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ba99 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423e89 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042aefd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a6dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429ebd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000042b09d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000423c3d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042342d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000042382d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000042bf8a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b7aa : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042c8ba : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000423d0d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000004234fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000042a1fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042359f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004238fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x000000000042a333 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b033 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ab53 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042be8b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042c7bb : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423b6d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042b373 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a673 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000042a193 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ae93 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000042bfdb : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b7fb : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004235c3 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004be2b4 : sbb dl, al ; std ; lcall [rax] ; ret 0xfffd
0x0000000000476eff : sbb dl, dh ; jmp r11
0x0000000000494a98 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049d01c : sbb dword ptr [rax - 0x80], eax ; call qword ptr [rax]
0x0000000000494a21 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494a99 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004537f8 : sbb dword ptr [rbx - 0x4a743], eax ; call qword ptr [rax]
0x00000000004badfd : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000455456 : sbb dword ptr [rcx], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000043dfb7 : sbb eax, -1 ; ret
0x0000000000443325 : sbb eax, 0 ; leave ; ret
0x00000000004a3dfd : sbb eax, 0x1d50fff9 ; stc ; jmp rax
0x00000000004a3901 : sbb eax, 0x1f50fff8 ; clc ; call rax
0x000000000049f0b0 : sbb eax, 0x22d4cb ; jne 0x49f0a0 ; pop rbx ; ret
0x0000000000494841 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004948b9 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000478e0a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000049cdf1 : sbb eax, eax ; cmp qword ptr [rsi + 8], rcx ; cmova eax, edx ; ret
0x000000000043dfb5 : sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004a38f5 : sbb eax, edi ; call rax
0x00000000004430ee : sbb ebp, 0x1b ; add byte ptr [rax], al ; ret
0x000000000043fbee : sbb ebp, 0x50 ; add byte ptr [rax], al ; ret
0x000000000047bb79 : sbb ebx, 0x89000001 ; ret
0x000000000045c8e0 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x0000000000447447 : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x00000000004c31b1 : sbb edi, eax ; call qword ptr [rax]
0x00000000004a3f51 : sbb edi, ecx ; call rsp
0x00000000004a3dd1 : sbb edi, ecx ; jmp qword ptr [rax]
0x0000000000469cce : scasb al, byte ptr [rdi] ; adc dword ptr [rcx], eax ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047af3f : scasb al, byte ptr [rdi] ; add byte ptr [r15 + 0x6cc9c0], r15b ; call rax
0x00000000004263fd : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000042c51e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x000000000041e3b2 : scasb al, byte ptr [rdi] ; ret
0x000000000042c61d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c97d5 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; cmp byte ptr [rsi - 3], cl ; jmp qword ptr [rbx]
0x0000000000425e9d : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004a3ac9 : scasd eax, dword ptr [rdi] ; clc ; jmp qword ptr [rax]
0x0000000000401734 : scasd eax, dword ptr [rdi] ; ret
0x0000000000410f1c : scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000043eafa : scasd eax, dword ptr [rdi] ; ret 0x72e9
0x0000000000421588 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000401853 : scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000000000043eae5 : scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x0000000000450350 : scasd eax, dword ptr [rdi] ; ret 0xc748
0x000000000048880d : scasd eax, dword ptr [rdi] ; ret 0xf48
0x000000000046c176 : scasd eax, dword ptr [rdi] ; sti ; dec dword ptr [rax + 0x39] ; ret
0x000000000044313c : setae al ; ret
0x000000000041727c : setne al ; neg eax ; ret
0x0000000000444b10 : setne dl ; jmp 0x444af8
0x0000000000466245 : sgdt [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000044e9f5 : shl byte ptr [rdi + 0x4a], 0 ; test rax, rax ; je 0x44ea09 ; call rax
0x000000000043e1ff : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x000000000043c5a3 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000421dd5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x00000000004303bb : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x00000000004303d2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000465de6 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000465df7 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004302b1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004af910 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004b9948 : shl dword ptr [rdi - 5], 1 ; ret
0x0000000000465de2 : shl dword ptr [rsi + 0xf], 0xd7 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000043e05b : shl dword ptr [rsi + 0xf], 0xda ; ret
0x0000000000430336 : shl dword ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004303ed : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x00000000004303d6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000004303bf : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042ee7b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000430351 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042674c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x0000000000430211 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000444bc1 : shl eax, cl ; pop rbx ; pop rbp ; ret
0x0000000000444bbe : shl ecx, 3 ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x000000000047936c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000004792f7 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00000000004792c6 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000042d161 : shl ecx, cl ; or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000476731 : shl edx, 5 ; add rdx, rax ; jmp 0x47674e
0x000000000047936b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000004792f6 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00000000004792c5 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000476730 : shl rdx, 5 ; add rdx, rax ; jmp 0x47674f
0x000000000047672f : shl rdx, 5 ; add rdx, rax ; jmp 0x476750
0x000000000046ad3f : shr bl, cl ; ret
0x00000000004465fd : shr bl, cl ; ret 0x438b
0x0000000000400620 : shr byte ptr [rax + rax], 0xbf ; ret 0
0x00000000004a396c : shr byte ptr [rbp - 8], 1 ; push qword ptr [rax + 0x6f] ; clc ; call qword ptr [rax]
0x000000000042ee1f : shr byte ptr [rcx], 0xc8 ; ret
0x000000000044d1b8 : shr byte ptr [rcx], cl ; ret
0x0000000000468680 : shr byte ptr [rcx], cl ; ret 0x428d
0x0000000000426aeb : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000045f0d7 : shr cl, cl ; ret
0x0000000000427579 : shr dword ptr [rdx], cl ; add dword ptr [rax], eax ; ret
0x000000000043ed0a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x000000000043ece9 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000047947c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000479401 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000004793d0 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000465103 : shr edx, 2 ; sub eax, edx ; ret
0x000000000047947b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000479400 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000004793cf : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000465102 : shr rdx, 2 ; sub eax, edx ; ret
0x00000000004aeae9 : sldt word ptr [rax] ; ret
0x000000000044668c : stc ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000400a0e : stc ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000041b022 : stc ; add eax, 0xf6410000 ; ret 0xf01
0x00000000004a41fa : stc ; call qword ptr [rax + 0x10fff913]
0x00000000004a41f2 : stc ; call qword ptr [rax + 0x10fff914]
0x00000000004a41ea : stc ; call qword ptr [rax + 0x10fff915]
0x00000000004a41e2 : stc ; call qword ptr [rax + 0x10fff916]
0x00000000004a41da : stc ; call qword ptr [rax + 0x10fff917]
0x00000000004a4212 : stc ; call qword ptr [rax + 0x10fff918]
0x00000000004a3fe6 : stc ; call qword ptr [rax + 0x20fff91f]
0x00000000004a3dee : stc ; call qword ptr [rax]
0x00000000004a40ca : stc ; call qword ptr [rdx + 0x22fff911]
0x00000000004a3eba : stc ; call qword ptr [rdx + 0x22fff91d]
0x00000000004a3e9a : stc ; call qword ptr [rdx]
0x00000000004a3e16 : stc ; call qword ptr [rsi + 0x26fff921]
0x00000000004a3e36 : stc ; call qword ptr [rsi]
0x00000000004a3dde : stc ; call rax
0x0000000000467419 : stc ; call rbx
0x00000000004c4bca : stc ; call rdi
0x00000000004a3eca : stc ; call rdx
0x00000000004a3e26 : stc ; call rsi
0x00000000004a3f52 : stc ; call rsp
0x00000000004a4261 : stc ; clc ; call rax
0x000000000047aeb2 : stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000487dd7 : stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x000000000048608a : stc ; dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00000000004a3ff2 : stc ; inc dword ptr [rax + 0x1e] ; stc ; call rax
0x00000000004a3dda : stc ; inc dword ptr [rax + 0x21] ; stc ; call rax
0x00000000004a423e : stc ; inc dword ptr [rax] ; adc edi, ecx ; push qword ptr [rax + 0x12] ; stc ; jmp rax
0x00000000004a3fe2 : stc ; inc dword ptr [rax] ; and cl, bh ; call qword ptr [rax + 0x20fff91f]
0x00000000004a437e : stc ; inc dword ptr [rax] ; jnp 0x4a4381 ; jmp qword ptr [rax]
0x00000000004a4322 : stc ; inc dword ptr [rax] ; jns 0x4a4325 ; call qword ptr [rax]
0x00000000004a435e : stc ; inc dword ptr [rax] ; jp 0x4a4361 ; jmp qword ptr [rax]
0x00000000004a3ec6 : stc ; inc dword ptr [rdx + 0x1c] ; stc ; call rdx
0x00000000004a3e22 : stc ; inc dword ptr [rsi + 0x20] ; stc ; call rsi
0x00000000004a3e12 : stc ; inc dword ptr [rsi] ; and bh, cl ; call qword ptr [rsi + 0x26fff921]
0x00000000004a43ce : stc ; inc eax ; jg 0x4a43d1 ; call rax
0x00000000004a43a6 : stc ; inc eax ; jle 0x4a43a9 ; call rax
0x00000000004a4352 : stc ; inc eax ; jns 0x4a4355 ; jmp rax
0x00000000004a4376 : stc ; inc eax ; jp 0x4a4379 ; jmp rax
0x00000000004a4312 : stc ; inc eax ; js 0x4a4315 ; call rax
0x00000000004a3dfa : stc ; inc eax ; sbb eax, 0x1d50fff9 ; stc ; jmp rax
0x000000000042b5d2 : stc ; je 0x42b59e ; lea r10, [r10 + r9] ; jmp r10
0x0000000000496522 : stc ; je 0x4964ee ; lea r10, [r10 + r9] ; jmp r10
0x00000000004a41d2 : stc ; jmp qword ptr [rax + 0x20fff918]
0x00000000004a3dd2 : stc ; jmp qword ptr [rax]
0x00000000004a3ebe : stc ; jmp qword ptr [rdx]
0x00000000004a3e1a : stc ; jmp qword ptr [rsi]
0x00000000004a3e02 : stc ; jmp rax
0x00000000004a3eae : stc ; jmp rdx
0x00000000004a3e4a : stc ; jmp rsi
0x00000000004a3f76 : stc ; jmp rsp
0x00000000004b97c4 : stc ; jnp 0x4b9783 ; ret
0x00000000004a408a : stc ; lcall [rcx + rdx + 0x112cfff9] ; stc ; call rdx
0x00000000004a408e : stc ; ljmp [rcx + rdx] ; stc ; call rdx
0x0000000000432c78 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000046dbd7 : stc ; mov r15, rax ; jmp 0x46dba5
0x00000000004a4242 : stc ; push qword ptr [rax + 0x12] ; stc ; jmp rax
0x00000000004a403e : stc ; push qword ptr [rax + 0x13] ; stc ; jmp rax
0x00000000004a3dd6 : stc ; push qword ptr [rax + 0x40fff921] ; and ecx, edi ; call rax
0x00000000004a43ca : stc ; push qword ptr [rax - 0x3f000681] ; jg 0x4a43d5 ; call rax
0x00000000004a434e : stc ; push qword ptr [rax - 0x3f000687] ; jns 0x4a4359 ; jmp rax
0x00000000004a430e : stc ; push qword ptr [rax - 0x3f000688] ; js 0x4a4319 ; call rax
0x00000000004a3ec2 : stc ; push qword ptr [rdx + 0x42fff91c] ; sbb al, 0xf9 ; call rdx
0x00000000004a3e1e : stc ; push qword ptr [rsi + 0x46fff920] ; and cl, bh ; call rsi
0x00000000004a420e : stc ; push rax ; adc cl, bh ; call qword ptr [rax + 0x10fff918]
0x00000000004a403a : stc ; push rax ; adc edi, ecx ; push qword ptr [rax + 0x13] ; stc ; jmp rax
0x00000000004a43d6 : stc ; push rax ; jg 0x4a43d9 ; call qword ptr [rax]
0x00000000004a43b2 : stc ; push rax ; jle 0x4a43b5 ; call qword ptr [rax]
0x00000000004a435a : stc ; push rax ; jns 0x4a4361 ; inc dword ptr [rax] ; jp 0x4a4365 ; jmp qword ptr [rax]
0x00000000004a431e : stc ; push rax ; js 0x4a4325 ; inc dword ptr [rax] ; jns 0x4a4329 ; call qword ptr [rax]
0x00000000004bcaf0 : stc ; ror dword ptr [rbx], 0 ; add byte ptr [rax], al ; add byte ptr [rdi], dl ; ret 0x4b
0x00000000004365a4 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000004be236 : std ; call qword ptr [rax - 0x1f0002b4]
0x00000000004be1aa : std ; call qword ptr [rax]
0x00000000004c43da : std ; call qword ptr [rbx]
0x00000000004be2ee : std ; call qword ptr [rdx - 0x2d00023b]
0x00000000004be1b2 : std ; call rax
0x00000000004c7622 : std ; call rcx
0x00000000004be2f2 : std ; call rdx
0x00000000004be3da : std ; call rsp
0x0000000000440b2c : std ; dec dword ptr [rax - 0x75] ; jge 0x440b38 ; call rbx
0x0000000000440ddf : std ; dec dword ptr [rax - 0x75] ; jge 0x440deb ; call rbx
0x0000000000442977 : std ; dec dword ptr [rax - 0x75] ; jge 0x442983 ; call rbx
0x0000000000440041 : std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004409ea : std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000440ded : std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00000000004409f7 : std ; dec dword ptr [rcx - 0x75] ; jge 0x440a03 ; call rbx
0x0000000000440b1e : std ; dec dword ptr [rcx - 0x75] ; jge 0x440b2a ; call rbx
0x0000000000440c61 : std ; dec dword ptr [rcx - 0x75] ; jge 0x440c6d ; call rbx
0x0000000000440dd1 : std ; dec dword ptr [rcx - 0x75] ; jge 0x440ddd ; call rbx
0x00000000004425ef : std ; dec dword ptr [rcx - 0x75] ; jge 0x4425fb ; call rbx
0x0000000000442717 : std ; dec dword ptr [rcx - 0x75] ; jge 0x442723 ; call rbx
0x000000000044285a : std ; dec dword ptr [rcx - 0x75] ; jge 0x442866 ; call rbx
0x000000000044295b : std ; dec dword ptr [rcx - 0x75] ; jge 0x442967 ; call rbx
0x00000000004be232 : std ; inc dword ptr [rax + 0x4a] ; std ; call qword ptr [rax - 0x1f0002b4]
0x00000000004be1a6 : std ; inc dword ptr [rax + 0x69] ; std ; call qword ptr [rax]
0x00000000004be242 : std ; inc dword ptr [rax - 0x2f0002ad] ; push rbp ; std ; jmp qword ptr [rax]
0x000000000047392f : std ; inc dword ptr [rbp - 0x76b48a40] ; ret
0x00000000004be7b2 : std ; inc dword ptr [rdi + rdx*8] ; std ; call rsp
0x00000000004be252 : std ; inc eax ; pop rsp ; std ; call qword ptr [rax]
0x00000000004785de : std ; jbe 0x4785eb ; ret
0x00000000004be1de : std ; jmp qword ptr [rax + 0x20fffd84]
0x00000000004be1e6 : std ; jmp qword ptr [rax + 0x20fffd87]
0x00000000004be1ee : std ; jmp qword ptr [rax + 0x20fffd8a]
0x00000000004be1f6 : std ; jmp qword ptr [rax + 0x20fffd8d]
0x00000000004be1fe : std ; jmp qword ptr [rax + 0x20fffd90]
0x00000000004be206 : std ; jmp qword ptr [rax + 0x20fffd93]
0x00000000004be20e : std ; jmp qword ptr [rax + 0x20fffd96]
0x00000000004be1e2 : std ; jmp qword ptr [rax]
0x00000000004be30e : std ; jmp qword ptr [rbx - 0x1f000239]
0x00000000004c97da : std ; jmp qword ptr [rbx]
0x00000000004c35c2 : std ; jmp qword ptr [rdx]
0x00000000004be1da : std ; jmp rax
0x00000000004be2d2 : std ; jmp rsp
0x00000000004be2b2 : std ; lcall [rax] ; ret 0xfffd
0x00000000004be382 : std ; lcall [rdx - 0x35] ; std ; jmp rsp
0x00000000004be37e : std ; lcall [rdx - 0x35] ; std ; lcall [rdx - 0x35] ; std ; jmp rsp
0x00000000004be30a : std ; ljmp [rbp - 0x39] ; std ; jmp qword ptr [rbx - 0x1f000239]
0x00000000004be7ae : std ; ljmp [rdi + rdx*8 - 3] ; inc dword ptr [rdi + rdx*8] ; std ; call rsp
0x000000000047d9c8 : std ; mov r15, rax ; jmp 0x47d9e2
0x000000000043249b : std ; mov word ptr [rdi - 2], cx ; ret
0x00000000004be24e : std ; push qword ptr [rax + 0x5a] ; std ; inc eax ; pop rsp ; std ; call qword ptr [rax]
0x00000000004be1c6 : std ; push qword ptr [rax] ; js 0x4be1cd ; call qword ptr [rax]
0x00000000004be1ae : std ; push rax ; insb byte ptr [rdi], dx ; std ; call rax
0x00000000004be1ce : std ; push rax ; jnp 0x4be1d5 ; call rax
0x0000000000458e91 : std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000441640 : std ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x00000000004c7712 : sti ; call qword ptr [rax]
0x00000000004c796a : sti ; call rsp
0x00000000004a42a5 : sti ; clc ; call rax
0x000000000046c177 : sti ; dec dword ptr [rax + 0x39] ; ret
0x0000000000474b94 : sti ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000466895 : sti ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000004bf481 : sti ; hlt ; call qword ptr [rax]
0x00000000004bf499 : sti ; hlt ; call qword ptr [rdx]
0x000000000044ed16 : sti ; inc dword ptr [rbx - 0x76be0008] ; ret
0x00000000004c83fa : sti ; jmp qword ptr [rax]
0x00000000004c750a : sti ; jmp qword ptr [rdx]
0x00000000004c739a : sti ; jmp rsi
0x0000000000432878 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004b994a : sti ; ret
0x000000000048f226 : sti ; ret 0xffbf
0x000000000044f8b7 : sti ; test rax, rax ; je 0x44f8c5 ; call rax
0x0000000000440890 : sti ; xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000488a32 : stosb byte ptr [rdi], al ; and al, 0 ; ret
0x00000000004b9e24 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000468868 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x0000000000440704 : stosb byte ptr [rdi], al ; sub byte ptr [rax], al ; test rax, rax ; je 0x440717 ; ret
0x0000000000468869 : stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x00000000004a3ab9 : stosd dword ptr [rdi], eax ; clc ; jmp qword ptr [rax]
0x0000000000474d31 : stosd dword ptr [rdi], eax ; push rdx ; and eax, 0x89485300 ; ret
0x00000000004baf2c : stosd dword ptr [rdi], eax ; ret
0x00000000004bcb28 : stosd dword ptr [rdi], eax ; ret 0x4b
0x0000000000468867 : stosd dword ptr [rdi], eax ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x00000000004bb311 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000469e2c : sub ah, byte ptr [rsi] ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x0000000000400968 : sub al, 0 ; add ebx, esi ; ret
0x0000000000400709 : sub al, 0 ; pop rbp ; pop r12 ; ret
0x000000000040191e : sub al, 0 ; xor eax, eax ; ret
0x00000000004a4090 : sub al, 0x11 ; stc ; call rdx
0x00000000004c16ec : sub al, 0x2e ; add byte ptr [rax], al ; mov al, 0xd3 ; cmc ; call rdx
0x000000000044350a : sub al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042fa03 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041e4cd : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041f8f3 : sub al, byte ptr [rax] ; test rax, rax ; je 0x41f903 ; call rax
0x0000000000481251 : sub al, byte ptr [rbx - 0x5f743] ; call qword ptr [rax]
0x00000000004b5ed1 : sub al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4726
0x00000000004a3ccc : sub bh, 0xf8 ; call qword ptr [rax]
0x0000000000460233 : sub bh, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000045fcda : sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x00000000004642fc : sub bh, bh ; loopne 0x464299 ; mov eax, 0xffffffff ; ret
0x00000000004c7969 : sub bl, bh ; call rsp
0x000000000049e501 : sub bl, dh ; ret
0x000000000049e500 : sub bl, r14b ; ret
0x000000000041107e : sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000046e04c : sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x000000000046ce36 : sub byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000484037 : sub byte ptr [rax + 0x48000000], 0x39 ; ret 0x820f
0x000000000041107f : sub byte ptr [rax + 1], cl ; ret 0x8949
0x0000000000466f30 : sub byte ptr [rax - 0x73], cl ; je 0x466f5f ; call rbx
0x000000000041cebb : sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret 0xfff9
0x000000000041f3b4 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000004059df : sub byte ptr [rax - 0x77], cl ; ret
0x0000000000410dd5 : sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x00000000004631cc : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040d849 : sub byte ptr [rax - 0x7d], cl ; ret
0x00000000004825ac : sub byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000044308d : sub byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000478a91 : sub byte ptr [rax], al ; jne 0x478aa8 ; add rsp, 0x38 ; ret
0x0000000000444afa : sub byte ptr [rax], al ; pop rbx ; ret
0x0000000000446025 : sub byte ptr [rax], al ; ret
0x0000000000444ad4 : sub byte ptr [rax], al ; test eax, eax ; je 0x444ae6 ; ret
0x0000000000440705 : sub byte ptr [rax], al ; test rax, rax ; je 0x440716 ; ret
0x000000000040df2a : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000415160 : sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000444ab3 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000444ab2 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x000000000044d96a : sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x00000000004883c4 : sub byte ptr [rcx], cl ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000041f4cc : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047b42b : sub byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00000000004c0bc8 : sub byte ptr [rsi - 0xb], ah ; jmp qword ptr [rax]
0x000000000047beed : sub cl, al ; call 0xffffffff8a09e818
0x000000000047c844 : sub cl, al ; call 0xffffffff8a09f16f
0x00000000004be2d0 : sub cl, al ; std ; jmp rsp
0x00000000004be2b0 : sub cl, al ; std ; lcall [rax] ; ret 0xfffd
0x000000000047200e : sub cl, byte ptr [rax - 0x7d] ; ret
0x000000000046886a : sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x0000000000414945 : sub cl, ch ; ret 0xfffe
0x000000000047729a : sub dl, dh ; call r11
0x0000000000400d1f : sub dword ptr [rax + rax], eax ; leave ; ret
0x000000000046e059 : sub dword ptr [rax + rcx*2], 0x39 ; ret 0x576
0x0000000000430ac7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430add ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430c17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430c2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430d67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430d7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430eb7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430ecd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431007 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43101d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431157 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43116d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004312a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4312bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004313f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43140d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431547 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43155d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431697 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4316ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004317e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4317fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431937 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43194d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431a87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x431a9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431bd7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x431bed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431d27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x431d3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430a23 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430a1f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000004b5ef9 : sub dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4726
0x0000000000430acd : sub dword ptr [rdi], esp ; jmp r9
0x0000000000402dfb : sub dword ptr [rdx - 0x76b7ffd4], edx ; ret 0x8348
0x000000000041b705 : sub dword ptr [rdx], ecx ; call 0x417955
0x00000000004301e6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x0000000000469f58 : sub dword ptr [rsi], esp ; add byte ptr [rbp - 0x7c], al ; ror byte ptr [rax - 0x75], 5 ; ret
0x000000000041f4a9 : sub eax, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004a42dd : sub eax, 0x2f20fff9 ; stc ; jmp qword ptr [rax]
0x000000000041b5d6 : sub eax, 0x72e8004a ; ret
0x000000000045d7e1 : sub eax, 0x83000000 ; ret
0x000000000041b5a4 : sub eax, 0xa4e8004a ; ret
0x0000000000482fb7 : sub eax, 0xbfffffd7 ; ret
0x000000000043f5dc : sub eax, 1 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000044ddd4 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000043e434 : sub eax, 1 ; ret
0x0000000000478836 : sub eax, dword ptr [0] ; ret
0x0000000000417209 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000417196 : sub eax, dword ptr [rax] ; add dword ptr [rip + 0x2b5405], 1 ; ret
0x0000000000417105 : sub eax, dword ptr [rax] ; ret
0x00000000004186d2 : sub eax, dword ptr [rax] ; test rax, rax ; je 0x4186e2 ; call rax
0x0000000000401bef : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000049a351 : sub eax, dword ptr [rcx + r8*4] ; je 0x49a337 ; ret
0x000000000049a352 : sub eax, dword ptr [rcx + rax*4] ; je 0x49a336 ; ret
0x000000000041793e : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000043ee5a : sub eax, dword ptr [rdx + rcx*4] ; je 0x43ee46 ; ret
0x0000000000416df3 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000415aad : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000466f6b : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x0000000000416529 : sub eax, ecx ; lea eax, [r8 - 1] ; ret
0x000000000047aa2d : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000042324c : sub eax, ecx ; ret
0x0000000000424319 : sub eax, edi ; ret
0x00000000004134ae : sub eax, edx ; ret
0x000000000043e5e7 : sub eax, edx ; vzeroupper ; ret
0x0000000000415c0e : sub eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000413308 : sub eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000417bf9 : sub ebp, dword ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004b9bbe : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004b8655 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000479a15 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000444bbc : sub ecx, eax ; shl ecx, 3 ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x00000000004a42d5 : sub ecx, edi ; jmp qword ptr [rax]
0x00000000004a42d9 : sub edi, ecx ; jmp qword ptr [rax]
0x0000000000416e20 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000416e15 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000426974 : sub edx, eax ; jbe 0x4269b7 ; add rax, rdi ; ret
0x0000000000426984 : sub edx, eax ; jbe 0x4269b9 ; lea rax, [rdi + rax + 0x10] ; ret
0x0000000000426994 : sub edx, eax ; jbe 0x4269b9 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000004269a4 : sub edx, eax ; jbe 0x4269b9 ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000410eb2 : sub edx, esi ; mov rdi, r15 ; call rax
0x0000000000412ac4 : sub edx, esi ; mov rdi, rbx ; call rax
0x00000000004a14b1 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000469dce : sub esp, dword ptr [rsi] ; add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x469de7
0x0000000000416528 : sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x000000000043e433 : sub rax, 1 ; ret
0x0000000000478835 : sub rax, qword ptr [0] ; ret
0x000000000041793d : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000478834 : sub rax, qword ptr fs:[0] ; ret
0x0000000000466f6a : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000424318 : sub rax, rdi ; ret
0x00000000004134ad : sub rax, rdx ; ret
0x000000000043e5e6 : sub rax, rdx ; vzeroupper ; ret
0x0000000000426973 : sub rdx, rax ; jbe 0x4269b8 ; add rax, rdi ; ret
0x0000000000410eb1 : sub rdx, rsi ; mov rdi, r15 ; call rax
0x0000000000412ac3 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000004a14b0 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000443187 : syscall ; pop rdx ; pop rsi ; ret
0x000000000043f365 : syscall ; ret
0x000000000040b4cd : sysenter
0x00000000004441af : test ah, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000046dc67 : test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000415f29 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000049a543 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000049c813 : test al, 0 ; add byte ptr [rax], al ; ret
0x000000000041e39d : test al, 0x6c ; add byte ptr [rbp - 0x42], dh ; ret
0x000000000044ed14 : test al, 0x70 ; sti ; inc dword ptr [rbx - 0x76be0008] ; ret
0x00000000004c7c18 : test al, 0x89 ; jmp qword ptr [rsi]
0x00000000004b8f17 : test al, 0x97 ; xchg eax, esp ; ret
0x000000000047e03d : test al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004c4778 : test al, 0xdd ; clc ; call qword ptr [rbx]
0x0000000000442d99 : test al, 0xf ; xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000004a3ab1 : test al, 0xf8 ; jmp rax
0x000000000043fe56 : test al, 2 ; cmove eax, edx ; ret
0x0000000000410ff3 : test al, ah ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000042ee1a : test al, al ; jne 0x42ee08 ; xor eax, eax ; sub eax, ecx ; ret
0x0000000000442858 : test al, al ; std ; dec dword ptr [rcx - 0x75] ; jge 0x442868 ; call rbx
0x000000000041af50 : test al, dh ; add eax, 0xf6410000 ; ret 0xf01
0x0000000000421bd6 : test ax, 1 ; ret
0x0000000000446f8e : test bh, dh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004199f4 : test bh, dl ; add al, 0 ; add dh, dh ; ret
0x000000000046b563 : test bl, bl ; je 0x46b556 ; ret
0x000000000045c113 : test bl, dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000475555 : test byte ptr [r8 - 0x77], r9b ; ret
0x000000000047c953 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x000000000047bf29 : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004c7144 : test byte ptr [rax - 0x1e480000], cl ; cli ; jmp qword ptr [rdx]
0x000000000046758e : test byte ptr [rax - 0x73], 0x54 ; and al, 0x48 ; mov rdi, r12 ; call rbx
0x0000000000440f01 : test byte ptr [rax - 0x75], 0x7d ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x0000000000441644 : test byte ptr [rax - 0x77], 0xc3 ; call rax
0x0000000000475556 : test byte ptr [rax - 0x77], cl ; ret
0x0000000000470051 : test byte ptr [rax], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043c77a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000043bbba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000041712a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000004126fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000443698 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000004008ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004170ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043ecba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000041246a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043c5ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000046661c : test byte ptr [rax], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000419b0b : test byte ptr [rax], dh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000466634 : test byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000047ad56 : test byte ptr [rbp + 0x48000000], dh ; mov eax, edx ; pop rbx ; ret
0x0000000000417e06 : test byte ptr [rbp - 0xa000000], ah ; ret
0x000000000047b14a : test byte ptr [rbx + 0x2518733d], 0 ; jmp rax
0x000000000041e9e7 : test byte ptr [rbx - 0xa000000], cl ; ret
0x0000000000449d8c : test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x00000000004455b8 : test byte ptr [rbx], dh ; add eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x000000000041802e : test byte ptr [rbx], dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x0000000000450982 : test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, ebp ; call r15
0x000000000049cd82 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x0000000000467413 : test byte ptr [rcx + rcx*4 - 0x19], 0x4d ; mov ecx, edi ; call rbx
0x0000000000457efa : test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x0000000000440892 : test byte ptr [rcx - 0x77], 0xd4 ; mov rbp, rax ; call rax
0x00000000004235c6 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004c809d : test byte ptr [rcx], al ; ret
0x0000000000418897 : test byte ptr [rdi - 0xa000000], cl ; ret
0x000000000049ff3e : test byte ptr [rdi], 0x84 ; ret
0x0000000000440d0a : test byte ptr [rdi], 0x84 ; ret 0
0x0000000000471aee : test byte ptr [rdi], 0x85 ; ret
0x000000000047c007 : test byte ptr [rdi], 0x94 ; ret 0xd021
0x0000000000486fad : test byte ptr [rdi], 0x9f ; ret 0xd629
0x000000000046625c : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000400603 : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000466244 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000411df4 : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000473c4e : test byte ptr [rip - 0x428], al ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x0000000000465afd : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x0000000000405e25 : test byte ptr [rsi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004241fd : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000044eefd : test byte ptr [rsi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043ecd2 : test ch, 0xf0 ; je 0x43eccb ; movzx eax, cl ; pop rbx ; ret
0x00000000004be1e1 : test ch, bh ; jmp qword ptr [rax]
0x000000000041e6df : test ch, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044668b : test cl, bh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041b021 : test cl, bh ; add eax, 0xf6410000 ; ret 0xf01
0x000000000043e0bf : test cl, cl ; jne 0x43e0b4 ; ret
0x000000000043e16f : test cl, cl ; jne 0x43e164 ; ret
0x000000000043e42f : test cl, cl ; jne 0x43e428 ; sub rax, 1 ; ret
0x0000000000421056 : test cl, dl ; add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x000000000043ecfa : test dh, 0xf0 ; je 0x43ecc9 ; movzx eax, dl ; pop rbx ; ret
0x000000000043ecfa : test dh, 0xf0 ; je 0x43eccb ; movzx eax, dl ; pop rbx ; ret
0x0000000000468c4d : test dh, cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000447505 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000044e596 : test dh, dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043c604 : test dl, 0x40 ; jne 0x43c5c9 ; lea rax, [rdi + 7] ; ret
0x00000000004a3b64 : test dl, 0xf8 ; push qword ptr [rsi - 0x3d] ; clc ; push rsi ; ret
0x000000000043c632 : test dl, 4 ; jne 0x43c5c9 ; lea rax, [rdi + 3] ; ret
0x000000000041afa5 : test dl, al ; add eax, 0xf6410000 ; ret 0xf01
0x000000000041da09 : test dl, cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000040df72 : test dl, dl ; jne 0x40df54 ; ret
0x000000000043e2df : test dl, dl ; jne 0x43e2d8 ; lea rax, [rcx - 1] ; ret
0x0000000000427539 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x0000000000460fcb : test dword ptr [rax - 0x16000006], ebp ; ret 0xffef
0x000000000047e104 : test dword ptr [rax - 0x3f], 0x894803e0 ; ret 0x8948
0x00000000004a0f12 : test dword ptr [rax - 0x77], 0xe808244c ; ret
0x00000000004c6eb5 : test dword ptr [rax], eax ; add byte ptr [rax - 0x2a], bl ; cli ; jmp rdi
0x000000000045cb59 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000049b58b : test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000049b58a : test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000042ceaf : test dword ptr [rbp - 0xc000004], esp ; ret
0x000000000042fce7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000430136 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047ef79 : test dword ptr [rbx - 0x16000002], esi ; ret
0x0000000000418c30 : test dword ptr [rbx], ecx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000040f1bb : test dword ptr [rbx], esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004268ea : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x0000000000427250 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x00000000004109a6 : test dword ptr [rcx + 0xf], 0x8948c046 ; ret 0x8949
0x000000000042fcbd : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042fbcd : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042fadd : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000450c4e : test dword ptr [rcx - 0x3f], 0x834904eb ; ret
0x000000000041bd0a : test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000047dfea : test dword ptr [rcx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000042743a : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x000000000045fc00 : test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x000000000047d1f3 : test dword ptr [rdi + rdi*8 - 1], ecx ; inc dword ptr [rcx - 0x77] ; ret
0x000000000045b74c : test dword ptr [rdi - 0x7c00000c], esi ; ret
0x000000000042ccc5 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x0000000000420184 : test dword ptr [rdi], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042fa02 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000446f8f : test dword ptr [rdx], 0x83480000 ; ret
0x00000000004416ad : test dword ptr [rdx], 0xf6310000 ; mov rdi, r14 ; call rbx
0x000000000043de42 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cfae : test dword ptr [rsi - 0xc000005], esp ; ret
0x000000000042ff08 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000004c9225 : test eax, 0x38780000 ; std ; call rcx
0x0000000000400708 : test eax, 0x415d002c ; pop rsp ; ret
0x00000000004bac00 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000433676 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004a3ab5 : test eax, 0xab00fff8 ; clc ; jmp qword ptr [rax]
0x000000000044303b : test eax, eax ; cmove eax, edx ; ret
0x0000000000400958 : test eax, eax ; je 0x40096c ; mov edi, 0x4be8c0 ; call rax
0x00000000004009a6 : test eax, eax ; je 0x40099c ; call rax
0x00000000004030a2 : test eax, eax ; je 0x4030b6 ; mov edi, 0x6cc060 ; call rax
0x00000000004032f1 : test eax, eax ; je 0x40330f ; mov edi, 0x6cbfe0 ; call rax
0x00000000004034e5 : test eax, eax ; je 0x403503 ; mov edi, 0x6cbfe0 ; call rax
0x0000000000403900 : test eax, eax ; je 0x403914 ; mov edi, 0x6cc0a0 ; call rax
0x0000000000403a48 : test eax, eax ; je 0x403a5c ; mov edi, 0x6cc0a0 ; call rax
0x00000000004185f8 : test eax, eax ; je 0x418603 ; pop rbx ; ret
0x00000000004186d5 : test eax, eax ; je 0x4186df ; call rax
0x000000000041f8f6 : test eax, eax ; je 0x41f900 ; call rax
0x0000000000423fd3 : test eax, eax ; je 0x423fdf ; xchg eax, edx ; sub eax, edx ; ret
0x000000000043ef46 : test eax, eax ; je 0x43ef5a ; mov edi, 0x6cc720 ; call rax
0x000000000043ef5e : test eax, eax ; je 0x43ef72 ; mov edi, 0x6cc720 ; call rax
0x0000000000440708 : test eax, eax ; je 0x440713 ; ret
0x000000000044494f : test eax, eax ; je 0x444963 ; mov edi, 0x6cb140 ; call rax
0x0000000000444ad6 : test eax, eax ; je 0x444ae4 ; ret
0x000000000044e30e : test eax, eax ; je 0x44e322 ; mov edi, 0x6cc720 ; call rax
0x000000000044e33d : test eax, eax ; je 0x44e359 ; mov edi, 0x6cc720 ; call rax
0x000000000044e43e : test eax, eax ; je 0x44e448 ; call rax
0x000000000044e49d : test eax, eax ; je 0x44e4b1 ; mov edi, 0x6cc720 ; call rax
0x000000000044e616 : test eax, eax ; je 0x44e631 ; mov edi, 0x6cc720 ; call rax
0x000000000044e8f6 : test eax, eax ; je 0x44e90a ; mov edi, 0x6cc720 ; call rax
0x000000000044e9fa : test eax, eax ; je 0x44ea04 ; call rax
0x000000000044f8b9 : test eax, eax ; je 0x44f8c3 ; call rax
0x0000000000471152 : test eax, eax ; je 0x471166 ; mov edi, 0x6cb100 ; call rax
0x0000000000475146 : test eax, eax ; je 0x47515a ; mov edi, 0x6cb140 ; call rax
0x000000000047516e : test eax, eax ; je 0x475182 ; mov edi, 0x6cb140 ; call rax
0x00000000004751e4 : test eax, eax ; je 0x4751f8 ; mov edi, 0x6cb140 ; call rax
0x0000000000476cb1 : test eax, eax ; je 0x476d29 ; mov edi, 0x6cb140 ; call rax
0x000000000047866c : test eax, eax ; je 0x47863b ; mov edi, 0x6cb140 ; call rax
0x00000000004787ca : test eax, eax ; je 0x4787de ; mov edi, 0x6cb140 ; call rax
0x000000000047b510 : test eax, eax ; je 0x47b528 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047ebe6 : test eax, eax ; je 0x47ebfa ; mov edi, 0x6cb140 ; call rax
0x000000000047ec12 : test eax, eax ; je 0x47ec26 ; mov edi, 0x6cb140 ; call rax
0x0000000000488390 : test eax, eax ; je 0x4883a4 ; mov edi, 0x6cb140 ; call rax
0x0000000000488438 : test eax, eax ; je 0x48844c ; mov edi, 0x6cb140 ; call rax
0x000000000049edb8 : test eax, eax ; je 0x49edcc ; mov edi, 0x6cb100 ; call rax
0x000000000049ee79 : test eax, eax ; je 0x49ee8d ; mov edi, 0x6cb100 ; call rax
0x00000000004a0b1c : test eax, eax ; je 0x4a0b2b ; call rax
0x0000000000416dd4 : test eax, eax ; jne 0x416dcd ; ret
0x0000000000426927 : test eax, eax ; jne 0x426987 ; xor rax, rax ; ret
0x0000000000443160 : test eax, eax ; jne 0x44315b ; pop rdx ; pop r10 ; ret
0x000000000047442e : test eax, eax ; jne 0x474405 ; ret
0x000000000049e517 : test eax, eax ; jne 0x49e525 ; ret
0x000000000049e532 : test eax, eax ; jne 0x49e545 ; ret
0x000000000049e752 : test eax, eax ; jne 0x49e765 ; ret
0x0000000000471720 : test eax, eax ; js 0x47172d ; pop rbx ; ret
0x000000000047ab6b : test eax, eax ; js 0x47ab7d ; ret
0x000000000046b552 : test eax, eax ; mov rax, r9 ; jne 0x46b5b0 ; ret
0x00000000004a39a9 : test eax, edi ; call qword ptr [rax - 0x1f00077a]
0x0000000000426850 : test ebx, ebp ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000004465fa : test ebx, ebx ; jne 0x4465d5 ; jmp 0x4465c7
0x000000000047ae8e : test ebx, ebx ; jne 0x47aea8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049ef40 : test ebx, ebx ; mov rdi, rbx ; jne 0x49ef38 ; pop rbx ; ret
0x000000000041afaf : test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000043c5f2 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000004672d9 : test ecx, ecx ; jne 0x467298 ; mov rax, rdx ; ret
0x000000000046b5a1 : test ecx, ecx ; jne 0x46b557 ; xor eax, eax ; ret
0x000000000041ee94 : test edi, ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000421b80 : test edi, edi ; je 0x421b99 ; mov eax, 0x16 ; ret
0x000000000042096c : test edi, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004241b2 : test edx, edx ; je 0x4241c0 ; bsf eax, edx ; ret
0x00000000004241b2 : test edx, edx ; je 0x4241c1 ; bsf eax, edx ; ret
0x000000000042425b : test edx, edx ; je 0x424277 ; bsf rax, rdx ; ret
0x000000000042425b : test edx, edx ; je 0x424278 ; bsf rax, rdx ; ret
0x0000000000465b6a : test edx, edx ; je 0x465b97 ; bsf rax, rdx ; ret
0x0000000000465b6a : test edx, edx ; je 0x465b98 ; bsf rax, rdx ; ret
0x0000000000413d03 : test edx, edx ; jne 0x413d14 ; ret
0x000000000041547f : test edx, edx ; jne 0x415475 ; ret
0x0000000000463e8f : test edx, edx ; jne 0x463e85 ; ret
0x000000000046731a : test edx, edx ; jne 0x467315 ; ret
0x00000000004007b5 : test edx, edx ; jns 0x4006ad ; jmp 0x40078a
0x000000000040f67b : test edx, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041da13 : test edx, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000043c5e5 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000465a61 : test esi, esi ; jne 0x465a70 ; xor rax, rax ; ret
0x000000000043c5ff : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000046b562 : test r11b, r11b ; je 0x46b557 ; ret
0x000000000047442d : test r8, r8 ; jne 0x474406 ; ret
0x0000000000423fd2 : test r8d, r8d ; je 0x423fe0 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000046b551 : test r8d, r8d ; mov rax, r9 ; jne 0x46b5b1 ; ret
0x00000000004672d8 : test r9d, r9d ; jne 0x467299 ; mov rax, rdx ; ret
0x00000000004009a5 : test rax, rax ; je 0x40099d ; call rax
0x00000000004185f7 : test rax, rax ; je 0x418604 ; pop rbx ; ret
0x00000000004186d4 : test rax, rax ; je 0x4186e0 ; call rax
0x000000000041f8f5 : test rax, rax ; je 0x41f901 ; call rax
0x0000000000440707 : test rax, rax ; je 0x440714 ; ret
0x000000000044e43d : test rax, rax ; je 0x44e449 ; call rax
0x000000000044e9f9 : test rax, rax ; je 0x44ea05 ; call rax
0x000000000044f8b8 : test rax, rax ; je 0x44f8c4 ; call rax
0x000000000047b50f : test rax, rax ; je 0x47b529 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a0b1b : test rax, rax ; je 0x4a0b2c ; call rax
0x0000000000416dd3 : test rax, rax ; jne 0x416dce ; ret
0x00000000004465f9 : test rbx, rbx ; jne 0x4465d6 ; jmp 0x4465c8
0x000000000047ae8d : test rbx, rbx ; jne 0x47aea9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049ef3f : test rbx, rbx ; mov rdi, rbx ; jne 0x49ef39 ; pop rbx ; ret
0x000000000042425a : test rdx, rdx ; je 0x424278 ; bsf rax, rdx ; ret
0x000000000042425a : test rdx, rdx ; je 0x424279 ; bsf rax, rdx ; ret
0x0000000000465b69 : test rdx, rdx ; je 0x465b98 ; bsf rax, rdx ; ret
0x0000000000465b69 : test rdx, rdx ; je 0x465b99 ; bsf rax, rdx ; ret
0x0000000000413d02 : test rdx, rdx ; jne 0x413d15 ; ret
0x000000000041547e : test rdx, rdx ; jne 0x415476 ; ret
0x0000000000463e8e : test rdx, rdx ; jne 0x463e86 ; ret
0x0000000000465a60 : test rsi, rsi ; jne 0x465a71 ; xor rax, rax ; ret
0x0000000000413f15 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000043613a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000043345a : vmovdqu xmmword ptr [rax + 0x70], xmm12 ; ret
0x0000000000433390 : vmovdqu xmmword ptr [rcx - 0x10], xmm12 ; ret
0x0000000000433159 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000043e540 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043329f : vmovdqu xmmword ptr [rdx - 0x10], xmm12 ; mov rax, r8 ; ret
0x00000000004330c3 : vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000433126 : vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000043e4ea : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000436126 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000043610d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x000000000043e6bb : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043e6bf : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043e555 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000043e559 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000436443 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00000000004362dc : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000004360de : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x00000000004360a2 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000004365a5 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000043e878 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x000000000043e7db : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x000000000043e67a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000042b5d1 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x0000000000405985 : vpsubsb xmm14, xmm15, xmm4 ; out 1, eax ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004059ed : vpsubsb xmm9, xmm15, xmmword ptr [rdi + 0x29480001] ; ret
0x0000000000400d79 : vunpckhps xmm1, xmm15, xmmword ptr [rdx] ; jmp rax
0x000000000043e5e9 : vzeroupper ; ret
0x00000000004c83f5 : wait ; add byte ptr [rax], al ; sbb bh, bh ; sti ; jmp qword ptr [rax]
0x00000000004715bf : wait ; and eax, 0x48c03100 ; add esp, 8 ; ret
0x00000000004a3bc9 : xbegin 0xfffffffff91297d4 ; jmp rax
0x0000000000423ddf : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a87f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004239cf : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x00000000004234db : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a39ad : xchg al, bh ; jmp rax
0x0000000000423ceb : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042c4cc : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000042bcec : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000042c0dc : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b8fc : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497cbd : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000442d37 : xchg bl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x00000000004967c1 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004979c1 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004970c1 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004973c1 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496ab9 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049a532 : xchg byte ptr [rax + 0x48000000], bh ; add esp, 8 ; ret
0x000000000049a542 : xchg byte ptr [rax + 0x48000000], ch ; add esp, 8 ; ret
0x000000000049a509 : xchg byte ptr [rax + 0x48000000], dh ; add esp, 8 ; ret
0x000000000042b3df : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042abbf : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000042375f : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a39f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000423a9f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000423dbb : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c6fad : xchg byte ptr [rax], al ; add byte ptr [rax - 0x26], al ; cli ; call rsi
0x000000000042ba9b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423e8b : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042aeff : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a6df : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429ebf : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000042b09f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000423c3f : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042342f : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000049be6c : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x000000000042382f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000042bf8c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b7ac : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042c8bc : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049b282 : xchg byte ptr [rdx + 1], dh ; add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000423d0f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000004234ff : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000042a1ff : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004235a1 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004238ff : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000496d66 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a335 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b035 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497c66 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497366 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497066 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000042ab55 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042be8d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a3e34 : xchg byte ptr [rsi], bl ; stc ; call qword ptr [rsi]
0x0000000000496a5e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042c7bd : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423b6f : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004a3b78 : xchg ch, al ; clc ; call qword ptr [rsi]
0x00000000004be1e5 : xchg ch, bh ; jmp qword ptr [rax + 0x20fffd87]
0x0000000000495aef : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049590f : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004962e7 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495207 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496107 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b375 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a675 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000042a195 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ae95 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000042bfdd : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b7fd : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004235c5 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040191d : xchg dword ptr [rax + rax], ebp ; xor eax, eax ; ret
0x0000000000445f6c : xchg dword ptr [rax - 0x39], ecx ; ret
0x0000000000471116 : xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000445b06 : xchg dword ptr [rbp + rcx*4 + 0x24], ecx ; ret
0x0000000000476d11 : xchg dword ptr [rbx + rax], edx ; add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x000000000045e3cd : xchg dword ptr [rbx + rcx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000484d85 : xchg dword ptr [rbx - 0x76fffffd], eax ; ret 0x348
0x000000000044f005 : xchg dword ptr [rbx - 0x7c000005], ecx ; ret 0x8901
0x00000000004b88cc : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x0000000000482dbb : xchg dword ptr [rcx - 0x7d000000], ebx ; ret 0x8308
0x000000000044a112 : xchg dword ptr [rcx], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000487cf3 : xchg dword ptr [rdi - 0x77000000], ebp ; ret 0x348
0x000000000044315e : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x44315d ; pop rdx ; pop r10 ; ret
0x000000000046e878 : xchg dword ptr [rip - 0x76fffffd], edx ; ret 0xe8c0
0x0000000000485b09 : xchg dword ptr [rip - 0x76ffffff], eax ; ret 0x348
0x00000000004b8a6b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000494e48 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x000000000044853b : xchg eax, ebp ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000464cb6 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000411da2 : xchg eax, ebp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x0000000000453552 : xchg eax, ebp ; cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xe920
0x000000000043f6d7 : xchg eax, ebp ; mov eax, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x6b8
0x000000000041b7ca : xchg eax, ebp ; ret
0x000000000047c0f1 : xchg eax, ebp ; ret 0x3840
0x0000000000463127 : xchg eax, ebp ; ret 0x5389
0x000000000041cb69 : xchg eax, ebp ; ret 0x8348
0x000000000046742e : xchg eax, ebp ; ret 0x8b4c
0x000000000048ab35 : xchg eax, ebp ; ret 0x941
0x0000000000403d07 : xchg eax, ebp ; ret 0x953d
0x000000000046811b : xchg eax, ebp ; ret 0xb60f
0x00000000004675d1 : xchg eax, ebp ; ret 0xb8e9
0x000000000046bb8f : xchg eax, ebp ; ret 0xc084
0x000000000045b5d5 : xchg eax, ebp ; ret 0xc283
0x00000000004438f8 : xchg eax, ebp ; ret 0xc985
0x000000000048944a : xchg eax, ebp ; ret 0xd348
0x000000000046748c : xchg eax, ebp ; ret 0xd721
0x00000000004100e4 : xchg eax, ebp ; ret 0xdaf7
0x0000000000444b11 : xchg eax, ebp ; ret 0xe1eb
0x00000000004670c0 : xchg eax, ebp ; ret 0xe883
0x000000000049bcfd : xchg eax, ebp ; ret 0xf45
0x000000000046808f : xchg eax, ebp ; ret 0xf748
0x000000000041727d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000485f19 : xchg eax, ebp ; sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x00000000004be20d : xchg eax, ebp ; std ; jmp qword ptr [rax + 0x20fffd96]
0x0000000000415ad2 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x000000000046a5c0 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c7c15 : xchg eax, ebx ; add byte ptr [rax], al ; test al, 0x89 ; jmp qword ptr [rsi]
0x000000000042ee50 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000043ba7c : xchg eax, ebx ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000004305d2 : xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004657b9 : xchg eax, ebx ; ret
0x0000000000450440 : xchg eax, ebx ; ret 0x3948
0x0000000000450f9e : xchg eax, ebx ; ret 0x3949
0x0000000000411b7f : xchg eax, ebx ; ret 0x840
0x0000000000451473 : xchg eax, ebx ; ret 0x8548
0x0000000000464724 : xchg eax, ebx ; ret 0xd108
0x00000000004be209 : xchg eax, ebx ; std ; jmp qword ptr [rax]
0x0000000000421967 : xchg eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x00000000004c8cd1 : xchg eax, ecx ; cld ; call qword ptr [rax]
0x000000000042b481 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000004a3b28 : xchg eax, ecx ; ret
0x00000000004a3b20 : xchg eax, ecx ; ret 0xfff8
0x00000000004a3b18 : xchg eax, ecx ; sar al, 0xff ; xchg eax, ecx ; sar eax, 0xff ; xchg eax, ecx ; ret 0xfff8
0x000000000044284b : xchg eax, ecx ; sar ch, 0xff ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004a3b1c : xchg eax, ecx ; sar eax, 0xff ; xchg eax, ecx ; ret 0xfff8
0x0000000000429baf : xchg eax, ecx ; sub eax, edx ; ret
0x000000000047444d : xchg eax, edi ; mov dword ptr [rip + 0x6894800], esp ; ret
0x0000000000409c85 : xchg eax, edi ; ret
0x0000000000442d9b : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000004c7621 : xchg eax, edi ; std ; call rcx
0x00000000004b8f18 : xchg eax, edi ; xchg eax, esp ; ret
0x00000000004a40cc : xchg eax, edx ; adc ecx, edi ; jmp qword ptr [rdx]
0x0000000000485f2f : xchg eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x000000000041812a : xchg eax, edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004ba7dd : xchg eax, edx ; jae 0x4ba7ba ; push rsi ; pop rdx ; je 0x4ba7af ; ret 0xacfc
0x000000000046e74b : xchg eax, edx ; ret 0x8348
0x0000000000475626 : xchg eax, edx ; ret 0xb60f
0x0000000000442d9e : xchg eax, edx ; ret 0xd029
0x00000000004b88cf : xchg eax, edx ; ret 0xf869
0x000000000044264a : xchg eax, edx ; ret 0xfffd
0x00000000004be205 : xchg eax, edx ; std ; jmp qword ptr [rax + 0x20fffd93]
0x0000000000423fd7 : xchg eax, edx ; sub eax, edx ; ret
0x000000000042f150 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000469c86 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000434e87 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004657b4 : xchg eax, esi ; and al, 0x4a ; add al, ch ; xchg eax, ebx ; ret
0x00000000004a3e18 : xchg eax, esi ; and ecx, edi ; jmp qword ptr [rsi]
0x000000000042f20d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042f16b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004bcb20 : xchg eax, esi ; ret 0x4b
0x00000000004bb16c : xchg eax, esi ; ret 0xcd11
0x000000000042f1bc : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004be211 : xchg eax, esi ; std ; jmp qword ptr [rax]
0x00000000004bc898 : xchg eax, esp ; mov ebp, 0x4b ; add byte ptr [rax], al ; clc ; ret
0x00000000004bb37f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4bb310 ; ret 0x48f
0x0000000000458e94 : xchg eax, esp ; ret
0x000000000046dc57 : xchg eax, esp ; ret 0x1f0f
0x000000000047c73e : xchg eax, esp ; ret 0x3840
0x000000000047be7c : xchg eax, esp ; ret 0x5438
0x000000000041bcf9 : xchg eax, esp ; ret 0x7ae9
0x0000000000461d65 : xchg eax, esp ; ret 0x7f3c
0x000000000043e9bf : xchg eax, esp ; ret 0x8341
0x000000000044a6c5 : xchg eax, esp ; ret 0x8348
0x000000000043ea5f : xchg eax, esp ; ret 0x8444
0x000000000046f841 : xchg eax, esp ; ret 0x8545
0x000000000047b1ce : xchg eax, esp ; ret 0x950f
0x0000000000455ef8 : xchg eax, esp ; ret 0x9522
0x0000000000402c48 : xchg eax, esp ; ret 0xb60f
0x000000000046bfec : xchg eax, esp ; ret 0xc283
0x000000000047c009 : xchg eax, esp ; ret 0xd021
0x0000000000485e36 : xchg eax, esp ; ret 0xd309
0x000000000047bdcf : xchg eax, esp ; ret 0xda38
0x00000000004104fc : xchg eax, esp ; ret 0xdaf7
0x000000000049bc9c : xchg eax, esp ; ret 0xf45
0x0000000000459fb8 : xchg eax, esp ; ret 0xfa80
0x000000000043e9e2 : xchg eax, esp ; ret 0xfe83
0x000000000046b0ff : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00000000004120c1 : xchg eax, r8d ; jmp 0x411fcd
0x00000000004be1e9 : xchg ebp, edi ; jmp qword ptr [rax]
0x00000000004196a4 : xchg edi, esp ; add al, 0 ; add dh, dh ; ret
0x000000000043f53f : xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000411da1 : xchg rax, rbp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00000000004199f5 : xlatb ; add al, 0 ; add dh, dh ; ret
0x000000000046a245 : xlatb ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b1939 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004304ac : xlatb ; add r9, r11 ; jmp r9
0x000000000043f2c1 : xlatb ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004c8ca1 : xlatb ; cld ; call qword ptr [rax]
0x000000000046b1df : xlatb ; ja 0x46b20c ; ret
0x00000000004b9943 : xlatb ; jo 0x4b99bf ; mov ebp, 0xfb67d10d ; ret
0x0000000000452602 : xlatb ; mov byte ptr [rsi], al ; jne 0x4525e8 ; mov rax, rsi ; ret
0x0000000000421d29 : xlatb ; ret
0x00000000004bade6 : xlatb ; ret 0x4e27
0x0000000000465e47 : xlatb ; ret 0x94c
0x000000000042674f : xlatb ; ret 0xc085
0x0000000000421d20 : xlatb ; ret 0xc148
0x00000000004241d4 : xlatb ; ret 0xf66
0x000000000042d681 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000043c5a6 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004231e6 : xlatb ; sal bh, 1 ; ret 0x8000
0x00000000004230a6 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000422f66 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000422e26 : xlatb ; sal bh, 1 ; ret 0xf000
0x0000000000422ce6 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000422ba6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000422a66 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000422926 : xlatb ; sal bh, 1 ; ret 0xff00
0x00000000004227e6 : xlatb ; sal bh, 1 ; ret 0xff80
0x00000000004226a6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000422566 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000422426 : xlatb ; sal bh, 1 ; ret 0xfff0
0x00000000004222e6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x00000000004221a6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000422066 : xlatb ; sal bh, 1 ; ret 0xfffe
0x000000000043c5a2 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000465de5 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000465df6 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004be7b5 : xlatb ; std ; call rsp
0x00000000004be7b1 : xlatb ; std ; inc dword ptr [rdi + rdx*8] ; std ; call rsp
0x0000000000476c41 : xor ah, byte ptr [rsi + 0x25] ; add byte ptr [rax + 0x75], al ; cmp bl, dh ; ret
0x00000000004b88ca : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000004c06f4 : xor al, 0x1e ; add byte ptr [rax], al ; clc ; push rsi ; cmc ; call qword ptr [rcx]
0x00000000004c1ff4 : xor al, 0x37 ; add byte ptr [rax], al ; call 0x174c1653
0x00000000004c20f4 : xor al, 0x38 ; add byte ptr [rax], al ; call 0x114c1797
0x00000000004c36f4 : xor al, 0x4e ; add byte ptr [rax], al ; or byte ptr [rsi], bh ; clc ; call qword ptr [rax]
0x000000000040590d : xor al, 0x89 ; ret 0x5525
0x00000000004c83f4 : xor al, 0x9b ; add byte ptr [rax], al ; sbb bh, bh ; sti ; jmp qword ptr [rax]
0x0000000000462587 : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004b9aaa : xor al, 0xd8 ; ret
0x00000000004c1b5d : xor al, byte ptr [rax] ; add al, dh ; cmc ; cmc ; call qword ptr [rdx]
0x00000000004a3c7c : xor al, ch ; clc ; call qword ptr [rax]
0x000000000046c173 : xor al, ch ; ja 0x46c12e ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000004269ac : xor bl, al ; nop ; xor rax, rax ; ret
0x000000000042686d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x000000000049ecf4 : xor byte ptr [rax + 0x39], cl ; ret
0x0000000000421c31 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x0000000000467f6d : xor byte ptr [rax - 0x39], cl ; ret
0x000000000044a4ab : xor byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x00000000004240df : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000464df2 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000004be1c8 : xor byte ptr [rax - 3], bh ; call qword ptr [rax]
0x000000000041154d : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040ee02 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000040edba : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000043ed9c : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000464d3a : xor byte ptr [rax], al ; je 0x464d44 ; ret
0x0000000000416190 : xor byte ptr [rbp + 0xd], 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000403943 : xor byte ptr [rbp - 0x7b], cl ; dec dword ptr [rax - 0x77] ; ret
0x000000000049ff3b : xor byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x000000000049e84e : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004c13cf : xor byte ptr [rbx + 0xaea0206], al ; ret
0x00000000004578f6 : xor byte ptr [rbx + rcx*2], 0 ; jmp rax
0x000000000042749b : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x00000000004164de : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x00000000004c0e00 : xor byte ptr [rbx - 0xb], ch ; call qword ptr [rdx]
0x0000000000444709 : xor byte ptr [rcx + 0x287fb005], cl ; add cl, ch ; ret
0x0000000000421248 : xor byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a39b4 : xor byte ptr [rcx - 0x757f0008], cl ; clc ; call rax
0x0000000000458ec7 : xor byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000041154e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004101d5 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000463f50 : xor byte ptr [rdi], cl ; ret 0x4389
0x0000000000458e92 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004c2477 : xor byte ptr [rdx], al ; int 0xa
0x00000000004c1cb7 : xor byte ptr [rdx], al ; ret
0x000000000042eeff : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000465dac : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042686e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000040e48a : xor byte ptr [rsi - 0x73], cl ; cmp al, 0x33 ; call rax
0x00000000004c35c0 : xor ch, cl ; std ; jmp qword ptr [rdx]
0x000000000046642b : xor cl, byte ptr [rax + 0x39] ; ret
0x0000000000473546 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000047d98f : xor cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x00000000004557b6 : xor cl, byte ptr [rbx] ; jmp rax
0x00000000004417d2 : xor cl, byte ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000004a3c60 : xor dl, ch ; clc ; jmp qword ptr [rax]
0x000000000047726e : xor dl, dh ; jmp r11
0x0000000000477380 : xor dl, dh ; ret
0x0000000000421585 : xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000045a81d : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0x47e9
0x000000000041e77a : xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x0000000000441c73 : xor dword ptr [rsi], eax ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000469756 : xor dword ptr [rsi], esp ; add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbf0920b0
0x000000000049e5c9 : xor eax, 0x22e782 ; mov qword ptr [rsi + 0x28], rax ; ret
0x000000000049e471 : xor eax, 0x22e8da ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000004a42ed : xor eax, 0x3720fff9 ; stc ; jmp qword ptr [rax]
0x000000000048e979 : xor eax, 0x40b9 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c1e7d : xor eax, 0x42000000 ; idiv bh ; ret
0x000000000043fddb : xor eax, 0x4e ; add byte ptr [rax], al ; ret
0x000000000040edff : xor eax, dword ptr [0x30] ; call rax
0x000000000049d2bd : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000478b37 : xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000478c0f : xor eax, eax ; add rsp, 0x68 ; ret
0x0000000000474c5a : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000452519 : xor eax, eax ; add rsp, 8 ; ret
0x00000000004655d7 : xor eax, eax ; call rbx
0x000000000046b1db : xor eax, eax ; cmp rdi, rdx ; ja 0x46b210 ; ret
0x0000000000443137 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x0000000000443335 : xor eax, eax ; leave ; ret
0x0000000000463519 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004411ab : xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000004432af : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000041f4cd : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b918 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000040f00d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042416c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000412d0c : xor eax, eax ; pop rbx ; ret
0x0000000000401920 : xor eax, eax ; ret
0x000000000042ee1e : xor eax, eax ; sub eax, ecx ; ret
0x000000000043ecf8 : xor eax, eax ; test dh, 0xf0 ; je 0x43eccb ; movzx eax, dl ; pop rbx ; ret
0x000000000046b560 : xor eax, eax ; test r11b, r11b ; je 0x46b559 ; ret
0x0000000000413d00 : xor eax, eax ; test rdx, rdx ; jne 0x413d17 ; ret
0x0000000000467ea3 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004744f8 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046ad1d : xor ecx, dword ptr [rax + 0x39] ; ret 0xdd72
0x0000000000448931 : xor ecx, dword ptr [rax - 0x77] ; ret
0x00000000004668b5 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000455807 : xor ecx, dword ptr [rbx] ; jmp rax
0x000000000044f9f2 : xor ecx, eax ; ret 0x4809
0x00000000004a42e5 : xor ecx, edi ; jmp qword ptr [rax]
0x00000000004c3669 : xor edi, eax ; jmp rsp
0x00000000004c9009 : xor edi, ebp ; call rsp
0x00000000004a42e9 : xor edi, ecx ; jmp qword ptr [rax]
0x000000000040edb7 : xor edx, dword ptr [0x30] ; call rdx
0x0000000000445373 : xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x0000000000444b0c : xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x444afc
0x000000000045a873 : xor edx, edx ; div ecx ; add eax, r8d ; ret
0x000000000047aeb9 : xor edx, edx ; div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046ad3e : xor edx, edx ; jmp 0x46ad08
0x0000000000474264 : xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000415df9 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000004181dc : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000004885b3 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000441641 : xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x0000000000401a35 : xor esi, esi ; mov edi, 1 ; call rax
0x000000000047b149 : xor esi, esi ; mov edi, dword ptr [rip + 0x251873] ; jmp rax
0x0000000000440891 : xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000441643 : xor esi, esi ; mov rbx, rax ; call rax
0x0000000000441668 : xor esi, esi ; mov rdi, r12 ; call rbx
0x000000000044168d : xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000004416b1 : xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000004416d1 : xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000004655d6 : xor r8d, r8d ; call rbx
0x000000000040edfe : xor rax, qword ptr [0x30] ; call rax
0x000000000040edfd : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000004268ef : xor rax, rax ; ret
0x000000000040edb6 : xor rdx, qword ptr [0x30] ; call rdx
0x000000000040edb5 : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 9029
