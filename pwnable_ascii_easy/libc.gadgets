


Gadgets
=======


0x0013576b: aaa; adc al, 3; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x000e660d: aaa; add al, 0; add ebx, 0xbc9e4; xchg edi, ebx; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0016e9ad: aaa; add al, byte ptr [eax]; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; jmp eax; 
0x00136beb: aaa; add al, byte ptr [ebx]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x001729fd: aaa; add byte ptr [eax], al; pushal; imul ebx; call ebx; 
0x00080225: aaa; add dword ptr [eax], eax; add byte ptr [ebx + 0x1242454], cl; ret 0x442b; 
0x0016e685: aaa; add eax, dword ptr [eax]; and al, 0xf3; sti; jmp dword ptr [eax]; 
0x0016e68d: aaa; add eax, dword ptr [eax]; movsb byte ptr es:[edi], byte ptr [esi]; sti; jmp eax; 
0x00176658: aaa; add edi, ebp; call dword ptr [eax]; 
0x0015a595: aaa; bnd jmp dword ptr [ebx + 0x38]; bnd call edi; cmp dl, dh; call dword ptr [esi + 0x39]; 
0x000230bf: aaa; call dword ptr [edi]; 
0x0016c011: aaa; clc; call dword ptr [eax]; 
0x00198e6d: aaa; clc; jmp dword ptr [eax]; 
0x0016c009: aaa; clc; jmp esp; 
0x0016d751: aaa; cli; jmp esp; 
0x0016d761: aaa; cli; push dword ptr [eax + 0x340002e3]; cmp dl, bh; jmp esp; 
0x0016b161: aaa; cmc; call dword ptr [eax + 1]; 
0x00172dc1: aaa; in eax, 0xeb; jmp dword ptr [edx]; 
0x000773db: aaa; jmp dword ptr [ecx]; 
0x0013caab: aaa; lodsb al, byte ptr [esi]; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00111958: aaa; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x0010ffce: aaa; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00074d5c: aaa; mov ecx, dword ptr [ebx - 0x15c]; xor ebp, ebp; mov dword ptr [esp + 0x18], edx; mov dword ptr [esp], 0; call dword ptr [ecx]; 
0x001747dd: aaa; or ebp, ebp; jmp dword ptr [edx]; 
0x00178d89: aaa; out dx, eax; call dword ptr [edx]; 
0x0017a316: aaa; out dx, eax; jmp dword ptr [edx]; 
0x0003f879: aaa; push ss; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00002efb: aaa; ret 0x793b; 
0x00026cbf: aaa; ret; 
0x000e13bf: aaa; sbb al, 0xc; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00167391: aaa; std; call eax; 
0x00167391: aaa; std; call eax; aaa; std; jmp dword ptr [eax + 0x38]; 
0x00167395: aaa; std; jmp dword ptr [eax + 0x38]; 
0x0017beb9: aaa; xchg edi, ebp; jmp dword ptr [edx]; 
0x00132b6b: aaa; xor al, byte ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0017cbd5: aad 0; add byte ptr [eax - 0xd], bh; out dx, eax; call dword ptr [eax]; 
0x000b9132: aad 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000eca1f: aad 0; add byte ptr [eax], al; call eax; 
0x000b915d: aad 0; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x00168b55: aad 0; add byte ptr [edx + edx*8], al; out dx, al; jmp esp; 
0x0017c751: aad 0; add byte ptr [esp + edx*8], bl; out dx, eax; call dword ptr [edi + 2]; 
0x0016d718: aad 0x29; cli; push dword ptr [edi + ebx*8 + 0x29e50002]; cli; jmp esp; 
0x0006952f: aad 0x29; int 0x29; ret 0xe75; 
0x0002aeb8: aad 0x39; ret 0x3377; 
0x00174ef5: aad 0x55; in eax, dx; jmp dword ptr [edx]; 
0x00094831: aad 0x60; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000024e9: aad 0x80; ret 0x8a4c; 
0x00098a99: aad 0x83; clc; add al, 0x89; ret 0x474; 
0x00019c68: aad 0x89; ret 0x6c89; 
0x000f7a83: aad 0x8b; push ebp; or al, 0x8b; inc ecx; or al, 0x39; ret 0xf275; 
0x00166224: aad 0xd3; cld; inc dword ptr [0x35fffcd4]; aam 0xfc; jmp dword ptr [ebp - 0x2c]; 
0x0016adc0: aad 0xdb; hlt; call dword ptr [eax - 0x15]; 
0x00174315: aad 0xec; call dword ptr [eax]; 
0x0017527e: aad 0xed; jmp dword ptr [edx]; 
0x00197b21: aad 0xf7; jmp dword ptr [ebx]; 
0x0016d2d1: aad 0xf9; dec dword ptr [eax]; ret; 
0x0016d2e1: aad 0xf9; dec dword ptr [esp + eax*8 + 2]; add byte ptr [ebp + edx*8 - 7], dh; jmp dword ptr [eax - 0x3c]; 
0x0016d2e9: aad 0xf9; jmp dword ptr [eax - 0x3c]; 
0x000a81ef: aad 0xf; lahf; ret 0xe8c1; 
0x0016dc59: aad 0xfa; jmp dword ptr [eax]; 
0x00166311: aad 0xfc; call dword ptr [eax - 0x4f00032b]; aad 0xfc; call eax; 
0x001660bd: aad 0xfc; call dword ptr [ebx - 0x2b]; 
0x00166301: aad 0xfc; call dword ptr [ebx - 0x4c00032b]; aad 0xfc; call ebx; 
0x001662f1: aad 0xfc; call dword ptr [esi - 0x4900032b]; aad 0xfc; call esi; 
0x00166319: aad 0xfc; call eax; 
0x00166309: aad 0xfc; call ebx; 
0x001662f9: aad 0xfc; call esi; 
0x001662ad: aad 0xfc; inc dword ptr [edx - 0x5d00032b]; aad 0xfc; inc edx; aad 0xfc; jmp edx; 
0x001662b5: aad 0xfc; inc edx; aad 0xfc; jmp edx; 
0x00166281: aad 0xfc; jmp dword ptr [eax - 0x2b]; 
0x0016628d: aad 0xfc; jmp dword ptr [eax]; 
0x00166241: aad 0xfc; jmp dword ptr [ebp - 0x2b]; 
0x00166289: aad 0xfc; jmp eax; 
0x001662b9: aad 0xfc; jmp edx; 
0x0016630d: aad 0xfc; push dword ptr [eax - 0x2b]; cld; call dword ptr [eax - 0x4f00032b]; aad 0xfc; call eax; 
0x001662fd: aad 0xfc; push dword ptr [ebx - 0x2b]; cld; call dword ptr [ebx - 0x4c00032b]; aad 0xfc; call ebx; 
0x001662ed: aad 0xfc; push dword ptr [esi - 0x2b]; cld; call dword ptr [esi - 0x4900032b]; aad 0xfc; call esi; 
0x0013c799: aad 0xfe; inc dword ptr [ecx + 0x2af44c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013c7e6: aad 0xfe; inc dword ptr [ecx + 0x2afb7c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0015a07d: aad 0xff; call dword ptr [ecx - 0x2a]; 
0x0004fd11: aad 0xff; dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0x1af6b]; jmp dword ptr [ebp - 0x77]; 
0x0019bd18: aad 1; add byte ptr [edx + eax - 0xfffffb], cl; inc dword ptr [ecx]; or bh, byte ptr [eax + 5]; ret; 
0x00196452: aad 1; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x001797d1: aad 1; out dx, eax; jmp dword ptr [edx]; 
0x0016d555: aad 2; add byte ptr [esi + eax - 6], dl; call dword ptr [eax]; 
0x001730ec: aad 2; in al, dx; call dword ptr [eax]; 
0x0017cb15: aam 0; add al, bh; out dx, eax; call dword ptr [eax]; 
0x0017cb45: aam 0; add al, bl; out dx, eax; call dword ptr [eax]; 
0x000ecfab: aam 0; add byte ptr [eax], al; add byte ptr [ebx - 0x34782fb3], cl; mov eax, 6; call dword ptr gs:[0x10]; 
0x000e0014: aam 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0006d7c6: aam 0; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xd8]; add esp, 0xdc; ret; 
0x000dff8f: aam 0; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000a7118: aam 0; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x0017cab5: aam 0; add byte ptr [eax], bh; hlt; out dx, eax; call dword ptr [eax]; 
0x0017cae5: aam 0; add byte ptr [eax], bl; hlt; out dx, eax; call dword ptr [eax]; 
0x0016afa0: aam 0; cmc; jmp eax; 
0x0016e768: aam 0x11; cld; push dword ptr [esi + edi + 0x11f40003]; cld; call esp; 
0x0016e858: aam 0x20; cld; ljmp ptr [eax + 0x44000341]; and bh, ah; call esp; 
0x001722d4: aam 0x30; add byte ptr [eax], al; dec eax; shr ebx, cl; jmp dword ptr [esi]; 
0x0016d778: aam 0x3b; cli; call dword ptr [eax - 0x1c]; 
0x00168a88: aam 0x40; out dx, al; call eax; 
0x00169f88: aam 0x41; int1; call dword ptr [eax + 0x52]; 
0x0016df90: aam 0x48; sti; call dword ptr [eax + 0x12]; 
0x0016e010: aam 0x4f; sti; call esp; 
0x001945d4: aam 0x53; add al, byte ptr [eax]; test al, 0xa7; stc; call dword ptr [ebx]; 
0x0016a098: aam 0x54; int1; jmp esp; 
0x00168158: aam 0x59; in al, dx; call eax; 
0x0016d800: aam 0x5b; cli; call eax; 
0x000031d4: aam 0x5c; ret 0x2ec0; 
0x001681d0: aam 0x5e; in al, dx; jmp dword ptr [eax - 0x61]; 
0x000a74c3: aam 0x5e; ret; 
0x00195a84: aam 0x63; add al, byte ptr [eax]; sbb dword ptr [edx - 9], ecx; call dword ptr [eax]; 
0x0013307d: aam 0x66; movq qword ptr [edx - 0x1c], mm0; movq qword ptr [edx - 0xc], xmm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0001b325: aam 0x6b; ret 0x8d3c; 
0x00176684: aam 0x6f; add byte ptr [eax], al; pop ss; add edi, ebp; call dword ptr [eax]; 
0x0016e1e0: aam 0x74; sti; ljmp ptr [ebp + ebx + 0x75a40003]; sti; call esp; 
0x0016cdc8: aam 0x75; stc; jmp dword ptr [eax]; 
0x0016c398: aam 0x79; clc; dec dword ptr [ecx + ebp*2 + 2]; add byte ptr [edx + edi*2], dl; clc; jmp dword ptr [eax + 0x69]; 
0x00167cdc: aam 0x80; add byte ptr [eax], al; adc dl, byte ptr [eax - 0x15]; jmp dword ptr [eax + 0x7f]; 
0x00081cd6: aam 0x83; ret 0x2501; 
0x000eefa1: aam 0x85; div byte ptr [ebp + 0x22]; xchg edi, ebx; mov eax, 0x141; call dword ptr gs:[0x10]; 
0x00103837: aam 0x89; inc esp; and al, 4; lea eax, dword ptr [ebx - 0x9f8b4]; mov dword ptr [esp], eax; call edx; 
0x000c8108: aam 0x8b; adc dh, dh; ret 0xf01; 
0x0019a41c: aam 0x8b; clc; jmp dword ptr [ebx]; 
0x00123371: aam 0x8d; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x75]; 
0x0017c1dc: aam 0x92; out dx, eax; jmp dword ptr [edi]; 
0x000914b2: aam 0x93; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0018bd0c: aam 0x9d; cmc; jmp dword ptr [ebx]; 
0x0018bdec: aam 0x9f; cmc; call dword ptr [esi]; 
0x0019a878: aam 0xa2; clc; call dword ptr [eax]; 
0x0016f44c: aam 0xa6; ljmp 0:0x23ff; inc ecx; push cs; or byte ptr [ebx + 0x40e6102], al; ret; 
0x00168500: aam 0xac; in al, dx; jmp dword ptr [eax - 0x4f]; 
0x0007bd08: aam 0xb1; stc; inc dword ptr [ebp + 0x74c789c0]; ret 0xf685; 
0x0016a410: aam 0xb2; int1; call dword ptr [eax]; 
0x0017b084: aam 0xb9; add byte ptr [eax], al; sahf; clc; out dx, eax; call dword ptr [eax]; 
0x0016be10: aam 0xb; clc; push dword ptr [ebp + ecx*2 + 0xc140002]; clc; call esp; 
0x0016acc0: aam 0xc2; hlt; call dword ptr [eax - 0x1c]; 
0x0008d1cf: aam 0xc; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0016d210: aam 0xca; stc; jmp eax; 
0x0016d2b0: aam 0xd2; stc; jmp esp; 
0x00168e10: aam 0xd9; out dx, eax; call dword ptr [eax]; 
0x000b82ce: aam 0xe8; lodsb al, byte ptr [esi]; mov cl, 0xfb; jmp dword ptr [ebp - 0x5f]; 
0x00168b79: aam 0xee; dec dword ptr [esi + edx*8 - 0x26fc0000]; out dx, al; call eax; 
0x00168f30: aam 0xee; out dx, eax; jmp dword ptr [eax]; 
0x0018e1d4: aam 0xef; add dword ptr [eax], eax; sub byte ptr [esi + esi*8], cl; call dword ptr [edi]; 
0x0017c755: aam 0xef; call dword ptr [edi + 2]; 
0x00168da1: aam 0xef; call eax; 
0x0018a3ac: aam 0xf2; hlt; jmp dword ptr [ebx]; 
0x00189c21: aam 0xf4; call dword ptr [edx]; 
0x0018cf21: aam 0xf5; call edi; 
0x0018a320: aam 0xf5; hlt; call dword ptr [eax]; 
0x0018d055: aam 0xf5; jmp dword ptr [eax]; 
0x00197a45: aam 0xf7; jmp dword ptr [ebx]; 
0x0001ba7a: aam 0xf; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x00037ee1: aam 0xf; add dword ptr [edi - 0x14], -1; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x0016dc51: aam 0xfa; inc dword ptr [eax]; add byte ptr [ebx], al; add byte ptr [ebp + edx*8 - 6], al; jmp dword ptr [eax]; 
0x00114bf1: aam 0xfb; jmp dword ptr [ebp - 0x75]; 
0x001660a9: aam 0xfc; call dword ptr [ebx - 0x2c]; 
0x001660a9: aam 0xfc; call dword ptr [ebx - 0x2c]; cld; inc dword ptr [ebx - 0x4c00032c]; aam 0xfc; jmp ebx; 
0x001660b9: aam 0xfc; call dword ptr [ebx]; 
0x001660b9: aam 0xfc; call dword ptr [ebx]; aad 0xfc; call dword ptr [ebx - 0x2b]; 
0x00166175: aam 0xfc; call esp; 
0x001660ad: aam 0xfc; inc dword ptr [ebx - 0x4c00032c]; aam 0xfc; jmp ebx; 
0x0016626d: aam 0xfc; jmp dword ptr [eax - 0x2c]; 
0x0016622d: aam 0xfc; jmp dword ptr [ebp - 0x2c]; 
0x001660b5: aam 0xfc; jmp ebx; 
0x0016627d: aam 0xfc; push dword ptr [eax]; aad 0xfc; jmp dword ptr [eax - 0x2b]; 
0x00166269: aam 0xfc; push dword ptr [eax]; aam 0xfc; jmp dword ptr [eax - 0x2c]; 
0x001660b1: aam 0xfc; push dword ptr [ebx - 0x1c00032c]; aam 0xfc; call dword ptr [ebx]; 
0x001660b1: aam 0xfc; push dword ptr [ebx - 0x1c00032c]; aam 0xfc; call dword ptr [ebx]; aad 0xfc; call dword ptr [ebx - 0x2b]; 
0x00166279: aam 0xfc; push eax; aam 0xfc; push dword ptr [eax]; aad 0xfc; jmp dword ptr [eax - 0x2b]; 
0x0013c895: aam 0xfe; inc dword ptr [ecx + 0x2ae48c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018995a: aam 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0016d53d: aam 2; add ah, dh; add al, 0xfa; call eax; 
0x0016d535: aam 2; add byte ptr [edx + eax - 0x2b130006], al; add al, byte ptr [eax]; hlt; add al, 0xfa; call eax; 
0x0016ca78: aam 5; stc; ljmp ptr [eax - 0x7bfffd70]; pop es; stc; call esp; 
0x001734ac: aam 7; in al, dx; call dword ptr [edi]; 
0x00176f5c: aam 9; out dx, eax; call esp; 
0x0016d588: aam; cli; dec dword ptr [eax - 0x58fffd28]; or edi, edx; jmp dword ptr [eax]; 
0x0019c8c8: aas; add al, 0; add byte ptr [ebx + eax], ah; add byte ptr [eax], al; ret; 
0x00173149: aas; add byte ptr [eax], al; and al, 0; in al, dx; jmp dword ptr [ecx]; 
0x001731b1: aas; add byte ptr [eax], al; dec esp; add esp, ebp; jmp dword ptr [ecx]; 
0x00183171: aas; add dword ptr [eax], eax; cmp al, 0xf2; cli; jmp dword ptr [ebx + 1]; 
0x00169e45: aas; add dword ptr [eax], eax; insd dword ptr es:[edi], dx; xor ecx, esi; call esp; 
0x0016d791: aas; cli; dec dword ptr [0x40040002]; cli; jmp dword ptr [eax]; 
0x000b7a04: aas; dec dword ptr [edi]; test dword ptr [esi], ecx; add dword ptr [eax], eax; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x000f5064: aas; dec dword ptr [edi]; test dword ptr [esi], edx; add dword ptr [eax], eax; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x001680d9: aas; in al, dx; call dword ptr [eax - 0x65]; 
0x0002ebb7: aas; inc esp; pop ss; add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp - 0x39]; 
0x001589e8: aas; mov ch, 0x31; mov ah, bl; push esi; ret; 
0x000df0ba: aas; or al, 0; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0008ec6d: aas; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000eeffe: aas; or eax, dword ptr [eax]; xchg ebx, edx; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0017313d: aas; out 0xeb, al; jmp dword ptr [edx]; 
0x000974a9: aas; out dx, eax; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x0005b2be: aas; ret; 
0x00143a0d: aas; sbb al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0017ebbd: aas; sti; jmp esp; 
0x00195254: aas; xor al, 0xf7; call dword ptr [eax]; 
0x00166b7c: adc ah, bh; cld; call dword ptr [eax]; 
0x00166b7c: adc ah, bh; cld; call dword ptr [eax]; cli; cld; call eax; 
0x0002bcfd: adc ah, byte ptr [esi + 0xf]; mov esi, 0x500c138c; sti; jmp dword ptr [esi + 0x39]; 
0x00130852: adc ah, byte ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x0011c66e: adc ah, byte ptr [esi - 0x39]; inc esp; sar ah, 1; ret; 
0x000f0adf: adc al, 0; add byte ptr [eax], al; add byte ptr [eax + 0x66], bh; mov ebx, 0x12; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0010f3ad: adc al, 0; add byte ptr [eax], al; add byte ptr [ecx + 0x26e82404], cl; adc bh, bh; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x0019951c: adc al, 0; add byte ptr [eax], al; and byte ptr [ebx + 0x4ffc0002], ah; clc; jmp dword ptr [edx]; 
0x0019931c: adc al, 0; add byte ptr [eax], al; and byte ptr [ecx + 0x446c0002], ah; clc; jmp dword ptr [eax]; 
0x000b9053: adc al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00170f38: adc al, 0; add byte ptr [eax], al; cmp al, 0x1d; add byte ptr [eax], al; add byte ptr [eax - 0x15], ch; jmp dword ptr [ebx]; 
0x00199334: adc al, 0; add byte ptr [eax], al; cmp byte ptr [ecx + 0x44740002], ah; clc; jmp dword ptr [edi]; 
0x00175ed8: adc al, 0; add byte ptr [eax], al; fsubr qword ptr [eax + eax]; sal al, 0xee; jmp dword ptr [edx]; 
0x001921b8: adc al, 0; add byte ptr [eax], al; mov esp, 0x8000022f; fdecstp; call dword ptr [ebp]; 
0x0018b004: adc al, 0; add byte ptr [eax], al; or byte ptr [esi + 0x46640001], bh; cmc; jmp dword ptr [ebx]; 
0x000e6aa0: adc al, 0; add byte ptr [eax], al; sub edx, eax; mov eax, edx; pop ebx; ret; 
0x0019912c: adc al, 0; add byte ptr [eax], al; xor byte ptr [edi + 0x3ebc0002], bl; clc; jmp dword ptr [eax]; 
0x000f160e: adc al, 0; mov edi, dword ptr [ebp - 0x40c]; mov ecx, dword ptr [ebp - 0x3fc]; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00055563: adc al, 0; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x12e; call dword ptr gs:[0x10]; 
0x000dfecf: adc al, 0x10; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x1018]; add esp, 0x101c; ret; 
0x001842ca: adc al, 0x10; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0016b0d0: adc al, 0x19; cmc; call dword ptr [eax]; 
0x0016bef0: adc al, 0x1e; clc; jmp eax; 
0x0016b100: adc al, 0x1f; cmc; jmp dword ptr [eax]; 
0x0006ccbc: adc al, 0x24; add eax, 0x2c; mov dword ptr [esp + 4], eax; call dword ptr [edx + 4]; 
0x00129b01: adc al, 0x24; call 0x129980; add esp, 0x18; pop ebx; ret; 
0x00129af1: adc al, 0x24; call 0x129990; add esp, 0x18; pop ebx; ret; 
0x000e23d7: adc al, 0x24; call 0xdf6e0; mov ecx, dword ptr [ebp - 0xb0]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000e3557: adc al, 0x24; call 0xdf6e0; mov ecx, dword ptr [ebp - 0xc0]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x00112a94: adc al, 0x24; call dword ptr [eax + 0x10]; 
0x0011a739: adc al, 0x24; call dword ptr [eax + 0x14]; 
0x0011ce0c: adc al, 0x24; call dword ptr [eax + 0xc]; 
0x00113d06: adc al, 0x24; call dword ptr [eax + 8]; 
0x00126f7d: adc al, 0x24; call dword ptr [eax + 8]; add esp, 0x18; pop ebx; ret; 
0x000fc2f2: adc al, 0x24; call dword ptr [eax]; 
0x000fc2f2: adc al, 0x24; call dword ptr [eax]; add esp, 0x1c; ret; 
0x000ebc55: adc al, 0x24; call dword ptr [ebp + 0x10]; 
0x0002196f: adc al, 0x24; call dword ptr [ebp]; 
0x0006d918: adc al, 0x24; call dword ptr [edx + 0x10]; 
0x0007c286: adc al, 0x24; call dword ptr [esi + 0x20]; 
0x0001f672: adc al, 0x24; call dword ptr [esi]; 
0x000195ad: adc al, 0x24; call eax; 
0x0002dd64: adc al, 0x24; call eax; add esp, 0x14; pop ebx; pop ebp; ret; 
0x000197ee: adc al, 0x24; call eax; add esp, 0x18; pop ebx; ret; 
0x00064ed8: adc al, 0x24; call eax; add esp, 0x1c; ret; 
0x000ec952: adc al, 0x24; call eax; add esp, 0x28; pop ebx; ret; 
0x00031669: adc al, 0x24; call edi; 
0x00074f2f: adc al, 0x24; lea edx, dword ptr [ebx - 0x44875]; call 0x74da0; mov edx, dword ptr [ebx - 0x15c]; mov dword ptr [esp], 0; call dword ptr [edx]; 
0x00076e23: adc al, 0x24; mov dword ptr [esp + 0x28], edx; call dword ptr [ebp]; 
0x00076cde: adc al, 0x24; mov dword ptr [esp + 0x28], edx; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x0011d942: adc al, 0x24; mov dword ptr [esp + 0x30], edx; mov dword ptr [esp + 4], 0; call dword ptr [eax + 0x14]; 
0x00066884: adc al, 0x24; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x1c]; 
0x00126f37: adc al, 0x24; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 4]; 
0x0007a7ae: adc al, 0x24; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 8], esi; call eax; 
0x0001e83b: adc al, 0x24; mov dword ptr [esp + 8], eax; call dword ptr [ebp]; 
0x0001949a: adc al, 0x24; mov dword ptr [esp + 8], eax; mov eax, dword ptr [esp + 0x78]; mov dword ptr [esp + 4], eax; call esi; 
0x0004245c: adc al, 0x24; mov dword ptr [esp + 8], ebp; mov dword ptr [esp + 4], eax; call dword ptr [ecx + 0x1c]; 
0x0007b015: adc al, 0x24; mov dword ptr [esp + 8], ecx; lea ecx, dword ptr [edi + ebp + 1]; mov dword ptr [esp + 4], ecx; call eax; 
0x00124d08: adc al, 0x24; mov dword ptr [esp + 8], esi; mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 8]; 
0x00126c62: adc al, 0x24; mov eax, dword ptr [eax + 0x1a0]; call eax; 
0x00126c62: adc al, 0x24; mov eax, dword ptr [eax + 0x1a0]; call eax; add esp, 0x18; pop ebx; ret; 
0x0002ba64: adc al, 0x24; mov edx, eax; mov eax, 2; call 0x2b9b0; add esp, 0x2c; ret; 
0x00129d7c: adc al, 0x24; ret; 
0x00023edd: adc al, 0x24; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00177efc: adc al, 0x27; out dx, eax; call dword ptr [edi + 1]; 
0x00182214: adc al, 0x30; add dword ptr [eax], eax; cwde; and cl, dh; jmp dword ptr [ebx]; 
0x0016ebf8: adc al, 0x30; cld; jmp dword ptr [eax + 9]; 
0x00019e0b: adc al, 0x31; ret 0x5489; 
0x000e3c01: adc al, 0x31; ror byte ptr [ebx - 0x74ebdba4], 0x74; and al, 0x18; add esp, 0x1c; ret; 
0x0016ab80: adc al, 0x33; hlt; jmp dword ptr [eax]; 
0x00169f08: adc al, 0x33; int1; jmp dword ptr [eax + 0x4e]; 
0x0016bff0: adc al, 0x36; clc; jmp dword ptr [eax + 0x57]; 
0x0016c008: adc al, 0x37; clc; jmp esp; 
0x000283da: adc al, 0x39; add byte ptr [eax], al; mov dword ptr [esp], edi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00023ed8: adc al, 0x39; add byte ptr [eax], al; mov dword ptr [esp], edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000c6c44: adc al, 0x39; ret 0x850f; 
0x000f7a53: adc al, 0x39; ret 0xa7d; 
0x000f7a5d: adc al, 0x39; ret 0xf67c; 
0x00182c14: adc al, 0x3a; add dword ptr [eax], eax; mov byte ptr [esi], ch; int1; call dword ptr [ebx]; 
0x0016faee: adc al, 0x41; ret; 
0x00173414: adc al, 0x42; add byte ptr [eax], al; fadd dword ptr [esi]; in al, dx; jmp dword ptr [edi]; 
0x00173514: adc al, 0x43; add byte ptr [eax], al; test al, 8; in al, dx; call dword ptr [esi]; 
0x001702f7: adc al, 0x43; ret; 
0x001795a3: adc al, 0x44; ret; 
0x001702e1: adc al, 0x45; ret; 
0x0016f65b: adc al, 0x46; ret; 
0x0016dfb0: adc al, 0x4a; sti; jmp esp; 
0x000f1d80: adc al, 0x50; add word ptr [edx], 1; add esp, 8; pop ebx; ret; 
0x0016c158: adc al, 0x57; clc; jmp dword ptr [eax]; 
0x0002dd6a: adc al, 0x5b; pop ebp; ret; 
0x0004bb90: adc al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x000251d9: adc al, 0x5b; pop esi; ret; 
0x0011f55f: adc al, 0x5b; ret; 
0x000ca438: adc al, 0x5e; pop edi; pop ebp; ret; 
0x000cb4f5: adc al, 0x5e; pop edi; ret; 
0x0008daf3: adc al, 0x5f; pop esi; pop ebx; ret; 
0x000eb62d: adc al, 0x65; mov dword ptr [eax], 0x16; add esp, 0x1c; ret; 
0x00032815: adc al, 0x65; mov dword ptr [eax], 0x16; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x0002c8b5: adc al, 0x65; mov dword ptr [eax], 9; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x0016edc0: adc al, 0x6d; cld; dec dword ptr [edx + eax*4 + 0x6d540002]; cld; jmp esp; 
0x0016e160: adc al, 0x6d; sti; call dword ptr [eax + 0x1b]; 
0x0016edf8: adc al, 0x6f; cld; lcall ptr [eax + ebx*4 + 0x6f640002]; cld; jmp dword ptr [eax]; 
0x0016ee18: adc al, 0x70; cld; jmp dword ptr [eax - 0x56]; 
0x0016ee90: adc al, 0x73; cld; jmp dword ptr [eax]; 
0x0006ee75: adc al, 0x73; or cl, byte ptr [ecx + 0x4c18301]; mov dword ptr [edx + 0x10], ecx; pop esi; ret; 
0x0016c380: adc al, 0x79; clc; call dword ptr [eax]; 
0x0016c3a0: adc al, 0x7a; clc; jmp dword ptr [eax + 0x69]; 
0x0016c3c0: adc al, 0x7b; clc; inc eax; imul eax, dword ptr [edx], 0xf87b5400; call esp; 
0x0017b859: adc al, 0x7d; out dx, eax; jmp dword ptr [edx]; 
0x0016a2a0: adc al, 0x80; int1; inc esp; arpl word ptr [ecx], ax; add byte ptr [eax + eax*4 - 0xf], ah; jmp esp; 
0x00197414: adc al, 0x82; add al, byte ptr [eax]; dec eax; ret; 
0x001909da: adc al, 0x83; add eax, 0x100e7402; ret; 
0x0017bee2: adc al, 0x83; add eax, 0x100edf02; ret; 
0x0017176e: adc al, 0x83; add eax, 0x1c00e46; add bh, byte ptr [edx + 0x43140e0a]; ret; 
0x00185aa6: adc al, 0x83; add eax, 0x2400e43; ret 0xe0a; 
0x00192276: adc al, 0x83; add eax, 0x2400e43; xchg eax, edx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00174162: adc al, 0x83; add eax, 0x2e00e46; add ebx, dword ptr [ecx + eax + 0xa]; push cs; adc al, 0x46; ret; 
0x00183e5e: adc al, 0x83; add eax, 0x3500e43; test eax, 0x140e0a01; inc ecx; ret; 
0x001940be: adc al, 0x83; add eax, 0x3600e43; mov eax, dword ptr [0x140e0a01]; inc ecx; ret; 
0x001736ca: adc al, 0x83; add eax, 0x3700e43; mov eax, 0x140e0a01; inc ecx; ret; 
0x00031ec7: adc al, 0x83; jmp dword ptr [eax]; 
0x00018069: adc al, 0x83; ret 0x108; 
0x000753f8: adc al, 0x83; ret 0x138; 
0x00048390: adc al, 0x83; ret 0x8301; 
0x0012526b: adc al, 0x83; ret 0x8328; 
0x0001b2f2: adc al, 0x83; ret 0x8501; 
0x0009816b: adc al, 0x83; ret 0x8b04; 
0x000d0b6b: adc al, 0x83; ret 0x8d04; 
0x001025a1: adc al, 0x83; ret 0xf03; 
0x0003f772: adc al, 0x83; rol byte ptr [ecx], 0x5b; pop esi; ret; 
0x000ddfa8: adc al, 0x87; fistp qword ptr [eax + 0x129]; call dword ptr gs:[0x10]; 
0x0002f141: adc al, 0x87; fistp qword ptr [eax + 0xb2]; call dword ptr gs:[0x10]; 
0x0001ced4: adc al, 0x88; dec esp; push ss; add al, 0x83; ret 0x3b01; 
0x00111d45: adc al, 0x89; dec esp; and al, 4; call dword ptr [edx]; 
0x00112670: adc al, 0x89; dec esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x00113236: adc al, 0x89; inc edx; or byte ptr [ebx + 0x748b241c], cl; and al, 4; add esp, 8; ret; 
0x000b3422: adc al, 0x89; inc esi; adc al, 0x8b; dec edi; sbb byte ptr [ecx], bh; ret 0x4e89; 
0x000478ec: adc al, 0x89; inc esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [ecx + 0x1c]; 
0x000e1486: adc al, 0x89; into; xchg edi, ebx; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x0007b29e: adc al, 0x89; pop es; mov ebx, dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000e709e: adc al, 0x89; pop esp; and al, 0x2c; mov ebx, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000e75fe: adc al, 0x89; pop esp; and al, 0x2c; mov ebx, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0002dc7e: adc al, 0x89; push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x0006bee5: adc al, 0x89; push eax; or al, 0x31; ror byte ptr [ecx + 0x18c4830e], 0x5e; ret; 
0x000636fa: adc al, 0x89; push esi; sbb al, 0x83; ret 0x8901; 
0x00079df9: adc al, 0x89; push esp; and al, 4; call eax; 
0x00124d33: adc al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00019d2a: adc al, 0x89; ret 0x4c89; 
0x000bdaf0: adc al, 0x89; ret 0x76e9; 
0x000fdbc2: adc al, 0x89; ret 0x848b; 
0x0007931f: adc al, 0x89; ret 0xe283; 
0x00019cb8: adc al, 0x89; ret 0xee39; 
0x000c73b2: adc al, 0x89; ret 0xf229; 
0x00129b93: adc al, 0x89; sub bl, byte ptr [esi + 0x5f]; pop ebp; ret; 
0x001295eb: adc al, 0x89; test byte ptr [esp + ecx*8], ah; add byte ptr [eax], al; add byte ptr [ebx - 0x7cebdbbc], cl; ret 0x8b04; 
0x000b3425: adc al, 0x8b; dec edi; sbb byte ptr [ecx], bh; ret 0x4e89; 
0x000ef683: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000efc13: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000efd23: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000efde9: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000ef339: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000eff36: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000b7da9: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000efad9: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x000eb216: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000e1349: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000ed529: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x000ed5b9: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x000ed409: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x000e1399: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x000ef629: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000dec16: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 3; call dword ptr gs:[0x10]; 
0x000dec96: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 4; call dword ptr gs:[0x10]; 
0x000de776: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 5; call dword ptr gs:[0x10]; 
0x000b7d26: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 7; call dword ptr gs:[0x10]; 
0x000dfcb3: adc al, 0x8b; dec esp; and al, 0x2c; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0012bafc: adc al, 0x8b; inc esi; adc byte ptr [ecx], bh; ret 0x2477; 
0x00070206: adc al, 0x8b; inc esi; adc byte ptr [ecx], bh; ret 0x3776; 
0x00094c46: adc al, 0x8b; inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x000917c0: adc al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x000ca367: adc al, 0x8b; insb byte ptr es:[edi], dx; and al, 0x18; add esp, 0x1c; ret 0xc; 
0x00019d8f: adc al, 0x8b; insb byte ptr es:[edi], dx; and al, 0x18; add esp, 0x1c; ret; 
0x000f11d3: adc al, 0x8b; insb byte ptr es:[edi], dx; and al, 0x1c; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000e98eb: adc al, 0x8b; or byte ptr [ecx + 0x74c98510], cl; add ecx, dword ptr [ecx + 0xa890451]; mov dword ptr [edx + 4], eax; ret; 
0x000ef6b5: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000eb2f2: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x000efc45: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000efd55: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000efec2: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x000ef8e2: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x000ef752: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x000e7e6c: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000ef932: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x000efa92: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x000efa42: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x00123dd2: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xbc; call dword ptr gs:[0x10]; 
0x00123e92: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xbd; call dword ptr gs:[0x10]; 
0x000ed722: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x000ed692: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x000ed4e2: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012e522: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xfa; call dword ptr gs:[0x10]; 
0x000f7a50: adc al, 0x8b; push ecx; adc al, 0x39; ret 0xa7d; 
0x00067f4b: adc al, 0x8b; xor al, 0x24; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000e3f12: adc al, 0x8d; push eax; jmp dword ptr [esi - 0x7d]; 
0x00168438: adc al, 0x8e; in al, dx; dec dword ptr [eax + 0x40000ab]; xchg eax, edx; in al, dx; jmp eax; 
0x000ca0e1: adc al, 0x8f; lea esi, dword ptr [ecx + 1]; cmove eax, esi; pop esi; pop edi; ret; 
0x001678ac: adc al, 0x92; cld; lcall ptr [edx - 0x70]; cld; call esi; 
0x00198814: adc al, 0x96; add al, byte ptr [eax]; or byte ptr [eax + edi*8], bl; jmp esp; 
0x00188c14: adc al, 0x9a; add dword ptr [eax], eax; test al, 0x1c; hlt; jmp dword ptr [ecx]; 
0x0016cf20: adc al, 0x9c; stc; call dword ptr [eax - 0x51]; 
0x0016a330: adc al, 0xa1; int1; jmp dword ptr [eax + 0x67]; 
0x0019a998: adc al, 0xa2; clc; call dword ptr [eax]; 
0x0016a380: adc al, 0xae; int1; jmp eax; 
0x00168520: adc al, 0xaf; in al, dx; jmp eax; 
0x0017c33c: adc al, 0xb0; out dx, eax; jmp dword ptr [eax + 2]; 
0x0002ea9a: adc al, 0xb0; xor eax, eax; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0011f72a: adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000efb45: adc al, 0xb8; cmp dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000fc562: adc al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; xor esi, esi; xchg ebx, edi; call dword ptr gs:[0x10]; 
0x000e7ea4: adc al, 0xb8; mov es, word ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00056f0d: adc al, 0xbd; add byte ptr [eax], 0; add byte ptr [ebx - 0x105b43], cl; dec dword ptr [edi]; dec ebp; ret 0xc701; 
0x0017b5c4: adc al, 0xbf; add byte ptr [eax], al; add ebp, esi; out dx, eax; call dword ptr [eax]; 
0x00056a6c: adc al, 0xc1; clc; add bh, byte ptr [ecx]; ret 0x1974; 
0x000a7da5: adc al, 0xc1; cli; add ebp, dword ptr [ecx]; ret 0x48d; 
0x000a3dbe: adc al, 0xc1; cli; sbb byte ptr [ebx - 0x77e7dbb4], cl; push esp; cmp eax, 0x83fa8900; ret 0x8901; 
0x0017bbc4: adc al, 0xc5; add byte ptr [eax], al; sal eax, -0x11; call dword ptr [eax]; 
0x0016e498: adc al, 0xc9; sti; jmp eax; 
0x0016be18: adc al, 0xc; clc; call esp; 
0x00166d84: adc al, 0xd; std; jmp esp; 
0x0016efb0: adc al, 0xdc; cld; jmp eax; 
0x00168ec0: adc al, 0xe5; out dx, eax; call eax; 
0x00002b7f: adc al, 0xe7; ret; 
0x0006896e: adc al, 0xe8; call dword ptr [ebx]; 
0x00077b6e: adc al, 0xe8; jmp dword ptr [ecx]; 
0x000740ca: adc al, 0xe8; mov dword ptr [0x81000b5c], eax; ret; 
0x000e37b4: adc al, 0xe8; mov ecx, 0x81000465; ret; 
0x000709ae: adc al, 0xe8; mov edi, 0x81000b93; ret; 
0x000327ae: adc al, 0xe8; mov edi, 0x81000f75; ret; 
0x000739af: adc al, 0xe8; mov esi, 0x81000b63; ret; 
0x000a4cab: adc al, 0xe8; ret 0x850; 
0x00040baa: adc al, 0xe8; ret; 
0x00070740: adc al, 0xe9; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x00073ba8: adc al, 0xe9; sar esi, -1; jmp dword ptr [esi - 0x70]; 
0x00173721: adc al, 0xec; call dword ptr [edi + 7]; 
0x0013804e: adc al, 0xee; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001775fd: adc al, 0xef; call esp; 
0x00169be1: adc al, 0xf1; call esp; 
0x00188130: adc al, 0xf3; call dword ptr [eax]; 
0x0016d438: adc al, 0xf3; stc; call esp; 
0x0016dd38: adc al, 0xf5; cli; call esp; 
0x0012bc24: adc al, 0xf6; ret 0x7502; 
0x00071361: adc al, 0xf6; ret 0xf02; 
0x00194005: adc al, 0xf7; call dword ptr [eax]; 
0x001940a5: adc al, 0xf7; call dword ptr [edx + 3]; 
0x0016b318: adc al, 0xf7; cmc; lcall ptr [esp + ecx - 0x81bfffe]; cmc; call eax; 
0x000f1274: adc al, 0xf; inc esi; inc esp; and al, 8; add esp, 0x1c; ret; 
0x0011ea95: adc al, 0xf; mov dh, 0xc0; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0002bfe9: adc al, 0xf; mov esi, 0x831f244c; ret 0x8001; 
0x000ab3ca: adc al, 0xf; sahf; ret 0xd129; 
0x00047fac: adc al, 0xf; sbb dword ptr [ebp - 0x38fffffc], 2; sub eax, 0x83000000; ret 0x8904; 
0x000a7115: adc al, 0xf; test esp, edx; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x0010bcc2: adc al, 0xf; xchg eax, esp; ret 0xc183; 
0x000b84a6: adc al, 0xf; xchg eax, esp; ret 0xd284; 
0x0016e7a1: adc al, 0xfc; call eax; 
0x0016e7c9: adc al, 0xfc; inc eax; cmp al, byte ptr [ebx]; add ah, al; adc al, 0xfc; jmp dword ptr [eax + 0x3f]; 
0x0016e7b9: adc al, 0xfc; jmp dword ptr [eax + 0x3a]; 
0x0016e7d1: adc al, 0xfc; jmp dword ptr [eax + 0x3f]; 
0x00165fec: adc al, 0xfc; push dword ptr [eax - 0x1f000330]; sar ah, 1; call dword ptr [eax]; 
0x00166fe5: adc al, 0xfd; inc dword ptr [eax + 0x15]; std; call eax; 
0x00169058: adc al, 0xfe; out dx, eax; dec dword ptr [esp + esi*8]; add byte ptr [esi + edi*8 - 0x11], al; jmp dword ptr [eax - 0xc]; 
0x0011b233: adc al, 0xff; inc dword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x000e1132: adc al, 1; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x118]; add esp, 0x11c; ret; 
0x000e3e67: adc al, 1; ret 0x2c6; 
0x000406c0: adc al, 1; ret 0x3ee9; 
0x00080e14: adc al, 1; ret 0x448b; 
0x000e401e: adc al, 1; ret 0xf889; 
0x0016b45d: adc al, 2; add byte ptr [ebp + ecx*2 - 0xa], dl; call dword ptr [eax]; 
0x0016b455: adc al, 2; add byte ptr [edi + eax*2 - 0xa], dl; dec esp; adc al, 2; add byte ptr [ebp + ecx*2 - 0xa], dl; call dword ptr [eax]; 
0x0016e00d: adc al, 3; add ah, dl; dec edi; sti; call esp; 
0x00135722: adc al, 3; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013576c: adc al, 3; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0016e005: adc al, 3; add byte ptr [edi + ecx*2 + 0x14bcfffb], al; add eax, dword ptr [eax]; aam 0x4f; sti; call esp; 
0x00122442: adc al, 3; inc ebp; sbb byte ptr [ecx], bh; ret 0x870f; 
0x0011f716: adc al, 4; mov eax, 1; ret; 
0x00168bd4: adc al, bl; add byte ptr [eax], al; add al, 0xdc; out dx, al; jmp esp; 
0x0017046d: adc al, byte ptr [eax]; add al, dh; xor ebp, ebx; jmp dword ptr [esi]; 
0x0009897a: adc al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000f0a72: adc al, byte ptr [eax]; add byte ptr [eax], al; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0a99: adc al, byte ptr [eax]; add byte ptr [eax], al; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00073529: adc al, byte ptr [eax]; mov dword ptr [ecx + 0x189c], 0; mov dword ptr [ecx + 0x18a0], 0; mov dword ptr [ecx + 0x18a4], 0; ret; 
0x00073439: adc al, byte ptr [eax]; mov eax, dword ptr [ecx + 0x96c]; ret; 
0x0000af70: adc al, byte ptr [eax]; or al, 0; fsub dword ptr [eax + eax]; add byte ptr [eax], dl; ret; 
0x00007960: adc al, byte ptr [eax]; or al, 0; mov cl, byte ptr [ebx]; add byte ptr [eax - 8], ah; adc dword ptr [eax], eax; ret; 
0x00009550: adc al, byte ptr [eax]; or al, 0; mov eax, dword ptr [0xd0000010]; ret 7; 
0x000081a0: adc al, byte ptr [eax]; or al, 0; pop ss; sub dword ptr [eax], eax; add byte ptr [eax], dl; ret; 
0x00009f80: adc al, byte ptr [eax]; or al, 0; ret 0x11; 
0x00009440: adc al, byte ptr [eax]; or al, 0; ret 0x38; 
0x00004230: adc al, byte ptr [eax]; or al, 0; ret 0x52; 
0x0000c700: adc al, byte ptr [eax]; or al, 0; ret 0x59; 
0x00007aa0: adc al, byte ptr [eax]; or al, 0; ret 0xc; 
0x0000b5a0: adc al, byte ptr [eax]; or al, 0; ret 8; 
0x0000c3f0: adc al, byte ptr [eax]; or al, 0; ret; 
0x0000cf10: adc al, byte ptr [eax]; or al, 0; xlatb; and al, 0; add byte ptr [eax], dl; ret; 
0x00004ffa: adc al, byte ptr [eax]; ret 2; 
0x0012c1f5: adc al, byte ptr [ebp - 0x74f18b0a]; pop esp; and al, 0x24; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0004bb3f: adc al, byte ptr [ebp - 0x76e18a2e]; ret 0x542b; 
0x00074f80: adc al, byte ptr [ebp - 0x76f58b2e]; inc esp; and al, 0x1c; call edx; 
0x0008ed00: adc al, byte ptr [ebx + 0x7f8d13eb]; adc ecx, dword ptr [edi]; test dword ptr [ebx + 0x5f000007], esp; pop esi; pop ebx; ret; 
0x0011016d: adc al, byte ptr [ebx + 0xd777ffa]; mov eax, edx; shl eax, 4; add eax, 8; ret; 
0x0002d340: adc al, byte ptr [ebx - 0x1621f33c]; pop esi; pop edi; ret; 
0x0016df8d: adc al, byte ptr [ebx]; add ah, dl; dec eax; sti; call dword ptr [eax + 0x12]; 
0x0013581b: adc al, byte ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0016dfad: adc al, byte ptr [ebx]; add byte ptr [edx + ecx*2], dl; sti; jmp esp; 
0x0008e37a: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, dword ptr [edx + 0xc]; pop edi; ret; 
0x0008e4da: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, dword ptr [edx + 0xc]; ret; 
0x00093eed: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd3a: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x0008ce9a: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x0008e39a: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, dword ptr [edx + 0xd]; pop edi; ret; 
0x0008e4fa: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, dword ptr [edx + 0xd]; ret; 
0x0008cd5a: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x0008ceba: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x0008e3ba: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x0008e51a: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, dword ptr [edx + 0xe]; ret; 
0x0008cd7a: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x0008ceda: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x0008e249: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, dword ptr [edx + 0xf]; pop edi; ret; 
0x0008e53a: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, dword ptr [edx + 0xf]; ret; 
0x0008cc29: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x0008cefa: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x00089bc2: adc al, byte ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, dword ptr [edx + 8]; ret; 
0x000857e2: adc al, byte ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x00089c02: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, dword ptr [edx + 0xa]; ret; 
0x00085822: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x00089c22: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; ret; 
0x00085842: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00089972: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, dword ptr [edx + 7]; pop edi; ret; 
0x00089bb2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, dword ptr [edx + 7]; ret; 
0x0008b79d: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, dword ptr [edx + 8]; pop edi; pop ebx; ret; 
0x0014a312: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00093d33: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000873ad: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000855b2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000883d7: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000857d2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0008e4d2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, dword ptr [edx + 0xc]; ret; 
0x0008ce92: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x0008e4f2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, dword ptr [edx + 0xd]; ret; 
0x0008ceb2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x0008e512: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, dword ptr [edx + 0xe]; ret; 
0x0008ced2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x0008e532: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, dword ptr [edx + 0xf]; ret; 
0x0008cef2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x00089c42: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x00085862: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x00089c62: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x00085882: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x00089c82: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, dword ptr [edx + 0xe]; ret; 
0x000858a2: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x00091642: adc al, byte ptr [esi]; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094a95: adc al, byte ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091632: adc al, byte ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008d962: adc al, byte ptr [esi]; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x00187fa3: adc al, byte ptr [esi]; ret; 
0x0017da10: adc al, ch; add byte ptr [eax], al; pushfd; or dh, al; call dword ptr [ecx]; 
0x0009486c: adc al, ch; add eax, 0x81000955; rcl dword ptr [edx + 0x3000c60], 0xc; xchg eax, ecx; jmp ecx; 
0x0009156c: adc al, ch; add eax, 0x81000988; rcl dword ptr [edx], -0x6d; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008f536: adc al, ch; cmp ebp, dword ptr [eax - 0x3e7efff7]; add al, 0xb3; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000f06ca: adc al, ch; mov dword ptr [0x81000396], eax; ret; 
0x0005baae: adc al, ch; mov edi, 0x81000ce2; ret; 
0x0012adae: adc al, ch; mov edi, 0x81ffffef; ret; 
0x000df0b1: adc al, ch; mov esp, 0x810004ac; ret; 
0x000dde64: adc al, ch; or dword ptr [edi - 0x3c7efffc], edi; mov dl, byte ptr [ecx + 0xc]; add byte ptr [ebx - 0x78f3dbac], cl; sar dword ptr [eax + 0xc5], cl; call dword ptr gs:[0x10]; 
0x0008de07: adc al, ch; push -0x41; or dword ptr [eax], eax; add ecx, 0xcc8d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008f507: adc al, ch; push -0x58; or dword ptr [eax], eax; add ecx, 0xcb333; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000e95aa: adc al, ch; ret; 
0x001691a1: adc al, dh; call dword ptr [eax - 5]; 
0x00095c75: adc al, dh; ret; 
0x00066c80: adc bh, al; inc esp; and al, 0xc; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [eax + 0x24]; 
0x0010f3b7: adc bh, bh; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x00003baf: adc bh, byte ptr [eax]; cwde; ret; 
0x00167328: adc bh, byte ptr [ebx]; std; jmp dword ptr [edx + 0x3b]; 
0x0001e12f: adc bh, byte ptr [ecx]; ret 0x5489; 
0x0010d8fc: adc bh, ch; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x0016b6f9: adc bh, dh; call esp; 
0x00074cf9: adc bh, dh; fsub dword ptr [ecx]; ret 0x5489; 
0x0010b15c: adc bh, dh; ret 0x8080; 
0x0002d9a3: adc bl, bl; insb byte ptr es:[edi], dx; and al, 4; fscale; fstp st(1); ret; 
0x0002da19: adc bl, bl; insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [eax], ecx; ret; 
0x00167768: adc bl, byte ptr [ebp - 3]; jmp dword ptr [edx + 0x5d]; 
0x0008f172: adc bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x000917f6: adc bl, byte ptr [esi + 0xf]; movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0007eb92: adc bl, ch; ret; 
0x00187599: adc bl, dh; call dword ptr [ebx]; 
0x00091796: adc bl, dh; movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00091757: adc bl, dh; movq qword ptr [eax], mm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00091918: adc bl, dh; movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00091818: adc bl, dh; movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000e9925: adc bl, dh; ret; 
0x0016d330: adc bl, dl; stc; jmp dword ptr [eax - 0x3b]; 
0x000ec4c1: adc byte ptr [0x489fffc], ch; and al, 0xe8; mov bl, 0x24; clc; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x77]; 
0x0002dae1: adc byte ptr [0x8000], ah; ret; 
0x000ef6b9: adc byte ptr [eax + 0x100], bh; call dword ptr gs:[0x10]; 
0x000eb2f6: adc byte ptr [eax + 0x101], bh; call dword ptr gs:[0x10]; 
0x000efc49: adc byte ptr [eax + 0x13b], bh; call dword ptr gs:[0x10]; 
0x000efd59: adc byte ptr [eax + 0x13c], bh; call dword ptr gs:[0x10]; 
0x000efec6: adc byte ptr [eax + 0x155], bh; call dword ptr gs:[0x10]; 
0x000ef8e6: adc byte ptr [eax + 0x15], bh; call dword ptr gs:[0x10]; 
0x00094c43: adc byte ptr [eax + 0x448b1470], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000917bd: adc byte ptr [eax + 0x448b1470], cl; and al, 8; pop esi; ret; 
0x00094cc7: adc byte ptr [eax + 0x448b1870], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x00091841: adc byte ptr [eax + 0x448b1870], cl; and al, 8; pop esi; ret; 
0x0008f254: adc byte ptr [eax + 0x478d184f], cl; sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x0008daf0: adc byte ptr [eax + 0x5e5f1457], cl; pop ebx; ret; 
0x0008db74: adc byte ptr [eax + 0x5e5f184f], cl; pop ebx; ret; 
0x0008dc74: adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x0008305c: adc byte ptr [eax + 0x77072454], cl; dec ebp; mov edi, dword ptr [esp + 0x40]; mov edx, ebx; sub edx, dword ptr [ebx + edi*4 - 0x11ff80]; jmp edx; 
0x0007c5a7: adc byte ptr [eax + 0x8021144], cl; sal byte ptr [esp + eax - 0x78], 0x64; adc dword ptr [ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000ef756: adc byte ptr [eax + 0x80], bh; call dword ptr gs:[0x10]; 
0x000e7e70: adc byte ptr [eax + 0x8e], bh; call dword ptr gs:[0x10]; 
0x000ef936: adc byte ptr [eax + 0xa3], bh; call dword ptr gs:[0x10]; 
0x000efa96: adc byte ptr [eax + 0xa7], bh; call dword ptr gs:[0x10]; 
0x000efa46: adc byte ptr [eax + 0xac], bh; call dword ptr gs:[0x10]; 
0x00123dd6: adc byte ptr [eax + 0xbc], bh; call dword ptr gs:[0x10]; 
0x00123e96: adc byte ptr [eax + 0xbd], bh; call dword ptr gs:[0x10]; 
0x000ed726: adc byte ptr [eax + 0xe2], bh; call dword ptr gs:[0x10]; 
0x000ed696: adc byte ptr [eax + 0xe3], bh; call dword ptr gs:[0x10]; 
0x000ed4e6: adc byte ptr [eax + 0xe4], bh; call dword ptr gs:[0x10]; 
0x0012e526: adc byte ptr [eax + 0xfa], bh; call dword ptr gs:[0x10]; 
0x0011451f: adc byte ptr [eax + 1], bh; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x00114569: adc byte ptr [eax + 1], bh; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x001149c2: adc byte ptr [eax + 1], bh; pop esi; pop edi; pop ebp; ret; 
0x0017a2c0: adc byte ptr [eax + eax - 0x106c8200], ch; call dword ptr [eax]; 
0x000631ca: adc byte ptr [eax - 0x4f14f3b2], cl; mov eax, ebx; sub eax, dword ptr [ebx + ecx*4 - 0x13fe18]; jmp eax; 
0x0007d04e: adc byte ptr [eax - 0x80], al; stc; add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x00095ca5: adc byte ptr [eax], ah; ret; 
0x001671a0: adc byte ptr [eax], ah; std; call eax; 
0x001671a0: adc byte ptr [eax], ah; std; call eax; and bh, ch; jmp dword ptr [eax + 0x23]; 
0x00009555: adc byte ptr [eax], al; add al, dl; ret 7; 
0x000e5dd1: adc byte ptr [eax], al; add bl, dh; ret; 
0x0018e1d0: adc byte ptr [eax], al; add byte ptr [eax], al; aam 0xef; add dword ptr [eax], eax; sub byte ptr [esi + esi*8], cl; call dword ptr [edi]; 
0x00067c49: adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbb4], cl; adc al, 0x24; call eax; 
0x000990f3: adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbbc], cl; cmp al, 0x24; call esi; 
0x00098f63: adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbbc], cl; cmp al, 0x24; call esi; 
0x00099691: adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbbc], cl; cmp al, 0x24; mov dword ptr [esp + 8], edx; call esi; 
0x0003fa5c: adc byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x00170d20: adc byte ptr [eax], al; add byte ptr [eax], al; and al, 0x1b; add byte ptr [eax], al; sub byte ptr [ebx - 0x15], ah; call dword ptr [ebx]; 
0x0018bde4: adc byte ptr [eax], al; add byte ptr [eax], al; call 0xd418bfb8; lahf; cmc; call dword ptr [esi]; 
0x001992f4: adc byte ptr [eax], al; add byte ptr [eax], al; clc; mov al, byte ptr [0x44640002]; clc; call dword ptr [ecx]; 
0x0017aa44: adc byte ptr [eax], al; add byte ptr [eax], al; dec eax; mov eax, 0x89e40000; out dx, eax; call dword ptr [edx]; 
0x00170c44: adc byte ptr [eax], al; add byte ptr [eax], al; dec eax; sbb al, byte ptr [eax]; add byte ptr [edx - 0x15], dl; jmp dword ptr [eax]; 
0x00170be0: adc byte ptr [eax], al; add byte ptr [eax], al; in al, 0x19; add byte ptr [eax], al; fsub dword ptr [ecx - 0x15]; jmp dword ptr [eax]; 
0x000f04d2: adc byte ptr [eax], al; add byte ptr [eax], al; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f04f9: adc byte ptr [eax], al; add byte ptr [eax], al; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00188984: adc byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [edi + 0x17640001], dl; hlt; jmp dword ptr [eax]; 
0x00066063: adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x000b85d0: adc byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; int 0x80; 
0x000de56e: adc byte ptr [eax], al; add byte ptr [eax], al; mov ebx, edx; ret; 
0x0011321b: adc byte ptr [eax], al; add byte ptr [eax], al; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x00170c08: adc byte ptr [eax], al; add byte ptr [eax], al; or al, 0x1a; add byte ptr [eax], al; add byte ptr [edx - 0x15], ah; jmp dword ptr [edx]; 
0x001491db: adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x000fc1ed: adc byte ptr [eax], al; add byte ptr [eax], al; pop edx; pop ecx; pop ebx; ret; 
0x00170d5c: adc byte ptr [eax], al; add byte ptr [eax], al; pushal; sbb eax, dword ptr [eax]; add byte ptr [ebx - 0x15], cl; call dword ptr [ebx]; 
0x00199b5c: adc byte ptr [eax], al; add byte ptr [eax], al; pushal; test eax, 0x5bbc0002; clc; call dword ptr [ecx]; 
0x00179298: adc byte ptr [eax], al; add byte ptr [eax], al; pushfd; mov al, byte ptr [0x51700000]; out dx, eax; jmp dword ptr [ebx]; 
0x0015b50d: adc byte ptr [eax], al; add byte ptr [eax], al; ret 1; 
0x000b9088: adc byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00176f18: adc byte ptr [eax], al; add byte ptr [eax], al; sbb al, 0x7d; add byte ptr [eax], al; ror byte ptr [ecx], 0xef; jmp dword ptr [ebx]; 
0x00179b80: adc byte ptr [eax], al; add byte ptr [eax], al; test byte ptr [ecx + 0x60480000], ch; out dx, eax; call dword ptr [eax]; 
0x000eedf0: adc byte ptr [eax], al; add byte ptr [eax], al; xchg ebx, ecx; ret; 
0x000c5b3e: adc byte ptr [eax], al; add byte ptr [eax], al; xchg ebx, edi; neg eax; pop edi; ret; 
0x00170c30: adc byte ptr [eax], al; add byte ptr [eax], al; xor al, 0x1a; add byte ptr [eax], al; cmp byte ptr [edx - 0x15], ah; jmp dword ptr [edx]; 
0x000dfec9: adc byte ptr [eax], al; add byte ptr [ebx + 0x101424b4], cl; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x1018]; add esp, 0x101c; ret; 
0x000dfed0: adc byte ptr [eax], al; add byte ptr [ebx + 0x101824bc], cl; add byte ptr [eax], al; add esp, 0x101c; ret; 
0x00054df2: adc byte ptr [eax], al; add byte ptr [ebx + 0x102424b4], cl; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x1028]; add esp, 0x102c; ret; 
0x00054df9: adc byte ptr [eax], al; add byte ptr [ebx + 0x102824bc], cl; add byte ptr [eax], al; add esp, 0x102c; ret; 
0x00054af4: adc byte ptr [eax], al; add byte ptr [ebx + 0x103424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x1038]; add esp, 0x103c; ret; 
0x00054afb: adc byte ptr [eax], al; add byte ptr [ebx + 0x103824ac], cl; add byte ptr [eax], al; add esp, 0x103c; ret; 
0x0013b2ac: adc byte ptr [eax], al; add byte ptr [ebx + 0x1c740fe7], al; call 0x129d73; add ebx, 0x2c327; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00136bdc: adc byte ptr [eax], al; add byte ptr [ebx + 0x1c740fe7], al; call 0x129d73; add ebx, 0x30237; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0013575c: adc byte ptr [eax], al; add byte ptr [ebx + 0x1c740fe7], al; call 0x129d73; add ebx, 0x31437; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x001342cc: adc byte ptr [eax], al; add byte ptr [ebx + 0x1c740fe7], al; call 0x129d73; add ebx, 0x32647; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00028ab9: adc byte ptr [eax], al; add byte ptr [ebx + 0x390c83], cl; add byte ptr [ecx - 0x373edbec], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x00024023: adc byte ptr [eax], al; add byte ptr [ebx + 0x391083], cl; add byte ptr [ecx - 0x373edbec], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x00023ed3: adc byte ptr [eax], al; add byte ptr [ebx + 0x391483], cl; add byte ptr [ecx - 0x373edbec], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x0003c455: adc byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0014434e: adc byte ptr [eax], al; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0005a49c: adc byte ptr [eax], al; add byte ptr [ebx - 0x109b43], al; call dword ptr [eax]; 
0x0009f318: adc byte ptr [eax], al; add byte ptr [ebx - 0x76b3dbbc], cl; ret 0xfac1; 
0x00054304: adc byte ptr [eax], al; add byte ptr [ecx - 0x7c878836], cl; ret 0x830f; 
0x0005452b: adc byte ptr [eax], al; add byte ptr [ecx - 0x7cad8836], cl; ret 0x830f; 
0x000e20ec: adc byte ptr [eax], al; add byte ptr [ecx], al; sar byte ptr [0x1000], 0xf; inc edx; ret 0x4589; 
0x000e20f3: adc byte ptr [eax], al; add byte ptr [edi], cl; inc edx; ret 0x4589; 
0x00043660: adc byte ptr [eax], al; add byte ptr [edi], cl; xchg dword ptr [eax - 0x7cfffffc], esi; ret 0x830f; 
0x00060c30: adc byte ptr [eax], al; add byte ptr [edi], cl; xchg dword ptr [ecx - 0x7d000000], edx; ret 0x830f; 
0x000bda47: adc byte ptr [eax], al; add byte ptr [edi], cl; xchg dword ptr [esi - 0x76fffffc], eax; loope 0xbd9d6; ret 0x831e; 
0x000be1f7: adc byte ptr [eax], al; add byte ptr [edi], cl; xchg dword ptr [esi - 0x76fffffc], eax; loope 0xbe186; ret 0x831e; 
0x00025bdd: adc byte ptr [eax], al; add byte ptr [edx + 0x20], dh; mov ecx, dword ptr [ebp - 0x1d4]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x00027263: adc byte ptr [eax], al; add ecx, 0x17bd8f; mov eax, dword ptr [ecx - 0x90]; add eax, dword ptr gs:[0]; ret; 
0x00027243: adc byte ptr [eax], al; add ecx, 0x17bdaf; mov eax, dword ptr [ecx - 0xc0]; add eax, dword ptr gs:[0]; ret; 
0x00027223: adc byte ptr [eax], al; add ecx, 0x17bdcf; mov eax, dword ptr [ecx - 0x130]; add eax, dword ptr gs:[0]; ret; 
0x000231a3: adc byte ptr [eax], al; add ecx, 0x17fe4f; mov eax, dword ptr [ecx + 0xfe4]; ret; 
0x0001af93: adc byte ptr [eax], al; add ecx, 0x18805f; mov eax, dword ptr [ecx + 0x36c0]; ret; 
0x0001af73: adc byte ptr [eax], al; add ecx, 0x18807f; mov eax, dword ptr [ecx + 0x36c8]; ret; 
0x00023910: adc byte ptr [eax], al; mov dword ptr [esi + 8], 0; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0001aff6: adc byte ptr [eax], al; mov dword ptr [esp], esi; call edi; 
0x0001b42b: adc byte ptr [eax], al; mov eax, dword ptr [ebp - 0x64]; mov dword ptr [esp], esi; call eax; 
0x0003ea65: adc byte ptr [eax], al; mov edx, esi; xchg edi, ebx; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x00008fea: adc byte ptr [eax], al; ret 0; 
0x00138e84: adc byte ptr [eax], bh; ret 0x840f; 
0x000dfec8: adc byte ptr [eax], dl; add byte ptr [eax], al; mov esi, dword ptr [esp + 0x1014]; mov edi, dword ptr [esp + 0x1018]; add esp, 0x101c; ret; 
0x00095c95: adc byte ptr [eax], dl; ret; 
0x0006c114: adc byte ptr [ebp + 0x11], dh; sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sar edx, 2; sub eax, edx; ret; 
0x0006de7b: adc byte ptr [ebp + 0x39002674], cl; ret 0x4b73; 
0x0008f14d: adc byte ptr [ebp + 0x5e5f1147], cl; pop ebx; ret; 
0x0008f16f: adc byte ptr [ebp + 0x5e5f1247], cl; pop ebx; ret; 
0x0008f1ad: adc byte ptr [ebp + 0x5e5f1447], cl; pop ebx; ret; 
0x0008f231: adc byte ptr [ebp + 0x5e5f1847], cl; pop ebx; ret; 
0x0008f341: adc byte ptr [ebp + 0x5e5f2047], cl; pop ebx; ret; 
0x0011186b: adc byte ptr [ebp + 0x842494], cl; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 4]; 
0x0008ef71: adc byte ptr [ebp - 0x147ce0b9], cl; and byte ptr [ebp - 0x7af0df81], cl; das; add eax, 0x5e5f0000; pop ebx; ret; 
0x0008bf53: adc byte ptr [ebp - 0x1b160fa5], cl; idiv edi; jmp dword ptr [esi + 0xf]; 
0x00167988: adc byte ptr [ebp - 0x69df0004], 0xfc; call eax; 
0x00167988: adc byte ptr [ebp - 0x69df0004], 0xfc; call eax; xchg eax, esi; cld; jmp dword ptr [eax - 0x69]; 
0x00112336: adc byte ptr [ebp - 0x74c28a40], al; inc edi; add al, 0x89; cmp al, 0x24; call dword ptr [eax + 0x10]; 
0x00112114: adc byte ptr [ebp - 0x74e88a40], al; inc edi; add al, 0x89; cmp al, 0x24; call dword ptr [eax + 0x10]; 
0x00148f0d: adc byte ptr [ebp - 0x74f18a2e], al; inc esp; and al, 0xc; pop edi; ret; 
0x000205eb: adc byte ptr [ebp - 0x760376b4], cl; ret 0xead3; 
0x001118c2: adc byte ptr [ebp - 0x76dbdb94], cl; cmp al, 0x24; call dword ptr [eax + 0x10]; 
0x001153ce: adc byte ptr [ebp - 0x77], ah; mov esi, dword ptr ds:[esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00144347: adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x0013f243: adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x000871fc: adc byte ptr [ebp - 0x7af0efb6], cl; mov al, byte ptr [0x5b5f0000]; ret; 
0x00098528: adc byte ptr [ebp - 0x7ccc8b0a], al; ret 0x8310; 
0x001959e9: adc byte ptr [ebp - 0xa], cl; jmp dword ptr [edx]; 
0x000999a6: adc byte ptr [ebp - 0xc128a2e], al; ret; 
0x001675bc: adc byte ptr [ebp - 3], cl; jmp dword ptr [eax]; 
0x00174981: adc byte ptr [ebx + 0x300e4304], al; add ah, byte ptr [ecx + 0x43100e0a]; ret; 
0x001127b7: adc byte ptr [ebx + 0x3c890457], cl; and al, 0x89; inc esp; and al, 0x2c; call dword ptr [edx + 0x10]; 
0x0011b2cb: adc byte ptr [ebx + 0x4508b06], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x00114ac5: adc byte ptr [ebx + 0x48892434], cl; sbb byte ptr [eax + 1], bh; add esp, 8; ret; 
0x00095ae2: adc byte ptr [ebx + 0x58ebf0e2], al; nop; lea esi, dword ptr [esi]; xor eax, eax; ret; 
0x000949f8: adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000915c5: adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x000f2016: adc byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000720bf: adc byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000f688f: adc byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x00091569: adc byte ptr [ebx + 0x5e810c0], al; mov byte ptr [ecx], cl; add byte ptr [ecx + 0xc9312c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00094869: adc byte ptr [ebx + 0x5e810c0], al; push ebp; or dword ptr [eax], eax; add ecx, 0xc6092; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0007cb82: adc byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00016fe7: adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000d89f6: adc byte ptr [ebx + 0x66082444], cl; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000f8b4b: adc byte ptr [ebx + 0x74000878], al; push es; xor eax, eax; ret; 
0x000c77d5: adc byte ptr [ebx + 0x7c899075], cl; and al, 0xc; mov dword ptr [esp + 8], eax; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [ebp - 0x50]; 
0x001141b7: adc byte ptr [ebx + 0x7c8b2434], cl; and al, 4; add esp, 8; ret; 
0x000828cc: adc byte ptr [ebx + 0x7c8b2434], cl; and al, 4; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0004c5ac: adc byte ptr [ebx + 0x7e800c7d], cl; inc esi; add byte ptr [ecx - 0x1cf73], cl; dec dword ptr [ebx - 0x1577d]; jmp dword ptr [ebp - 0x75]; 
0x000b37ee: adc byte ptr [ebx + 0x9824b4], cl; add byte ptr [eax], al; add esp, 0x9c; ret; 
0x0002f136: adc byte ptr [ebx + 0xa82484], cl; add byte ptr [eax], al; mov dword ptr [esp + 0x14], eax; xchg edi, ebx; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0018e4f1: adc byte ptr [ebx + 0xc0e5d04], al; ret; 
0x0018b4a9: adc byte ptr [ebx + 0xc0e6104], al; ret; 
0x0017cf19: adc byte ptr [ebx + 0xc0e6704], al; ret; 
0x00198e55: adc byte ptr [ebx + 0xc0e7e04], al; ret; 
0x00127953: adc byte ptr [ebx + 0xcc48300], cl; ret; 
0x0018f00b: adc byte ptr [ebx + eax*4 + 3], al; push ebp; xchg byte ptr [edx], al; push cs; add al, 0xc6; ret; 
0x0015a694: adc byte ptr [ebx + esi*8], dh; push dword ptr [eax]; xor al, 0xf3; call dword ptr [eax + 0x34]; 
0x000f9511: adc byte ptr [ebx - 0x12f7d], cl; jmp dword ptr [ebp - 0x75]; 
0x00095eb7: adc byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x0011b92c: adc byte ptr [ebx - 0x17b7db8c], cl; cmp eax, 0x810000e4; ret; 
0x00038bb0: adc byte ptr [ebx - 0x17bbdbac], cl; mov ecx, 0x81000f11; ret; 
0x00078f59: adc byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x7d]; 
0x00091502: adc byte ptr [ebx - 0x43f0ef40], al; shr al, cl; imul ecx, dword ptr [eax - 0x3e7efff7], 0xc9376; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000dec9a: adc byte ptr [ebx - 0x47f3dba4], cl; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ef687: adc byte ptr [ebx - 0x47f3dba4], cl; add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000dec1a: adc byte ptr [ebx - 0x47f3dba4], cl; add eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000efd27: adc byte ptr [ebx - 0x47f3dba4], cl; cmp al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000efc17: adc byte ptr [ebx - 0x47f3dba4], cl; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ed52d: adc byte ptr [ebx - 0x47f3dba4], cl; in eax, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ef62d: adc byte ptr [ebx - 0x47f3dba4], cl; inc dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ed5bd: adc byte ptr [ebx - 0x47f3dba4], cl; out 0, al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ed40d: adc byte ptr [ebx - 0x47f3dba4], cl; out 0, eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ca363: adc byte ptr [ebx - 0x74ebdb84], cl; insb byte ptr es:[edi], dx; and al, 0x18; add esp, 0x1c; ret 0xc; 
0x00019d8b: adc byte ptr [ebx - 0x74ebdb84], cl; insb byte ptr es:[edi], dx; and al, 0x18; add esp, 0x1c; ret; 
0x000ef794: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x000dece4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x13; call dword ptr gs:[0x10]; 
0x000df534: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x000eff0e: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000e6d04: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000e0a74: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000e6ac4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x000eea14: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x000ef894: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000aac44: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000ef234: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x000eb1a4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x000ef524: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000ef564: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000eb1ee: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000c5434: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000ef974: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eb2a4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x000eb264: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000ed574: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x000ed604: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x000ed454: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000debee: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 3; call dword ptr gs:[0x10]; 
0x000dec6e: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 4; call dword ptr gs:[0x10]; 
0x000de74e: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 5; call dword ptr gs:[0x10]; 
0x000b7cfe: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 7; call dword ptr gs:[0x10]; 
0x000ddae4: adc byte ptr [ebx - 0x74f3dbbc], cl; pop esp; and al, 0x10; mov edi, dword ptr [esp + 0x14]; add esp, 0x18; ret; 
0x0006b67f: adc byte ptr [ebx - 0x74f7c3b2], al; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0006cf4f: adc byte ptr [ebx - 0x76c3db84], cl; cmp al, 0x24; call dword ptr [edi + 0xc]; 
0x00019853: adc byte ptr [ebx - 0x76cbdbac], cl; push esp; and al, 4; mov edx, dword ptr [esp + 0x30]; mov dword ptr [esp], edx; call eax; 
0x00112659: adc byte ptr [ebx - 0x76e7dbb4], cl; ret 0x442b; 
0x000e709a: adc byte ptr [ebx - 0x76ebdb84], cl; pop esp; and al, 0x2c; mov ebx, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000e75fa: adc byte ptr [ebx - 0x76ebdb84], cl; pop esp; and al, 0x2c; mov ebx, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000d9365: adc byte ptr [ebx - 0x76fbdbbc], cl; nop; or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x000de62c: adc byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0x132]; call dword ptr gs:[0x10]; 
0x00087ab3: adc byte ptr [ebx - 0x79f0ef15], al; cmp eax, -1; inc dword ptr [ebp + 0x2b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0011aac3: adc byte ptr [ebx - 0x79f0f406], al; sbb eax, 0x83fffffe; ret 0x8303; 
0x000969bd: adc byte ptr [ebx - 0x7ce7dbac], cl; rol byte ptr [ecx], 0x83; ret 0x3901; 
0x000aa90b: adc byte ptr [ebx - 0x7ce7dbbc], cl; ret 0x3909; 
0x000d715b: adc byte ptr [ebx - 0x8f7d], cl; jmp dword ptr [ebp - 0x75]; 
0x000a5811: adc byte ptr [ebx - 0xf76db3c], al; pop ebx; pop esi; ret; 
0x00135a23: adc byte ptr [ebx], al; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00047fa9: adc byte ptr [ebx], bh; push eax; adc al, 0xf; sbb dword ptr [ebp - 0x38fffffc], 2; sub eax, 0x83000000; ret 0x8904; 
0x00040a90: adc byte ptr [ecx + 0x24442be8], cl; and al, 1; ret 0x448b; 
0x0006c0c5: adc byte ptr [ecx + 0x307e8907], cl; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00198310: adc byte ptr [ecx + 0x43c0002], dl; clc; jmp dword ptr [esi + 2]; 
0x0011ba84: adc byte ptr [ecx + 0x4468bc7], cl; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0011263e: adc byte ptr [ecx + 0x44892434], cl; and al, 4; call dword ptr [edi + 0x14]; 
0x00112fca: adc byte ptr [ecx + 0x4489243c], cl; and al, 4; call dword ptr [esi + 0x14]; 
0x00094d27: adc byte ptr [ecx + 0x448b1748], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x00091884: adc byte ptr [ecx + 0x448b1748], cl; and al, 8; pop esi; ret; 
0x00094d57: adc byte ptr [ecx + 0x448b1848], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000918a4: adc byte ptr [ecx + 0x448b1848], cl; and al, 8; pop esi; ret; 
0x0008f2c4: adc byte ptr [ecx + 0x478d184f], cl; sbb al, 0x5f; pop esi; pop ebx; ret; 
0x000ce0cc: adc byte ptr [ecx + 0x508b104a], cl; or byte ptr [ebp - 0x74f98b2e], al; inc eax; adc byte ptr [ecx - 0x3fceefbe], cl; pop esi; ret; 
0x000bdaea: adc byte ptr [ecx + 0x51ff2404], cl; adc al, 0x89; ret 0x76e9; 
0x0011184e: adc byte ptr [ecx + 0x5489243c], cl; and al, 8; mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x0011ed0b: adc byte ptr [ecx + 0x5d5f5ed0], cl; ret; 
0x0007fb5f: adc byte ptr [ecx + 0x5d5f5ee8], cl; ret; 
0x00027a08: adc byte ptr [ecx + 0x5d5f5ef0], cl; ret 4; 
0x000ceca4: adc byte ptr [ecx + 0x5d5f5ef0], cl; ret 8; 
0x00097dd4: adc byte ptr [ecx + 0x5d5f5ef0], cl; ret; 
0x0008dbb4: adc byte ptr [ecx + 0x5e5f174f], cl; pop ebx; ret; 
0x0008dbd4: adc byte ptr [ecx + 0x5e5f184f], cl; pop ebx; ret; 
0x00027a1a: adc byte ptr [ecx + 0x5ef089c6], cl; pop edi; pop ebp; ret 4; 
0x0011c5b1: adc byte ptr [ecx + 0x5f5e5b0a], cl; ret; 
0x000e9e14: adc byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x000f8eb9: adc byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x0006a089: adc byte ptr [ecx + 0x748b1446], cl; and al, 0x18; add esp, 0x1c; ret; 
0x00069467: adc byte ptr [ecx + 0x7c8b1857], cl; and al, 0x28; mov dword ptr [esi + 0xc], edx; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; ret; 
0x0007ce4c: adc byte ptr [ecx + 0xf04247c], cl; inc edi; ret 0x4489; 
0x0010510f: adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x45; ret 0x90c3; 
0x0008d7e4: adc byte ptr [ecx - 0x147ce8b1], cl; sbb ecx, dword ptr [ebp - 0x7af0e481]; mov esp, 0x5f000005; pop esi; pop ebx; ret; 
0x000772aa: adc byte ptr [ecx - 0x17fbdba4], cl; mov edi, 0x81000b2a; ret; 
0x0008060d: adc byte ptr [ecx - 0x3b7cf7b8], cl; and al, 0x5e; pop edi; pop ebp; ret; 
0x0007c378: adc byte ptr [ecx - 0x3b7cfbba], cl; adc byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x000ce0d9: adc byte ptr [ecx - 0x3fceefbe], cl; pop esi; ret; 
0x00179fc0: adc byte ptr [ecx - 0x6a5e0000], ch; out dx, eax; call dword ptr [eax]; 
0x0001a662: adc byte ptr [ecx - 0x72fbdbac], cl; push ebp; in al, 0x89; adc al, 0x24; call eax; 
0x0006cada: adc byte ptr [ecx - 0x742f763e], cl; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00112637: adc byte ptr [ecx - 0x74e3dbbc], cl; inc edi; adc byte ptr [ecx + 0x44892434], cl; and al, 4; call dword ptr [edi + 0x14]; 
0x00066a31: adc byte ptr [ecx - 0x76f3db84], cl; push esp; and al, 4; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x0012b75c: adc byte ptr [ecx - 0x76f7dbac], cl; inc esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [ecx + 0x38]; 
0x000bba22: adc byte ptr [ecx - 0x76fbdbbc], cl; xor al, 0x24; call dword ptr [ecx + 0x20]; 
0x000e0e1d: adc byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e112b: adc byte ptr [ecx], al; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x114]; mov ebp, dword ptr [esp + 0x118]; add esp, 0x11c; ret; 
0x00095096: adc byte ptr [ecx], al; clc; pop edi; ret; 
0x00095895: adc byte ptr [ecx], al; ret 0x67c; 
0x00024028: adc byte ptr [ecx], bh; add byte ptr [eax], al; mov dword ptr [esp], edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0006dbe2: adc byte ptr [ecx], bh; push eax; or al, 0xf; xchg eax, esp; ret 0xb60f; 
0x0012baff: adc byte ptr [ecx], bh; ret 0x2477; 
0x00070209: adc byte ptr [ecx], bh; ret 0x3776; 
0x0006c057: adc byte ptr [ecx], bh; sal dword ptr [edx - 0xc], 1; mov eax, dword ptr [esp + 8]; add eax, esi; pop esi; ret; 
0x00101955: adc byte ptr [ecx], ch; ret 0x7c8d; 
0x00033638: adc byte ptr [ecx], ch; ret 0xc269; 
0x00049eb4: adc byte ptr [ecx], ch; ret 0xd089; 
0x001480d9: adc byte ptr [ecx], ch; ret 0xe183; 
0x00019c66: adc byte ptr [ecx], cl; aad 0x89; ret 0x6c89; 
0x000dffc3: adc byte ptr [ecx], cl; ret 0xb175; 
0x00117c68: adc byte ptr [ecx], cl; ret 0xb60f; 
0x0014b142: adc byte ptr [ecx], dh; dec dword ptr [ecx + 0x5f5e5bf8]; ret; 
0x00104ffc: adc byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000a573a: adc byte ptr [ecx], dh; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x0012aa12: adc byte ptr [ecx], dh; ror byte ptr [ebx - 0x74dfdba4], 0x74; and al, 0x24; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x00071f10: adc byte ptr [ecx], dh; ror byte ptr [ecx + 0x18c48316], 0x5e; ret; 
0x000de8a8: adc byte ptr [edi + 0x127b8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00055568: adc byte ptr [edi + 0x12eb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e0ad8: adc byte ptr [edi + 0x131b8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e140c: adc byte ptr [edi + 0x140b8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001028e7: adc byte ptr [edi + 0x3b8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ecb3b: adc byte ptr [edi + 0x3eb8d3], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0018a110: adc byte ptr [edi + 0x3ecc0001], ch; cli; call dword ptr [eax]; 
0x00102aa7: adc byte ptr [edi + 0x55b8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008b81f: adc byte ptr [edi + 0x5b], bl; ret; 
0x0011d83c: adc byte ptr [edi + 0x5c8bffef], dl; and al, 0x10; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0008da6d: adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00083faa: adc byte ptr [edi + 0x5e], bl; ret; 
0x000ddc17: adc byte ptr [edi + 0xc3b8d3], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ddd97: adc byte ptr [edi + 0xc4b8d3], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ddcd7: adc byte ptr [edi + 0xc5b8d3], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000eeda8: adc byte ptr [edi + 0xe1b8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ddf10: adc byte ptr [edi + 0xeb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00194980: adc byte ptr [edi + 2], 0; lodsb al, byte ptr [esi]; and esi, edi; jmp dword ptr [edi]; 
0x0000225b: adc byte ptr [edi - 0x29efd780], al; ret; 
0x001866d1: adc byte ptr [edi - 0xe], ah; jmp dword ptr [edx]; 
0x00166ff8: adc byte ptr [edi], 0xfd; call dword ptr [eax]; 
0x00133147: adc byte ptr [edi], cl; and dl, 0xf2; cld; jmp dword ptr [esi - 0x70]; 
0x00094805: adc byte ptr [edi], cl; mov esp, 0x5569e8d2; or dword ptr [eax], eax; add ecx, 0xc60f6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000955b2: adc byte ptr [edi], cl; mov esp, 0x76c229c0; lea eax, dword ptr es:[edi + eax + 0x10]; pop edi; ret; 
0x00091505: adc byte ptr [edi], cl; mov esp, 0x8869e8d2; or dword ptr [eax], eax; add ecx, 0xc9376; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008d1e8: adc byte ptr [edi], cl; mov esp, 0xcb86e8d2; or dword ptr [eax], eax; add ecx, 0xcd3df; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00147fad: adc byte ptr [edi], cl; or ah, 0; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xf]; pop edi; ret; 
0x00166e10: adc byte ptr [edi], cl; std; call dword ptr [eax + 0x60fffd0c]; or eax, 0xe30fffd; std; jmp eax; 
0x00148cde: adc byte ptr [edi], cl; test dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x0008ec90: adc byte ptr [edi], cl; test dword ptr [ecx], ebx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008d61d: adc byte ptr [edi], cl; test dword ptr [edi + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x00148f62: adc byte ptr [edi], cl; test dword ptr [edi - 0xa000000], esp; ret 0xf20; 
0x000871ff: adc byte ptr [edi], cl; test dword ptr [edx + 0x5f000005], ecx; pop ebx; ret; 
0x00148e42: adc byte ptr [edi], cl; test dword ptr [esi - 0x9fffffd], esi; ret 0xf20; 
0x000a7100: adc byte ptr [edi], cl; test ecx, ebp; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x0008b5f0: adc byte ptr [edi], cl; test ecx, ebp; add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x0014723b: adc byte ptr [edi], cl; test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x00131f23: adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cfffffe], al; ret 0x8310; 
0x0013049c: adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cffffff], cl; ret 0x8310; 
0x00041445: adc byte ptr [edi], cl; xchg eax, ebp; ret 0xb60f; 
0x0010b3f4: adc byte ptr [edi], cl; xchg eax, esp; ret 0xd589; 
0x00138137: adc byte ptr [edi], cl; xor dl, 0xa2; cld; jmp dword ptr [esi - 0x70]; 
0x00199410: adc byte ptr [edx + 0x4abc0002], ah; clc; call edx; 
0x0016ee14: adc byte ptr [edx + 0x70140002], ch; cld; jmp dword ptr [eax - 0x56]; 
0x000c5ce3: adc byte ptr [edx + 9], dh; sete al; movzx eax, al; sub eax, 1; pop esi; ret; 
0x0016cd94: adc byte ptr [edx + eax - 0x68b4e00], ah; jmp dword ptr [eax]; 
0x00167474: adc byte ptr [edx - 3], cl; jmp edx; 
0x001842cb: adc byte ptr [edx], cl; push cs; adc al, 0x41; ret; 
0x00188f50: adc byte ptr [edx], dh; hlt; jmp dword ptr [esi]; 
0x0016fc8d: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x1800e43], 3; ret 0xa03; 
0x001988ad: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x1900e4e], 2; ret; 
0x00171769: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x1c00e46], 2; mov edx, 0x43140e0a; ret; 
0x0011ed2f: adc byte ptr [esi + 0x5f], bl; pop ebp; mov edx, eax; mov eax, edx; ret; 
0x0007c366: adc byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x00182603: adc byte ptr [esi + 0xc0e4204], al; ret; 
0x00182672: adc byte ptr [esi + 0xc0e4a04], al; ret; 
0x00182661: adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x001826c7: adc byte ptr [esi + 0xc0e4f04], al; ret; 
0x0018263f: adc byte ptr [esi + 0xc0e7104], al; ret; 
0x00182905: adc byte ptr [esi + 0xc0e7204], al; ret; 
0x00182650: adc byte ptr [esi + 0xc0e7304], al; ret; 
0x0018262e: adc byte ptr [esi + 0xc0e7504], al; ret; 
0x00130867: adc byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x001430d3: adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00147bda: adc byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x00147bf2: adc byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0009554d: adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], -0x40; pop edi; ret; 
0x00114a77: adc byte ptr [esi + 0xf], bl; mov dh, 0xc0; pop edi; pop ebp; ret; 
0x00033d5e: adc byte ptr [esi - 0x39], ah; inc eax; push cs; add dword ptr [eax], eax; xor eax, eax; ret; 
0x00094cf8: adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x00091865: adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x0008f275: adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x0008db95: adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00033daf: adc byte ptr [esi - 0x77], ah; push eax; or al, 0x66; mov dword ptr [eax + 0xe], 0xc0310001; add esp, 8; ret; 
0x000f2048: adc byte ptr [esi - 0x7d], ah; cli; push dword ptr [esi - 0x7d]; ret 0x6601; 
0x00166f50: adc byte ptr [esi], bl; std; inc dword ptr [eax - 0x2f0002e2]; push ds; std; jmp dword ptr [eax]; 
0x000a8669: adc byte ptr [esi], cl; add byte ptr [eax], al; pop esi; add eax, edx; ret; 
0x00173720: adc byte ptr [esp + ebp*8], dl; call dword ptr [edi + 7]; 
0x0016e7b0: adc byte ptr [esp + edi*8], 0xff; xor byte ptr [edx], bh; add eax, dword ptr [eax]; nop; adc al, 0xfc; jmp dword ptr [eax + 0x3a]; 
0x0002390f: adc byte ptr ss:[eax], al; mov dword ptr [esi + 8], 0; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00166f09: adc ch, bh; inc dword ptr [eax + 0x11]; std; call dword ptr [eax + 0xf]; 
0x00166f09: adc ch, bh; inc dword ptr [eax + 0x11]; std; call dword ptr [eax + 0xf]; std; call eax; 
0x00166e79: adc ch, bh; jmp dword ptr [edx]; 
0x00166e65: adc ch, bh; jmp edx; 
0x00166f05: adc ch, bh; push dword ptr [eax + 0x40fffd10]; adc ebp, edi; call dword ptr [eax + 0xf]; 
0x00166f19: adc ch, bh; push eax; adc ch, bh; jmp dword ptr [edx]; 
0x0002d4a6: adc ch, bl; sbb al, 0x24; mov eax, dword ptr [esp + 4]; add esp, 0xc; and eax, 0x80000000; ret; 
0x00186811: adc ch, byte ptr [eax - 0xe]; jmp dword ptr [edx]; 
0x00027261: adc ch, byte ptr [ebx]; adc byte ptr [eax], al; add ecx, 0x17bd8f; mov eax, dword ptr [ecx - 0x90]; add eax, dword ptr gs:[0]; ret; 
0x000a8536: adc ch, byte ptr [ecx]; ret 0x18b; 
0x000a85ea: adc ch, byte ptr [ecx]; ret 0x83b8; 
0x000a859d: adc ch, byte ptr [ecx]; ret 0xc269; 
0x00167160: adc ch, byte ptr [edi*8 - 0x2d38d01]; inc edx; sub al, 0xfd; call dword ptr [edx]; 
0x00167264: adc ch, byte ptr [esi]; std; push dword ptr [edx + 0x2e]; std; call edx; 
0x0018ca4e: adc ch, dh; jmp dword ptr [edx]; 
0x0008d59a: adc cl, byte ptr [eax]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00065705: adc cl, byte ptr [ebx + 0x452b2c45]; and al, 0x89; ret 0xfac1; 
0x001046e3: adc cl, byte ptr [ebx + 0x4c89960c]; xchg eax, ebp; add al, 0x83; ret 0x8501; 
0x0011718f: adc cl, byte ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x00089ae6: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; pop edi; ret; 
0x00089c46: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x00085706: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x00085866: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x00089c66: adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x00085886: adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x00089c86: adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, dword ptr [edx + 0xe]; ret; 
0x000858a6: adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x00076e45: adc cl, byte ptr [ecx - 0x76d7dbac]; dec esp; and al, 0x2c; call eax; 
0x0005be86: adc cl, byte ptr [ecx - 0xbf6b]; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x39]; 
0x000d45a6: adc cl, byte ptr [edi]; xchg eax, esp; ret 0x133c; 
0x00173bbb: adc cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x000916c6: adc cl, byte ptr [esi + 5]; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0005ec4f: adc cl, ch; inc ecx; sar bh, 1; inc dword ptr [ebx - 0xbf43]; call dword ptr [eax]; 
0x00165db4: adc cl, dh; cld; push dword ptr [edx]; into; cld; call dword ptr [edx - 0x32]; 
0x001691d9: adc dh, al; jmp dword ptr [eax - 4]; 
0x0017dcd5: adc dh, al; jmp edx; 
0x00193ddd: adc dh, bh; call dword ptr [eax]; 
0x0007d0dd: adc dh, bh; sbb dword ptr [esi + esi + 0x2000000], 0; add byte ptr [esi + eax - 0x73], dh; or dword ptr [ecx + ebp*8 - 0x12], 0xffffffff; pop ebx; ret; 
0x0007c3ed: adc dh, bh; sbb dword ptr [esi + esi + 0x2000000], 0; add byte ptr [esi + eax - 0x73], dh; or dword ptr [esi + eax*8 - 0x12], 0xffffffff; pop ebx; ret; 
0x0007e39d: adc dh, bh; sbb dword ptr [esi + esi + 0x2000000], 0; add byte ptr [esi + eax - 0x73], dh; or dword ptr [esp + edx*2 - 0x12], 0xffffffff; pop ebx; ret; 
0x000eed61: adc dh, byte ptr [eax - 0x3e7efffd]; pop dword ptr [edx + 0xb]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00117cb9: adc dh, byte ptr [ecx]; ret 0xf089; 
0x00169bd9: adc dh, cl; ljmp ptr [eax + 0x7400014a]; adc al, 0xf1; call esp; 
0x000c810a: adc dh, dh; ret 0xf01; 
0x000cc136: adc dh, dh; ret 0xf80; 
0x0000225f: adc dh, dl; ret; 
0x0018c480: adc dl, 1; add ah, cl; mov bl, 0xf5; call dword ptr [ebx]; 
0x00166b80: adc dl, bh; cld; call eax; 
0x0017d220: adc dl, bh; out dx, eax; jmp dword ptr [edi]; 
0x00167ce0: adc dl, byte ptr [eax - 0x15]; jmp dword ptr [eax + 0x7f]; 
0x0002aa76: adc dl, byte ptr [eax - 0x7c0e49f1]; ret 0xf601; 
0x00091574: adc dl, byte ptr [ebx + 0xc03000c]; xchg eax, ecx; jmp ecx; 
0x0017dc10: adc dl, ch; add byte ptr [eax], al; cmp al, 0x1d; sti; call dword ptr [eax + 8]; 
0x00184655: adc dl, dh; call dword ptr [edi]; 
0x00184729: adc dl, dh; jmp dword ptr [eax]; 
0x0011783e: adc dword ptr [eax + 3], edi; mov ebx, dword ptr [esp + 0x44]; mov esi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x000ac83f: adc dword ptr [eax + ebx*4 - 0x10], -1; jmp ecx; 
0x000cb447: adc dword ptr [eax - 0x7cd3ebbc], ecx; ret 0x3901; 
0x000ec4c0: adc dword ptr [eax], 0x2d; cld; dec dword ptr [ecx - 0x4c17dbfc]; and al, 0xf8; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x77]; 
0x00024027: adc dword ptr [eax], 0x39; add byte ptr [eax], al; mov dword ptr [esp], edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0003ea63: adc dword ptr [eax], eax; adc byte ptr [eax], al; mov edx, esi; xchg edi, ebx; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0009e64e: adc dword ptr [eax], eax; add al, ch; sbb eax, 0x810008b7; ret; 
0x00055b8b: adc dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000f03d2: adc dword ptr [eax], eax; add byte ptr [eax], al; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f03f9: adc dword ptr [eax], eax; add byte ptr [eax], al; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00028a99: adc dword ptr [eax], eax; add byte ptr [ebx + 0x390c83], cl; add byte ptr [ecx - 0x373edbec], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x00028d26: adc dword ptr [eax], eax; add byte ptr [ebx + 0x391083], cl; add byte ptr [ecx - 0x373edbec], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x00028a79: adc dword ptr [eax], eax; add byte ptr [ebx + 0x391483], cl; add byte ptr [ecx - 0x373edbec], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x00031e8b: adc dword ptr [eax], eax; add byte ptr [edi], cl; xchg dword ptr [ecx + eax], ebp; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x75]; 
0x00019b53: adc dword ptr [eax], eax; add ecx, 0x18949f; mov eax, dword ptr [ecx - 0xf8]; add eax, dword ptr gs:[0]; ret; 
0x00019653: adc dword ptr [eax], eax; add ecx, 0x18999f; lea eax, dword ptr [ecx - 0x43dee]; ret; 
0x00019633: adc dword ptr [eax], eax; add ecx, 0x1899bf; lea eax, dword ptr [ecx - 0x46116]; ret; 
0x00009540: adc dword ptr [eax], eax; and byte ptr [eax], al; ret; 
0x00008850: adc dword ptr [eax], eax; int1; jmp dword ptr [ebp + 0x56]; 
0x00008380: adc dword ptr [eax], eax; int1; jmp dword ptr [edx]; 
0x00008420: adc dword ptr [eax], eax; int1; jmp edi; 
0x0010ff6a: adc dword ptr [eax], eax; mov eax, esi; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0008308e: adc dword ptr [eax], eax; pop esp; call dword ptr [ecx]; 
0x0000796a: adc dword ptr [eax], eax; ret; 
0x00000570: adc dword ptr [eax], eax; test al, 0x39; mov al, 4; or byte ptr [eax - 0x7f7fdec0], al; pushal; ret 0x2096; 
0x0017b823: adc dword ptr [ebp + 0xd1cffef], edx; sub byte ptr [ebp - 0x11], bh; jmp dword ptr [edx]; 
0x000578fb: adc dword ptr [ebp - 0x4c7bf02e], eax; add al, byte ptr [eax]; add byte ptr [ebx - 0x107b43], al; call dword ptr [ebx + 0xf]; 
0x0010fc19: adc dword ptr [ebp - 0x7af3c784], ecx; sal byte ptr [esi + eax*2 - 0x7d], cl; ror byte ptr [esi], 0x39; ret 0x2c72; 
0x0010fcd8: adc dword ptr [ebp - 0x7c9c8b2e], eax; ror byte ptr [esi], 0x39; ret 0x3772; 
0x000282c3: adc dword ptr [ebp - 0x7cffd98c], ecx; ret 0x3c01; 
0x0010c073: adc dword ptr [ebp - 0x7cffd98c], ecx; rol byte ptr [ecx], 0x81; ret 0x9c; 
0x0001aef6: adc dword ptr [ebx + 0x4408b00], ecx; add esp, 0x28; pop ebx; ret; 
0x0003602d: adc dword ptr [ebx + 0x5e5b2cc4], eax; pop edi; pop ebp; ret; 
0x0001ace5: adc dword ptr [ebx + 0x5e5b3cc4], eax; pop edi; pop ebp; ret 0xc; 
0x000eb7c6: adc dword ptr [ebx + 0x5e5b3cc4], eax; pop edi; pop ebp; ret; 
0x000b4cf1: adc dword ptr [ebx + 0x5e5b4cc4], eax; pop edi; pop ebp; ret; 
0x00110101: adc dword ptr [ebx + 0x5f5e04c4], eax; pop ebp; ret; 
0x0006b909: adc dword ptr [ebx + 0x88904c1], eax; add esp, 0x18; mov eax, edx; pop esi; ret; 
0x00026f6c: adc dword ptr [ebx - 0x1577f], ecx; jmp dword ptr [ebp - 0x75]; 
0x000ef7c9: adc dword ptr [ebx - 0x1d140038], eax; nop; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x000e80f9: adc dword ptr [ebx - 0x1d140038], eax; nop; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x000e81a9: adc dword ptr [ebx - 0x1d140038], eax; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x000aac79: adc dword ptr [ebx - 0x1d140038], eax; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x19; call dword ptr gs:[0x10]; 
0x000df569: adc dword ptr [ebx - 0x1d140038], eax; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x2a; call dword ptr gs:[0x10]; 
0x000eea49: adc dword ptr [ebx - 0x1d140038], eax; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x000ef269: adc dword ptr [ebx - 0x1d140038], eax; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x000ef9a9: adc dword ptr [ebx - 0x1d140038], eax; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000c5469: adc dword ptr [ebx - 0x1d140038], eax; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000ef599: adc dword ptr [ebx - 0x1d140038], eax; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x000b9317: adc dword ptr [ebx - 0x1d140038], eax; nop; nop; nop; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000371c2: adc dword ptr [ebx - 0x41f0cb81], ecx; ret 0x44f6; 
0x00039fb8: adc dword ptr [ebx - 0x41f0cb91], ecx; ret 0x44f6; 
0x000f6f97: adc dword ptr [ebx - 0x41f0fe3f], eax; ret 0x4e89; 
0x0006cacb: adc dword ptr [ebx - 0x7f74a7ba], ecx; mov eax, 0x89000000; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x000e89e8: adc dword ptr [ebx - 0xf77d], ecx; jmp dword ptr [ebp - 0x39]; 
0x001165cf: adc dword ptr [ebx - 0xf77d], ecx; jmp dword ptr [ebp - 0x7d]; 
0x0009a8ff: adc dword ptr [ebx - 0xf77d], ecx; push dword ptr [ecx]; div byte ptr [ecx]; jmp dword ptr [ebp - 0x39]; 
0x0013591c: adc dword ptr [ebx], eax; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0016df65: adc dword ptr [ebx], eax; add byte ptr [esp + eax*2 - 5], dl; jmp dword ptr [eax + 0x11]; 
0x0007c5b2: adc dword ptr [ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00135711: adc dword ptr [ebx], edx; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00074025: adc dword ptr [ecx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000283d9: adc dword ptr [ecx + edi], 0; add byte ptr [ecx - 0x373edbc4], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x00023ed7: adc dword ptr [ecx + edi], 0; add byte ptr [ecx - 0x373edbec], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x00171021: adc dword ptr [ecx - 0x15], ebp; jmp dword ptr [edx]; 
0x00074d8e: adc dword ptr [ecx - 0x7614fb90], ecx; call eax; 
0x001694c5: adc dword ptr [ecx], eax; add byte ptr [ebp + eax*2 - 0x10], ah; jmp dword ptr [eax + 0x11]; 
0x001694ed: adc dword ptr [ecx], eax; add byte ptr [edi + eax*2 - 0x10], dl; call dword ptr [eax]; 
0x00113116: adc dword ptr [ecx], esi; ror byte ptr [ebx - 0x74ebdb8c], 0x7c; and al, 0x18; add esp, 0x1c; ret; 
0x0010b3ee: adc dword ptr [ecx], esi; shl byte ptr [esi - 0x7d], cl; std; adc byte ptr [edi], cl; xchg eax, esp; ret 0xd589; 
0x0008f150: adc dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x0010a4ec: adc dword ptr [edi + ecx - 0x3b7d0000], 0x18; pop ebx; ret; 
0x00131e09: adc dword ptr [edi], eax; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x000eddad: adc dword ptr [edi], ecx; dec esi; ret 0x4489; 
0x0001b31c: adc dword ptr [edi], ecx; test byte ptr [ebx - 0x74fffffa], cl; dec ebp; aam 0x6b; ret 0x8d3c; 
0x00047ffb: adc dword ptr [edi], ecx; xchg eax, esp; ret 0xc183; 
0x0003f8e5: adc dword ptr [edi], esi; push ss; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0017b3a3: adc dword ptr [edx + 0xd1cffef], ebx; and byte ptr [ebp - 0x11], ch; jmp dword ptr [edx]; 
0x00081ba0: adc dword ptr [esi + 0x5f], ebx; ret; 
0x00087661: adc dword ptr [esi - 0x77], esp; push ecx; add al, 0x5b; ret; 
0x000021d0: adc dword ptr [si], eax; ret; 
0x0007c5b1: adc dword ptr fs:[ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000fecba: adc eax, 0x10245c8b; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000b85cf: adc eax, 0x10; mov eax, 1; int 0x80; 
0x000de56d: adc eax, 0x10; mov ebx, edx; ret; 
0x000fc1ec: adc eax, 0x10; pop edx; pop ecx; pop ebx; ret; 
0x000b9087: adc eax, 0x10; ret; 
0x000eedef: adc eax, 0x10; xchg ebx, ecx; ret; 
0x000c5b3d: adc eax, 0x10; xchg ebx, edi; neg eax; pop edi; ret; 
0x0004ccc2: adc eax, 0x155c6e00; add byte ptr [ebx - 0xf77d], cl; dec dword ptr [ebx - 0x1af6b]; jmp dword ptr [ebp - 0x77]; 
0x0004ccba: adc eax, 0x15655800; add byte ptr [eax + 0x65], bl; adc eax, 0x155c6e00; add byte ptr [ebx - 0xf77d], cl; dec dword ptr [ebx - 0x1af6b]; jmp dword ptr [ebp - 0x77]; 
0x00166fe9: adc eax, 0x15d0fffd; std; jmp dword ptr [eax + 0x16]; 
0x0012ea70: adc eax, 0x18; call edx; 
0x000ff700: adc eax, 0x18; mov dword ptr [esp], edx; call eax; 
0x0000713c: adc eax, 0x22000000; add byte ptr [eax + eax], cl; ret; 
0x0009533a: adc eax, 0x29c0bc0f; ret 0x860f; 
0x00165da4: adc eax, 0x35fffcce; into; cld; call dword ptr [ebp - 0x32]; 
0x0015878a: adc eax, 0x42d35a1d; cmp al, 0xe; push esp; jmp dword ptr [ebx - 0x40]; 
0x0016e04d: adc eax, 0x54c40003; sti; jmp dword ptr [eax]; 
0x00087978: adc eax, 0x5bfffffe; ret; 
0x00054c7a: adc eax, 0x5c8bf889; and al, 0x40; mov esi, dword ptr [esp + 0x44]; mov edi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x000740af: adc eax, 0x5ee88900; pop edi; pop ebp; ret; 
0x001195bb: adc eax, 0x65; idiv edi; jmp edx; 
0x0002722c: adc eax, 0x65fffffe; add eax, dword ptr [0]; ret; 
0x00026f30: adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x00026f00: adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x00026ed0: adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x00026e20: adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00026e80: adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00026da0: adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00026e50: adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00026df0: adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x00026fc0: adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00026dd0: adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x00026eb0: adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00026d80: adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x001123d2: adc eax, 0x748bc031; and al, 0x14; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000e745a: adc eax, 0x81000429; ret; 
0x0006c35a: adc eax, 0x81000bda; ret; 
0x00132c5a: adc eax, 0x81ffff71; ret; 
0x0001f271: adc eax, 0x830ab60f; ret 0x8901; 
0x0002e2e1: adc eax, 0x8700174d; sar dword ptr [eax + 0xb3], cl; call dword ptr gs:[0x10]; 
0x0016eb88: adc eax, 0x88fffc28; add eax, 0x28240001; cld; call esp; 
0x00102cd7: adc eax, 0x89fff6f8; ret 0x78b; 
0x000def87: adc eax, 0x89fffff1; ret 0xffb8; 
0x000d223f: adc eax, 0x89fffffd; ret 0xc889; 
0x00083b47: adc eax, 0x90ffffc2; lea esi, dword ptr [esi]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000b9a34: adc eax, 0xb8907174; and byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00167b49: adc eax, 0xbad0ffeb; add dword ptr [eax], eax; push esp; sbb bl, ch; call dword ptr [eax]; 
0x00143eae: adc eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000decee: adc eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001440fe: adc eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00000989: adc eax, dword ptr [eax]; jo 0x911; add byte ptr [eax], al; ret 0x1010; 
0x00094afc: adc eax, dword ptr [eax]; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091689: adc eax, dword ptr [eax]; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094b1c: adc eax, dword ptr [eax]; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000916a9: adc eax, dword ptr [eax]; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0006f3e5: adc eax, dword ptr [eax]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x48]; 
0x000725fc: adc eax, dword ptr [eax]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x30]; 
0x00094a99: adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091636: adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0006334e: adc eax, dword ptr [eax]; mov esp, 0xc20013fa; call dword ptr [ebx]; 
0x00094add: adc eax, dword ptr [eax]; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009166a: adc eax, dword ptr [eax]; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094b3e: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000916cb: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094b5e: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000916eb: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094b7e: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009170b: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00063306: adc eax, dword ptr [eax]; or al, 0xfc; adc eax, dword ptr [eax]; ret 0x13ff; 
0x000632d2: adc eax, dword ptr [eax]; ret 0x13ff; 
0x0006333e: adc eax, dword ptr [eax]; xchg eax, esp; cli; adc eax, dword ptr [eax]; ret 0x13ff; 
0x00149c7c: adc eax, dword ptr [ebx - 0x218bfe20]; lea eax, dword ptr [edi - 0x10]; pop edi; ret; 
0x00135495: adc eax, dword ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0016eaed: adc eax, dword ptr [ebx]; add byte ptr [edi + 0x24fffc22], ah; and eax, 0x22a70003; cld; jmp eax; 
0x00118208: adc eax, dword ptr [ecx + 0xecc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000876d6: adc eax, dword ptr [ecx + 5]; pop ebx; ret; 
0x000876e6: adc eax, dword ptr [ecx + 6]; pop ebx; ret; 
0x000876f6: adc eax, dword ptr [ecx + 7]; pop ebx; ret; 
0x00087706: adc eax, dword ptr [ecx + 8]; pop ebx; ret; 
0x00169525: adc eax, dword ptr [ecx]; add byte ptr [ebp + ecx*2 - 0x10], ah; jmp dword ptr [eax]; 
0x00087692: adc eax, dword ptr [ecx]; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000876b2: adc eax, dword ptr [ecx]; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000876c2: adc eax, dword ptr [ecx]; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000876a2: adc eax, dword ptr [ecx]; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000876d2: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000876e2: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000876f2: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x00087702: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x00087682: adc eax, dword ptr [ecx]; pop ebx; ret; 
0x00182ebc: adc eax, dword ptr [ecx]; ret; 
0x0008dd56: adc eax, dword ptr [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x0008dd66: adc eax, dword ptr [edi + 6]; pop edi; pop esi; pop ebx; ret; 
0x0008dcf2: adc eax, dword ptr [edi - 1]; pop edi; pop esi; pop ebx; ret; 
0x0008f046: adc eax, dword ptr [edi]; lea eax, dword ptr [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x0008d979: adc eax, dword ptr [edi]; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x0008d9b9: adc eax, dword ptr [edi]; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x0008d9d9: adc eax, dword ptr [edi]; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x0008d99a: adc eax, dword ptr [edi]; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x0008dd52: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0008d9fb: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x0008dd62: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0008da1b: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x0008da3b: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x0008d966: adc eax, dword ptr [edi]; pop edi; pop esi; pop ebx; ret; 
0x0008e37f: adc eax, dword ptr [edx + 5]; lea eax, dword ptr [edx + 0xc]; pop edi; ret; 
0x0008e4df: adc eax, dword ptr [edx + 5]; lea eax, dword ptr [edx + 0xc]; ret; 
0x00093ef2: adc eax, dword ptr [edx + 5]; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd3f: adc eax, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x0008ce9f: adc eax, dword ptr [edx + 5]; mov eax, edx; ret; 
0x0008e39f: adc eax, dword ptr [edx + 6]; lea eax, dword ptr [edx + 0xd]; pop edi; ret; 
0x0008e4ff: adc eax, dword ptr [edx + 6]; lea eax, dword ptr [edx + 0xd]; ret; 
0x00093f12: adc eax, dword ptr [edx + 6]; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd5f: adc eax, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x0008cebf: adc eax, dword ptr [edx + 6]; mov eax, edx; ret; 
0x0008e3bf: adc eax, dword ptr [edx + 7]; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x0008e51f: adc eax, dword ptr [edx + 7]; lea eax, dword ptr [edx + 0xe]; ret; 
0x00093f32: adc eax, dword ptr [edx + 7]; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd7f: adc eax, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x0008cedf: adc eax, dword ptr [edx + 7]; mov eax, edx; ret; 
0x0008e24e: adc eax, dword ptr [edx + 8]; lea eax, dword ptr [edx + 0xf]; pop edi; ret; 
0x0008e53f: adc eax, dword ptr [edx + 8]; lea eax, dword ptr [edx + 0xf]; ret; 
0x0008cc2e: adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x0008ceff: adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x0016b43d: adc eax, dword ptr [edx]; add ah, dl; cmp al, 0xf6; call dword ptr [eax + 0x14]; 
0x0008c8bb: adc eax, dword ptr [edx]; lea eax, dword ptr [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00089976: adc eax, dword ptr [edx]; lea eax, dword ptr [edx + 7]; pop edi; ret; 
0x00089bb6: adc eax, dword ptr [edx]; lea eax, dword ptr [edx + 7]; ret; 
0x0008b7a1: adc eax, dword ptr [edx]; lea eax, dword ptr [edx + 8]; pop edi; pop ebx; ret; 
0x00090fb9: adc eax, dword ptr [edx]; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x00090fd9: adc eax, dword ptr [edx]; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x00089a89: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, dword ptr [edx + 8]; pop edi; ret; 
0x00089bc9: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, dword ptr [edx + 8]; ret; 
0x000856a9: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000857e9: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x00094102: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x00089ac9: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, dword ptr [edx + 0xa]; pop edi; ret; 
0x00089c09: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, dword ptr [edx + 0xa]; ret; 
0x000856e9: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x00085829: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000899b9: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; pop edi; ret; 
0x00089c29: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; ret; 
0x0008b7d9: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xc]; pop edi; pop ebx; ret; 
0x000873e9: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000855f9: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x00088362: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x00085849: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00090ff9: adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x00091019: adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x0014a316: adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00093d37: adc eax, dword ptr [edx]; mov eax, edi; pop ebx; pop edi; ret; 
0x000873b1: adc eax, dword ptr [edx]; mov eax, edi; pop edi; pop ebx; ret; 
0x000855b6: adc eax, dword ptr [edx]; mov eax, edi; pop edi; ret; 
0x000883db: adc eax, dword ptr [edx]; mov eax, edx; pop ebx; ret; 
0x000857d6: adc eax, dword ptr [edx]; mov eax, edx; ret; 
0x00089aaa: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, dword ptr [edx + 9]; pop edi; ret; 
0x00089bea: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, dword ptr [edx + 9]; ret; 
0x000856ca: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x0008580a: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x00089aeb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; pop edi; ret; 
0x00089c4b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x0008570b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0008586b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x00089b0b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; pop edi; ret; 
0x00089c6b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x0008572b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x0008588b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x00089b2b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x00089c8b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; lea eax, dword ptr [edx + 0xe]; ret; 
0x0008574b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x0008830e: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000858ab: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x0008b816: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; lea eax, dword ptr [edx + 0x10]; pop edi; pop ebx; ret; 
0x00093d8a: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x00087426: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x00090eda: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x0008e376: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, dword ptr [edx + 0xc]; pop edi; ret; 
0x0008e4d6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, dword ptr [edx + 0xc]; ret; 
0x0008cd36: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x0008ce96: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x0008e396: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, dword ptr [edx + 0xd]; pop edi; ret; 
0x0008e4f6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, dword ptr [edx + 0xd]; ret; 
0x0008cd56: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x0008ceb6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x0008e3b6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x0008e516: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, dword ptr [edx + 0xe]; ret; 
0x0008cd76: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x0008ced6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x0008e245: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, dword ptr [edx + 0xf]; pop edi; ret; 
0x0008e536: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, dword ptr [edx + 0xf]; ret; 
0x0008cc25: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x0008cef6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x001691c1: adc eax, esi; call eax; 
0x001691c9: adc eax, esi; inc eax; cld; add byte ptr [eax], al; ret 0xf012; 
0x00166f0d: adc ebp, edi; call dword ptr [eax + 0xf]; 
0x00166f0d: adc ebp, edi; call dword ptr [eax + 0xf]; std; call eax; 
0x001775b5: adc ebp, edi; jmp dword ptr [esi]; 
0x00166fe1: adc ebp, edi; push dword ptr [eax + 0x40fffd14]; adc eax, 0x15d0fffd; std; jmp dword ptr [eax + 0x16]; 
0x00094c62: adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000917df: adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094c82: adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000917ff: adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008f190: adc ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000a71dc: adc ebx, dword ptr [edi + 0x5e]; ret; 
0x0008db0f: adc ebx, dword ptr [edi + 0xe]; pop edi; pop esi; pop ebx; ret; 
0x0008f20f: adc ebx, dword ptr [edi + 0xf]; lea eax, dword ptr [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x0008db2f: adc ebx, dword ptr [edi + 0xf]; pop edi; pop esi; pop ebx; ret; 
0x0016634c: adc ebx, ecx; cld; call dword ptr [ebx - 0x27]; 
0x00187609: adc ebx, esi; call dword ptr [ebp + 1]; 
0x00177489: adc ecx, -0x12; jmp dword ptr [edx]; 
0x00094b42: adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000916cf: adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094b62: adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000916ef: adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094b82: adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009170f: adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0002bd02: adc ecx, dword ptr [eax + edx*2]; sti; jmp dword ptr [esi + 0x39]; 
0x0008ed03: adc ecx, dword ptr [ebp - 0x7af0ec81]; mov dword ptr [0x5f000007], eax; pop esi; pop ebx; ret; 
0x000fc29b: adc ecx, dword ptr [ebx + 0x7c8b2434]; and al, 4; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00101109: adc ecx, dword ptr [ebx - 0x1375]; jmp dword ptr [ebp - 0x75]; 
0x001222ad: adc ecx, dword ptr [ebx - 0x34784fb3]; mov eax, 6; call dword ptr gs:[0x10]; 
0x001207f8: adc ecx, dword ptr [ebx - 0x347857b3]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00120f86: adc ecx, dword ptr [ebx - 0x34786fb3]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000d72ff: adc ecx, dword ptr [ebx - 0x8f45]; jmp dword ptr [ebp - 0x75]; 
0x000d74e9: adc ecx, dword ptr [ebx - 0x8f6d]; jmp dword ptr [ebp - 0x75]; 
0x0008f0df: adc ecx, dword ptr [edi + 5]; lea eax, dword ptr [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x0008d9ff: adc ecx, dword ptr [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x0008da1f: adc ecx, dword ptr [edi + 6]; pop edi; pop esi; pop ebx; ret; 
0x0008da3f: adc ecx, dword ptr [edi + 7]; pop edi; pop esi; pop ebx; ret; 
0x0008ed06: adc ecx, dword ptr [edi]; test dword ptr [ebx + 0x5f000007], esp; pop esi; pop ebx; ret; 
0x00089aef: adc ecx, dword ptr [edx + 5]; lea eax, dword ptr [edx + 0xc]; pop edi; ret; 
0x00089c4f: adc ecx, dword ptr [edx + 5]; lea eax, dword ptr [edx + 0xc]; ret; 
0x0008570f: adc ecx, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x0008586f: adc ecx, dword ptr [edx + 5]; mov eax, edx; ret; 
0x00089b0f: adc ecx, dword ptr [edx + 6]; lea eax, dword ptr [edx + 0xd]; pop edi; ret; 
0x00089c6f: adc ecx, dword ptr [edx + 6]; lea eax, dword ptr [edx + 0xd]; ret; 
0x0008572f: adc ecx, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x0008588f: adc ecx, dword ptr [edx + 6]; mov eax, edx; ret; 
0x00089b2f: adc ecx, dword ptr [edx + 7]; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x00089c8f: adc ecx, dword ptr [edx + 7]; lea eax, dword ptr [edx + 0xe]; ret; 
0x0008574f: adc ecx, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x00088312: adc ecx, dword ptr [edx + 7]; mov eax, edx; pop ebx; ret; 
0x000858af: adc ecx, dword ptr [edx + 7]; mov eax, edx; ret; 
0x0008b81a: adc ecx, dword ptr [edx + 8]; lea eax, dword ptr [edx + 0x10]; pop edi; pop ebx; ret; 
0x0009415e: adc ecx, dword ptr [edx + 8]; mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x00093d8e: adc ecx, dword ptr [edx + 8]; mov eax, edi; pop ebx; pop edi; ret; 
0x0008742a: adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; pop ebx; ret; 
0x00090ede: adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x0010fd86: adc ecx, eax; ljmp 0:0x2b803; sub edx, 1; mov byte ptr [ecx + 1], dl; ret; 
0x00191bc1: adc ecx, edi; cmc; jmp dword ptr [edx]; 
0x0006f3e3: adc edi, dword ptr [ebx + edx]; add byte ptr [ebx + 0x940684], cl; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x48]; 
0x0017b619: adc edi, dword ptr [edx - 0x11]; jmp dword ptr [edx]; 
0x00198645: adc edi, eax; jmp dword ptr [edi]; 
0x00019eb8: adc edx, 0; add esp, 0x44; neg edx; ret; 
0x00094cc5: adc edx, dword ptr [eax + 0x10]; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009183f: adc edx, dword ptr [eax + 0x10]; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094d25: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091882: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094d55: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000918a2: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094ca2: adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009181f: adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094cf6: adc edx, dword ptr [eax + 0x10]; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091863: adc edx, dword ptr [eax + 0x10]; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008f22f: adc edx, dword ptr [edi + 0x10]; lea eax, dword ptr [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x0008db72: adc edx, dword ptr [edi + 0x10]; mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x0008dbb2: adc edx, dword ptr [edi + 0x10]; mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x0008dbd2: adc edx, dword ptr [edi + 0x10]; mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x0008db93: adc edx, dword ptr [edi + 0x10]; mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x0008db4f: adc edx, dword ptr [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x001660bc: adc edx, ebp; cld; call dword ptr [ebx - 0x2b]; 
0x0016c8b0: adc edx, ebx; clc; call eax; 
0x000efbe3: adc esi, dword ptr [ebx + ecx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0011e5d4: adc esi, dword ptr [ecx]; rol byte ptr [ebx - 0x6bf0fd06], 0xc0; add esp, 0x28; pop esi; ret; 
0x00065104: adc esi, dword ptr [ecx]; ror byte ptr [ebx - 0x74dfdba4], 0x74; and al, 0x24; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x00069fba: adc esi, esi; ret 0x7508; 
0x001660b0: adc esp, -4; push dword ptr [ebx - 0x1c00032c]; aam 0xfc; call dword ptr [ebx]; 
0x001660b0: adc esp, -4; push dword ptr [ebx - 0x1c00032c]; aam 0xfc; call dword ptr [ebx]; aad 0xfc; call dword ptr [ebx - 0x2b]; 
0x00094973: adc esp, dword ptr [eax + 0xc]; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000e6be5: adc esp, eax; or eax, dword ptr [eax]; mov ecx, edx; xchg ebx, ecx; mov eax, 0x2d; call dword ptr gs:[0x10]; 
0x0016e771: adc esp, edi; call esp; 
0x0016e769: adc esp, edi; push dword ptr [esi + edi + 0x11f40003]; cld; call esp; 
0x0016d75f: add ah, ah; aaa; cli; push dword ptr [eax + 0x340002e3]; cmp dl, bh; jmp esp; 
0x00168b77: add ah, ah; aam 0xee; dec dword ptr [esi + edx*8 - 0x26fc0000]; out dx, al; call eax; 
0x0016dc4f: add ah, ah; aam 0xfa; inc dword ptr [eax]; add byte ptr [ebx], al; add byte ptr [ebp + edx*8 - 6], al; jmp dword ptr [eax]; 
0x0016d78f: add ah, ah; aas; cli; dec dword ptr [0x40040002]; cli; jmp dword ptr [eax]; 
0x001759e3: add ah, ah; add byte ptr [bx + si], al; sub bh, bl; out dx, al; jmp dword ptr [esi]; 
0x0018497f: add ah, ah; add byte ptr [ecx], al; add byte ptr [eax + ebx - 0xe], bl; call dword ptr [ecx]; 
0x0016c0e7: add ah, ah; dec edx; clc; jmp esp; 
0x0016c127: add ah, ah; dec esi; clc; call esp; 
0x0016ccd7: add ah, ah; dec esi; stc; jmp dword ptr [eax]; 
0x0016b31f: add ah, ah; div ebp; call eax; 
0x0016e117: add ah, ah; imul edi, ebx, 0x31a08ff; add byte ptr [edx + ebp*2 - 5], dl; call dword ptr [eax + 0x1a]; 
0x0016c097: add ah, ah; inc eax; clc; jmp esp; 
0x00168827: add ah, ah; insb byte ptr es:[edi], dx; in eax, dx; jmp dword ptr [eax - 0x3f]; 
0x0016a187: add ah, ah; int1; call dword ptr [eax]; 
0x0018c1e3: add ah, ah; iretd; add dword ptr [eax], eax; clc; and edi, edx; call dword ptr [edi]; 
0x0019a9e3: add ah, ah; mov bh, 2; add byte ptr [eax], ch; sahf; clc; jmp dword ptr [edi]; 
0x00169947: add ah, ah; mov bl, 0xf0; jmp eax; 
0x001685df: add ah, ah; mov ch, 0xec; call eax; 
0x0016994f: add ah, ah; mov ch, 0xf0; jmp dword ptr [eax]; 
0x00168587: add ah, ah; mov dl, 0xec; jmp dword ptr [eax - 0x4d]; 
0x0019a993: add ah, ah; mov dl, 2; add byte ptr [edx], dl; clc; call dword ptr [eax]; 
0x0017be93: add ah, ah; mov dword ptr [eax], 0xefeebd00; call dword ptr [eax]; 
0x0017b293: add ah, ah; mov ebx, 0xf72d0000; out dx, eax; call dword ptr [eax]; 
0x0017aa4b: add ah, ah; mov edi, ebp; call dword ptr [edx]; 
0x0017b593: add ah, ah; mov esi, 0xf5210000; out dx, eax; call dword ptr [eax]; 
0x0017c2f3: add ah, ah; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00199d1b: add ah, ah; pop ebp; clc; call dword ptr [ebp]; 
0x0016a0ff: add ah, ah; pop esp; int1; call dword ptr [eax + 0x5a]; 
0x0016cf2f: add ah, ah; popfd; stc; call esp; 
0x0016aa37: add ah, ah; push ebx; jmp dword ptr [eax]; 
0x0016bb57: add ah, ah; ret 0xfff7; 
0x0016c78f: add ah, ah; ret 0xfff8; 
0x00168717: add ah, ah; ret; 
0x00168d97: add ah, ah; shr edi, cl; push dword ptr [ebx - 0x2bdc0000]; out dx, eax; call eax; 
0x0016dab7: add ah, ah; stosd dword ptr es:[edi], eax; cli; jmp dword ptr [eax - 9]; 
0x0016cec7: add ah, ah; xchg eax, edx; stc; jmp eax; 
0x0016ce5f: add ah, ah; xchg ecx, edi; call esp; 
0x0017496b: add ah, ah; xor ch, ch; call dword ptr [ebx + 1]; 
0x001693e7: add ah, ah; xor dh, al; jmp esp; 
0x0016e7cf: add ah, al; adc al, 0xfc; jmp dword ptr [eax + 0x3f]; 
0x001691c7: add ah, al; adc eax, esi; inc eax; cld; add byte ptr [eax], al; ret 0xf012; 
0x001918c3: add ah, al; add al, byte ptr es:[eax]; dec eax; mov al, 0xf6; call dword ptr [ecx]; 
0x0019914b: add ah, al; clc; jmp dword ptr [edi]; 
0x0018438b: add ah, al; hlt; int1; jmp dword ptr [edi]; 
0x0016a21f: add ah, al; insb byte ptr es:[edi], dx; int1; jmp dword ptr [eax + 0x60]; 
0x001684cf: add ah, al; lahf; in al, dx; call dword ptr [esi + ebp*4 - 0x5c8c0000]; in al, dx; call esp; 
0x00178173: add ah, al; mov al, byte ptr [eax]; add dh, cl; sti; call dword ptr [eax]; 
0x000bad03: add ah, al; or dword ptr [esi], 0x2bd88900; test byte ptr [ebx - 0xe82e0], dh; jmp eax; 
0x0016bc0f: add ah, al; out 0xf7, al; call dword ptr [eax]; 
0x0016e0cf: add ah, al; pop esp; sti; call dword ptr [eax + 0x18]; 
0x00199f0b: add ah, al; popal; clc; call dword ptr [edi]; 
0x001892cb: add ah, al; push ebx; hlt; jmp dword ptr [esi + 1]; 
0x0016e04f: add ah, al; push esp; sti; jmp dword ptr [eax]; 
0x0016b087: add ah, al; push ss; cmc; jmp dword ptr [eax]; 
0x0016acb7: add ah, al; ret 0xfff4; 
0x00174860: add ah, al; ret; 
0x0017b773: add ah, al; rol byte ptr [eax], 0; sal ebx, 1; out dx, eax; call dword ptr [eax]; 
0x0018efc3: add ah, al; std; add dword ptr [eax], eax; clc; sub esi, esi; call dword ptr [edi + 1]; 
0x0016f0c7: add ah, al; sub bh, dh; jmp esp; 
0x0016a80f: add ah, al; sub esi, ebx; dec eax; ret; 
0x0016d9cf: add ah, al; xchg eax, esp; cli; dec dword ptr [edx + esi*8 - 0x6a0bfffe]; cli; jmp esp; 
0x0016cedf: add ah, al; xchg eax, esp; stc; call eax; 
0x00167c4f: add ah, al; xor al, 0xeb; jmp dword ptr [eax + 0x7e]; 
0x0016f18f: add ah, al; xor al, 0xfe; jmp dword ptr [eax + 0x24]; 
0x00169eff: add ah, al; xor dh, cl; inc dword ptr [esi + ecx*2 + 1]; add byte ptr [ebx + esi], dl; int1; jmp dword ptr [eax + 0x4e]; 
0x00167c2f: add ah, al; xor ebp, ebx; jmp esp; 
0x00178b1b: add ah, al; xor edi, ebp; call eax; 
0x001729fb: add ah, bh; aaa; add byte ptr [eax], al; pushal; imul ebx; call ebx; 
0x00199523: add ah, bh; dec edi; clc; jmp dword ptr [edx]; 
0x0015afab: add ah, bh; jmp dword ptr [esi]; 
0x0016e701: add ah, bh; lcall ptr [eax]; cmp al, 3; add byte ptr [edx + eax], ah; cld; call dword ptr [eax + 0x3c]; 
0x00173fc3: add ah, bh; mov ch, 0xec; jmp dword ptr [ebx]; 
0x0017d8fb: add ah, bh; out 0, al; add byte ptr [eax], al; or eax, esi; call dword ptr [eax]; 
0x00174ba3: add ah, bh; outsd dx, dword ptr [esi]; in eax, dx; call dword ptr [eax]; 
0x001844fb: add ah, bh; push edx; add dword ptr [eax], eax; sar dl, 1; int1; jmp esi; 
0x0018c5fb: add ah, bh; rol dword ptr [ecx], cl; add byte ptr [eax - 0x48], dl; cmc; call dword ptr [edx]; 
0x001878e3: add ah, bh; sbb dh, bl; call dword ptr [ebx]; 
0x0017a893: add ah, bh; test edi, ebp; jmp dword ptr [eax]; 
0x00184433: add ah, bl; cmc; int1; call dword ptr [ebx]; 
0x00193bdb: add ah, bl; dec ecx; add al, byte ptr [eax]; pushal; or al, 0xf7; call dword ptr [esi]; 
0x00192313: add ah, bl; fdivr st(6), st(0); jmp dword ptr [ecx]; 
0x00195bdb: add ah, bl; imul eax, dword ptr [edx], 0xf73f7000; call dword ptr [eax]; 
0x0017fef3: add ah, bl; in eax, dx; sti; jmp ecx; 
0x00175edb: add ah, bl; insb byte ptr es:[edi], dx; add byte ptr [eax], al; sal al, 0xee; jmp dword ptr [edx]; 
0x0017aadb: add ah, bl; mov eax, 0x8ba00000; out dx, eax; call dword ptr [edx]; 
0x0001a313: add ah, bl; mov word ptr [eax], ds; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x00174bd3: add ah, bl; outsd dx, dword ptr [esi]; in eax, dx; call dword ptr [eax]; 
0x0018b333: add ah, bl; push esi; cmc; call dword ptr [ebx]; 
0x0019898b: add ah, bl; xchg eax, edx; add al, byte ptr [eax]; jns 0x1989c4; clc; call dword ptr [eax]; 
0x0018a309: add ah, byte ptr [eax + 0xa]; push cs; add al, 0xc6; ret; 
0x0017c5f1: add ah, byte ptr [eax + 0xe]; add al, 0xc6; ret; 
0x001670a4: add ah, byte ptr [eax]; std; call dword ptr [edx + 0x20]; 
0x00180369: add ah, byte ptr [ebp + 0x41140e0a]; ret; 
0x0017427d: add ah, byte ptr [ebp + 0xa]; push cs; add al, 0xc6; ret; 
0x0018cc29: add ah, byte ptr [ebp + 0xa]; push cs; add al, 0xc7; ret; 
0x00170617: add ah, byte ptr [ebx + 0x41140e0a]; ret; 
0x0016fe29: add ah, byte ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x00195910: add ah, byte ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x00195e00: add ah, byte ptr [ebx + 0xa]; ret; 
0x00172a37: add ah, byte ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x00174987: add ah, byte ptr [ecx + 0x43100e0a]; ret; 
0x0016fe57: add ah, byte ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x00183585: add ah, byte ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x00187831: add ah, byte ptr [ecx + 0xa]; ret; 
0x0018f0d9: add ah, byte ptr [ecx + 0xe]; adc al, 0x41; ret; 
0x0019220f: add ah, byte ptr [ecx + 0xe]; adc al, 0x43; ret; 
0x0018df6d: add ah, byte ptr [ecx + 0xe]; add al, 0xc6; ret; 
0x00171fa1: add ah, byte ptr [edi + 0xa]; push cs; add al, 0xc6; ret; 
0x001986f9: add ah, byte ptr [edx + 0x41140e0a]; ret; 
0x00179821: add ah, byte ptr [edx + 0xa]; push cs; add al, 0xc6; ret; 
0x00185c23: add ah, byte ptr [edx + 0xe]; add al, 0xc6; ret; 
0x0017c2c4: add ah, byte ptr [edx + ecx + 0xe]; adc al, 0x43; ret; 
0x00177be1: add ah, byte ptr [esi + 0x43140e0a]; ret; 
0x001715bd: add ah, byte ptr [esi + 0xa]; push cs; add al, 0xc6; ret; 
0x00188324: add ah, byte ptr [esi + 0xa]; ret; 
0x0008e377: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, dword ptr [edx + 0xc]; pop edi; ret; 
0x0008e4d7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, dword ptr [edx + 0xc]; ret; 
0x0008cd37: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x0008ce97: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x0008e397: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, dword ptr [edx + 0xd]; pop edi; ret; 
0x0008e4f7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, dword ptr [edx + 0xd]; ret; 
0x0008cd57: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x0008ceb7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x0008e3b7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x0008e517: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, dword ptr [edx + 0xe]; ret; 
0x0008cd77: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x0008ced7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x0008e246: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, dword ptr [edx + 0xf]; pop edi; ret; 
0x0008e537: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, dword ptr [edx + 0xf]; ret; 
0x0008cc26: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x0008cef7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x00089aec: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; lea eax, dword ptr [edx + 0xc]; pop edi; ret; 
0x00089c4c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; lea eax, dword ptr [edx + 0xc]; ret; 
0x0008570c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x0008586c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; mov eax, edx; ret; 
0x00089b0c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; lea eax, dword ptr [edx + 0xd]; pop edi; ret; 
0x00089c6c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; lea eax, dword ptr [edx + 0xd]; ret; 
0x0008572c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x0008588c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; mov eax, edx; ret; 
0x00089b2c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x00089c8c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; lea eax, dword ptr [edx + 0xe]; ret; 
0x0008574c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x0008830f: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edx; pop ebx; ret; 
0x000858ac: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edx; ret; 
0x0008b817: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; lea eax, dword ptr [edx + 0x10]; pop edi; pop ebx; ret; 
0x00093d8b: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop ebx; pop edi; ret; 
0x00087427: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; pop ebx; ret; 
0x00090edb: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x0017af13: add ah, byte ptr [esi + ecx + 8]; ret; 
0x0007e030: add ah, byte ptr [esi - 0x5b]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0007e220: add ah, byte ptr [esi - 0x5b]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; pop edi; ret; 
0x0007e199: add ah, byte ptr [esi - 0x5b]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg eax, edi; mov esi, edx; ret; 
0x00089b93: add ah, byte ptr [esi - 0x75]; inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, dword ptr [edx + 5]; ret; 
0x000857b3: add ah, byte ptr [esi - 0x75]; inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x001758eb: add ah, ch; add byte ptr [eax], al; mov al, 0x61; out dx, al; call edx; 
0x00172d9b: add ah, ch; add byte ptr ss:[eax], al; pop edx; add ah, ch; call dword ptr [eax]; 
0x00172d71: add ah, ch; call dword ptr [eax]; 
0x00168009: add ah, ch; call dword ptr [esi + edx*4 + 0xab40000]; in al, dx; call esp; 
0x001946f3: add ah, ch; cmpsb byte ptr [esi], byte ptr es:[edi]; stc; jmp dword ptr [edi]; 
0x0018d9f3: add ah, ch; div ebp; call dword ptr [esi]; 
0x001930d3: add ah, ch; div esi; jmp dword ptr [eax]; 
0x00168ea7: add ah, ch; in al, 0xef; call dword ptr [eax]; 
0x00189eb3: add ah, ch; in al, 0xf4; call dword ptr [edx]; 
0x0017314d: add ah, ch; jmp dword ptr [ecx]; 
0x0019a3eb: add ah, ch; mov cl, 2; add al, ah; mov bh, al; call dword ptr [edx]; 
0x0019afeb: add ah, ch; mov ebp, 0xb5800002; clc; jmp dword ptr [eax]; 
0x001939c3: add ah, ch; or bh, dh; call dword ptr [esi]; 
0x00176fd3: add ah, ch; or ebp, edi; jmp dword ptr [ebx]; 
0x001928a3: add ah, ch; out 0xf6, al; call dword ptr [esi + 5]; 
0x0018a0eb: add ah, ch; scasb al, byte ptr es:[edi]; add dword ptr [eax], eax; jo 0x18a0db; hlt; call dword ptr [eax]; 
0x0016d3d8: add ah, ch; stc; jmp dword ptr [eax - 0x36]; 
0x001884eb: add ah, ch; xchg eax, edx; add dword ptr [eax], eax; rcl bh, 0xf3; jmp dword ptr [eax]; 
0x0018a8c3: add ah, ch; xor ebp, esi; call dword ptr [ebp]; 
0x0017d1a3: add ah, cl; clc; out dx, eax; call dword ptr [ecx + 1]; 
0x00063347: add ah, cl; cli; adc eax, dword ptr [eax]; ret 0x13ff; 
0x0018a113: add ah, cl; cli; call dword ptr [eax]; 
0x00183bcb: add ah, cl; dec ecx; add dword ptr [eax], eax; and byte ptr [ebp - 0xf], bl; call dword ptr [eax]; 
0x0018cf7b: add ah, cl; fadd dword ptr [ecx]; add cl, al; fdivrp st(5); call dword ptr [eax]; 
0x0018d7cb: add ah, cl; in eax, 1; add byte ptr [eax], al; out dx, al; cmc; jmp dword ptr [ebx]; 
0x0018c483: add ah, cl; mov bl, 0xf5; call dword ptr [ebx]; 
0x0019afcb: add ah, cl; mov ebp, 0xb5800002; clc; jmp dword ptr [eax]; 
0x0018b0cb: add ah, cl; mov esi, 0x4f200001; cmc; call dword ptr [ebx]; 
0x0018aecb: add ah, cl; mov esp, 0x41d00001; cmc; call dword ptr [ebx]; 
0x00179a33: add ah, cl; pop eax; out dx, eax; jmp dword ptr [ebx]; 
0x00189dcb: add ah, cl; stosd dword ptr es:[edi], eax; add dword ptr [eax], eax; add byte ptr [edi], cl; cld; jmp dword ptr [edx]; 
0x0017a853: add ah, cl; test bh, ch; jmp dword ptr [ecx + 1]; 
0x001956d3: add ah, cl; xor al, 0xf7; call ebx; 
0x0016e76f: add ah, dh; adc esp, edi; call esp; 
0x0016d53f: add ah, dh; add al, 0xfa; call eax; 
0x00168acf: add ah, dh; dec ecx; out dx, al; call dword ptr [eax - 0x2d]; 
0x0018d1f3: add ah, dh; fild word ptr [ecx]; add byte ptr [eax - 0x22], bh; cmc; jmp dword ptr [ecx]; 
0x00168f0f: add ah, dh; in al, dx; out dx, eax; jmp dword ptr [eax - 0x13]; 
0x00187ffb: add ah, dh; mov ah, 0xf3; jmp dword ptr [esi + 3]; 
0x0016d0b7: add ah, dh; mov dl, 0xf9; call dword ptr [eax - 0x48]; 
0x0017adf3: add ah, dh; mov ebx, 0xc080000; sti; jmp dword ptr [ebx]; 
0x0017b1a3: add ah, dh; mov edx, 0xf7cd0000; out dx, eax; call dword ptr [eax]; 
0x0016bc1f: add ah, dh; out 0xf7, eax; jmp dword ptr [eax + 0x44]; 
0x001960f3: add ah, dh; outsb dx, byte ptr [esi]; add al, byte ptr [eax]; sub byte ptr [eax - 9], ch; call dword ptr [ecx]; 
0x0016ee0f: add ah, dh; outsd dx, dword ptr [esi]; cld; call dword ptr [eax]; 
0x0016f9f3: add ah, dh; pop es; add byte ptr [eax], al; clc; ret 0xffea; 
0x001682af: add ah, dh; push -0x14; call dword ptr [eax - 0x5d]; 
0x00171beb: add ah, dh; ret 0xffeb; 
0x00168707: add ah, dh; ret 0xffec; 
0x0016e447: add ah, dh; ret 0xfffb; 
0x0017baa3: add ah, dh; ret; 
0x0017b7a3: add ah, dh; rol byte ptr [eax], 0; mov cl, 0xf3; out dx, eax; call dword ptr [eax]; 
0x001890f3: add ah, dh; sahf; add dword ptr [eax], eax; or byte ptr [edx - 0xc], al; call edi; 
0x00169ac7: add ah, dh; sal al, 0xff; lock xor byte ptr [ecx], al; add byte ptr [ecx + eax*8 - 0x10], al; call dword ptr [eax]; 
0x0016e547: add ah, dh; sar bl, 1; call dword ptr [eax + 0x30]; 
0x0017df2b: add ah, dh; sbb al, 0xf0; call esp; 
0x001987eb: add ah, dh; sbb edi, eax; jmp dword ptr [edi]; 
0x00188a6b: add ah, dh; sbb esp, esi; call eax; 
0x0016a3af: add ah, dh; scasd eax, dword ptr es:[edi]; int1; ljmp ptr [ecx + ebp*2 - 0x4f8bffff]; int1; call esp; 
0x00169c67: add ah, dh; sub al, 0xf1; jmp esp; 
0x00179af3: add ah, dh; test al, 0; add al, ch; pop ebp; out dx, eax; jmp dword ptr [ecx]; 
0x0016c4b7: add ah, dh; test al, bh; jmp eax; 
0x0016d9d7: add ah, dh; xchg eax, ebp; cli; jmp esp; 
0x0016ab67: add ah, dh; xor esp, esi; push dword ptr [eax + 0x540001dc]; xor dh, ah; call eax; 
0x00167b47: add ah, dl; adc eax, 0xbad0ffeb; add dword ptr [eax], eax; push esp; sbb bl, ch; call dword ptr [eax]; 
0x0016e767: add ah, dl; adc esp, edi; push dword ptr [esi + edi + 0x11f40003]; cld; call esp; 
0x0016af9f: add ah, dl; add ch, dh; jmp eax; 
0x0016ca77: add ah, dl; add eax, 0x90a8fff9; add al, byte ptr [eax]; test byte ptr [edi], al; stc; call esp; 
0x0016e857: add ah, dl; and ah, bh; ljmp ptr [eax + 0x44000341]; and bh, ah; call esp; 
0x0018eebb: add ah, dl; and esi, esi; jmp dword ptr [esi]; 
0x00166268: add ah, dl; cld; push dword ptr [eax]; aam 0xfc; jmp dword ptr [eax - 0x2c]; 
0x0018a31f: add ah, dl; cmc; hlt; call dword ptr [eax]; 
0x0016b43f: add ah, dl; cmp al, 0xf6; call dword ptr [eax + 0x14]; 
0x0016d777: add ah, dl; cmp edi, edx; call dword ptr [eax - 0x1c]; 
0x0016df8f: add ah, dl; dec eax; sti; call dword ptr [eax + 0x12]; 
0x0016e00f: add ah, dl; dec edi; sti; call esp; 
0x0018a3ab: add ah, dl; hlt; jmp dword ptr [ebx]; 
0x00168a87: add ah, dl; inc eax; out dx, al; call eax; 
0x00169f87: add ah, dl; inc ecx; int1; call dword ptr [eax + 0x52]; 
0x0016b9b7: add ah, dl; jnp 0x16b9b2; call dword ptr [eax + 0x35]; 
0x0016c397: add ah, dl; jns 0x16c393; dec dword ptr [ecx + ebp*2 + 2]; add byte ptr [edx + edi*2], dl; clc; jmp dword ptr [eax + 0x69]; 
0x0018bdeb: add ah, dl; lahf; cmc; call dword ptr [esi]; 
0x0016ceff: add ah, dl; lcall 2:0xaeb8fff9; and al, 0x9b; stc; call esp; 
0x001684ff: add ah, dl; lodsb al, byte ptr [esi]; in al, dx; jmp dword ptr [eax - 0x4f]; 
0x00167d5f: add ah, dl; mov al, 0xeb; call eax; 
0x0016a40f: add ah, dl; mov dl, 0xf1; call dword ptr [eax]; 
0x0017b083: add ah, dl; mov ecx, 0xf89e0000; out dx, eax; call dword ptr [eax]; 
0x0017b683: add ah, dl; mov edi, 0xf4750000; out dx, eax; call dword ptr [eax]; 
0x0019a41b: add ah, dl; mov edi, eax; jmp dword ptr [ebx]; 
0x0016ac47: add ah, dl; mov esi, 0xe1b0fff4; add dword ptr [eax], eax; add al, 0xbf; hlt; call eax; 
0x0017b383: add ah, dl; mov esp, 0xf68d0000; out dx, eax; call dword ptr [eax]; 
0x0016b63f: add ah, dl; or bh, dh; jmp eax; 
0x0016d587: add ah, dl; or bh, dl; dec dword ptr [eax - 0x58fffd28]; or edi, edx; jmp dword ptr [eax]; 
0x0019b7cd: add ah, dl; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0016be0f: add ah, dl; or edi, eax; push dword ptr [ebp + ecx*2 + 0xc140002]; clc; call esp; 
0x00176f5b: add ah, dl; or edi, ebp; call esp; 
0x00168f2f: add ah, dl; out dx, al; out dx, eax; jmp dword ptr [eax]; 
0x0018e1d3: add ah, dl; out dx, eax; add dword ptr [eax], eax; sub byte ptr [esi + esi*8], cl; call dword ptr [edi]; 
0x00176683: add ah, dl; outsd dx, dword ptr [esi]; add byte ptr [eax], al; pop ss; add edi, ebp; call dword ptr [eax]; 
0x0016d7ff: add ah, dl; pop ebx; cli; call eax; 
0x00168157: add ah, dl; pop ecx; in al, dx; call eax; 
0x001734ab: add ah, dl; pop es; in al, dx; call dword ptr [edi]; 
0x001681cf: add ah, dl; pop esi; in al, dx; jmp dword ptr [eax - 0x61]; 
0x0018bd0b: add ah, dl; popfd; cmc; jmp dword ptr [ebx]; 
0x00169617: add ah, dl; push -0x10; call dword ptr [eax + 0x19]; 
0x001945d3: add ah, dl; push ebx; add al, byte ptr [eax]; test al, 0xa7; stc; call dword ptr [ebx]; 
0x0016a097: add ah, dl; push esp; int1; jmp esp; 
0x0017b983: add ah, dl; ret 0; 
0x0016acbf: add ah, dl; ret 0xfff4; 
0x0016db67: add ah, dl; ret; 
0x0016d2af: add ah, dl; sar cl, cl; jmp esp; 
0x001722ab: add ah, dl; shr bl, cl; call dword ptr [edx]; 
0x0016b377: add ah, dl; sub dh, dh; jmp dword ptr [eax + 0xf]; 
0x0017c1db: add ah, dl; xchg eax, edx; out dx, eax; jmp dword ptr [edi]; 
0x00199332: add al, 0; adc al, 0; add byte ptr [eax], al; cmp byte ptr [ecx + 0x44740002], ah; clc; jmp dword ptr [edi]; 
0x001194c8: add al, 0; add al, ch; mov dword ptr [0x81000108], eax; ret; 
0x001155ca: add al, 0; add al, ch; mov eax, dword ptr [0x81000147]; ret; 
0x0007aa08: add al, 0; add al, ch; rcl byte ptr [edi], 8; add cl, ch; ret 0xffd2; 
0x00079076: add al, 0; add al, ch; ret 0xfffc; 
0x000e513e: add al, 0; add al, ch; sub eax, 0x8100044c; ret; 
0x00047fb0: add al, 0; add bh, al; add ch, byte ptr [0x83000000]; ret 0x8904; 
0x000662cd: add al, 0; add bl, dh; ret; 
0x0019da9d: add al, 0; add byte ptr [eax + 5], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret 3; 
0x00199f01: add al, 0; add byte ptr [eax + eax], ah; add byte ptr [eax], al; or byte ptr [ebp + 0x61c40002], ch; clc; call dword ptr [edi]; 
0x0004462e: add al, 0; add byte ptr [eax - 0x4ab43], al; call dword ptr [ebx + 0xf]; 
0x000cf7ea: add al, 0; add byte ptr [eax], al; add byte ptr [eax + 0x6c70c], dh; add byte ptr [eax], al; add bl, ch; ret 0xb48d; 
0x00118ccb: add al, 0; add byte ptr [eax], al; add byte ptr [ecx + 0x4489243c], cl; and al, 0x28; mov eax, dword ptr [esp + 0x44]; call dword ptr [eax + 0x14]; 
0x0006c709: add al, 0; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xe0c1; 
0x00097f29: add al, 0; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x00129a4d: add al, 0; add byte ptr [eax], al; add esp, 0xc; ret; 
0x000dec78: add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00016eb2: add al, 0; add byte ptr [eax], al; jmp dword ptr [ebx + 8]; 
0x000f0288: add al, 0; add byte ptr [eax], al; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0011b387: add al, 0; add byte ptr [eax], al; mov dword ptr [esp], eax; call dword ptr [edx + 0x14]; 
0x0011232e: add al, 0; add byte ptr [eax], al; mov dword ptr [esp], edi; call dword ptr [eax]; 
0x001490fe: add al, 0; add byte ptr [eax], al; pop edi; ret; 
0x000a7431: add al, 0; add byte ptr [eax], al; ret; 
0x00032d90: add al, 0; add byte ptr [eax], al; xor eax, eax; add esp, 0x18; pop ebx; ret; 
0x0001b316: add al, 0; add byte ptr [ebp + 0xf1189d2], al; test byte ptr [ebx - 0x74fffffa], cl; dec ebp; aam 0x6b; ret 0x8d3c; 
0x001242f3: add al, 0; add byte ptr [ebp - 0x77c1bb3], cl; dec dword ptr [edi]; inc esp; ret 0x508d; 
0x001198f4: add al, 0; add byte ptr [ebx + 0x43424b4], cl; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x438]; add esp, 0x43c; ret; 
0x000547d8: add al, 0; add byte ptr [ebx + 0x43424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x438]; add esp, 0x43c; ret; 
0x000547df: add al, 0; add byte ptr [ebx + 0x43824ac], cl; add byte ptr [eax], al; add esp, 0x43c; ret; 
0x001198fb: add al, 0; add byte ptr [ebx + 0x43824bc], cl; add byte ptr [eax], al; add esp, 0x43c; ret; 
0x00119592: add al, 0; add byte ptr [ebx + 0x45424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x458]; add esp, 0x45c; ret; 
0x00119599: add al, 0; add byte ptr [ebx + 0x45824ac], cl; add byte ptr [eax], al; add esp, 0x45c; ret; 
0x00115655: add al, 0; add byte ptr [ebx + 0x48424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x488]; add esp, 0x48c; ret; 
0x0011565c: add al, 0; add byte ptr [ebx + 0x48824ac], cl; add byte ptr [eax], al; add esp, 0x48c; ret; 
0x00096d98: add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0019c8c9: add al, 0; add byte ptr [ebx + eax], ah; add byte ptr [eax], al; ret; 
0x00074c56: add al, 0; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x77]; 
0x00109fbc: add al, 0; add byte ptr [ebx - 0x2f76d73c], al; pop ebx; ret; 
0x0003943a: add al, 0; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x00028695: add al, 0; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x000e5322: add al, 0; add byte ptr [ebx], dh; test byte ptr [eax + edi], ah; add al, 0; add byte ptr [ecx], cl; ret 0x850f; 
0x001075cc: add al, 0; add byte ptr [ecx + 0x39e82404], cl; mov edi, edi; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x0009f0fb: add al, 0; add byte ptr [ecx + 0x4ae82404], cl; jnp 0x9f0fd; jmp dword ptr [esi - 0x70]; 
0x0009c3eb: add al, 0; add byte ptr [ecx + 0x5ae82404], cl; test al, 0xf8; jmp dword ptr [esi - 0x70]; 
0x0007f454: add al, 0; add byte ptr [ecx + 0x5d5f5ed0], cl; ret; 
0x0019ca65: add al, 0; add byte ptr [ecx - 0x20ffffff], bh; add eax, 0x1250000; add byte ptr [eax], al; ret; 
0x0010872c: add al, 0; add byte ptr [ecx - 0x2617dbfc], cl; jns 0x108735; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x000a1d93: add al, 0; add byte ptr [ecx - 0x4d17dbfc], cl; dec esi; clc; jmp dword ptr [esi - 0x70]; 
0x000f3e0c: add al, 0; add byte ptr [ecx - 0x617dbfc], cl; ret 0; 
0x000c7731: add al, 0; add byte ptr [ecx - 0x74725bb3], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xfffb; 
0x0010f57c: add al, 0; add byte ptr [ecx - 0x7617dbfc], cl; or edi, edi; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x001092a3: add al, 0; add byte ptr [ecx - 0x76efdbac], cl; xor al, 0x24; call eax; 
0x0011cc27: add al, 0; add byte ptr [ecx - 0x76fbdbac], cl; xor al, 0x24; call dword ptr [eax]; 
0x001194eb: add al, 0; add byte ptr [ecx - 0x76fbdbb4], cl; add al, 0x24; mov dword ptr [esp + 0x458], ebp; call dword ptr [edx + 8]; 
0x001189e9: add al, 0; add byte ptr [ecx - 0x7cf5740e], cl; ret 0x8d04; 
0x0010bf75: add al, 0; add byte ptr [ecx], al; ret 0xb70f; 
0x000780bc: add al, 0; add byte ptr [ecx], bh; ret 0x840f; 
0x000c25dc: add al, 0; add byte ptr [ecx], bh; ret 0x860f; 
0x000e5329: add al, 0; add byte ptr [ecx], cl; ret 0x850f; 
0x0007f356: add al, 0; add byte ptr [ecx], dh; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x00119674: add al, 0; add byte ptr [ecx], dh; ror byte ptr [ebp + 0x26b4], 0; add byte ptr [ebx], bh; lodsb al, byte ptr [esi]; ret; 
0x0008d8db: add al, 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0019dcb1: add al, 0; add byte ptr [edi + 6], al; add byte ptr [eax], al; ret; 
0x000e1a16: add al, 0; add byte ptr [edi], cl; inc edx; ret 0x4401; 
0x0002aca3: add al, 0; add byte ptr [edi], cl; inc edx; ret 0xc801; 
0x000f841d: add al, 0; add byte ptr [edx], al; mov dword ptr [esp + 8], edx; call eax; 
0x0007f49b: add al, 0; add byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x000e9835: add al, 0; add ebx, 0xb97bd; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xc1; call dword ptr gs:[0x10]; 
0x000e9568: add al, 0; add ebx, 0xb9a8a; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0x10f; call dword ptr gs:[0x10]; 
0x000e820b: add al, 0; add ebx, 0xbade7; xchg edi, ebx; mov eax, 0x58; call dword ptr gs:[0x10]; 
0x000e6be1: add al, 0; add ebx, 0xbc411; mov ecx, edx; xchg ebx, ecx; mov eax, 0x2d; call dword ptr gs:[0x10]; 
0x000e6a78: add al, 0; add ebx, 0xbc57a; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0x60; call dword ptr gs:[0x10]; 
0x000e66fe: add al, 0; add ebx, 0xbc8f4; xchg edi, ebx; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000e660e: add al, 0; add ebx, 0xbc9e4; xchg edi, ebx; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000e65b8: add al, 0; add ebx, 0xbca3a; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0x4b; call dword ptr gs:[0x10]; 
0x000e6578: add al, 0; add ebx, 0xbca7a; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0xbf; call dword ptr gs:[0x10]; 
0x000e61b7: add al, 0; add ebx, 0xbce3b; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000e5f9b: add al, 0; add ebx, 0xbd057; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000e0b65: add al, 0; add ebx, 0xc248d; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x000e0acd: add al, 0; add ebx, 0xc2525; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x000e0a25: add al, 0; add ebx, 0xc25cd; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x000e00c5: add al, 0; add ebx, 0xc2f2d; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x000e0065: add al, 0; add ebx, 0xc2f8d; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000df0b5: add al, 0; add ebx, 0xc3f3d; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000dea11: add al, 0; add ebx, 0xc45e1; or dh, 0x80; xchg edi, ebx; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000de22a: add al, 0; add ebx, 0xc4dc8; xchg edi, ebx; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x000de1ca: add al, 0; add ebx, 0xc4e28; xchg edi, ebx; mov eax, 0x10c; call dword ptr gs:[0x10]; 
0x000de03b: add al, 0; add ebx, 0xc4fb7; xchg edi, ebx; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000dde68: add al, 0; add ebx, 0xc518a; mov edx, dword ptr [esp + 0xc]; xchg ebx, edx; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x000dde28: add al, 0; add ebx, 0xc51ca; mov edx, dword ptr [esp + 0xc]; xchg ebx, edx; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ddac6: add al, 0; add ebx, 0xc552c; xchg edi, ebx; mov eax, 0x13e; call dword ptr gs:[0x10]; 
0x000e14e3: add al, 0; add ecx, 0xc1b0f; mov eax, dword ptr [ecx - 0xf8]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x000d9432: add al, 0; add esp, 0x524; mov eax, esi; pop ebx; pop esi; ret; 
0x00188c86: add al, 0; cmp al, 0; add byte ptr [eax], al; mov word ptr [edx + 0x1d100001], ds; hlt; jmp dword ptr [ecx + 1]; 
0x00168008: add al, 0; in al, dx; call dword ptr [esi + edx*4 + 0xab40000]; in al, dx; call esp; 
0x000b81a1: add al, 0; mov ecx, eax; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x00173716: add al, 0; pop eax; add byte ptr [eax], al; add byte ptr [eax*2 + 0x14100000], bl; in al, dx; call dword ptr [edi + 7]; 
0x0019649a: add al, 0; push esp; add byte ptr [eax], al; add byte ptr [eax - 0x73fffd8e], ah; xchg edi, esi; call edi; 
0x0019c05e: add al, 0; ret 0x502; 
0x0017d99a: add al, 0; sbb byte ptr [eax], al; add byte ptr [eax], al; mov al, byte ptr [0xbc0000e7]; or eax, esi; call dword ptr [edx]; 
0x000d7157: add al, 0x16; add dword ptr [eax + edx - 0x75], esi; xor dword ptr [eax - 1], 0xffffffff; jmp dword ptr [ebp - 0x75]; 
0x00126625: add al, 0x16; mov byte ptr [edi + edx], al; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000d8910: add al, 0x16; mov byte ptr [edi + edx], al; xor eax, eax; pop esi; pop edi; ret; 
0x00074f64: add al, 0x17; mov edx, dword ptr [ebx - 0x15c]; and eax, ecx; sub esi, eax; mov dword ptr [esp], esi; call dword ptr [edx]; 
0x00126628: add al, 0x17; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000d8913: add al, 0x17; xor eax, eax; pop esi; pop edi; ret; 
0x00033014: add al, 0x19; push esp; and al, 4; mov edx, dword ptr [esp + 4]; add esp, 0x14; ret; 
0x00188b2c: add al, 0x1b; hlt; jmp dword ptr [ebx]; 
0x0016d6a8: add al, 0x1e; cli; jmp dword ptr [eax - 0x20]; 
0x000dd76a: add al, 0x20; add byte ptr [eax], al; add al, ch; insb byte ptr es:[edi], dx; ret; 
0x000f841b: add al, 0x24; add al, 0; add byte ptr [edx], al; mov dword ptr [esp + 8], edx; call eax; 
0x000b934c: add al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call 0xb92e0; add esp, 0x1c; ret; 
0x00076f57: add al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [eax]; 
0x00076ecd: add al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [ebp]; 
0x00074d6a: add al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [ecx]; 
0x00074d0b: add al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [edx]; 
0x0005366e: add al, 0x24; add byte ptr cs:[eax], al; add byte ptr [ecx - 0x17fbdbbc], cl; ret; 
0x00026c0e: add al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; call eax; 
0x00030de4: add al, 0x24; add eax, 0xd; add esp, 4; jmp eax; 
0x0002d312: add al, 0x24; add esp, 0xc; pop esi; pop edi; ret; 
0x0003116d: add al, 0x24; add esp, 0xc; ret; 
0x000310fc: add al, 0x24; add esp, 4; ret; 
0x00101a88: add al, 0x24; call 0x101ab0; add esp, 0x2c; ret; 
0x00101be0: add al, 0x24; call 0x101bf0; add esp, 0x2c; ret; 
0x00102fa0: add al, 0x24; call 0x102fb0; add esp, 0x1c; ret; 
0x00103170: add al, 0x24; call 0x103180; add esp, 0x1c; ret; 
0x00103480: add al, 0x24; call 0x103280; add esp, 0x1c; ret; 
0x00104a70: add al, 0x24; call 0x104a80; add esp, 0x2c; ret; 
0x001090ae: add al, 0x24; call 0x1090c0; add esp, 0x18; pop ebx; ret; 
0x0010958e: add al, 0x24; call 0x1095a0; add esp, 0x18; pop ebx; ret; 
0x0010a54e: add al, 0x24; call 0x109f30; add esp, 0x28; pop ebx; ret; 
0x0010e2d0: add al, 0x24; call 0x10d500; add esp, 0x1c; ret; 
0x0010e3d8: add al, 0x24; call 0x10e2e0; add esp, 0x2c; ret; 
0x0010e518: add al, 0x24; call 0x10e3f0; add esp, 0x2c; ret; 
0x0010ec18: add al, 0x24; call 0x10e5a0; add esp, 0x2c; ret; 
0x0011b128: add al, 0x24; call 0x11ad10; add esp, 0x3c; ret; 
0x0011e1c8: add al, 0x24; call 0x11ded0; add esp, 0x1c; ret; 
0x00113038: add al, 0x24; call 0x11ea10; add esp, 0x1c; ret; 
0x0011ec8f: add al, 0x24; call 0x11eb00; add esp, 0x1c; ret; 
0x00124715: add al, 0x24; call 0x1243e0; add esp, 0x78; pop ebx; ret; 
0x00102c1a: add al, 0x24; call 0x1246e0; add esp, 0x18; pop ebx; ret; 
0x00126584: add al, 0x24; call 0x124a80; add esp, 0x18; pop ebx; ret; 
0x00126544: add al, 0x24; call 0x124bc0; add esp, 0x18; pop ebx; ret; 
0x00126564: add al, 0x24; call 0x124c30; add esp, 0x18; pop ebx; ret; 
0x001265a4: add al, 0x24; call 0x126250; add esp, 0x18; pop ebx; ret; 
0x001265cc: add al, 0x24; call 0x126370; add esp, 0x18; pop ebx; ret; 
0x000b4f58: add al, 0x24; call 0x126c80; call dword ptr [ebp - 0x48]; 
0x000b4dfc: add al, 0x24; call 0x126c80; call esi; 
0x00109a97: add al, 0x24; call 0x126c80; mov dword ptr [esp], esi; call edi; 
0x00128a0c: add al, 0x24; call 0x128950; add esp, 0x18; pop ebx; ret; 
0x00128b3c: add al, 0x24; call 0x128a80; add esp, 0x18; pop ebx; ret; 
0x00128cb4: add al, 0x24; call 0x128b90; add esp, 0x18; pop ebx; ret; 
0x0012a874: add al, 0x24; call 0x12a150; add esp, 0x18; pop ebx; ret; 
0x000c5c9d: add al, 0x24; call 0x16ee0; add esp, 0x18; pop ebx; ret; 
0x0002387a: add al, 0x24; call 0x16f50; add esp, 0x18; pop ebx; ret; 
0x00025f11: add al, 0x24; call 0x25f20; add esp, 0x18; pop ebx; ret; 
0x000ca025: add al, 0x24; call 0x276f0; add esp, 0x18; pop ebx; ret; 
0x00027758: add al, 0x24; call 0x276f0; add esp, 0x1c; ret; 
0x00028dfc: add al, 0x24; call 0x28580; add esp, 0x28; pop ebx; ret; 
0x00028e44: add al, 0x24; call 0x28dc0; add esp, 0x28; pop ebx; ret; 
0x0002e5d0: add al, 0x24; call 0x2e560; add esp, 0x1c; ret; 
0x00032148: add al, 0x24; call 0x31e40; add esp, 0x2c; ret; 
0x00032dde: add al, 0x24; call 0x32d50; add esp, 0x18; pop ebx; ret; 
0x00129dac: add al, 0x24; call 0x32db0; add esp, 0x18; pop ebx; ret; 
0x00033ae0: add al, 0x24; call 0x33af0; add esp, 0x18; pop ebx; ret; 
0x00033942: add al, 0x24; call 0x33be0; mov eax, dword ptr [esp + 0x1c]; add esp, 0x28; pop ebx; ret; 
0x00033a06: add al, 0x24; call 0x33c80; mov eax, dword ptr [esp + 0x1c]; add esp, 0x28; pop ebx; ret; 
0x00033a3e: add al, 0x24; call 0x33ce0; add esp, 0x18; pop ebx; ret; 
0x00033aae: add al, 0x24; call 0x33d70; add esp, 0x18; pop ebx; ret; 
0x00031208: add al, 0x24; call 0x33eb0; add esp, 0x1c; ret; 
0x0003f7d0: add al, 0x24; call 0x33fa0; add esp, 0x1c; ret; 
0x00031268: add al, 0x24; call 0x33ff0; add esp, 0x1c; ret; 
0x0003f800: add al, 0x24; call 0x34040; add esp, 0x1c; ret; 
0x00033e99: add al, 0x24; call 0x340e0; add esp, 0x28; pop ebx; ret; 
0x000345e8: add al, 0x24; call 0x340e0; add esp, 0x2c; ret; 
0x00033f39: add al, 0x24; call 0x34600; add esp, 0x28; pop ebx; ret; 
0x00034b18: add al, 0x24; call 0x34600; add esp, 0x2c; ret; 
0x00033fd9: add al, 0x24; call 0x34b30; add esp, 0x28; pop ebx; ret; 
0x000352b8: add al, 0x24; call 0x34b30; add esp, 0x2c; ret; 
0x00034079: add al, 0x24; call 0x352d0; add esp, 0x28; pop ebx; ret; 
0x000359f8: add al, 0x24; call 0x352d0; add esp, 0x2c; ret; 
0x000311e0: add al, 0x24; call 0x35ad0; add esp, 0x1c; ret; 
0x00035a41: add al, 0x24; call 0x36110; add esp, 0x18; pop ebx; ret; 
0x000388d0: add al, 0x24; call 0x36110; add esp, 0x1c; ret; 
0x00035ac1: add al, 0x24; call 0x38f30; add esp, 0x18; pop ebx; ret; 
0x0003b850: add al, 0x24; call 0x38f30; add esp, 0x1c; ret; 
0x00035b41: add al, 0x24; call 0x3bef0; add esp, 0x18; pop ebx; ret; 
0x0003e6e0: add al, 0x24; call 0x3bef0; add esp, 0x1c; ret; 
0x0003f51c: add al, 0x24; call 0x3efe0; add esp, 0x18; pop ebx; ret; 
0x0003fa59: add al, 0x24; call 0x3fa70; add esp, 0x28; pop ebx; ret; 
0x00047a38: add al, 0x24; call 0x424d0; add esp, 0x18; pop ebx; ret; 
0x0004c468: add al, 0x24; call 0x424d0; add esp, 0x1c; ret; 
0x00049fe4: add al, 0x24; call 0x49ee0; add esp, 0x18; pop ebx; ret; 
0x0005468c: add al, 0x24; call 0x4c590; add esp, 0x18; pop ebx; ret; 
0x000546c8: add al, 0x24; call 0x54660; add esp, 0x1c; ret; 
0x000e85ec: add al, 0x24; call 0x54fb0; add esp, 0x18; pop ebx; ret; 
0x00055b88: add al, 0x24; call 0x55ba0; add esp, 0x1c; ret; 
0x0006f044: add al, 0x24; call 0x56370; add esp, 0x18; pop ebx; ret; 
0x00062eac: add al, 0x24; call 0x5baa0; add esp, 0x18; pop ebx; ret; 
0x0006f134: add al, 0x24; call 0x62e80; add esp, 0x18; pop ebx; ret; 
0x00068b54: add al, 0x24; call 0x643c0; add esp, 0x18; pop ebx; ret; 
0x0011fb77: add al, 0x24; call 0x64880; add esp, 0x18; pop ebx; ret; 
0x00064ea4: add al, 0x24; call 0x64db0; add esp, 0x18; pop ebx; ret; 
0x0011fbd7: add al, 0x24; call 0x65620; add esp, 0x18; pop ebx; ret; 
0x000553fc: add al, 0x24; call 0x65980; add esp, 0x18; pop ebx; ret; 
0x00065c6c: add al, 0x24; call 0x65c80; add esp, 0x28; pop ebx; ret; 
0x00068dd4: add al, 0x24; call 0x66df0; add esp, 0x18; pop ebx; ret; 
0x00068e0c: add al, 0x24; call 0x66f50; add esp, 0x18; pop ebx; ret; 
0x0004c524: add al, 0x24; call 0x67210; add esp, 0x18; pop ebx; ret; 
0x00054744: add al, 0x24; call 0x67300; add esp, 0x18; pop ebx; ret; 
0x0011fbab: add al, 0x24; call 0x68600; add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x0004c554: add al, 0x24; call 0x68e20; add esp, 0x18; pop ebx; ret; 
0x0004c584: add al, 0x24; call 0x68ff0; add esp, 0x18; pop ebx; ret; 
0x0004c4ec: add al, 0x24; call 0x69210; add esp, 0x18; pop ebx; ret; 
0x000696a4: add al, 0x24; call 0x694b0; add esp, 0x18; pop ebx; ret; 
0x0006b10c: add al, 0x24; call 0x6b1a0; add esp, 0x18; pop ebx; ret; 
0x0006b388: add al, 0x24; call 0x6b2b0; add esp, 0x1c; ret; 
0x0006be93: add al, 0x24; call 0x6b640; mov eax, 1; add esp, 0x28; pop ebx; ret; 
0x0006c209: add al, 0x24; call 0x6bf30; add esp, 0x18; pop ebx; ret; 
0x0006ec3c: add al, 0x24; call 0x6ea10; add esp, 0x28; pop ebx; ret; 
0x00073259: add al, 0x24; call 0x71f60; add esp, 0x18; pop ebx; ret; 
0x00072763: add al, 0x24; call 0x722d0; mov eax, 1; add esp, 0x28; pop ebx; ret; 
0x00072914: add al, 0x24; call 0x72820; add esp, 0x28; pop ebx; ret; 
0x00073986: add al, 0x24; call 0x73890; add esp, 0x18; pop ebx; ret; 
0x0001aeb0: add al, 0x24; call 0x7c820; add esp, 0x18; pop ebx; ret; 
0x000c5d8e: add al, 0x24; call 0x7dcd0; add esp, 0x1c; ret; 
0x000985b7: add al, 0x24; call 0x7e180; add esp, 0x18; pop ebx; ret; 
0x00097c27: add al, 0x24; call 0x7e790; add esp, 0x18; pop ebx; ret; 
0x0007fb1a: add al, 0x24; call 0x7fa60; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0007c879: add al, 0x24; call 0x81390; add esp, 0x18; pop ebx; ret; 
0x00083734: add al, 0x24; call 0x82760; add esp, 0x18; pop ebx; ret; 
0x0002ae0a: add al, 0x24; call 0x95d60; add esp, 0x18; pop ebx; ret; 
0x0010482a: add al, 0x24; call 0x97ff0; add esp, 0x18; pop ebx; ret; 
0x00104a2a: add al, 0x24; call 0x984e0; add esp, 0x18; pop ebx; ret; 
0x001046aa: add al, 0x24; call 0x98bc0; add esp, 0x18; pop ebx; ret; 
0x00104cd2: add al, 0x24; call 0x98e00; add esp, 0x18; pop ebx; ret; 
0x00040cac: add al, 0x24; call 0x98e00; add esp, 0x28; pop ebx; ret; 
0x00104d22: add al, 0x24; call 0x98e50; add esp, 0x18; pop ebx; ret; 
0x00040dcc: add al, 0x24; call 0x98e50; add esp, 0x28; pop ebx; ret; 
0x00104c3a: add al, 0x24; call 0x991e0; add esp, 0x28; pop ebx; ret; 
0x00104c8a: add al, 0x24; call 0x99570; add esp, 0x28; pop ebx; ret; 
0x00040ea0: add al, 0x24; call 0x99b00; add esp, 0x1c; ret; 
0x00040ed0: add al, 0x24; call 0x99ba0; add esp, 0x1c; ret; 
0x000999f9: add al, 0x24; call 0x99dc0; add esp, 0x28; pop ebx; ret; 
0x00099a99: add al, 0x24; call 0x9a250; add esp, 0x28; pop ebx; ret; 
0x00099b39: add al, 0x24; call 0x9a6d0; add esp, 0x28; pop ebx; ret; 
0x00099bd9: add al, 0x24; call 0x9ad90; add esp, 0x28; pop ebx; ret; 
0x00099c71: add al, 0x24; call 0x9b9e0; add esp, 0x18; pop ebx; ret; 
0x00099d31: add al, 0x24; call 0x9e640; add esp, 0x18; pop ebx; ret; 
0x00099d71: add al, 0x24; call 0xa1190; add esp, 0x18; pop ebx; ret; 
0x000a3929: add al, 0x24; call 0xa44c0; add esp, 0x18; pop ebx; ret; 
0x000a3971: add al, 0x24; call 0xa4ca0; add esp, 0x18; pop ebx; ret; 
0x00098e44: add al, 0x24; call 0xa5b70; add esp, 0x28; pop ebx; ret; 
0x000a5fd8: add al, 0x24; call 0xa5ff0; add esp, 0x1c; ret; 
0x000a7b9c: add al, 0x24; call 0xa7a60; add esp, 0x48; pop ebx; ret; 
0x000a842d: add al, 0x24; call 0xa7e90; add esp, 0x18; pop ebx; ret; 
0x000a7be4: add al, 0x24; call 0xa94b0; add esp, 0x18; pop ebx; ret; 
0x000b0939: add al, 0x24; call 0xb2da0; add esp, 0x28; pop ebx; ret; 
0x000b8768: add al, 0x24; call 0xb85e0; add esp, 0x18; pop ebx; ret; 
0x000b8a68: add al, 0x24; call 0xb8bd0; add esp, 0x18; pop ebx; ret; 
0x000c52ec: add al, 0x24; call 0xc4000; add esp, 0x28; pop ebx; ret; 
0x000c51f4: add al, 0x24; call 0xc5110; add esp, 0x28; pop ebx; ret; 
0x0012df54: add al, 0x24; call 0xc55b0; add esp, 0x18; pop ebx; ret; 
0x0012df84: add al, 0x24; call 0xc5640; add esp, 0x18; pop ebx; ret; 
0x00102952: add al, 0x24; call 0xc57a0; add esp, 0x18; pop ebx; ret; 
0x0014ace6: add al, 0x24; call 0xd7fe0; add esp, 0x18; pop ebx; ret; 
0x0012dfc7: add al, 0x24; call 0xd81a0; add esp, 0x28; pop ebx; ret; 
0x000d8aa4: add al, 0x24; call 0xd8b90; add esp, 0x28; pop ebx; ret; 
0x000df688: add al, 0x24; call 0xde7c0; add esp, 0x1c; ret; 
0x00123d40: add al, 0x24; call 0xdf100; add esp, 0x1c; sar eax, 0x1f; ret; 
0x00102b92: add al, 0x24; call 0xdf720; add esp, 0x18; pop ebx; ret; 
0x0012e0a4: add al, 0x24; call 0xe00b0; add esp, 0x18; pop ebx; ret; 
0x00102efa: add al, 0x24; call 0xe0500; add esp, 0x18; pop ebx; ret; 
0x0012e574: add al, 0x24; call 0xe1090; add esp, 0x28; pop ebx; ret; 
0x000e62e4: add al, 0x24; call 0xe6d00; add esp, 0x18; pop ebx; ret; 
0x00102f32: add al, 0x24; call 0xe7c80; add esp, 0x18; pop ebx; ret; 
0x000e8a9a: add al, 0x24; call 0xe8c60; add esp, 0x18; pop ebx; ret; 
0x000eaca0: add al, 0x24; call 0xea6f0; add esp, 0x1c; ret; 
0x000eb4ce: add al, 0x24; call 0xeb4e0; add esp, 0x18; pop ebx; ret; 
0x000eb446: add al, 0x24; call 0xeb5e0; add esp, 0x18; pop ebx; ret; 
0x00023996: add al, 0x24; call 0xec0b0; add esp, 0x18; pop ebx; ret; 
0x0014a3f9: add al, 0x24; call 0xec0d0; add esp, 0x18; pop ebx; ret; 
0x000ec5c0: add al, 0x24; call 0xec330; add esp, 0x1c; ret; 
0x000ec5a0: add al, 0x24; call 0xec440; add esp, 0x1c; ret; 
0x0007158f: add al, 0x24; call 0xeec70; add esp, 0x18; pop ebx; ret; 
0x000fb798: add al, 0x24; call 0xfa420; add esp, 0x18; pop ebx; ret; 
0x000fede5: add al, 0x24; call 0xfd430; add esp, 0x14; pop ebx; pop esi; ret; 
0x000fdf9c: add al, 0x24; call 0xfd430; add esp, 0x18; pop ebx; ret; 
0x000fe0a0: add al, 0x24; call 0xfdfb0; add esp, 0x1c; ret; 
0x0012eab0: add al, 0x24; call 0xffe30; add esp, 0x2c; ret; 
0x00064a6e: add al, 0x24; call dword ptr [eax + 0x10]; 
0x0001d2e5: add al, 0x24; call dword ptr [ebp + 4]; 
0x000e22a3: add al, 0x24; call dword ptr [ebp - 0x28]; 
0x00124931: add al, 0x24; call dword ptr [ebx - 0x1464]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x001248c1: add al, 0x24; call dword ptr [ebx - 0x1468]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00124849: add al, 0x24; call dword ptr [ebx - 0x146c]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000bb4fe: add al, 0x24; call dword ptr [ecx + 0x14]; 
0x000e1e05: add al, 0x24; call dword ptr [ecx + 0x24]; 
0x00074d49: add al, 0x24; call dword ptr [ecx]; 
0x0001e200: add al, 0x24; call dword ptr [edi + 4]; 
0x00111be1: add al, 0x24; call dword ptr [edx + 0x10]; 
0x0011b38c: add al, 0x24; call dword ptr [edx + 0x14]; 
0x0011f0c0: add al, 0x24; call dword ptr [edx + 0x20]; 
0x0011f0c0: add al, 0x24; call dword ptr [edx + 0x20]; add esp, 0x1c; ret; 
0x000726eb: add al, 0x24; call dword ptr [edx + 0x24]; 
0x0011f0a8: add al, 0x24; call dword ptr [edx + 0x24]; add esp, 0x1c; ret; 
0x0011f15b: add al, 0x24; call dword ptr [edx + 0x24]; add esp, 0x28; pop esi; ret; 
0x000726eb: add al, 0x24; call dword ptr [edx + 0x24]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0006ab13: add al, 0x24; call dword ptr [edx + 0x30]; 
0x0011195a: add al, 0x24; call dword ptr [edx + 0xc]; 
0x0011c9a0: add al, 0x24; call dword ptr [edx + 0xc]; add esp, 0x4c; ret; 
0x00111896: add al, 0x24; call dword ptr [edx + 4]; 
0x001140c8: add al, 0x24; call dword ptr [edx + 4]; add esp, 0x1c; ret; 
0x0011e5f0: add al, 0x24; call dword ptr [edx + 4]; add esp, 0x28; pop esi; ret; 
0x0011199d: add al, 0x24; call dword ptr [edx + 8]; 
0x001140e0: add al, 0x24; call dword ptr [edx]; 
0x001140e0: add al, 0x24; call dword ptr [edx]; add esp, 0x1c; ret; 
0x0007c19f: add al, 0x24; call dword ptr [esi + 0x1c]; 
0x0007c2b5: add al, 0x24; call dword ptr [esi + 0x20]; 
0x000e1912: add al, 0x24; call dword ptr [esi + 0x24]; 
0x0001cdd5: add al, 0x24; call dword ptr [esi + 4]; 
0x001144f3: add al, 0x24; call dword ptr [esi + 8]; 
0x00126ed1: add al, 0x24; call dword ptr [esi]; 
0x00115f32: add al, 0x24; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x0011e538: add al, 0x24; call dword ptr [esp + 0x40]; add esp, 0x3c; ret; 
0x00098679: add al, 0x24; call edi; 
0x00064fba: add al, 0x24; call edx; 
0x00064fba: add al, 0x24; call edx; add esp, 0x1c; ret; 
0x0009872c: add al, 0x24; call esi; 
0x000310f9: add al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x001194f3: add al, 0x24; mov dword ptr [esp + 0x458], ebp; call dword ptr [edx + 8]; 
0x0007250f: add al, 0x24; mov dword ptr [esp + 4], ecx; call dword ptr [edx + 0x20]; 
0x0007250f: add al, 0x24; mov dword ptr [esp + 4], ecx; call dword ptr [edx + 0x20]; add esp, 0x1c; ret; 
0x00127392: add al, 0x24; mov dword ptr [esp + 4], edx; call dword ptr [ebp - 0x7c]; 
0x000f8311: add al, 0x24; mov dword ptr [esp + 8], ecx; mov ecx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 4], ecx; call edx; 
0x00118aa0: add al, 0x24; mov dword ptr [esp + 8], esi; call dword ptr [ecx + 0xc]; 
0x00118aa0: add al, 0x24; mov dword ptr [esp + 8], esi; call dword ptr [ecx + 0xc]; add esp, 0x18; pop esi; ret; 
0x00017780: add al, 0x24; mov eax, dword ptr [ebp + 0xc]; call dword ptr [eax]; 
0x00124ab3: add al, 0x24; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 0x10]; 
0x00124dbf: add al, 0x24; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 0xc]; 
0x00124a4b: add al, 0x24; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 4]; 
0x00126dd4: add al, 0x24; mov eax, dword ptr [ebx - 0xfc]; call dword ptr [eax + 0x1b0]; add esp, 0x18; pop ebx; ret; 
0x000b08e9: add al, 0x24; mov eax, dword ptr [esp + 0x30]; call 0xae970; add esp, 0x2c; ret; 
0x000b2dc9: add al, 0x24; mov eax, dword ptr [esp + 0x30]; call 0xb09a0; add esp, 0x2c; ret; 
0x000276d9: add al, 0x24; mov eax, ecx; call 0x272d0; mov eax, dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x0002d596: add al, 0x24; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0002d58f: add al, 0x24; mov esi, dword ptr [esp + 4]; fld dword ptr [esp]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00079073: add al, 0x24; pop eax; add al, 0; add al, ch; ret 0xfffc; 
0x000752f5: add al, 0x24; ret 0x10; 
0x0002f731: add al, 0x24; ret; 
0x000e606b: add al, 0x24; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0010fb09: add al, 0x29; add byte ptr [eax], al; add byte ptr [ecx + 0x1089084a], cl; xor eax, eax; ret; 
0x00082dfe: add al, 0x29; call 0x8b2c6290; insb byte ptr es:[edi], dx; and al, 8; add esp, 0xc; ret; 
0x00082e8e: add al, 0x29; call 0x8b2c6320; insb byte ptr es:[edi], dx; and al, 8; add esp, 0xc; ret; 
0x00082ede: add al, 0x29; call 0x8b2c6370; insb byte ptr es:[edi], dx; and al, 8; add esp, 0xc; ret; 
0x0012b74b: add al, 0x29; ret 0x4689; 
0x0006d001: add al, 0x29; ret 0x5489; 
0x000a77aa: add al, 0x29; ret 0xd269; 
0x001295fc: add al, 0x29; ret 0xd789; 
0x000709d6: add al, 0x29; rol cl, 1; clc; add cl, byte ptr [ecx - 0x17f7dbbc]; pop ebx; ret 0xffff; 
0x00082e4e: add al, 0x29; ror byte ptr [ebx + 0x6c8b2434], 1; and al, 8; add esp, 0xc; ret; 
0x000704d2: add al, 0x2b; inc ebp; or al, 0x89; ret 0xfac1; 
0x00073d82: add al, 0x2b; inc esi; or al, 0x89; ret 0xfac1; 
0x001891b3: add al, 0x2c; add byte ptr [eax], al; add byte ptr [eax + 0x5400019f], bh; dec edi; hlt; call dword ptr [ebx + 1]; 
0x000eee71: add al, 0x30; ror byte ptr [ecx], 0xf0; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x000410a6: add al, 0x31; rol byte ptr [ebx + 0x5e5b20c4], 0x5f; ret; 
0x0010bb7a: add al, 0x31; ror byte ptr [ebx - 0x74dfdba4], 0x74; and al, 0x24; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000731cf: add al, 0x31; ror byte ptr [ebx - 0x74efdba4], 0x74; and al, 0x14; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0010ffcd: add al, 0x37; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000bd179: add al, 0x38; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x000834a1: add al, 0x39; bnd jne 0x83490; pop esi; ret; 
0x000834fd: add al, 0x39; bnd jne 0x834e8; pop esi; pop edi; ret; 
0x001234a5: add al, 0x39; ret 0x3676; 
0x000f5c41: add al, 0x3a; add byte ptr [eax], al; add byte ptr [ecx + 0x72e82434], cl; ret; 
0x00169f48: add al, 0x3b; int1; push dword ptr [eax + 0x3400014f]; cmp esi, ecx; call eax; 
0x0006eb77: add al, 0x3e; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0016d798: add al, 0x40; cli; jmp dword ptr [eax]; 
0x00184199: add al, 0x41; or eax, dword ptr [ebx]; add al, 0xa; push cs; adc al, 0x41; ret; 
0x0017c2d8: add al, 0x41; or eax, dword ptr [ebx]; add al, 0xa; push cs; adc al, 0x43; ret; 
0x00170159: add al, 0x41; or eax, dword ptr [ebx]; add eax, 0x140e0a02; inc ecx; ret; 
0x0016ff7a: add al, 0x41; or eax, dword ptr [ebx]; and dword ptr [ecx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00173bb6: add al, 0x41; or eax, dword ptr [ebx]; cmp byte ptr [edx], dl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001841b1: add al, 0x41; or eax, dword ptr [ebx]; dec byte ptr [0x41140e0a]; ret; 
0x0017005e: add al, 0x41; or eax, dword ptr [ebx]; in al, 3; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00184082: add al, 0x41; or eax, dword ptr [ebx]; mov cs, word ptr [edi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0019b7e1: add al, 0x41; or eax, dword ptr [ebx]; mov edx, 0x140e0a03; inc ecx; ret; 
0x0016ff92: add al, 0x41; or eax, dword ptr [ebx]; rol byte ptr [ecx], cl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0016fef1: add al, 0x41; or eax, dword ptr [ebx]; rol dword ptr [ecx], 0xa; push cs; adc al, 0x41; ret; 
0x0018c763: add al, 0x41; or eax, dword ptr [edi + 0xa]; ret; 
0x0017c2f0: add al, 0x41; or eax, dword ptr [edx]; in al, 0xa; push cs; adc al, 0x43; ret; 
0x00170171: add al, 0x41; or eax, dword ptr [edx]; insd dword ptr es:[edi], dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001700d2: add al, 0x41; or eax, dword ptr [edx]; iretd; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0016feda: add al, 0x41; or eax, dword ptr [edx]; mov esi, 0x41140e0a; ret; 
0x001701e1: add al, 0x41; or eax, dword ptr [edx]; pop edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0016fe54: add al, 0x41; or eax, dword ptr [edx]; popal; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0016ffaa: add al, 0x41; or eax, dword ptr [edx]; scasb al, byte ptr es:[edi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018d441: add al, 0x41; or eax, dword ptr [edx]; test dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0016fe3d: add al, 0x41; or eax, dword ptr [edx]; xchg eax, esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00189b14: add al, 0x41; or ebp, dword ptr [ebp + 0xa]; push cs; adc al, 0x43; ret; 
0x0016fdb8: add al, 0x41; or ebx, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00185ff1: add al, 0x41; or ecx, dword ptr [ebp + 0xa]; ret; 
0x00189985: add al, 0x41; or ecx, dword ptr [edi + 0xa]; push cs; adc al, 0x43; ret; 
0x0018a87a: add al, 0x41; or edi, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0018c0ff: add al, 0x41; or edi, dword ptr [esi + 0xa]; ret; 
0x0018d458: add al, 0x41; or edx, dword ptr [eax + 0xe]; adc al, 0x43; ret; 
0x00190acd: add al, 0x41; or edx, dword ptr [ebp + 0xa]; push cs; adc al, 0x43; ret; 
0x0016ffc1: add al, 0x41; or edx, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x0016fdce: add al, 0x41; or edx, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x001709d4: add al, 0x41; or esi, dword ptr [esi + 0xa]; ret; 
0x0016fcf3: add al, 0x41; or esp, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0016ffd7: add al, 0x41; or esp, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x001845c3: add al, 0x41; or esp, dword ptr [edi + 0xa]; ret; 
0x0019249d: add al, 0x41; or esp, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x001909d7: add al, 0x41; push cs; adc al, 0x83; add eax, 0x100e7402; ret; 
0x0017bedf: add al, 0x41; push cs; adc al, 0x83; add eax, 0x100edf02; ret; 
0x0017176b: add al, 0x41; push cs; adc al, 0x83; add eax, 0x1c00e46; add bh, byte ptr [edx + 0x43140e0a]; ret; 
0x00189a2f: add al, 0x41; push cs; adc al, 0x83; add eax, 0x2400e43; ret 0xe0a; 
0x001879cc: add al, 0x42; or eax, dword ptr [esi + 0xa]; ret; 
0x001928ef: add al, 0x42; or ecx, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x0018c0f7: add al, 0x42; or edx, dword ptr [edi + 0xa]; ret; 
0x0018a7a8: add al, 0x43; or eax, dword ptr [ebx]; push 0x140e0a03; inc esi; ret; 
0x00173996: add al, 0x43; or eax, dword ptr [ebx]; ror byte ptr [ecx], 0xa; push cs; adc al, 0x41; ret; 
0x0017d668: add al, 0x43; or eax, dword ptr [edx]; dec ebp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00198074: add al, 0x43; or eax, dword ptr [edx]; push esi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x001702f1: add al, 0x43; or edi, dword ptr [eax + 0xa]; push cs; adc al, 0x43; ret; 
0x0018a7d6: add al, 0x43; or esi, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x00183a59: add al, 0x43; or esp, dword ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x0018a739: add al, 0x43; or esp, dword ptr [edx + ecx + 0xe]; adc al, 0x46; ret; 
0x00185aa3: add al, 0x43; push cs; adc al, 0x83; add eax, 0x2400e43; ret 0xe0a; 
0x00174983: add al, 0x43; push cs; xor byte ptr [edx], al; mov eax, dword ptr [0x43100e0a]; ret; 
0x0017c8ab: add al, 0x44; or eax, dword ptr [eax]; add byte ptr [eax + eax], al; add byte ptr [esi + edx*8 - 0x20f80000], dh; out dx, eax; jmp dword ptr [esi]; 
0x001706af: add al, 0x44; or eax, dword ptr [ebx]; lea eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018a4fc: add al, 0x44; or eax, dword ptr [ebx]; or byte ptr [edx], al; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x0019291b: add al, 0x44; or eax, dword ptr [edx]; push eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018f158: add al, 0x44; or ebx, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x001973af: add al, 0x44; or edx, dword ptr [eax + 0xa]; ret; 
0x0017acf9: add al, 0x45; or eax, dword ptr [ebx]; and byte ptr [edx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0016fcdb: add al, 0x45; or eax, dword ptr [ebx]; cmp eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0019630a: add al, 0x45; or eax, dword ptr [ebx]; or eax, 0x140e0a01; inc ebx; ret; 
0x0018f21d: add al, 0x45; or eax, dword ptr [edx]; mov al, 0xa; ret; 
0x001706c7: add al, 0x45; or eax, dword ptr [edx]; xchg eax, esi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0018a7c0: add al, 0x45; or eax, dword ptr [esi + 0xa]; push cs; adc al, 0x46; ret; 
0x001886ff: add al, 0x45; or ebp, dword ptr [ebx + 0xa]; ret; 
0x001993c5: add al, 0x45; or ebp, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x00174233: add al, 0x45; or esi, dword ptr [esi + 0xa]; ret; 
0x0016fcc5: add al, 0x45; or esp, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x00189afd: add al, 0x46; or eax, dword ptr [edx]; movsb byte ptr es:[edi], byte ptr [esi]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00190c9b: add al, 0x46; or ecx, dword ptr [edi + 0xe]; adc al, 0x41; ret; 
0x00192905: add al, 0x46; or esi, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00179c0a: add al, 0x47; or eax, dword ptr [ebx]; add byte ptr [edx], al; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0017dc61: add al, 0x47; or eax, dword ptr [edx]; jo 0x17dc71; push cs; adc al, 0x43; ret; 
0x00178f91: add al, 0x47; or eax, dword ptr [edx]; mov word ptr [edx], cs; push cs; adc al, 0x41; ret; 
0x001729cd: add al, 0x47; or ebp, dword ptr [eax + 0xa]; ret; 
0x0017062b: add al, 0x47; or ebp, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x00191940: add al, 0x47; or ebx, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0018be99: add al, 0x47; or ebx, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x001842c6: add al, 0x48; or eax, dword ptr [ebx]; adc al, 0x10; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00190ab6: add al, 0x48; or eax, dword ptr [edx]; inc ecx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0018ebac: add al, 0x48; or eax, dword ptr [edx]; mov byte ptr [edx], cl; push cs; adc al, 0x46; ret; 
0x0018996e: add al, 0x48; or eax, dword ptr [edx]; pop ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018bab0: add al, 0x48; or ebp, dword ptr [edx + 0xa]; push cs; adc al, 0x43; ret; 
0x00178fa8: add al, 0x48; or edi, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x001973b7: add al, 0x48; or edi, dword ptr [esi + 0xa]; ret; 
0x0018571c: add al, 0x48; or edx, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x0018383c: add al, 0x49; int1; call dword ptr [edx]; 
0x0016c120: add al, 0x4e; clc; push dword ptr [eax - 0x1bfffda3]; dec esi; clc; call esp; 
0x000f3b60: add al, 0x50; add esp, 0xc; and eax, 0x1000; ret; 
0x000f3ac0: add al, 0x50; add esp, 0xc; and eax, 0x100; ret; 
0x000f3a20: add al, 0x50; add esp, 0xc; and eax, 0x2000; ret; 
0x000f37a0: add al, 0x50; add esp, 0xc; and eax, 0x200; ret; 
0x000f38e0: add al, 0x50; add esp, 0xc; and eax, 0x4000; ret; 
0x000f3520: add al, 0x50; add esp, 0xc; and eax, 0x400; ret; 
0x000f3840: add al, 0x50; add esp, 0xc; and eax, 0x8000; ret; 
0x000f35c0: add al, 0x50; add esp, 0xc; and eax, 1; ret; 
0x000f3660: add al, 0x50; add esp, 0xc; and eax, 2; ret; 
0x000f3980: add al, 0x50; add esp, 0xc; and eax, 4; ret; 
0x000f3480: add al, 0x50; add esp, 0xc; and eax, 8; ret; 
0x00026f3a: add al, 0x50; and eax, 0x1000; ret; 
0x00026f0a: add al, 0x50; and eax, 0x100; ret; 
0x00026eda: add al, 0x50; and eax, 0x2000; ret; 
0x00026e2a: add al, 0x50; and eax, 0x200; ret; 
0x00026e8a: add al, 0x50; and eax, 0x4000; ret; 
0x00026daa: add al, 0x50; and eax, 0x400; ret; 
0x00026e5a: add al, 0x50; and eax, 0x8000; ret; 
0x00026dfa: add al, 0x50; and eax, 0x800; ret; 
0x00026fca: add al, 0x50; and eax, 1; ret; 
0x00026dda: add al, 0x50; and eax, 2; ret; 
0x00026eba: add al, 0x50; and eax, 4; ret; 
0x00026d8a: add al, 0x50; and eax, 8; ret; 
0x0017b169: add al, 0x50; out dx, eax; jmp dword ptr [edx]; 
0x001328a2: add al, 0x51; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196b05: add al, 0x53; xchg dword ptr [edx], eax; push 0xc6c7040e; ret; 
0x0003f893: add al, 0x53; xor edx, edx; lea ecx, dword ptr [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00174adc: add al, 0x54; in eax, dx; call esp; 
0x001879c5: add al, 0x54; or ebx, dword ptr [esi + 0xa]; ret; 
0x00184d04: add al, 0x5b; add dword ptr [eax], eax; test al, 0xda; cli; call dword ptr [ecx + 3]; 
0x00022e66: add al, 0x5b; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0001a003: add al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0007afa2: add al, 0x5b; pop esi; ret; 
0x0007adce: add al, 0x5b; ret; 
0x0016c1e8: add al, 0x5d; clc; inc dword ptr [ecx + 0x5d740002]; clc; call eax; 
0x0014544b: add al, 0x5d; pop ebx; ret; 
0x00145452: add al, 0x5e; pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x000959f2: add al, 0x5e; pop edi; pop ebp; ret; 
0x000fa667: add al, 0x5e; pop edi; ret; 
0x001347d0: add al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00098588: add al, 0x5f; pop ebp; ret; 
0x0008b773: add al, 0x5f; pop ebx; ret; 
0x0008d939: add al, 0x5f; pop esi; pop ebx; ret; 
0x00089a4c: add al, 0x5f; ret; 
0x00077335: add al, 0x65; mov dword ptr [eax], 0xc; xor eax, eax; add esp, 0xc; ret; 
0x000d8a2b: add al, 0x66; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00089a57: add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, dword ptr [edx + 5]; pop edi; ret; 
0x00089b97: add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, dword ptr [edx + 5]; ret; 
0x00093e1a: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x00085687: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x000857b7: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x0008e319: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, dword ptr [edx + 9]; pop edi; ret; 
0x0008e479: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, dword ptr [edx + 9]; ret; 
0x0008ccd9: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x0008ce39: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x00112695: add al, 0x66; mov ebp, 0x54890001; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x001682f0: add al, 0x6e; in al, dx; call dword ptr [eax - 0x5c]; 
0x00168310: add al, 0x70; in al, dx; jmp eax; 
0x0016f018: add al, 0x72; std; jmp dword ptr [eax]; 
0x0006e580: add al, 0x73; or al, 0x8b; add dword ptr [ebx + 0xa8904c1], eax; add esp, 0x18; pop ebx; ret; 
0x0006e41f: add al, 0x73; or byte ptr [ebx + 0x4c18301], cl; mov dword ptr [edx], ecx; ret; 
0x000176fe: add al, 0x73; ret 0x7d80; 
0x000fc299: add al, 0x74; adc ecx, dword ptr [ebx + 0x7c8b2434]; and al, 4; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000d1bc6: add al, 0x74; add al, 0xa8; add dword ptr [edx + ebx*4 - 0xa], esi; ret 0x7408; 
0x000bb1f3: add al, 0x74; loope 0xbb25d; nop; mov eax, 1; pop esi; ret; 
0x000cb75a: add al, 0x74; or byte ptr [ebx - 0x7afbdb8c], cl; div byte ptr [ebx + ecx*8 - 0xa]; ret 0x7408; 
0x000e6825: add al, 0x74; push 0x7401f883; and ecx, dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x00098129: add al, 0x74; push es; lea eax, dword ptr [ebx - 0x595d4]; pop ebx; ret; 
0x00097d09: add al, 0x74; push es; lea eax, dword ptr [ebx - 0x597b4]; pop ebx; ret; 
0x0007d089: add al, 0x74; push es; lea eax, dword ptr [ebx - 0x5a4a4]; pop ebx; ret; 
0x00097e69: add al, 0x74; push es; lea eax, dword ptr [ebx - 0xfbd84]; pop ebx; ret; 
0x00097d49: add al, 0x74; push es; lea eax, dword ptr [ebx - 0xfcaa4]; pop ebx; ret; 
0x00097c8f: add al, 0x75; add ecx, dword ptr [ecx + 0x5f5e084a]; ret; 
0x001470a3: add al, 0x75; dec esi; add eax, 0xb; ret; 
0x000ca106: add al, 0x75; int1; or byte ptr [eax + 0x1a], 8; xor eax, eax; ret; 
0x000b35ab: add al, 0x75; lea eax, dword ptr [ebx - 0x3fceef3c]; pop esi; pop edi; pop ebp; ret; 
0x0011fe6c: add al, 0x75; mov dword ptr [ebx + 0x5e5b10c4], eax; pop edi; pop ebp; ret; 
0x000fc2d7: add al, 0x75; ret 0xdeeb; 
0x0007c34f: add al, 0x75; salc; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x001321eb: add al, 0x76; ret; 
0x000ce00c: add al, 0x7c; int1; pop esi; ret; 
0x0006c1c0: add al, 0x81; mov dword ptr [edx], eax; xor eax, eax; add esp, 0x1c; ret; 
0x0006aa33: add al, 0x83; and bh, cl; ret; 
0x0011f713: add al, 0x83; inc eax; adc al, 4; mov eax, 1; ret; 
0x001380ad: add al, 0x83; ljmp 0xf702:0x89068b04; ret 0xf; 
0x00104881: add al, 0x83; mov byte ptr [eax*4 + 0x753989ff], 0xed; add esp, 4; pop esi; pop edi; ret; 
0x0007d26c: add al, 0x83; out dx, al; add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x0007d26f: add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x000a7518: add al, 0x83; rcl dword ptr [eax], -0x7d; ret 0x8310; 
0x0001ed60: add al, 0x83; ret 0x3901; 
0x000bbf4a: add al, 0x83; ret 0x3904; 
0x0011fd16: add al, 0x83; ret 0x3908; 
0x00025721: add al, 0x83; ret 0x3910; 
0x0001ced8: add al, 0x83; ret 0x3b01; 
0x0001dc6e: add al, 0x83; ret 0x8301; 
0x0007c4c0: add al, 0x83; ret 0x8304; 
0x000c3494: add al, 0x83; ret 0x8305; 
0x000d4851: add al, 0x83; ret 0x8340; 
0x000e90f6: add al, 0x83; ret 0x8401; 
0x0007c4c3: add al, 0x83; ret 0x8404; 
0x001046ea: add al, 0x83; ret 0x8501; 
0x00097cc6: add al, 0x83; ret 0x8504; 
0x000d52a5: add al, 0x83; ret 0x8505; 
0x000b22b6: add al, 0x83; ret 0x8530; 
0x0011887c: add al, 0x83; ret 0x8901; 
0x0004bafe: add al, 0x83; ret 0x8904; 
0x001287c5: add al, 0x83; ret 0x8908; 
0x0004bb34: add al, 0x83; ret 0x8b04; 
0x000d0662: add al, 0x83; ret 0x8d04; 
0x00103789: add al, 0x83; ret 0xb801; 
0x000c0465: add al, 0x83; ret 0xeb04; 
0x000783da: add al, 0x83; ret 0xf07; 
0x0001d260: add al, 0x83; rol dword ptr [ecx], -0x7d; ret 0x3904; 
0x0016e348: add al, 0x84; sti; call dword ptr [eax + 0x4000323]; test ebx, edi; jmp esp; 
0x000cb760: add al, 0x85; div byte ptr [ebx + ecx*8 - 0xa]; ret 0x7408; 
0x000301f5: add al, 0x85; div byte ptr [esi - 0x77]; inc ebp; fsub st(1), st(0); ret 0xfffe; 
0x000edbae: add al, 0x85; ror byte ptr [ebx - 0xf77f], cl; push dword ptr [edi + ecx + 0x65]; mov dword ptr [eax], 0x26; mov eax, 0xffffffff; ret; 
0x0002e9b8: add al, 0x85; ror byte ptr [ecx + 0xf08247c], cl; test byte ptr [ebx - 0xa000000], al; ret 0x8901; 
0x000c7362: add al, 0x85; ror byte ptr [ecx - 0x77f04fab], cl; ret; 
0x000984cd: add al, 0x85; ror byte ptr [ecx - 0xc0b8af0], cl; ret; 
0x000c8ffb: add al, 0x85; ror byte ptr [edi], 0x94; ret 0x22e9; 
0x000c8d78: add al, 0x85; ror byte ptr [edi], 0x94; ret 0xa5e9; 
0x0007c320: add al, 0x85; sal byte ptr [ebp + 0x1a], 0xeb; cmp dword ptr [eax + 0x4244489], edx; mov eax, dword ptr [esi + 0x24]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x0007c2da: add al, 0x85; sal byte ptr [edi + ebx - 0x70], 0x39; ret 0x476; 
0x0016e350: add al, 0x85; sti; jmp esp; 
0x0018a1bf: add al, 0x87; add eax, dword ptr [ebx + eax*4 + 5]; add dh, byte ptr [ebp + 0xa]; ret; 
0x0017e1e1: add al, 0x87; add eax, dword ptr [ebx]; add al, 0xa; ret; 
0x001729bd: add al, 0x87; add eax, dword ptr [ebx]; cmpsd dword ptr [esi], dword ptr es:[edi]; add dword ptr [edx], ecx; ret; 
0x0016f985: add al, 0x87; add eax, dword ptr [ebx]; daa; add dword ptr [edx], ecx; ret; 
0x00172c19: add al, 0x87; add eax, dword ptr [ebx]; dec edi; add dword ptr [edx], ecx; ret; 
0x0017141d: add al, 0x87; add eax, dword ptr [ebx]; dec esp; add ecx, dword ptr [edx]; ret; 
0x00190f8d: add al, 0x87; add eax, dword ptr [ebx]; fld dword ptr [edx + ecx]; ret; 
0x0018473d: add al, 0x87; add eax, dword ptr [ebx]; imul eax, dword ptr [ecx], 0xa; ret; 
0x0017117d: add al, 0x87; add eax, dword ptr [ebx]; inc esp; add dword ptr [edx], ecx; ret; 
0x0018d989: add al, 0x87; add eax, dword ptr [ebx]; insd dword ptr es:[edi], dx; add dword ptr [edx], ecx; ret; 
0x00177e71: add al, 0x87; add eax, dword ptr [ebx]; int1; add dword ptr [edx], ecx; ret; 
0x00173ef1: add al, 0x87; add eax, dword ptr [ebx]; lar ecx, word ptr [edx]; ret; 
0x00174a4d: add al, 0x87; add eax, dword ptr [ebx]; pop ecx; add al, 0xa; ret; 
0x0017252d: add al, 0x87; add eax, dword ptr [ebx]; pop edi; add dword ptr [edx], ecx; ret; 
0x001984b1: add al, 0x87; add eax, dword ptr [ebx]; push eax; add dword ptr [edx], ecx; ret; 
0x00187f6d: add al, 0x87; add eax, dword ptr [ebx]; push ebx; add cl, byte ptr [edx]; ret; 
0x00195fb5: add al, 0x87; add eax, dword ptr [ebx]; push ebx; add dword ptr [edx], ecx; ret; 
0x0018a3c1: add al, 0x87; add eax, dword ptr [ebx]; pushfd; add dword ptr [edx], ecx; ret; 
0x0018cb35: add al, 0x87; add eax, dword ptr [ebx]; rol byte ptr [edx], 0xa; ret; 
0x0019887d: add al, 0x87; add eax, dword ptr [ebx]; salc; add cl, byte ptr [edx]; ret; 
0x0018f1fd: add al, 0x87; add eax, dword ptr [ebx]; wait; add cl, byte ptr [edx]; ret; 
0x00187c39: add al, 0x87; add eax, dword ptr [ebx]; xchg byte ptr [edx + ecx], al; ret; 
0x0016fbbd: add al, 0x87; add eax, dword ptr [ebx]; xchg eax, ebx; add cl, byte ptr [edx]; ret; 
0x00196511: add al, 0x87; add eax, dword ptr [ebx]; xchg eax, esi; add dword ptr [edx], ecx; ret; 
0x0017084b: add al, 0x87; add eax, dword ptr [ecx - 0x7d]; add eax, 0xa010f03; ret; 
0x0019b373: add al, 0x87; add eax, dword ptr [ecx - 0x7d]; add eax, 0xa014103; ret; 
0x0019a03f: add al, 0x87; add eax, dword ptr [ecx - 0x7d]; add eax, 0xa01a003; ret; 
0x0018b6df: add al, 0x87; add eax, dword ptr [edi - 0x7d]; add eax, 0xa03ba03; ret; 
0x00195dfd: add al, 0x87; add eax, dword ptr [edx]; arpl word ptr [edx], cx; ret; 
0x0019700d: add al, 0x87; add eax, dword ptr [edx]; dec byte ptr [edx]; ret; 
0x00187a89: add al, 0x87; add eax, dword ptr [edx]; fisttp qword ptr [edx]; ret; 
0x0018c3ed: add al, 0x87; add eax, dword ptr [edx]; fmul qword ptr [edx]; ret; 
0x00195e2d: add al, 0x87; add eax, dword ptr [edx]; jno 0x195e3d; ret; 
0x00193651: add al, 0x87; add eax, dword ptr [edx]; loope 0x193661; ret; 
0x001759bd: add al, 0x87; add eax, dword ptr [edx]; mov cs, word ptr [edx]; ret; 
0x0018d605: add al, 0x87; add eax, dword ptr [edx]; xchg byte ptr [edx], cl; ret; 
0x0019a76f: add al, 0x87; add ecx, dword ptr [ebp - 0x7d]; add eax, 0xa017803; ret; 
0x00191791: add al, 0x87; add edi, dword ptr [eax + 0xa]; ret; 
0x0017e249: add al, 0x87; add edi, dword ptr [ebx + 0xa]; ret; 
0x00184595: add al, 0x87; add edi, dword ptr [ecx + 0xa]; ret; 
0x00190ce5: add al, 0x87; add edx, dword ptr [esi + 0xa]; ret; 
0x001711bd: add al, 0x87; add esi, dword ptr [edi + 0xa]; ret; 
0x0007c5af: add al, 0x88; adc dword ptr fs:[ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00085676: add al, 0x88; inc edx; add al, 0x89; clc; pop edi; ret; 
0x00089a46: add al, 0x88; inc edx; add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x000e1904: add al, 0x88; mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], eax; mov eax, dword ptr [esi + 0xc]; mov dword ptr [esp], eax; call dword ptr [esi + 0x24]; 
0x0011ce0a: add al, 0x89; adc al, 0x24; call dword ptr [eax + 0xc]; 
0x000fc2f0: add al, 0x89; adc al, 0x24; call dword ptr [eax]; 
0x000fc2f0: add al, 0x89; adc al, 0x24; call dword ptr [eax]; add esp, 0x1c; ret; 
0x000ebc53: add al, 0x89; adc al, 0x24; call dword ptr [ebp + 0x10]; 
0x000a5cd7: add al, 0x89; adc al, 0x24; call edi; 
0x0001e839: add al, 0x89; adc al, 0x24; mov dword ptr [esp + 8], eax; call dword ptr [ebp]; 
0x0011949e: add al, 0x89; add al, 0x24; call 0x276f0; add esp, 0x18; pop ebx; ret; 
0x000a7b9a: add al, 0x89; add al, 0x24; call 0xa7a60; add esp, 0x48; pop ebx; ret; 
0x000aad4d: add al, 0x89; add al, 0x24; call 0xa7e90; add esp, 0x18; pop ebx; ret; 
0x0014a3f7: add al, 0x89; add al, 0x24; call 0xec0d0; add esp, 0x18; pop ebx; ret; 
0x000e22a1: add al, 0x89; add al, 0x24; call dword ptr [ebp - 0x28]; 
0x00111bdf: add al, 0x89; add al, 0x24; call dword ptr [edx + 0x10]; 
0x0011f0be: add al, 0x89; add al, 0x24; call dword ptr [edx + 0x20]; 
0x0011f0be: add al, 0x89; add al, 0x24; call dword ptr [edx + 0x20]; add esp, 0x1c; ret; 
0x0011f0a6: add al, 0x89; add al, 0x24; call dword ptr [edx + 0x24]; 
0x0011f0a6: add al, 0x89; add al, 0x24; call dword ptr [edx + 0x24]; add esp, 0x1c; ret; 
0x0011f159: add al, 0x89; add al, 0x24; call dword ptr [edx + 0x24]; add esp, 0x28; pop esi; ret; 
0x0011c99e: add al, 0x89; add al, 0x24; call dword ptr [edx + 0xc]; 
0x0011c99e: add al, 0x89; add al, 0x24; call dword ptr [edx + 0xc]; add esp, 0x4c; ret; 
0x00111894: add al, 0x89; add al, 0x24; call dword ptr [edx + 4]; 
0x001140c6: add al, 0x89; add al, 0x24; call dword ptr [edx + 4]; add esp, 0x1c; ret; 
0x0011e5ee: add al, 0x89; add al, 0x24; call dword ptr [edx + 4]; add esp, 0x28; pop esi; ret; 
0x0011649a: add al, 0x89; add al, 0x24; call dword ptr [edx + 8]; 
0x001140de: add al, 0x89; add al, 0x24; call dword ptr [edx]; 
0x001140de: add al, 0x89; add al, 0x24; call dword ptr [edx]; add esp, 0x1c; ret; 
0x00126ecf: add al, 0x89; add al, 0x24; call dword ptr [esi]; 
0x00115f30: add al, 0x89; add al, 0x24; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x000b5191: add al, 0x89; add al, 0x24; call edi; 
0x0011b5ec: add al, 0x89; add al, 0x24; call edx; 
0x000c8bbf: add al, 0x89; add al, 0x24; call esi; 
0x001194f1: add al, 0x89; add al, 0x24; mov dword ptr [esp + 0x458], ebp; call dword ptr [edx + 8]; 
0x00118a9e: add al, 0x89; add al, 0x24; mov dword ptr [esp + 8], esi; call dword ptr [ecx + 0xc]; 
0x000a7719: add al, 0x89; call 0x892a6fe1; ret 0xeac1; 
0x00093dfc: add al, 0x89; clc; pop ebx; pop edi; ret; 
0x00085679: add al, 0x89; clc; pop edi; ret; 
0x00083588: add al, 0x89; clc; pop esi; pop edi; pop ebp; ret; 
0x001016ce: add al, 0x89; clc; pop esi; pop edi; ret; 
0x0011211b: add al, 0x89; cmp al, 0x24; call dword ptr [eax + 0x10]; 
0x001134e9: add al, 0x89; cmp al, 0x24; call dword ptr [eax + 0x18]; 
0x0011f02a: add al, 0x89; cmp al, 0x24; call dword ptr [eax + 0x20]; 
0x001185c6: add al, 0x89; cmp al, 0x24; call dword ptr [eax + 0x24]; 
0x000724aa: add al, 0x89; cmp al, 0x24; call dword ptr [eax + 0xc]; 
0x00111876: add al, 0x89; cmp al, 0x24; call dword ptr [eax + 4]; 
0x00113365: add al, 0x89; cmp al, 0x24; call dword ptr [edx + 0x18]; 
0x00098f6b: add al, 0x89; cmp al, 0x24; call esi; 
0x001127ba: add al, 0x89; cmp al, 0x24; mov dword ptr [esp + 0x2c], eax; call dword ptr [edx + 0x10]; 
0x0006d0b1: add al, 0x89; cmp al, 0x24; mov dword ptr [esp + 4], eax; mov dword ptr [esp + 8], edx; call dword ptr [edi + 0xc]; 
0x0006cb85: add al, 0x89; cmp al, 0x24; mov dword ptr [esp + 8], edx; call dword ptr [edi + 0xc]; 
0x000317cf: add al, 0x89; cmp al, 0x24; mov dword ptr [esp + 8], edx; call esi; 
0x00032ade: add al, 0x89; cmp al, 0x24; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp + 4], edx; call eax; 
0x000826ef: add al, 0x89; cmp cl, byte ptr [ebp + 0x754e0452]; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0002c670: add al, 0x89; dec byte ptr [ecx + 0x45e82404]; sbb eax, 0x508d0005; add esi, esi; ret 0x6601; 
0x00071ed2: add al, 0x89; dec eax; and al, 0x5e; ret; 
0x0011b687: add al, 0x89; dec esp; and al, 0x10; mov dword ptr [esp], eax; call dword ptr [edx]; 
0x00111997: add al, 0x89; dec esp; and al, 0x18; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x0011f0ba: add al, 0x89; dec esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0x20]; 
0x0011f0a2: add al, 0x89; dec esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0x24]; 
0x001140c2: add al, 0x89; dec esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x001140da: add al, 0x89; dec esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx]; 
0x0012b2a5: add al, 0x89; dec esp; and al, 8; call dword ptr [eax + 0x40]; 
0x0011b39c: add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], 6; mov dword ptr [esp], eax; call dword ptr [edx + 0x14]; 
0x0006d8fe: add al, 0x89; dec esp; and al, 8; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x00031663: add al, 0x89; dec esp; and al, 8; mov dword ptr [esp], edx; call edi; 
0x00066a39: add al, 0x89; dec esp; and al, 8; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x00070283: add al, 0x89; dec esp; and al, 8; mov dword ptr [esp], esi; call dword ptr [edx + 0x40]; 
0x00031628: add al, 0x89; dec esp; and al, 8; mov ecx, dword ptr [esp + 0x30]; mov dword ptr [esp], ecx; call edi; 
0x000d6e1b: add al, 0x89; fldcw word ptr [ebx]; mov word ptr [ebx - 0xcc1cc], gs; jmp ecx; 
0x0008cbd7: add al, 0x89; inc edx; add al, 0x89; clc; pop edi; ret; 
0x0008ce16: add al, 0x89; inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x0008ce76: add al, 0x89; inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x0008e446: add al, 0x89; inc edx; add al, 0x8d; inc edx; pop es; ret; 
0x00073ba5: add al, 0x89; inc esi; adc al, 0xe9; sar esi, -1; jmp dword ptr [esi - 0x70]; 
0x0011451c: add al, 0x89; inc esi; adc byte ptr [eax + 1], bh; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x000311c1: add al, 0x89; inc esp; and al, 4; fld xword ptr [esp]; add esp, 0x10; ret; 
0x0006cb81: add al, 0x89; inc esp; and al, 4; mov dword ptr [esp], edi; mov dword ptr [esp + 8], edx; call dword ptr [edi + 0xc]; 
0x00070003: add al, 0x89; inc esp; and al, 8; mov dword ptr [esp], ebp; call ecx; 
0x0006fad9: add al, 0x89; inc esp; and al, 8; mov dword ptr [esp], esi; call dword ptr [ecx + 0x40]; 
0x0001d2dc: add al, 0x89; inc esp; and al, 8; mov eax, dword ptr [ebp + 0xc]; mov dword ptr [esp], eax; call dword ptr [ebp + 4]; 
0x0001e1f7: add al, 0x89; inc esp; and al, 8; mov eax, dword ptr [edi + 0xc]; mov dword ptr [esp], eax; call dword ptr [edi + 4]; 
0x000e1909: add al, 0x89; inc esp; and al, 8; mov eax, dword ptr [esi + 0xc]; mov dword ptr [esp], eax; call dword ptr [esi + 0x24]; 
0x0001cdcc: add al, 0x89; inc esp; and al, 8; mov eax, dword ptr [esi + 0xc]; mov dword ptr [esp], eax; call dword ptr [esi + 4]; 
0x001185c2: add al, 0x89; insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x0006b62f: add al, 0x89; jo 0x6b63b; mov dword ptr [eax], edx; mov dword ptr [eax + 0x20], ecx; pop esi; ret; 
0x00019bc8: add al, 0x89; ljmp 0x7c8b:0x2024748b; and al, 0x24; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x001194e6: add al, 0x89; mov esp, 0x45424; add byte ptr [ecx - 0x76fbdbb4], cl; add al, 0x24; mov dword ptr [esp + 0x458], ebp; call dword ptr [edx + 8]; 
0x000d9353: add al, 0x89; nop; or al, 1; add byte ptr [eax], al; xor eax, eax; ret; 
0x000d9369: add al, 0x89; nop; or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0006c323: add al, 0x89; or al, 0x24; call 0x6b6d0; add esp, 0x18; pop ebx; ret; 
0x00073e8f: add al, 0x89; or al, 0x24; call 0x73270; add esp, 0x18; pop ebx; ret; 
0x0011a753: add al, 0x89; or al, 0x24; call dword ptr [eax + 4]; 
0x0011e58e: add al, 0x89; or al, 0x24; call dword ptr [eax + 4]; add esp, 0x18; pop esi; ret; 
0x0011e5a6: add al, 0x89; or al, 0x24; call dword ptr [eax]; 
0x0007b93d: add al, 0x89; or al, 0x24; call eax; 
0x00021560: add al, 0x89; or al, 0x24; mov dword ptr [esp + 8], eax; call dword ptr [edi]; 
0x001110de: add al, 0x89; or al, 0x24; mov dword ptr [esp + 8], esi; call dword ptr [eax + 0xc]; 
0x00094a3a: add al, 0x89; or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000915f4: add al, 0x89; or byte ptr [ebx + 0x5e082444], cl; ret; 
0x0006b90c: add al, 0x89; or byte ptr [ebx - 0x2f76e73c], al; pop esi; ret; 
0x0008d945: add al, 0x89; pcmpgtd mm1, qword ptr [ecx + 0x5e5f0457]; pop ebx; ret; 
0x0004b1be: add al, 0x89; push 0x74c98410; ret 0x55e9; 
0x0011f55c: add al, 0x89; push eax; adc al, 0x5b; ret; 
0x00129917: add al, 0x89; push eax; dec esp; ret; 
0x00114253: add al, 0x89; push esp; and al, 0x1c; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x0011c34b: add al, 0x89; push esp; and al, 4; mov dword ptr [esp], ebp; call dword ptr [eax + 8]; 
0x001110da: add al, 0x89; push esp; and al, 4; mov dword ptr [esp], ecx; mov dword ptr [esp + 8], esi; call dword ptr [eax + 0xc]; 
0x0011412d: add al, 0x89; push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x0011415d: add al, 0x89; push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x0006d0b8: add al, 0x89; push esp; and al, 8; call dword ptr [edi + 0xc]; 
0x00079534: add al, 0x89; push esp; and al, 8; call eax; 
0x0011ea57: add al, 0x89; push esp; and al, 8; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0xc]; 
0x0011eaaa: add al, 0x89; push esp; and al, 8; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 8]; 
0x0006f9e9: add al, 0x89; push esp; and al, 8; mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x0006d63f: add al, 0x89; push esp; and al, 8; mov dword ptr [esp], esi; call dword ptr [eax + 0x40]; 
0x000e4ae7: add al, 0x89; ret 0x408d; 
0x0001f067: add al, 0x89; ret 0x4574; 
0x00098a9c: add al, 0x89; ret 0x474; 
0x000d58a6: add al, 0x89; ret 0x478b; 
0x0001fdaf: add al, 0x89; ret 0x5574; 
0x000dac44: add al, 0x89; ret 0x789; 
0x00124a55: add al, 0x89; ret 0x8365; 
0x000185a2: add al, 0x89; ret 0x8589; 
0x00114137: add al, 0x89; ret 0xc031; 
0x000c09ce: add al, 0x89; ret 0xc283; 
0x0012f485: add al, 0x89; ret 0xc889; 
0x000291db: add al, 0x89; ret 0xc985; 
0x000dae09: add al, 0x89; ret 0xd285; 
0x000d2e66: add al, 0x89; ret 0xd4eb; 
0x00079f48: add al, 0x89; ret 0xeac1; 
0x00126f3f: add al, 0x89; ret 0xebeb; 
0x00032fc3: add al, 0x89; ret 0xfac1; 
0x0002d63f: add al, 0x89; ret 0xff25; 
0x000b7be3: add al, 0x89; rol dword ptr [edi + 0x2bb8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000eede3: add al, 0x89; rol dword ptr [edi + 0xd7b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000eede3: add al, 0x89; rol dword ptr [edi + 0xd7b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; xchg ebx, ecx; ret; 
0x000eee03: add al, 0x89; rol dword ptr [edi + 0xd8b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000eee03: add al, 0x89; rol dword ptr [edi + 0xd8b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; xchg ebx, ecx; ret; 
0x000b903b: add al, 0x89; sal bl, 1; ret; 
0x0011c2f6: add al, 0x89; sub al, 0x24; call dword ptr [eax + 0x10]; 
0x0006ad79: add al, 0x89; sub al, 0x24; call dword ptr [eax + 0x1c]; 
0x0006db9a: add al, 0x89; sub al, 0x24; call dword ptr [eax + 0x48]; 
0x0011c34f: add al, 0x89; sub al, 0x24; call dword ptr [eax + 8]; 
0x0007bb5a: add al, 0x89; sub al, 0x24; call eax; 
0x000679c4: add al, 0x89; sub al, 0x24; call edi; 
0x000f7e14: add al, 0x89; sub al, 0x24; mov dword ptr [esp + 8], eax; call dword ptr [edi + 0x14]; 
0x001111c7: add al, 0x89; xor al, 0x24; call 0x112f00; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0011cd37: add al, 0x89; xor al, 0x24; call 0x11cb70; mov eax, dword ptr [esi + 8]; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x00112631: add al, 0x89; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x00112674: add al, 0x89; xor al, 0x24; call dword ptr [eax + 0x14]; 
0x000729fa: add al, 0x89; xor al, 0x24; call dword ptr [eax + 0x18]; 
0x00043cd7: add al, 0x89; xor al, 0x24; call dword ptr [eax + 0x1c]; 
0x0011ef42: add al, 0x89; xor al, 0x24; call dword ptr [eax + 0x20]; 
0x0011ef0f: add al, 0x89; xor al, 0x24; call dword ptr [eax + 0x24]; 
0x00066e75: add al, 0x89; xor al, 0x24; call dword ptr [eax + 0x2c]; 
0x0006fa5d: add al, 0x89; xor al, 0x24; call dword ptr [eax + 0x3c]; 
0x00064297: add al, 0x89; xor al, 0x24; call dword ptr [eax + 0x48]; 
0x0011cdef: add al, 0x89; xor al, 0x24; call dword ptr [eax + 0xc]; 
0x00114131: add al, 0x89; xor al, 0x24; call dword ptr [eax + 4]; 
0x0011eab2: add al, 0x89; xor al, 0x24; call dword ptr [eax + 8]; 
0x00114161: add al, 0x89; xor al, 0x24; call dword ptr [eax]; 
0x000c77e4: add al, 0x89; xor al, 0x24; call dword ptr [ebp - 0x50]; 
0x000478f0: add al, 0x89; xor al, 0x24; call dword ptr [ecx + 0x1c]; 
0x000bba26: add al, 0x89; xor al, 0x24; call dword ptr [ecx + 0x20]; 
0x0012b764: add al, 0x89; xor al, 0x24; call dword ptr [ecx + 0x38]; 
0x0006bfb9: add al, 0x89; xor al, 0x24; call dword ptr [edx + 0x18]; 
0x0007167d: add al, 0x89; xor al, 0x24; call dword ptr [edx + 0x38]; 
0x00048e76: add al, 0x89; xor al, 0x24; call eax; 
0x00042cb1: add al, 0x89; xor al, 0x24; mov dword ptr [ebp - 0x57c], edx; call dword ptr [eax + 0x1c]; 
0x0001f9cc: add al, 0x89; xor al, 0x24; mov dword ptr [esp + 8], eax; call dword ptr [ebp]; 
0x00031683: add al, 0x89; xor al, 0x24; mov dword ptr [esp + 8], ecx; call edi; 
0x0012af1a: add al, 0x89; xor al, 0x24; mov dword ptr [esp + 8], edx; call dword ptr [eax + 0x3c]; 
0x0006ceb9: add al, 0x89; xor al, 0x24; sub eax, ebp; mov dword ptr [esp + 8], eax; call dword ptr [edx + 0x38]; 
0x000711de: add al, 0x89; xor al, 0x24; sub edx, eax; mov dword ptr [esp + 8], edx; call dword ptr [ecx + 0x38]; 
0x000828f4: add al, 0x89; xor byte ptr [ebp + 0x75490440], cl; pop esi; ret; 
0x001780b4: add al, 0x8a; add byte ptr [eax], al; pop esi; daa; sti; call dword ptr [eax]; 
0x0008ce19: add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x0008ccb9: add al, 0x8a; inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x000999a4: add al, 0x8b; adc byte ptr [ebp - 0xc128a2e], al; ret; 
0x00026f2e: add al, 0x8b; adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x00026efe: add al, 0x8b; adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x00026ece: add al, 0x8b; adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x00026e1e: add al, 0x8b; adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00026e7e: add al, 0x8b; adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00026d9e: add al, 0x8b; adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00026e4e: add al, 0x8b; adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00026dee: add al, 0x8b; adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x00026fbe: add al, 0x8b; adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00026dce: add al, 0x8b; adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x00026eae: add al, 0x8b; adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00026d7e: add al, 0x8b; adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x000bd177: add al, 0x8b; add al, 0x38; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x001298c7: add al, 0x8b; add al, 0x90; mov eax, dword ptr [eax]; ret; 
0x001298e7: add al, 0x8b; add al, 0x90; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0006a013: add al, 0x8b; add byte ptr [0x200], ah; ret; 
0x00069fe3: add al, 0x8b; add byte ptr [0x804], ah; ret; 
0x0007bbdf: add al, 0x8b; add dword ptr [eax - 0x76ffffe7], 4; and al, 0xe8; bound ecx, qword ptr [eax]; std; jmp dword ptr [ebp - 0x7d]; 
0x00093de2: add al, 0x8b; add dword ptr [ecx + 0x5bf88902], ecx; pop edi; ret; 
0x00090f32: add al, 0x8b; add dword ptr [ecx + 0x5ff88902], ecx; ret; 
0x00124d11: add al, 0x8b; and eax, 0xe; add byte ptr [eax], al; call dword ptr [eax + 8]; 
0x000d95b2: add al, 0x8b; and eax, 0xe; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0xc]; 
0x0006b5fb: add al, 0x8b; dec eax; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x000c8219: add al, 0x8b; dec ebp; mov al, 0x85; ror byte ptr [edi], 0x94; ret 0x8d89; 
0x001295f9: add al, 0x8b; inc eax; add al, 0x29; ret 0xd789; 
0x000271e7: add al, 0x8b; inc eax; cmp al, 0x8b; add al, 0x90; ret; 
0x001298d3: add al, 0x8b; inc eax; dec eax; ret; 
0x00129903: add al, 0x8b; inc eax; dec esp; ret; 
0x000e5db3: add al, 0x8b; inc eax; or byte ptr [0x100f], ah; ret; 
0x00129983: add al, 0x8b; inc eax; pop eax; ret; 
0x00129933: add al, 0x8b; inc eax; pop esp; ret; 
0x00129923: add al, 0x8b; inc eax; push eax; ret; 
0x00129993: add al, 0x8b; inc eax; push esp; ret; 
0x00067460: add al, 0x8b; inc ebp; push esp; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x000e1e00: add al, 0x8b; inc ecx; or al, 0x89; add al, 0x24; call dword ptr [ecx + 0x24]; 
0x0008ce79: add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x0008cd19: add al, 0x8b; inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x0008e499: add al, 0x8b; inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, dword ptr [edx + 0xa]; ret; 
0x0008ce59: add al, 0x8b; inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x00073126: add al, 0x8b; inc ecx; xor byte ptr [ebp - 0x7ce98b40], al; sal dword ptr [eax], 0x39; ret 0x775; 
0x000bd174: add al, 0x8b; inc esi; add al, 0x8b; add al, 0x38; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x0007c19a: add al, 0x8b; inc esi; and al, 0x89; add al, 0x24; call dword ptr [esi + 0x1c]; 
0x0007c2b0: add al, 0x8b; inc esi; and al, 0x89; add al, 0x24; call dword ptr [esi + 0x20]; 
0x000faafd: add al, 0x8b; inc esp; and al, 0x20; mov dword ptr [esp], eax; call edx; 
0x00124db9: add al, 0x8b; inc esp; and al, 0x20; mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 0xc]; 
0x00124a45: add al, 0x8b; inc esp; and al, 0x20; mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 4]; 
0x00094a5e: add al, 0x8b; inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x0002d65e: add al, 0x8b; inc esp; and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000d8a46: add al, 0x8b; inc esp; and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0009160b: add al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x00033e31: add al, 0x8b; insb byte ptr es:[edi], dx; and al, 0x10; add esp, 0x14; ret; 
0x000cabac: add al, 0x8b; insb byte ptr es:[edi], dx; and al, 0x38; add esp, 0x3c; ret 8; 
0x0002692c: add al, 0x8b; insb byte ptr es:[edi], dx; and al, 8; add esp, 0xc; ret; 
0x0010357b: add al, 0x8b; jns 0x103587; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x0001ec46: add al, 0x8b; mov word ptr [eax + eax*4], fs; add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbbc], cl; or al, 0x24; call dword ptr [esi]; 
0x00142af7: add al, 0x8b; mov word ptr [ebx - 0x567f4], cs; mov eax, dword ptr [ebx + eax*4 - 0x567f4]; sub eax, ecx; pop ebx; ret; 
0x0009816e: add al, 0x8b; or al, byte ptr [ebp + 0x5ef375c9]; pop edi; pop ebp; ret; 
0x0004bb37: add al, 0x8b; or byte ptr [ebp - 0x74158a37], al; adc al, byte ptr [ebp - 0x76e18a2e]; ret 0x542b; 
0x000caf5f: add al, 0x8b; pop esp; and al, 0x24; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000264ba: add al, 0x8b; push ebp; or byte ptr [ebp - 0x5cf000ba], cl; ret 0x8a72; 
0x001144eb: add al, 0x8b; push es; mov dword ptr [esp + 8], edi; mov dword ptr [esp], eax; call dword ptr [esi + 8]; 
0x00114968: add al, 0x8b; push es; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x000716c3: add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x000d845e: add al, 0x8b; push esp; and al, 0x1c; mov dword ptr [eax + 8], edx; add esp, 8; ret; 
0x0007a105: add al, 0x8b; push esp; and al, 0x1c; mov dword ptr [esp], edx; call eax; 
0x00126cac: add al, 0x8b; push esp; and al, 0x1c; mov eax, dword ptr [eax + 0x1a0]; mov dword ptr [esp], edx; call eax; 
0x000fb895: add al, 0x8b; push esp; and al, 0x20; mov dword ptr [esp], edx; call eax; 
0x000a5eb6: add al, 0x8b; push esp; and al, 0x2c; mov dword ptr [esp], edx; call edi; 
0x0001985b: add al, 0x8b; push esp; and al, 0x30; mov dword ptr [esp], edx; call eax; 
0x00114b73: add al, 0x8b; push esp; and al, 0x60; mov dword ptr [esp], edx; call eax; 
0x0011f723: add al, 0x8b; push esp; and al, 0xc; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x00033018: add al, 0x8b; push esp; and al, 4; add esp, 0x14; ret; 
0x0011fc14: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0xc], edx; ret; 
0x000d8a53: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00073153: add al, 0x8b; push esp; and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00025203: add al, 0x8b; push esp; and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x00025f89: add al, 0x8b; sbb al, 0x24; add esp, 8; ret; 
0x000ddf41: add al, 0x8b; sbb al, 0x24; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; add esp, 8; ret; 
0x0002e0dd: add al, 0x8b; sbb al, 0x24; mov dword ptr gs:[eax], 0x16; or eax, 0xffffffff; add esp, 8; ret; 
0x001131ed: add al, 0x8b; sbb al, 0x24; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x00026a8e: add al, 0x8b; sub dword ptr [eax + 0x65fffffe], 0x448b008b; nop; inc eax; ret; 
0x0002700e: add al, 0x8b; sub dword ptr [eax + 0x65fffffe], 0x8b008b; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00026fde: add al, 0x8b; sub dword ptr [eax + 0x65fffffe], 0x8b008b; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00115efb: add al, 0x8b; xchg eax, edx; mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x00082f1c: add al, 0x8b; xor al, 0x24; add esp, 8; ret; 
0x0016b558: add al, 0x8c; idiv bh; mov byte ptr [edx + eax], bl; add byte ptr [esi + ecx*4 - 0xa], al; jmp eax; 
0x0006c1be: add al, 0x8d; add al, 0x81; mov dword ptr [edx], eax; xor eax, eax; add esp, 0x1c; ret; 
0x0011f16a: add al, 0x8d; dec esp; and al, 0x1c; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0x20]; 
0x0011e9b7: add al, 0x8d; dec esp; and al, 0x1c; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x0011e602: add al, 0x8d; dec esp; and al, 0x1c; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx]; 
0x0011861f: add al, 0x8d; dec esp; and al, 0x5c; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x00095a60: add al, 0x8d; inc edi; lcall ptr [esi + 0x5f]; pop ebp; ret; 
0x00089a49: add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x0008e1fa: add al, 0x8d; inc edx; pop es; pop edi; ret; 
0x0008e449: add al, 0x8d; inc edx; pop es; ret; 
0x001103ef: add al, 0x8d; inc esp; xor cl, byte ptr [eax]; pop esi; ret; 
0x0010383b: add al, 0x8d; or dword ptr [edi + eax - 0xa], 0xffffffff; mov dword ptr [esp], eax; call edx; 
0x0001a666: add al, 0x8d; push ebp; in al, 0x89; adc al, 0x24; call eax; 
0x0005670d: add al, 0x8d; push ebp; movsb byte ptr es:[edi], byte ptr [esi]; mov dword ptr [esp], edx; call eax; 
0x000428b5: add al, 0x8d; push ebp; nop; mov dword ptr [esp], edx; call eax; 
0x0004e38d: add al, 0x8d; push ebp; pushfd; mov dword ptr [esp], edx; call eax; 
0x0011f022: add al, 0x8d; push esp; and al, 0x28; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x0011ef3a: add al, 0x8d; push esp; and al, 0x28; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x20]; 
0x0011e6ba: add al, 0x8d; push esp; and al, 0x28; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x0011f006: add al, 0x8d; push esp; and al, 0x2c; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x0011ef1e: add al, 0x8d; push esp; and al, 0x2c; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x0011e69e: add al, 0x8d; push esp; and al, 0x2c; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x0005ba5d: add al, 0x8d; xchg eax, esp; and al, 0x90; add dword ptr [eax], 0x24148900; call eax; 
0x0010f488: add al, 0x8d; xor dword ptr [ebp - 0x2d], 0xfffffffb; dec dword ptr [ecx + 0x39e82404]; adc bh, bh; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x0016ba28: add al, 0x8f; idiv edi; dec esp; cmp byte ptr [edx], al; add byte ptr [edi + ecx*4 - 9], al; jmp dword ptr [eax + 0x38]; 
0x000983ea: add al, 0x90; lea esi, dword ptr [esi]; ret; 
0x001298c9: add al, 0x90; mov eax, dword ptr [eax]; ret; 
0x001298e9: add al, 0x90; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000271dc: add al, 0x90; ret; 
0x0002e898: add al, 0x91; setne al; movzx eax, al; ret; 
0x00168440: add al, 0x92; in al, dx; jmp eax; 
0x00168468: add al, 0x96; in al, dx; call eax; 
0x00198904: add al, 0x97; add al, byte ptr [eax]; cmp byte ptr [eax], ch; clc; call dword ptr [ebx]; 
0x001680a4: add al, 0x99; add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; xor al, 0xec; call esp; 
0x00190eec: add al, 0x99; idiv bh; ret; 
0x0016c650: add al, 0xa6; clc; call esp; 
0x000d1bc8: add al, 0xa8; add dword ptr [edx + ebx*4 - 0xa], esi; ret 0x7408; 
0x000c8048: add al, 0xa; add byte ptr [eax], al; add byte ptr [ecx + 0x4c892434], cl; and al, 8; call dword ptr [ebp - 0x78]; 
0x000f5c24: add al, 0xa; add byte ptr [eax], al; add byte ptr [ecx - 0x7017dbcc], cl; ret; 
0x000f2888: add al, 0xa; lea esi, dword ptr [esi]; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000f324a: add al, 0xa; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000f3bbd: add al, 0xa; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0017c23e: add al, 0xa; push cs; adc al, 0x41; ret; 
0x0017c2dd: add al, 0xa; push cs; adc al, 0x43; ret; 
0x001711d0: add al, 0xa; ret; 
0x00168518: add al, 0xaf; in al, dx; push dword ptr [eax + 0x140000af]; scasd eax, dword ptr es:[edi]; in al, dx; jmp eax; 
0x0002eb0c: add al, 0xb2; xor eax, eax; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0002e8c9: add al, 0xb2; xor eax, eax; pop esi; ret; 
0x0008f53e: add al, 0xb3; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000dda75: add al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011d2e5: add al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; mov esi, dword ptr [esp + 0x10]; add esp, 0x1c; ret; 
0x0011f717: add al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000ded29: add al, 0xb8; and dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000de139: add al, 0xb8; arpl word ptr [eax], ax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000de565: add al, 0xb8; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000de565: add al, 0xb8; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000b92e9: add al, 0xb8; cmp dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ef9f9: add al, 0xb8; fld dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ef5a5: add al, 0xb8; inc byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ef275: add al, 0xb8; jno 0xef279; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e7e19: add al, 0xb8; jns 0xe7e1d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b7ba5: add al, 0xb8; jp 0xb7ba9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ef9b5: add al, 0xb8; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000df6a5: add al, 0xb8; or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e0b15: add al, 0xb8; or al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000df603: add al, 0xb8; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e0929: add al, 0xb8; or dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000df1c9: add al, 0xb8; pop dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0001925f: add al, 0xb8; ret 0; 
0x000aac85: add al, 0xb8; sbb dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b7ed5: add al, 0xb8; sbb eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000df575: add al, 0xb8; sub al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e0bb5: add al, 0xb8; sub byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000df4b5: add al, 0xb8; sub dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b92a5: add al, 0xb8; test byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000df6e5: add al, 0xb8; test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ef429: add al, 0xb8; xchg byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000eed49: add al, 0xb8; xor al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e8015: add al, 0xb8; xor eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0016d0e4: add al, 0xb9; add al, byte ptr [eax]; mov ah, 0xb4; stc; jmp dword ptr [eax]; 
0x000f2b52: add al, 0xb; add byte ptr [ecx - 0x8fbdb8c], cl; ret 0xff80; 
0x0016c720: add al, 0xbb; clc; jmp dword ptr [eax + 0x7b]; 
0x0017b3b4: add al, 0xbd; add byte ptr [eax], al; insd dword ptr es:[edi], dx; imul bh; call dword ptr [eax]; 
0x0016ac50: add al, 0xbf; hlt; call eax; 
0x0017b6b4: add al, 0xc0; add byte ptr [eax], al; push ebp; hlt; out dx, eax; call dword ptr [eax]; 
0x00030de1: add al, 0xc0; add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x00196082: add al, 0xc3; sub al, 0; add byte ptr [eax], al; mov byte ptr [esi + 2], ch; add byte ptr [esi - 9], al; call dword ptr [ebx]; 
0x0016d2cc: add al, 0xc4; add al, byte ptr [eax]; inc esp; aad 0xf9; dec dword ptr [eax]; ret; 
0x0016ace0: add al, 0xc4; hlt; call eax; 
0x00178b12: add al, 0xc5; cmp al, 0; add byte ptr [eax], al; sbb byte ptr [ecx + 0x31c40000], bl; out dx, eax; call eax; 
0x00188bb2: add al, 0xc5; cmp byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x44000199; sbb al, 0xf4; jmp dword ptr [ebp]; 
0x0018323f: add al, 0xc5; dec eax; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x00196fa9: add al, 0xc5; dec eax; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x001986f5: add al, 0xc5; dec eax; or eax, dword ptr [edx]; mov byte ptr [0x41140e0a], al; ret; 
0x0016fae7: add al, 0xc5; dec eax; or eax, dword ptr [edx]; test byte ptr [esi], cl; adc al, 0x41; ret; 
0x00197e35: add al, 0xc5; dec eax; or ebp, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x0018d68b: add al, 0xc5; dec eax; or ebp, dword ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x00179deb: add al, 0xc5; dec eax; or ecx, dword ptr [esi + 0xa]; ret; 
0x00199448: add al, 0xc5; dec eax; or edi, dword ptr [ecx + 0xa]; push cs; adc al, 0x43; ret; 
0x00194098: add al, 0xc5; dec eax; or edx, dword ptr [eax + eax]; add byte ptr [eax + 0x4c00024e], ah; adc al, 0xf7; call dword ptr [edx + 3]; 
0x00197817: add al, 0xc5; dec eax; or edx, dword ptr [edi + 0xe]; adc al, 0x43; ret; 
0x0018770b: add al, 0xc5; dec eax; or edx, dword ptr [esi + 0xa]; ret; 
0x0019a5bf: add al, 0xc5; dec eax; or esp, dword ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x00197f89: add al, 0xc5; dec eax; or esp, dword ptr [ecx + 0xe]; adc al, 0x41; ret; 
0x0019903d: add al, 0xc5; dec eax; or esp, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x001831bd: add al, 0xc5; dec ecx; or ecx, dword ptr [ecx + 0xa]; push cs; adc al, 0x44; ret; 
0x0018968c: add al, 0xc5; dec ecx; or edi, dword ptr [edx + ecx + 0xe]; adc al, 0x43; ret; 
0x0018c468: add al, 0xc5; dec ecx; or edx, dword ptr [esi + 0xa]; ret; 
0x0017dc48: add al, 0xc5; inc ebp; or eax, dword ptr [ebx]; mov ebx, 0x140e0a03; inc ebx; ret; 
0x001981f5: add al, 0xc5; inc ebp; or eax, dword ptr [ebx]; test dword ptr [ecx], 0x41140e0a; ret; 
0x00174625: add al, 0xc5; inc ebp; or eax, dword ptr [edx]; push esi; ret; 
0x001874e1: add al, 0xc5; inc ebp; or eax, dword ptr [esi + 0xa]; push cs; adc al, 0x46; ret; 
0x0018be82: add al, 0xc5; inc ebp; or ebx, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x00185abf: add al, 0xc5; inc ebp; or ebx, dword ptr [esi + 0xa]; push cs; adc al, 0x43; ret; 
0x0018a791: add al, 0xc5; inc ebp; or edi, dword ptr [edi + 0xa]; push cs; adc al, 0x43; ret; 
0x0019242f: add al, 0xc5; inc ebp; or edx, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x00193eb3: add al, 0xc5; inc ebp; or esi, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0016f654: add al, 0xc5; inc ebx; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x0019a10c: add al, 0xc5; inc ebx; or eax, dword ptr [ebx]; pop edi; add al, 0xa; ret; 
0x00170814: add al, 0xc5; inc ebx; or eax, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0018883d: add al, 0xc5; inc ebx; or eax, dword ptr [edx]; out 0xa, al; ret; 
0x001923db: add al, 0xc5; inc ebx; or ebp, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x0017e1f0: add al, 0xc5; inc ebx; or ebp, dword ptr [esi + 0xa]; ret; 
0x00174738: add al, 0xc5; inc ebx; or ebx, dword ptr [edi + 0xa]; push cs; adc al, 0x43; ret; 
0x001958b4: add al, 0xc5; inc ebx; or ebx, dword ptr [edx + 0xa]; push cs; adc al, 0x43; ret; 
0x001759cb: add al, 0xc5; inc ebx; or ebx, dword ptr [edx + 0xa]; ret; 
0x0018b265: add al, 0xc5; inc ebx; or ebx, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x00198e9f: add al, 0xc5; inc ebx; or edi, dword ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x001887c7: add al, 0xc5; inc ebx; or edx, dword ptr [eax + 0xa]; ret; 
0x001959a4: add al, 0xc5; inc ebx; or esp, dword ptr [eax + 0xa]; push cs; adc al, 0x43; ret; 
0x0018cb83: add al, 0xc5; inc ecx; or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x001700b9: add al, 0xc5; inc ecx; or eax, dword ptr [ebx]; add dword ptr [ecx], 0x41140e0a; ret; 
0x00190cf2: add al, 0xc5; inc ecx; or eax, dword ptr [ebx]; cdq; add dword ptr [edx], ecx; ret; 
0x0017e256: add al, 0xc5; inc ecx; or eax, dword ptr [ebx]; cmc; add cl, byte ptr [edx]; ret; 
0x0016fec1: add al, 0xc5; inc ecx; or eax, dword ptr [ebx]; mov edx, 0x140e0a02; inc ecx; ret; 
0x00196520: add al, 0xc5; inc ecx; or eax, dword ptr [ebx]; pop edx; add dword ptr [edx], ecx; ret; 
0x001835d6: add al, 0xc5; inc ecx; or eax, dword ptr [ebx]; push 0x140e0a01; inc ecx; ret; 
0x00186540: add al, 0xc5; inc ecx; or eax, dword ptr [ebx]; push ecx; add dword ptr [edx], ecx; ret; 
0x00173f00: add al, 0xc5; inc ecx; or eax, dword ptr [ebx]; pushfd; add dword ptr [edx], ecx; ret; 
0x001845a2: add al, 0xc5; inc ecx; or eax, dword ptr [ebx]; ret; 
0x001711ca: add al, 0xc5; inc ecx; or eax, dword ptr [ebx]; stosd dword ptr es:[edi], eax; add al, 0xa; ret; 
0x00170239: add al, 0xc5; inc ecx; or eax, dword ptr [ebx]; test dword ptr [edx], 0x41140e0a; ret; 
0x00172a33: add al, 0xc5; inc ecx; or eax, dword ptr [edx]; arpl word ptr [esi], cx; adc al, 0x41; ret; 
0x001960df: add al, 0xc5; inc ecx; or eax, dword ptr [edx]; cwde; ret; 
0x0019179e: add al, 0xc5; inc ecx; or eax, dword ptr [edx]; in eax, 0xa; ret; 
0x00197683: add al, 0xc5; inc ecx; or ebp, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x0018989c: add al, 0xc5; inc ecx; or ebp, dword ptr [ecx + 0xa]; push cs; adc al, 0x43; ret; 
0x00184564: add al, 0xc5; inc ecx; or ebp, dword ptr [esi + 0xa]; ret; 
0x0019585b: add al, 0xc5; inc ecx; or ebx, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x00171387: add al, 0xc5; inc ecx; or ebx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x0017c178: add al, 0xc5; inc ecx; or ebx, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0017d1d8: add al, 0xc5; inc ecx; or ebx, dword ptr [edi + 0xa]; push cs; adc al, 0x46; ret; 
0x001946d0: add al, 0xc5; inc ecx; or ecx, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x001856b0: add al, 0xc5; inc ecx; or ecx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x00171508: add al, 0xc5; inc ecx; or ecx, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x001896d4: add al, 0xc5; inc ecx; or edi, dword ptr [eax + eax]; add byte ptr [eax], al; fsub qword ptr [ecx + eax - 0xb932000]; jmp dword ptr [edi + 2]; 
0x00195fc4: add al, 0xc5; inc ecx; or edx, dword ptr [ebp + 0xa]; ret; 
0x00196cc4: add al, 0xc5; inc ecx; or edx, dword ptr [ecx + 0xa]; ret; 
0x0018832f: add al, 0xc5; inc ecx; or edx, dword ptr [esi + 0xa]; ret; 
0x00190d9f: add al, 0xc5; inc ecx; or edx, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x0018a5ba: add al, 0xc5; inc ecx; or esi, dword ptr [eax + 0xa]; push cs; adc al, 0x43; ret; 
0x00190c84: add al, 0xc5; inc ecx; or esi, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x0016fd89: add al, 0xc5; inc ecx; or esp, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x00170a34: add al, 0xc5; inc ecx; or esp, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x0018335b: add al, 0xc5; inc edi; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x00191a0c: add al, 0xc5; inc edi; or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x001971bf: add al, 0xc5; inc edi; or eax, dword ptr [ebx + 0xe]; adc al, 0x46; ret; 
0x0017bfb8: add al, 0xc5; inc edi; or eax, dword ptr [ebx]; cmp eax, 0x140e0a01; inc ebx; ret; 
0x00170613: add al, 0xc5; inc edi; or eax, dword ptr [edx]; mov dword ptr [0x41140e0a], eax; ret; 
0x001744d1: add al, 0xc5; inc edi; or eax, dword ptr [esi + 0xa]; push cs; adc al, 0x46; ret; 
0x001984c0: add al, 0xc5; inc edi; or eax, dword ptr [esi + 0xa]; ret; 
0x00184467: add al, 0xc5; inc edi; or eax, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x00172c8f: add al, 0xc5; inc edi; or ebp, dword ptr [eax + 0xe]; adc al, 0x46; ret; 
0x0018c324: add al, 0xc5; inc edi; or ebx, dword ptr [ebx + 0xa]; ret; 
0x00189a8c: add al, 0xc5; inc edi; or ecx, dword ptr [edx + ecx + 0xe]; adc al, 0x43; ret; 
0x0018d42a: add al, 0xc5; inc edi; or edx, dword ptr [eax + 0xa]; push cs; adc al, 0x43; ret; 
0x00190a9f: add al, 0xc5; inc edi; or esi, dword ptr [eax + 0xa]; push cs; adc al, 0x43; ret; 
0x001765d7: add al, 0xc5; inc edi; or esp, dword ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x00187b63: add al, 0xc5; inc edx; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x0018f27f: add al, 0xc5; inc edx; or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x001726d7: add al, 0xc5; inc edx; or ebx, dword ptr [edi + 0xa]; ret; 
0x00174678: add al, 0xc5; inc edx; or esp, dword ptr [eax + 0xa]; push cs; adc al, 0x43; ret; 
0x001993ad: add al, 0xc5; inc esi; or eax, dword ptr [edx]; mov ebp, 0x43140e0a; ret; 
0x0017c2c0: add al, 0xc5; inc esi; or eax, dword ptr [edx]; or cl, byte ptr fs:[esi]; adc al, 0x43; ret; 
0x0018cd09: add al, 0xc5; inc esi; or eax, dword ptr [edx]; pushal; ret; 
0x0017035b: add al, 0xc5; inc esi; or ebx, dword ptr [ebp + 0xe]; adc al, 0x43; ret; 
0x001709e1: add al, 0xc5; inc esp; or eax, dword ptr [ebx]; nop; add cl, byte ptr [edx]; ret; 
0x0019708c: add al, 0xc5; inc esp; or eax, dword ptr [edx]; dec ebx; ret; 
0x001852a1: add al, 0xc5; inc esp; or eax, dword ptr [esi + 0xa]; push cs; adc al, 0x46; ret; 
0x00196d93: add al, 0xc5; inc esp; or ebp, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x00170680: add al, 0xc5; inc esp; or ebp, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0018f141: add al, 0xc5; inc esp; or ebx, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0019a500: add al, 0xc5; inc esp; or ebx, dword ptr [eax + 0xa]; ret; 
0x00175834: add al, 0xc5; inc esp; or ebx, dword ptr [edx + 0xa]; ret; 
0x00199e97: add al, 0xc5; inc esp; or ecx, dword ptr [edi + 0xe]; adc al, 0x43; ret; 
0x00191da7: add al, 0xc5; inc esp; or ecx, dword ptr [edx + 0xe]; adc al, 0x41; ret; 
0x0018874c: add al, 0xc5; inc esp; or edi, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0019730d: add al, 0xc5; mov esi, 0x14000000; add byte ptr [eax], al; add byte ptr [eax], bl; add dword ptr [edx], 0xf7bd0400; jmp dword ptr [ebx]; 
0x00177616: add al, 0xc5; mov esi, 0x1c00c3; add byte ptr [eax], al; and byte ptr [eax + eax - 0x10eae400], al; jmp dword ptr [eax]; 
0x00191f55: add al, 0xc5; mov esi, 0x2c0b41c3; add byte ptr [eax], al; add byte ptr [eax + 0x2d000228], dh; loope 0x191f5d; call dword ptr [eax]; 
0x0019b697: add al, 0xc5; mov esi, 0x4400; add byte ptr [eax + 0x7c0002c4], ah; ret; 
0x0018b4db: add al, 0xc5; mov esi, 0xb41c3; add byte ptr [eax], ch; add byte ptr [eax], al; add al, ch; ret 1; 
0x0018b589: add al, 0xc6; add byte ptr [eax + eax], ah; add byte ptr [eax], al; nop; ret; 
0x0018c209: add al, 0xc6; dec eax; or ebp, dword ptr [ecx + 0xa]; push cs; or al, 0x41; ret; 
0x0019b96d: add al, 0xc6; dec eax; or edx, dword ptr [edi + 0xa]; push cs; or al, 0x43; ret; 
0x0017ad8d: add al, 0xc6; inc ebp; or eax, dword ptr [esi + 0xa]; push cs; or al, 0x41; ret; 
0x0019b214: add al, 0xc6; inc ebp; or esp, dword ptr [esi + 0xe]; or al, 0x41; ret; 
0x00174039: add al, 0xc6; inc ebx; or eax, dword ptr [ebx + 0xa]; push cs; or al, 0x44; ret; 
0x001745de: add al, 0xc6; inc ebx; or ecx, dword ptr [ebp + 0xe]; or al, 0x43; ret; 
0x001823ed: add al, 0xc6; inc ecx; push cs; or byte ptr [ebx - 0x79f3f1fe], al; add ebp, dword ptr [esi + ecx + 8]; ret; 
0x00182299: add al, 0xc6; inc ecx; push cs; or byte ptr [ebx - 0x79f3f1fe], al; add ebx, dword ptr [esi + ecx + 8]; ret; 
0x00182255: add al, 0xc6; inc ecx; push cs; or byte ptr [ebx - 0x79f3f1fe], al; add edx, dword ptr [esi + ecx + 8]; ret; 
0x001822bb: add al, 0xc6; inc ecx; push cs; or byte ptr [ebx - 0x79f3f1fe], al; add esp, dword ptr [esi + ecx + 8]; ret; 
0x0018a2de: add al, 0xc6; inc edx; or ebp, dword ptr [ecx + 0xe]; or al, 0x43; ret; 
0x00184711: add al, 0xc6; inc esi; or ecx, dword ptr [ebp + 0xe]; or al, 0x43; ret; 
0x001704ec: add al, 0xc6; ret; 
0x00188982: add al, 0xc7; adc byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [edi + 0x17640001], dl; hlt; jmp dword ptr [eax]; 
0x00195bd5: add al, 0xc7; add byte ptr [eax], ah; add byte ptr [eax], al; add ah, bl; imul eax, dword ptr [edx], 0xf73f7000; call dword ptr [eax]; 
0x001724a2: add al, 0xc7; inc eax; add byte ptr [eax], al; add byte ptr [eax + 0x34000032], ch; fldpi; call dword ptr [edi]; 
0x001820cc: add al, 0xc7; inc ecx; push cs; or byte ptr [ebx - 0x78f3f1fe], al; add ebx, dword ptr [esi + ecx + 8]; ret; 
0x00182066: add al, 0xc7; inc ecx; push cs; or byte ptr [ebx - 0x78f3f1fe], al; add edx, dword ptr [esi + ecx + 8]; ret; 
0x00171bdd: add al, 0xc7; ret; 
0x0016ee8c: add al, 0xcb; add al, byte ptr [eax]; adc al, 0x73; cld; jmp dword ptr [eax]; 
0x00168b58: add al, 0xd2; out dx, al; jmp esp; 
0x0017cab4: add al, 0xd4; add byte ptr [eax], al; cmp ah, dh; out dx, eax; call dword ptr [eax]; 
0x0008d1ce: add al, 0xd4; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0002d594: add al, 0xd9; add al, 0x24; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0002d548: add al, 0xd9; inc esp; and al, 4; ret; 
0x00168b80: add al, 0xd9; out dx, al; call eax; 
0x0002d397: add al, 0xd9; std; fstp st(1); ret; 
0x000a7bb3: add al, 0xdb; inc esp; and al, 8; fsubp st(1); ret; 
0x000311c5: add al, 0xdb; sub al, 0x24; add esp, 0x10; ret; 
0x00168bd8: add al, 0xdc; out dx, al; jmp esp; 
0x0002d310: add al, 0xdd; add al, 0x24; add esp, 0xc; pop esi; pop edi; ret; 
0x0003116b: add al, 0xdd; add al, 0x24; add esp, 0xc; ret; 
0x00098978: add al, 0xe8; adc al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00102cd5: add al, 0xe8; adc eax, 0x89fff6f8; ret 0x78b; 
0x000a609a: add al, 0xe8; add byte ptr [edx - 5], bl; inc dword ptr [ecx + 0x184c4]; add byte ptr [ebx + 0x5e], bl; ret; 
0x0018da04: add al, 0xe8; add dword ptr [eax], eax; clc; div ebp; call dword ptr [esi]; 
0x000b3dc9: add al, 0xe8; and dword ptr [ecx], ecx; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00055c3c: add al, 0xe8; dec esi; imul edi, edi, 0xc4c481ff; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000f8ecd: add al, 0xe8; mov al, byte ptr [0x8100030e]; ret; 
0x000d03cd: add al, 0xe8; mov al, byte ptr [0x81000599]; ret; 
0x001028ca: add al, 0xe8; mov dword ptr [0x81000274], eax; ret; 
0x000cf5cc: add al, 0xe8; mov eax, dword ptr [0x810005a7]; ret; 
0x000772ae: add al, 0xe8; mov edi, 0x81000b2a; ret; 
0x00103d12: add al, 0xe8; or cl, ah; dec dword ptr [ebx - 0x76dfdbb4]; ret 0x448b; 
0x000b7d91: add al, 0xe8; or dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001115db: add al, 0xe8; outsd dx, dword ptr [esi]; sub edx, esi; dec dword ptr [ebx - 0x12f6d]; jmp dword ptr [ebp - 0x75]; 
0x0002d9d8: add al, 0xe8; popfd; ret; 
0x000d904a: add al, 0xe8; pushal; ret; 
0x000ea678: add al, 0xe8; ret 0x5f; 
0x0001c258: add al, 0xe8; ret 0x605; 
0x0001b558: add al, 0xe8; ret 0x612; 
0x00037fc8: add al, 0xe8; ret 0xffdb; 
0x0007f208: add al, 0xe8; ret 0xffea; 
0x0006ca68: add al, 0xe8; ret 0xfffa; 
0x00031cc7: add al, 0xe8; ret; 
0x0007b760: add al, 0xe8; sbb ch, byte ptr [edx - 4]; jmp dword ptr [esi - 0x39]; 
0x0004c905: add al, 0xe8; xor eax, 0x850004c0; ror byte ptr [edi], 0x8e; ret 5; 
0x00166884: add al, 0xe9; cld; call esp; 
0x0010fbc7: add al, 0xe9; ret; 
0x000bb12f: add al, 0xe9; sbb edx, dword ptr [edi]; cld; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x00169bd0: add al, 0xe; int1; call dword ptr [eax + 0x4a]; 
0x0007331b: add al, 0xeb; ret 0x9066; 
0x00173271: add al, 0xec; call dword ptr [edi + 1]; 
0x000ec0bb: add al, 0xf3; ret; 
0x0006aa53: add al, 0xf6; add byte ptr [eax], ah; setne al; movzx eax, al; ret; 
0x0006a003: add al, 0xf6; add byte ptr [eax], cl; sete al; movzx eax, al; ret; 
0x0006aa43: add al, 0xf6; add byte ptr [eax], dl; setne al; movzx eax, al; ret; 
0x0018df7d: add al, 0xf6; call dword ptr [ebp]; 
0x0007d272: add al, 0xf7; ret 0; 
0x000f2918: add al, 0xf7; ret 0xff80; 
0x00198315: add al, 0xf8; jmp dword ptr [esi + 2]; 
0x0007ce50: add al, 0xf; inc edi; ret 0x4489; 
0x0007e2e9: add al, 0xf; inc esp; ret 0xc083; 
0x000d89f3: add al, 0xf; mov bh, 0x10; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0012b782: add al, 0xf; mov dh, 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00130327: add al, 0xf; movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x001485d4: add al, 0xf; test dword ptr [ebp - 0x58000000], esi; add cl, byte ptr [edi]; test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x00148e7b: add al, 0xf; test dword ptr [ebx - 0x7cfffffd], ebx; ror byte ptr [ebx], 0x5f; ret; 
0x000a70b5: add al, 0xf; test dword ptr [ecx + eax], esi; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x0008712b: add al, 0xf; test dword ptr [esi + 6], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0008eaac: add al, 0xf; test ebp, edi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000c820a: add al, 0xf; xchg eax, esp; ret 0x5589; 
0x000e843d: add al, 0xf; xchg eax, esp; rol byte ptr [ebx - 0x3b7cfe18], 0x24; pop ebx; pop esi; ret; 
0x00131419: add al, 0xf; xchg eax, esp; ror dword ptr [ebx + 0xf082474], -0x6e; ret 0xb60f; 
0x0016d541: add al, 0xfa; call eax; 
0x00166e41: add al, 0xfd; call dword ptr [eax]; 
0x00166c50: add al, 0xfd; cld; call dword ptr [ebp + edi*8 - 0x1cb0004]; cld; call esp; 
0x0002e9fc: add al, 0xfe; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00126f3c: add al, 0xff; push eax; add al, 0x89; ret 0xebeb; 
0x00042465: add al, 0xff; push ecx; sbb al, 0x89; ret 0x408d; 
0x001117d7: add al, 0xff; push esp; and al, 0x24; add esp, 0x18; pop ebx; ret; 
0x000792b8: add al, 0xff; rcl byte ptr [eax + 0x26748d], 1; add esp, 0x18; pop ebx; ret; 
0x0006b944: add al, 1; add byte ptr [eax], al; add byte ptr [ecx + 0x1fe82434], cl; ret; 
0x0006ba33: add al, 1; add byte ptr [eax], al; add byte ptr [ecx + 0x30e82434], cl; ret 0xffff; 
0x0006ba13: add al, 1; add byte ptr [eax], al; add byte ptr [ecx + 0x50e82434], cl; ret 0xffff; 
0x0005b86d: add al, 1; add byte ptr [eax], al; add byte ptr [ecx - 0x917dbfc], cl; ret; 
0x000aae45: add al, 1; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x108]; add esp, 0x10c; ret; 
0x000a70e8: add al, 1; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x0007e539: add al, 1; add byte ptr [ecx + 0x75], cl; stc; pop esi; ret; 
0x000555dc: add al, 1; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000648df: add al, 1; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x30]; 
0x000d9a6a: add al, 1; ret 0x689; 
0x00097c7c: add al, 1; ret 0xff85; 
0x000c843f: add al, 2; add byte ptr [eax], al; add byte ptr [ecx + 0x4c892434], cl; and al, 8; call dword ptr [ebp - 0x78]; 
0x0004b4f2: add al, 2; add byte ptr [ebx - 0x6bf0fe40], al; ret 0x25e9; 
0x0016dd2d: add al, 3; add byte ptr [ebx + esi*8 - 6], ah; inc dword ptr [eax + 0x14000304]; cmc; cli; call esp; 
0x00189849: add al, 3; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00187f40: add al, 3; pop ebp; push es; ret; 
0x0018f21c: add al, 4; inc ebp; or eax, dword ptr [edx]; mov al, 0xa; ret; 
0x0018c762: add al, 4; inc ecx; or eax, dword ptr [edi + 0xa]; ret; 
0x00185ff0: add al, 4; inc ecx; or ecx, dword ptr [ebp + 0xa]; ret; 
0x001709d3: add al, 4; inc ecx; or esi, dword ptr [esi + 0xa]; ret; 
0x001845c2: add al, 4; inc ecx; or esp, dword ptr [edi + 0xa]; ret; 
0x001729cc: add al, 4; inc edi; or ebp, dword ptr [eax + 0xa]; ret; 
0x0001934a: add al, 5; add byte ptr [eax], al; pop ebx; ret; 
0x0019d89c: add al, 5; add byte ptr [eax], al; ret; 
0x00142bd9: add al, 6; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x00026924: add al, 6; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00069fe7: add al, 8; add byte ptr [eax], al; ret; 
0x0018eccf: add al, ah; and dh, dh; call ebx; 
0x000053a7: add al, ah; call dword ptr [eax]; 
0x00191601: add al, ah; cli; jmp dword ptr [edx]; 
0x0016d467: add al, ah; hlt; stc; call dword ptr [eax - 0x32]; 
0x0018d7df: add al, ah; in eax, 1; add byte ptr [esi + ebp*8], bl; cmc; jmp dword ptr [ebx]; 
0x001896df: add al, ah; insb byte ptr es:[edi], dx; hlt; jmp dword ptr [edi + 2]; 
0x0019a3ef: add al, ah; mov bh, al; call dword ptr [edx]; 
0x0017abdf: add al, ah; mov ecx, 0x902c0000; out dx, eax; call dword ptr [edx]; 
0x0019b58f: add al, ah; mov esi, 0xd9e80002; clc; call dword ptr [eax]; 
0x001852df: add al, ah; pushal; add dword ptr [eax], eax; pop esp; xor edx, esi; jmp dword ptr [eax]; 
0x0018b5df: add al, ah; ret; 
0x00194e07: add al, ah; sub esi, edi; call dword ptr [eax]; 
0x00179f8f: add al, ah; test al, 0; add dl, al; xchg eax, ebp; out dx, eax; call dword ptr [eax]; 
0x001878df: add al, ah; xchg byte ptr [ecx], al; add ah, bh; sbb dh, bl; call dword ptr [ebx]; 
0x0017691f: add al, al; add edi, ebp; call dword ptr [ebx]; 
0x00105071: add al, al; and edx, 0xff; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0018a16f: add al, al; cli; call dword ptr [eax]; 
0x00173fbf: add al, al; dec ebp; add byte ptr [eax], al; cld; mov ch, 0xec; jmp dword ptr [ebx]; 
0x0017a49f: add al, al; jp 0x17a492; call dword ptr [ebp]; 
0x00189fbf: add al, al; lodsd eax, dword ptr [esi]; add dword ptr [eax], eax; or al, 0xe7; hlt; call esi; 
0x0018a8bf: add al, al; mov dh, 1; add ah, ch; xor ebp, esi; call dword ptr [ebp]; 
0x0019b46f: add al, al; mov ebp, 0xdaa80002; clc; call dword ptr [eax]; 
0x00004ff7: add al, al; movsb byte ptr es:[edi], byte ptr [esi]; adc al, byte ptr [eax]; ret 2; 
0x00176f1f: add al, al; or edi, ebp; jmp dword ptr [ebx]; 
0x0018642f: add al, al; out 0xf2, al; jmp dword ptr [edx]; 
0x0017b8f7: add al, al; out dx, eax; call dword ptr [eax]; 
0x00179c2f: add al, al; out dx, eax; jmp esi; 
0x0018941f: add al, al; pop eax; hlt; jmp dword ptr [ebx + 1]; 
0x0014e87f: add al, al; pop es; add byte ptr [eax], al; ret 7; 
0x0015286f: add al, al; push cs; add byte ptr [eax], al; ret; 
0x0014e67f: add al, al; push es; add byte ptr [eax], al; ret 6; 
0x0019b5bf: add al, al; ret; 
0x00105108: add al, al; shr edx, 8; shr eax, 0x10; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x00187b2f: add al, al; xor al, 0xf3; call dword ptr [esi]; 
0x00184727: add al, bh; adc dl, dh; jmp dword ptr [eax]; 
0x001775f7: add al, bh; add dword ptr [eax], 0; adc al, 0xef; call esp; 
0x0016af9c: add al, bh; add dword ptr [eax], eax; aam 0; cmc; jmp eax; 
0x0018c1e7: add al, bh; and edi, edx; call dword ptr [edi]; 
0x001944a3: add al, bh; and edi, esi; call dword ptr [eax]; 
0x0019824d: add al, bh; call dword ptr [esi]; 
0x0018ecf7: add al, bh; cli; add dword ptr [eax], eax; xchg eax, esp; and esi, esi; jmp edi; 
0x0018da07: add al, bh; div ebp; call dword ptr [esi]; 
0x0018d197: add al, bh; fdivr st(5), st(0); call dword ptr [eax]; 
0x00187ff7: add al, bh; lea eax, dword ptr [ecx]; add ah, dh; mov ah, 0xf3; jmp dword ptr [esi + 3]; 
0x001992f7: add al, bh; mov al, byte ptr [0x44640002]; clc; call dword ptr [ecx]; 
0x001894f7: add al, bh; mov byte ptr [0x5e840001], al; hlt; call dword ptr [edx]; 
0x00177ef7: add al, bh; mov word ptr [eax], es; add byte ptr [edi], dl; out dx, eax; call dword ptr [edi + 1]; 
0x0017cb17: add al, bh; out dx, eax; call dword ptr [eax]; 
0x0016f9f7: add al, bh; ret 0xffea; 
0x0018efc7: add al, bh; sub esi, esi; call dword ptr [edi + 1]; 
0x001824c3: add al, bl; add byte ptr [eax], al; add al, cl; xor al, byte ptr [ecx]; add byte ptr [esp + ecx*2 - 4], al; call esp; 
0x0000af73: add al, bl; and al, 0; add byte ptr [eax], dl; ret; 
0x001944d3: add al, bl; and edi, esi; call dword ptr [eax]; 
0x0017c1d7: add al, bl; iretd; add byte ptr [eax], al; aam 0x92; out dx, eax; jmp dword ptr [edi]; 
0x0017cb47: add al, bl; out dx, eax; call dword ptr [eax]; 
0x00174ad7: add al, bl; pop eax; add byte ptr [eax], al; add al, 0x54; in eax, dx; call esp; 
0x00194c87: add al, bl; push ebp; add al, byte ptr [eax]; xlatb; sub esi, edi; call dword ptr [eax]; 
0x00173417: add al, bl; push es; in al, dx; jmp dword ptr [edi]; 
0x0016fb07: add al, bl; ret; 
0x00188177: add al, bl; sal bl, 1; call dword ptr [eax]; 
0x0018a1d7: add al, bl; scasd eax, dword ptr es:[edi]; add dword ptr [eax], eax; mov ah, 0xe9; hlt; call dword ptr [eax + 6]; 
0x0008d8aa: add al, byte ptr [0x5e5f0000]; pop ebx; ret; 
0x000a1834: add al, byte ptr [0x8e0f0000]; hlt; add al, 0; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x0019bfcd: add al, byte ptr [0xffff0000]; add dword ptr [ebx], ecx; ret; 
0x00171cd5: add al, byte ptr [eax + 0xa]; push cs; add al, 0xc6; ret; 
0x0017408d: add al, byte ptr [eax + 0xe]; or byte ptr [ebx + 0x40e5702], al; ret; 
0x0016b15e: add al, byte ptr [eax]; aaa; cmc; call dword ptr [eax + 1]; 
0x0016d716: add al, byte ptr [eax]; aad 0x29; cli; push dword ptr [edi + ebx*8 + 0x29e50002]; cli; jmp esp; 
0x0016d2de: add al, byte ptr [eax]; aad 0xf9; dec dword ptr [esp + eax*8 + 2]; add byte ptr [ebp + edx*8 - 7], dh; jmp dword ptr [eax - 0x3c]; 
0x0016d776: add al, byte ptr [eax]; aam 0x3b; cli; call dword ptr [eax - 0x1c]; 
0x0016d7fe: add al, byte ptr [eax]; aam 0x5b; cli; call eax; 
0x0016cdc6: add al, byte ptr [eax]; aam 0x75; stc; jmp dword ptr [eax]; 
0x0019a41a: add al, byte ptr [eax]; aam 0x8b; clc; jmp dword ptr [ebx]; 
0x0019a876: add al, byte ptr [eax]; aam 0xa2; clc; call dword ptr [eax]; 
0x0016be0e: add al, byte ptr [eax]; aam 0xb; clc; push dword ptr [ebp + ecx*2 + 0xc140002]; clc; call esp; 
0x0016d20e: add al, byte ptr [eax]; aam 0xca; stc; jmp eax; 
0x0016d2ae: add al, byte ptr [eax]; aam 0xd2; stc; jmp esp; 
0x0016d586: add al, byte ptr [eax]; aam; cli; dec dword ptr [eax - 0x58fffd28]; or edi, edx; jmp dword ptr [eax]; 
0x00195252: add al, byte ptr [eax]; aas; xor al, 0xf7; call dword ptr [eax]; 
0x0016beee: add al, byte ptr [eax]; adc al, 0x1e; clc; jmp eax; 
0x0016bfee: add al, byte ptr [eax]; adc al, 0x36; clc; jmp dword ptr [eax + 0x57]; 
0x0016c006: add al, byte ptr [eax]; adc al, 0x37; clc; jmp esp; 
0x0016c156: add al, byte ptr [eax]; adc al, 0x57; clc; jmp dword ptr [eax]; 
0x0016edbe: add al, byte ptr [eax]; adc al, 0x6d; cld; dec dword ptr [edx + eax*4 + 0x6d540002]; cld; jmp esp; 
0x0016edf6: add al, byte ptr [eax]; adc al, 0x6f; cld; lcall ptr [eax + ebx*4 + 0x6f640002]; cld; jmp dword ptr [eax]; 
0x0016ee16: add al, byte ptr [eax]; adc al, 0x70; cld; jmp dword ptr [eax - 0x56]; 
0x0016ee8e: add al, byte ptr [eax]; adc al, 0x73; cld; jmp dword ptr [eax]; 
0x0016c37e: add al, byte ptr [eax]; adc al, 0x79; clc; call dword ptr [eax]; 
0x0016c39e: add al, byte ptr [eax]; adc al, 0x7a; clc; jmp dword ptr [eax + 0x69]; 
0x0016c3be: add al, byte ptr [eax]; adc al, 0x7b; clc; inc eax; imul eax, dword ptr [edx], 0xf87b5400; call esp; 
0x0016cf1e: add al, byte ptr [eax]; adc al, 0x9c; stc; call dword ptr [eax - 0x51]; 
0x0019a996: add al, byte ptr [eax]; adc al, 0xa2; clc; call dword ptr [eax]; 
0x0016be16: add al, byte ptr [eax]; adc al, 0xc; clc; call esp; 
0x0016d436: add al, byte ptr [eax]; adc al, 0xf3; stc; call esp; 
0x0016b316: add al, byte ptr [eax]; adc al, 0xf7; cmc; lcall ptr [esp + ecx - 0x81bfffe]; cmc; call eax; 
0x0016d32e: add al, byte ptr [eax]; adc bl, dl; stc; jmp dword ptr [eax - 0x3b]; 
0x0016c8ae: add al, byte ptr [eax]; adc edx, ebx; clc; call eax; 
0x0016d3d6: add al, byte ptr [eax]; add ah, ch; stc; jmp dword ptr [eax - 0x36]; 
0x0016d6a6: add al, byte ptr [eax]; add al, 0x1e; cli; jmp dword ptr [eax - 0x20]; 
0x0016d796: add al, byte ptr [eax]; add al, 0x40; cli; jmp dword ptr [eax]; 
0x0016c1e6: add al, byte ptr [eax]; add al, 0x5d; clc; inc dword ptr [ecx + 0x5d740002]; clc; call eax; 
0x0016b556: add al, byte ptr [eax]; add al, 0x8c; idiv bh; mov byte ptr [edx + eax], bl; add byte ptr [esi + ecx*4 - 0xa], al; jmp eax; 
0x00190eea: add al, byte ptr [eax]; add al, 0x99; idiv bh; ret; 
0x0016c64e: add al, byte ptr [eax]; add al, 0xa6; clc; call esp; 
0x0016c71e: add al, byte ptr [eax]; add al, 0xbb; clc; jmp dword ptr [eax + 0x7b]; 
0x0007bd04: add al, byte ptr [eax]; add al, ch; aam 0xb1; stc; inc dword ptr [ebp + 0x74c789c0]; ret 0xf685; 
0x0010d6af: add al, byte ptr [eax]; add al, ch; mov esp, 0x810001c6; ret; 
0x0014729f: add al, byte ptr [eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x0014728e: add al, byte ptr [eax]; add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x00182211: add al, byte ptr [eax]; add byte ptr [eax + esi], dl; add dword ptr [eax], eax; cwde; and cl, dh; jmp dword ptr [ebx]; 
0x00147237: add al, byte ptr [eax]; add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x0008b8e8: add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; lcall ptr [edi + 0x5b]; ret; 
0x00147248: add al, byte ptr [eax]; add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x00147259: add al, byte ptr [eax]; add byte ptr [eax - 0x37af0c0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x00043b93: add al, byte ptr [eax]; add byte ptr [eax - 0x53843], al; call dword ptr [ebx + 0xf]; 
0x0019052e: add al, byte ptr [eax]; add byte ptr [eax - 0xa], bl; jmp dword ptr [ebx]; 
0x00125d3f: add al, byte ptr [eax]; add byte ptr [eax], al; add bl, ch; ret; 
0x00113249: add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x748b241c], cl; and al, 4; add esp, 8; ret; 
0x001207ee: add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x74ffa87d], al; adc ecx, dword ptr [ebx - 0x347857b3]; mov eax, 6; call dword ptr gs:[0x10]; 
0x001222a3: add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x74ffb07d], al; adc ecx, dword ptr [ebx - 0x34784fb3]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000b676c: add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x39]; 
0x000b67fb: add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x75]; 
0x00129a69: add al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0xc; ret; 
0x0002ba69: add al, byte ptr [eax]; add byte ptr [eax], al; call 0x2b9b0; add esp, 0x2c; ret; 
0x0017d775: add al, byte ptr [eax]; add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e5b02], al; ret; 
0x000f0108: add al, byte ptr [eax]; add byte ptr [eax], al; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0010e2cb: add al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp], eax; call 0x10d500; add esp, 0x1c; ret; 
0x00112265: add al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp], edi; call dword ptr [eax]; 
0x000c8440: add al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp], esi; mov dword ptr [esp + 8], ecx; call dword ptr [ebp - 0x78]; 
0x0003f89b: add al, byte ptr [eax]; add byte ptr [eax], al; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000a7411: add al, byte ptr [eax]; add byte ptr [eax], al; ret; 
0x0010fd8b: add al, byte ptr [eax]; add byte ptr [eax], al; sub edx, 1; mov byte ptr [ecx + 1], dl; ret; 
0x000fc77f: add al, byte ptr [eax]; add byte ptr [eax], al; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00032bdb: add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; add esp, 0x18; pop ebx; ret; 
0x00033a79: add al, byte ptr [eax]; add byte ptr [ebp + 0x5c8b0646], cl; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00126092: add al, byte ptr [eax]; add byte ptr [ebp - 0x76de872e], al; rol dword ptr [edi + 0x6b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002f3b1: add al, byte ptr [eax]; add byte ptr [ebx + 0x25424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x258]; add esp, 0x25c; ret; 
0x0002f3b8: add al, byte ptr [eax]; add byte ptr [ebx + 0x25824ac], cl; add byte ptr [eax], al; add esp, 0x25c; ret; 
0x0006b290: add al, byte ptr [eax]; add byte ptr [ebx + 0x29424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x298]; add esp, 0x29c; ret; 
0x0006b297: add al, byte ptr [eax]; add byte ptr [ebx + 0x29824ac], cl; add byte ptr [eax], al; add esp, 0x29c; ret; 
0x0012243d: add al, byte ptr [eax]; add byte ptr [ebx + 0x45031445], cl; sbb byte ptr [ecx], bh; ret 0x870f; 
0x00055e49: add al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00057901: add al, byte ptr [eax]; add byte ptr [ebx - 0x107b43], al; call dword ptr [ebx + 0xf]; 
0x000ff281: add al, byte ptr [eax]; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x000bc91e: add al, byte ptr [eax]; add byte ptr [ebx - 0x12f73], cl; jmp dword ptr [ebp - 0x7d]; 
0x000bf69e: add al, byte ptr [eax]; add byte ptr [ebx - 0x13f73], cl; jmp dword ptr [ebp - 0x7d]; 
0x00079943: add al, byte ptr [eax]; add byte ptr [ebx - 0x1876d], cl; jmp dword ptr [ebp - 0x75]; 
0x0003f1d7: add al, byte ptr [eax]; add byte ptr [ebx - 0x3f7c7fbb], cl; add dword ptr [ecx], edi; ret 0x870f; 
0x0001f2cf: add al, byte ptr [eax]; add byte ptr [ebx - 0x76bfdb8c], cl; ret 0x542b; 
0x0010053d: add al, byte ptr [eax]; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp + 3]; 
0x0009ee62: add al, byte ptr [eax]; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x0010d9dd: add al, byte ptr [eax]; add byte ptr [ecx + 0x68e82404], cl; xchg eax, ebp; lock dec dword ptr [ebx - 0xf775]; jmp dword ptr [ebp - 0x77]; 
0x0010d8f4: add al, byte ptr [eax]; add byte ptr [ecx + 0x71e8243c], cl; adc bh, ch; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x00095343: add al, byte ptr [eax]; add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x00159485: add al, byte ptr [eax]; add byte ptr [ecx], al; or eax, 0x73950000; ret 0x48; 
0x000c6c4a: add al, byte ptr [eax]; add byte ptr [ecx], bh; ret 0x840f; 
0x00087497: add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00009f8d: add al, byte ptr [eax]; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0x11; 
0x0007d0e5: add al, byte ptr [eax]; add byte ptr [esi + eax - 0x73], dh; or dword ptr [ecx + ebp*8 - 0x12], 0xffffffff; pop ebx; ret; 
0x0007c3f5: add al, byte ptr [eax]; add byte ptr [esi + eax - 0x73], dh; or dword ptr [esi + eax*8 - 0x12], 0xffffffff; pop ebx; ret; 
0x0007e3a5: add al, byte ptr [eax]; add byte ptr [esi + eax - 0x73], dh; or dword ptr [esp + edx*2 - 0x12], 0xffffffff; pop ebx; ret; 
0x000c6bf2: add al, byte ptr [eax]; add dh, dh; ret 0xf01; 
0x00136d9d: add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001381bd: add al, byte ptr [eax]; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00105333: add al, byte ptr [eax]; add ecx, 0x9dcbf; mov eax, dword ptr [ecx - 0x100]; add eax, dword ptr gs:[0]; ret; 
0x000fefc3: add al, byte ptr [eax]; add ecx, 0xa402f; mov eax, dword ptr [ecx - 0x14]; mov eax, dword ptr gs:[eax]; ret; 
0x00102c1f: add al, byte ptr [eax]; add esp, 0x18; pop ebx; ret; 
0x0016cc16: add al, byte ptr [eax]; and al, 0x45; stc; jmp dword ptr [eax - 0x67]; 
0x0016d86e: add al, byte ptr [eax]; and al, 0x79; cli; call eax; 
0x0016b986: add al, byte ptr [eax]; and al, 0x7a; idiv edi; sal byte ptr [edx + eax], 0; jp 0x16b98a; call esp; 
0x0016cf06: add al, byte ptr [eax]; and al, 0x9b; stc; call esp; 
0x0019ac5a: add al, byte ptr [eax]; and al, 0xa1; clc; jmp dword ptr [edi]; 
0x0016d036: add al, byte ptr [eax]; and al, 0xad; stc; call esp; 
0x0016d08e: add al, byte ptr [eax]; and al, 0xb1; stc; ljmp ptr [edi + esi*4 + 2]; add byte ptr [ecx + esi*4 - 7], ah; jmp dword ptr [eax]; 
0x0016d336: add al, byte ptr [eax]; and al, 0xda; stc; call eax; 
0x0019244e: add al, byte ptr [eax]; and al, 0xf6; call dword ptr [edi + 2]; 
0x00199d3e: add al, byte ptr [eax]; and byte ptr [esi - 8], bl; jmp dword ptr [ebx]; 
0x0019895e: add al, byte ptr [eax]; cdq; xor bh, al; call dword ptr [eax]; 
0x001944a2: add al, byte ptr [eax]; clc; and edi, esi; call dword ptr [eax]; 
0x00199522: add al, byte ptr [eax]; cld; dec edi; clc; jmp dword ptr [edx]; 
0x0016ed5e: add al, byte ptr [eax]; cld; lcall ptr [esi + 0x65b40002]; cld; jmp dword ptr [eax]; 
0x0016ce2e: add al, byte ptr [eax]; cmc; test ecx, edi; jmp dword ptr [eax]; 
0x0019ad02: add al, byte ptr [eax]; cmp al, 0xa5; clc; jmp dword ptr [edi]; 
0x0016cb1e: add al, byte ptr [eax]; cmp al, 0xf9; call esp; 
0x00198312: add al, byte ptr [eax]; cmp al, 4; clc; jmp dword ptr [esi + 2]; 
0x001991b6: add al, byte ptr [eax]; cmp byte ptr [eax - 8], al; call dword ptr [ecx]; 
0x00198906: add al, byte ptr [eax]; cmp byte ptr [eax], ch; clc; call dword ptr [ebx]; 
0x001949a6: add al, byte ptr [eax]; cmp byte ptr [edi + esi*8], ah; jmp dword ptr [ebx]; 
0x0018ffa2: add al, byte ptr [eax]; cmp dword ptr [ebp - 0xa], edx; call dword ptr [eax]; 
0x00195a56: add al, byte ptr [eax]; cmp dword ptr [edx - 9], ecx; call dword ptr [eax]; 
0x0016e9ce: add al, byte ptr [eax]; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; call dword ptr [eax + 0x47]; 
0x0016ea96: add al, byte ptr [eax]; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; call dword ptr [eax - 0x34]; 
0x0016ea8e: add al, byte ptr [eax]; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; call eax; 
0x0016eace: add al, byte ptr [eax]; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; jmp dword ptr [eax]; 
0x0016e9ae: add al, byte ptr [eax]; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; jmp eax; 
0x0016eac6: add al, byte ptr [eax]; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; ljmp ptr [eax - 0x58fffd24]; and bh, ah; jmp dword ptr [eax]; 
0x0016d58e: add al, byte ptr [eax]; cmpsd dword ptr [esi], dword ptr es:[edi]; or edi, edx; jmp dword ptr [eax]; 
0x0016cfd6: add al, byte ptr [eax]; cmpsw word ptr [esi], word ptr es:[edi]; stc; call dword ptr [eax - 0x4d]; 
0x001918c6: add al, byte ptr [eax]; dec eax; mov al, 0xf6; call dword ptr [ecx]; 
0x00197136: add al, byte ptr [eax]; dec eax; mov cl, 0xf7; jmp dword ptr [esi]; 
0x00199ca6: add al, byte ptr [eax]; dec eax; pop ebp; clc; call dword ptr [eax]; 
0x00199d76: add al, byte ptr [eax]; dec eax; pop esi; clc; jmp dword ptr [ebx]; 
0x00197416: add al, byte ptr [eax]; dec eax; ret; 
0x00191bce: add al, byte ptr [eax]; dec ebp; sal esi, 1; call dword ptr [eax]; 
0x00191e52: add al, byte ptr [eax]; dec edx; sal esi, 1; call dword ptr [eax]; 
0x001940a2: add al, byte ptr [eax]; dec esp; adc al, 0xf7; call dword ptr [edx + 3]; 
0x00197402: add al, byte ptr [eax]; dec esp; ret; 
0x0019b272: add al, byte ptr [eax]; fdiv st(6), st(0); cli; call dword ptr [ebx + 1]; 
0x0016d53e: add al, byte ptr [eax]; hlt; add al, 0xfa; call eax; 
0x0016d0b6: add al, byte ptr [eax]; hlt; mov dl, 0xf9; call dword ptr [eax - 0x48]; 
0x0016bc1e: add al, byte ptr [eax]; hlt; out 0xf7, eax; jmp dword ptr [eax + 0x44]; 
0x0016ee0e: add al, byte ptr [eax]; hlt; outsd dx, dword ptr [esi]; cld; call dword ptr [eax]; 
0x001987ea: add al, byte ptr [eax]; hlt; sbb edi, eax; jmp dword ptr [edi]; 
0x0016c4b6: add al, byte ptr [eax]; hlt; test al, bh; jmp eax; 
0x0016d9d6: add al, byte ptr [eax]; hlt; xchg eax, ebp; cli; jmp esp; 
0x0016d75e: add al, byte ptr [eax]; in al, 0x37; cli; push dword ptr [eax + 0x340002e3]; cmp dl, bh; jmp esp; 
0x0016d78e: add al, byte ptr [eax]; in al, 0x3f; cli; dec dword ptr [0x40040002]; cli; jmp dword ptr [eax]; 
0x0016c096: add al, byte ptr [eax]; in al, 0x40; clc; jmp esp; 
0x0016c0e6: add al, byte ptr [eax]; in al, 0x4a; clc; jmp esp; 
0x0016c126: add al, byte ptr [eax]; in al, 0x4e; clc; call esp; 
0x0016ccd6: add al, byte ptr [eax]; in al, 0x4e; stc; jmp dword ptr [eax]; 
0x00199d1a: add al, byte ptr [eax]; in al, 0x5d; clc; call dword ptr [ebp]; 
0x0016ce5e: add al, byte ptr [eax]; in al, 0x87; stc; call esp; 
0x0016cec6: add al, byte ptr [eax]; in al, 0x92; stc; jmp eax; 
0x0016cf2e: add al, byte ptr [eax]; in al, 0x9d; stc; call esp; 
0x0016dab6: add al, byte ptr [eax]; in al, 0xab; cli; jmp dword ptr [eax - 9]; 
0x0016c736: add al, byte ptr [eax]; in al, 0xbc; clc; jmp esp; 
0x0016dba6: add al, byte ptr [eax]; in al, 0xc8; cli; call dword ptr [eax - 4]; 
0x0016b31e: add al, byte ptr [eax]; in al, 0xf7; cmc; call eax; 
0x001946f2: add al, byte ptr [eax]; in al, dx; cmpsb byte ptr [esi], byte ptr es:[edi]; stc; jmp dword ptr [edi]; 
0x001930d2: add al, byte ptr [eax]; in al, dx; div esi; jmp dword ptr [eax]; 
0x001928a2: add al, byte ptr [eax]; in al, dx; out 0xf6, al; call dword ptr [esi + 5]; 
0x0016d71e: add al, byte ptr [eax]; in eax, 0x29; cli; jmp esp; 
0x00194c2e: add al, byte ptr [eax]; inc eax; sub edi, esi; call dword ptr [ecx]; 
0x001956ae: add al, byte ptr [eax]; inc eax; xor al, 0xf7; jmp dword ptr [ebx]; 
0x0016d2ce: add al, byte ptr [eax]; inc esp; aad 0xf9; dec dword ptr [eax]; ret; 
0x001992fa: add al, byte ptr [eax]; inc esp; clc; call dword ptr [ecx]; 
0x0019946a: add al, byte ptr [eax]; inc esp; dec ebp; clc; jmp dword ptr [ebx]; 
0x0016c0c6: add al, byte ptr [eax]; inc esp; inc edi; clc; jmp dword ptr [eax]; 
0x0016d0d6: add al, byte ptr [eax]; inc esp; mov ah, 0xf9; jmp eax; 
0x0016da7e: add al, byte ptr [eax]; inc esp; movsd dword ptr es:[edi], dword ptr [esi]; cli; call dword ptr [eax]; 
0x0019851a: add al, byte ptr [eax]; inc esp; sub bh, bl; jmp dword ptr [edi]; 
0x0016d956: add al, byte ptr [eax]; inc esp; xchg dl, bh; jmp dword ptr [eax]; 
0x0019535a: add al, byte ptr [eax]; inc esp; xor dh, bh; call ebx; 
0x0016f16e: add al, byte ptr [eax]; inc esp; xor edi, esi; jmp eax; 
0x00199322: add al, byte ptr [eax]; insb byte ptr es:[edi], dx; inc esp; clc; jmp dword ptr [eax]; 
0x00191b9e: add al, byte ptr [eax]; insd dword ptr es:[edi], dx; sal esi, 1; call dword ptr [eax]; 
0x0016d84e: add al, byte ptr [eax]; jno 0x16d84d; call eax; 
0x0019898e: add al, byte ptr [eax]; jns 0x1989c4; clc; call dword ptr [eax]; 
0x0016c2be: add al, byte ptr [eax]; jo 0x16c2bb; call dword ptr [eax]; 
0x001986be: add al, byte ptr [eax]; jo 0x1986d7; clc; call dword ptr [esi]; 
0x0016b98e: add al, byte ptr [eax]; jp 0x16b98a; call esp; 
0x00182886: add al, byte ptr [eax]; lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [esi + esi + 0x28200001], cl; int1; jmp esi; 
0x00194982: add al, byte ptr [eax]; lodsb al, byte ptr [esi]; and esi, edi; jmp dword ptr [edi]; 
0x00197442: add al, byte ptr [eax]; lodsb al, byte ptr [esi]; ret; 
0x0016c24e: add al, byte ptr [eax]; mov ah, 0x62; clc; call eax; 
0x0016ed66: add al, byte ptr [eax]; mov ah, 0x65; cld; jmp dword ptr [eax]; 
0x0016ee06: add al, byte ptr [eax]; mov ah, 0x6f; cld; jmp eax; 
0x0016c4c6: add al, byte ptr [eax]; mov ah, 0x85; clc; call dword ptr [eax + 0x6e]; 
0x0016c546: add al, byte ptr [eax]; mov ah, 0x8b; clc; call dword ptr [eax + 0x70]; 
0x0016cf16: add al, byte ptr [eax]; mov ah, 0x9b; stc; jmp dword ptr [eax]; 
0x0019a8a6: add al, byte ptr [eax]; mov ah, 0xa2; clc; call dword ptr [eax]; 
0x0016d0e6: add al, byte ptr [eax]; mov ah, 0xb4; stc; jmp dword ptr [eax]; 
0x0016d276: add al, byte ptr [eax]; mov ah, 0xcf; stc; jmp eax; 
0x0019ae9a: add al, byte ptr [eax]; mov bh, 0xb4; clc; call dword ptr [eax]; 
0x0016d596: add al, byte ptr [eax]; mov bh, 0xb; cli; call dword ptr [eax - 0x29]; 
0x0016d1fe: add al, byte ptr [eax]; mov cl, 0xca; stc; call dword ptr [eax - 0x41]; 
0x0016d096: add al, byte ptr [eax]; mov cl, 0xf9; jmp dword ptr [eax]; 
0x0016cd96: add al, byte ptr [eax]; mov dl, 0x74; stc; jmp dword ptr [eax]; 
0x0019b4a2: add al, byte ptr [eax]; mov dl, bl; clc; call dword ptr [eax]; 
0x0016d206: add al, byte ptr [eax]; mov ebp, 0x80fff9ca; mov edi, 0xcad40002; stc; jmp eax; 
0x0016d1b6: add al, byte ptr [eax]; mov ecx, 0xa0fff9c7; mov ebp, 0xc7c50002; stc; call eax; 
0x000b9e48: add al, byte ptr [eax]; mov ecx, ebp; mov edx, eax; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0016c716: add al, byte ptr [eax]; mov edx, 0x7b34fff8; add al, byte ptr [eax]; add al, 0xbb; clc; jmp dword ptr [eax + 0x7b]; 
0x00198a42: add al, byte ptr [eax]; mov word ptr [eax + edi*8], gs; call dword ptr [eax]; 
0x00190552: add al, byte ptr [eax]; mov word ptr [eax - 0xa], ds; call ecx; 
0x00195d42: add al, byte ptr [eax]; mov word ptr [edi - 9], es; jmp dword ptr [esi]; 
0x0016ca06: add al, byte ptr [eax]; movsb byte ptr es:[edi], byte ptr [esi]; hlt; clc; jmp esp; 
0x0016bc06: add al, byte ptr [eax]; movsb byte ptr es:[edi], byte ptr [esi]; in al, 0xf7; jmp esp; 
0x0019779a: add al, byte ptr [eax]; movsb byte ptr es:[edi], byte ptr [esi]; int 0xf7; jmp dword ptr [esi]; 
0x0016b64e: add al, byte ptr [eax]; movsb byte ptr es:[edi], byte ptr [esi]; or edi, esi; jmp dword ptr [eax]; 
0x00194d7a: add al, byte ptr [eax]; movsb byte ptr es:[edi], byte ptr [esi]; sub bh, dh; jmp dword ptr [edi]; 
0x00197b1e: add al, byte ptr [eax]; nop; aad 0xf7; jmp dword ptr [ebx]; 
0x0019b092: add al, byte ptr [eax]; or al, 0xb6; clc; jmp edx; 
0x00198816: add al, byte ptr [eax]; or byte ptr [eax + edi*8], bl; jmp esp; 
0x00192aa6: add al, byte ptr [eax]; or dh, ch; idiv bh; ret 0; 
0x0019b562: add al, byte ptr [eax]; or dl, bl; clc; call dword ptr [eax]; 
0x0016d74e: add al, byte ptr [eax]; or esi, dword ptr [edi]; cli; jmp esp; 
0x0016d5ae: add al, byte ptr [eax]; out 0xb, eax; cli; jmp eax; 
0x0016edfe: add al, byte ptr [eax]; outsd dx, dword ptr fs:[esi]; cld; jmp dword ptr [eax]; 
0x00195282: add al, byte ptr [eax]; pop ds; xor al, 0xf7; call dword ptr [eax]; 
0x0019aab6: add al, byte ptr [eax]; pop eax; lahf; clc; jmp dword ptr [edi]; 
0x001949f6: add al, byte ptr [eax]; pop eax; movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [ebx]; 
0x00199a1a: add al, byte ptr [eax]; pop ecx; clc; jmp dword ptr [ecx]; 
0x00195222: add al, byte ptr [eax]; pop edi; xor al, 0xf7; call dword ptr [eax]; 
0x001945fa: add al, byte ptr [eax]; pop edx; and dh, bh; call dword ptr [eax]; 
0x0016cfce: add al, byte ptr [eax]; pop edx; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; jmp dword ptr [eax]; 
0x001983c2: add al, byte ptr [eax]; pop esp; pop es; clc; call edx; 
0x0016d196: add al, byte ptr [eax]; push -0x3a; stc; jmp eax; 
0x0016d836: add al, byte ptr [eax]; push -6; jmp dword ptr [eax]; 
0x001941de: add al, byte ptr [eax]; push ebp; sbb dh, bh; call dword ptr [eax]; 
0x0016c14e: add al, byte ptr [eax]; push esi; clc; jmp eax; 
0x00198e6a: add al, byte ptr [eax]; push esp; aaa; clc; jmp dword ptr [eax]; 
0x0016edc6: add al, byte ptr [eax]; push esp; insd dword ptr es:[edi], dx; cld; jmp esp; 
0x0016c3c6: add al, byte ptr [eax]; push esp; jnp 0x16c3c3; call esp; 
0x0016d556: add al, byte ptr [eax]; push esp; push es; cli; call dword ptr [eax]; 
0x0019710e: add al, byte ptr [eax]; pushal; mov al, 0xf7; call dword ptr [eax]; 
0x00193bde: add al, byte ptr [eax]; pushal; or al, 0xf7; call dword ptr [esi]; 
0x0019877e: add al, byte ptr [eax]; pushal; sbb eax, edi; call edx; 
0x0016d486: add al, byte ptr [eax]; pushfd; clc; stc; jmp esp; 
0x0016cd9e: add al, byte ptr [eax]; ret 0xf974; 
0x001926ae: add al, byte ptr [eax]; ret; 
0x0019764e: add al, byte ptr [eax]; ror bl, 0xf7; jmp dword ptr [edx]; 
0x0016d45e: add al, byte ptr [eax]; sal ah, 1; stc; jmp dword ptr [eax]; 
0x0016cf96: add al, byte ptr [eax]; salc; movsb byte ptr es:[edi], byte ptr [esi]; stc; call eax; 
0x0019aa92: add al, byte ptr [eax]; sbb al, 0x9f; clc; call dword ptr [ebx]; 
0x0019b986: add al, byte ptr [eax]; sbb bl, dl; clc; jmp dword ptr [eax]; 
0x001921be: add al, byte ptr [eax]; sbb cl, 0xf6; call dword ptr [ebp]; 
0x0018ffd2: add al, byte ptr [eax]; sbb dword ptr [ebp - 0xa], edx; call dword ptr [eax]; 
0x00195a86: add al, byte ptr [eax]; sbb dword ptr [edx - 9], ecx; call dword ptr [eax]; 
0x0016d3be: add al, byte ptr [eax]; shr bl, 1; stc; call eax; 
0x0016d42e: add al, byte ptr [eax]; stc; push dword ptr [eax + 0x140002ce]; stc; call esp; 
0x0016d746: add al, byte ptr [eax]; sti; cli; push dword ptr [edx + 0x370b0002]; cli; jmp esp; 
0x001960f6: add al, byte ptr [eax]; sub byte ptr [eax - 9], ch; call dword ptr [ecx]; 
0x0016b386: add al, byte ptr [eax]; sub dh, dh; call eax; 
0x0019b532: add al, byte ptr [eax]; sub dl, bl; clc; call dword ptr [eax]; 
0x0016d176: add al, byte ptr [eax]; sub ebp, eax; stc; jmp dword ptr [eax]; 
0x001945d6: add al, byte ptr [eax]; test al, 0xa7; stc; call dword ptr [ebx]; 
0x0019b472: add al, byte ptr [eax]; test al, 0xda; clc; call dword ptr [eax]; 
0x0016b21e: add al, byte ptr [eax]; test al, bl; cmc; call dword ptr [eax]; 
0x0016d69e: add al, byte ptr [eax]; test byte ptr [0xe03cfffa], bl; add al, byte ptr [eax]; add al, 0x1e; cli; jmp dword ptr [eax - 0x20]; 
0x0019601a: add al, byte ptr [eax]; test byte ptr [ebx - 9], bl; jmp esp; 
0x0016ca7e: add al, byte ptr [eax]; test byte ptr [edi], al; stc; call esp; 
0x0019044a: add al, byte ptr [eax]; test dword ptr [edx - 0xa], ebx; call dword ptr [eax]; 
0x00194cea: add al, byte ptr [eax]; xchg eax, edi; sub esi, edi; call dword ptr [eax]; 
0x0016c00e: add al, byte ptr [eax]; xchg eax, esp; aaa; clc; call dword ptr [eax]; 
0x0016c04e: add al, byte ptr [eax]; xchg eax, esp; cmp eax, edi; jmp esp; 
0x0016cc5e: add al, byte ptr [eax]; xchg eax, esp; inc edi; stc; call eax; 
0x0016cc06: add al, byte ptr [eax]; xchg eax, esp; inc esp; stc; jmp dword ptr [eax]; 
0x0016c816: add al, byte ptr [eax]; xchg eax, esp; int 0xf8; jmp dword ptr [eax - 0x7e]; 
0x0016c7a6: add al, byte ptr [eax]; xchg eax, esp; ret; 
0x0016beae: add al, byte ptr [eax]; xchg eax, esp; sbb bh, al; call eax; 
0x0016b72e: add al, byte ptr [eax]; xchg eax, esp; sbb bh, dh; call esp; 
0x0016b37e: add al, byte ptr [eax]; xchg eax, esp; sub esi, esi; lcall ptr [eax + 0x6400020f]; sub dh, dh; call eax; 
0x0016c5b6: add al, byte ptr [eax]; xchg eax, esp; xchg eax, ebp; clc; jmp eax; 
0x0016c58e: add al, byte ptr [eax]; xchg eax, esp; xchg eax, edx; clc; jmp eax; 
0x0016d5a6: add al, byte ptr [eax]; xlatb; or edi, edx; push dword ptr [eax - 0x18fffd29]; or edi, edx; jmp eax; 
0x00194c8a: add al, byte ptr [eax]; xlatb; sub esi, edi; call dword ptr [eax]; 
0x0016d766: add al, byte ptr [eax]; xor al, 0x38; cli; jmp esp; 
0x0016cc36: add al, byte ptr [eax]; xor al, 0x46; stc; jmp eax; 
0x0016cc56: add al, byte ptr [eax]; xor al, 0x47; stc; ljmp ptr [edx + ebx*4 + 0x47940002]; stc; call eax; 
0x0016c0f6: add al, byte ptr [eax]; xor al, 0x4b; clc; call dword ptr [eax]; 
0x0016cd36: add al, byte ptr [eax]; xor al, 0x66; stc; call dword ptr [eax - 0x5f]; 
0x0016c4e6: add al, byte ptr [eax]; xor al, 0x87; clc; call eax; 
0x0016c536: add al, byte ptr [eax]; xor al, 0x8b; clc; jmp dword ptr [eax]; 
0x0016c5e6: add al, byte ptr [eax]; xor al, 0x98; clc; call dword ptr [eax]; 
0x0019a966: add al, byte ptr [eax]; xor al, 0xa2; clc; call dword ptr [eax]; 
0x0016b1e6: add al, byte ptr [eax]; xor al, 0xc5; cmc; call eax; 
0x0016d226: add al, byte ptr [eax]; xor al, 0xcc; stc; jmp dword ptr [eax - 0x40]; 
0x0016d286: add al, byte ptr [eax]; xor al, 0xd1; stc; push dword ptr [eax]; ret 2; 
0x0016dc1e: add al, byte ptr [eax]; xor al, 0xd3; cli; call dword ptr [eax - 1]; 
0x0018fa8a: add al, byte ptr [eax]; xor dword ptr [eax - 0xa], ecx; call dword ptr [eax]; 
0x0018d444: add al, byte ptr [ebp + 0x41140e0a]; ret; 
0x0018f067: add al, byte ptr [ebp + 0xa]; ret; 
0x0017a4b2: add al, byte ptr [ebp + 0xe]; add al, 0xc6; ret; 
0x001916e9: add al, byte ptr [ebp + 0xe]; and byte ptr [edx], al; ret 0xe0a; 
0x000a558d: add al, byte ptr [ebp + 0xfc789c0]; test byte ptr [esi + 0x1fffff7], dh; ret 0x5589; 
0x00111bd8: add al, byte ptr [ebp - 0x74ed8b40]; push eax; add al, 0x89; add al, 0x24; call dword ptr [edx + 0x10]; 
0x000ea06a: add al, byte ptr [ebp - 0x7cf68b40]; ret 0x8904; 
0x001339b8: add al, byte ptr [ebx + 0x27402ea]; mov byte ptr [edi], al; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00133f08: add al, byte ptr [ebx + 0x27402ea]; mov byte ptr [edi], al; pop edi; pop ebx; ret; 
0x000d858f: add al, byte ptr [ebx + 0x37401e2]; mov byte ptr [edi], 0; xor eax, eax; pop edi; ret; 
0x0012b792: add al, byte ptr [ebx + 0x5e5b14c4]; ret; 
0x00083dbc: add al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0006eb12: add al, byte ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x0006d061: add al, byte ptr [ebx + 0x5e5b6cc4]; pop edi; pop ebp; ret; 
0x0002f850: add al, byte ptr [ebx + 0x5f5e01e8]; ret; 
0x00171cd2: add al, byte ptr [ebx + 0xa400203]; push cs; add al, 0xc6; ret; 
0x00197396: add al, byte ptr [ebx + 0xa560203]; push cs; add al, 0xc6; ret; 
0x00171bd6: add al, byte ptr [ebx + 0xa580203]; push cs; add al, 0xc7; ret; 
0x00172cbe: add al, byte ptr [ebx + 0xa5e0203]; push cs; add al, 0xc6; ret; 
0x0018c0b2: add al, byte ptr [ebx + 0xa]; ret; 
0x0018ab0e: add al, byte ptr [ebx + 0xe0a6c03]; add al, 0xc7; ret; 
0x001875a6: add al, byte ptr [ebx + 0xe0a7003]; add al, 0xc7; ret; 
0x0018a8d2: add al, byte ptr [ebx + 0xe0a7103]; add al, 0xc7; ret; 
0x0018c246: add al, byte ptr [ebx + 0xe0a7703]; add al, 0xc6; ret; 
0x001846de: add al, byte ptr [ebx + 0xe450203]; add al, 0xc6; ret; 
0x00185bde: add al, byte ptr [ebx + 0xe500203]; add al, 0xc6; ret; 
0x0019595e: add al, byte ptr [ebx + 0xe590203]; add al, 0xc6; ret; 
0x0017317e: add al, byte ptr [ebx + 0xe750203]; add al, 0xc6; ret; 
0x00198e4d: add al, byte ptr [ebx + 0xe]; or al, 0x86; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xc0e7e04], al; ret; 
0x0018b2d5: add al, byte ptr [ebx + 0xe]; pushal; push cs; or byte ptr [esi + ecx + 4], al; ret; 
0x00199fe1: add al, byte ptr [ebx + 0xe]; xor byte ptr [edx], al; imul ecx, dword ptr [esi], 0x40e4108; ret; 
0x0017ae06: add al, byte ptr [ebx + eax*4 + 3]; add ah, byte ptr [esi + 0xa]; push cs; add al, 0xc6; ret; 
0x001789d6: add al, byte ptr [ebx + eax*4 + 3]; add al, byte ptr [eax + 0xa]; push cs; add al, 0xc6; ret; 
0x0017a4ae: add al, byte ptr [ebx + eax*4 + 3]; add al, byte ptr [ebp + 0xe]; add al, 0xc6; ret; 
0x0017a4ce: add al, byte ptr [ebx + eax*4 + 3]; add al, byte ptr [edi + 0xa]; push cs; add al, 0xc6; ret; 
0x0017aaee: add al, byte ptr [ebx + eax*4 + 3]; add al, byte ptr [edx + 0xe]; add al, 0xc6; ret; 
0x00178a7e: add al, byte ptr [ebx + eax*4 + 3]; add al, byte ptr [esi + 0xe]; add al, 0xc6; ret; 
0x0017c416: add al, byte ptr [ebx + eax*4 + 3]; add bh, byte ptr [eax + 0xa]; push cs; add al, 0xc6; ret; 
0x00174aea: add al, byte ptr [ebx + eax*4 + 3]; add bh, byte ptr [ebx + 0xa]; push cs; add al, 0xc6; ret; 
0x00174502: add al, byte ptr [ebx + eax*4 + 3]; add bl, byte ptr [ecx + 0xe]; add al, 0xc6; ret; 
0x00196d1a: add al, byte ptr [ebx + eax*4 + 3]; add bl, byte ptr [edi + 0xa]; push cs; add al, 0xc6; ret; 
0x0017908a: add al, byte ptr [ebx + eax*4 + 3]; add cl, byte ptr [eax + 0xa]; push cs; add al, 0xc6; ret; 
0x00178bda: add al, byte ptr [ebx + eax*4 + 3]; add cl, byte ptr [ebx + 0xe]; add al, 0xc6; ret; 
0x0017aea6: add al, byte ptr [ebx + eax*4 + 3]; add cl, byte ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x00178d1e: add al, byte ptr [ebx + eax*4 + 3]; add cl, byte ptr [ecx + 0xe]; add al, 0xc6; ret; 
0x0017c322: add al, byte ptr [ebx + eax*4 + 3]; add dh, byte ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x00172c42: add al, byte ptr [ebx + eax*4 + 3]; add dl, byte ptr [ebx + 0xa]; push cs; add al, 0xc6; ret; 
0x00189dbe: add al, byte ptr [ebx + eax*4 + 3]; add dl, byte ptr [edx + 0xe]; add al, 0xc6; ret; 
0x00179d82: add al, byte ptr [ebx + eax*4 + 3]; add dl, byte ptr [esi + 0xa]; push cs; add al, 0xc6; ret; 
0x001704e6: add al, byte ptr [ebx + eax*4 + 3]; insd dword ptr es:[edi], dx; push cs; add al, 0xc6; ret; 
0x00177eea: add al, byte ptr [ebx + eax*4 + 3]; jno 0x177efe; add al, 0xc6; ret; 
0x0017ae56: add al, byte ptr [ebx + eax*4 + 3]; jno 0x17ae66; push cs; add al, 0xc6; ret; 
0x0017173a: add al, byte ptr [ebx + eax*4 + 3]; jnp 0x17174a; push cs; add al, 0xc6; ret; 
0x0017a56a: add al, byte ptr [ebx + eax*4 + 3]; jnp 0x17a57a; push cs; add al, 0xc6; ret; 
0x00179d36: add al, byte ptr [ebx + eax*4 + 3]; jns 0x179d4a; add al, 0xc6; ret; 
0x00199bd6: add al, byte ptr [ebx + eax*4 + 3]; jp 0x199bea; add al, 0xc6; ret; 
0x0017a596: add al, byte ptr [ebx + eax*4 + 3]; pop ebp; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0018d486: add al, byte ptr [ebx + eax*4 + 3]; push 0xa; push cs; add al, 0xc6; ret; 
0x00178b6a: add al, byte ptr [ebx + eax*4 + 3]; pushal; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0004a15f: add al, byte ptr [ebx - 0x187cfe1e]; add dword ptr [ebx - 0x15745], ecx; jmp dword ptr [ebp - 0x75]; 
0x000e0b09: add al, byte ptr [ebx - 0x1e140038]; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x000bb20f: add al, byte ptr [ebx - 0x377cfe3f]; add ch, bl; ret; 
0x000d88b7: add al, byte ptr [ebx - 0x4214fd39]; nop; nop; nop; xor eax, eax; ret; 
0x0002e19a: add al, byte ptr [ebx - 0x46140038]; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00045e34: add al, byte ptr [ebx - 0x4e343]; call dword ptr [eax]; 
0x00044013: add al, byte ptr [ebx - 0x4f343]; call dword ptr [eax]; 
0x0007e2ca: add al, byte ptr [ebx - 0x540cfc1e]; mov ecx, edx; rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x000ef12c: add al, byte ptr [ebx - 0x7bf00008]; ret 0; 
0x00136bec: add al, byte ptr [ebx]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x00174168: add al, byte ptr [ebx]; pop esp; add dword ptr [edx], ecx; push cs; adc al, 0x46; ret; 
0x000d72d9: add al, byte ptr [ebx]; xchg eax, ebp; sar dh, 0xff; dec dword ptr [ecx - 0x16f4b]; jmp dword ptr [esi - 0x70]; 
0x00190ab9: add al, byte ptr [ecx + 0xa]; push cs; adc al, 0x43; ret; 
0x0017052a: add al, byte ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x0017e27a: add al, byte ptr [ecx + 0xa]; ret; 
0x0018b4a1: add al, byte ptr [ecx + 0xe]; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xc0e6104], al; ret; 
0x0017cf11: add al, byte ptr [ecx + 0xe]; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xc0e6704], al; ret; 
0x0016930d: add al, byte ptr [ecx]; add byte ptr [ebp - 0x10], al; call dword ptr [eax]; 
0x000f1d84: add al, byte ptr [ecx]; add esp, 8; pop ebx; ret; 
0x000a8874: add al, byte ptr [ecx]; ret 0x3c8d; 
0x00183a45: add al, byte ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0017a4d2: add al, byte ptr [edi + 0xa]; push cs; add al, 0xc6; ret; 
0x00195e25: add al, byte ptr [edi + 0xd]; add eax, 0x86058343; add al, 0x87; add eax, dword ptr [edx]; jno 0x195e3d; ret; 
0x00199c69: add al, byte ptr [edi + 0xe]; or byte ptr [esi + ecx + 4], al; ret; 
0x0018b9aa: add al, byte ptr [edi - 0x7d]; add edi, dword ptr [edi + 0xa]; push cs; add al, 0xc6; ret; 
0x00170996: add al, byte ptr [edx + 0xa]; push cs; add al, 0xc6; ret; 
0x00187f35: add al, byte ptr [edx + 0xd]; add eax, 0x42038743; add dword ptr [0x5d030486], 6; ret; 
0x00171b89: add al, byte ptr [edx + 0xd]; add eax, 0x78038341; ret; 
0x00187d7d: add al, byte ptr [edx + 0xd]; add eax, 0x86058343; add al, 0x87; add eax, dword ptr [ebx]; add al, 0xa; ret; 
0x00184735: add al, byte ptr [edx + 0xd]; add eax, 0x86058343; add al, 0x87; add eax, dword ptr [ebx]; imul eax, dword ptr [ecx], 0xa; ret; 
0x00187c31: add al, byte ptr [edx + 0xd]; add eax, 0x86058343; add al, 0x87; add eax, dword ptr [ebx]; xchg byte ptr [edx + ecx], al; ret; 
0x00195df5: add al, byte ptr [edx + 0xd]; add eax, 0x86058343; add al, 0x87; add eax, dword ptr [edx]; arpl word ptr [edx], cx; ret; 
0x00197005: add al, byte ptr [edx + 0xd]; add eax, 0x86058343; add al, 0x87; add eax, dword ptr [edx]; dec byte ptr [edx]; ret; 
0x00187a81: add al, byte ptr [edx + 0xd]; add eax, 0x86058343; add al, 0x87; add eax, dword ptr [edx]; fisttp qword ptr [edx]; ret; 
0x00193649: add al, byte ptr [edx + 0xd]; add eax, 0x86058343; add al, 0x87; add eax, dword ptr [edx]; loope 0x193661; ret; 
0x0018c73d: add al, byte ptr [edx + 0xd]; add eax, 0x86058343; add al, 0x87; add eax, dword ptr [edx]; mov cs, word ptr [edx]; ret; 
0x00191789: add al, byte ptr [edx + 0xd]; add eax, 0x86058343; add al, 0x87; add edi, dword ptr [eax + 0xa]; ret; 
0x0018c3e5: add al, byte ptr [edx + 0xd]; add eax, 0x86058346; add al, 0x87; add eax, dword ptr [edx]; fmul qword ptr [edx]; ret; 
0x00190f85: add al, byte ptr [edx + 0xd]; add eax, 0x86058349; add al, 0x87; add eax, dword ptr [ebx]; fld dword ptr [edx + ecx]; ret; 
0x0018cb2d: add al, byte ptr [edx + 0xd]; add eax, 0x86058349; add al, 0x87; add eax, dword ptr [ebx]; rol byte ptr [edx], 0xa; ret; 
0x001759b5: add al, byte ptr [edx + 0xd]; add eax, 0x86058349; add al, 0x87; add eax, dword ptr [edx]; mov cs, word ptr [edx]; ret; 
0x0017e241: add al, byte ptr [edx + 0xd]; add eax, 0x86058349; add al, 0x87; add edi, dword ptr [ebx + 0xa]; ret; 
0x0018458d: add al, byte ptr [edx + 0xd]; add eax, 0x86058349; add al, 0x87; add edi, dword ptr [ecx + 0xa]; ret; 
0x001711b5: add al, byte ptr [edx + 0xd]; add eax, 0x86058349; add al, 0x87; add esi, dword ptr [edi + 0xa]; ret; 
0x0017e1d9: add al, byte ptr [edx + 0xd]; add eax, 0x8605834c; add al, 0x87; add eax, dword ptr [ebx]; add al, 0xa; ret; 
0x00173ee9: add al, byte ptr [edx + 0xd]; add eax, 0x8605834c; add al, 0x87; add eax, dword ptr [ebx]; lar ecx, word ptr [edx]; ret; 
0x0018d5fd: add al, byte ptr [edx + 0xd]; add eax, 0x8605834c; add al, 0x87; add eax, dword ptr [edx]; xchg byte ptr [edx], cl; ret; 
0x00190cdd: add al, byte ptr [edx + 0xd]; add eax, 0x8605834c; add al, 0x87; add edx, dword ptr [esi + 0xa]; ret; 
0x0018a1b9: add al, byte ptr [edx + 0xd]; add eax, 0x87048644; add eax, dword ptr [ebx + eax*4 + 5]; add dh, byte ptr [ebp + 0xa]; ret; 
0x00170845: add al, byte ptr [edx + 0xd]; add eax, 0x87048644; add eax, dword ptr [ecx - 0x7d]; add eax, 0xa010f03; ret; 
0x0019b36d: add al, byte ptr [edx + 0xd]; add eax, 0x87048644; add eax, dword ptr [ecx - 0x7d]; add eax, 0xa014103; ret; 
0x0019a039: add al, byte ptr [edx + 0xd]; add eax, 0x87048644; add eax, dword ptr [ecx - 0x7d]; add eax, 0xa01a003; ret; 
0x0018b6d9: add al, byte ptr [edx + 0xd]; add eax, 0x87048644; add eax, dword ptr [edi - 0x7d]; add eax, 0xa03ba03; ret; 
0x0019a769: add al, byte ptr [edx + 0xd]; add eax, 0x87048647; add ecx, dword ptr [ebp - 0x7d]; add eax, 0xa017803; ret; 
0x0017aaf2: add al, byte ptr [edx + 0xe]; add al, 0xc6; ret; 
0x0018e938: add al, byte ptr [edx + 9]; add eax, dword ptr [edx]; push edi; ret; 
0x0018f949: add al, byte ptr [edx]; add byte ptr [esi + eax*2 - 0xa], cl; call dword ptr [eax]; 
0x00185c22: add al, byte ptr [edx]; bound ecx, qword ptr [esi]; add al, 0xc6; ret; 
0x00195af9: add al, byte ptr [edx]; dec esi; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x001907dd: add al, byte ptr [edx]; dec esi; push cs; add al, 0xc6; ret; 
0x00170529: add al, byte ptr [edx]; inc ecx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00170995: add al, byte ptr [edx]; inc edx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00198bd1: add al, byte ptr [edx]; inc edx; push cs; add al, 0xc6; ret; 
0x0019b693: add al, byte ptr [edx]; mov cs, word ptr [esi]; add al, 0xc5; mov esi, 0x4400; add byte ptr [eax + 0x7c0002c4], ah; ret; 
0x00197529: add al, byte ptr [edx]; pop eax; push cs; add al, 0xc6; ret; 
0x0017c865: add al, byte ptr [edx]; pop ebx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0018ec17: add al, byte ptr [edx]; pop esi; ret; 
0x0019b1a1: add al, byte ptr [edx]; push ebp; push cs; add al, 0xc6; ret; 
0x00196a2d: add al, byte ptr [edx]; push ecx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x001741d5: add al, byte ptr [edx]; push edx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00183bb1: add al, byte ptr [esi + 0x43140e0a]; ret; 
0x001764c3: add al, byte ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x00178a82: add al, byte ptr [esi + 0xe]; add al, 0xc6; ret; 
0x00173ffb: add al, byte ptr [esi + ecx + 0x14]; inc ebx; ret; 
0x0017cf8e: add al, byte ptr [esi + ecx + 4]; ret; 
0x0014729e: add al, byte ptr ds:[eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x001930d1: add al, byte ptr ds:[eax]; in al, dx; div esi; jmp dword ptr [eax]; 
0x0016ed5d: add al, byte ptr es:[eax]; cld; lcall ptr [esi + 0x65b40002]; cld; jmp dword ptr [eax]; 
0x001918c5: add al, byte ptr es:[eax]; dec eax; mov al, 0xf6; call dword ptr [ecx]; 
0x0016ed65: add al, byte ptr es:[eax]; mov ah, 0x65; cld; jmp dword ptr [eax]; 
0x001956ad: add al, byte ptr fs:[eax]; inc eax; xor al, 0xf7; jmp dword ptr [ebx]; 
0x0016c2bd: add al, byte ptr gs:[eax]; jo 0x16c2bb; call dword ptr [eax]; 
0x001928a1: add al, byte ptr ss:[eax]; in al, dx; out 0xf6, al; call dword ptr [esi + 5]; 
0x0007bd06: add al, ch; aam 0xb1; stc; inc dword ptr [ebp + 0x74c789c0]; ret 0xf685; 
0x00132c58: add al, ch; adc eax, 0x81ffff71; ret; 
0x000def85: add al, ch; adc eax, 0x89fffff1; ret 0xffb8; 
0x00168e5c: add al, ch; add byte ptr [eax], al; mov eax, dword ptr [0x30ffefde]; call 0xdec08e6a; out dx, eax; jmp dword ptr [eax - 0x18]; 
0x0001af6f: add al, ch; add ch, dh; adc byte ptr [eax], al; add ecx, 0x18807f; mov eax, dword ptr [ecx + 0x36c8]; ret; 
0x0001964f: add al, ch; and al, byte ptr [edi]; adc dword ptr [eax], eax; add ecx, 0x18999f; lea eax, dword ptr [ecx - 0x43dee]; ret; 
0x0008e90f: add al, ch; bound esi, qword ptr [ecx + ecx + 0x1bc18100]; mov esi, 0xc03000c; xchg eax, ecx; jmp ecx; 
0x000e1985: add al, ch; call 0x810e1e0f; ret; 
0x000b80b2: add al, ch; cmp byte ptr [eax - 9], ah; jmp dword ptr [ebp - 0x77]; 
0x0004a130: add al, ch; cmp eax, 0x81000dfc; ret; 
0x0019b593: add al, ch; fprem; call dword ptr [eax]; 
0x0012d11d: add al, ch; fxch st(0), st(7); clc; dec dword ptr [ebx - 0xf775]; jmp dword ptr [ebp - 0x75]; 
0x000e4cdf: add al, ch; imul esp, dword ptr [edx], -0xd; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x0017dee7: add al, ch; in al, dx; add byte ptr [eax], al; test byte ptr [eax + esi*8], bl; jmp dword ptr [edx]; 
0x000de32c: add al, ch; inc ecx; mov edx, 0xc3810004; ret 0xc4c; 
0x000dd76e: add al, ch; insb byte ptr es:[edi], dx; ret; 
0x000bd89b: add al, ch; jmp dword ptr [eax - 1]; 
0x000b95cb: add al, ch; mov byte ptr [0x81000707], al; ret; 
0x0008d2cf: add al, ch; mov byte ptr [0x810009ca], al; sar ebx, -0x2e; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001194ca: add al, ch; mov dword ptr [0x81000108], eax; ret; 
0x00101aca: add al, ch; mov dword ptr [0x81000282], eax; ret; 
0x0004bbca: add al, ch; mov dword ptr [0x81000de1], eax; ret; 
0x001155cc: add al, ch; mov eax, dword ptr [0x81000147]; ret; 
0x000231cc: add al, ch; mov eax, dword ptr [0x8100106b]; ret; 
0x0010e5b0: add al, ch; mov ebp, 0x810001b7; ret; 
0x001145fd: add al, ch; mov ebp, 0x89fffffe; ret 0xc031; 
0x00020ab4: add al, ch; mov ecx, 0x81001092; ret; 
0x0001dab4: add al, ch; mov ecx, 0x810010c2; ret; 
0x000c38b3: add al, ch; mov edx, 0x81000664; ret; 
0x000e38af: add al, ch; mov esi, 0x81000464; ret; 
0x0010d6b1: add al, ch; mov esp, 0x810001c6; ret; 
0x00174c6e: add al, ch; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00023e60: add al, ch; or eax, 0x8100105f; ret; 
0x0012b060: add al, ch; or eax, 0x81ffffed; ret; 
0x00179af7: add al, ch; pop ebp; out dx, eax; jmp dword ptr [ecx]; 
0x00199c57: add al, ch; pop esp; clc; call dword ptr [eax]; 
0x0002a9ae: add al, ch; pop esp; sbb al, 5; add byte ptr [ebx - 0x12f6d], cl; dec dword ptr [ecx - 0x1b37b]; jmp dword ptr [ebp - 0x75]; 
0x000e2b05: add al, ch; push 0x81000472; ret; 
0x0014ac2c: add al, ch; push ds; ret; 
0x00077bbe: add al, ch; pushfd; fcos; jmp dword ptr [ebp - 0x7d]; 
0x0007aa0a: add al, ch; rcl byte ptr [edi], 8; add cl, ch; ret 0xffd2; 
0x000948af: add al, ch; ret 0x954; 
0x000477ab: add al, ch; ret 0xe25; 
0x00123818: add al, ch; ret 0xef36; 
0x000eca48: add al, ch; ret 0xf76d; 
0x0002bf88: add al, ch; ret 0xfffa; 
0x00079078: add al, ch; ret 0xfffc; 
0x0018b4e7: add al, ch; ret 1; 
0x00041017: add al, ch; ret; 
0x00190ee7: add al, ch; sbb al, 2; add byte ptr [ecx + ebx*4], al; idiv bh; ret; 
0x0009e650: add al, ch; sbb eax, 0x810008b7; ret; 
0x0018de57: add al, ch; std; cmc; call ecx; 
0x000bc7fd: add al, ch; std; fdivr st(7); dec dword ptr [ebx - 0xf775]; jmp dword ptr [ebp - 0x75]; 
0x00171be7: add al, ch; sub dword ptr [eax], eax; add ah, dh; ret 0xffeb; 
0x000e5140: add al, ch; sub eax, 0x8100044c; ret; 
0x0011458d: add al, ch; sub eax, 0x89ffffff; ret 0xc031; 
0x00019256: add al, ch; test dl, ah; pop es; add byte ptr [ecx - 0x47fbdbbc], cl; ret 0; 
0x000221c4: add al, ch; test eax, 0x8100107b; ret; 
0x0012e0c4: add al, ch; test eax, 0x81ffffbc; ret; 
0x001987e7: add al, ch; xchg eax, ebp; add al, byte ptr [eax]; hlt; sbb edi, eax; jmp dword ptr [edi]; 
0x000dff87: add al, ch; xchg eax, ebx; idiv edi; inc dword ptr [ecx + 0xd4c4]; add byte ptr [ebx + 0x5e], bl; ret; 
0x0017ebb3: add al, cl; add byte ptr [eax], al; add byte ptr [eax - 0x6bffff07], bh; aas; sti; jmp esp; 
0x0003a0a4: add al, cl; cli; add cl, byte ptr [ecx + 0x31d089c1]; sar byte ptr [ecx], cl; ret 0x820f; 
0x0003d042: add al, cl; cli; add cl, byte ptr [ecx + 0x31d089c1]; sar byte ptr [ecx], cl; ret 0x830f; 
0x001921d7: add al, cl; fdecstp; call eax; 
0x001892c7: add al, cl; mov al, byte ptr [0x53c40001]; hlt; jmp dword ptr [esi + 1]; 
0x0018b7b7: add al, cl; outsd dx, dword ptr [esi]; cmc; jmp dword ptr [edi + 3]; 
0x00188877: add al, cl; xchg eax, ecx; add dword ptr [eax], eax; cld; hlt; call dword ptr [eax]; 
0x001824c7: add al, cl; xor al, byte ptr [ecx]; add byte ptr [esp + ecx*2 - 4], al; call esp; 
0x001951c7: add al, cl; xor edi, esi; call dword ptr [ecx]; 
0x00172cef: add al, dh; cmp al, byte ptr [eax]; add byte ptr [ebp + edi*8 - 0x15], bl; jmp dword ptr [ebx]; 
0x00009437: add al, dh; cmp byte ptr [edi], cl; add byte ptr [ecx + 0x12000000], bl; add byte ptr [eax + eax], cl; ret 0x38; 
0x0018adef: add al, dh; cmp eax, 0x7afff5; add byte ptr [eax], al; add byte ptr [ebx + 0xe], cl; or byte ptr [ebx + 0x40e5902], al; ret; 
0x001988ef: add al, dh; daa; clc; call dword ptr [ebx]; 
0x0019449f: add al, dh; dec ebp; add al, byte ptr [eax]; clc; and edi, esi; call dword ptr [eax]; 
0x0018d6ef: add al, dh; in al, 1; add byte ptr [ebx + ebp*8], bl; cmc; call dword ptr [edx]; 
0x001977bf: add al, dh; int 0xf7; jmp dword ptr [esi]; 
0x0019b49f: add al, dh; mov ebp, 0xda880002; clc; call dword ptr [eax]; 
0x0017feef: add al, dh; or al, 1; add ah, bl; in eax, dx; sti; jmp ecx; 
0x0018d9ef: add al, dh; out 1, eax; add ah, ch; div ebp; call dword ptr [esi]; 
0x0017d381: add al, dh; push dword ptr [eax + eax]; add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e7202], al; ret; 
0x0000c6f7: add al, dh; push ebx; or eax, dword ptr [eax]; mov edx, 0x12000000; add byte ptr [eax + eax], cl; ret 0x59; 
0x0019b67f: add al, dh; ret 0xfff8; 
0x00178def: add al, dh; wait; add byte ptr [eax], al; cmp al, 0x3a; out dx, eax; jmp dword ptr [esi + 2]; 
0x00177c8b: add al, dh; xor eax, dword ptr [eax]; add byte ptr [eax + 0x20], al; out dx, eax; call dword ptr [esi]; 
0x0017046f: add al, dh; xor ebp, ebx; jmp dword ptr [esi]; 
0x001930cf: add al, dl; add al, byte ptr ds:[eax]; in al, dx; div esi; jmp dword ptr [eax]; 
0x00009597: add al, dl; call dword ptr [ecx]; 
0x001844ff: add al, dl; cli; int1; jmp esi; 
0x0016d45f: add al, dl; hlt; stc; jmp dword ptr [eax]; 
0x0018aecf: add al, dl; inc ecx; cmc; call dword ptr [ebx]; 
0x0019b1cf: add al, dl; mov edi, 0xbbec0002; clc; jmp dword ptr [edi]; 
0x001916ed: add al, dl; or cl, byte ptr [esi]; or byte ptr [esi + ecx + 4], al; ret; 
0x0019527f: add al, dl; pop ebx; add al, byte ptr [eax]; pop ds; xor al, 0xf7; call dword ptr [eax]; 
0x0017ad3f: add al, dl; pop es; sti; jmp edx; 
0x00009557: add al, dl; ret 7; 
0x0017a07f: add al, dl; test eax, 0x951a0000; out dx, eax; call dword ptr [eax]; 
0x001953ff: add al, dl; xor dh, bh; call dword ptr [ecx]; 
0x00172a7f: add al, dl; xor eax, dword ptr [eax]; add byte ptr [edi + edi*8 - 0x15], cl; call dword ptr [eax]; 
0x00169297: add bh, ah; and eax, esi; push dword ptr [eax]; add dword ptr [eax], eax; and eax, esi; jmp dword ptr [eax + 0x4000100]; 
0x0016e709: add bh, ah; call dword ptr [eax + 0x3c]; 
0x0016d5af: add bh, ah; or edi, edx; jmp eax; 
0x000d6e43: add bh, ah; ret; 
0x000f8419: add bh, al; add al, 0x24; add al, 0; add byte ptr [edx], al; mov dword ptr [esp + 8], edx; call eax; 
0x00026c0c: add bh, al; add al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; call eax; 
0x00125d3d: add bh, al; add al, byte ptr [eax]; add byte ptr [eax], al; add bl, ch; ret; 
0x000b676a: add bh, al; add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x39]; 
0x00047fb2: add bh, al; add ch, byte ptr [0x83000000]; ret 0x8904; 
0x0007280f: add bh, al; inc eax; or byte ptr [eax], al; add byte ptr [eax], al; add bl, dh; ret; 
0x000c7458: add bh, al; inc eax; sbb al, 0; add byte ptr [eax], al; add dh, dh; ret 0xc740; 
0x0001c69a: add bh, al; inc ebp; fadd qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0xf74d], cl; jmp dword ptr [ebp - 0x75]; 
0x001830bd: add bh, al; inc ecx; adc eax, dword ptr [ecx]; ret; 
0x000f3e06: add bh, al; inc esp; and al, 0xc; add byte ptr [eax + eax], al; add byte ptr [ecx - 0x617dbfc], cl; ret 0; 
0x00074a11: add bh, al; inc esp; mov word ptr [eax], ss; add byte ptr [eax], al; add cl, ch; ret; 
0x0005a064: add bh, al; test dword ptr [edi + ebp*8 - 1], ebx; call dword ptr [eax]; 
0x0005a1a8: add bh, al; test dword ptr [edi + ebp*8 - 1], esp; call dword ptr [eax]; 
0x0007dc72: add bh, bh; add byte ptr [ecx + eax + 0x40], dh; pop edi; pop esi; ret; 
0x0007f8ee: add bh, bh; add byte ptr [ecx + eax + 0x40], dh; pop edi; ret; 
0x00117cea: add bh, bh; add byte ptr [ecx], dh; rol ecx, -0x20; or byte ptr [ecx], dh; ror byte ptr [ecx + 0x31ead1ca], 1; ret 0xe281; 
0x0015afa7: add bh, bh; dec dword ptr [edi]; cld; jmp dword ptr [esi]; 
0x0019bd1f: add bh, bh; inc dword ptr [ecx]; or bh, byte ptr [eax + 5]; ret; 
0x0019c051: add bh, bh; inc dword ptr [ecx]; sbb bl, byte ptr [0x73000005]; ret 0x8d01; 
0x000a726b: add bh, bh; pop esi; pop edi; ret; 
0x00168997: add bh, bh; popfd; in eax, dx; call eax; 
0x00081b51: add bh, bh; push dword ptr [edi + ebx*2 - 9]; ret 0; 
0x00124a52: add bh, bh; push eax; add al, 0x89; ret 0x8365; 
0x00124dc6: add bh, bh; push eax; or al, 0x89; ret 0x8365; 
0x000b9b72: add bh, bh; ret; 
0x000ec97e: add bh, bh; shr cl, 1; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x001952b3: add bh, bh; xor esi, edi; call dword ptr [eax]; 
0x0019ca6b: add bh, bl; add eax, 0x1250000; add byte ptr [eax], al; ret; 
0x0016ff0c: add bh, byte ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0017c41a: add bh, byte ptr [eax + 0xa]; push cs; add al, 0xc6; ret; 
0x0004c443: add bh, byte ptr [eax + 1]; ret; 
0x000de064: add bh, byte ptr [eax - 1]; mov ebx, dword ptr [esp + 0x70]; mov esi, dword ptr [esp + 0x74]; mov edi, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x001993b1: add bh, byte ptr [ebp + 0x43140e0a]; ret; 
0x00191c5b: add bh, byte ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x00174aee: add bh, byte ptr [ebx + 0xa]; push cs; add al, 0xc6; ret; 
0x00175215: add bh, byte ptr [ebx + 0xe]; add al, 0xc6; ret; 
0x00056a6f: add bh, byte ptr [ecx]; ret 0x1974; 
0x0004948b: add bh, byte ptr [ecx]; ret 0x8e0f; 
0x00185c02: add bh, byte ptr [edi + 0xe]; add al, 0xc6; ret; 
0x00171775: add bh, byte ptr [edx + 0x43140e0a]; ret; 
0x0018d4d7: add bh, byte ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x00179c71: add bh, byte ptr [edx + 0xa]; push cs; add al, 0xc6; ret; 
0x0011fa88: add bh, byte ptr [edx + 1]; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x0016fedd: add bh, byte ptr [esi + 0x41140e0a]; ret; 
0x0017a509: add bh, byte ptr [esi + 0xa]; push cs; or al, 0x41; ret; 
0x001802a3: add bh, byte ptr [esi + ecx + 4]; ret; 
0x0017e100: add bh, ch; add byte ptr [eax], al; dec esp; and esi, eax; jmp dword ptr [edi]; 
0x001766b9: add bh, ch; call dword ptr [eax]; 
0x00166e31: add bh, ch; call eax; 
0x00166e31: add bh, ch; call eax; add bh, ch; jmp dword ptr [eax + 3]; 
0x00166e35: add bh, ch; jmp dword ptr [eax + 3]; 
0x001794d2: add bh, ch; jmp dword ptr [edx]; 
0x001766b7: add bh, dh; add bh, ch; call dword ptr [eax]; 
0x0019359d: add bh, dh; jmp dword ptr [esi]; 
0x0016d5b7: add bh, dh; or edi, edx; call dword ptr [eax]; 
0x00095b95: add bh, dh; ret 0x3f; 
0x00133228: add bh, dh; ret 0xf; 
0x0007c421: add bh, dh; ret 3; 
0x00194c5b: add bh, dh; sub esi, edi; call dword ptr [eax]; 
0x0000cf13: add bh, dl; and al, 0; add byte ptr [eax], dl; ret; 
0x0016d5a7: add bh, dl; or edi, edx; push dword ptr [eax - 0x18fffd29]; or edi, edx; jmp eax; 
0x00194c8b: add bh, dl; sub esi, edi; call dword ptr [eax]; 
0x00168f07: add bl, ah; in al, dx; out dx, eax; jmp esp; 
0x0019c8cf: add bl, al; add eax, 0x7640000; add byte ptr [eax], al; ret 2; 
0x000e7e0e: add bl, al; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000b908b: add bl, al; nop; nop; nop; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000b90ab: add bl, al; nop; nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000b909b: add bl, al; nop; nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000b90bb: add bl, al; nop; nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x00166b64: add bl, bh; cld; push dword ptr [eax - 0x7f000305]; cld; cld; jmp eax; 
0x0016d747: add bl, bh; cli; push dword ptr [edx + 0x370b0002]; cli; jmp esp; 
0x0015afb7: add bl, bh; inc ebx; add dh, bh; jmp edi; 
0x0002d8ac: add bl, bl; insb byte ptr es:[edi], dx; and al, 0x40; add esp, 0x7c; ret; 
0x0018f118: add bl, byte ptr [eax + 0x41140e0a]; ret; 
0x00171bd9: add bl, byte ptr [eax + 0xa]; push cs; add al, 0xc7; ret; 
0x00173f14: add bl, byte ptr [eax + 0xa]; ret; 
0x0019752a: add bl, byte ptr [eax + 0xe]; add al, 0xc6; ret; 
0x00188da0: add bl, byte ptr [ebp + 0xa]; push cs; adc al, 0x46; ret; 
0x0019816d: add bl, byte ptr [ebp + 0xa]; push cs; add al, 0xc6; ret; 
0x00189971: add bl, byte ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x0018939c: add bl, byte ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x0017c866: add bl, byte ptr [ebx + 0xa]; push cs; add al, 0xc6; ret; 
0x0019a815: add bl, byte ptr [ebx + 0xe]; add al, 0xc6; ret; 
0x0019811f: add bl, byte ptr [ebx - 0x3938fbf2]; ret; 
0x00185cb5: add bl, byte ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x00187700: add bl, byte ptr [ecx + 0xa]; ret; 
0x00174506: add bl, byte ptr [ecx + 0xe]; add al, 0xc6; ret; 
0x0018bb4b: add bl, byte ptr [edi + 0x41140e0a]; ret; 
0x0008d91b: add bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x001701e4: add bl, byte ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x00196d1e: add bl, byte ptr [edi + 0xa]; push cs; add al, 0xc6; ret; 
0x0018a1f4: add bl, byte ptr [edi + 0xa]; ret; 
0x001346b0: add bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x00185831: add bl, byte ptr [edx + 0xa]; push cs; add al, 0xc6; ret; 
0x0018de95: add bl, byte ptr [edx + 0xe]; add al, 0xc6; ret; 
0x00189b6f: add bl, byte ptr [edx + ecx + 0xe]; adc al, 0x43; ret; 
0x00174225: add bl, byte ptr [edx + ecx + 0xe]; add al, 0xc6; ret; 
0x0003222e: add bl, byte ptr [esi + 0x5f]; pop ebp; ret; 
0x001942b8: add bl, byte ptr [esi + 0xa]; push cs; adc al, 0x43; ret; 
0x00171c4d: add bl, byte ptr [esi + 0xa]; push cs; add al, 0xc6; ret; 
0x00189c48: add bl, byte ptr [esi + 0xa]; ret; 
0x0017f1e1: add bl, byte ptr [esi + ecx + 4]; ret; 
0x0014a137: add bl, byte ptr [esi - 0x7d]; ret 0x8308; 
0x00167860: add bl, byte ptr [esi - 3]; call dword ptr [edx + 0x5e]; 
0x0012336f: add bl, ch; aam 0x8d; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x75]; 
0x000282c1: add bl, ch; adc dword ptr [ebp - 0x7cffd98c], ecx; ret 0x3c01; 
0x0011198c: add bl, ch; fcom dword ptr [eax + 0x30244c8d]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x18], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x000b67f3: add bl, ch; mov byte ptr [ebx - 0x38afdbac], cl; add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x75]; 
0x000a7a2e: add bl, ch; ret 0xb48d; 
0x0001ba65: add bl, ch; ret; 
0x000b3c3e: add bl, ch; ror byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x000b42e6: add bl, ch; ror dword ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x000729ba: add bl, ch; xchg eax, ebx; lea esi, dword ptr [esi]; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x0016929f: add bl, dh; and eax, esi; jmp dword ptr [eax + 0x4000100]; 
0x00186f09: add bl, dh; call dword ptr [eax]; 
0x00187155: add bl, dh; call dword ptr [esi + 2]; 
0x000899ef: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, dword ptr [edx + 0xf]; pop edi; ret; 
0x00089c9f: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, dword ptr [edx + 0xf]; ret; 
0x0008562f: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000858bf: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x0009171f: add bl, dh; movq mm0, qword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094ddf: add bl, dh; movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009191c: add bl, dh; movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094d7f: add bl, dh; movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000918bc: add bl, dh; movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094d9f: add bl, dh; movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000918dc: add bl, dh; movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094dbf: add bl, dh; movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000918fc: add bl, dh; movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008dd6f: add bl, dh; movq qword ptr [edi - 1], mm0; pop edi; pop esi; pop ebx; ret; 
0x0008dd7f: add bl, dh; movq qword ptr [edi], mm0; pop edi; pop esi; pop ebx; ret; 
0x000662cf: add bl, dh; ret; 
0x00168eff: add bl, dl; in al, dx; out dx, eax; push dword ptr [ebx + ebp*8 - 0x131d0000]; out dx, eax; jmp esp; 
0x0006a015: add byte ptr [0x200], ah; ret; 
0x0016719c: add byte ptr [0x2010fffd], ch; std; call eax; 
0x0016719c: add byte ptr [0x2010fffd], ch; std; call eax; and bh, ch; jmp dword ptr [eax + 0x23]; 
0x0000713b: add byte ptr [0x22000000], dl; add byte ptr [eax + eax], cl; ret; 
0x00040dd0: add byte ptr [0x28c48300], 0x5b; ret; 
0x00167380: add byte ptr [0x3590fffd], dh; std; jmp dword ptr [eax]; 
0x00054e3b: add byte ptr [0x4000], bh; sete dl; mov eax, edx; add esp, 0x7c; ret; 
0x000003c5: add byte ptr [0x62082008], 0; ret 0x224; 
0x0019d59f: add byte ptr [0x76000007], bh; push es; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0002d7cd: add byte ptr [0x7fff], ah; or eax, edx; mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x00069fe5: add byte ptr [0x804], ah; ret; 
0x0016eb87: add byte ptr [0x88fffc28], dl; add eax, 0x28240001; cld; call esp; 
0x00019344: add byte ptr [0x91890000], al; add al, 5; add byte ptr [eax], al; pop ebx; ret; 
0x00169ebf: add byte ptr [0xa4fff132], bh; inc edx; add dword ptr [eax], eax; dec ecx; xor dh, cl; call esp; 
0x0001933a: add byte ptr [0xe750000], al; rdtsc; mov dword ptr [ecx + 0x500], eax; mov dword ptr [ecx + 0x504], edx; pop ebx; ret; 
0x0016b11f: add byte ptr [0xffa0fff5], dh; add dword ptr [eax], eax; xor al, 0x26; cmc; call eax; 
0x001759e5: add byte ptr [bx + si], al; sub bh, bl; out dx, al; jmp dword ptr [esi]; 
0x0019054f: add byte ptr [eax + 0x13], dl; add al, byte ptr [eax]; mov word ptr [eax - 0xa], ds; call ecx; 
0x000eeeec: add byte ptr [eax + 0x13f], bh; call dword ptr gs:[0x10]; 
0x0016e79f: add byte ptr [eax + 0x14], ah; cld; call eax; 
0x001986bf: add byte ptr [eax + 0x15], dh; clc; call dword ptr [esi]; 
0x00090eef: add byte ptr [eax + 0x18a017a], cl; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x00090f2f: add byte ptr [eax + 0x18b047a], cl; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x0019877f: add byte ptr [eax + 0x19], ah; clc; call edx; 
0x00170d5f: add byte ptr [eax + 0x1b], ah; add byte ptr [eax], al; dec esp; arpl bx, bp; call dword ptr [ebx]; 
0x001726af: add byte ptr [eax + 0x1c000034], dh; out 0xeb, al; call ecx; 
0x00177d8f: add byte ptr [eax + 0x1c00008b], dl; and ch, bh; jmp dword ptr [esi]; 
0x0018b18f: add byte ptr [eax + 0x1c0001bf], dl; das; cli; call dword ptr [ebp + 2]; 
0x0019aa8f: add byte ptr [eax + 0x1c0002b8], dl; lahf; clc; call dword ptr [ebx]; 
0x00188ccf: add byte ptr [eax + 0x1e], al; hlt; call ecx; 
0x00177c8f: add byte ptr [eax + 0x20], al; out dx, eax; call dword ptr [esi]; 
0x00188d2f: add byte ptr [eax + 0x21], dl; hlt; jmp dword ptr [edi]; 
0x0000583b: add byte ptr [eax + 0x22000001], bl; add byte ptr [eax + eax], cl; ret; 
0x000b906a: add byte ptr [eax + 0x26748d], dl; ret; 
0x0008f8b7: add byte ptr [eax + 0x26b48d], dl; add byte ptr [eax], al; add dh, dh; ret 0x7510; 
0x00177f27: add byte ptr [eax + 0x28], cl; out dx, eax; call edx; 
0x00185f9f: add byte ptr [eax + 0x2c00016d], ah; fcompi st(2); call dword ptr [edi]; 
0x000c5c5e: add byte ptr [eax + 0x2c1c838d], al; dec dword ptr [ebp - 0xdd4636d]; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x00191f5f: add byte ptr [eax + 0x2d000228], dh; loope 0x191f5d; call dword ptr [eax]; 
0x00172277: add byte ptr [eax + 0x30], bh; add byte ptr [eax], al; xchg eax, esp; shr bl, cl; jmp dword ptr [esi]; 
0x0006a102: add byte ptr [eax + 0x32890000], al; pop esi; ret; 
0x001724a7: add byte ptr [eax + 0x34000032], ch; fldpi; call dword ptr [edi]; 
0x00176fa7: add byte ptr [eax + 0x3400007d], ch; or ebp, edi; call esp; 
0x00173057: add byte ptr [eax + 0x35000039], ch; add ebp, esp; call dword ptr [eax]; 
0x0019443f: add byte ptr [eax + 0x3800024d], dl; and dh, bh; call dword ptr [eax]; 
0x00173027: add byte ptr [eax + 0x39], bh; add byte ptr [eax], al; push ebp; add ebp, esp; call dword ptr [eax]; 
0x00173117: add byte ptr [eax + 0x3a], ch; add byte ptr [eax], al; mov ch, 2; in al, dx; call dword ptr [eax]; 
0x0018343f: add byte ptr [eax + 0x3b], dl; int1; jmp edx; 
0x0016faaf: add byte ptr [eax + 0x3c000008], dh; ret; 
0x00178eff: add byte ptr [eax + 0x3d], al; out dx, eax; call dword ptr [edi + 1]; 
0x0019524f: add byte ptr [eax + 0x3f00025b], ah; xor al, 0xf7; call dword ptr [eax]; 
0x00173147: add byte ptr [eax + 0x3f], cl; add byte ptr [eax], al; and al, 0; in al, dx; jmp dword ptr [ecx]; 
0x0018316f: add byte ptr [eax + 0x3f], dh; add dword ptr [eax], eax; cmp al, 0xf2; cli; jmp dword ptr [ebx + 1]; 
0x0019da9b: add byte ptr [eax + 0x40000004], cl; add eax, 0; add byte ptr [eax], al; ret 3; 
0x000b9aa7: add byte ptr [eax + 0x40], bh; ret; 
0x00179b97: add byte ptr [eax + 0x440000a9], bl; pushal; out dx, eax; call dword ptr [ebx]; 
0x00183ab7: add byte ptr [eax + 0x44000148], bh; push ebx; int1; call dword ptr [eax]; 
0x00188bb7: add byte ptr [eax + 0x44000199], bh; sbb al, 0xf4; jmp dword ptr [ebp]; 
0x00094bbd: add byte ptr [eax + 0x448b1070], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x00091737: add byte ptr [eax + 0x448b1070], cl; and al, 8; pop esi; ret; 
0x00173dff: add byte ptr [eax + 0x47], dl; add byte ptr [eax], al; leave; mov cl, 0xec; call dword ptr [eax]; 
0x00173d3f: add byte ptr [eax + 0x49000046], dl; mov dl, 0xec; call dword ptr [eax]; 
0x00191e4f: add byte ptr [eax + 0x4a000227], ah; sal esi, 1; call dword ptr [eax]; 
0x001731af: add byte ptr [eax + 0x4c00003f], dh; add esp, ebp; jmp dword ptr [ecx]; 
0x0019409f: add byte ptr [eax + 0x4c00024e], ah; adc al, 0xf7; call dword ptr [edx + 3]; 
0x0017430f: add byte ptr [eax + 0x4c], ah; add byte ptr [eax], al; mov dl, ch; in al, dx; call dword ptr [eax]; 
0x0018397f: add byte ptr [eax + 0x4c], dl; int1; jmp dword ptr [edx + 1]; 
0x001945f7: add byte ptr [eax + 0x4f], cl; add al, byte ptr [eax]; pop edx; and dh, bh; call dword ptr [eax]; 
0x0017929b: add byte ptr [eax + 0x51700000], bl; out dx, eax; jmp dword ptr [ebx]; 
0x0017929f: add byte ptr [eax + 0x51], dh; out dx, eax; jmp dword ptr [ebx]; 
0x0018b287: add byte ptr [eax + 0x52], bh; cmc; jmp esp; 
0x001891b7: add byte ptr [eax + 0x5400019f], bh; dec edi; hlt; call dword ptr [ebx + 1]; 
0x0018bba7: add byte ptr [eax + 0x540001c9], ch; xchg eax, ebx; cmc; call dword ptr [ecx]; 
0x0017463f: add byte ptr [eax + 0x54], al; add byte ptr [eax], al; pushfd; fsubr st(4); jmp dword ptr [edi]; 
0x00174967: add byte ptr [eax + 0x57], ch; add byte ptr [eax], al; in al, 0x30; in eax, dx; call dword ptr [ebx + 1]; 
0x0008dc8f: add byte ptr [eax + 0x5b5e5f17], cl; ret; 
0x00194d77: add byte ptr [eax + 0x5b], bh; add al, byte ptr [eax]; movsb byte ptr es:[edi], byte ptr [esi]; sub bh, dh; jmp dword ptr [edi]; 
0x0001706a: add byte ptr [eax + 0x5b], bl; pop esi; pop edi; pop ebp; ret; 
0x0019521f: add byte ptr [eax + 0x5b], dh; add al, byte ptr [eax]; pop edi; xor al, 0xf7; call dword ptr [eax]; 
0x000f101c: add byte ptr [eax + 0x5c8901ce], al; and al, 0xc; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00199ca7: add byte ptr [eax + 0x5d], cl; clc; call dword ptr [eax]; 
0x00174f4f: add byte ptr [eax + 0x5d], dl; add byte ptr [eax], al; pop esp; imul ebp; jmp dword ptr [ebx]; 
0x00199d77: add byte ptr [eax + 0x5e], cl; clc; jmp dword ptr [ebx]; 
0x00179b87: add byte ptr [eax + 0x60], cl; out dx, eax; call dword ptr [eax]; 
0x00195357: add byte ptr [eax + 0x61], bl; add al, byte ptr [eax]; inc esp; xor dh, bh; call ebx; 
0x001778a7: add byte ptr [eax + 0x64000086], ch; sbb edi, ebp; call dword ptr [esi]; 
0x001874a7: add byte ptr [eax + 0x64000182], ch; or dh, bl; jmp dword ptr [ebp + 2]; 
0x00188987: add byte ptr [eax + 0x64000197], cl; pop ss; hlt; jmp dword ptr [eax]; 
0x001893b7: add byte ptr [eax + 0x640001a1], bh; push edi; hlt; jmp esi; 
0x0004ccbf: add byte ptr [eax + 0x65], bl; adc eax, 0x155c6e00; add byte ptr [ebx - 0xf77d], cl; dec dword ptr [ebx - 0x1af6b]; jmp dword ptr [ebp - 0x77]; 
0x000f0ae3: add byte ptr [eax + 0x66], bh; mov ebx, 0x12; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0017433f: add byte ptr [eax + 0x6a00004c], dl; aad 0xec; call dword ptr [eax]; 
0x00195d3f: add byte ptr [eax + 0x6b], al; add al, byte ptr [eax]; mov word ptr [edi - 9], es; jmp dword ptr [esi]; 
0x000cf7ee: add byte ptr [eax + 0x6c70c], dh; add byte ptr [eax], al; add bl, ch; ret 0xb48d; 
0x000b8581: add byte ptr [eax + 0x6ca365], al; add byte ptr [eax], al; mov eax, 0xbe; int 0x80; 
0x00183f37: add byte ptr [eax + 0x6e], bl; int1; jmp dword ptr [edi]; 
0x0018316b: add byte ptr [eax + 0x70000000], al; aas; add dword ptr [eax], eax; cmp al, 0xf2; cli; jmp dword ptr [ebx + 1]; 
0x000bafbf: add byte ptr [eax + 0x74000178], al; or al, byte ptr [ebx - 0x49f0fd40]; or byte ptr [ecx + ecx*8 - 0x3fce2e8b], al; pop esi; ret; 
0x0003f79f: add byte ptr [eax + 0x742fff78], al; ret 0xe883; 
0x001472a1: add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x00147290: add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x0014727f: add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x00007137: add byte ptr [eax + 0x7a], ah; or al, byte ptr [eax]; adc eax, 0x22000000; add byte ptr [eax + eax], cl; ret; 
0x0018dc7f: add byte ptr [eax + 0x7c0001ea], al; sar bl, 1; jmp dword ptr [edx]; 
0x0019b69f: add byte ptr [eax + 0x7c0002c4], ah; ret; 
0x00176f57: add byte ptr [eax + 0x7d], bl; add byte ptr [eax], al; aam 9; out dx, eax; call esp; 
0x0003f859: add byte ptr [eax + 0x7e], bh; call dword ptr gs:[0x10]; 
0x000b8588: add byte ptr [eax + 0xbe], bh; int 0x80; 
0x0018ae9f: add byte ptr [eax + 0xc0001bc], ah; inc eax; cmc; jmp ecx; 
0x0019b08f: add byte ptr [eax + 0xc0002be], dl; mov dh, 0xf8; jmp edx; 
0x001491a5: add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x00187524: add byte ptr [eax + 0xe], dh; or byte ptr [edx + 9], al; add eax, dword ptr [edx]; push esi; ret; 
0x00149138: add byte ptr [eax + 0xf00067a], al; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0014919b: add byte ptr [eax + 0xf000b7a], al; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x000fc1e4: add byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x0002c25d: add byte ptr [eax + 0xf3d017a], al; test dword ptr [ecx - 0x7c000003], esp; ret 0x8902; 
0x000e3c36: add byte ptr [eax + 1], bh; add esp, 0x1c; ret; 
0x000b85d3: add byte ptr [eax + 1], bh; int 0x80; 
0x00022f8f: add byte ptr [eax + 1], bh; ret; 
0x001769df: add byte ptr [eax + 2], al; out dx, eax; call dword ptr [ecx]; 
0x00129a67: add byte ptr [eax + 2], bh; add esp, 0xc; ret; 
0x000a740f: add byte ptr [eax + 2], bh; ret; 
0x0019e50b: add byte ptr [eax + 3], bh; add byte ptr [eax], al; fld qword ptr [ebx]; add byte ptr [eax], al; ret; 
0x000a741f: add byte ptr [eax + 3], bh; ret; 
0x001490fc: add byte ptr [eax + 4], bh; pop edi; ret; 
0x000a742f: add byte ptr [eax + 4], bh; ret; 
0x0017326f: add byte ptr [eax + 4], dl; in al, dx; call dword ptr [edi + 1]; 
0x0019da9f: add byte ptr [eax + 5], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret 3; 
0x000a743f: add byte ptr [eax + 5], bh; ret; 
0x0017561f: add byte ptr [eax + 5], dl; out dx, al; jmp dword ptr [ebx]; 
0x000a744f: add byte ptr [eax + 6], bh; ret; 
0x000fa6b9: add byte ptr [eax + 7], bh; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000a745f: add byte ptr [eax + 7], bh; ret; 
0x00129a57: add byte ptr [eax + 8], bh; add esp, 0xc; ret; 
0x001734f7: add byte ptr [eax + 8], bh; in al, dx; call dword ptr [eax]; 
0x00149155: add byte ptr [eax + 8], bh; pop edi; ret; 
0x00182887: add byte ptr [eax + eax + 0x368c0000], ch; add dword ptr [eax], eax; and byte ptr [eax], ch; int1; jmp esi; 
0x0019824b: add byte ptr [eax + eax - 8], dh; call dword ptr [esi]; 
0x00183273: add byte ptr [eax + eax*2 + 1], dh; add byte ptr [eax], cl; hlt; cli; jmp dword ptr [ebx]; 
0x0016d797: add byte ptr [eax + eax*2], al; cli; jmp dword ptr [eax]; 
0x0017326b: add byte ptr [eax + eax*2], ch; add byte ptr [eax + 4], dl; in al, dx; call dword ptr [edi + 1]; 
0x0018aea3: add byte ptr [eax + eax*2], cl; cmc; jmp ecx; 
0x0016a2a7: add byte ptr [eax + eax*4 - 0xf], ah; jmp esp; 
0x0016a29f: add byte ptr [eax + eax*4], dl; int1; inc esp; arpl word ptr [ecx], ax; add byte ptr [eax + eax*4 - 0xf], ah; jmp esp; 
0x0018b283: add byte ptr [eax + eax*8 + 0x52780001], al; cmc; jmp esp; 
0x0017b743: add byte ptr [eax + eax*8 - 0xc0f0000], dl; out dx, eax; call dword ptr [eax]; 
0x0017b6b3: add byte ptr [eax + eax*8], al; add byte ptr [eax], al; push ebp; hlt; out dx, eax; call dword ptr [eax]; 
0x00115654: add byte ptr [eax + eax], 0; mov edi, dword ptr [esp + 0x484]; mov ebp, dword ptr [esp + 0x488]; add esp, 0x48c; ret; 
0x0019880f: add byte ptr [eax + eax], ah; add byte ptr [eax], al; adc al, 0x96; add al, byte ptr [eax]; or byte ptr [eax + edi*8], bl; jmp esp; 
0x0018b5ef: add byte ptr [eax + eax], ah; add byte ptr [eax], al; hlt; ret; 
0x00185f9b: add byte ptr [eax + eax], ah; add byte ptr [eax], al; mov al, byte ptr [0x2c00016d]; fcompi st(2); call dword ptr [edi]; 
0x0018389b: add byte ptr [eax + eax], ah; add byte ptr [eax], al; mov al, byte ptr [0xac000146]; dec ecx; int1; call dword ptr [ebx + 1]; 
0x0018eeb3: add byte ptr [eax + eax], ah; add byte ptr [eax], al; mov eax, 0xd40001fc; and esi, esi; jmp dword ptr [esi]; 
0x000e3c32: add byte ptr [eax + eax], ah; add byte ptr [eax], al; mov eax, 1; add esp, 0x1c; ret; 
0x0018b58b: add byte ptr [eax + eax], ah; add byte ptr [eax], al; nop; ret; 
0x00199f03: add byte ptr [eax + eax], ah; add byte ptr [eax], al; or byte ptr [ebp + 0x61c40002], ch; clc; call dword ptr [edi]; 
0x0018c063: add byte ptr [eax + eax], ah; add byte ptr [eax], al; push 0x840001ce; movsd dword ptr es:[edi], dword ptr [esi]; cmc; jmp esp; 
0x0018ad4f: add byte ptr [eax + eax], ah; add byte ptr [eax], al; push esp; mov ebx, 0x3c980001; cmc; jmp dword ptr [edx]; 
0x00176fcb: add byte ptr [eax + eax], ah; add byte ptr [eax], al; sar byte ptr [ebp], 1; add ah, ch; or ebp, edi; jmp dword ptr [ebx]; 
0x0018a47f: add byte ptr [eax + eax], ah; add byte ptr [eax], al; test byte ptr [edx - 0x8d7ffff], dh; hlt; call dword ptr [esi]; 
0x0018be47: add byte ptr [eax + eax], ah; add byte ptr [esp + ecx*8 + 1], cl; add byte ptr [eax - 0x60], dh; cmc; jmp dword ptr [edx]; 
0x0017314b: add byte ptr [eax + eax], ah; in al, dx; jmp dword ptr [ecx]; 
0x0019b69b: add byte ptr [eax + eax], al; add byte ptr [eax + 0x7c0002c4], ah; ret; 
0x00032d8f: add byte ptr [eax + eax], al; add byte ptr [eax], al; xor eax, eax; add esp, 0x18; pop ebx; ret; 
0x001242f2: add byte ptr [eax + eax], al; add byte ptr [ebp - 0x77c1bb3], cl; dec dword ptr [edi]; inc esp; ret 0x508d; 
0x001075cb: add byte ptr [eax + eax], al; add byte ptr [ecx + 0x39e82404], cl; mov edi, edi; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x0010872b: add byte ptr [eax + eax], al; add byte ptr [ecx - 0x2617dbfc], cl; jns 0x108735; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x000f3e0b: add byte ptr [eax + eax], al; add byte ptr [ecx - 0x617dbfc], cl; ret 0; 
0x000c7730: add byte ptr [eax + eax], al; add byte ptr [ecx - 0x74725bb3], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xfffb; 
0x0010f57b: add byte ptr [eax + eax], al; add byte ptr [ecx - 0x7617dbfc], cl; or edi, edi; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x000e1a15: add byte ptr [eax + eax], al; add byte ptr [edi], cl; inc edx; ret 0x4401; 
0x0002aca2: add byte ptr [eax + eax], al; add byte ptr [edi], cl; inc edx; ret 0xc801; 
0x0017c8af: add byte ptr [eax + eax], al; add byte ptr [esi + edx*8 - 0x20f80000], dh; out dx, eax; jmp dword ptr [esi]; 
0x00168007: add byte ptr [eax + eax], al; in al, dx; call dword ptr [esi + edx*4 + 0xab40000]; in al, dx; call esp; 
0x00190ee3: add byte ptr [eax + eax], bh; add byte ptr [eax], al; call 0x4191109; cdq; idiv bh; ret; 
0x0017dee3: add byte ptr [eax + eax], bh; add byte ptr [eax], al; call 0x8417dfd9; sbb al, 0xf0; jmp dword ptr [edx]; 
0x0018fa43: add byte ptr [eax + eax], bh; add byte ptr [eax], al; dec eax; or byte ptr [edx], al; add byte ptr [ebp + eax*2 - 0xa], dh; call dword ptr [ebx + 1]; 
0x00188c87: add byte ptr [eax + eax], bh; add byte ptr [eax], al; mov word ptr [edx + 0x1d100001], ds; hlt; jmp dword ptr [ecx + 1]; 
0x00191a63: add byte ptr [eax + eax], bh; add byte ptr [eax], al; push 0x74000228; mov bh, 0xf6; jmp dword ptr [edi]; 
0x0018da4f: add byte ptr [eax + eax], bh; add byte ptr [eax], al; push esp; call 0xf8b0da5b; cmc; jmp esi; 
0x0017761b: add byte ptr [eax + eax], bl; add byte ptr [eax], al; and byte ptr [eax + eax - 0x10eae400], al; jmp dword ptr [eax]; 
0x00199d37: add byte ptr [eax + eax], bl; add byte ptr [eax], al; cmp al, 0xab; add al, byte ptr [eax]; and byte ptr [esi - 8], bl; jmp dword ptr [ebx]; 
0x00179b93: add byte ptr [eax + eax], bl; add byte ptr [eax], al; cwde; test eax, 0x60440000; out dx, eax; call dword ptr [ebx]; 
0x0017aad7: add byte ptr [eax + eax], bl; add byte ptr [eax], al; fdivr qword ptr [eax - 0x74600000]; out dx, eax; call dword ptr [edx]; 
0x001991af: add byte ptr [eax + eax], bl; add byte ptr [eax], al; mov ah, 0x9f; add al, byte ptr [eax]; cmp byte ptr [eax - 8], al; call dword ptr [ecx]; 
0x00183ab3: add byte ptr [eax + eax], bl; add byte ptr [eax], al; mov eax, 0x44000148; push ebx; int1; call dword ptr [eax]; 
0x00172007: add byte ptr [eax + eax], bl; add byte ptr [eax], al; or al, 0x2e; add byte ptr [eax], al; ror bl, 0xeb; jmp dword ptr [eax]; 
0x0019b1cb: add byte ptr [eax + eax], bl; add byte ptr [eax], al; sar byte ptr [edi - 0x4413fffe], 1; clc; jmp dword ptr [edi]; 
0x0018dc7b: add byte ptr [eax + eax], bl; add byte ptr [eax], al; sub dl, 1; add byte ptr [eax + edx*8 - 5], bh; jmp dword ptr [edx]; 
0x00177313: add byte ptr [eax + eax], bl; add byte ptr [edx + ebp], bh; add byte ptr [edi + ecx - 0x11], ah; call dword ptr [esi + 3]; 
0x0017cb0f: add byte ptr [eax + eax], ch; add byte ptr [eax], al; aam 0; add al, bh; out dx, eax; call dword ptr [eax]; 
0x00195a7f: add byte ptr [eax + eax], ch; add byte ptr [eax], al; aam 0x63; add al, byte ptr [eax]; sbb dword ptr [edx - 9], ecx; call dword ptr [eax]; 
0x0017bbbf: add byte ptr [eax + eax], ch; add byte ptr [eax], al; adc al, 0xc5; add byte ptr [eax], al; sal eax, -0x11; call dword ptr [eax]; 
0x0017a2bb: add byte ptr [eax + eax], ch; add byte ptr [eax], al; adc byte ptr [eax + eax - 0x106c8200], ch; call dword ptr [eax]; 
0x00179fbb: add byte ptr [eax + eax], ch; add byte ptr [eax], al; adc byte ptr [ecx - 0x6a5e0000], ch; out dx, eax; call dword ptr [eax]; 
0x00176917: add byte ptr [eax + eax], ch; add byte ptr [eax], al; and byte ptr [eax], 0; add al, al; add edi, ebp; call dword ptr [ebx]; 
0x0017a1cb: add byte ptr [eax + eax], ch; add byte ptr [eax], al; and byte ptr [ebx - 0x6bd60000], ch; out dx, eax; call dword ptr [eax]; 
0x0018ffcb: add byte ptr [eax + eax], ch; add byte ptr [eax], al; and byte ptr [ecx], cl; add al, byte ptr [eax]; sbb dword ptr [ebp - 0xa], edx; call dword ptr [eax]; 
0x00173dcb: add byte ptr [eax + eax], ch; add byte ptr [eax], al; and byte ptr [edi], al; add cl, ch; mov cl, 0xec; call dword ptr [eax]; 
0x001944cb: add byte ptr [eax + eax], ch; add byte ptr [eax], al; and byte ptr [esi + 2], cl; add al, bl; and edi, esi; call dword ptr [eax]; 
0x0019b4cb: add byte ptr [eax + eax], ch; add byte ptr [eax], al; and byte ptr [esi - 0x2597fffe], bh; clc; call dword ptr [eax]; 
0x0019ae93: add byte ptr [eax + eax], ch; add byte ptr [eax], al; call 0xb719b154; mov ah, 0xf8; call dword ptr [eax]; 
0x0019b52b: add byte ptr [eax + eax], ch; add byte ptr [eax], al; cmp byte ptr [esi - 0x25d7fffe], 0xf8; call dword ptr [eax]; 
0x0018f943: add byte ptr [eax + eax], ch; add byte ptr [eax], al; cwde; add al, byte ptr [edx]; add byte ptr [esi + eax*2 - 0xa], cl; call dword ptr [eax]; 
0x0018fa83: add byte ptr [eax + eax], ch; add byte ptr [eax], al; fadd dword ptr [ebx]; add al, byte ptr [eax]; xor dword ptr [eax - 0xa], ecx; call dword ptr [eax]; 
0x0017adef: add byte ptr [eax + eax], ch; add byte ptr [eax], al; hlt; mov ebx, 0xc080000; sti; jmp dword ptr [ebx]; 
0x0017b19f: add byte ptr [eax + eax], ch; add byte ptr [eax], al; hlt; mov edx, 0xf7cd0000; out dx, eax; call dword ptr [eax]; 
0x0017ba9f: add byte ptr [eax + eax], ch; add byte ptr [eax], al; hlt; ret; 
0x00192cfb: add byte ptr [eax + eax], ch; add byte ptr [eax], al; in al, 1; add byte ptr [ecx + esi*8 - 0xa], bh; call dword ptr [esi]; 
0x0017b2ef: add byte ptr [eax + eax], ch; add byte ptr [eax], al; inc esp; mov esp, 0xf6ed0000; out dx, eax; call dword ptr [eax]; 
0x0017b8ef: add byte ptr [eax + eax], ch; add byte ptr [eax], al; inc esp; ret 0; 
0x00175d57: add byte ptr [eax + eax], ch; add byte ptr [eax], al; lodsb al, byte ptr [esi]; add byte ptr [eax], al; ret; 
0x0017745f: add byte ptr [eax + eax], ch; add byte ptr [eax], al; mov ah, 0x7d; add byte ptr [eax], al; ret 0xef13; 
0x0019524b: add byte ptr [eax + eax], ch; add byte ptr [eax], al; mov al, byte ptr [0x3f00025b]; xor al, 0xf7; call dword ptr [eax]; 
0x00191e4b: add byte ptr [eax + eax], ch; add byte ptr [eax], al; mov al, byte ptr [0x4a000227]; sal esi, 1; call dword ptr [eax]; 
0x0017bd0f: add byte ptr [eax + eax], ch; add byte ptr [eax], al; mov byte ptr fs:[eax], 0; shr edi, 1; out dx, eax; call dword ptr [eax]; 
0x0017b40f: add byte ptr [eax + eax], ch; add byte ptr [eax], al; mov ebp, 0xf62d0000; out dx, eax; call dword ptr [eax]; 
0x00172d67: add byte ptr [eax + eax], ch; add byte ptr [eax], al; mov esp, 0x7a000036; add ah, ch; call dword ptr [eax]; 
0x00188537: add byte ptr [eax + eax], ch; add byte ptr [eax], al; mov word ptr [esi + 0x1a850001], cs; hlt; call dword ptr [eax]; 
0x0017b34f: add byte ptr [eax + eax], ch; add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; mov esp, 0xf6ad0000; out dx, eax; call dword ptr [eax]; 
0x0017b94f: add byte ptr [eax + eax], ch; add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; ret 0; 
0x0019b43b: add byte ptr [eax + eax], ch; add byte ptr [eax], al; nop; mov ebp, 0xdac80002; clc; call dword ptr [eax]; 
0x0017923b: add byte ptr [eax + eax], ch; add byte ptr [eax], al; nop; wait; add byte ptr [eax], al; ret; 
0x00194d13: add byte ptr [eax + eax], ch; add byte ptr [eax], al; push 0x77000256; sub esi, edi; call dword ptr [eax]; 
0x00173113: add byte ptr [eax + eax], ch; add byte ptr [eax], al; push 0xb500003a; add ch, ah; call dword ptr [eax]; 
0x0018aa4b: add byte ptr [eax + eax], ch; add byte ptr [eax], al; push eax; mov eax, 0x351c0001; cmc; call dword ptr [ecx]; 
0x0019b4fb: add byte ptr [eax + eax], ch; add byte ptr [eax], al; push eax; mov esi, 0xda480002; clc; call dword ptr [eax]; 
0x0019a8ff: add byte ptr [eax + eax], ch; add byte ptr [eax], al; push esp; mov dl, 2; add byte ptr [edx - 8], dh; call dword ptr [eax]; 
0x0017b1ff: add byte ptr [eax + eax], ch; add byte ptr [eax], al; push esp; mov ebx, 0xf78d0000; out dx, eax; call dword ptr [eax]; 
0x0017b4ff: add byte ptr [eax + eax], ch; add byte ptr [eax], al; push esp; mov esi, 0xf5810000; out dx, eax; call dword ptr [eax]; 
0x0019b40b: add byte ptr [eax + eax], ch; add byte ptr [eax], al; pushal; mov ebp, 0xdae80002; clc; call dword ptr [eax]; 
0x0019b46b: add byte ptr [eax + eax], ch; add byte ptr [eax], al; sar byte ptr [ebp - 0x2557fffe], 0xf8; call dword ptr [eax]; 
0x00175ac3: add byte ptr [eax + eax], ch; add byte ptr [eax], al; sbb byte ptr [eax + eax], ah; or bl, ch; out dx, al; call dword ptr [eax]; 
0x0019a413: add byte ptr [eax + eax], ch; add byte ptr [eax], al; sbb byte ptr [edx - 0x742bfffe], dh; clc; jmp dword ptr [ebx]; 
0x001954c3: add byte ptr [eax + eax], ch; add byte ptr [eax], al; sbb byte ptr [esi + 2], bl; add byte ptr [ebp + esi - 9], cl; call dword ptr [eax]; 
0x0017a07b: add byte ptr [eax + eax], ch; add byte ptr [eax], al; shr byte ptr [ecx - 0x6ae60000], 1; out dx, eax; call dword ptr [eax]; 
0x0017a22b: add byte ptr [eax + eax], ch; add byte ptr [eax], al; sub byte ptr [ebx - 0x6c1a0000], 0xef; call dword ptr [eax]; 
0x001888d3: add byte ptr [eax + eax], ch; add byte ptr [eax], al; sub byte ptr [edx - 0x401ffff], dl; hlt; call dword ptr [eax]; 
0x0017af2f: add byte ptr [eax + eax], ch; add byte ptr [eax], al; test byte ptr [eax - 0x6520000], bh; out dx, eax; call dword ptr [eax]; 
0x0017b22f: add byte ptr [eax + eax], ch; add byte ptr [eax], al; test byte ptr [ebx - 0x8930000], bh; out dx, eax; call dword ptr [eax]; 
0x0019a92f: add byte ptr [eax + eax], ch; add byte ptr [eax], al; test byte ptr [edx - 0x5dabfffe], dh; clc; call dword ptr [eax]; 
0x0017b52f: add byte ptr [eax + eax], ch; add byte ptr [eax], al; test byte ptr [esi - 0xa9f0000], bh; out dx, eax; call dword ptr [eax]; 
0x0017ba3f: add byte ptr [eax + eax], ch; add byte ptr [eax], al; xchg eax, esp; ret; 
0x00077338: add byte ptr [eax + eax], cl; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x0000af71: add byte ptr [eax + eax], cl; fsub dword ptr [eax + eax]; add byte ptr [eax], dl; ret; 
0x00007961: add byte ptr [eax + eax], cl; mov cl, byte ptr [ebx]; add byte ptr [eax - 8], ah; adc dword ptr [eax], eax; ret; 
0x00009551: add byte ptr [eax + eax], cl; mov eax, dword ptr [0xd0000010]; ret 7; 
0x000081a1: add byte ptr [eax + eax], cl; pop ss; sub dword ptr [eax], eax; add byte ptr [eax], dl; ret; 
0x0000a4d1: add byte ptr [eax + eax], cl; push cs; pop ecx; add byte ptr [eax], al; nop; ret; 
0x00009f81: add byte ptr [eax + eax], cl; ret 0x11; 
0x00009441: add byte ptr [eax + eax], cl; ret 0x38; 
0x00004231: add byte ptr [eax + eax], cl; ret 0x52; 
0x0000c701: add byte ptr [eax + eax], cl; ret 0x59; 
0x00007aa1: add byte ptr [eax + eax], cl; ret 0xc; 
0x00006101: add byte ptr [eax + eax], cl; ret 3; 
0x0000b5a1: add byte ptr [eax + eax], cl; ret 8; 
0x00005841: add byte ptr [eax + eax], cl; ret; 
0x0000cf11: add byte ptr [eax + eax], cl; xlatb; and al, 0; add byte ptr [eax], dl; ret; 
0x0000ccd1: add byte ptr [eax + eax], cl; xor byte ptr [ebx], bl; add byte ptr [eax], al; nop; call dword ptr [eax]; 
0x00004ff1: add byte ptr [eax + eax], cl; xor dword ptr [eax + eax], esi; add al, al; movsb byte ptr es:[edi], byte ptr [esi]; adc al, byte ptr [eax]; ret 2; 
0x0018e243: add byte ptr [eax + eax], dh; add byte ptr [eax], al; dec eax; lock add dword ptr [eax], eax; test byte ptr [esi + esi*8], cl; call dword ptr [edx]; 
0x00188a63: add byte ptr [eax + eax], dh; add byte ptr [eax], al; push 0xf4000198; sbb esp, esi; call eax; 
0x001874a3: add byte ptr [eax + eax], dl; add byte ptr [eax + 0x64000182], ch; or dh, bl; jmp dword ptr [ebp + 2]; 
0x0017d19b: add byte ptr [eax + eax], dl; add byte ptr [eax - 0x33ffff21], ah; clc; out dx, eax; call dword ptr [ecx + 1]; 
0x0019649b: add byte ptr [eax + eax], dl; add byte ptr [eax - 0x73fffd8e], ah; xchg edi, esi; call edi; 
0x0019951b: add byte ptr [eax + eax], dl; add byte ptr [eax], al; and byte ptr [ebx + 0x4ffc0002], ah; clc; jmp dword ptr [edx]; 
0x0019931b: add byte ptr [eax + eax], dl; add byte ptr [eax], al; and byte ptr [ecx + 0x446c0002], ah; clc; jmp dword ptr [eax]; 
0x00170f37: add byte ptr [eax + eax], dl; add byte ptr [eax], al; cmp al, 0x1d; add byte ptr [eax], al; add byte ptr [eax - 0x15], ch; jmp dword ptr [ebx]; 
0x00199333: add byte ptr [eax + eax], dl; add byte ptr [eax], al; cmp byte ptr [ecx + 0x44740002], ah; clc; jmp dword ptr [edi]; 
0x00175ed7: add byte ptr [eax + eax], dl; add byte ptr [eax], al; fsubr qword ptr [eax + eax]; sal al, 0xee; jmp dword ptr [edx]; 
0x001921b7: add byte ptr [eax + eax], dl; add byte ptr [eax], al; mov esp, 0x8000022f; fdecstp; call dword ptr [ebp]; 
0x0018b003: add byte ptr [eax + eax], dl; add byte ptr [eax], al; or byte ptr [esi + 0x46640001], bh; cmc; jmp dword ptr [ebx]; 
0x0019912b: add byte ptr [eax + eax], dl; add byte ptr [eax], al; xor byte ptr [edi + 0x3ebc0002], bl; clc; jmp dword ptr [eax]; 
0x0019940b: add byte ptr [eax + eax], dl; add byte ptr [eax], dl; mov byte ptr [0x4abc0002], al; clc; call edx; 
0x00198777: add byte ptr [eax + eax], dl; add byte ptr [ebp + edx*4 + 2], bh; add byte ptr [eax + 0x19], ah; clc; call edx; 
0x001986b7: add byte ptr [eax + eax], dl; add byte ptr [esp + edx*4 + 0x15700002], bh; clc; call dword ptr [esi]; 
0x0016ae77: add byte ptr [eax + ebp*8], ah; hlt; jmp dword ptr [eax - 0xf]; 
0x0018da03: add byte ptr [eax + ebp*8], al; add dword ptr [eax], eax; clc; div ebp; call dword ptr [esi]; 
0x0016eb8f: add byte ptr [eax + ebp], ah; cld; call esp; 
0x00167b4f: add byte ptr [eax + ebx - 0x15], dl; call dword ptr [eax]; 
0x0016b0b7: add byte ptr [eax + ebx - 0xb], dh; call eax; 
0x00184983: add byte ptr [eax + ebx - 0xe], bl; call dword ptr [ecx]; 
0x0016c5e7: add byte ptr [eax + ebx*4], dh; clc; call dword ptr [eax]; 
0x0018cf4b: add byte ptr [eax + ebx*8 - 0x211effff], bl; cmc; call dword ptr [eax]; 
0x0002aab8: add byte ptr [eax + ecx - 0x77], dh; ret 0xc8d; 
0x0016b637: add byte ptr [eax + ecx - 9], dh; dec eax; and eax, dword ptr [edx]; add ah, dl; or bh, dh; jmp eax; 
0x0016e48f: add byte ptr [eax + ecx*8 + 0x2cbcfffb], ah; add eax, dword ptr [eax]; adc al, 0xc9; sti; jmp eax; 
0x00192aa3: add byte ptr [eax + edi - 0x11f7fffe], ah; idiv bh; ret 0; 
0x0016c377: add byte ptr [eax + edi*2 + 0x68d8fff8], dh; add al, byte ptr [eax]; adc al, 0x79; clc; call dword ptr [eax]; 
0x00186f03: add byte ptr [eax + edi*2 + 1], dl; add byte ptr [eax], ah; add bl, dh; call dword ptr [eax]; 
0x0016d867: add byte ptr [eax + edi*2 - 6], dh; ljmp ptr [ebx + ebp*8 + 0x79240002]; cli; call eax; 
0x00186a3b: add byte ptr [eax + edi*2], bh; add dword ptr [eax], eax; sal dl, 0xf2; call ecx; 
0x0019aab3: add byte ptr [eax + edi*4 - 0x60a7fffe], dh; clc; jmp dword ptr [edi]; 
0x0017af33: add byte ptr [eax + edi*4 - 0x6520000], al; out dx, eax; call dword ptr [eax]; 
0x001685ff: add byte ptr [eax + edi*4], dh; in al, dx; jmp eax; 
0x0017d03b: add byte ptr [eax + edi*8 - 0x11], dl; call dword ptr [edx]; 
0x0019311b: add byte ptr [eax + edi*8 - 0xa], dl; jmp dword ptr [ecx]; 
0x00129bed: add byte ptr [eax + edi*8 - 1], ch; jmp ecx; 
0x0016d767: add byte ptr [eax + edi], dh; cli; jmp esp; 
0x0016919f: add byte ptr [eax + edx - 0x10], dh; call dword ptr [eax - 5]; 
0x0016c56f: add byte ptr [eax + edx*4 - 8], dh; call dword ptr [eax + 0x71]; 
0x0017abe3: add byte ptr [eax + edx*4], ch; out dx, eax; call dword ptr [edx]; 
0x0018dc83: add byte ptr [eax + edx*8 - 5], bh; jmp dword ptr [edx]; 
0x0016ee2f: add byte ptr [eax + esi*2 - 4], dh; call dword ptr [eax - 0x55]; 
0x0016c2bf: add byte ptr [eax + esi*2 - 8], ah; call dword ptr [eax]; 
0x0016830f: add byte ptr [eax + esi*2], al; in al, dx; jmp eax; 
0x0016e1a7: add byte ptr [eax + esi*2], dh; sti; lcall ptr [eax - 0x5bfffce4]; jno 0x16e1ae; call eax; 
0x0016ee17: add byte ptr [eax + esi*2], dl; cld; jmp dword ptr [eax - 0x56]; 
0x0016a3b7: add byte ptr [eax + esi*4 - 0xf], dh; call esp; 
0x0017c33b: add byte ptr [eax + esi*4], dl; out dx, eax; jmp dword ptr [eax + 2]; 
0x0018a243: add byte ptr [eax + esi*8], ch; hlt; call dword ptr [ebx]; 
0x00016ea7: add byte ptr [eax + esi], cl; sbb al, byte ptr [eax]; sub al, byte ptr [eax]; add byte ptr [eax], al; push dword ptr [ebx + 4]; jmp dword ptr [ebx + 8]; 
0x00182213: add byte ptr [eax + esi], dl; add dword ptr [eax], eax; cwde; and cl, dh; jmp dword ptr [ebx]; 
0x0016ebf7: add byte ptr [eax + esi], dl; cld; jmp dword ptr [eax + 9]; 
0x0018e247: add byte ptr [eax - 0x10], cl; add dword ptr [eax], eax; test byte ptr [esi + esi*8], cl; call dword ptr [edx]; 
0x00179b9b: add byte ptr [eax - 0x11], al; call dword ptr [ebx]; 
0x0017cd37: add byte ptr [eax - 0x11], bh; out dx, eax; jmp dword ptr [edx + 1]; 
0x0019289f: add byte ptr [eax - 0x13fffdca], ah; out 0xf6, al; call dword ptr [esi + 5]; 
0x00189eaf: add byte ptr [eax - 0x13fffe54], dh; in al, 0xf4; call dword ptr [edx]; 
0x00170f40: add byte ptr [eax - 0x15], ch; jmp dword ptr [ebx]; 
0x0018a0c7: add byte ptr [eax - 0x17], bh; hlt; call dword ptr [eax]; 
0x0018a0ef: add byte ptr [eax - 0x17], dh; hlt; call dword ptr [eax]; 
0x0018a09f: add byte ptr [eax - 0x17], dl; hlt; call dword ptr [ecx]; 
0x00147239: add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x0000b127: add byte ptr [eax - 0x18], dh; add eax, dword ptr [eax]; ret; 
0x0017a22f: add byte ptr [eax - 0x19ffff55], al; xchg eax, ebx; out dx, eax; call dword ptr [eax]; 
0x00189f57: add byte ptr [eax - 0x1a], ch; hlt; jmp dword ptr [esi]; 
0x000dea18: add byte ptr [eax - 0x20787f32], al; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0019bca7: add byte ptr [eax - 0x20], ch; clc; jmp dword ptr [ebx]; 
0x0017cc07: add byte ptr [eax - 0x21], cl; cld; jmp dword ptr [edx]; 
0x0018d1f7: add byte ptr [eax - 0x22], bh; cmc; jmp dword ptr [ecx]; 
0x0018d04f: add byte ptr [eax - 0x22], dl; add dword ptr [eax], eax; cmp al, 0xd4; cmc; jmp dword ptr [eax]; 
0x0017cf3f: add byte ptr [eax - 0x23], al; add byte ptr [eax], al; insb byte ptr es:[edi], dx; hlt; out dx, eax; call dword ptr [edx]; 
0x00168e27: add byte ptr [eax - 0x25], cl; out dx, eax; jmp eax; 
0x0018cc67: add byte ptr [eax - 0x26], ch; add dword ptr [eax], eax; mov ah, 0xcb; cmc; call dword ptr [ebx]; 
0x0019b4d3: add byte ptr [eax - 0x26], ch; clc; call dword ptr [eax]; 
0x0019b503: add byte ptr [eax - 0x26], cl; clc; call dword ptr [eax]; 
0x0008b512: add byte ptr [eax - 0x277cfec8], al; lcall ptr [edi + 0x5b]; ret; 
0x0014724a: add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x00168de7: add byte ptr [eax - 0x28], bh; out dx, eax; jmp dword ptr [eax - 0x1b]; 
0x0017c74f: add byte ptr [eax - 0x2b], dl; add byte ptr [eax], al; sbb al, 0xd4; out dx, eax; call dword ptr [edi + 2]; 
0x0018eeb7: add byte ptr [eax - 0x2bfffe04], bh; and esi, esi; jmp dword ptr [esi]; 
0x0018a3a7: add byte ptr [eax - 0x2bfffe4f], ch; hlt; jmp dword ptr [ebx]; 
0x001734a7: add byte ptr [eax - 0x2bffffbe], ch; pop es; in al, dx; call dword ptr [edi]; 
0x001722a7: add byte ptr [eax - 0x2bffffd0], ch; shr bl, cl; call dword ptr [edx]; 
0x0018cf1f: add byte ptr [eax - 0x2c], ah; cmc; call edi; 
0x00189c1f: add byte ptr [eax - 0x2c], dl; hlt; call dword ptr [edx]; 
0x0017c45f: add byte ptr [eax - 0x2e], ah; add byte ptr [eax], al; cmp al, 0xba; out dx, eax; jmp dword ptr [ebx]; 
0x0017c36f: add byte ptr [eax - 0x2f], dh; add byte ptr [eax], al; cmp al, 0xb2; out dx, eax; jmp dword ptr [edi]; 
0x0018c47f: add byte ptr [eax - 0x33fffe2e], al; mov bl, 0xf5; call dword ptr [ebx]; 
0x0017d19f: add byte ptr [eax - 0x33ffff21], ah; clc; out dx, eax; call dword ptr [ecx + 1]; 
0x0014725b: add byte ptr [eax - 0x37af0c0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x00184387: add byte ptr [eax - 0x3bfffeaf], cl; hlt; int1; jmp dword ptr [edi]; 
0x0014763e: add byte ptr [eax - 0x3fcea1a5], dl; pop edi; ret; 
0x0017a88f: add byte ptr [eax - 0x3ffff4a], dl; test edi, ebp; jmp dword ptr [eax]; 
0x0017691b: add byte ptr [eax - 0x3fffffe0], al; add edi, ebp; call dword ptr [ebx]; 
0x0018c9b7: add byte ptr [eax - 0x40], ch; cmc; jmp dword ptr [esi]; 
0x0019b26f: add byte ptr [eax - 0x40], dh; add al, byte ptr [eax]; fdiv st(6), st(0); cli; call dword ptr [ebx + 1]; 
0x001498c9: add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x0018b147: add byte ptr [eax - 0x41], cl; add dword ptr [eax], eax; dec edi; cmc; call dword ptr [ebx]; 
0x00009f77: add byte ptr [eax - 0x42], dh; str word ptr [ecx]; add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; ret 0x11; 
0x0017c48f: add byte ptr [eax - 0x43], al; out dx, eax; jmp dword ptr [ebx]; 
0x0019503f: add byte ptr [eax - 0x43fffda7], dl; xor bh, dh; call dword ptr [eax]; 
0x0017d99f: add byte ptr [eax - 0x43ffff19], ah; or eax, esi; call dword ptr [edx]; 
0x0019ac57: add byte ptr [eax - 0x46], bl; add al, byte ptr [eax]; and al, 0xa1; clc; jmp dword ptr [edi]; 
0x0017f8cf: add byte ptr [eax - 0x47], ah; sti; jmp dword ptr [ecx]; 
0x0017aa47: add byte ptr [eax - 0x48], cl; add byte ptr [eax], al; in al, 0x89; out dx, eax; call dword ptr [edx]; 
0x0018aa4f: add byte ptr [eax - 0x48], dl; add dword ptr [eax], eax; sbb al, 0x35; cmc; call dword ptr [ecx]; 
0x0018c5ff: add byte ptr [eax - 0x48], dl; cmc; call dword ptr [edx]; 
0x00044630: add byte ptr [eax - 0x4ab43], al; call dword ptr [ebx + 0xf]; 
0x00195687: add byte ptr [eax - 0x4bfffd9c], cl; xor esi, edi; jmp dword ptr [edi]; 
0x001791a7: add byte ptr [eax - 0x4bffff61], ch; push eax; out dx, eax; call dword ptr [ecx]; 
0x001745b7: add byte ptr [eax - 0x4bffffad], bh; xlatb; in al, dx; jmp dword ptr [edx]; 
0x0017a447: add byte ptr [eax - 0x4e], cl; add byte ptr [eax], al; xor al, 0x7a; out dx, eax; jmp dword ptr [esi]; 
0x000bafd7: add byte ptr [eax - 0x508ad307], al; pop esi; nop; ret; 
0x0018a23f: add byte ptr [eax - 0x50], al; add dword ptr [eax], eax; sub al, 0xf0; hlt; call dword ptr [ebx]; 
0x00043b95: add byte ptr [eax - 0x53843], al; call dword ptr [ebx + 0xf]; 
0x0019497f: add byte ptr [eax - 0x53fffda9], al; and esi, edi; jmp dword ptr [edi]; 
0x0018e27f: add byte ptr [eax - 0x53fffe10], al; or al, 0xf6; jmp dword ptr [edx]; 
0x0018389f: add byte ptr [eax - 0x53fffeba], ah; dec ecx; int1; call dword ptr [ebx + 1]; 
0x001775af: add byte ptr [eax - 0x53ffff7d], dh; adc ebp, edi; jmp dword ptr [esi]; 
0x0017a31f: add byte ptr [eax - 0x54], dh; add byte ptr [eax], al; xchg eax, ebx; out dx, eax; call dword ptr [eax]; 
0x0016fa2f: add byte ptr [eax - 0x55fffffd], al; shr dl, 1; call dword ptr [eax]; 
0x0017a01f: add byte ptr [eax - 0x57], dh; add byte ptr [eax], al; pop esi; xchg eax, ebp; out dx, eax; call dword ptr [eax]; 
0x0016e50f: add byte ptr [eax - 0x5b000430], al; sub eax, 0xd0900003; sti; call esp; 
0x00197797: add byte ptr [eax - 0x5bfffd7b], bl; int 0xf7; jmp dword ptr [esi]; 
0x0018b3a7: add byte ptr [eax - 0x5bfffe3f], ch; push edi; cmc; call dword ptr [ebx]; 
0x00189e97: add byte ptr [eax - 0x5bfffe54], bl; in al, 0xf4; call dword ptr [edx]; 
0x00177fb7: add byte ptr [eax - 0x5bffff73], bh; pop ds; sti; jmp esi; 
0x001949f7: add byte ptr [eax - 0x5c], bl; stc; call dword ptr [ebx]; 
0x00199467: add byte ptr [eax - 0x5e], ch; add al, byte ptr [eax]; inc esp; dec ebp; clc; jmp dword ptr [ebx]; 
0x0016af87: add byte ptr [eax - 0x5f000b00], ch; test dword ptr [ecx], 0xf500b400; call eax; 
0x0019289b: add byte ptr [eax - 0x60000000], bl; add al, byte ptr ss:[eax]; in al, dx; out 0xf6, al; call dword ptr [esi + 5]; 
0x0018be4f: add byte ptr [eax - 0x60], dh; cmc; jmp dword ptr [edx]; 
0x0019aab7: add byte ptr [eax - 0x61], bl; clc; jmp dword ptr [edi]; 
0x00189f8f: add byte ptr [eax - 0x63fffe53], dl; out 0xf4, al; jmp dword ptr [eax]; 
0x00198e67: add byte ptr [eax - 0x64], ch; add al, byte ptr [eax]; push esp; aaa; clc; jmp dword ptr [eax]; 
0x00198a3f: add byte ptr [eax - 0x68], al; add al, byte ptr [eax]; mov word ptr [eax + edi*8], gs; call dword ptr [eax]; 
0x00188a67: add byte ptr [eax - 0x68], ch; add dword ptr [eax], eax; hlt; sbb esp, esi; call eax; 
0x0017ebb7: add byte ptr [eax - 0x6bffff07], bh; aas; sti; jmp esp; 
0x00184d07: add byte ptr [eax - 0x6e000526], ch; add eax, dword ptr [eax]; add byte ptr [eax], al; bound ecx, qword ptr [esi]; or byte ptr [ebx + 0x40e5f02], al; ret; 
0x00188907: add byte ptr [eax - 0x6e], bl; add dword ptr [eax], eax; fdivp st(3); hlt; call dword ptr [eax]; 
0x0019a477: add byte ptr [eax - 0x71], bl; clc; call dword ptr [esi + 1]; 
0x0018814f: add byte ptr [eax - 0x71], dl; add dword ptr [eax], eax; lodsb al, byte ptr [esi]; sal bl, 1; call dword ptr [eax]; 
0x0019649f: add byte ptr [eax - 0x73fffd8e], ah; xchg edi, esi; call edi; 
0x0018d17f: add byte ptr [eax - 0x73fffe21], al; fdivr st(5), st(0); jmp dword ptr [ecx]; 
0x00188a9f: add byte ptr [eax - 0x73fffe68], ah; sbb dh, ah; call dword ptr [edi]; 
0x000d31f5: add byte ptr [eax - 0x74808bfe], ch; outsb dx, byte ptr [esi]; sub al, 0xe9; ret; 
0x0016fa5f: add byte ptr [eax - 0x75fffffd], dh; shr dl, 1; call dword ptr [eax]; 
0x000ed297: add byte ptr [eax - 0x76d00088], al; ret 0xe74; 
0x000b820e: add byte ptr [eax - 0x77], dl; fimul dword ptr [ebx - 0x74f3dbb4]; pop esp; and al, 8; mov eax, 0xa2; call dword ptr gs:[0x10]; 
0x000df61e: add byte ptr [eax - 0x77], dl; fimul dword ptr [ebx - 0x74f3dbb4]; pop esp; and al, 8; mov eax, 8; call dword ptr gs:[0x10]; 
0x00187a3f: add byte ptr [eax - 0x78], al; add dword ptr [eax], eax; pop esp; and dh, bl; jmp dword ptr [eax + 3]; 
0x000b6682: add byte ptr [eax - 0x7af000c1], al; movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x000b7a02: add byte ptr [eax - 0x7af000c1], al; push cs; add dword ptr [eax], eax; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x000f5062: add byte ptr [eax - 0x7af000c1], al; push ss; add dword ptr [eax], eax; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x000f6237: add byte ptr [eax - 0x7bf0c506], al; xchg eax, esi; add dword ptr [eax], eax; add byte ptr [ebx - 0x12f7d], cl; jmp dword ptr [ebp - 0x75]; 
0x00029fa5: add byte ptr [eax - 0x7bf0c906], al; lcall 0xe9d2:0x31000003; stc; idiv bh; jmp dword ptr [esi - 0x70]; 
0x000fdc74: add byte ptr [eax - 0x7bf0ffc2], al; ret 0xfff9; 
0x000f7ea0: add byte ptr [eax - 0x7bf0ffc8], al; ret; 
0x00193597: add byte ptr [eax - 0x7bfffdbd], bl; add bh, dh; jmp dword ptr [esi]; 
0x0018ef97: add byte ptr [eax - 0x7bfffe03], bl; sub esi, esi; call dword ptr [ebx]; 
0x0018c3a7: add byte ptr [eax - 0x7bfffe2f], ch; scasd eax, dword ptr es:[edi]; cmc; call dword ptr [ebx]; 
0x00179bb7: add byte ptr [eax - 0x7bffff57], bh; pushal; out dx, eax; jmp dword ptr [edx + 5]; 
0x0000098a: add byte ptr [eax - 0x7c], dh; add byte ptr [eax], al; ret 0x1010; 
0x00083e65: add byte ptr [eax - 0x7d], dh; ret 0x8304; 
0x0019743f: add byte ptr [eax - 0x7e], al; add al, byte ptr [eax]; lodsb al, byte ptr [esi]; ret; 
0x00194c57: add byte ptr [eax - 0x8fffdab], ch; sub esi, edi; call dword ptr [eax]; 
0x00190530: add byte ptr [eax - 0xa], bl; jmp dword ptr [ebx]; 
0x0004864f: add byte ptr [eax - 0xb443], al; jmp dword ptr [esi + 0xf]; 
0x0017bf37: add byte ptr [eax - 0xd], bh; cld; jmp dword ptr [ebx]; 
0x0017cbd7: add byte ptr [eax - 0xd], bh; out dx, eax; call dword ptr [eax]; 
0x0015a7bc: add byte ptr [eax - 0xd], cl; jmp dword ptr [eax]; 
0x0018d907: add byte ptr [eax - 0xe], bh; cmc; jmp edx; 
0x0002c8bc: add byte ptr [eax - 1], bh; add esp, 0x1c; ret; 
0x000ddfe7: add byte ptr [eax - 1], bh; add esp, 0xc; ret; 
0x000ddf4b: add byte ptr [eax - 1], bh; add esp, 8; ret; 
0x00124865: add byte ptr [eax - 1], bh; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000e6839: add byte ptr [eax - 1], bh; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000729bf: add byte ptr [eax - 1], bh; mov edx, 0xffffffff; ret; 
0x0006cbb5: add byte ptr [eax - 1], bh; or dword ptr [esi], 0x20; mov esi, dword ptr [esp + 0x34]; add esp, 0x3c; ret; 
0x0003fbd5: add byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000e5059: add byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; ret; 
0x000e4f87: add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0002ebc7: add byte ptr [eax - 1], bh; ret; 
0x0018dc57: add byte ptr [eax - 5], bh; cmc; jmp dword ptr [edi]; 
0x00007967: add byte ptr [eax - 8], ah; adc dword ptr [eax], eax; ret; 
0x0017371b: add byte ptr [eax*2 + 0x14100000], bl; in al, dx; call dword ptr [edi + 7]; 
0x0017bbc3: add byte ptr [eax*8 - 0xf3f0000], dl; out dx, eax; call dword ptr [eax]; 
0x00167cdd: add byte ptr [eax], 0; adc dl, byte ptr [eax - 0x15]; jmp dword ptr [eax + 0x7f]; 
0x0018316c: add byte ptr [eax], 0; add byte ptr [eax + 0x3f], dh; add dword ptr [eax], eax; cmp al, 0xf2; cli; jmp dword ptr [ebx + 1]; 
0x0004b4a2: add byte ptr [eax], 0; add byte ptr [ebp - 0x57c2fb0], cl; or dword ptr [edi], ecx; xchg eax, edi; ret 0xe083; 
0x00111888: add byte ptr [eax], 0; add byte ptr [ebx + 0x20508b02], cl; mov dword ptr [esp + 4], edi; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x001163c4: add byte ptr [eax], 0; add byte ptr [ebx + 0x20508b02], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x000196d2: add byte ptr [eax], 0; add byte ptr [ebx + 0x8424b4], cl; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x88]; add esp, 0x8c; ret; 
0x000987c8: add byte ptr [eax], 0; add byte ptr [ebx + 0x8424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x88]; add esp, 0x8c; ret; 
0x00056f0f: add byte ptr [eax], 0; add byte ptr [ebx - 0x105b43], cl; dec dword ptr [edi]; dec ebp; ret 0xc701; 
0x00021966: add byte ptr [eax], 0; add byte ptr [ecx - 0x76f7dbbc], cl; adc al, 0x24; call dword ptr [ebp]; 
0x0001ec4a: add byte ptr [eax], 0; add byte ptr [ecx - 0x76f7dbbc], cl; or al, 0x24; call dword ptr [esi]; 
0x000fc1ad: add byte ptr [eax], 0; add byte ptr [ecx], bh; sal byte ptr [ebp + 0xc], 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00038341: add byte ptr [eax], 0; add byte ptr [ecx], ch; mov dword ptr [ebp - 0x5a71f001], 0x89fffffe; ret 0x18e9; 
0x0009e781: add byte ptr [eax], 0; add byte ptr [edi], cl; xchg eax, esp; ret 0xed31; 
0x000e9a79: add byte ptr [eax], 0; add esp, 0x18; mov al, 1; pop ebx; ret; 
0x0002d7cb: add byte ptr [eax], 0; and eax, 0x7fff; or eax, edx; mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x0006a103: add byte ptr [eax], 0; mov dword ptr [edx], esi; pop esi; ret; 
0x000e876c: add byte ptr [eax], 0; mov dword ptr [esp], eax; call 0x54fb0; add esp, 0x18; pop ebx; ret; 
0x00026e5e: add byte ptr [eax], 0; ret; 
0x00186f07: add byte ptr [eax], ah; add bl, dh; call dword ptr [eax]; 
0x00195bd7: add byte ptr [eax], ah; add byte ptr [eax], al; add ah, bl; imul eax, dword ptr [edx], 0xf73f7000; call dword ptr [eax]; 
0x0018b0c7: add byte ptr [eax], ah; add byte ptr [eax], al; add ah, cl; mov esi, 0x4f200001; cmc; call dword ptr [ebx]; 
0x00171be3: add byte ptr [eax], ah; add byte ptr [eax], al; add al, ch; sub dword ptr [eax], eax; add ah, dh; ret 0xffeb; 
0x0019aa8b: add byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [eax + 0x1c0002b8], dl; lahf; clc; call dword ptr [ebx]; 
0x00195683: add byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [eax - 0x4bfffd9c], cl; xor esi, edi; jmp dword ptr [edi]; 
0x0019497b: add byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [eax - 0x53fffda9], al; and esi, edi; jmp dword ptr [edi]; 
0x00197793: add byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [eax - 0x5bfffd7b], bl; int 0xf7; jmp dword ptr [esi]; 
0x0019ab1b: add byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [eax], ah; mov ecx, 0xa09c0002; clc; jmp dword ptr [edx]; 
0x0019acfb: add byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [eax], al; mov ebx, 0xa53c0002; clc; jmp dword ptr [edi]; 
0x00187b03: add byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [eax], cl; mov dword ptr [ecx], eax; add byte ptr [esp + esi - 0xd], dh; jmp dword ptr [ecx]; 
0x0018b42b: add byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [eax], dh; ret 1; 
0x0018b32b: add byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [eax], dh; rol dword ptr [ecx], 0; fcom qword ptr [esi - 0xb]; call dword ptr [ebx]; 
0x00190527: add byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [ebx + edx], ch; add al, byte ptr [eax]; add byte ptr [eax - 0xa], bl; jmp dword ptr [ebx]; 
0x0018816f: add byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [edi + ecx*4 + 1], dh; add al, bl; sal bl, 1; call dword ptr [eax]; 
0x00188127: add byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [edi + ecx*4], ch; add dword ptr [eax], eax; adc al, 0xf3; call dword ptr [eax]; 
0x0018b11f: add byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [edi + edi*4], ah; add dword ptr [eax], eax; sub byte ptr [edi - 0xb], cl; call dword ptr [ebx]; 
0x0019b677: add byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [esp + eax*8 + 2], bh; add al, dh; ret 0xfff8; 
0x00184e87: add byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [esp + ebx*2 + 0x49b00001], cl; cld; call ebx; 
0x00026edd: add byte ptr [eax], ah; add byte ptr [eax], al; ret; 
0x000b8304: add byte ptr [eax], ah; add dword ptr [ecx - 0x7629762f], ecx; pop ebp; in al, 0x89; ret; 
0x0018b0cf: add byte ptr [eax], ah; dec edi; cmc; call dword ptr [ebx]; 
0x0019951f: add byte ptr [eax], ah; mov dword ptr [0x4ffc0002], eax; clc; jmp dword ptr [edx]; 
0x0019931f: add byte ptr [eax], ah; mov eax, dword ptr [0x446c0002]; clc; jmp dword ptr [eax]; 
0x0019ab1f: add byte ptr [eax], ah; mov ecx, 0xa09c0002; clc; jmp dword ptr [edx]; 
0x0019b4cf: add byte ptr [eax], ah; mov esi, 0xda680002; clc; call dword ptr [eax]; 
0x00183bcf: add byte ptr [eax], ah; pop ebp; int1; call dword ptr [eax]; 
0x00199d3f: add byte ptr [eax], ah; pop esi; clc; jmp dword ptr [ebx]; 
0x00174bcf: add byte ptr [eax], ah; push ebp; add byte ptr [eax], al; fsubr qword ptr [edi - 0x13]; call dword ptr [eax]; 
0x00005837: add byte ptr [eax], ah; push esi; push es; add byte ptr [eax + 0x22000001], bl; add byte ptr [eax + eax], cl; ret; 
0x0016ac8f: add byte ptr [eax], ah; ret 0xfff4; 
0x000060f7: add byte ptr [eax], ah; sbb dword ptr [edi], ecx; add byte ptr [ebx + 0x22000000], dl; add byte ptr [eax + eax], cl; ret 3; 
0x0006aa55: add byte ptr [eax], ah; setne al; movzx eax, al; ret; 
0x0018288f: add byte ptr [eax], ah; sub cl, dh; jmp esi; 
0x0000c977: add byte ptr [eax], ah; xchg eax, esp; add dword ptr [eax], eax; ret 1; 
0x00176656: add byte ptr [eax], al; aaa; add edi, ebp; call dword ptr [eax]; 
0x001730ea: add byte ptr [eax], al; aad 2; in al, dx; call dword ptr [eax]; 
0x0017cb12: add byte ptr [eax], al; aam 0; add al, bh; out dx, eax; call dword ptr [eax]; 
0x001722d2: add byte ptr [eax], al; aam 0x30; add byte ptr [eax], al; dec eax; shr ebx, cl; jmp dword ptr [esi]; 
0x00168a86: add byte ptr [eax], al; aam 0x40; out dx, al; call eax; 
0x001945d2: add byte ptr [eax], al; aam 0x53; add al, byte ptr [eax]; test al, 0xa7; stc; call dword ptr [ebx]; 
0x00168156: add byte ptr [eax], al; aam 0x59; in al, dx; call eax; 
0x001681ce: add byte ptr [eax], al; aam 0x5e; in al, dx; jmp dword ptr [eax - 0x61]; 
0x00195a82: add byte ptr [eax], al; aam 0x63; add al, byte ptr [eax]; sbb dword ptr [edx - 9], ecx; call dword ptr [eax]; 
0x00176682: add byte ptr [eax], al; aam 0x6f; add byte ptr [eax], al; pop ss; add edi, ebp; call dword ptr [eax]; 
0x0017c1da: add byte ptr [eax], al; aam 0x92; out dx, eax; jmp dword ptr [edi]; 
0x001684fe: add byte ptr [eax], al; aam 0xac; in al, dx; jmp dword ptr [eax - 0x4f]; 
0x00168e0e: add byte ptr [eax], al; aam 0xd9; out dx, eax; call dword ptr [eax]; 
0x00168f2e: add byte ptr [eax], al; aam 0xee; out dx, eax; jmp dword ptr [eax]; 
0x0018e1d2: add byte ptr [eax], al; aam 0xef; add dword ptr [eax], eax; sub byte ptr [esi + esi*8], cl; call dword ptr [edi]; 
0x001734aa: add byte ptr [eax], al; aam 7; in al, dx; call dword ptr [edi]; 
0x00176f5a: add byte ptr [eax], al; aam 9; out dx, eax; call esp; 
0x0019c8c6: add byte ptr [eax], al; aas; add al, 0; add byte ptr [ebx + eax], ah; add byte ptr [eax], al; ret; 
0x0019951a: add byte ptr [eax], al; adc al, 0; add byte ptr [eax], al; and byte ptr [ebx + 0x4ffc0002], ah; clc; jmp dword ptr [edx]; 
0x0019931a: add byte ptr [eax], al; adc al, 0; add byte ptr [eax], al; and byte ptr [ecx + 0x446c0002], ah; clc; jmp dword ptr [eax]; 
0x001921b6: add byte ptr [eax], al; adc al, 0; add byte ptr [eax], al; mov esp, 0x8000022f; fdecstp; call dword ptr [ebp]; 
0x0018b002: add byte ptr [eax], al; adc al, 0; add byte ptr [eax], al; or byte ptr [esi + 0x46640001], bh; cmc; jmp dword ptr [ebx]; 
0x0019912a: add byte ptr [eax], al; adc al, 0; add byte ptr [eax], al; xor byte ptr [edi + 0x3ebc0002], bl; clc; jmp dword ptr [eax]; 
0x00177efa: add byte ptr [eax], al; adc al, 0x27; out dx, eax; call dword ptr [edi + 1]; 
0x00182212: add byte ptr [eax], al; adc al, 0x30; add dword ptr [eax], eax; cwde; and cl, dh; jmp dword ptr [ebx]; 
0x00182c12: add byte ptr [eax], al; adc al, 0x3a; add dword ptr [eax], eax; mov byte ptr [esi], ch; int1; call dword ptr [ebx]; 
0x00173412: add byte ptr [eax], al; adc al, 0x42; add byte ptr [eax], al; fadd dword ptr [esi]; in al, dx; jmp dword ptr [edi]; 
0x00173512: add byte ptr [eax], al; adc al, 0x43; add byte ptr [eax], al; test al, 8; in al, dx; call dword ptr [esi]; 
0x00197412: add byte ptr [eax], al; adc al, 0x82; add al, byte ptr [eax]; dec eax; ret; 
0x00198812: add byte ptr [eax], al; adc al, 0x96; add al, byte ptr [eax]; or byte ptr [eax + edi*8], bl; jmp esp; 
0x00188c12: add byte ptr [eax], al; adc al, 0x9a; add dword ptr [eax], eax; test al, 0x1c; hlt; jmp dword ptr [ecx]; 
0x0016851e: add byte ptr [eax], al; adc al, 0xaf; in al, dx; jmp eax; 
0x0017c33a: add byte ptr [eax], al; adc al, 0xb0; out dx, eax; jmp dword ptr [eax + 2]; 
0x0017b5c2: add byte ptr [eax], al; adc al, 0xbf; add byte ptr [eax], al; add ebp, esi; out dx, eax; call dword ptr [eax]; 
0x0017bbc2: add byte ptr [eax], al; adc al, 0xc5; add byte ptr [eax], al; sal eax, -0x11; call dword ptr [eax]; 
0x00168ebe: add byte ptr [eax], al; adc al, 0xe5; out dx, eax; call eax; 
0x001775fa: add byte ptr [eax], al; adc al, 0xef; call esp; 
0x00169056: add byte ptr [eax], al; adc al, 0xfe; out dx, eax; dec dword ptr [esp + esi*8]; add byte ptr [esi + edi*8 - 0x11], al; jmp dword ptr [eax - 0xc]; 
0x0000af6e: add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; fsub dword ptr [eax + eax]; add byte ptr [eax], dl; ret; 
0x0000954e: add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; mov eax, dword ptr [0xd0000010]; ret 7; 
0x00009f7e: add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; ret 0x11; 
0x0000943e: add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; ret 0x38; 
0x0000422e: add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; ret 0x52; 
0x0000c6fe: add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; ret 0x59; 
0x00007a9e: add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; ret 0xc; 
0x0000b59e: add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; ret 8; 
0x0000c3ee: add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; ret; 
0x0017da0e: add byte ptr [eax], al; adc al, ch; add byte ptr [eax], al; pushfd; or dh, al; call dword ptr [ecx]; 
0x0017a2be: add byte ptr [eax], al; adc byte ptr [eax + eax - 0x106c8200], ch; call dword ptr [eax]; 
0x00179b7e: add byte ptr [eax], al; adc byte ptr [eax], al; add byte ptr [eax], al; test byte ptr [ecx + 0x60480000], ch; out dx, eax; call dword ptr [eax]; 
0x0019830e: add byte ptr [eax], al; adc byte ptr [ecx + 0x43c0002], dl; clc; jmp dword ptr [esi + 2]; 
0x00179fbe: add byte ptr [eax], al; adc byte ptr [ecx - 0x6a5e0000], ch; out dx, eax; call dword ptr [eax]; 
0x0018a10e: add byte ptr [eax], al; adc byte ptr [edi + 0x3ecc0001], ch; cli; call dword ptr [eax]; 
0x0019497e: add byte ptr [eax], al; adc byte ptr [edi + 2], 0; lodsb al, byte ptr [esi]; and esi, edi; jmp dword ptr [edi]; 
0x0019940e: add byte ptr [eax], al; adc byte ptr [edx + 0x4abc0002], ah; clc; call edx; 
0x0017371e: add byte ptr [eax], al; adc byte ptr [esp + ebp*8], dl; call dword ptr [edi + 7]; 
0x0018c47e: add byte ptr [eax], al; adc dl, 1; add ah, cl; mov bl, 0xf5; call dword ptr [ebx]; 
0x0017d21e: add byte ptr [eax], al; adc dl, bh; out dx, eax; jmp dword ptr [edi]; 
0x00167cde: add byte ptr [eax], al; adc dl, byte ptr [eax - 0x15]; jmp dword ptr [eax + 0x7f]; 
0x0017dc0e: add byte ptr [eax], al; adc dl, ch; add byte ptr [eax], al; cmp al, 0x1d; sti; call dword ptr [eax + 8]; 
0x0000953e: add byte ptr [eax], al; adc dword ptr [eax], eax; and byte ptr [eax], al; ret; 
0x0000884e: add byte ptr [eax], al; adc dword ptr [eax], eax; int1; jmp dword ptr [ebp + 0x56]; 
0x0000837e: add byte ptr [eax], al; adc dword ptr [eax], eax; int1; jmp dword ptr [edx]; 
0x0000841e: add byte ptr [eax], al; adc dword ptr [eax], eax; int1; jmp edi; 
0x001759e1: add byte ptr [eax], al; add ah, ah; add byte ptr [bx + si], al; sub bh, bl; out dx, al; jmp dword ptr [esi]; 
0x0018497d: add byte ptr [eax], al; add ah, ah; add byte ptr [ecx], al; add byte ptr [eax + ebx - 0xe], bl; call dword ptr [ecx]; 
0x0019a991: add byte ptr [eax], al; add ah, ah; mov dl, 2; add byte ptr [edx], dl; clc; call dword ptr [eax]; 
0x0017be91: add byte ptr [eax], al; add ah, ah; mov dword ptr [eax], 0xefeebd00; call dword ptr [eax]; 
0x0017b291: add byte ptr [eax], al; add ah, ah; mov ebx, 0xf72d0000; out dx, eax; call dword ptr [eax]; 
0x0017b591: add byte ptr [eax], al; add ah, ah; mov esi, 0xf5210000; out dx, eax; call dword ptr [eax]; 
0x001918c1: add byte ptr [eax], al; add ah, al; add al, byte ptr es:[eax]; dec eax; mov al, 0xf6; call dword ptr [ecx]; 
0x00178171: add byte ptr [eax], al; add ah, al; mov al, byte ptr [eax]; add dh, cl; sti; call dword ptr [eax]; 
0x0017ba71: add byte ptr [eax], al; add ah, al; ret; 
0x0017b771: add byte ptr [eax], al; add ah, al; rol byte ptr [eax], 0; sal ebx, 1; out dx, eax; call dword ptr [eax]; 
0x0017d8f9: add byte ptr [eax], al; add ah, bh; out 0, al; add byte ptr [eax], al; or eax, esi; call dword ptr [eax]; 
0x0018c5f9: add byte ptr [eax], al; add ah, bh; rol dword ptr [ecx], cl; add byte ptr [eax - 0x48], dl; cmc; call dword ptr [edx]; 
0x00195bd9: add byte ptr [eax], al; add ah, bl; imul eax, dword ptr [edx], 0xf73f7000; call dword ptr [eax]; 
0x00175ed9: add byte ptr [eax], al; add ah, bl; insb byte ptr es:[edi], dx; add byte ptr [eax], al; sal al, 0xee; jmp dword ptr [edx]; 
0x0017aad9: add byte ptr [eax], al; add ah, bl; mov eax, 0x8ba00000; out dx, eax; call dword ptr [edx]; 
0x001758e9: add byte ptr [eax], al; add ah, ch; add byte ptr [eax], al; mov al, 0x61; out dx, al; call edx; 
0x00172d99: add byte ptr [eax], al; add ah, ch; add byte ptr ss:[eax], al; pop edx; add ah, ch; call dword ptr [eax]; 
0x0019a3e9: add byte ptr [eax], al; add ah, ch; mov cl, 2; add al, ah; mov bh, al; call dword ptr [edx]; 
0x0019afe9: add byte ptr [eax], al; add ah, ch; mov ebp, 0xb5800002; clc; jmp dword ptr [eax]; 
0x001884e9: add byte ptr [eax], al; add ah, ch; xchg eax, edx; add dword ptr [eax], eax; rcl bh, 0xf3; jmp dword ptr [eax]; 
0x00183bc9: add byte ptr [eax], al; add ah, cl; dec ecx; add dword ptr [eax], eax; and byte ptr [ebp - 0xf], bl; call dword ptr [eax]; 
0x0018cf79: add byte ptr [eax], al; add ah, cl; fadd dword ptr [ecx]; add cl, al; fdivrp st(5); call dword ptr [eax]; 
0x0019afc9: add byte ptr [eax], al; add ah, cl; mov ebp, 0xb5800002; clc; jmp dword ptr [eax]; 
0x0018b0c9: add byte ptr [eax], al; add ah, cl; mov esi, 0x4f200001; cmc; call dword ptr [ebx]; 
0x0018aec9: add byte ptr [eax], al; add ah, cl; mov esp, 0x41d00001; cmc; call dword ptr [ebx]; 
0x0018d1f1: add byte ptr [eax], al; add ah, dh; fild word ptr [ecx]; add byte ptr [eax - 0x22], bh; cmc; jmp dword ptr [ecx]; 
0x0017adf1: add byte ptr [eax], al; add ah, dh; mov ebx, 0xc080000; sti; jmp dword ptr [ebx]; 
0x0017b1a1: add byte ptr [eax], al; add ah, dh; mov edx, 0xf7cd0000; out dx, eax; call dword ptr [eax]; 
0x001960f1: add byte ptr [eax], al; add ah, dh; outsb dx, byte ptr [esi]; add al, byte ptr [eax]; sub byte ptr [eax - 9], ch; call dword ptr [ecx]; 
0x0016f9f1: add byte ptr [eax], al; add ah, dh; pop es; add byte ptr [eax], al; clc; ret 0xffea; 
0x0017baa1: add byte ptr [eax], al; add ah, dh; ret; 
0x0017b7a1: add byte ptr [eax], al; add ah, dh; rol byte ptr [eax], 0; mov cl, 0xf3; out dx, eax; call dword ptr [eax]; 
0x001890f1: add byte ptr [eax], al; add ah, dh; sahf; add dword ptr [eax], eax; or byte ptr [edx - 0xc], al; call edi; 
0x0017b681: add byte ptr [eax], al; add ah, dl; mov edi, 0xf4750000; out dx, eax; call dword ptr [eax]; 
0x0017b381: add byte ptr [eax], al; add ah, dl; mov esp, 0xf68d0000; out dx, eax; call dword ptr [eax]; 
0x0018e1d1: add byte ptr [eax], al; add ah, dl; out dx, eax; add dword ptr [eax], eax; sub byte ptr [esi + esi*8], cl; call dword ptr [edi]; 
0x0017b981: add byte ptr [eax], al; add ah, dl; ret 0; 
0x00168006: add byte ptr [eax], al; add al, 0; in al, dx; call dword ptr [esi + edx*4 + 0xab40000]; in al, dx; call esp; 
0x00174ada: add byte ptr [eax], al; add al, 0x54; in eax, dx; call esp; 
0x00184d02: add byte ptr [eax], al; add al, 0x5b; add dword ptr [eax], eax; test al, 0xda; cli; call dword ptr [ecx + 3]; 
0x001682ee: add byte ptr [eax], al; add al, 0x6e; in al, dx; call dword ptr [eax - 0x5c]; 
0x0016830e: add byte ptr [eax], al; add al, 0x70; in al, dx; jmp eax; 
0x00098127: add byte ptr [eax], al; add al, 0x74; push es; lea eax, dword ptr [ebx - 0x595d4]; pop ebx; ret; 
0x00097d07: add byte ptr [eax], al; add al, 0x74; push es; lea eax, dword ptr [ebx - 0x597b4]; pop ebx; ret; 
0x0007d087: add byte ptr [eax], al; add al, 0x74; push es; lea eax, dword ptr [ebx - 0x5a4a4]; pop ebx; ret; 
0x00097e67: add byte ptr [eax], al; add al, 0x74; push es; lea eax, dword ptr [ebx - 0xfbd84]; pop ebx; ret; 
0x00097d47: add byte ptr [eax], al; add al, 0x74; push es; lea eax, dword ptr [ebx - 0xfcaa4]; pop ebx; ret; 
0x0016843e: add byte ptr [eax], al; add al, 0x92; in al, dx; jmp eax; 
0x00168466: add byte ptr [eax], al; add al, 0x96; in al, dx; call eax; 
0x00198902: add byte ptr [eax], al; add al, 0x97; add al, byte ptr [eax]; cmp byte ptr [eax], ch; clc; call dword ptr [ebx]; 
0x0017b3b2: add byte ptr [eax], al; add al, 0xbd; add byte ptr [eax], al; insd dword ptr es:[edi], dx; imul bh; call dword ptr [eax]; 
0x00168b56: add byte ptr [eax], al; add al, 0xd2; out dx, al; jmp esp; 
0x0017cab2: add byte ptr [eax], al; add al, 0xd4; add byte ptr [eax], al; cmp ah, dh; out dx, eax; call dword ptr [eax]; 
0x00168b7e: add byte ptr [eax], al; add al, 0xd9; out dx, al; call eax; 
0x00168bd6: add byte ptr [eax], al; add al, 0xdc; out dx, al; jmp esp; 
0x0018da02: add byte ptr [eax], al; add al, 0xe8; add dword ptr [eax], eax; clc; div ebp; call dword ptr [esi]; 
0x0019d89a: add byte ptr [eax], al; add al, 5; add byte ptr [eax], al; ret; 
0x0018d7dd: add byte ptr [eax], al; add al, ah; in eax, 1; add byte ptr [esi + ebp*8], bl; cmc; jmp dword ptr [ebx]; 
0x0017abdd: add byte ptr [eax], al; add al, ah; mov ecx, 0x902c0000; out dx, eax; call dword ptr [edx]; 
0x0019b58d: add byte ptr [eax], al; add al, ah; mov esi, 0xd9e80002; clc; call dword ptr [eax]; 
0x0018b5dd: add byte ptr [eax], al; add al, ah; ret; 
0x001878dd: add byte ptr [eax], al; add al, ah; xchg byte ptr [ecx], al; add ah, bh; sbb dh, bl; call dword ptr [ebx]; 
0x0010506f: add byte ptr [eax], al; add al, al; and edx, 0xff; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0018a8bd: add byte ptr [eax], al; add al, al; mov dh, 1; add ah, ch; xor ebp, esi; call dword ptr [ebp]; 
0x0019b46d: add byte ptr [eax], al; add al, al; mov ebp, 0xdaa80002; clc; call dword ptr [eax]; 
0x0019b5bd: add byte ptr [eax], al; add al, al; ret; 
0x001775f5: add byte ptr [eax], al; add al, bh; add dword ptr [eax], 0; adc al, 0xef; call esp; 
0x00187ff5: add byte ptr [eax], al; add al, bh; lea eax, dword ptr [ecx]; add ah, dh; mov ah, 0xf3; jmp dword ptr [esi + 3]; 
0x001992f5: add byte ptr [eax], al; add al, bh; mov al, byte ptr [0x44640002]; clc; call dword ptr [ecx]; 
0x001894f5: add byte ptr [eax], al; add al, bh; mov byte ptr [0x5e840001], al; hlt; call dword ptr [edx]; 
0x00177ef5: add byte ptr [eax], al; add al, bh; mov word ptr [eax], es; add byte ptr [edi], dl; out dx, eax; call dword ptr [edi + 1]; 
0x0017408b: add byte ptr [eax], al; add al, byte ptr [eax + 0xe]; or byte ptr [ebx + 0x40e5702], al; ret; 
0x00159482: add byte ptr [eax], al; add al, byte ptr [eax]; add byte ptr [ecx], al; or eax, 0x73950000; ret 0x48; 
0x0007d0e3: add byte ptr [eax], al; add al, byte ptr [eax]; add byte ptr [esi + eax - 0x73], dh; or dword ptr [ecx + ebp*8 - 0x12], 0xffffffff; pop ebx; ret; 
0x0007c3f3: add byte ptr [eax], al; add al, byte ptr [eax]; add byte ptr [esi + eax - 0x73], dh; or dword ptr [esi + eax*8 - 0x12], 0xffffffff; pop ebx; ret; 
0x0007e3a3: add byte ptr [eax], al; add al, byte ptr [eax]; add byte ptr [esi + eax - 0x73], dh; or dword ptr [esp + edx*2 - 0x12], 0xffffffff; pop ebx; ret; 
0x00132c56: add byte ptr [eax], al; add al, ch; adc eax, 0x81ffff71; ret; 
0x000def83: add byte ptr [eax], al; add al, ch; adc eax, 0x89fffff1; ret 0xffb8; 
0x0008e90d: add byte ptr [eax], al; add al, ch; bound esi, qword ptr [ecx + ecx + 0x1bc18100]; mov esi, 0xc03000c; xchg eax, ecx; jmp ecx; 
0x000e1983: add byte ptr [eax], al; add al, ch; call 0x810e1e0f; ret; 
0x000b80b0: add byte ptr [eax], al; add al, ch; cmp byte ptr [eax - 9], ah; jmp dword ptr [ebp - 0x77]; 
0x0012d11b: add byte ptr [eax], al; add al, ch; fxch st(0), st(7); clc; dec dword ptr [ebx - 0xf775]; jmp dword ptr [ebp - 0x75]; 
0x000e4cdd: add byte ptr [eax], al; add al, ch; imul esp, dword ptr [edx], -0xd; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x0017dee5: add byte ptr [eax], al; add al, ch; in al, dx; add byte ptr [eax], al; test byte ptr [eax + esi*8], bl; jmp dword ptr [edx]; 
0x000de32a: add byte ptr [eax], al; add al, ch; inc ecx; mov edx, 0xc3810004; ret 0xc4c; 
0x000dd76c: add byte ptr [eax], al; add al, ch; insb byte ptr es:[edi], dx; ret; 
0x00101ac8: add byte ptr [eax], al; add al, ch; mov dword ptr [0x81000282], eax; ret; 
0x0004bbc8: add byte ptr [eax], al; add al, ch; mov dword ptr [0x81000de1], eax; ret; 
0x000231ca: add byte ptr [eax], al; add al, ch; mov eax, dword ptr [0x8100106b]; ret; 
0x001145fb: add byte ptr [eax], al; add al, ch; mov ebp, 0x89fffffe; ret 0xc031; 
0x00020ab2: add byte ptr [eax], al; add al, ch; mov ecx, 0x81001092; ret; 
0x0001dab2: add byte ptr [eax], al; add al, ch; mov ecx, 0x810010c2; ret; 
0x000c38b1: add byte ptr [eax], al; add al, ch; mov edx, 0x81000664; ret; 
0x000e38ad: add byte ptr [eax], al; add al, ch; mov esi, 0x81000464; ret; 
0x00023e5e: add byte ptr [eax], al; add al, ch; or eax, 0x8100105f; ret; 
0x0012b05e: add byte ptr [eax], al; add al, ch; or eax, 0x81ffffed; ret; 
0x000e2b03: add byte ptr [eax], al; add al, ch; push 0x81000472; ret; 
0x00077bbc: add byte ptr [eax], al; add al, ch; pushfd; fcos; jmp dword ptr [ebp - 0x7d]; 
0x000948ad: add byte ptr [eax], al; add al, ch; ret 0x954; 
0x00123816: add byte ptr [eax], al; add al, ch; ret 0xef36; 
0x000eca46: add byte ptr [eax], al; add al, ch; ret 0xf76d; 
0x0002bf86: add byte ptr [eax], al; add al, ch; ret 0xfffa; 
0x0018b4e5: add byte ptr [eax], al; add al, ch; ret 1; 
0x00041015: add byte ptr [eax], al; add al, ch; ret; 
0x00190ee5: add byte ptr [eax], al; add al, ch; sbb al, 2; add byte ptr [ecx + ebx*4], al; idiv bh; ret; 
0x000bc7fb: add byte ptr [eax], al; add al, ch; std; fdivr st(7); dec dword ptr [ebx - 0xf775]; jmp dword ptr [ebp - 0x75]; 
0x00171be5: add byte ptr [eax], al; add al, ch; sub dword ptr [eax], eax; add ah, dh; ret 0xffeb; 
0x0011458b: add byte ptr [eax], al; add al, ch; sub eax, 0x89ffffff; ret 0xc031; 
0x00019254: add byte ptr [eax], al; add al, ch; test dl, ah; pop es; add byte ptr [ecx - 0x47fbdbbc], cl; ret 0; 
0x000221c2: add byte ptr [eax], al; add al, ch; test eax, 0x8100107b; ret; 
0x0012e0c2: add byte ptr [eax], al; add al, ch; test eax, 0x81ffffbc; ret; 
0x001892c5: add byte ptr [eax], al; add al, cl; mov al, byte ptr [0x53c40001]; hlt; jmp dword ptr [esi + 1]; 
0x001824c5: add byte ptr [eax], al; add al, cl; xor al, byte ptr [ecx]; add byte ptr [esp + ecx*2 - 4], al; call esp; 
0x00172ced: add byte ptr [eax], al; add al, dh; cmp al, byte ptr [eax]; add byte ptr [ebp + edi*8 - 0x15], bl; jmp dword ptr [ebx]; 
0x0018d6ed: add byte ptr [eax], al; add al, dh; in al, 1; add byte ptr [ebx + ebp*8], bl; cmc; call dword ptr [edx]; 
0x0019b49d: add byte ptr [eax], al; add al, dh; mov ebp, 0xda880002; clc; call dword ptr [eax]; 
0x0018d9ed: add byte ptr [eax], al; add al, dh; out 1, eax; add ah, ch; div ebp; call dword ptr [esi]; 
0x00177c89: add byte ptr [eax], al; add al, dh; xor eax, dword ptr [eax]; add byte ptr [eax + 0x20], al; out dx, eax; call dword ptr [esi]; 
0x001930cd: add byte ptr [eax], al; add al, dl; add al, byte ptr ds:[eax]; in al, dx; div esi; jmp dword ptr [eax]; 
0x0019b1cd: add byte ptr [eax], al; add al, dl; mov edi, 0xbbec0002; clc; jmp dword ptr [edi]; 
0x0017a07d: add byte ptr [eax], al; add al, dl; test eax, 0x951a0000; out dx, eax; call dword ptr [eax]; 
0x00172a7d: add byte ptr [eax], al; add al, dl; xor eax, dword ptr [eax]; add byte ptr [edi + edi*8 - 0x15], cl; call dword ptr [eax]; 
0x00026c0a: add byte ptr [eax], al; add bh, al; add al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; call eax; 
0x000b6768: add byte ptr [eax], al; add bh, al; add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x39]; 
0x0005a062: add byte ptr [eax], al; add bh, al; test dword ptr [edi + ebp*8 - 1], ebx; call dword ptr [eax]; 
0x0005a1a6: add byte ptr [eax], al; add bh, al; test dword ptr [edi + ebp*8 - 1], esp; call dword ptr [eax]; 
0x000ec97c: add byte ptr [eax], al; add bh, bh; shr cl, 1; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x0017e0fe: add byte ptr [eax], al; add bh, ch; add byte ptr [eax], al; dec esp; and esi, eax; jmp dword ptr [edi]; 
0x00095b93: add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x0002d8aa: add byte ptr [eax], al; add bl, bl; insb byte ptr es:[edi], dx; and al, 0x40; add esp, 0x7c; ret; 
0x000a7a2c: add byte ptr [eax], al; add bl, ch; ret 0xb48d; 
0x000d7060: add byte ptr [eax], al; add bl, ch; ret; 
0x000b3c3c: add byte ptr [eax], al; add bl, ch; ror byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x000b42e4: add byte ptr [eax], al; add bl, ch; ror dword ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x00089c9d: add byte ptr [eax], al; add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, dword ptr [edx + 0xf]; ret; 
0x000858bd: add byte ptr [eax], al; add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x00072814: add byte ptr [eax], al; add bl, dh; ret; 
0x0019054d: add byte ptr [eax], al; add byte ptr [eax + 0x13], dl; add al, byte ptr [eax]; mov word ptr [eax - 0xa], ds; call ecx; 
0x000eeeea: add byte ptr [eax], al; add byte ptr [eax + 0x13f], bh; call dword ptr gs:[0x10]; 
0x00170d5d: add byte ptr [eax], al; add byte ptr [eax + 0x1b], ah; add byte ptr [eax], al; dec esp; arpl bx, bp; call dword ptr [ebx]; 
0x001726ad: add byte ptr [eax], al; add byte ptr [eax + 0x1c000034], dh; out 0xeb, al; call ecx; 
0x00177d8d: add byte ptr [eax], al; add byte ptr [eax + 0x1c00008b], dl; and ch, bh; jmp dword ptr [esi]; 
0x0018b18d: add byte ptr [eax], al; add byte ptr [eax + 0x1c0001bf], dl; das; cli; call dword ptr [ebp + 2]; 
0x0019aa8d: add byte ptr [eax], al; add byte ptr [eax + 0x1c0002b8], dl; lahf; clc; call dword ptr [ebx]; 
0x000b9068: add byte ptr [eax], al; add byte ptr [eax + 0x26748d], dl; ret; 
0x0008f8b5: add byte ptr [eax], al; add byte ptr [eax + 0x26b48d], dl; add byte ptr [eax], al; add dh, dh; ret 0x7510; 
0x00185f9d: add byte ptr [eax], al; add byte ptr [eax + 0x2c00016d], ah; fcompi st(2); call dword ptr [edi]; 
0x00191f5d: add byte ptr [eax], al; add byte ptr [eax + 0x2d000228], dh; loope 0x191f5d; call dword ptr [eax]; 
0x00172275: add byte ptr [eax], al; add byte ptr [eax + 0x30], bh; add byte ptr [eax], al; xchg eax, esp; shr bl, cl; jmp dword ptr [esi]; 
0x001724a5: add byte ptr [eax], al; add byte ptr [eax + 0x34000032], ch; fldpi; call dword ptr [edi]; 
0x00176fa5: add byte ptr [eax], al; add byte ptr [eax + 0x3400007d], ch; or ebp, edi; call esp; 
0x00173055: add byte ptr [eax], al; add byte ptr [eax + 0x35000039], ch; add ebp, esp; call dword ptr [eax]; 
0x0019443d: add byte ptr [eax], al; add byte ptr [eax + 0x3800024d], dl; and dh, bh; call dword ptr [eax]; 
0x00173025: add byte ptr [eax], al; add byte ptr [eax + 0x39], bh; add byte ptr [eax], al; push ebp; add ebp, esp; call dword ptr [eax]; 
0x00173115: add byte ptr [eax], al; add byte ptr [eax + 0x3a], ch; add byte ptr [eax], al; mov ch, 2; in al, dx; call dword ptr [eax]; 
0x0016faad: add byte ptr [eax], al; add byte ptr [eax + 0x3c000008], dh; ret; 
0x0019524d: add byte ptr [eax], al; add byte ptr [eax + 0x3f00025b], ah; xor al, 0xf7; call dword ptr [eax]; 
0x0018316d: add byte ptr [eax], al; add byte ptr [eax + 0x3f], dh; add dword ptr [eax], eax; cmp al, 0xf2; cli; jmp dword ptr [ebx + 1]; 
0x000b9aa5: add byte ptr [eax], al; add byte ptr [eax + 0x40], bh; ret; 
0x00179b95: add byte ptr [eax], al; add byte ptr [eax + 0x440000a9], bl; pushal; out dx, eax; call dword ptr [ebx]; 
0x00183ab5: add byte ptr [eax], al; add byte ptr [eax + 0x44000148], bh; push ebx; int1; call dword ptr [eax]; 
0x00188bb5: add byte ptr [eax], al; add byte ptr [eax + 0x44000199], bh; sbb al, 0xf4; jmp dword ptr [ebp]; 
0x00191e4d: add byte ptr [eax], al; add byte ptr [eax + 0x4a000227], ah; sal esi, 1; call dword ptr [eax]; 
0x001731ad: add byte ptr [eax], al; add byte ptr [eax + 0x4c00003f], dh; add esp, ebp; jmp dword ptr [ecx]; 
0x0019409d: add byte ptr [eax], al; add byte ptr [eax + 0x4c00024e], ah; adc al, 0xf7; call dword ptr [edx + 3]; 
0x00179299: add byte ptr [eax], al; add byte ptr [eax + 0x51700000], bl; out dx, eax; jmp dword ptr [ebx]; 
0x001891b5: add byte ptr [eax], al; add byte ptr [eax + 0x5400019f], bh; dec edi; hlt; call dword ptr [ebx + 1]; 
0x00174965: add byte ptr [eax], al; add byte ptr [eax + 0x57], ch; add byte ptr [eax], al; in al, 0x30; in eax, dx; call dword ptr [ebx + 1]; 
0x0008dc8d: add byte ptr [eax], al; add byte ptr [eax + 0x5b5e5f17], cl; ret; 
0x00194d75: add byte ptr [eax], al; add byte ptr [eax + 0x5b], bh; add al, byte ptr [eax]; movsb byte ptr es:[edi], byte ptr [esi]; sub bh, dh; jmp dword ptr [edi]; 
0x0019521d: add byte ptr [eax], al; add byte ptr [eax + 0x5b], dh; add al, byte ptr [eax]; pop edi; xor al, 0xf7; call dword ptr [eax]; 
0x001778a5: add byte ptr [eax], al; add byte ptr [eax + 0x64000086], ch; sbb edi, ebp; call dword ptr [esi]; 
0x001874a5: add byte ptr [eax], al; add byte ptr [eax + 0x64000182], ch; or dh, bl; jmp dword ptr [ebp + 2]; 
0x00188985: add byte ptr [eax], al; add byte ptr [eax + 0x64000197], cl; pop ss; hlt; jmp dword ptr [eax]; 
0x001893b5: add byte ptr [eax], al; add byte ptr [eax + 0x640001a1], bh; push edi; hlt; jmp esi; 
0x000f0ae1: add byte ptr [eax], al; add byte ptr [eax + 0x66], bh; mov ebx, 0x12; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00195d3d: add byte ptr [eax], al; add byte ptr [eax + 0x6b], al; add al, byte ptr [eax]; mov word ptr [edi - 9], es; jmp dword ptr [esi]; 
0x000cf7ec: add byte ptr [eax], al; add byte ptr [eax + 0x6c70c], dh; add byte ptr [eax], al; add bl, ch; ret 0xb48d; 
0x000b857f: add byte ptr [eax], al; add byte ptr [eax + 0x6ca365], al; add byte ptr [eax], al; mov eax, 0xbe; int 0x80; 
0x0003f79d: add byte ptr [eax], al; add byte ptr [eax + 0x742fff78], al; ret 0xe883; 
0x0014727d: add byte ptr [eax], al; add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x0018dc7d: add byte ptr [eax], al; add byte ptr [eax + 0x7c0001ea], al; sar bl, 1; jmp dword ptr [edx]; 
0x0019b69d: add byte ptr [eax], al; add byte ptr [eax + 0x7c0002c4], ah; ret; 
0x00176f55: add byte ptr [eax], al; add byte ptr [eax + 0x7d], bl; add byte ptr [eax], al; aam 9; out dx, eax; call esp; 
0x0003f857: add byte ptr [eax], al; add byte ptr [eax + 0x7e], bh; call dword ptr gs:[0x10]; 
0x000b8586: add byte ptr [eax], al; add byte ptr [eax + 0xbe], bh; int 0x80; 
0x0018ae9d: add byte ptr [eax], al; add byte ptr [eax + 0xc0001bc], ah; inc eax; cmc; jmp ecx; 
0x0019b08d: add byte ptr [eax], al; add byte ptr [eax + 0xc0002be], dl; mov dh, 0xf8; jmp edx; 
0x001491a3: add byte ptr [eax], al; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x00187522: add byte ptr [eax], al; add byte ptr [eax + 0xe], dh; or byte ptr [edx + 9], al; add eax, dword ptr [edx]; push esi; ret; 
0x00149136: add byte ptr [eax], al; add byte ptr [eax + 0xf00067a], al; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x00149199: add byte ptr [eax], al; add byte ptr [eax + 0xf000b7a], al; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x000fc1e2: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x000e3c34: add byte ptr [eax], al; add byte ptr [eax + 1], bh; add esp, 0x1c; ret; 
0x000b85d1: add byte ptr [eax], al; add byte ptr [eax + 1], bh; int 0x80; 
0x0007c2f5: add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x00129a65: add byte ptr [eax], al; add byte ptr [eax + 2], bh; add esp, 0xc; ret; 
0x000a740d: add byte ptr [eax], al; add byte ptr [eax + 2], bh; ret; 
0x000a741d: add byte ptr [eax], al; add byte ptr [eax + 3], bh; ret; 
0x001490fa: add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x000a742d: add byte ptr [eax], al; add byte ptr [eax + 4], bh; ret; 
0x000a743d: add byte ptr [eax], al; add byte ptr [eax + 5], bh; ret; 
0x000a744d: add byte ptr [eax], al; add byte ptr [eax + 6], bh; ret; 
0x000a745d: add byte ptr [eax], al; add byte ptr [eax + 7], bh; ret; 
0x00149153: add byte ptr [eax], al; add byte ptr [eax + 8], bh; pop edi; ret; 
0x00183271: add byte ptr [eax], al; add byte ptr [eax + eax*2 + 1], dh; add byte ptr [eax], cl; hlt; cli; jmp dword ptr [ebx]; 
0x0018b281: add byte ptr [eax], al; add byte ptr [eax + eax*8 + 0x52780001], al; cmc; jmp esp; 
0x0017b741: add byte ptr [eax], al; add byte ptr [eax + eax*8 - 0xc0f0000], dl; out dx, eax; call dword ptr [eax]; 
0x0018b5ed: add byte ptr [eax], al; add byte ptr [eax + eax], ah; add byte ptr [eax], al; hlt; ret; 
0x0018be45: add byte ptr [eax], al; add byte ptr [eax + eax], ah; add byte ptr [esp + ecx*8 + 1], cl; add byte ptr [eax - 0x60], dh; cmc; jmp dword ptr [edx]; 
0x0017aad5: add byte ptr [eax], al; add byte ptr [eax + eax], bl; add byte ptr [eax], al; fdivr qword ptr [eax - 0x74600000]; out dx, eax; call dword ptr [edx]; 
0x0017af2d: add byte ptr [eax], al; add byte ptr [eax + eax], ch; add byte ptr [eax], al; test byte ptr [eax - 0x6520000], bh; out dx, eax; call dword ptr [eax]; 
0x001874a1: add byte ptr [eax], al; add byte ptr [eax + eax], dl; add byte ptr [eax + 0x64000182], ch; or dh, bl; jmp dword ptr [ebp + 2]; 
0x00199519: add byte ptr [eax], al; add byte ptr [eax + eax], dl; add byte ptr [eax], al; and byte ptr [ebx + 0x4ffc0002], ah; clc; jmp dword ptr [edx]; 
0x00199319: add byte ptr [eax], al; add byte ptr [eax + eax], dl; add byte ptr [eax], al; and byte ptr [ecx + 0x446c0002], ah; clc; jmp dword ptr [eax]; 
0x0018b001: add byte ptr [eax], al; add byte ptr [eax + eax], dl; add byte ptr [eax], al; or byte ptr [esi + 0x46640001], bh; cmc; jmp dword ptr [ebx]; 
0x00199129: add byte ptr [eax], al; add byte ptr [eax + eax], dl; add byte ptr [eax], al; xor byte ptr [edi + 0x3ebc0002], bl; clc; jmp dword ptr [eax]; 
0x0018da01: add byte ptr [eax], al; add byte ptr [eax + ebp*8], al; add dword ptr [eax], eax; clc; div ebp; call dword ptr [esi]; 
0x0018cf49: add byte ptr [eax], al; add byte ptr [eax + ebx*8 - 0x211effff], bl; cmc; call dword ptr [eax]; 
0x0002aab6: add byte ptr [eax], al; add byte ptr [eax + ecx - 0x77], dh; ret 0xc8d; 
0x00186f01: add byte ptr [eax], al; add byte ptr [eax + edi*2 + 1], dl; add byte ptr [eax], ah; add bl, dh; call dword ptr [eax]; 
0x00186a39: add byte ptr [eax], al; add byte ptr [eax + edi*2], bh; add dword ptr [eax], eax; sal dl, 0xf2; call ecx; 
0x0017af31: add byte ptr [eax], al; add byte ptr [eax + edi*4 - 0x6520000], al; out dx, eax; call dword ptr [eax]; 
0x0018e245: add byte ptr [eax], al; add byte ptr [eax - 0x10], cl; add dword ptr [eax], eax; test byte ptr [esi + esi*8], cl; call dword ptr [edx]; 
0x0019289d: add byte ptr [eax], al; add byte ptr [eax - 0x13fffdca], ah; out 0xf6, al; call dword ptr [esi + 5]; 
0x00189ead: add byte ptr [eax], al; add byte ptr [eax - 0x13fffe54], dh; in al, 0xf4; call dword ptr [edx]; 
0x00170f3e: add byte ptr [eax], al; add byte ptr [eax - 0x15], ch; jmp dword ptr [ebx]; 
0x0017a22d: add byte ptr [eax], al; add byte ptr [eax - 0x19ffff55], al; xchg eax, ebx; out dx, eax; call dword ptr [eax]; 
0x0018d04d: add byte ptr [eax], al; add byte ptr [eax - 0x22], dl; add dword ptr [eax], eax; cmp al, 0xd4; cmc; jmp dword ptr [eax]; 
0x0018cc65: add byte ptr [eax], al; add byte ptr [eax - 0x26], ch; add dword ptr [eax], eax; mov ah, 0xcb; cmc; call dword ptr [ebx]; 
0x0017c74d: add byte ptr [eax], al; add byte ptr [eax - 0x2b], dl; add byte ptr [eax], al; sbb al, 0xd4; out dx, eax; call dword ptr [edi + 2]; 
0x0018eeb5: add byte ptr [eax], al; add byte ptr [eax - 0x2bfffe04], bh; and esi, esi; jmp dword ptr [esi]; 
0x0018a3a5: add byte ptr [eax], al; add byte ptr [eax - 0x2bfffe4f], ch; hlt; jmp dword ptr [ebx]; 
0x001734a5: add byte ptr [eax], al; add byte ptr [eax - 0x2bffffbe], ch; pop es; in al, dx; call dword ptr [edi]; 
0x001722a5: add byte ptr [eax], al; add byte ptr [eax - 0x2bffffd0], ch; shr bl, cl; call dword ptr [edx]; 
0x0017c45d: add byte ptr [eax], al; add byte ptr [eax - 0x2e], ah; add byte ptr [eax], al; cmp al, 0xba; out dx, eax; jmp dword ptr [ebx]; 
0x0017c36d: add byte ptr [eax], al; add byte ptr [eax - 0x2f], dh; add byte ptr [eax], al; cmp al, 0xb2; out dx, eax; jmp dword ptr [edi]; 
0x0018c47d: add byte ptr [eax], al; add byte ptr [eax - 0x33fffe2e], al; mov bl, 0xf5; call dword ptr [ebx]; 
0x0017d19d: add byte ptr [eax], al; add byte ptr [eax - 0x33ffff21], ah; clc; out dx, eax; call dword ptr [ecx + 1]; 
0x00184385: add byte ptr [eax], al; add byte ptr [eax - 0x3bfffeaf], cl; hlt; int1; jmp dword ptr [edi]; 
0x0017a88d: add byte ptr [eax], al; add byte ptr [eax - 0x3ffff4a], dl; test edi, ebp; jmp dword ptr [eax]; 
0x00176919: add byte ptr [eax], al; add byte ptr [eax - 0x3fffffe0], al; add edi, ebp; call dword ptr [ebx]; 
0x0019b26d: add byte ptr [eax], al; add byte ptr [eax - 0x40], dh; add al, byte ptr [eax]; fdiv st(6), st(0); cli; call dword ptr [ebx + 1]; 
0x001498c7: add byte ptr [eax], al; add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x0018b145: add byte ptr [eax], al; add byte ptr [eax - 0x41], cl; add dword ptr [eax], eax; dec edi; cmc; call dword ptr [ebx]; 
0x0019503d: add byte ptr [eax], al; add byte ptr [eax - 0x43fffda7], dl; xor bh, dh; call dword ptr [eax]; 
0x0017d99d: add byte ptr [eax], al; add byte ptr [eax - 0x43ffff19], ah; or eax, esi; call dword ptr [edx]; 
0x0019ac55: add byte ptr [eax], al; add byte ptr [eax - 0x46], bl; add al, byte ptr [eax]; and al, 0xa1; clc; jmp dword ptr [edi]; 
0x0017aa45: add byte ptr [eax], al; add byte ptr [eax - 0x48], cl; add byte ptr [eax], al; in al, 0x89; out dx, eax; call dword ptr [edx]; 
0x0018aa4d: add byte ptr [eax], al; add byte ptr [eax - 0x48], dl; add dword ptr [eax], eax; sbb al, 0x35; cmc; call dword ptr [ecx]; 
0x00195685: add byte ptr [eax], al; add byte ptr [eax - 0x4bfffd9c], cl; xor esi, edi; jmp dword ptr [edi]; 
0x001791a5: add byte ptr [eax], al; add byte ptr [eax - 0x4bffff61], ch; push eax; out dx, eax; call dword ptr [ecx]; 
0x001745b5: add byte ptr [eax], al; add byte ptr [eax - 0x4bffffad], bh; xlatb; in al, dx; jmp dword ptr [edx]; 
0x0017a445: add byte ptr [eax], al; add byte ptr [eax - 0x4e], cl; add byte ptr [eax], al; xor al, 0x7a; out dx, eax; jmp dword ptr [esi]; 
0x0018a23d: add byte ptr [eax], al; add byte ptr [eax - 0x50], al; add dword ptr [eax], eax; sub al, 0xf0; hlt; call dword ptr [ebx]; 
0x0019497d: add byte ptr [eax], al; add byte ptr [eax - 0x53fffda9], al; and esi, edi; jmp dword ptr [edi]; 
0x0018e27d: add byte ptr [eax], al; add byte ptr [eax - 0x53fffe10], al; or al, 0xf6; jmp dword ptr [edx]; 
0x0018389d: add byte ptr [eax], al; add byte ptr [eax - 0x53fffeba], ah; dec ecx; int1; call dword ptr [ebx + 1]; 
0x001775ad: add byte ptr [eax], al; add byte ptr [eax - 0x53ffff7d], dh; adc ebp, edi; jmp dword ptr [esi]; 
0x0017a31d: add byte ptr [eax], al; add byte ptr [eax - 0x54], dh; add byte ptr [eax], al; xchg eax, ebx; out dx, eax; call dword ptr [eax]; 
0x0016fa2d: add byte ptr [eax], al; add byte ptr [eax - 0x55fffffd], al; shr dl, 1; call dword ptr [eax]; 
0x00197795: add byte ptr [eax], al; add byte ptr [eax - 0x5bfffd7b], bl; int 0xf7; jmp dword ptr [esi]; 
0x00177fb5: add byte ptr [eax], al; add byte ptr [eax - 0x5bffff73], bh; pop ds; sti; jmp esi; 
0x00192899: add byte ptr [eax], al; add byte ptr [eax - 0x60000000], bl; add al, byte ptr ss:[eax]; in al, dx; out 0xf6, al; call dword ptr [esi + 5]; 
0x00198a3d: add byte ptr [eax], al; add byte ptr [eax - 0x68], al; add al, byte ptr [eax]; mov word ptr [eax + edi*8], gs; call dword ptr [eax]; 
0x00188a65: add byte ptr [eax], al; add byte ptr [eax - 0x68], ch; add dword ptr [eax], eax; hlt; sbb esp, esi; call eax; 
0x0017ebb5: add byte ptr [eax], al; add byte ptr [eax - 0x6bffff07], bh; aas; sti; jmp esp; 
0x0018814d: add byte ptr [eax], al; add byte ptr [eax - 0x71], dl; add dword ptr [eax], eax; lodsb al, byte ptr [esi]; sal bl, 1; call dword ptr [eax]; 
0x0019649d: add byte ptr [eax], al; add byte ptr [eax - 0x73fffd8e], ah; xchg edi, esi; call edi; 
0x0018d17d: add byte ptr [eax], al; add byte ptr [eax - 0x73fffe21], al; fdivr st(5), st(0); jmp dword ptr [ecx]; 
0x00188a9d: add byte ptr [eax], al; add byte ptr [eax - 0x73fffe68], ah; sbb dh, ah; call dword ptr [edi]; 
0x0016fa5d: add byte ptr [eax], al; add byte ptr [eax - 0x75fffffd], dh; shr dl, 1; call dword ptr [eax]; 
0x00187a3d: add byte ptr [eax], al; add byte ptr [eax - 0x78], al; add dword ptr [eax], eax; pop esp; and dh, bl; jmp dword ptr [eax + 3]; 
0x000b7a00: add byte ptr [eax], al; add byte ptr [eax - 0x7af000c1], al; push cs; add dword ptr [eax], eax; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x000f5060: add byte ptr [eax], al; add byte ptr [eax - 0x7af000c1], al; push ss; add dword ptr [eax], eax; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x000f6235: add byte ptr [eax], al; add byte ptr [eax - 0x7bf0c506], al; xchg eax, esi; add dword ptr [eax], eax; add byte ptr [ebx - 0x12f7d], cl; jmp dword ptr [ebp - 0x75]; 
0x000f7e9e: add byte ptr [eax], al; add byte ptr [eax - 0x7bf0ffc8], al; ret; 
0x00193595: add byte ptr [eax], al; add byte ptr [eax - 0x7bfffdbd], bl; add bh, dh; jmp dword ptr [esi]; 
0x0018ef95: add byte ptr [eax], al; add byte ptr [eax - 0x7bfffe03], bl; sub esi, esi; call dword ptr [ebx]; 
0x0018c3a5: add byte ptr [eax], al; add byte ptr [eax - 0x7bfffe2f], ch; scasd eax, dword ptr es:[edi]; cmc; call dword ptr [ebx]; 
0x00179bb5: add byte ptr [eax], al; add byte ptr [eax - 0x7bffff57], bh; pushal; out dx, eax; jmp dword ptr [edx + 5]; 
0x0019743d: add byte ptr [eax], al; add byte ptr [eax - 0x7e], al; add al, byte ptr [eax]; lodsb al, byte ptr [esi]; ret; 
0x00194c55: add byte ptr [eax], al; add byte ptr [eax - 0x8fffdab], ch; sub esi, edi; call dword ptr [eax]; 
0x0002c8ba: add byte ptr [eax], al; add byte ptr [eax - 1], bh; add esp, 0x1c; ret; 
0x000ddfe5: add byte ptr [eax], al; add byte ptr [eax - 1], bh; add esp, 0xc; ret; 
0x000ddf49: add byte ptr [eax], al; add byte ptr [eax - 1], bh; add esp, 8; ret; 
0x00124863: add byte ptr [eax], al; add byte ptr [eax - 1], bh; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000e6837: add byte ptr [eax], al; add byte ptr [eax - 1], bh; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0006cbb3: add byte ptr [eax], al; add byte ptr [eax - 1], bh; or dword ptr [esi], 0x20; mov esi, dword ptr [esp + 0x34]; add esp, 0x3c; ret; 
0x000e5057: add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; ret; 
0x000e4f85: add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0002ebc5: add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x00173719: add byte ptr [eax], al; add byte ptr [eax*2 + 0x14100000], bl; in al, dx; call dword ptr [edi + 7]; 
0x0017bbc1: add byte ptr [eax], al; add byte ptr [eax*8 - 0xf3f0000], dl; out dx, eax; call dword ptr [eax]; 
0x0019951d: add byte ptr [eax], al; add byte ptr [eax], ah; mov dword ptr [0x4ffc0002], eax; clc; jmp dword ptr [edx]; 
0x0019931d: add byte ptr [eax], al; add byte ptr [eax], ah; mov eax, dword ptr [0x446c0002]; clc; jmp dword ptr [eax]; 
0x0019ab1d: add byte ptr [eax], al; add byte ptr [eax], ah; mov ecx, 0xa09c0002; clc; jmp dword ptr [edx]; 
0x0019b4cd: add byte ptr [eax], al; add byte ptr [eax], ah; mov esi, 0xda680002; clc; call dword ptr [eax]; 
0x00174bcd: add byte ptr [eax], al; add byte ptr [eax], ah; push ebp; add byte ptr [eax], al; fsubr qword ptr [edi - 0x13]; call dword ptr [eax]; 
0x0000884c: add byte ptr [eax], al; add byte ptr [eax], al; adc dword ptr [eax], eax; int1; jmp dword ptr [ebp + 0x56]; 
0x0000837c: add byte ptr [eax], al; add byte ptr [eax], al; adc dword ptr [eax], eax; int1; jmp dword ptr [edx]; 
0x0000841c: add byte ptr [eax], al; add byte ptr [eax], al; adc dword ptr [eax], eax; int1; jmp edi; 
0x0019d898: add byte ptr [eax], al; add byte ptr [eax], al; add al, 5; add byte ptr [eax], al; ret; 
0x00174089: add byte ptr [eax], al; add byte ptr [eax], al; add al, byte ptr [eax + 0xe]; or byte ptr [ebx + 0x40e5702], al; ret; 
0x00159480: add byte ptr [eax], al; add byte ptr [eax], al; add al, byte ptr [eax]; add byte ptr [ecx], al; or eax, 0x73950000; ret 0x48; 
0x000b3c3a: add byte ptr [eax], al; add byte ptr [eax], al; add bl, ch; ror byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x000b42e2: add byte ptr [eax], al; add byte ptr [eax], al; add bl, ch; ror dword ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x0018b5eb: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax + eax], ah; add byte ptr [eax], al; hlt; ret; 
0x0000884a: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; adc dword ptr [eax], eax; int1; jmp dword ptr [ebp + 0x56]; 
0x0000837a: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; adc dword ptr [eax], eax; int1; jmp dword ptr [edx]; 
0x0000841a: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; adc dword ptr [eax], eax; int1; jmp edi; 
0x0019d896: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add al, 5; add byte ptr [eax], al; ret; 
0x0014b2a9: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; mov ebp, 0x81fffdea; ret; 
0x0014af59: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; or eax, 0x81fffdee; ret; 
0x0014ac59: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; or eax, 0x81fffdf1; ret; 
0x0012a859: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; or eax, 0x81fffff5; ret; 
0x0014b049: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81fffded; ret; 
0x0012ee49: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81ffffaf; ret; 
0x00008849: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], dl; add cl, dh; jmp dword ptr [ebp + 0x56]; 
0x00008379: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], dl; add cl, dh; jmp dword ptr [edx]; 
0x00008419: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], dl; add cl, dh; jmp edi; 
0x000ea0d3: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0019e476: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; and al, byte ptr [edi]; add byte ptr [eax], al; syscall; 
0x00016eba: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x0007352f: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx + 0x18a0], 0; mov dword ptr [ecx + 0x18a4], 0; ret; 
0x00073539: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx + 0x18a4], 0; ret; 
0x00074028: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0014f862: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret 0x24; 
0x0014fd52: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret 0x33; 
0x00000448: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret 0x3e00; 
0x0019daa2: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret 3; 
0x0000158a: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret 6; 
0x0019dc62: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret 8; 
0x00073543: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0019eade: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; sub al, 6; add byte ptr [eax], al; ret; 
0x00103735: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5d5b14c4], al; ret; 
0x0014ac49: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00074029: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0014b2ab: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; mov ebp, 0x81fffdea; ret; 
0x0014af5b: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; or eax, 0x81fffdee; ret; 
0x0014ac5b: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; or eax, 0x81fffdf1; ret; 
0x0012a85b: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; or eax, 0x81fffff5; ret; 
0x0014b04b: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81fffded; ret; 
0x0012ee4b: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81ffffaf; ret; 
0x000e01a2: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x000fc1d6: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000a9a29: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x9389; 
0x0000884b: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], dl; add cl, dh; jmp dword ptr [ebp + 0x56]; 
0x0000837b: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], dl; add cl, dh; jmp dword ptr [edx]; 
0x0000841b: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], dl; add cl, dh; jmp edi; 
0x0019e477: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ah; pop es; add byte ptr [eax], al; syscall; 
0x0019eadf: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [esi + eax], ch; add byte ptr [eax], al; ret; 
0x0000158b: add byte ptr [eax], al; add byte ptr [eax], al; add dl, al; push es; add byte ptr [eax], al; ret; 
0x001470cc: add byte ptr [eax], al; add byte ptr [eax], al; add eax, 1; ret; 
0x000a73dc: add byte ptr [eax], al; add byte ptr [eax], al; add eax, 3; ret; 
0x00103736: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x14; pop ebx; pop ebp; ret; 
0x0003f764: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x000ea0d5: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0006bf83: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0012e62f: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x24; pop ebx; pop esi; ret; 
0x000d8435: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; ret; 
0x0018b5ec: add byte ptr [eax], al; add byte ptr [eax], al; and al, 0; add byte ptr [eax], al; hlt; ret; 
0x0019e478: add byte ptr [eax], al; add byte ptr [eax], al; and al, byte ptr [edi]; add byte ptr [eax], al; syscall; 
0x0018b540: add byte ptr [eax], al; add byte ptr [eax], al; and byte ptr [eax], al; add byte ptr [eax], al; dec eax; ret; 
0x0009556c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x00095c7c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edx; ret; 
0x0009557c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, dword ptr [eax + edi + 0x10]; pop edi; ret; 
0x0009558c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, dword ptr [eax + edi + 0x20]; pop edi; ret; 
0x0009555c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, dword ptr [eax + edi - 0x10]; pop edi; ret; 
0x00095c8c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, dword ptr [eax + edx + 0x10]; ret; 
0x00095c9c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, dword ptr [eax + edx + 0x20]; ret; 
0x0009582c: add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x10]; ret; 
0x0009583c: add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x20]; ret; 
0x0009584c: add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x30]; ret; 
0x0012757e: add byte ptr [eax], al; add byte ptr [eax], al; call 0x127000; sub esp, 8; add esp, 0x1c; ret; 
0x0002edfc: add byte ptr [eax], al; add byte ptr [eax], al; call 0x129d77; add ecx, 0x1741ef; mov eax, dword ptr [ecx + 0x58]; ret; 
0x0002319c: add byte ptr [eax], al; add byte ptr [eax], al; call 0x129d77; add ecx, 0x17fe4f; mov eax, dword ptr [ecx + 0xfe4]; ret; 
0x0001af8c: add byte ptr [eax], al; add byte ptr [eax], al; call 0x129d77; add ecx, 0x18805f; mov eax, dword ptr [ecx + 0x36c0]; ret; 
0x000948ac: add byte ptr [eax], al; add byte ptr [eax], al; call 0x129d77; add ecx, 0xc604f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008e90c: add byte ptr [eax], al; add byte ptr [eax], al; call 0x129d77; add ecx, 0xcbe1b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000276ab: add byte ptr [eax], al; add byte ptr [eax], al; call 0x272d0; mov eax, dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x0002ebe2: add byte ptr [eax], al; add byte ptr [eax], al; call 0x2e3f0; add esp, 0x18; pop ebx; ret; 
0x000b934e: add byte ptr [eax], al; add byte ptr [eax], al; call 0xb92e0; add esp, 0x1c; ret; 
0x000eadda: add byte ptr [eax], al; add byte ptr [eax], al; call 0xea460; add esp, 0x28; pop ebx; ret; 
0x0011d94c: add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [eax + 0x14]; 
0x00066c85: add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [eax + 0x24]; 
0x00076f59: add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [eax]; 
0x00076ecf: add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [ebp]; 
0x00074d6c: add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [ecx]; 
0x00074d0d: add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [edx]; 
0x0015188c: add byte ptr [eax], al; add byte ptr [eax], al; call edi; 
0x00150a3c: add byte ptr [eax], al; add byte ptr [eax], al; call esp; 
0x000f0d14: add byte ptr [eax], al; add byte ptr [eax], al; cmovb eax, edx; pop esi; ret; 
0x0009841e: add byte ptr [eax], al; add byte ptr [eax], al; cmove eax, ecx; ret; 
0x00182bfd: add byte ptr [eax], al; add byte ptr [eax], al; cmp al, byte ptr [ecx]; add byte ptr [esp + ebx*2], ch; cld; call dword ptr [ebx]; 
0x0007ad80: add byte ptr [eax], al; add byte ptr [eax], al; cmp eax, -1; cmove eax, edx; add esp, 0x1c; ret; 
0x00187409: add byte ptr [eax], al; add byte ptr [eax], al; dec ebx; push cs; or byte ptr [ebx + 0x40e5902], al; ret; 
0x0002d8a9: add byte ptr [eax], al; add byte ptr [eax], al; fld xword ptr [esp + 0x40]; add esp, 0x7c; ret; 
0x00185759: add byte ptr [eax], al; add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e5902], al; ret; 
0x00189c9d: add byte ptr [eax], al; add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e5a02], al; ret; 
0x0016f451: add byte ptr [eax], al; add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e6102], al; ret; 
0x0019b3e9: add byte ptr [eax], al; add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e6e02], al; ret; 
0x00198221: add byte ptr [eax], al; add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e6f02], al; ret; 
0x00191705: add byte ptr [eax], al; add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e7002], al; ret; 
0x0017d095: add byte ptr [eax], al; add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e7202], al; ret; 
0x0017d705: add byte ptr [eax], al; add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e7802], al; ret; 
0x00190ff1: add byte ptr [eax], al; add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e7a02], al; ret; 
0x0017c91d: add byte ptr [eax], al; add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e7f02], al; ret; 
0x00016ebc: add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x0014849c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [ecx + 0xa]; ret; 
0x001484ac: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [ecx + 0xb]; ret; 
0x001484bc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [ecx + 0xd]; ret; 
0x001484cc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [ecx + 0xe]; ret; 
0x001484dc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [ecx + 0xf]; ret; 
0x0014843c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [ecx + 2]; ret; 
0x0014844c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [ecx + 3]; ret; 
0x0014845c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [ecx + 5]; ret; 
0x0014846c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [ecx + 6]; ret; 
0x0014847c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [ecx + 7]; ret; 
0x001499bc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [ecx + 8]; ret; 
0x0014848c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [ecx + 9]; ret; 
0x0014748c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xa]; pop edi; ret; 
0x0014749c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xb]; pop edi; ret; 
0x001474ac: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xc]; pop edi; ret; 
0x001474bc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xd]; pop edi; ret; 
0x001474cc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xe]; pop edi; ret; 
0x0014740c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 1]; pop edi; ret; 
0x0014741c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 2]; pop edi; ret; 
0x0014742c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 3]; pop edi; ret; 
0x0014743c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 4]; pop edi; ret; 
0x0014744c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 5]; pop edi; ret; 
0x0014745c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 6]; pop edi; ret; 
0x0014746c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 8]; pop edi; ret; 
0x0014747c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 9]; pop edi; ret; 
0x001478ec: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 0xa]; pop edi; ret; 
0x001478dc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 0xb]; pop edi; ret; 
0x001478cc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 0xd]; pop edi; ret; 
0x001478bc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 0xe]; pop edi; ret; 
0x0014795c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 1]; pop edi; ret; 
0x0014794c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 2]; pop edi; ret; 
0x0014793c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 3]; pop edi; ret; 
0x00149c4c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 4]; pop edi; ret; 
0x0014792c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 5]; pop edi; ret; 
0x0014791c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 6]; pop edi; ret; 
0x0014790c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 7]; pop edi; ret; 
0x00149c3c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 8]; pop edi; ret; 
0x001478fc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 9]; pop edi; ret; 
0x001473fc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi]; pop edi; ret; 
0x00148afc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edx + 0xa]; ret; 
0x00148b0c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edx + 0xc]; ret; 
0x00148b1c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edx + 0xd]; ret; 
0x00148b2c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edx + 0xe]; ret; 
0x00148a8c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edx + 1]; ret; 
0x00148a9c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edx + 2]; ret; 
0x00148aac: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edx + 4]; ret; 
0x00148abc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edx + 5]; ret; 
0x00148acc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edx + 6]; ret; 
0x00148adc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edx + 8]; ret; 
0x00148aec: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edx + 9]; ret; 
0x001470c5: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; add eax, 1; ret; 
0x000a73d6: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; add eax, 3; ret; 
0x00148496: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 0xa]; ret; 
0x001484a6: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 0xb]; ret; 
0x001484b6: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 0xd]; ret; 
0x001484c6: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 0xe]; ret; 
0x001484d6: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 0xf]; ret; 
0x00148436: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 2]; ret; 
0x00148446: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 3]; ret; 
0x00148456: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 5]; ret; 
0x00148466: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 6]; ret; 
0x00148476: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 7]; ret; 
0x001499b5: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 8]; ret; 
0x00148486: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 9]; ret; 
0x00147406: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 1]; pop edi; ret; 
0x001473f6: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edi]; pop edi; ret; 
0x00148af6: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 0xa]; ret; 
0x00148b06: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 0xc]; ret; 
0x00148b16: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 0xd]; ret; 
0x00148b26: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 0xe]; ret; 
0x00148a85: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 1]; ret; 
0x00148a96: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 2]; ret; 
0x00148aa6: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 4]; ret; 
0x00148ab6: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 5]; ret; 
0x00148ac6: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 6]; ret; 
0x00148ad6: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 8]; ret; 
0x00148ae6: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 9]; ret; 
0x00087605: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x00073405: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; mov eax, 0xffffffff; ret; 
0x000a73f5: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; mov eax, 1; ret; 
0x001139f5: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; mov eax, 2; ret; 
0x00073455: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x001298f5: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x00087616: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; mov word ptr [ecx], dx; pop ebx; ret; 
0x000875f5: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; pop ebx; ret; 
0x00067905: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; xor eax, eax; ret; 
0x00089b3c: add byte ptr [eax], al; add byte ptr [eax], al; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, dword ptr [edx]; ret; 
0x0008575c: add byte ptr [eax], al; add byte ptr [eax], al; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x00089b4c: add byte ptr [eax], al; add byte ptr [eax], al; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, dword ptr [edx + 1]; ret; 
0x0008576c: add byte ptr [eax], al; add byte ptr [eax], al; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x000915ac: add byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008760c: add byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0006bf7c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x24], 0; add esp, 0x1c; ret; 
0x0006bf75: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x28], 0; mov dword ptr [eax + 0x24], 0; add esp, 0x1c; ret; 
0x0011fc1c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; ret; 
0x000d842e: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; add esp, 8; ret; 
0x000566bb: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ebp - 0x10d0], 0x20; jmp edx; 
0x00073531: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx + 0x18a0], 0; mov dword ptr [ecx + 0x18a4], 0; ret; 
0x0007353b: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx + 0x18a4], 0; ret; 
0x0008764c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x0008766c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x0008765c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x0008763c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; pop ebx; ret; 
0x000e9902: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + 4], 0; ret; 
0x00071fa2: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esi + 0x28], 0; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00032eb1: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 0x14], eax; call ecx; 
0x00099302: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 0xc], ecx; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edi; call esi; 
0x000a5ccc: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 0xc], esi; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], edx; call edi; 
0x00027782: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 4], eax; call 0x276f0; add esp, 0x1c; ret; 
0x00067a95: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 4], eax; mov dword ptr [esp], ebp; call edi; 
0x00098f64: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edi; call esi; 
0x00099692: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edi; mov dword ptr [esp + 8], edx; call esi; 
0x0006d8f7: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x00098ca4: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov eax, dword ptr [eax + 8]; mov dword ptr [esp], eax; call edi; 
0x0007044e: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 4], esi; mov dword ptr [esp + 8], edi; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x000990f4: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 8], eax; mov dword ptr [esp], edi; call esi; 
0x00067c4a: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], edx; call eax; 
0x0002e5cb: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], eax; call 0x2e560; add esp, 0x1c; ret; 
0x00031203: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], eax; call 0x33eb0; add esp, 0x1c; ret; 
0x00031263: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], eax; call 0x33ff0; add esp, 0x1c; ret; 
0x000311db: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], eax; call 0x35ad0; add esp, 0x1c; ret; 
0x000726e6: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], eax; call dword ptr [edx + 0x24]; 
0x0011b59c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], eax; call edx; 
0x0011dc3e: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x14]; 
0x00067e3a: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x0012b29b: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], ebp; mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], ecx; call dword ptr [eax + 0x40]; 
0x00041700: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], ecx; call eax; 
0x00111835: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], edi; call dword ptr [eax + 0x14]; 
0x000b483c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], edi; call esi; 
0x00118ccc: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], edi; mov dword ptr [esp + 0x28], eax; mov eax, dword ptr [esp + 0x44]; call dword ptr [eax + 0x14]; 
0x0006626a: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], edx; call eax; 
0x0011260d: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00113ba1: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x00070b0f: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x00072dd1: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 0x2c]; 
0x0006448f: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 8]; 
0x000b9aa4: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x40; ret; 
0x000f0ae0: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x66; mov ebx, 0x12; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0003f856: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000733ec: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x0007c2f4: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; ret; 
0x00129a64: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 2; add esp, 0xc; ret; 
0x000a740c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 2; ret; 
0x000a741c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 3; ret; 
0x000a742c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 4; ret; 
0x000a743c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 5; ret; 
0x000a744c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 6; ret; 
0x000a745c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 7; ret; 
0x0011e59c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ecx + 4]; mov dword ptr [esp + 4], esi; mov dword ptr [esp], ecx; call dword ptr [eax]; 
0x0014a2ec: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x0011dc7c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [edi + 0xc]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x00127944: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [edx]; add esp, 0xc; ret; 
0x0012bd6c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esi + 0x4c]; mov dword ptr [esp], esi; call dword ptr [eax + 0x44]; 
0x00118bdc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x001195ac: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 0x430]; mov edx, ebx; sub edx, dword ptr [ebx + eax*4 - 0x89a30]; jmp edx; 
0x0014909c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0011f76c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0002702c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0006791c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + 0x28]; ret; 
0x0007345c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x001298fc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0012998c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x0012992c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x000d8a24: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0007346c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; ret; 
0x00097584: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, ebx; sub eax, dword ptr [ebx + edi*4 - 0x10ba60]; jmp eax; 
0x00078784: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, ebx; sub eax, dword ptr [ebx + esi*4 - 0x12a860]; jmp eax; 
0x0014998c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0009416c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop ebx; pop edi; ret; 
0x00147fbc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x0008829c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edx; pop ebx; ret; 
0x0019acfd: add byte ptr [eax], al; add byte ptr [eax], al; mov ebx, 0xa53c0002; clc; jmp dword ptr [edi]; 
0x00023915: add byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0011324a: add byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000fc1d7: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000ecfac: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x30]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x00129be4: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0x79400]; jmp ecx; 
0x00123d04: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, esi; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0011f0b4: add byte ptr [eax], al; add byte ptr [eax], al; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0x20]; 
0x001140d4: add byte ptr [eax], al; add byte ptr [eax], al; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx]; 
0x0011e5e4: add byte ptr [eax], al; add byte ptr [eax], al; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], esi; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x0007c134: add byte ptr [eax], al; add byte ptr [eax], al; mov edx, dword ptr [ebx - 0x78]; mov dword ptr [esp + 0x1c], eax; call dword ptr [edx]; 
0x0011f32c: add byte ptr [eax], al; add byte ptr [eax], al; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0012990c: add byte ptr [eax], al; add byte ptr [eax], al; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x4c], edx; ret; 
0x00071fa9: add byte ptr [eax], al; add byte ptr [eax], al; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000f288c: add byte ptr [eax], al; add byte ptr [eax], al; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0011325c: add byte ptr [eax], al; add byte ptr [eax], al; mov esi, ebx; sub esi, dword ptr [ebx + ecx*4 - 0x8fd88]; jmp esi; 
0x0008762c: add byte ptr [eax], al; add byte ptr [eax], al; mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x0008761c: add byte ptr [eax], al; add byte ptr [eax], al; mov word ptr [ecx], dx; pop ebx; ret; 
0x00089c9c: add byte ptr [eax], al; add byte ptr [eax], al; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, dword ptr [edx + 0xf]; ret; 
0x000858bc: add byte ptr [eax], al; add byte ptr [eax], al; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x0008768c: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000876ac: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000876bc: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x0008769c: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000876cc: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x0008767c: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x0014a2fc: add byte ptr [eax], al; add byte ptr [eax], al; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x00070924: add byte ptr [eax], al; add byte ptr [eax], al; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x44]; 
0x000c1f74: add byte ptr [eax], al; add byte ptr [eax], al; movzx eax, al; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0xe106c]; jmp ecx; 
0x000ac834: add byte ptr [eax], al; add byte ptr [eax], al; movzx eax, al; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0xf67ac]; jmp ecx; 
0x0013ec1c: add byte ptr [eax], al; add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x000cb88c: add byte ptr [eax], al; add byte ptr [eax], al; movzx edx, dl; mov eax, ebx; sub eax, dword ptr [ebx + edx*4 - 0xd7754]; jmp eax; 
0x0019ac8b: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov edx, 0xa18c0002; clc; call dword ptr [esi + 2]; 
0x0007402a: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000875fc: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x0013080c: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; xor eax, eax; ret; 
0x0003f93d: add byte ptr [eax], al; add byte ptr [eax], al; pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x00174bfd: add byte ptr [eax], al; add byte ptr [eax], al; pop edx; add byte ptr [eax], al; mov word ptr [esi - 3], ds; jmp dword ptr [eax]; 
0x0007c909: add byte ptr [eax], al; add byte ptr [eax], al; pop edx; lea ecx, dword ptr [edx + ecx*8 + 0xb]; jmp ecx; 
0x00097eec: add byte ptr [eax], al; add byte ptr [eax], al; pop esi; pop edi; pop ebp; ret; 
0x0009192c: add byte ptr [eax], al; add byte ptr [eax], al; pop esi; ret; 
0x00149b7c: add byte ptr [eax], al; add byte ptr [eax], al; pop esi; xor eax, eax; pop edi; ret; 
0x0015085c: add byte ptr [eax], al; add byte ptr [eax], al; ret 0x1d4; 
0x00150ff4: add byte ptr [eax], al; add byte ptr [eax], al; ret 0x1d5; 
0x0014f864: add byte ptr [eax], al; add byte ptr [eax], al; ret 0x24; 
0x0014fd54: add byte ptr [eax], al; add byte ptr [eax], al; ret 0x33; 
0x0000044a: add byte ptr [eax], al; add byte ptr [eax], al; ret 0x3e00; 
0x0019daa4: add byte ptr [eax], al; add byte ptr [eax], al; ret 3; 
0x0000158c: add byte ptr [eax], al; add byte ptr [eax], al; ret 6; 
0x0019dc64: add byte ptr [eax], al; add byte ptr [eax], al; ret 8; 
0x00019b64: add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00026bff: add byte ptr [eax], al; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], 1; call eax; 
0x0003ebd9: add byte ptr [eax], al; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0014f85c: add byte ptr [eax], al; add byte ptr [eax], al; shl dword ptr [eax + eax], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret 0x24; 
0x0019eae0: add byte ptr [eax], al; add byte ptr [eax], al; sub al, 6; add byte ptr [eax], al; ret; 
0x0017245f: add byte ptr [eax], al; add byte ptr [eax], al; xor al, byte ptr fs:[eax]; add byte ptr [eax], bl; fldpi; call dword ptr [edi]; 
0x00129a74: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x000f723c: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x000a720c: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; pop esi; ret; 
0x0009597c: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0006790c: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x001730e5: add byte ptr [eax], al; add byte ptr [eax], bh; cmp al, byte ptr [eax]; add ch, dl; add ch, ah; call dword ptr [eax]; 
0x0018b835: add byte ptr [eax], al; add byte ptr [eax], bh; mov byte ptr [ecx], 0; mov ah, 0x79; cmc; jmp dword ptr [esi]; 
0x00199335: add byte ptr [eax], al; add byte ptr [eax], bh; mov eax, dword ptr [0x44740002]; clc; jmp dword ptr [edi]; 
0x0013837d: add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x0017c335: add byte ptr [eax], al; add byte ptr [eax], bh; rol dword ptr [eax], 1; add byte ptr [eax + esi*4], dl; out dx, eax; jmp dword ptr [eax + 2]; 
0x0017d219: add byte ptr [eax], al; add byte ptr [eax], bl; add byte ptr [eax], al; adc dl, bh; out dx, eax; jmp dword ptr [edi]; 
0x0017bf2d: add byte ptr [eax], al; add byte ptr [eax], bl; add byte ptr [eax], al; add byte ptr [ecx*8 - 0xc880000], dh; cld; jmp dword ptr [ebx]; 
0x00175ac5: add byte ptr [eax], al; add byte ptr [eax], bl; add byte ptr fs:[eax], al; or bl, ch; out dx, al; call dword ptr [eax]; 
0x0016f315: add byte ptr [eax], al; add byte ptr [eax], bl; add dword ptr [eax], eax; add byte ptr [ebx - 0x16], dl; jmp dword ptr [eax]; 
0x00197315: add byte ptr [eax], al; add byte ptr [eax], bl; add dword ptr [edx], 0xf7bd0400; jmp dword ptr [ebx]; 
0x0019a415: add byte ptr [eax], al; add byte ptr [eax], bl; mov dl, 2; add ah, dl; mov edi, eax; jmp dword ptr [ebx]; 
0x001753b1: add byte ptr [eax], al; add byte ptr [eax], bl; or eax, dword ptr [eax]; add byte ptr [eax], bl; add ebp, esi; call dword ptr [ecx]; 
0x00196015: add byte ptr [eax], al; add byte ptr [eax], bl; outsb dx, byte ptr [esi]; add al, byte ptr [eax]; test byte ptr [ebx - 9], bl; jmp esp; 
0x00199a15: add byte ptr [eax], al; add byte ptr [eax], bl; test al, 2; add byte ptr [ecx + ebx*2 - 8], ah; jmp dword ptr [ecx]; 
0x0018e279: add byte ptr [eax], al; add byte ptr [eax], ch; add byte ptr [eax], al; add byte ptr [eax - 0x53fffe10], al; or al, 0xf6; jmp dword ptr [edx]; 
0x001853d5: add byte ptr [eax], al; add byte ptr [eax], ch; pop ebp; add dword ptr [eax], eax; mov byte ptr [edx - 0xe], al; call dword ptr [eax]; 
0x001730b5: add byte ptr [eax], al; add byte ptr [eax], cl; cmp al, byte ptr [eax]; add ch, dh; add ch, ah; call dword ptr [eax]; 
0x00187b05: add byte ptr [eax], al; add byte ptr [eax], cl; mov dword ptr [ecx], eax; add byte ptr [esp + esi - 0xd], dh; jmp dword ptr [ecx]; 
0x0018b005: add byte ptr [eax], al; add byte ptr [eax], cl; mov esi, 0x46640001; cmc; jmp dword ptr [ebx]; 
0x0017e22d: add byte ptr [eax], al; add byte ptr [eax], dh; lock add byte ptr [eax], al; lodsb al, byte ptr [esi]; cmp eax, esi; jmp edi; 
0x0018b42d: add byte ptr [eax], al; add byte ptr [eax], dh; ret 1; 
0x0018b32d: add byte ptr [eax], al; add byte ptr [eax], dh; rol dword ptr [ecx], 0; fcom qword ptr [esi - 0xb]; call dword ptr [ebx]; 
0x0007dcb7: add byte ptr [eax], al; add byte ptr [eax], dl; add byte ptr [esi + eax - 0x73], dh; cmp dword ptr [edi + edx*8 - 8], -1; pop ebx; ret; 
0x0019940d: add byte ptr [eax], al; add byte ptr [eax], dl; mov byte ptr [0x4abc0002], al; clc; call edx; 
0x00179fbd: add byte ptr [eax], al; add byte ptr [eax], dl; test eax, 0x95a20000; out dx, eax; call dword ptr [eax]; 
0x0019230d: add byte ptr [eax], al; add byte ptr [eax], dl; xor dword ptr [edx], eax; add ah, bl; fdivr st(6), st(0); jmp dword ptr [ecx]; 
0x001312ba: add byte ptr [eax], al; add byte ptr [ebp + 0x11], dh; pop ebx; ret; 
0x000b8185: add byte ptr [eax], al; add byte ptr [ebp + 0x14], dh; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000e8095: add byte ptr [eax], al; add byte ptr [ebp + 0x1c], dh; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x000e8145: add byte ptr [eax], al; add byte ptr [ebp + 0x1c], dh; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000deb75: add byte ptr [eax], al; add byte ptr [ebp + 0x1c], dh; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0009e779: add byte ptr [eax], al; add byte ptr [ebp + 0x248c8bc9], al; add byte ptr [eax], 0; add byte ptr [edi], cl; xchg eax, esp; ret 0xed31; 
0x001470c6: add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; add eax, 1; ret; 
0x001499b6: add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [ecx + 8]; ret; 
0x00148a86: add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edx + 1]; ret; 
0x00087606: add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x00073406: add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x000a73f6: add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 1; ret; 
0x001139f6: add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 2; ret; 
0x00073456: add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x001298f6: add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x000875f6: add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; pop ebx; ret; 
0x00067906: add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; xor eax, eax; ret; 
0x00146db0: add byte ptr [eax], al; add byte ptr [ebp + 0x2b], dh; pop ebx; ret; 
0x00113110: add byte ptr [eax], al; add byte ptr [ebp + 0x311174c0], al; ror byte ptr [ebx - 0x74ebdb8c], 0x7c; and al, 0x18; add esp, 0x1c; ret; 
0x00132aee: add byte ptr [eax], al; add byte ptr [ebp + 0x3d], dh; pop ebx; ret; 
0x00131286: add byte ptr [eax], al; add byte ptr [ebp + 0x45], dh; pop ebx; ret; 
0x0001bd22: add byte ptr [eax], al; add byte ptr [ebp + 0x6b2674d2], al; ret 0x893c; 
0x00038a3d: add byte ptr [eax], al; add byte ptr [ebp + 0x75168bd2], al; sbb dh, dh; ret 0x7501; 
0x00116272: add byte ptr [eax], al; add byte ptr [ebp + 0x842494], cl; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 4]; 
0x000b9045: add byte ptr [eax], al; add byte ptr [ebp + 0xb68dc0], al; add byte ptr [eax], al; add byte ptr [ebp - 0x14], dh; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x0014ab67: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add bl, dh; ret; 
0x000a7137: add byte ptr [eax], al; add byte ptr [ebp + 0xbf], cl; add byte ptr [ebx + 0x4f391c4e], cl; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x00126f47: add byte ptr [eax], al; add byte ptr [ebp + 0xbf], cl; add byte ptr [ebx - 0x18], dl; sbb eax, 0x8100002e; ret; 
0x00087647: add byte ptr [eax], al; add byte ptr [ebp + 0xbf], cl; add byte ptr [ecx + 0x4518811], cl; pop ebx; ret; 
0x00147067: add byte ptr [eax], al; add byte ptr [ebp + 0xbf], cl; add dh, dh; ret 0x7510; 
0x00132b22: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; pop ebx; ret; 
0x0018b7b1: add byte ptr [eax], al; add byte ptr [ebp + eax*8 + 0x6fc80001], dh; cmc; jmp dword ptr [edi + 3]; 
0x00189f51: add byte ptr [eax], al; add byte ptr [ebp + ebp*4 + 1], dl; add byte ptr [eax - 0x1a], ch; hlt; jmp dword ptr [esi]; 
0x000da96d: add byte ptr [eax], al; add byte ptr [ebp + ecx - 0x7d], dh; ret 0x8901; 
0x0019afa9: add byte ptr [eax], al; add byte ptr [ebp + edi*4 - 0x4a7ffffe], ch; clc; jmp dword ptr [eax]; 
0x00198779: add byte ptr [eax], al; add byte ptr [ebp + edx*4 + 2], bh; add byte ptr [eax + 0x19], ah; clc; call edx; 
0x000b904d: add byte ptr [eax], al; add byte ptr [ebp - 0x14], dh; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000b9d02: add byte ptr [eax], al; add byte ptr [ebp - 0x2776ff8a], cl; sub eax, dword ptr [ebx + esi*4 - 0xe92e0]; jmp eax; 
0x000f7a43: add byte ptr [eax], al; add byte ptr [ebp - 0x3b7bf037], al; add byte ptr [eax], al; add byte ptr [ebx + 0x518b1445], cl; adc al, 0x39; ret 0xa7d; 
0x0007fd4d: add byte ptr [eax], al; add byte ptr [ebp - 0x3dbaf00a], al; add esp, 0x18; pop esi; ret; 
0x0010996d: add byte ptr [eax], al; add byte ptr [ebp - 0x42f0c6d], cl; dec dword ptr [ecx - 0x72cbdbac]; xchg eax, ebx; call eax; 
0x000fdbae: add byte ptr [eax], al; add byte ptr [ebp - 0x433c87d], cl; dec dword ptr [ecx - 0x5e17dbfc]; inc ebp; inc dword ptr [ebp - 0x76eb8b40]; ret 0x848b; 
0x0010d721: add byte ptr [eax], al; add byte ptr [ebp - 0x444216d], cl; jmp dword ptr [esi - 0x3f]; 
0x000f0de1: add byte ptr [eax], al; add byte ptr [ebp - 0x4fb88a40], al; or ecx, dword ptr [ecx - 0x76e3dba4]; ret; 
0x0004b4a3: add byte ptr [eax], al; add byte ptr [ebp - 0x57c2fb0], cl; or dword ptr [edi], ecx; xchg eax, edi; ret 0xe083; 
0x00149acd: add byte ptr [eax], al; add byte ptr [ebp - 0x677af02e], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x00098957: add byte ptr [eax], al; add byte ptr [ebp - 0x736c7240], al; sbb al, byte ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x00064fac: add byte ptr [eax], al; add byte ptr [ebp - 0x74f48b2e], al; sbb dword ptr [eax - 0x77000000], 0xd2ff2404; add esp, 0x1c; ret; 
0x0004a1f8: add byte ptr [eax], al; add byte ptr [ebp - 0x75], ah; add byte ptr [edi], cl; cwde; ret 0x4489; 
0x0004a5ef: add byte ptr [eax], al; add byte ptr [ebp - 0x75], ah; add byte ptr [edi], cl; cwde; ret 0x44f6; 
0x000b7e22: add byte ptr [eax], al; add byte ptr [ebp - 0x76b88a01], al; call 0x1c2fdab8; mov ebx, eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000c5995: add byte ptr [eax], al; add byte ptr [ebp - 0x76b88a40], al; call 0x1c30b62b; mov ebx, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000c5a75: add byte ptr [eax], al; add byte ptr [ebp - 0x76b88a40], al; call 0x1c30b70b; mov ebx, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000f0b75: add byte ptr [eax], al; add byte ptr [ebp - 0x76b88a40], al; call 0x1c33680b; mov ebx, eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x000ce9dd: add byte ptr [eax], al; add byte ptr [ebp - 0x76d38740], al; ret 0x4e8b; 
0x000baca1: add byte ptr [eax], al; add byte ptr [ebp - 0x76ffd98c], cl; fsubr dword ptr [ebx]; test byte ptr [ebx - 0xe8340], dh; jmp eax; 
0x000ff0dd: add byte ptr [eax], al; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x000de917: add byte ptr [eax], al; add byte ptr [ebp - 0x78d08a40], al; fistp qword ptr [eax + 0x127]; call dword ptr gs:[0x10]; 
0x000f0c51: add byte ptr [eax], al; add byte ptr [ebp - 0x78d08a40], al; fistp qword ptr [eax + 0x159]; call dword ptr gs:[0x10]; 
0x000e6d69: add byte ptr [eax], al; add byte ptr [ebp - 0x78d48a40], al; fistp qword ptr [eax + 0x91]; call dword ptr gs:[0x10]; 
0x000e6e29: add byte ptr [eax], al; add byte ptr [ebp - 0x78d48a40], al; fistp qword ptr [eax + 0x92]; call dword ptr gs:[0x10]; 
0x000e0c19: add byte ptr [eax], al; add byte ptr [ebp - 0x78d48a40], al; fistp qword ptr [eax + 0xa8]; call dword ptr gs:[0x10]; 
0x000df129: add byte ptr [eax], al; add byte ptr [ebp - 0x78d48a40], al; fistp qword ptr [eax + 0xdd]; call dword ptr gs:[0x10]; 
0x0006a648: add byte ptr [eax], al; add byte ptr [ebp - 0x7ae38a37], al; jmp dword ptr [esi - 0x43]; 
0x00087a4d: add byte ptr [eax], al; add byte ptr [ebp - 0x7cc78a40], al; ret; 
0x000d0b65: add byte ptr [eax], al; add byte ptr [ebp - 0x7ceb8b2e], al; ret 0x8d04; 
0x000b9a78: add byte ptr [eax], al; add byte ptr [ebp - 0x7d], ah; cmp ah, byte ptr [esi]; mov edx, 0xffffffff; cmovne eax, edx; ret; 
0x000de7ef: add byte ptr [eax], al; add byte ptr [ebp - 0x7fd18a40], al; int 0x80; 
0x000de7ef: add byte ptr [eax], al; add byte ptr [ebp - 0x7fd18a40], al; int 0x80; xchg edi, ebx; mov eax, 5; call dword ptr gs:[0x10]; 
0x00023342: add byte ptr [eax], al; add byte ptr [ebp - 0xe76ff8a], cl; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x00098071: add byte ptr [eax], al; add byte ptr [ebp - 0xe], dh; pop esi; pop edi; pop ebp; ret; 
0x000b85ca: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; mov eax, 1; int 0x80; 
0x000de568: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; ret; 
0x000b9082: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x000eedea: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; xchg ebx, ecx; ret; 
0x000f04ce: add byte ptr [eax], al; add byte ptr [ebx + 0x10], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f04f5: add byte ptr [eax], al; add byte ptr [ebx + 0x10], bh; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f03ce: add byte ptr [eax], al; add byte ptr [ebx + 0x11], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f03f5: add byte ptr [eax], al; add byte ptr [ebx + 0x11], bh; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00122dea: add byte ptr [eax], al; add byte ptr [ebx + 0x1274fff8], al; mov ecx, eax; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x001219d6: add byte ptr [eax], al; add byte ptr [ebx + 0x1274fffa], al; mov ecx, edx; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000f0a6e: add byte ptr [eax], al; add byte ptr [ebx + 0x12], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0a95: add byte ptr [eax], al; add byte ptr [ebx + 0x12], bh; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0004b2c2: add byte ptr [eax], al; add byte ptr [ebx + 0x1682454], cl; ret 0x5489; 
0x0014805d: add byte ptr [eax], al; add byte ptr [ebx + 0x1b720eea], al; lea eax, dword ptr [edi + 0xd]; pop edi; ret; 
0x0014907d: add byte ptr [eax], al; add byte ptr [ebx + 0x1b720eef], al; lea eax, dword ptr [eax + 0xd]; pop edi; ret; 
0x0014871d: add byte ptr [eax], al; add byte ptr [ebx + 0x1b7c0ec2], al; lea eax, dword ptr [ecx + 0xe]; ret; 
0x00118f32: add byte ptr [eax], al; add byte ptr [ebx + 0x1c42484], cl; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x00111889: add byte ptr [eax], al; add byte ptr [ebx + 0x20508b02], cl; mov dword ptr [esp + 4], edi; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x001163c5: add byte ptr [eax], al; add byte ptr [ebx + 0x20508b02], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x000c3488: add byte ptr [eax], al; add byte ptr [ebx + 0x244c890a], cl; cmp byte ptr [edi], cl; mov dh, 0x4a; add al, 0x83; ret 0x8305; 
0x00112a82: add byte ptr [eax], al; add byte ptr [ebx + 0x289c2484], cl; add byte ptr [eax], al; lea edx, dword ptr [esp + 0x2898]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x0014804d: add byte ptr [eax], al; add byte ptr [ebx + 0x2b720dea], al; lea eax, dword ptr [edi + 0xc]; pop edi; ret; 
0x0014906d: add byte ptr [eax], al; add byte ptr [ebx + 0x2b720def], al; lea eax, dword ptr [eax + 0xc]; pop edi; ret; 
0x0014870d: add byte ptr [eax], al; add byte ptr [ebx + 0x2b7c0dc2], al; lea eax, dword ptr [ecx + 0xd]; ret; 
0x000ddc0c: add byte ptr [eax], al; add byte ptr [ebx + 0x347401fe], al; lea ecx, dword ptr [esp + 0x10]; xchg ebx, edx; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ddd8c: add byte ptr [eax], al; add byte ptr [ebx + 0x347401fe], al; lea ecx, dword ptr [esp + 0x10]; xchg ebx, edx; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000ddccc: add byte ptr [eax], al; add byte ptr [ebx + 0x347401fe], al; lea ecx, dword ptr [esp + 0x10]; xchg ebx, edx; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x0006d4a0: add byte ptr [eax], al; add byte ptr [ebx + 0x34890c40], cl; and al, 0x29; ret 0xfac1; 
0x0014803d: add byte ptr [eax], al; add byte ptr [ebx + 0x3b720bea], al; lea eax, dword ptr [edi + 0xa]; pop edi; ret; 
0x0014905d: add byte ptr [eax], al; add byte ptr [ebx + 0x3b720bef], al; lea eax, dword ptr [eax + 0xa]; pop edi; ret; 
0x001486fd: add byte ptr [eax], al; add byte ptr [ebx + 0x3b7c0bc2], al; lea eax, dword ptr [ecx + 0xb]; ret; 
0x001195ad: add byte ptr [eax], al; add byte ptr [ebx + 0x4302484], cl; add byte ptr [eax], al; mov edx, ebx; sub edx, dword ptr [ebx + eax*4 - 0x89a30]; jmp edx; 
0x000bcb34: add byte ptr [eax], al; add byte ptr [ebx + 0x440f01c0], al; ret 0xe289; 
0x0007ad81: add byte ptr [eax], al; add byte ptr [ebx + 0x440ffff8], al; ret 0xc483; 
0x0012b325: add byte ptr [eax], al; add byte ptr [ebx + 0x452b0845], cl; add al, 0x89; ret 0xfac1; 
0x000b4f10: add byte ptr [eax], al; add byte ptr [ebx + 0x458bd04d], cl; mov esp, 0x8b900c89; dec ebp; or al, 0x83; ret 0x8901; 
0x00069525: add byte ptr [eax], al; add byte ptr [ebx + 0x468b0c4e], cl; or byte ptr [ecx + 0x29cd29d5], cl; ret 0xe75; 
0x0007298d: add byte ptr [eax], al; add byte ptr [ebx + 0x4892056], cl; and al, 0x29; ret 0xc281; 
0x0014802d: add byte ptr [eax], al; add byte ptr [ebx + 0x4b720aea], al; lea eax, dword ptr [edi + 9]; pop edi; ret; 
0x0014904d: add byte ptr [eax], al; add byte ptr [ebx + 0x4b720aef], al; lea eax, dword ptr [eax + 9]; pop edi; ret; 
0x001486ed: add byte ptr [eax], al; add byte ptr [ebx + 0x4b7c0ac2], al; lea eax, dword ptr [ecx + 0xa]; ret; 
0x0011f0b5: add byte ptr [eax], al; add byte ptr [ebx + 0x4c890450], cl; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0x20]; 
0x001140d5: add byte ptr [eax], al; add byte ptr [ebx + 0x4c890450], cl; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx]; 
0x000a713d: add byte ptr [eax], al; add byte ptr [ebx + 0x4f391c4e], cl; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000a71bd: add byte ptr [eax], al; add byte ptr [ebx + 0x4f39344e], cl; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x000f7a4b: add byte ptr [eax], al; add byte ptr [ebx + 0x518b1445], cl; adc al, 0x39; ret 0xa7d; 
0x0014801d: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7209ea], al; lea eax, dword ptr [edi + 8]; pop edi; ret; 
0x0014903d: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7209ef], al; lea eax, dword ptr [eax + 8]; pop edi; ret; 
0x001486dd: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7c09c2], al; lea eax, dword ptr [ecx + 9]; ret; 
0x00103737: add byte ptr [eax], al; add byte ptr [ebx + 0x5d5b14c4], al; ret; 
0x0007af9d: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000bb19e: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0003f765: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0012e630: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x0012e530: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; neg eax; ret; 
0x000d0e93: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 0x10; 
0x000da152: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 0x14; 
0x0012e4b4: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 0x18; 
0x0001acf5: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 0xc; 
0x000ab63f: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 8; 
0x0001f144: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0009528d: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; xor eax, eax; ret; 
0x00055c45: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0014909d: add byte ptr [eax], al; add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x0007fe22: add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e10c4], al; pop ebp; ret; 
0x000ca514: add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e30c4], al; pop ebp; ret 0xc; 
0x000cef8c: add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e30c4], al; pop ebp; ret 8; 
0x000b9938: add byte ptr [eax], al; add byte ptr [ebx + 0x65], bl; cmp dword ptr [edx], 0x26; mov edx, 0xffffffff; cmovne eax, edx; ret; 
0x000d8a25: add byte ptr [eax], al; add byte ptr [ebx + 0x66042444], cl; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0014800d: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7207ea], al; lea eax, dword ptr [edi + 6]; pop edi; ret; 
0x0014902d: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7207ef], al; lea eax, dword ptr [eax + 6]; pop edi; ret; 
0x001486cd: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7c07c2], al; lea eax, dword ptr [ecx + 7]; ret; 
0x001118bd: add byte ptr [eax], al; add byte ptr [ebx + 0x6c8d1046], cl; and al, 0x24; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x0011e59d: add byte ptr [eax], al; add byte ptr [ebx + 0x74890441], cl; and al, 4; mov dword ptr [esp], ecx; call dword ptr [eax]; 
0x0011e5e5: add byte ptr [eax], al; add byte ptr [ebx + 0x74890450], cl; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x0011324b: add byte ptr [eax], al; add byte ptr [ebx + 0x748b241c], cl; and al, 4; add esp, 8; ret; 
0x001160a5: add byte ptr [eax], al; add byte ptr [ebx + 0x748b241c], cl; and al, 4; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x001207f0: add byte ptr [eax], al; add byte ptr [ebx + 0x74ffa87d], al; adc ecx, dword ptr [ebx - 0x347857b3]; mov eax, 6; call dword ptr gs:[0x10]; 
0x001222a5: add byte ptr [eax], al; add byte ptr [ebx + 0x74ffb07d], al; adc ecx, dword ptr [ebx - 0x34784fb3]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000b09a9: add byte ptr [eax], al; add byte ptr [ebx + 0x758b144d], cl; or al, 0xe8; mov esp, 0x81000793; ret; 
0x00048e69: add byte ptr [eax], al; add byte ptr [ebx + 0x7c891c40], cl; and al, 8; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call eax; 
0x000f288d: add byte ptr [eax], al; add byte ptr [ebx + 0x7c8b2434], cl; and al, 4; add esp, 8; ret; 
0x000cb5bd: add byte ptr [eax], al; add byte ptr [ebx + 0x7c8b2434], cl; and al, 4; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000196d3: add byte ptr [eax], al; add byte ptr [ebx + 0x8424b4], cl; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x88]; add esp, 0x8c; ret; 
0x000987c9: add byte ptr [eax], al; add byte ptr [ebx + 0x8424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x88]; add esp, 0x8c; ret; 
0x000987d0: add byte ptr [eax], al; add byte ptr [ebx + 0x8824ac], cl; add byte ptr [eax], al; add esp, 0x8c; ret; 
0x000196da: add byte ptr [eax], al; add byte ptr [ebx + 0x8824bc], cl; add byte ptr [eax], al; add esp, 0x8c; ret; 
0x000e3cdf: add byte ptr [eax], al; add byte ptr [ebx + 0x9424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x98]; add esp, 0x9c; ret 4; 
0x00023315: add byte ptr [eax], al; add byte ptr [ebx + 0x9424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x98]; add esp, 0x9c; ret; 
0x000e3ce6: add byte ptr [eax], al; add byte ptr [ebx + 0x9824ac], cl; add byte ptr [eax], al; add esp, 0x9c; ret 4; 
0x0002331c: add byte ptr [eax], al; add byte ptr [ebx + 0x9824ac], cl; add byte ptr [eax], al; add esp, 0x9c; ret; 
0x0002f219: add byte ptr [eax], al; add byte ptr [ebx + 0x9824bc], cl; add byte ptr [eax], al; add esp, 0x9c; ret; 
0x0006f6f3: add byte ptr [eax], al; add byte ptr [ebx + 0xa424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xa8]; add esp, 0xac; ret; 
0x0006f6fa: add byte ptr [eax], al; add byte ptr [ebx + 0xa824ac], cl; add byte ptr [eax], al; add esp, 0xac; ret; 
0x0002e849: add byte ptr [eax], al; add byte ptr [ebx + 0xa824bc], cl; add byte ptr [eax], al; add esp, 0xac; ret; 
0x000f02ce: add byte ptr [eax], al; add byte ptr [ebx + 0xa], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f02f5: add byte ptr [eax], al; add byte ptr [ebx + 0xa], bh; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000e1723: add byte ptr [eax], al; add byte ptr [ebx + 0xb424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xb8]; add esp, 0xbc; ret 8; 
0x0014806d: add byte ptr [eax], al; add byte ptr [ebx + 0xb720fea], al; lea eax, dword ptr [edi + 0xe]; pop edi; ret; 
0x0014908d: add byte ptr [eax], al; add byte ptr [ebx + 0xb720fef], al; lea eax, dword ptr [eax + 0xe]; pop edi; ret; 
0x0014872d: add byte ptr [eax], al; add byte ptr [ebx + 0xb7c0fc2], al; lea eax, dword ptr [ecx + 0xf]; ret; 
0x000e172a: add byte ptr [eax], al; add byte ptr [ebx + 0xb824ac], cl; add byte ptr [eax], al; add esp, 0xbc; ret 8; 
0x000f054e: add byte ptr [eax], al; add byte ptr [ebx + 0xb], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0575: add byte ptr [eax], al; add byte ptr [ebx + 0xb], bh; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000672c9: add byte ptr [eax], al; add byte ptr [ebx + 0xc424b4], cl; add byte ptr [eax], al; mov edi, dword ptr [esp + 0xc8]; add esp, 0xcc; ret; 
0x000de307: add byte ptr [eax], al; add byte ptr [ebx + 0xc424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xc8]; add esp, 0xcc; ret; 
0x000de30e: add byte ptr [eax], al; add byte ptr [ebx + 0xc824ac], cl; add byte ptr [eax], al; add esp, 0xcc; ret; 
0x000672d0: add byte ptr [eax], al; add byte ptr [ebx + 0xc824bc], cl; add byte ptr [eax], al; add esp, 0xcc; ret; 
0x000f034e: add byte ptr [eax], al; add byte ptr [ebx + 0xc], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0375: add byte ptr [eax], al; add byte ptr [ebx + 0xc], bh; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00127945: add byte ptr [eax], al; add byte ptr [ebx + 0xcc48302], cl; ret; 
0x0006d7c0: add byte ptr [eax], al; add byte ptr [ebx + 0xd424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xd8]; add esp, 0xdc; ret; 
0x0006d7c7: add byte ptr [eax], al; add byte ptr [ebx + 0xd824ac], cl; add byte ptr [eax], al; add esp, 0xdc; ret; 
0x000f0604: add byte ptr [eax], al; add byte ptr [ebx + 0xd], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000695c6: add byte ptr [eax], al; add byte ptr [ebx + 0xe024b4], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xe8]; add esp, 0xec; ret; 
0x00068f4b: add byte ptr [eax], al; add byte ptr [ebx + 0xe424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xe8]; add esp, 0xec; ret; 
0x00068f52: add byte ptr [eax], al; add byte ptr [ebx + 0xe824ac], cl; add byte ptr [eax], al; add esp, 0xec; ret; 
0x000f05c4: add byte ptr [eax], al; add byte ptr [ebx + 0xe], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0018740a: add byte ptr [eax], al; add byte ptr [ebx + 0xe], cl; or byte ptr [ebx + 0x40e5902], al; ret; 
0x0012628a: add byte ptr [eax], al; add byte ptr [ebx + 0xee083], cl; add byte ptr [ecx], dh; in eax, dx; call dword ptr [eax + 0x14]; 
0x000de47b: add byte ptr [eax], al; add byte ptr [ebx + 0xf424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xf8]; add esp, 0xfc; ret; 
0x000de482: add byte ptr [eax], al; add byte ptr [ebx + 0xf824ac], cl; add byte ptr [eax], al; add esp, 0xfc; ret; 
0x000f0244: add byte ptr [eax], al; add byte ptr [ebx + 0xf], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000a3a31: add byte ptr [eax], al; add byte ptr [ebx + 0xff68532], cl; test ah, cl; add byte ptr [eax], al; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x000f0644: add byte ptr [eax], al; add byte ptr [ebx + 1], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0019df99: add byte ptr [eax], al; add byte ptr [ebx + 2], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000f0104: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f014e: add byte ptr [eax], al; add byte ptr [ebx + 3], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0175: add byte ptr [eax], al; add byte ptr [ebx + 3], bh; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0284: add byte ptr [eax], al; add byte ptr [ebx + 4], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f008e: add byte ptr [eax], al; add byte ptr [ebx + 5], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f00b5: add byte ptr [eax], al; add byte ptr [ebx + 5], bh; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0204: add byte ptr [eax], al; add byte ptr [ebx + 6], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f01c4: add byte ptr [eax], al; add byte ptr [ebx + 7], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0684: add byte ptr [eax], al; add byte ptr [ebx + 8], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f044e: add byte ptr [eax], al; add byte ptr [ebx + 9], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0475: add byte ptr [eax], al; add byte ptr [ebx + 9], bh; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00173511: add byte ptr [eax], al; add byte ptr [ebx + eax*2], dl; add byte ptr [eax], al; test al, 8; in al, dx; call dword ptr [esi]; 
0x0017ba41: add byte ptr [eax], al; add byte ptr [ebx + eax*8 - 0xe2f0000], dl; out dx, eax; call dword ptr [eax]; 
0x00199d71: add byte ptr [eax], al; add byte ptr [ebx + ebp*4 + 2], dh; add byte ptr [eax + 0x5e], cl; clc; jmp dword ptr [ebx]; 
0x00199d39: add byte ptr [eax], al; add byte ptr [ebx + ebp*4], bh; add al, byte ptr [eax]; and byte ptr [esi - 8], bl; jmp dword ptr [ebx]; 
0x00184d01: add byte ptr [eax], al; add byte ptr [ebx + ebx*2], al; add dword ptr [eax], eax; test al, 0xda; cli; call dword ptr [ecx + 3]; 
0x00178d81: add byte ptr [eax], al; add byte ptr [ebx + ebx*4 + 0x37a80000], al; out dx, eax; call dword ptr [edx]; 
0x00188d29: add byte ptr [eax], al; add byte ptr [ebx + ebx*4], ch; add dword ptr [eax], eax; push eax; and esp, esi; jmp dword ptr [edi]; 
0x00170d21: add byte ptr [eax], al; add byte ptr [ebx + ebx], ah; add byte ptr [eax], al; sub byte ptr [ebx - 0x15], ah; call dword ptr [ebx]; 
0x001941d9: add byte ptr [eax], al; add byte ptr [ebx + ecx*2], ch; add al, byte ptr [eax]; push ebp; sbb dh, bh; call dword ptr [eax]; 
0x00182d81: add byte ptr [eax], al; add byte ptr [ebx + edi + 0x2f380001], al; int1; call dword ptr [esi]; 
0x0017b231: add byte ptr [eax], al; add byte ptr [ebx + edi*4 - 0x8930000], al; out dx, eax; call dword ptr [eax]; 
0x0017b261: add byte ptr [eax], al; add byte ptr [ebx + edi*4 - 0x8b30000], dh; out dx, eax; call dword ptr [eax]; 
0x0017b1d1: add byte ptr [eax], al; add byte ptr [ebx + edi*4], ah; add byte ptr [eax], al; lodsd eax, dword ptr [esi]; imul edi; call dword ptr [eax]; 
0x0017ad39: add byte ptr [eax], al; add byte ptr [ebx + edi*4], bh; add byte ptr [eax], al; rol byte ptr [edi], 1; sti; jmp edx; 
0x00184539: add byte ptr [eax], al; add byte ptr [ebx + edx*2], bh; add dword ptr [eax], eax; cmp bh, 0xf1; call edi; 
0x0017c5a1: add byte ptr [eax], al; add byte ptr [ebx + edx*8 - 0x36680000], ah; out dx, eax; call edi; 
0x00190529: add byte ptr [eax], al; add byte ptr [ebx + edx], ch; add al, byte ptr [eax]; add byte ptr [eax - 0xa], bl; jmp dword ptr [ebx]; 
0x00056f10: add byte ptr [eax], al; add byte ptr [ebx - 0x105b43], cl; dec dword ptr [edi]; dec ebp; ret 0xc701; 
0x000ac4b7: add byte ptr [eax], al; add byte ptr [ebx - 0x10e36d], cl; inc dword ptr [eax - 0x7bf0ffc6]; ret; 
0x000b6689: add byte ptr [eax], al; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x000ff0f9: add byte ptr [eax], al; add byte ptr [ebx - 0x12f75], cl; jmp dword ptr [ebp - 0x75]; 
0x000f631e: add byte ptr [eax], al; add byte ptr [ebx - 0x12f7d], cl; jmp dword ptr [ebp - 0x75]; 
0x00040c15: add byte ptr [eax], al; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x00076e19: add byte ptr [eax], al; add byte ptr [ebx - 0x15b55], cl; dec dword ptr [ecx + 0x54892414]; and al, 0x28; call dword ptr [ebp]; 
0x00076cd4: add byte ptr [eax], al; add byte ptr [ebx - 0x15b7d], cl; dec dword ptr [ecx + 0x54892414]; and al, 0x28; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x00079267: add byte ptr [eax], al; add byte ptr [ebx - 0x16a4e73c], al; in eax, dx; ret 0xffff; 
0x0002b72a: add byte ptr [eax], al; add byte ptr [ebx - 0x17b3dbb4], cl; cmp eax, 0x81000fe6; ret; 
0x000dd66c: add byte ptr [eax], al; add byte ptr [ebx - 0x17c7dbbc], cl; cwde; ret; 
0x00113a2d: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; cmp eax, 0x81000163; ret; 
0x0010e52d: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; cmp eax, 0x810001b8; ret; 
0x000f5d2d: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; cmp eax, 0x81000340; ret; 
0x0006be2d: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; cmp eax, 0x81000bdf; ret; 
0x0010c6ad: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; mov ebp, 0x810001d6; ret; 
0x000f47ad: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; mov ebp, 0x81000355; ret; 
0x000eb4ad: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; mov ebp, 0x810003e8; ret; 
0x00099aad: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; mov ebp, 0x81000902; ret; 
0x00033ead: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; mov ebp, 0x81000f5e; ret; 
0x00032dad: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; mov ebp, 0x81000f6f; ret; 
0x0014b2ad: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; mov ebp, 0x81fffdea; ret; 
0x0011995d: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; or eax, 0x81000104; ret; 
0x000eb45d: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; or eax, 0x810003e9; ret; 
0x0007be5d: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; or eax, 0x81000adf; ret; 
0x0002385d: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; or eax, 0x81001065; ret; 
0x0014b35d: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; or eax, 0x81fffdea; ret; 
0x0014af5d: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; or eax, 0x81fffdee; ret; 
0x0014ac5d: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; or eax, 0x81fffdf1; ret; 
0x0012a85d: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; or eax, 0x81fffff5; ret; 
0x00128b4d: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000012; ret; 
0x00126f4d: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sbb eax, 0x8100002e; ret; 
0x000fe84d: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sbb eax, 0x810002b5; ret; 
0x000ea04d: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sbb eax, 0x810003fd; ret; 
0x000e8a4d: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000413; ret; 
0x000b5c4d: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000741; ret; 
0x00099b4d: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000902; ret; 
0x00033f4d: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000f5e; ret; 
0x00032d4d: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000f70; ret; 
0x00026c4d: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81001031; ret; 
0x0014b04d: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81fffded; ret; 
0x0012ee4d: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81ffffaf; ret; 
0x0010f33d: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sub eax, 0x810001aa; ret; 
0x000c5c3d: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sub eax, 0x81000641; ret; 
0x0002ac45: add byte ptr [eax], al; add byte ptr [ebx - 0x1ab4b], cl; jmp dword ptr [esi - 0x70]; 
0x0011fa8b: add byte ptr [eax], al; add byte ptr [ebx - 0x2f76d73c], al; pop ebx; ret; 
0x00124a6d: add byte ptr [eax], al; add byte ptr [ebx - 0x2f76e73c], al; pop ebx; ret; 
0x000ecfad: add byte ptr [eax], al; add byte ptr [ebx - 0x34782fb3], cl; mov eax, 6; call dword ptr gs:[0x10]; 
0x000f15ac: add byte ptr [eax], al; add byte ptr [ebx - 0x3fb73], cl; inc dword ptr [edi + 0x92b8df]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000429a2: add byte ptr [eax], al; add byte ptr [ebx - 0x4af6b], cl; ljmp ptr [ecx]; ret 0xbd83; 
0x0019acfe: add byte ptr [eax], al; add byte ptr [ebx - 0x5ac3fffe], bh; clc; jmp dword ptr [edi]; 
0x00064d7b: add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov eax, 0x5b000000; ret; 
0x0014867d: add byte ptr [eax], al; add byte ptr [ebx - 0x73f0fe3e], al; mov bh, 0; add byte ptr [eax], al; lea eax, dword ptr [ecx + 1]; ret; 
0x00035ccd: add byte ptr [eax], al; add byte ptr [ebx - 0x74abdbbc], cl; push ebp; add byte ptr [ebp - 0x9ea8a40], al; ret 0x7501; 
0x0012990d: add byte ptr [eax], al; add byte ptr [ebx - 0x74f7dbac], cl; inc esp; and al, 4; mov dword ptr [eax + 0x4c], edx; ret; 
0x001298fd: add byte ptr [eax], al; add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; dec esp; ret; 
0x0012992d: add byte ptr [eax], al; add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; pop esp; ret; 
0x0012998d: add byte ptr [eax], al; add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; push esp; ret; 
0x000d25fe: add byte ptr [eax], al; add byte ptr [ebx - 0x76abdbbc], cl; ret 0xc283; 
0x000dc0da: add byte ptr [eax], al; add byte ptr [ebx - 0x76d3db94], cl; ret 0x748b; 
0x00124aab: add byte ptr [eax], al; add byte ptr [ebx - 0x76dfdbbc], cl; add al, 0x24; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 0x10]; 
0x00118bdd: add byte ptr [eax], al; add byte ptr [ebx - 0x76e3dbbc], cl; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x0008557d: add byte ptr [eax], al; add byte ptr [ebx - 0x76fd76ff], cl; clc; pop edi; ret; 
0x000205be: add byte ptr [eax], al; add byte ptr [ebx - 0x7af07f39], al; ret 3; 
0x00149140: add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x000d50c4: add byte ptr [eax], al; add byte ptr [ebx - 0x7ccfdbbc], cl; ret 0xc740; 
0x001295f0: add byte ptr [eax], al; add byte ptr [ebx - 0x7cebdbbc], cl; ret 0x8b04; 
0x0011f76d: add byte ptr [eax], al; add byte ptr [ebx - 0x7cfbdbbc], cl; inc eax; adc al, 4; mov eax, 1; ret; 
0x000e6f85: add byte ptr [eax], al; add byte ptr [ebx - 0x7cfe1bbb], al; ret 0x8b08; 
0x0003f950: add byte ptr [eax], al; add byte ptr [ebx - 0x7f], bl; ret; 
0x0013131b: add byte ptr [eax], al; add byte ptr [ebx - 0x8f55], cl; jmp dword ptr [ebp - 0x75]; 
0x00062962: add byte ptr [eax], al; add byte ptr [ebx - 0xbb6b], cl; dec dword ptr [ecx - 0x7c7b6e8c]; ret 0x8301; 
0x000fd046: add byte ptr [eax], al; add byte ptr [ebx - 0xbf75], cl; jmp dword ptr [ebp - 0x75]; 
0x0006109f: add byte ptr [eax], al; add byte ptr [ebx - 0xd743], cl; jmp dword ptr [ebp - 0x39]; 
0x0005d670: add byte ptr [eax], al; add byte ptr [ebx - 0xe373], cl; dec dword ptr [ebx - 0xd743]; jmp dword ptr [ebp - 0x77]; 
0x0012729d: add byte ptr [eax], al; add byte ptr [ebx - 0xf4fe339], al; mov ecx, 0x81; xchg ebx, edi; call dword ptr gs:[0x10]; 
0x001241dd: add byte ptr [eax], al; add byte ptr [ebx - 0xf74d], cl; jmp dword ptr [ebp - 0x39]; 
0x0001c69f: add byte ptr [eax], al; add byte ptr [ebx - 0xf74d], cl; jmp dword ptr [ebp - 0x75]; 
0x0010ab8f: add byte ptr [eax], al; add byte ptr [ebx - 0xf74d], cl; jmp dword ptr [ebp - 0x7d]; 
0x001202fc: add byte ptr [eax], al; add byte ptr [ebx - 0xf755], cl; jmp dword ptr [ebp - 0x39]; 
0x000b676e: add byte ptr [eax], al; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x39]; 
0x000b67fd: add byte ptr [eax], al; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x75]; 
0x000b4f2d: add byte ptr [eax], al; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x7d]; 
0x00122ddb: add byte ptr [eax], al; add byte ptr [ebx - 0xf76d], cl; push dword ptr [ecx]; jmp dword ptr [ebp - 0x39]; 
0x00123a44: add byte ptr [eax], al; add byte ptr [ebx - 0xf76db3c], al; pop esi; pop edi; ret; 
0x00054fc9: add byte ptr [eax], al; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x75]; 
0x000f08ed: add byte ptr [eax], al; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x7d]; 
0x000f646d: add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp + 3]; 
0x0002e97d: add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x0005dec5: add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x000da2bd: add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x7d]; 
0x000ed3ed: add byte ptr [eax], al; add byte ptr [ebx - 0xfb7f], cl; dec dword ptr [ebx - 0x3f7ae3c0]; cmove eax, edx; ret; 
0x001065cc: add byte ptr [eax], al; add byte ptr [ebx - 0xff7d], cl; jmp dword ptr [ebp + 3]; 
0x001003c5: add byte ptr [eax], al; add byte ptr [ebx - 0xff7d], cl; jmp dword ptr [ebp - 0x39]; 
0x0018cf19: add byte ptr [eax], al; add byte ptr [ebx*8 - 0x2b9fffff], bl; cmc; call edi; 
0x0011967d: add byte ptr [eax], al; add byte ptr [ebx], bh; lodsb al, byte ptr [esi]; ret; 
0x0018d519: add byte ptr [eax], al; add byte ptr [ebx], bl; add dword ptr [eax], eax; mov al, 0xe3; cmc; call dword ptr [edi]; 
0x00060c2a: add byte ptr [eax], al; add byte ptr [ecx + 0x1000fa], al; add byte ptr [edi], cl; xchg dword ptr [ecx - 0x7d000000], edx; ret 0x830f; 
0x0010fb0b: add byte ptr [eax], al; add byte ptr [ecx + 0x1089084a], cl; xor eax, eax; ret; 
0x00112266: add byte ptr [eax], al; add byte ptr [ecx + 0x10ff243c], cl; mov eax, dword ptr [edi + 4]; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x0006b946: add byte ptr [eax], al; add byte ptr [ecx + 0x1fe82434], cl; ret; 
0x0002de88: add byte ptr [eax], al; add byte ptr [ecx + 0x24548bc7], cl; or al, 0x87; fistp qword ptr [eax + 0x10e]; call dword ptr gs:[0x10]; 
0x0010f3af: add byte ptr [eax], al; add byte ptr [ecx + 0x26e82404], cl; adc bh, bh; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x000b514a: add byte ptr [eax], al; add byte ptr [ecx + 0x2be82404], cl; sbb eax, dword ptr [edi]; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp + 3]; 
0x0006ba35: add byte ptr [eax], al; add byte ptr [ecx + 0x30e82434], cl; ret 0xffff; 
0x0008766d: add byte ptr [eax], al; add byte ptr [ecx + 0x3518911], cl; pop ebx; ret; 
0x000d9a03: add byte ptr [eax], al; add byte ptr [ecx + 0x42e82404], cl; sal ah, cl; jmp dword ptr [esi - 0x70]; 
0x00118ccd: add byte ptr [eax], al; add byte ptr [ecx + 0x4489243c], cl; and al, 0x28; mov eax, dword ptr [esp + 0x44]; call dword ptr [eax + 0x14]; 
0x0008764d: add byte ptr [eax], al; add byte ptr [ecx + 0x4518811], cl; pop ebx; ret; 
0x0011ac94: add byte ptr [eax], al; add byte ptr [ecx + 0x4b83046], cl; add byte ptr [eax], al; add cl, ch; ret 0xfffc; 
0x000c804a: add byte ptr [eax], al; add byte ptr [ecx + 0x4c892434], cl; and al, 8; call dword ptr [ebp - 0x78]; 
0x0006ba15: add byte ptr [eax], al; add byte ptr [ecx + 0x50e82434], cl; ret 0xffff; 
0x0008765d: add byte ptr [eax], al; add byte ptr [ecx + 0x51896611], cl; add al, 0x5b; ret; 
0x000e6352: add byte ptr [eax], al; add byte ptr [ecx + 0x5409], bh; mov esi, eax; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000e6319: add byte ptr [eax], al; add byte ptr [ecx + 0x5409], bh; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0011d93e: add byte ptr [eax], al; add byte ptr [ecx + 0x54892414], cl; and al, 0x30; mov dword ptr [esp + 4], 0; call dword ptr [eax + 0x14]; 
0x0012b29c: add byte ptr [eax], al; add byte ptr [ecx + 0x5489242c], cl; and al, 4; mov dword ptr [esp + 8], ecx; call dword ptr [eax + 0x40]; 
0x0006b95d: add byte ptr [eax], al; add byte ptr [ecx + 0x54892434], cl; and al, 4; call dword ptr [eax + 0xc]; 
0x0008dcbd: add byte ptr [eax], al; add byte ptr [ecx + 0x5b5e5f17], cl; ret; 
0x0008dcad: add byte ptr [eax], al; add byte ptr [ecx + 0x5e5fff57], cl; pop ebx; ret; 
0x00042458: add byte ptr [eax], al; add byte ptr [ecx + 0x6c892414], cl; and al, 8; mov dword ptr [esp + 4], eax; call dword ptr [ecx + 0x1c]; 
0x000f5c43: add byte ptr [eax], al; add byte ptr [ecx + 0x72e82434], cl; ret; 
0x0006455d: add byte ptr [eax], al; add byte ptr [ecx + 0x78e82434], cl; ret 0; 
0x000fc565: add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; xor esi, esi; xchg ebx, edi; call dword ptr gs:[0x10]; 
0x000fc2b7: add byte ptr [eax], al; add byte ptr [ecx + 0x80b9e8], cl; add byte ptr [eax], al; xor esi, esi; xchg ebx, edi; int 0x80; 
0x000fc1d8: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000b84ba: add byte ptr [eax], al; add byte ptr [ecx + 0x81b9f0], cl; add byte ptr [eax], al; xchg ebx, edi; int 0x80; 
0x0006f434: add byte ptr [eax], al; add byte ptr [ecx + 0xb882], cl; add byte ptr [ebx + 0x9824ac], cl; add byte ptr [eax], al; add esp, 0x9c; ret; 
0x00172e3a: add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x200e4e02], al; imul ecx, dword ptr [esi], 0x40e4108; ret; 
0x0018575a: add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e5902], al; ret; 
0x00189c9e: add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e5a02], al; ret; 
0x0017d776: add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e5b02], al; ret; 
0x0016f452: add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e6102], al; ret; 
0x0019b3ea: add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e6e02], al; ret; 
0x00198222: add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e6f02], al; ret; 
0x00191706: add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e7002], al; ret; 
0x0017d096: add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e7202], al; ret; 
0x0017d706: add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e7802], al; ret; 
0x00190ff2: add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e7a02], al; ret; 
0x0017c91e: add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e7f02], al; ret; 
0x00184d6e: add byte ptr [eax], al; add byte ptr [ecx + 0xe], bl; or byte ptr [ebx + 0x40e4902], al; ret; 
0x00105076: add byte ptr [eax], al; add byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x45; ret 0x90c3; 
0x000a5d5a: add byte ptr [eax], al; add byte ptr [ecx + 0xfc085fe], cl; xchg eax, ebp; ret 0xd589; 
0x00131645: add byte ptr [eax], al; add byte ptr [ecx + 0xff289d7], cl; xchg eax, esp; ret 0xd689; 
0x0012fa3c: add byte ptr [eax], al; add byte ptr [ecx + 0xff989ce], cl; cwde; sar dword ptr [edx], 0xf; xchg eax, edx; ret 0xcf89; 
0x0017b7d1: add byte ptr [eax], al; add byte ptr [ecx + eax*8], ah; add byte ptr [eax], al; xchg eax, ecx; out dx, eax; call dword ptr [eax]; 
0x00179b81: add byte ptr [eax], al; add byte ptr [ecx + ebp*4 + 0x60480000], al; out dx, eax; call dword ptr [eax]; 
0x00194b51: add byte ptr [eax], al; add byte ptr [ecx + ebx*2 + 2], dl; add byte ptr [eax], bh; sub bh, dh; call esi; 
0x0018d009: add byte ptr [eax], al; add byte ptr [ecx + ebx*8 + 1], bl; add byte ptr [ecx - 0x22], ah; cmc; call dword ptr [eax]; 
0x00197b19: add byte ptr [eax], al; add byte ptr [ecx + ecx*4], bl; add al, byte ptr [eax]; nop; aad 0xf7; jmp dword ptr [ebx]; 
0x0017ab71: add byte ptr [eax], al; add byte ptr [ecx + edi*4], dh; add byte ptr [eax], ch; mov gs, edi; call dword ptr [ebx]; 
0x001939bd: add byte ptr [eax], al; add byte ptr [ecx + esi*8], ah; add dword ptr [eax], eax; in al, dx; or bh, dh; call dword ptr [esi]; 
0x000311dc: add byte ptr [eax], al; add byte ptr [ecx - 0x1617dbfc], cl; dec eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00103d0c: add byte ptr [eax], al; add byte ptr [ecx - 0x17fbdbbc], cl; or cl, ah; dec dword ptr [ebx - 0x76dfdbb4]; ret 0x448b; 
0x001115d5: add byte ptr [eax], al; add byte ptr [ecx - 0x17fbdbbc], cl; outsd dx, dword ptr [esi]; sub edx, esi; dec dword ptr [ebx - 0x12f6d]; jmp dword ptr [ebp - 0x75]; 
0x000ea672: add byte ptr [eax], al; add byte ptr [ecx - 0x17fbdbbc], cl; ret 0x5f; 
0x00053671: add byte ptr [eax], al; add byte ptr [ecx - 0x17fbdbbc], cl; ret; 
0x0005243b: add byte ptr [eax], al; add byte ptr [ecx - 0x18f43], cl; jmp dword ptr [ebp - 0x75]; 
0x000d3b0f: add byte ptr [eax], al; add byte ptr [ecx - 0x2744722a], cl; ret; 
0x000d3dfa: add byte ptr [eax], al; add byte ptr [ecx - 0x2844722a], cl; ret; 
0x00064fb6: add byte ptr [eax], al; add byte ptr [ecx - 0x2d00dbfc], cl; add esp, 0x1c; ret; 
0x000d3ce4: add byte ptr [eax], al; add byte ptr [ecx - 0x2e44722a], cl; ret; 
0x0007d560: add byte ptr [eax], al; add byte ptr [ecx - 0x2f00dbec], cl; add esp, 0x18; pop ebx; ret; 
0x00064ed4: add byte ptr [eax], al; add byte ptr [ecx - 0x2f00dbec], cl; add esp, 0x1c; ret; 
0x000ec94e: add byte ptr [eax], al; add byte ptr [ecx - 0x2f00dbec], cl; add esp, 0x28; pop ebx; ret; 
0x000d3c57: add byte ptr [eax], al; add byte ptr [ecx - 0x3444722a], cl; ret; 
0x000d3bae: add byte ptr [eax], al; add byte ptr [ecx - 0x3a44722a], cl; ret; 
0x000d3a43: add byte ptr [eax], al; add byte ptr [ecx - 0x4044722a], cl; ret; 
0x00123d3c: add byte ptr [eax], al; add byte ptr [ecx - 0x4617dbfc], cl; mov bl, 0xfb; inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x000d39e2: add byte ptr [eax], al; add byte ptr [ecx - 0x4644722a], cl; ret; 
0x000df441: add byte ptr [eax], al; add byte ptr [ecx - 0x47207811], cl; fld qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002e32e: add byte ptr [eax], al; add byte ptr [ecx - 0x4720782f], cl; mov cl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002eeb1: add byte ptr [eax], al; add byte ptr [ecx - 0x47207839], cl; mov cl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00042938: add byte ptr [eax], al; add byte ptr [ecx - 0x4a75b], cl; jmp dword ptr [ebp - 0x75]; 
0x000d3a32: add byte ptr [eax], al; add byte ptr [ecx - 0x5244722a], cl; ret; 
0x000d3935: add byte ptr [eax], al; add byte ptr [ecx - 0x5844722a], cl; ret; 
0x000d3afe: add byte ptr [eax], al; add byte ptr [ecx - 0x5e44722a], cl; ret; 
0x000838ab: add byte ptr [eax], al; add byte ptr [ecx - 0x6517dbfc], cl; xor edi, edx; jmp dword ptr [esi - 0x70]; 
0x000cb4b5: add byte ptr [eax], al; add byte ptr [ecx - 0x6f17dbfc], cl; mov bh, 0xf5; call dword ptr [edi + 0x56]; 
0x000f5c26: add byte ptr [eax], al; add byte ptr [ecx - 0x7017dbcc], cl; ret; 
0x000d8737: add byte ptr [eax], al; add byte ptr [ecx - 0x7117dbfc], cl; inc esp; cli; inc dword ptr [ebp + 0x74c289c0]; ret; 
0x000773d2: add byte ptr [eax], al; add byte ptr [ecx - 0x72270810], cl; dec esp; aaa; jmp dword ptr [ecx]; 
0x000fe237: add byte ptr [eax], al; add byte ptr [ecx - 0x72f7dbbc], cl; and dword ptr [esi], 0xffffffca; sti; dec dword ptr [ecx - 0x17fbdbbc]; ret; 
0x0011e237: add byte ptr [eax], al; add byte ptr [ecx - 0x72f7dbbc], cl; cmp dword ptr [ebx - 0x2e], -5; dec dword ptr [ecx - 0x17fbdbbc]; ret; 
0x00056707: add byte ptr [eax], al; add byte ptr [ecx - 0x72fbdbac], cl; push ebp; movsb byte ptr es:[edi], byte ptr [esi]; mov dword ptr [esp], edx; call eax; 
0x000428af: add byte ptr [eax], al; add byte ptr [ecx - 0x72fbdbac], cl; push ebp; nop; mov dword ptr [esp], edx; call eax; 
0x0004e387: add byte ptr [eax], al; add byte ptr [ecx - 0x72fbdbac], cl; push ebp; pushfd; mov dword ptr [esp], edx; call eax; 
0x0005ba57: add byte ptr [eax], al; add byte ptr [ecx - 0x72fbdbac], cl; xchg eax, esp; and al, 0x90; add dword ptr [eax], 0x24148900; call eax; 
0x0011cac4: add byte ptr [eax], al; add byte ptr [ecx - 0x74dfdbac], cl; push eax; or byte ptr [ecx - 0x76fbdbb4], cl; add al, 0x24; call dword ptr [edx + 0xc]; 
0x00042a10: add byte ptr [eax], al; add byte ptr [ecx - 0x74f7db84], cl; lea esp, dword ptr [ebx + edi*8 - 1]; dec dword ptr [ecx + 0x4c892434]; and al, 4; call dword ptr [eax + 0x1c]; 
0x0007c194: add byte ptr [eax], al; add byte ptr [ecx - 0x74fbdb94], cl; inc esi; and al, 0x89; add al, 0x24; call dword ptr [esi + 0x1c]; 
0x000e1e78: add byte ptr [eax], al; add byte ptr [ecx - 0x74fbdbac], cl; inc ecx; or al, 0x89; add al, 0x24; call dword ptr [ecx + 0x24]; 
0x000fb88f: add byte ptr [eax], al; add byte ptr [ecx - 0x74fbdbac], cl; push esp; and al, 0x20; mov dword ptr [esp], edx; call eax; 
0x0003f77d: add byte ptr [eax], al; add byte ptr [ecx - 0x761b1410], cl; ret 0x9066; 
0x00063cd5: add byte ptr [eax], al; add byte ptr [ecx - 0x76bfdbbc], cl; ret 0xfe9; 
0x000d6317: add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dbac], cl; ret 0xac8b; 
0x000e0d01: add byte ptr [eax], al; add byte ptr [ecx - 0x76e3dba4], cl; ret; 
0x000a5ccd: add byte ptr [eax], al; add byte ptr [ecx - 0x76f3db8c], cl; insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp], edx; call edi; 
0x00099303: add byte ptr [eax], al; add byte ptr [ecx - 0x76f3dbb4], cl; inc esp; and al, 4; mov dword ptr [esp], edi; call esi; 
0x00065264: add byte ptr [eax], al; add byte ptr [ecx - 0x76f7db84], cl; insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x00066e6b: add byte ptr [eax], al; add byte ptr [ecx - 0x76f7db84], cl; insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x2c]; 
0x00043ccd: add byte ptr [eax], al; add byte ptr [ecx - 0x76f7db84], cl; push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x00066098: add byte ptr [eax], al; add byte ptr [ecx - 0x76f7db84], cl; xor al, 0x24; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x0003ec1d: add byte ptr [eax], al; add byte ptr [ecx - 0x76f7db8c], cl; adc al, 0x24; call eax; 
0x0006687c: add byte ptr [eax], al; add byte ptr [ecx - 0x76f7db94], cl; adc al, 0x24; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x1c]; 
0x00067c4b: add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbb4], cl; adc al, 0x24; call eax; 
0x00021967: add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbbc], cl; adc al, 0x24; call dword ptr [ebp]; 
0x0001f66a: add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbbc], cl; adc al, 0x24; call dword ptr [esi]; 
0x000990f5: add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbbc], cl; cmp al, 0x24; call esi; 
0x00071673: add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbbc], cl; insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp], esi; call dword ptr [edx + 0x38]; 
0x0001ec4b: add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbbc], cl; or al, 0x24; call dword ptr [esi]; 
0x0006d639: add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdb84], cl; push esp; and al, 8; mov dword ptr [esp], esi; call dword ptr [eax + 0x40]; 
0x0007ba48: add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdb84], cl; xor al, 0x24; call eax; 
0x0002c66a: add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdb8c], cl; dec byte ptr [ecx + 0x45e82404]; sbb eax, 0x508d0005; add esi, esi; ret 0x6601; 
0x00115f2a: add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbac], cl; add al, 0x24; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x000724a4: add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbac], cl; cmp al, 0x24; call dword ptr [eax + 0xc]; 
0x00111870: add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbac], cl; cmp al, 0x24; call dword ptr [eax + 4]; 
0x0006d8f8: add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbac], cl; dec esp; and al, 8; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x0006fad3: add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbac], cl; inc esp; and al, 8; mov dword ptr [esp], esi; call dword ptr [ecx + 0x40]; 
0x0006db94: add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbac], cl; sub al, 0x24; call dword ptr [eax + 0x48]; 
0x00066064: add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbac], cl; xor al, 0x24; call dword ptr [eax + 0x1c]; 
0x00064291: add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbac], cl; xor al, 0x24; call dword ptr [eax + 0x48]; 
0x0011cde9: add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbac], cl; xor al, 0x24; call dword ptr [eax + 0xc]; 
0x0011cb0b: add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbb4], cl; add al, 0x24; call dword ptr [edx + 0xc]; 
0x0011cb0b: add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbb4], cl; add al, 0x24; call dword ptr [edx + 0xc]; add esp, 0x4c; ret; 
0x0006f9e3: add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbb4], cl; push esp; and al, 8; mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x000729f4: add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbb4], cl; xor al, 0x24; call dword ptr [eax + 0x18]; 
0x00098f65: add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbbc], cl; cmp al, 0x24; call esi; 
0x00099693: add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbbc], cl; cmp al, 0x24; mov dword ptr [esp + 8], edx; call esi; 
0x0007027d: add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbbc], cl; dec esp; and al, 8; mov dword ptr [esp], esi; call dword ptr [edx + 0x40]; 
0x00067a96: add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbbc], cl; sub al, 0x24; call edi; 
0x0006bfb3: add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbbc], cl; xor al, 0x24; call dword ptr [edx + 0x18]; 
0x000df3dd: add byte ptr [eax], al; add byte ptr [ecx - 0x781076f4], dh; fistp qword ptr [eax + 0xdd]; call dword ptr gs:[0x10]; 
0x0002f13b: add byte ptr [eax], al; add byte ptr [ecx - 0x78ebdbbc], cl; fistp qword ptr [eax + 0xb2]; call dword ptr gs:[0x10]; 
0x000fc1be: add byte ptr [eax], al; add byte ptr [ecx - 0x7afc7830], cl; sal byte ptr [ebp - 0x14], 0x5e; pop ebx; pop edx; ret; 
0x00129be5: add byte ptr [eax], al; add byte ptr [ecx - 0x7c73d427], cl; add byte ptr [eax + edi*8 - 1], ch; jmp ecx; 
0x0006d3e9: add byte ptr [eax], al; add byte ptr [ecx - 0x7cf174c6], cl; ret 0x8904; 
0x0011bc79: add byte ptr [eax], al; add byte ptr [ecx - 0x7cf5740e], cl; ret 0x8d04; 
0x0012817d: add byte ptr [eax], al; add byte ptr [ecx - 0x7cf76ab4], cl; rol byte ptr [ecx], 0x83; ret 0x3b01; 
0x0003f93e: add byte ptr [eax], al; add byte ptr [ecx - 0x7f], bl; ror dword ptr [edx], 0; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x00029196: add byte ptr [eax], al; add byte ptr [ecx - 0x8f6b], cl; jmp dword ptr [ebp - 0x75]; 
0x0005b86f: add byte ptr [eax], al; add byte ptr [ecx - 0x917dbfc], cl; ret; 
0x000fac78: add byte ptr [eax], al; add byte ptr [ecx - 0xc76b], cl; dec dword ptr [ecx - 0xcb73]; dec dword ptr [ecx + 0x51e82404]; ret 0xfff1; 
0x0007c839: add byte ptr [eax], al; add byte ptr [ecx - 1], bh; cmovb eax, ecx; ret; 
0x00177f21: add byte ptr [eax], al; add byte ptr [ecx*4 + 0x28480000], ah; out dx, eax; call edx; 
0x0017bf31: add byte ptr [eax], al; add byte ptr [ecx*8 - 0xc880000], dh; cld; jmp dword ptr [ebx]; 
0x0007cfa6: add byte ptr [eax], al; add byte ptr [ecx], ah; ret 0x2474; 
0x00094ff1: add byte ptr [eax], al; add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x000a9a2b: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x9389; 
0x000431ca: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x9589; 
0x000d5d08: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0xb48b; 
0x000c322f: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0xc083; 
0x0006de25: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0xc101; 
0x0006a35c: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0xd8f7; 
0x0006fcaf: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x870f; 
0x000fc227: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xf75; 
0x000fc1ae: add byte ptr [eax], al; add byte ptr [ecx], bh; sal byte ptr [ebp + 0xc], 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0017d319: add byte ptr [eax], al; add byte ptr [ecx], bl; add byte ptr [eax], al; xor dh, bh; out dx, eax; call dword ptr [edx]; 
0x00038342: add byte ptr [eax], al; add byte ptr [ecx], ch; mov dword ptr [ebp - 0x5a71f001], 0x89fffffe; ret 0x18e9; 
0x0005d399: add byte ptr [eax], al; add byte ptr [ecx], ch; mov edi, 0xfffef885; jmp dword ptr [ebp]; 
0x000d529b: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x28b; 
0x0012bb25: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5489; 
0x00038463: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x848d; 
0x0007435d: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x933b; 
0x000e6aa1: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd089; 
0x000c31a9: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd501; 
0x000807ea: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd601; 
0x000cd5e4: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd701; 
0x0006c70b: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xe0c1; 
0x000329a0: add byte ptr [eax], al; add byte ptr [ecx], dh; ror byte ptr [ebx - 0x74ebdba4], 0x74; and al, 0x18; add esp, 0x1c; ret; 
0x0002efea: add byte ptr [eax], al; add byte ptr [ecx], dh; ror byte ptr [ecx - 0x47207839], cl; mov cl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0000884d: add byte ptr [eax], al; add byte ptr [ecx], dl; add cl, dh; jmp dword ptr [ebp + 0x56]; 
0x0000837d: add byte ptr [eax], al; add byte ptr [ecx], dl; add cl, dh; jmp dword ptr [edx]; 
0x0000841d: add byte ptr [eax], al; add byte ptr [ecx], dl; add cl, dh; jmp edi; 
0x000ba6b6: add byte ptr [eax], al; add byte ptr [edi + 0x10ab8d3], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f8e5d: add byte ptr [eax], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x77]; 
0x001268cd: add byte ptr [eax], al; add byte ptr [edi + 0x5d], bl; ret; 
0x000a7104: add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000c5b3f: add byte ptr [eax], al; add byte ptr [edi + 0x5fd8f7fb], al; ret; 
0x000fc780: add byte ptr [eax], al; add byte ptr [edi + 0x92b8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002e13f: add byte ptr [eax], al; add byte ptr [edi + 0xafb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002e246: add byte ptr [eax], al; add byte ptr [edi + 0xb3b8d3], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0017fff2: add byte ptr [eax], al; add byte ptr [edi + 0xe], dl; or byte ptr [ebx + 0x40e4902], al; ret; 
0x000a7222: add byte ptr [eax], al; add byte ptr [edi + 2], bh; neg eax; ret; 
0x00142bb2: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebx; ret; 
0x00130642: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; pop ebp; ret; 
0x00131c62: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebx; ret; 
0x00130352: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; ret; 
0x00132808: add byte ptr [eax], al; add byte ptr [edi + 3], bh; neg eax; ret; 
0x00132b33: add byte ptr [eax], al; add byte ptr [edi + 8], bh; neg eax; ret; 
0x000a71f2: add byte ptr [eax], al; add byte ptr [edi + 9], bh; neg eax; pop edi; pop esi; ret; 
0x0018add6: add byte ptr [eax], al; add byte ptr [edi + 9], ch; add eax, dword ptr [edx]; push edx; ret; 
0x00183979: add byte ptr [eax], al; add byte ptr [edi + eax*2 + 1], bh; add byte ptr [eax + 0x4c], dl; int1; jmp dword ptr [edx + 1]; 
0x0017be61: add byte ptr [eax], al; add byte ptr [edi + eax*8 - 0x11230000], dh; out dx, eax; call dword ptr [eax]; 
0x0019b981: add byte ptr [eax], al; add byte ptr [edi + eax*8 - 0x2ce7fffe], al; clc; jmp dword ptr [eax]; 
0x0016f919: add byte ptr [eax], al; add byte ptr [edi + eax], bl; add byte ptr [eax], al; push eax; mov dh, 0xea; call dword ptr [edx]; 
0x001765f1: add byte ptr [eax], al; add byte ptr [edi + ebp*2], al; add byte ptr [edi + 1], dh; out dx, eax; call dword ptr [eax]; 
0x00176621: add byte ptr [eax], al; add byte ptr [edi + ebp*2], dh; add byte ptr [edi + 1], dl; out dx, eax; call dword ptr [eax]; 
0x0018a169: add byte ptr [eax], al; add byte ptr [edi + ebp*4 + 1], ch; add al, al; cli; call dword ptr [eax]; 
0x000c6a9c: add byte ptr [eax], al; add byte ptr [edi + ebx*2 - 0x77], dh; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00175119: add byte ptr [eax], al; add byte ptr [edi + ebx*2], bl; add byte ptr [eax], al; xor ch, bh; in eax, dx; jmp dword ptr [eax + 1]; 
0x001991b1: add byte ptr [eax], al; add byte ptr [edi + ebx*4 + 0x40380002], dh; clc; call dword ptr [ecx]; 
0x0018d191: add byte ptr [eax], al; add byte ptr [edi + ebx*8 - 0x2307ffff], dl; cmc; call dword ptr [eax]; 
0x00188171: add byte ptr [eax], al; add byte ptr [edi + ecx*4 + 1], dh; add al, bl; sal bl, 1; call dword ptr [eax]; 
0x00188129: add byte ptr [eax], al; add byte ptr [edi + ecx*4], ch; add dword ptr [eax], eax; adc al, 0xf3; call dword ptr [eax]; 
0x00197109: add byte ptr [eax], al; add byte ptr [edi + edi*2], cl; add al, byte ptr [eax]; pushal; mov al, 0xf7; call dword ptr [eax]; 
0x00197131: add byte ptr [eax], al; add byte ptr [edi + edi*2], dh; add al, byte ptr [eax]; dec eax; mov cl, 0xf7; jmp dword ptr [esi]; 
0x0018b121: add byte ptr [eax], al; add byte ptr [edi + edi*4], ah; add dword ptr [eax], eax; sub byte ptr [edi - 0xb], cl; call dword ptr [ebx]; 
0x0017b5c1: add byte ptr [eax], al; add byte ptr [edi + edi*4], dl; add byte ptr [eax], al; add ebp, esi; out dx, eax; call dword ptr [eax]; 
0x00194e01: add byte ptr [eax], al; add byte ptr [edi + edx*2 + 2], dl; add al, ah; sub esi, edi; call dword ptr [eax]; 
0x00198901: add byte ptr [eax], al; add byte ptr [edi + edx*4], al; add al, byte ptr [eax]; cmp byte ptr [eax], ch; clc; call dword ptr [ebx]; 
0x0018c9b1: add byte ptr [eax], al; add byte ptr [edi + edx*8 - 0x3f97ffff], dh; cmc; jmp dword ptr [esi]; 
0x00133e3d: add byte ptr [eax], al; add byte ptr [edi - 0x18], dl; sub eax, 0x81ffff5f; ret; 
0x00176f19: add byte ptr [eax], al; add byte ptr [edi*2 + 0x9c00000], bl; out dx, eax; jmp dword ptr [ebx]; 
0x0017b3b1: add byte ptr [eax], al; add byte ptr [edi*4 - 0x9930000], al; out dx, eax; call dword ptr [eax]; 
0x0017b3e1: add byte ptr [eax], al; add byte ptr [edi*4 - 0x9b30000], dh; out dx, eax; call dword ptr [eax]; 
0x0019c8c5: add byte ptr [eax], al; add byte ptr [edi], bh; add al, 0; add byte ptr [ebx + eax], ah; add byte ptr [eax], al; ret; 
0x001313b6: add byte ptr [eax], al; add byte ptr [edi], cl; cwde; ret 0xfa85; 
0x000e20a5: add byte ptr [eax], al; add byte ptr [edi], cl; dec edi; ret 0x148d; 
0x000c74c3: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x70e9; 
0x0004507d: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x8588; 
0x000578da: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x8589; 
0x000c91db: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x8ae9; 
0x0012f8ce: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x99e9; 
0x000678fb: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0xc3f3; 
0x000e2a9e: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0xcfe9; 
0x000e1926: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0xe7e9; 
0x000407a1: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0xfde9; 
0x0002dfc8: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; rol byte ptr [edi + 0xaeb8df], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f0d15: add byte ptr [eax], al; add byte ptr [edi], cl; inc edx; ret 0xc35e; 
0x000e3808: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x6c89; 
0x00040061: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x7c83; 
0x00124243: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x8965; 
0x001038ad: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0xc483; 
0x000c1f75: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0xc0; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0xe106c]; jmp ecx; 
0x000ac835: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0xc0; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0xf67ac]; jmp ecx; 
0x000cb88d: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0xd2; mov eax, ebx; sub eax, dword ptr [ebx + edx*4 - 0xd7754]; jmp eax; 
0x000951a4: add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x0009556d: add byte ptr [eax], al; add byte ptr [edi], cl; mov esp, 0x5ff801c0; ret; 
0x0009151d: add byte ptr [eax], al; add byte ptr [edi], cl; mov esp, 0x83ce01d2; ret 0x2910; 
0x00097514: add byte ptr [eax], al; add byte ptr [edi], cl; popfd; ret 0xea81; 
0x0004c6ef: add byte ptr [eax], al; add byte ptr [edi], cl; test ah, ch; add byte ptr [eax], al; add dh, dh; ret 0xf80; 
0x000ad99d: add byte ptr [eax], al; add byte ptr [edi], cl; test al, bh; or dword ptr [eax], eax; add dh, dh; ret 0x7518; 
0x0013108d: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x0013098d: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x00132a6a: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000000], edi; ret; 
0x00131138: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000001], esp; ret; 
0x00130f58: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000003], eax; ret; 
0x00130a28: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000008], esi; ret; 
0x00130d82: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00130b54: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x00130c5c: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ecx + 0x5b000006], eax; ret; 
0x001329de: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ecx + 1], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x00130bd1: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x00142c0d: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edx + 0x32], edi; cmc; call dword ptr [ebx - 0x18]; 
0x0002c68b: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edx - 0xa000000], edi; ret 0xf02; 
0x000ba1cb: add byte ptr [eax], al; add byte ptr [edi], cl; xchg ah, bl; add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x000d25b8: add byte ptr [eax], al; add byte ptr [edi], cl; xchg eax, ebp; ret 0x8488; 
0x0012f33e: add byte ptr [eax], al; add byte ptr [edi], cl; xchg eax, edx; ret 0xcf89; 
0x00037ea8: add byte ptr [eax], al; add byte ptr [edi], cl; xchg eax, edx; ret 0xd009; 
0x0012f634: add byte ptr [eax], al; add byte ptr [edi], cl; xchg eax, esp; ret 0xc985; 
0x00054e3d: add byte ptr [eax], al; add byte ptr [edi], cl; xchg eax, esp; ret 0xd089; 
0x0009e782: add byte ptr [eax], al; add byte ptr [edi], cl; xchg eax, esp; ret 0xed31; 
0x000fc1ee: add byte ptr [eax], al; add byte ptr [edx + 0x59], bl; pop ebx; ret; 
0x00184d0e: add byte ptr [eax], al; add byte ptr [edx + 0xe], ah; or byte ptr [ebx + 0x40e5f02], al; ret; 
0x0013081d: add byte ptr [eax], al; add byte ptr [edx + 0xe], dh; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x000fc1dd: add byte ptr [eax], al; add byte ptr [edx + 1], bh; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0018e952: add byte ptr [eax], al; add byte ptr [edx + 9], al; add eax, dword ptr [edx]; push edi; ret; 
0x00183439: add byte ptr [eax], al; add byte ptr [edx + eax*2], bh; add dword ptr [eax], eax; push eax; cmp esi, ecx; jmp edx; 
0x00173411: add byte ptr [eax], al; add byte ptr [edx + eax*2], dl; add byte ptr [eax], al; fadd dword ptr [esi]; in al, dx; jmp dword ptr [edi]; 
0x00197411: add byte ptr [eax], al; add byte ptr [edx + eax*4], dl; add al, byte ptr [eax]; dec eax; ret; 
0x0017b951: add byte ptr [eax], al; add byte ptr [edx + eax*8 - 0xd800000], ah; out dx, eax; call dword ptr [eax]; 
0x0017b8f1: add byte ptr [eax], al; add byte ptr [edx + eax*8], al; add al, al; out dx, eax; call dword ptr [eax]; 
0x00199c51: add byte ptr [eax], al; add byte ptr [edx + ebp*4 + 2], dl; add al, ch; pop esp; clc; call dword ptr [eax]; 
0x00189c19: add byte ptr [eax], al; add byte ptr [edx + ebp*4], bl; add dword ptr [eax], eax; push eax; aam 0xf4; call dword ptr [edx]; 
0x0018dc51: add byte ptr [eax], al; add byte ptr [edx + ebp*8 + 1], dl; add byte ptr [eax - 5], bh; cmc; jmp dword ptr [edi]; 
0x00177315: add byte ptr [eax], al; add byte ptr [edx + ebp], bh; add byte ptr [edi + ecx - 0x11], ah; call dword ptr [esi + 3]; 
0x00194c29: add byte ptr [eax], al; add byte ptr [edx + ebx*2], ch; add al, byte ptr [eax]; inc eax; sub edi, esi; call dword ptr [ecx]; 
0x00188c89: add byte ptr [eax], al; add byte ptr [edx + ebx*4 + 0x1d100001], cl; hlt; jmp dword ptr [ecx + 1]; 
0x00188c11: add byte ptr [eax], al; add byte ptr [edx + ebx*4], dl; add dword ptr [eax], eax; test al, 0x1c; hlt; jmp dword ptr [ecx]; 
0x00170c09: add byte ptr [eax], al; add byte ptr [edx + ebx], cl; add byte ptr [eax], al; add byte ptr [edx - 0x15], ah; jmp dword ptr [edx]; 
0x00170c31: add byte ptr [eax], al; add byte ptr [edx + ebx], dh; add byte ptr [eax], al; cmp byte ptr [edx - 0x15], ah; jmp dword ptr [edx]; 
0x00178141: add byte ptr [eax], al; add byte ptr [edx + ecx*4 + 0x26ee0000], dl; sti; call dword ptr [eax]; 
0x001780e1: add byte ptr [eax], al; add byte ptr [edx + ecx*4], dh; add byte ptr [eax], al; daa; sti; call dword ptr [eax]; 
0x0019bca1: add byte ptr [eax], al; add byte ptr [edx + ecx*8 - 0x1f97fffe], ah; clc; jmp dword ptr [ebx]; 
0x000b359d: add byte ptr [eax], al; add byte ptr [edx + edi*4 - 0x7d], dh; mov byte ptr [ecx], 0x83; ret 0x3b34; 
0x00182c11: add byte ptr [eax], al; add byte ptr [edx + edi], dl; add dword ptr [eax], eax; mov byte ptr [esi], ch; int1; call dword ptr [ebx]; 
0x0017c489: add byte ptr [eax], al; add byte ptr [edx + edx*8 - 0x42c00000], cl; out dx, eax; jmp dword ptr [ebx]; 
0x00170469: add byte ptr [eax], al; add byte ptr [edx + edx], ch; add al, dh; xor ebp, ebx; jmp dword ptr [esi]; 
0x00186429: add byte ptr [eax], al; add byte ptr [edx + esi*2], ch; add dword ptr [eax], eax; shl dh, 0xf2; jmp dword ptr [edx]; 
0x0017a499: add byte ptr [eax], al; add byte ptr [edx + esi*4 + 0x7ac00000], bl; out dx, eax; call dword ptr [ebp]; 
0x0019a471: add byte ptr [eax], al; add byte ptr [edx + esi*4 + 2], dh; add byte ptr [eax - 0x71], bl; clc; call dword ptr [esi + 1]; 
0x0019a901: add byte ptr [eax], al; add byte ptr [edx + esi*4 + 2], dl; add byte ptr [edx - 8], dh; call dword ptr [eax]; 
0x0019a931: add byte ptr [eax], al; add byte ptr [edx + esi*4 - 0x5dabfffe], al; clc; call dword ptr [eax]; 
0x0019a961: add byte ptr [eax], al; add byte ptr [edx + esi*4 - 0x5dcbfffe], dh; clc; call dword ptr [eax]; 
0x0018a481: add byte ptr [eax], al; add byte ptr [edx + esi*4 - 0x8d7ffff], al; hlt; call dword ptr [esi]; 
0x00172461: add byte ptr [eax], al; add byte ptr [edx + esi], ah; add byte ptr [eax], bl; fldpi; call dword ptr [edi]; 
0x00170c0e: add byte ptr [eax], al; add byte ptr [edx - 0x15], ah; jmp dword ptr [edx]; 
0x0008cc3d: add byte ptr [eax], al; add byte ptr [edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x0007c430: add byte ptr [eax], al; add byte ptr [edx - 9], al; ret 3; 
0x0017cbd1: add byte ptr [eax], al; add byte ptr [edx*8 - 0xc880000], ah; out dx, eax; call dword ptr [eax]; 
0x000060fd: add byte ptr [eax], al; add byte ptr [edx], ah; add byte ptr [eax + eax], cl; ret 3; 
0x0000713d: add byte ptr [eax], al; add byte ptr [edx], ah; add byte ptr [eax + eax], cl; ret; 
0x0019e479: add byte ptr [eax], al; add byte ptr [edx], ah; pop es; add byte ptr [eax], al; syscall; 
0x0017408a: add byte ptr [eax], al; add byte ptr [edx], al; inc eax; push cs; or byte ptr [ebx + 0x40e5702], al; ret; 
0x00182bfe: add byte ptr [eax], al; add byte ptr [edx], bh; add dword ptr [eax], eax; sub al, 0x5c; cld; call dword ptr [ebx]; 
0x0000954d: add byte ptr [eax], al; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; mov eax, dword ptr [0xd0000010]; ret 7; 
0x00009f7d: add byte ptr [eax], al; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0x11; 
0x0000943d: add byte ptr [eax], al; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0x38; 
0x0000422d: add byte ptr [eax], al; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0x52; 
0x0000c6fd: add byte ptr [eax], al; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0x59; 
0x00007a9d: add byte ptr [eax], al; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0xc; 
0x0000c3ed: add byte ptr [eax], al; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret; 
0x00097eed: add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x0002f570: add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x0013062d: add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; xor eax, eax; pop ebp; ret; 
0x0014a2fd: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0008768d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000876ad: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000876bd: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x0008769d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000876cd: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x0008767d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; pop ebx; ret; 
0x0012fb78: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; out dx, eax; call dword ptr [eax - 0x7cef397d]; ret 0x8910; 
0x0013321d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x0009547f: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x00095758: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0009577d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ror dword ptr [edi], -0x43; rol byte ptr [ecx], 0xc8; ret; 
0x0007e769: add byte ptr [eax], al; add byte ptr [esi + eax - 0x73], dh; or dword ptr [ecx + edx*2 - 7], 0xffffffff; pop ebx; ret; 
0x0007e289: add byte ptr [eax], al; add byte ptr [esi + eax - 0x73], dh; sbb dword ptr [ebp + ecx - 7], -1; pop ebx; ret; 
0x0007e1e9: add byte ptr [eax], al; add byte ptr [esi + eax - 0x73], dh; sub dword ptr [edi + edx*4 - 7], -1; pop ebx; ret; 
0x0017bd41: add byte ptr [eax], al; add byte ptr [esi + eax*8 - 0x104f0000], dl; out dx, eax; call dword ptr [eax]; 
0x0017bd11: add byte ptr [eax], al; add byte ptr [esi + eax*8], ah; add cl, dl; out dx, eax; out dx, eax; call dword ptr [eax]; 
0x0019eae1: add byte ptr [eax], al; add byte ptr [esi + eax], ch; add byte ptr [eax], al; ret; 
0x0018a099: add byte ptr [eax], al; add byte ptr [esi + ebp*4 - 0x16afffff], bl; hlt; call dword ptr [ecx]; 
0x0017e079: add byte ptr [eax], al; add byte ptr [esi + ebp*8], bh; add byte ptr [eax], dl; and al, dh; call dword ptr [edx]; 
0x00172009: add byte ptr [eax], al; add byte ptr [esi + ebp], cl; add byte ptr [eax], al; ror bl, 0xeb; jmp dword ptr [eax]; 
0x00188539: add byte ptr [eax], al; add byte ptr [esi + ecx*4 + 0x1a850001], cl; hlt; call dword ptr [eax]; 
0x0017b531: add byte ptr [eax], al; add byte ptr [esi + edi*4 - 0xa9f0000], al; out dx, eax; call dword ptr [eax]; 
0x00198811: add byte ptr [eax], al; add byte ptr [esi + edx*4], dl; add al, byte ptr [eax]; or byte ptr [eax + edi*8], bl; jmp esp; 
0x0017c8b1: add byte ptr [eax], al; add byte ptr [esi + edx*8 - 0x20f80000], dh; out dx, eax; jmp dword ptr [esi]; 
0x0017c809: add byte ptr [eax], al; add byte ptr [esi + edx*8], cl; add byte ptr [eax], al; nop; fsub st(7), st(0); jmp edx; 
0x00182889: add byte ptr [eax], al; add byte ptr [esi + esi + 0x28200001], cl; int1; jmp esi; 
0x00172d69: add byte ptr [eax], al; add byte ptr [esi + esi + 0x7a0000], bh; in al, dx; call dword ptr [eax]; 
0x000d8a16: add byte ptr [eax], al; add byte ptr [esi - 9], ah; ret 0xff80; 
0x00179809: add byte ptr [eax], al; add byte ptr [esi], cl; add byte ptr [eax], al; mov al, 0x57; out dx, eax; call dword ptr [ecx]; 
0x00192cfd: add byte ptr [eax], al; add byte ptr [esp + 1], ah; add byte ptr [ecx + esi*8 - 0xa], bh; call dword ptr [esi]; 
0x0019b679: add byte ptr [eax], al; add byte ptr [esp + eax*8 + 2], bh; add al, dh; ret 0xfff8; 
0x0018de51: add byte ptr [eax], al; add byte ptr [esp + ebp*8 + 1], dl; add al, ch; std; cmc; call ecx; 
0x00184e89: add byte ptr [eax], al; add byte ptr [esp + ebx*2 + 0x49b00001], cl; cld; call ebx; 
0x0018be49: add byte ptr [eax], al; add byte ptr [esp + ecx*8 + 1], cl; add byte ptr [eax - 0x60], dh; cmc; jmp dword ptr [edx]; 
0x0017b351: add byte ptr [eax], al; add byte ptr [esp + edi*4 - 0x9530000], ah; out dx, eax; call dword ptr [eax]; 
0x0017b2f1: add byte ptr [eax], al; add byte ptr [esp + edi*4], al; add ch, ch; imul bh; call dword ptr [eax]; 
0x0017b321: add byte ptr [eax], al; add byte ptr [esp + edi*4], dh; add ch, cl; imul bh; call dword ptr [eax]; 
0x001986b9: add byte ptr [eax], al; add byte ptr [esp + edx*4 + 0x15700002], bh; clc; call dword ptr [esi]; 
0x0017cb41: add byte ptr [eax], al; add byte ptr [esp + edx*8 - 0xc280000], dl; out dx, eax; call dword ptr [eax]; 
0x0017cb11: add byte ptr [eax], al; add byte ptr [esp + edx*8], ah; add al, bh; out dx, eax; call dword ptr [eax]; 
0x0017cab1: add byte ptr [eax], al; add byte ptr [esp + edx*8], al; add byte ptr [eax], al; cmp ah, dh; out dx, eax; call dword ptr [eax]; 
0x0017cae1: add byte ptr [eax], al; add byte ptr [esp + edx*8], dh; add byte ptr [eax], al; sbb ah, dh; out dx, eax; call dword ptr [eax]; 
0x00098126: add byte ptr [eax], al; add byte ptr [esp + esi*2], al; push es; lea eax, dword ptr [ebx - 0x595d4]; pop ebx; ret; 
0x00097d06: add byte ptr [eax], al; add byte ptr [esp + esi*2], al; push es; lea eax, dword ptr [ebx - 0x597b4]; pop ebx; ret; 
0x0007d086: add byte ptr [eax], al; add byte ptr [esp + esi*2], al; push es; lea eax, dword ptr [ebx - 0x5a4a4]; pop ebx; ret; 
0x00097e66: add byte ptr [eax], al; add byte ptr [esp + esi*2], al; push es; lea eax, dword ptr [ebx - 0xfbd84]; pop ebx; ret; 
0x00097d46: add byte ptr [eax], al; add byte ptr [esp + esi*2], al; push es; lea eax, dword ptr [ebx - 0xfcaa4]; pop ebx; ret; 
0x0018be46: add byte ptr [eax], al; add byte ptr fs:[eax], al; add byte ptr [esp + ecx*8 + 1], cl; add byte ptr [eax - 0x60], dh; cmc; jmp dword ptr [edx]; 
0x00023189: add byte ptr [eax], al; add cl, al; ret 0x8909; 
0x000f830d: add byte ptr [eax], al; add cl, byte ptr [ecx + 0x4c892404]; and al, 8; mov ecx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 4], ecx; call edx; 
0x000740f8: add byte ptr [eax], al; add cl, byte ptr [edi]; xchg eax, esp; ret 0xe783; 
0x000b9cfd: add byte ptr [eax], al; add cl, ch; add byte ptr [eax], al; add byte ptr [ebp - 0x2776ff8a], cl; sub eax, dword ptr [ebx + esi*4 - 0xe92e0]; jmp eax; 
0x0009d6fe: add byte ptr [eax], al; add cl, ch; int1; out 0xff, al; jmp dword ptr [esi - 0x70]; 
0x0005b4e3: add byte ptr [eax], al; add cl, ch; outsd dx, dword ptr [esi]; ret; 
0x0005d530: add byte ptr [eax], al; add cl, ch; pop esi; out 0xff, eax; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x75]; 
0x000967d5: add byte ptr [eax], al; add cl, ch; ret 0xfffc; 
0x000f8755: add byte ptr [eax], al; add cl, ch; ret 0xfffd; 
0x000dc01e: add byte ptr [eax], al; add cl, ch; ret 0xfffe; 
0x00034a0c: add byte ptr [eax], al; add cl, ch; ret; 
0x0017cd5e: add byte ptr [eax], al; add cl, dh; out dx, eax; call dword ptr [eax]; 
0x0014685b: add byte ptr [eax], al; add dh, dh; ret 0x7501; 
0x0008f8bd: add byte ptr [eax], al; add dh, dh; ret 0x7510; 
0x0002e9c2: add byte ptr [eax], al; add dh, dh; ret 0x8901; 
0x000c745d: add byte ptr [eax], al; add dh, dh; ret 0xc740; 
0x0002c691: add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x00148f3c: add byte ptr [eax], al; add dh, dh; ret 0xf04; 
0x001498cf: add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x00148e3d: add byte ptr [eax], al; add dh, dh; ret 0xf10; 
0x00148f66: add byte ptr [eax], al; add dh, dh; ret 0xf20; 
0x00148f6f: add byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x0004c6f5: add byte ptr [eax], al; add dh, dh; ret 0xf80; 
0x0000158d: add byte ptr [eax], al; add dl, al; push es; add byte ptr [eax], al; ret; 
0x0019dcad: add byte ptr [eax], al; add dl, ch; add al, 0; add byte ptr [edi + 6], al; add byte ptr [eax], al; ret; 
0x00159486: add byte ptr [eax], al; add dword ptr [0x73950000], ecx; ret 0x48; 
0x0007b5f3: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0007af27: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x0011cde6: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0xc]; 
0x00124ddb: add byte ptr [eax], al; add dword ptr [ebp + 0x14], esi; add esp, 0x18; mov eax, edx; pop ebx; ret; 
0x000f54c1: add byte ptr [eax], al; add dword ptr [ebp + 0x44], esi; add esp, 0x18; mov eax, edx; pop ebx; ret; 
0x00110bbe: add byte ptr [eax], al; add dword ptr [ebp + 0x44], esi; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0004bc2c: add byte ptr [eax], al; add dword ptr [ebp + 0x53], esi; add esp, 0x18; mov eax, edx; pop ebx; ret; 
0x00124b32: add byte ptr [eax], al; add dword ptr [ebp + 0x75], esi; add esp, 8; pop ebx; ret; 
0x00033353: add byte ptr [eax], al; add dword ptr [ebp + 0x79], esi; mov eax, dword ptr [esp + 0x1c]; add esp, 0x28; pop ebx; ret; 
0x0014b30c: add byte ptr [eax], al; add dword ptr [ebp + 0xf], esi; pop ebx; ret; 
0x00168886: add byte ptr [eax], al; add dword ptr [ebp - 0x13], esi; push dword ptr [eax]; ret; 
0x000734be: add byte ptr [eax], al; add dword ptr [ebx + 0x18a0], 1; pop ebx; ret; 
0x00073f8f: add byte ptr [eax], al; add dword ptr [ebx + 0x5e], ebx; pop edi; pop ebp; ret; 
0x0010983c: add byte ptr [eax], al; add dword ptr [ebx - 0x74e7db8c], ecx; pop esp; and al, 0x14; add esp, 0x1c; ret; 
0x00129693: add byte ptr [eax], al; add dword ptr [ecx], eax; ret 0x5489; 
0x00074cad: add byte ptr [eax], al; add dword ptr [edi], ecx; test dword ptr [eax + 0x5c], esi; add byte ptr [eax], al; pop ebx; ret; 
0x000662c7: add byte ptr [eax], al; add dword ptr [edi], ecx; test dword ptr [edi - 0xcfffffc], edi; ret; 
0x00071863: add byte ptr [eax], al; add dword ptr [edi], ecx; test edx, ebp; sbb al, 0; add bl, dh; ret; 
0x00148e80: add byte ptr [eax], al; add eax, 0xb; pop edi; ret; 
0x00148ea9: add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x001470ce: add byte ptr [eax], al; add eax, 1; ret; 
0x00148e33: add byte ptr [eax], al; add eax, 3; pop edi; ret; 
0x000a73de: add byte ptr [eax], al; add eax, 3; ret; 
0x00148e59: add byte ptr [eax], al; add eax, 7; pop edi; ret; 
0x000f1968: add byte ptr [eax], al; add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0016dc54: add byte ptr [eax], al; add eax, dword ptr [eax]; inc esp; aad 0xfa; jmp dword ptr [eax]; 
0x00094ff2: add byte ptr [eax], al; add eax, edi; add eax, ecx; pop edi; ret; 
0x0017b5c6: add byte ptr [eax], al; add ebp, esi; out dx, eax; call dword ptr [eax]; 
0x00127593: add byte ptr [eax], al; add ecx, 0x7ba5f; mov eax, dword ptr [ecx - 0x174]; add eax, dword ptr gs:[0]; ret; 
0x00123ef3: add byte ptr [eax], al; add ecx, 0x7f0ff; mov eax, dword ptr [ecx - 0xf8]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00123ed3: add byte ptr [eax], al; add ecx, 0x7f11f; mov eax, dword ptr [ecx - 0xf8]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0011c3e3: add byte ptr [eax], al; add ecx, 0x86c0f; mov eax, dword ptr [ecx - 0x58]; lea edx, dword ptr [ecx + 0x33ac]; mov dword ptr gs:[eax], edx; ret; 
0x000d50b9: add byte ptr [eax], al; add ecx, dword ptr [ecx - 0x76f7dbb4]; test byte ptr [esp + ebx*8], ah; add byte ptr [eax], al; add byte ptr [ebx - 0x7ccfdbbc], cl; ret 0xc740; 
0x0012729e: add byte ptr [eax], al; add edi, 0x1c; mov al, 0xf0; mov ecx, 0x81; xchg ebx, edi; call dword ptr gs:[0x10]; 
0x00118a96: add byte ptr [eax], al; add edx, 0x1c; mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; mov dword ptr [esp + 8], esi; call dword ptr [ecx + 0xc]; 
0x00031610: add byte ptr [eax], al; add esi, eax; mov dword ptr [esp], esi; call edi; 
0x0007d945: add byte ptr [eax], al; add esp, 0x100; pop ebx; ret; 
0x000dfed8: add byte ptr [eax], al; add esp, 0x101c; ret; 
0x00054e01: add byte ptr [eax], al; add esp, 0x102c; ret; 
0x00054b03: add byte ptr [eax], al; add esp, 0x103c; ret; 
0x00016fe3: add byte ptr [eax], al; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0007fe23: add byte ptr [eax], al; add esp, 0x10; pop esi; pop edi; pop ebp; ret; 
0x000aae4e: add byte ptr [eax], al; add esp, 0x10c; ret; 
0x0002e446: add byte ptr [eax], al; add esp, 0x118; pop ebx; ret; 
0x000e113b: add byte ptr [eax], al; add esp, 0x11c; ret; 
0x00069302: add byte ptr [eax], al; add esp, 0x12c; ret; 
0x0002e040: add byte ptr [eax], al; add esp, 0x130; ret; 
0x0002ddd7: add byte ptr [eax], al; add esp, 0x13c; ret; 
0x00128c47: add byte ptr [eax], al; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x00103738: add byte ptr [eax], al; add esp, 0x14; pop ebx; pop ebp; ret; 
0x0003f766: add byte ptr [eax], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0002ec65: add byte ptr [eax], al; add esp, 0x14c; ret; 
0x000b9e14: add byte ptr [eax], al; add esp, 0x16c; ret; 
0x000e9a7a: add byte ptr [eax], al; add esp, 0x18; mov al, 1; pop ebx; ret; 
0x00124a6e: add byte ptr [eax], al; add esp, 0x18; mov eax, edx; pop ebx; ret; 
0x00025f16: add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x001098be: add byte ptr [eax], al; add esp, 0x18; pop esi; ret; 
0x000e7e07: add byte ptr [eax], al; add esp, 0x1ac; ret; 
0x000e7d18: add byte ptr [eax], al; add esp, 0x1bc; ret; 
0x000311e5: add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00123a45: add byte ptr [eax], al; add esp, 0x24; mov eax, esi; pop esi; pop edi; ret; 
0x0012e631: add byte ptr [eax], al; add esp, 0x24; pop ebx; pop esi; ret; 
0x0002f3c0: add byte ptr [eax], al; add esp, 0x25c; ret; 
0x00109fbd: add byte ptr [eax], al; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x00027731: add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x0006b29f: add byte ptr [eax], al; add esp, 0x29c; ret; 
0x000b3dcd: add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000ca515: add byte ptr [eax], al; add esp, 0x30; pop esi; pop edi; pop ebp; ret 0xc; 
0x000cef8d: add byte ptr [eax], al; add esp, 0x30; pop esi; pop edi; pop ebp; ret 8; 
0x000ddbd0: add byte ptr [eax], al; add esp, 0x3c; ret; 
0x000547e7: add byte ptr [eax], al; add esp, 0x43c; ret; 
0x001195a1: add byte ptr [eax], al; add esp, 0x45c; ret; 
0x00115664: add byte ptr [eax], al; add esp, 0x48c; ret; 
0x000d953f: add byte ptr [eax], al; add esp, 0x54c; ret; 
0x0005ba0a: add byte ptr [eax], al; add esp, 0x81bc; ret; 
0x000196e2: add byte ptr [eax], al; add esp, 0x8c; ret; 
0x000e3cee: add byte ptr [eax], al; add esp, 0x9c; ret 4; 
0x00023324: add byte ptr [eax], al; add esp, 0x9c; ret; 
0x0002e851: add byte ptr [eax], al; add esp, 0xac; ret; 
0x000e1732: add byte ptr [eax], al; add esp, 0xbc; ret 8; 
0x00129a4f: add byte ptr [eax], al; add esp, 0xc; ret; 
0x000672d8: add byte ptr [eax], al; add esp, 0xcc; ret; 
0x0006d7cf: add byte ptr [eax], al; add esp, 0xdc; ret; 
0x00068f5a: add byte ptr [eax], al; add esp, 0xec; ret; 
0x000de48a: add byte ptr [eax], al; add esp, 0xfc; ret; 
0x00030de9: add byte ptr [eax], al; add esp, 4; jmp eax; 
0x0007af9e: add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x000696c2: add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x000d8437: add byte ptr [eax], al; add esp, 8; ret; 
0x0018b5ee: add byte ptr [eax], al; and al, 0; add byte ptr [eax], al; hlt; ret; 
0x0018eeb2: add byte ptr [eax], al; and al, 0; add byte ptr [eax], al; mov eax, 0xd40001fc; and esi, esi; jmp dword ptr [esi]; 
0x00199f02: add byte ptr [eax], al; and al, 0; add byte ptr [eax], al; or byte ptr [ebp + 0x61c40002], ch; clc; call dword ptr [edi]; 
0x0018a47e: add byte ptr [eax], al; and al, 0; add byte ptr [eax], al; test byte ptr [edx - 0x8d7ffff], dh; hlt; call dword ptr [esi]; 
0x0017314a: add byte ptr [eax], al; and al, 0; in al, dx; jmp dword ptr [ecx]; 
0x00170d22: add byte ptr [eax], al; and al, 0x1b; add byte ptr [eax], al; sub byte ptr [ebx - 0x15], ah; call dword ptr [ebx]; 
0x00184722: add byte ptr [eax], al; and al, 0x55; add dword ptr [eax], eax; clc; adc dl, dh; jmp dword ptr [eax]; 
0x0016881e: add byte ptr [eax], al; and al, 0x6c; in eax, dx; jmp dword ptr [eax]; 
0x00177f22: add byte ptr [eax], al; and al, 0x8d; add byte ptr [eax], al; dec eax; sub bh, ch; call edx; 
0x0016f81a: add byte ptr [eax], al; and al, 0xab; std; call dword ptr [edx]; 
0x00168526: add byte ptr [eax], al; and al, 0xaf; in al, dx; call dword ptr [eax]; 
0x0017b1d2: add byte ptr [eax], al; and al, 0xbb; add byte ptr [eax], al; lodsd eax, dword ptr [esi]; imul edi; call dword ptr [eax]; 
0x0018b122: add byte ptr [eax], al; and al, 0xbf; add dword ptr [eax], eax; sub byte ptr [edi - 0xb], cl; call dword ptr [ebx]; 
0x0017b7d2: add byte ptr [eax], al; and al, 0xc1; add byte ptr [eax], al; xchg eax, ecx; out dx, eax; call dword ptr [eax]; 
0x00168d9e: add byte ptr [eax], al; and al, 0xd4; out dx, eax; call eax; 
0x001939be: add byte ptr [eax], al; and al, 0xf1; add dword ptr [eax], eax; in al, dx; or bh, dh; call dword ptr [esi]; 
0x0019c8ca: add byte ptr [eax], al; and al, 3; add byte ptr [eax], al; ret; 
0x000060fe: add byte ptr [eax], al; and al, byte ptr [eax]; or al, 0; ret 3; 
0x0000583e: add byte ptr [eax], al; and al, byte ptr [eax]; or al, 0; ret; 
0x0019e47a: add byte ptr [eax], al; and al, byte ptr [edi]; add byte ptr [eax], al; syscall; 
0x0017c51e: add byte ptr [eax], al; and bl, dl; add byte ptr [eax], al; lodsb al, byte ptr [esi]; ret; 
0x0002d27b: add byte ptr [eax], al; and byte ptr [0x7fffffff], 9; ror byte ptr [ecx - 0x22f7dbbc], 1; inc esp; and al, 4; ret; 
0x0002d53b: add byte ptr [eax], al; and byte ptr [0x7fffffff], 9; ror byte ptr [ecx - 0x26fbdbbc], 1; inc esp; and al, 4; ret; 
0x0017761e: add byte ptr [eax], al; and byte ptr [eax + eax - 0x10eae400], al; jmp dword ptr [eax]; 
0x0017691a: add byte ptr [eax], al; and byte ptr [eax], 0; add al, al; add edi, ebp; call dword ptr [ebx]; 
0x0018a10a: add byte ptr [eax], al; and byte ptr [eax], al; add byte ptr [eax], al; adc byte ptr [edi + 0x3ecc0001], ch; cli; call dword ptr [eax]; 
0x0019acfa: add byte ptr [eax], al; and byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x5ac3fffe], bh; clc; jmp dword ptr [edi]; 
0x0019ab1a: add byte ptr [eax], al; and byte ptr [eax], al; add byte ptr [eax], al; and byte ptr [ecx - 0x5f63fffe], bh; clc; jmp dword ptr [edx]; 
0x001870e2: add byte ptr [eax], al; and byte ptr [eax], al; add byte ptr [eax], al; call 0x1418726b; push edx; jmp dword ptr [ebx]; 
0x00171be2: add byte ptr [eax], al; and byte ptr [eax], al; add byte ptr [eax], al; call 0xf4171c16; ret 0xffeb; 
0x0018b542: add byte ptr [eax], al; and byte ptr [eax], al; add byte ptr [eax], al; dec eax; ret; 
0x001881b6: add byte ptr [eax], al; and byte ptr [eax], al; add byte ptr [eax], al; mov esp, 0x4000018f; sal ebx, 1; call dword ptr [eax]; 
0x001977b6: add byte ptr [eax], al; and byte ptr [eax], al; add byte ptr [eax], al; mov esp, 0xf0000285; int 0xf7; jmp dword ptr [esi]; 
0x0018ac62: add byte ptr [eax], al; and byte ptr [eax], al; add byte ptr [eax], al; push 0x740001ba; cmp dh, ch; call dword ptr [ebx]; 
0x000b8580: add byte ptr [eax], al; and byte ptr [ebp - 0x5d], 0x6c; add byte ptr [eax], al; add byte ptr [eax + 0xbe], bh; int 0x80; 
0x00174bce: add byte ptr [eax], al; and byte ptr [ebp], dl; add ah, bl; outsd dx, dword ptr [esi]; in eax, dx; call dword ptr [eax]; 
0x0019951e: add byte ptr [eax], al; and byte ptr [ebx + 0x4ffc0002], ah; clc; jmp dword ptr [edx]; 
0x0017a1ce: add byte ptr [eax], al; and byte ptr [ebx - 0x6bd60000], ch; out dx, eax; call dword ptr [eax]; 
0x0019931e: add byte ptr [eax], al; and byte ptr [ecx + 0x446c0002], ah; clc; jmp dword ptr [eax]; 
0x0019ab1e: add byte ptr [eax], al; and byte ptr [ecx - 0x5f63fffe], bh; clc; jmp dword ptr [edx]; 
0x000060f6: add byte ptr [eax], al; and byte ptr [ecx], bl; lldt word ptr [ebx + 0x22000000]; add byte ptr [eax + eax], cl; ret 3; 
0x0018ffce: add byte ptr [eax], al; and byte ptr [ecx], cl; add al, byte ptr [eax]; sbb dword ptr [ebp - 0xa], edx; call dword ptr [eax]; 
0x00173dce: add byte ptr [eax], al; and byte ptr [edi], al; add cl, ch; mov cl, 0xec; call dword ptr [eax]; 
0x001944ce: add byte ptr [eax], al; and byte ptr [esi + 2], cl; add al, bl; and edi, esi; call dword ptr [eax]; 
0x00005836: add byte ptr [eax], al; and byte ptr [esi + 6], dl; add byte ptr [eax + 0x22000001], bl; add byte ptr [eax + eax], cl; ret; 
0x0019b4ce: add byte ptr [eax], al; and byte ptr [esi - 0x2597fffe], bh; clc; call dword ptr [eax]; 
0x0017c94e: add byte ptr [eax], al; and ch, 0xef; call dword ptr [eax]; 
0x0002d7cc: add byte ptr [eax], al; and eax, 0x7fff; or eax, edx; mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x00027213: add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x0017b596: add byte ptr [eax], al; and ebp, esi; out dx, eax; call dword ptr [eax]; 
0x00168c1e: add byte ptr [eax], al; arpl di, bx; out dx, al; call esp; 
0x00184d0f: add byte ptr [eax], al; bound ecx, qword ptr [esi]; or byte ptr [ebx + 0x40e5f02], al; ret; 
0x0009556e: add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x00095c7e: add byte ptr [eax], al; bsf eax, eax; add eax, edx; ret; 
0x0009557e: add byte ptr [eax], al; bsf eax, eax; lea eax, dword ptr [eax + edi + 0x10]; pop edi; ret; 
0x0009558e: add byte ptr [eax], al; bsf eax, eax; lea eax, dword ptr [eax + edi + 0x20]; pop edi; ret; 
0x0009555e: add byte ptr [eax], al; bsf eax, eax; lea eax, dword ptr [eax + edi - 0x10]; pop edi; ret; 
0x00095c8e: add byte ptr [eax], al; bsf eax, eax; lea eax, dword ptr [eax + edx + 0x10]; ret; 
0x00095c9e: add byte ptr [eax], al; bsf eax, eax; lea eax, dword ptr [eax + edx + 0x20]; ret; 
0x00095123: add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x0009582e: add byte ptr [eax], al; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x10]; ret; 
0x0009583e: add byte ptr [eax], al; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x20]; ret; 
0x0009584e: add byte ptr [eax], al; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x30]; ret; 
0x0011bf71: add byte ptr [eax], al; call 0x11bd50; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0011c3c4: add byte ptr [eax], al; call 0x11c1e0; sub esp, 0xc; add esp, 0x1c; ret; 
0x00120690: add byte ptr [eax], al; call 0x1201f0; sub esp, 0x10; add esp, 0x28; pop ebx; ret; 
0x00120d60: add byte ptr [eax], al; call 0x1206a0; sub esp, 0x10; add esp, 0x28; pop ebx; ret; 
0x00127580: add byte ptr [eax], al; call 0x127000; sub esp, 8; add esp, 0x1c; ret; 
0x00133ed6: add byte ptr [eax], al; call 0x129d73; add ebx, 0x326c3; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00133986: add byte ptr [eax], al; call 0x129d73; add ebx, 0x32993; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001337ee: add byte ptr [eax], al; call 0x129d73; add ebx, 0x32aab; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0013316e: add byte ptr [eax], al; call 0x129d73; add ebx, 0x32eab; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0002edfe: add byte ptr [eax], al; call 0x129d77; add ecx, 0x1741ef; mov eax, dword ptr [ecx + 0x58]; ret; 
0x0002319e: add byte ptr [eax], al; call 0x129d77; add ecx, 0x17fe4f; mov eax, dword ptr [ecx + 0xfe4]; ret; 
0x0001af8e: add byte ptr [eax], al; call 0x129d77; add ecx, 0x18805f; mov eax, dword ptr [ecx + 0x36c0]; ret; 
0x0001af6e: add byte ptr [eax], al; call 0x129d77; add ecx, 0x18807f; mov eax, dword ptr [ecx + 0x36c8]; ret; 
0x0001964e: add byte ptr [eax], al; call 0x129d77; add ecx, 0x18999f; lea eax, dword ptr [ecx - 0x43dee]; ret; 
0x000948ae: add byte ptr [eax], al; call 0x129d77; add ecx, 0xc604f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008e90e: add byte ptr [eax], al; call 0x129d77; add ecx, 0xcbe1b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008d2ce: add byte ptr [eax], al; call 0x129d77; add ecx, 0xcd2fb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001870e6: add byte ptr [eax], al; call 0x1418726b; push edx; jmp dword ptr [ebx]; 
0x000e8a34: add byte ptr [eax], al; call 0x16ee0; mov dword ptr [ebx + 0xf2c], eax; add esp, 0x18; pop ebx; ret; 
0x0010a4e4: add byte ptr [eax], al; call 0x16ee0; mov dword ptr [ebx + 0xf94], eax; add esp, 0x18; pop ebx; ret; 
0x000276ad: add byte ptr [eax], al; call 0x272d0; mov eax, dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x0002ba6b: add byte ptr [eax], al; call 0x2b9b0; add esp, 0x2c; ret; 
0x0002ebe4: add byte ptr [eax], al; call 0x2e3f0; add esp, 0x18; pop ebx; ret; 
0x0002f770: add byte ptr [eax], al; call 0x2f730; jmp eax; 
0x00190ee6: add byte ptr [eax], al; call 0x4191109; cdq; idiv bh; ret; 
0x0006c2d6: add byte ptr [eax], al; call 0x6b840; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000736bf: add byte ptr [eax], al; call 0x72930; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00072ea4: add byte ptr [eax], al; call 0x72ab0; add esp, 0x18; pop ebx; ret; 
0x0017dee6: add byte ptr [eax], al; call 0x8417dfd9; sbb al, 0xf0; jmp dword ptr [edx]; 
0x000b3970: add byte ptr [eax], al; call 0xb3800; sub esp, 4; add esp, 0x18; pop ebx; ret; 
0x0019ae96: add byte ptr [eax], al; call 0xb719b154; mov ah, 0xf8; call dword ptr [eax]; 
0x000b9350: add byte ptr [eax], al; call 0xb92e0; add esp, 0x1c; ret; 
0x000e6895: add byte ptr [eax], al; call 0xba100; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000c5e9a: add byte ptr [eax], al; call 0xc5da0; add esp, 4; pop ebx; ret; 
0x0018bde6: add byte ptr [eax], al; call 0xd418bfb8; lahf; cmc; call dword ptr [esi]; 
0x000dff86: add byte ptr [eax], al; call 0xdf720; add esp, 0xd4; pop ebx; pop esi; ret; 
0x000e6469: add byte ptr [eax], al; call 0xe6d00; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000eaddc: add byte ptr [eax], al; call 0xea460; add esp, 0x28; pop ebx; ret; 
0x00171be6: add byte ptr [eax], al; call 0xf4171c16; ret 0xffeb; 
0x001987e6: add byte ptr [eax], al; call 0xf4198a82; sbb edi, eax; jmp dword ptr [edi]; 
0x00124ab9: add byte ptr [eax], al; call dword ptr [eax + 0x10]; 
0x0011d94e: add byte ptr [eax], al; call dword ptr [eax + 0x14]; 
0x00066c87: add byte ptr [eax], al; call dword ptr [eax + 0x24]; 
0x00124dc5: add byte ptr [eax], al; call dword ptr [eax + 0xc]; 
0x00124a51: add byte ptr [eax], al; call dword ptr [eax + 4]; 
0x00124d16: add byte ptr [eax], al; call dword ptr [eax + 8]; 
0x00076f5b: add byte ptr [eax], al; call dword ptr [eax]; 
0x00076ed1: add byte ptr [eax], al; call dword ptr [ebp]; 
0x00074d6e: add byte ptr [eax], al; call dword ptr [ecx]; 
0x001194fa: add byte ptr [eax], al; call dword ptr [edx + 8]; 
0x00074d0f: add byte ptr [eax], al; call dword ptr [edx]; 
0x000232ac: add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b85cb: add byte ptr [eax], al; call dword ptr gs:[0x10]; mov eax, 1; int 0x80; 
0x000de569: add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000fc1e8: add byte ptr [eax], al; call dword ptr gs:[0x10]; pop edx; pop ecx; pop ebx; ret; 
0x000b9083: add byte ptr [eax], al; call dword ptr gs:[0x10]; ret; 
0x000eedeb: add byte ptr [eax], al; call dword ptr gs:[0x10]; xchg ebx, ecx; ret; 
0x000c5b39: add byte ptr [eax], al; call dword ptr gs:[0x10]; xchg ebx, edi; neg eax; pop edi; ret; 
0x00019530: add byte ptr [eax], al; call eax; 
0x00111269: add byte ptr [eax], al; call eax; add esp, 0x18; lea eax, dword ptr [ebx + 0x32cc]; pop ebx; ret; 
0x000fe8b1: add byte ptr [eax], al; call eax; add esp, 0x18; pop ebx; ret; 
0x000fc0e9: add byte ptr [eax], al; call eax; add esp, 8; pop ebx; ret; 
0x0015188e: add byte ptr [eax], al; call edi; 
0x0012ea73: add byte ptr [eax], al; call edx; 
0x00150a3e: add byte ptr [eax], al; call esp; 
0x001775f6: add byte ptr [eax], al; clc; add dword ptr [eax], 0; adc al, 0xef; call esp; 
0x00187ff6: add byte ptr [eax], al; clc; lea eax, dword ptr [ecx]; add ah, dh; mov ah, 0xf3; jmp dword ptr [esi + 3]; 
0x001992f6: add byte ptr [eax], al; clc; mov al, byte ptr [0x44640002]; clc; call dword ptr [ecx]; 
0x001894f6: add byte ptr [eax], al; clc; mov byte ptr [0x5e840001], al; hlt; call dword ptr [edx]; 
0x00177ef6: add byte ptr [eax], al; clc; mov word ptr [eax], es; add byte ptr [edi], dl; out dx, eax; call dword ptr [edi + 1]; 
0x0017cb16: add byte ptr [eax], al; clc; out dx, eax; call dword ptr [eax]; 
0x0016f9f6: add byte ptr [eax], al; clc; ret 0xffea; 
0x00173fc2: add byte ptr [eax], al; cld; mov ch, 0xec; jmp dword ptr [ebx]; 
0x0017d8fa: add byte ptr [eax], al; cld; out 0, al; add byte ptr [eax], al; or eax, esi; call dword ptr [eax]; 
0x00174ba2: add byte ptr [eax], al; cld; outsd dx, dword ptr [esi]; in eax, dx; call dword ptr [eax]; 
0x0018c5fa: add byte ptr [eax], al; cld; rol dword ptr [ecx], cl; add byte ptr [eax - 0x48], dl; cmc; call dword ptr [edx]; 
0x0017a892: add byte ptr [eax], al; cld; test edi, ebp; jmp dword ptr [eax]; 
0x001730ba: add byte ptr [eax], al; cmc; add ch, ah; call dword ptr [eax]; 
0x000f0d16: add byte ptr [eax], al; cmovb eax, edx; pop esi; ret; 
0x00098420: add byte ptr [eax], al; cmove eax, ecx; ret; 
0x00041d55: add byte ptr [eax], al; cmove eax, edx; mov dword ptr [eax], 0x7665642f; mov dword ptr [eax + 4], 0x7974742f; mov byte ptr [eax + 8], 0; ret; 
0x0002dfc9: add byte ptr [eax], al; cmovne edx, eax; xchg edi, ebx; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x000e8643: add byte ptr [eax], al; cmovne esi, eax; mov eax, esi; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0017cab6: add byte ptr [eax], al; cmp ah, dh; out dx, eax; call dword ptr [eax]; 
0x0017dee2: add byte ptr [eax], al; cmp al, 0; add byte ptr [eax], al; call 0x8417dfd9; sbb al, 0xf0; jmp dword ptr [edx]; 
0x00170f3a: add byte ptr [eax], al; cmp al, 0x1d; add byte ptr [eax], al; add byte ptr [eax - 0x15], ch; jmp dword ptr [ebx]; 
0x0017dc12: add byte ptr [eax], al; cmp al, 0x1d; sti; call dword ptr [eax + 8]; 
0x00178df2: add byte ptr [eax], al; cmp al, 0x3a; out dx, eax; jmp dword ptr [esi + 2]; 
0x0018343a: add byte ptr [eax], al; cmp al, 0x42; add dword ptr [eax], eax; push eax; cmp esi, ecx; jmp edx; 
0x0018453a: add byte ptr [eax], al; cmp al, 0x53; add dword ptr [eax], eax; cmp bh, 0xf1; call edi; 
0x00186a3a: add byte ptr [eax], al; cmp al, 0x78; add dword ptr [eax], eax; sal dl, 0xf2; call ecx; 
0x00199d3a: add byte ptr [eax], al; cmp al, 0xab; add al, byte ptr [eax]; and byte ptr [esi - 8], bl; jmp dword ptr [ebx]; 
0x0017c372: add byte ptr [eax], al; cmp al, 0xb2; out dx, eax; jmp dword ptr [edi]; 
0x0017c462: add byte ptr [eax], al; cmp al, 0xba; out dx, eax; jmp dword ptr [ebx]; 
0x0017ad3a: add byte ptr [eax], al; cmp al, 0xbb; add byte ptr [eax], al; rol byte ptr [edi], 1; sti; jmp edx; 
0x00168e1e: add byte ptr [eax], al; cmp al, 0xdb; out dx, eax; push dword ptr [eax + 0x480000e6]; fucomi st(7); jmp eax; 
0x00182bff: add byte ptr [eax], al; cmp al, byte ptr [ecx]; add byte ptr [esp + ebx*2], ch; cld; call dword ptr [ebx]; 
0x0008b511: add byte ptr [eax], al; cmp byte ptr [eax], 1; sbb eax, -1; pop edi; pop ebx; ret; 
0x00199336: add byte ptr [eax], al; cmp byte ptr [ecx + 0x44740002], ah; clc; jmp dword ptr [edi]; 
0x00170c36: add byte ptr [eax], al; cmp byte ptr [edx - 0x15], ah; jmp dword ptr [edx]; 
0x001730e6: add byte ptr [eax], al; cmp byte ptr [edx], bh; add byte ptr [eax], al; aad 2; in al, dx; call dword ptr [eax]; 
0x00183836: add byte ptr [eax], al; cmp byte ptr [esi + 1], al; add byte ptr [ecx + ecx*2], al; int1; call dword ptr [edx]; 
0x0019b52e: add byte ptr [eax], al; cmp byte ptr [esi - 0x25d7fffe], 0xf8; call dword ptr [eax]; 
0x0017c336: add byte ptr [eax], al; cmp cl, dl; add byte ptr [eax], al; adc al, 0xb0; out dx, eax; jmp dword ptr [eax + 2]; 
0x0018b836: add byte ptr [eax], al; cmp dh, al; add dword ptr [eax], eax; mov ah, 0x79; cmc; jmp dword ptr [esi]; 
0x0019f3de: add byte ptr [eax], al; cmp dword ptr [ebx], eax; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000b9a79: add byte ptr [eax], al; cmp dword ptr gs:[edx], 0x26; mov edx, 0xffffffff; cmovne eax, edx; ret; 
0x0007ad82: add byte ptr [eax], al; cmp eax, -1; cmove eax, edx; add esp, 0x1c; ret; 
0x00054e3a: add byte ptr [eax], al; cmp eax, 0x4000; sete dl; mov eax, edx; add esp, 0x7c; ret; 
0x0011c4c8: add byte ptr [eax], al; cmp eax, edx; cmove eax, dword ptr [ebx - 0x5c]; add esp, 8; pop ebx; ret; 
0x00105077: add byte ptr [eax], al; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0016e876: add byte ptr [eax], al; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; call eax; 
0x0016e8c6: add byte ptr [eax], al; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; call esp; 
0x0018f946: add byte ptr [eax], al; cwde; add al, byte ptr [edx]; add byte ptr [esi + eax*2 - 0xa], cl; call dword ptr [eax]; 
0x0019289a: add byte ptr [eax], al; cwde; add byte ptr [eax], al; add byte ptr [eax - 0x13fffdca], ah; out 0xf6, al; call dword ptr [esi + 5]; 
0x0017c5a6: add byte ptr [eax], al; cwde; leave; out dx, eax; call edi; 
0x0017cba6: add byte ptr [eax], al; cwde; out dx, eax; call dword ptr [eax]; 
0x00179b96: add byte ptr [eax], al; cwde; test eax, 0x60440000; out dx, eax; call dword ptr [ebx]; 
0x001780e6: add byte ptr [eax], al; daa; sti; call dword ptr [eax]; 
0x00172ff6: add byte ptr [eax], al; dec eax; cmp dword ptr [eax], eax; add byte ptr [ebp + 3], dh; in al, dx; call dword ptr [eax]; 
0x00168e26: add byte ptr [eax], al; dec eax; fucomi st(7); jmp eax; 
0x0018e246: add byte ptr [eax], al; dec eax; lock add dword ptr [eax], eax; test byte ptr [esi + esi*8], cl; call dword ptr [edx]; 
0x0017a446: add byte ptr [eax], al; dec eax; mov dl, 0; add byte ptr [edx + edi*2], dh; out dx, eax; jmp dword ptr [esi]; 
0x0017aa46: add byte ptr [eax], al; dec eax; mov eax, 0x89e40000; out dx, eax; call dword ptr [edx]; 
0x0018b146: add byte ptr [eax], al; dec eax; mov edi, 0x4f640001; cmc; call dword ptr [ebx]; 
0x0018fa46: add byte ptr [eax], al; dec eax; or byte ptr [edx], al; add byte ptr [ebp + eax*2 - 0xa], dh; call dword ptr [ebx + 1]; 
0x00179b86: add byte ptr [eax], al; dec eax; pushal; out dx, eax; call dword ptr [eax]; 
0x0018b546: add byte ptr [eax], al; dec eax; ret; 
0x00170c46: add byte ptr [eax], al; dec eax; sbb al, byte ptr [eax]; add byte ptr [edx - 0x15], dl; jmp dword ptr [eax]; 
0x001722d6: add byte ptr [eax], al; dec eax; shr ebx, cl; jmp dword ptr [esi]; 
0x00177f26: add byte ptr [eax], al; dec eax; sub bh, ch; call edx; 
0x0017b3e6: add byte ptr [eax], al; dec ebp; imul bh; call dword ptr [eax]; 
0x0017b266: add byte ptr [eax], al; dec ebp; imul edi; call dword ptr [eax]; 
0x0018740b: add byte ptr [eax], al; dec ebx; push cs; or byte ptr [ebx + 0x40e5902], al; ret; 
0x00173d42: add byte ptr [eax], al; dec ecx; mov dl, 0xec; call dword ptr [eax]; 
0x001731b2: add byte ptr [eax], al; dec esp; add esp, ebp; jmp dword ptr [ecx]; 
0x0017e102: add byte ptr [eax], al; dec esp; and esi, eax; jmp dword ptr [edi]; 
0x00170d62: add byte ptr [eax], al; dec esp; arpl bx, bp; call dword ptr [ebx]; 
0x0016f852: add byte ptr [eax], al; dec esp; stosd dword ptr es:[edi], eax; std; jmp dword ptr [ebp]; 
0x0017c94a: add byte ptr [eax], al; dec esp; xlatb; add byte ptr [eax], al; and ch, 0xef; call dword ptr [eax]; 
0x0018fa86: add byte ptr [eax], al; fadd dword ptr [ebx]; add al, byte ptr [eax]; xor dword ptr [eax - 0xa], ecx; call dword ptr [eax]; 
0x00173416: add byte ptr [eax], al; fadd dword ptr [esi]; in al, dx; jmp dword ptr [edi]; 
0x00194c86: add byte ptr [eax], al; fcom dword ptr [ebp + 2]; add bh, dl; sub esi, edi; call dword ptr [eax]; 
0x0019898a: add byte ptr [eax], al; fcom qword ptr [edx + 0x32790002]; clc; call dword ptr [eax]; 
0x00174ad6: add byte ptr [eax], al; fcomp dword ptr [eax]; add byte ptr [esp + edx*2], al; in eax, dx; call esp; 
0x001711a6: add byte ptr [eax], al; fdiv dword ptr [ebx - 0x15]; call ecx; 
0x001769da: add byte ptr [eax], al; fdiv qword ptr [edi]; add byte ptr [eax + 2], al; out dx, eax; call dword ptr [ecx]; 
0x0017cb46: add byte ptr [eax], al; fdiv st(3); out dx, eax; call dword ptr [eax]; 
0x0017aada: add byte ptr [eax], al; fdivr qword ptr [eax - 0x74600000]; out dx, eax; call dword ptr [edx]; 
0x0019ca6a: add byte ptr [eax], al; fild word ptr [0x1250000]; add byte ptr [eax], al; ret; 
0x0019e50e: add byte ptr [eax], al; fld qword ptr [ebx]; add byte ptr [eax], al; ret; 
0x000338c7: add byte ptr [eax], al; fld qword ptr [esp + 0x18]; add esp, 0x28; pop ebx; ret; 
0x0002d8ab: add byte ptr [eax], al; fld xword ptr [esp + 0x40]; add esp, 0x7c; ret; 
0x00175472: add byte ptr [eax], al; fmul dword ptr [ebx]; add byte ptr [eax], al; mov byte ptr [ebx], al; out dx, al; call dword ptr [ecx]; 
0x0017c1d6: add byte ptr [eax], al; fmul st(7); add byte ptr [eax], al; aam 0x92; out dx, eax; jmp dword ptr [edi]; 
0x00170be6: add byte ptr [eax], al; fsub dword ptr [ecx - 0x15]; jmp dword ptr [eax]; 
0x001896da: add byte ptr [eax], al; fsub qword ptr [ecx + eax - 0xb932000]; jmp dword ptr [edi + 2]; 
0x0018a1d6: add byte ptr [eax], al; fsubr dword ptr [edi - 0x164bffff]; hlt; call dword ptr [eax + 6]; 
0x00175eda: add byte ptr [eax], al; fsubr qword ptr [eax + eax]; sal al, 0xee; jmp dword ptr [edx]; 
0x00174bd2: add byte ptr [eax], al; fsubr qword ptr [edi - 0x13]; call dword ptr [eax]; 
0x0017be66: add byte ptr [eax], al; fucomp st(6); out dx, eax; call dword ptr [eax]; 
0x00168ace: add byte ptr [eax], al; hlt; dec ecx; out dx, al; call dword ptr [eax - 0x2d]; 
0x0018d1f2: add byte ptr [eax], al; hlt; fild word ptr [ecx]; add byte ptr [eax - 0x22], bh; cmc; jmp dword ptr [ecx]; 
0x00168f0e: add byte ptr [eax], al; hlt; in al, dx; out dx, eax; jmp dword ptr [eax - 0x13]; 
0x0017adf2: add byte ptr [eax], al; hlt; mov ebx, 0xc080000; sti; jmp dword ptr [ebx]; 
0x0017b1a2: add byte ptr [eax], al; hlt; mov edx, 0xf7cd0000; out dx, eax; call dword ptr [eax]; 
0x001960f2: add byte ptr [eax], al; hlt; outsb dx, byte ptr [esi]; add al, byte ptr [eax]; sub byte ptr [eax - 9], ch; call dword ptr [ecx]; 
0x0016f9f2: add byte ptr [eax], al; hlt; pop es; add byte ptr [eax], al; clc; ret 0xffea; 
0x001682ae: add byte ptr [eax], al; hlt; push -0x14; call dword ptr [eax - 0x5d]; 
0x00171bea: add byte ptr [eax], al; hlt; ret 0xffeb; 
0x00168706: add byte ptr [eax], al; hlt; ret 0xffec; 
0x0017baa2: add byte ptr [eax], al; hlt; ret; 
0x0017b7a2: add byte ptr [eax], al; hlt; rol byte ptr [eax], 0; mov cl, 0xf3; out dx, eax; call dword ptr [eax]; 
0x001890f2: add byte ptr [eax], al; hlt; sahf; add dword ptr [eax], eax; or byte ptr [edx - 0xc], al; call edi; 
0x0017df2a: add byte ptr [eax], al; hlt; sbb al, 0xf0; call esp; 
0x00167f5e: add byte ptr [eax], al; imul bl; jmp eax; 
0x0018497e: add byte ptr [eax], al; in al, 0; add dword ptr [eax], eax; pop esp; sbb dl, dh; call dword ptr [ecx]; 
0x00170be2: add byte ptr [eax], al; in al, 0x19; add byte ptr [eax], al; fsub dword ptr [ecx - 0x15]; jmp dword ptr [eax]; 
0x0017496a: add byte ptr [eax], al; in al, 0x30; in eax, dx; call dword ptr [ebx + 1]; 
0x001759e2: add byte ptr [eax], al; in al, 0x67; add byte ptr [eax], al; sub bh, bl; out dx, al; jmp dword ptr [esi]; 
0x00168826: add byte ptr [eax], al; in al, 0x6c; in eax, dx; jmp dword ptr [eax - 0x3f]; 
0x0017aa4a: add byte ptr [eax], al; in al, 0x89; out dx, eax; call dword ptr [edx]; 
0x001689a6: add byte ptr [eax], al; in al, 0xa0; in eax, dx; dec dword ptr [edx + ecx*8 - 0x5d8c0000]; in eax, dx; call esp; 
0x0019a992: add byte ptr [eax], al; in al, 0xb2; add al, byte ptr [eax]; adc al, 0xa2; clc; call dword ptr [eax]; 
0x00168586: add byte ptr [eax], al; in al, 0xb2; in al, dx; jmp dword ptr [eax - 0x4d]; 
0x001685de: add byte ptr [eax], al; in al, 0xb5; in al, dx; call eax; 
0x0017b592: add byte ptr [eax], al; in al, 0xbe; add byte ptr [eax], al; and ebp, esi; out dx, eax; call dword ptr [eax]; 
0x0017bb92: add byte ptr [eax], al; in al, 0xc4; add byte ptr [eax], al; loope 0x17bb8a; out dx, eax; call dword ptr [eax]; 
0x0018c1e2: add byte ptr [eax], al; in al, 0xcf; add dword ptr [eax], eax; clc; and edi, edx; call dword ptr [edi]; 
0x00168d96: add byte ptr [eax], al; in al, 0xd3; out dx, eax; push dword ptr [ebx - 0x2bdc0000]; out dx, eax; call eax; 
0x00168b76: add byte ptr [eax], al; in al, 0xd4; out dx, al; dec dword ptr [esi + edx*8 - 0x26fc0000]; out dx, al; call eax; 
0x00192cfe: add byte ptr [eax], al; in al, 1; add byte ptr [ecx + esi*8 - 0xa], bh; call dword ptr [esi]; 
0x001758ea: add byte ptr [eax], al; in al, dx; add byte ptr [eax], al; mov al, 0x61; out dx, al; call edx; 
0x00172d9a: add byte ptr [eax], al; in al, dx; add byte ptr ss:[eax], al; pop edx; add ah, ch; call dword ptr [eax]; 
0x00168ea6: add byte ptr [eax], al; in al, dx; in al, 0xef; call dword ptr [eax]; 
0x0019a3ea: add byte ptr [eax], al; in al, dx; mov cl, 2; add al, ah; mov bh, al; call dword ptr [edx]; 
0x0019afea: add byte ptr [eax], al; in al, dx; mov ebp, 0xb5800002; clc; jmp dword ptr [eax]; 
0x00176fd2: add byte ptr [eax], al; in al, dx; or ebp, edi; jmp dword ptr [ebx]; 
0x0016d3d7: add byte ptr [eax], al; in al, dx; stc; jmp dword ptr [eax - 0x36]; 
0x001884ea: add byte ptr [eax], al; in al, dx; xchg eax, edx; add dword ptr [eax], eax; rcl bh, 0xf3; jmp dword ptr [eax]; 
0x0017b2f6: add byte ptr [eax], al; in eax, dx; imul bh; call dword ptr [eax]; 
0x00159481: add byte ptr [eax], al; inc eax; add byte ptr [edx], al; add byte ptr [eax], al; add dword ptr [0x73950000], ecx; ret 0x48; 
0x001769de: add byte ptr [eax], al; inc eax; add ch, bh; call dword ptr [ecx]; 
0x0019da9e: add byte ptr [eax], al; inc eax; add eax, 0; add byte ptr [eax], al; ret 3; 
0x00177c8e: add byte ptr [eax], al; inc eax; and bh, ch; call dword ptr [esi]; 
0x00198a3e: add byte ptr [eax], al; inc eax; cwde; add al, byte ptr [eax]; mov word ptr [eax + edi*8], gs; call dword ptr [eax]; 
0x0017cf3e: add byte ptr [eax], al; inc eax; fld qword ptr [eax]; add byte ptr [esp + esi*8 - 0x11], ch; call dword ptr [edx]; 
0x00195d3e: add byte ptr [eax], al; inc eax; imul eax, dword ptr [edx], 0; mov word ptr [edi - 9], es; jmp dword ptr [esi]; 
0x0018a23e: add byte ptr [eax], al; inc eax; mov al, 1; add byte ptr [eax + esi*8], ch; hlt; call dword ptr [ebx]; 
0x00187a3e: add byte ptr [eax], al; inc eax; mov byte ptr [ecx], al; add byte ptr [edx - 0xd], bl; jmp dword ptr [eax + 3]; 
0x0017b566: add byte ptr [eax], al; inc ecx; cmc; out dx, eax; call dword ptr [eax]; 
0x00172e3b: add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x200e4e02], al; imul ecx, dword ptr [esi], 0x40e4108; ret; 
0x0018575b: add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e5902], al; ret; 
0x00189c9f: add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e5a02], al; ret; 
0x0017d777: add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e5b02], al; ret; 
0x0016f453: add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e6102], al; ret; 
0x0019b3eb: add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e6e02], al; ret; 
0x00198223: add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e6f02], al; ret; 
0x00191707: add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e7002], al; ret; 
0x0017d097: add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e7202], al; ret; 
0x0017d707: add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e7802], al; ret; 
0x00190ff3: add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e7a02], al; ret; 
0x0017c91f: add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e7f02], al; ret; 
0x0019dcb2: add byte ptr [eax], al; inc edi; push es; add byte ptr [eax], al; ret; 
0x0017c8ae: add byte ptr [eax], al; inc esp; add byte ptr [eax], al; add byte ptr [esi + edx*8 - 0x20f80000], dh; out dx, eax; jmp dword ptr [esi]; 
0x0019ab42: add byte ptr [eax], al; inc esp; mov ecx, 0xa0e80002; clc; jmp dword ptr [edx]; 
0x0017b2f2: add byte ptr [eax], al; inc esp; mov esp, 0xf6ed0000; out dx, eax; call dword ptr [eax]; 
0x0016816e: add byte ptr [eax], al; inc esp; pop edx; in al, dx; call dword ptr [eax]; 
0x00179b9a: add byte ptr [eax], al; inc esp; pushal; out dx, eax; call dword ptr [ebx]; 
0x0017b8f2: add byte ptr [eax], al; inc esp; ret 0; 
0x0017892a: add byte ptr [eax], al; inc esp; sub ch, bh; jmp dword ptr [ebx]; 
0x0017046a: add byte ptr [eax], al; insb byte ptr es:[edi], dx; adc al, byte ptr [eax]; add al, dh; xor ebp, ebx; jmp dword ptr [esi]; 
0x0017cf42: add byte ptr [eax], al; insb byte ptr es:[edi], dx; hlt; out dx, eax; call dword ptr [edx]; 
0x0019ae6a: add byte ptr [eax], al; insb byte ptr es:[edi], dx; mov esp, 0xb2800002; clc; call dword ptr [esi + 1]; 
0x0018b56a: add byte ptr [eax], al; insb byte ptr es:[edi], dx; ret; 
0x0018a16a: add byte ptr [eax], al; insb byte ptr es:[edi], dx; scasd eax, dword ptr es:[edi]; add dword ptr [eax], eax; sar byte ptr [esi], 0xfa; call dword ptr [eax]; 
0x0017b3b6: add byte ptr [eax], al; insd dword ptr es:[edi], dx; imul bh; call dword ptr [eax]; 
0x0017b236: add byte ptr [eax], al; insd dword ptr es:[edi], dx; imul edi; call dword ptr [eax]; 
0x0002df33: add byte ptr [eax], al; int 0x80; 
0x0017b326: add byte ptr [eax], al; int 0xf6; out dx, eax; call dword ptr [eax]; 
0x0017b1a6: add byte ptr [eax], al; int 0xf7; out dx, eax; call dword ptr [eax]; 
0x00168bce: add byte ptr [eax], al; int1; fucomi st(6); call dword ptr [eax]; 
0x0017b746: add byte ptr [eax], al; int1; out dx, eax; call dword ptr [eax]; 
0x0017bce6: add byte ptr [eax], al; int1; out dx, eax; out dx, eax; call dword ptr [eax]; 
0x001691d6: add byte ptr [eax], al; into; adc dh, al; jmp dword ptr [eax - 4]; 
0x00178176: add byte ptr [eax], al; into; sti; call dword ptr [eax]; 
0x00168f06: add byte ptr [eax], al; jecxz 0x168ef6; out dx, eax; jmp esp; 
0x000ea857: add byte ptr [eax], al; jmp dword ptr [ebp - 0x77]; 
0x00016ebe: add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x00016eb4: add byte ptr [eax], al; jmp dword ptr [ebx + 8]; 
0x000566c7: add byte ptr [eax], al; jmp edx; 
0x0017929e: add byte ptr [eax], al; jo 0x1792f3; out dx, eax; jmp dword ptr [ebx]; 
0x0017a31e: add byte ptr [eax], al; jo 0x17a2ce; add byte ptr [eax], al; xchg eax, ebx; out dx, eax; call dword ptr [eax]; 
0x0017c36e: add byte ptr [eax], al; jo 0x17c343; add byte ptr [eax], al; cmp al, 0xb2; out dx, eax; jmp dword ptr [edi]; 
0x0018316e: add byte ptr [eax], al; jo 0x1831b1; add dword ptr [eax], eax; cmp al, 0xf2; cli; jmp dword ptr [ebx + 1]; 
0x00187523: add byte ptr [eax], al; jo 0x187535; or byte ptr [edx + 9], al; add eax, dword ptr [edx]; push esi; ret; 
0x0018aff3: add byte ptr [eax], al; jo 0x18b005; or byte ptr [edx + 9], al; add eax, dword ptr [edx]; push esi; ret; 
0x0019521e: add byte ptr [eax], al; jo 0x19527d; add al, byte ptr [eax]; pop edi; xor al, 0xf7; call dword ptr [eax]; 
0x0019b26e: add byte ptr [eax], al; jo 0x19b232; add al, byte ptr [eax]; fdiv st(6), st(0); cli; call dword ptr [ebx + 1]; 
0x0000b126: add byte ptr [eax], al; jo 0xb112; add eax, dword ptr [eax]; ret; 
0x0016889e: add byte ptr [eax], al; jp 0x168890; push dword ptr [eax - 0x5bffff3c]; jp 0x168898; call esp; 
0x00172d6e: add byte ptr [eax], al; jp 0x172d72; in al, dx; call dword ptr [eax]; 
0x0019df7e: add byte ptr [eax], al; lahf; pop es; add byte ptr [eax], al; ret 7; 
0x00148fb9: add byte ptr [eax], al; lea eax, dword ptr [eax + 0xb]; pop edi; ret; 
0x00148fe2: add byte ptr [eax], al; lea eax, dword ptr [eax + 0xf]; pop edi; ret; 
0x00148ff7: add byte ptr [eax], al; lea eax, dword ptr [eax + 1]; pop edi; ret; 
0x00149007: add byte ptr [eax], al; lea eax, dword ptr [eax + 2]; pop edi; ret; 
0x00148f4f: add byte ptr [eax], al; lea eax, dword ptr [eax + 3]; pop edi; ret; 
0x00149017: add byte ptr [eax], al; lea eax, dword ptr [eax + 4]; pop edi; ret; 
0x00148f82: add byte ptr [eax], al; lea eax, dword ptr [eax + 7]; pop edi; ret; 
0x00030dde: add byte ptr [eax], al; lea eax, dword ptr [eax + eax*8]; add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x00025eb6: add byte ptr [eax], al; lea eax, dword ptr [ebx + 0x10ac]; pop ebx; ret; 
0x0014849e: add byte ptr [eax], al; lea eax, dword ptr [ecx + 0xa]; ret; 
0x001484ae: add byte ptr [eax], al; lea eax, dword ptr [ecx + 0xb]; ret; 
0x00148429: add byte ptr [eax], al; lea eax, dword ptr [ecx + 0xc]; ret; 
0x001484be: add byte ptr [eax], al; lea eax, dword ptr [ecx + 0xd]; ret; 
0x001484ce: add byte ptr [eax], al; lea eax, dword ptr [ecx + 0xe]; ret; 
0x001484de: add byte ptr [eax], al; lea eax, dword ptr [ecx + 0xf]; ret; 
0x00148687: add byte ptr [eax], al; lea eax, dword ptr [ecx + 1]; ret; 
0x0014843e: add byte ptr [eax], al; lea eax, dword ptr [ecx + 2]; ret; 
0x0014844e: add byte ptr [eax], al; lea eax, dword ptr [ecx + 3]; ret; 
0x001483d6: add byte ptr [eax], al; lea eax, dword ptr [ecx + 4]; ret; 
0x0014845e: add byte ptr [eax], al; lea eax, dword ptr [ecx + 5]; ret; 
0x0014846e: add byte ptr [eax], al; lea eax, dword ptr [ecx + 6]; ret; 
0x0014847e: add byte ptr [eax], al; lea eax, dword ptr [ecx + 7]; ret; 
0x00148400: add byte ptr [eax], al; lea eax, dword ptr [ecx + 8]; ret; 
0x0014848e: add byte ptr [eax], al; lea eax, dword ptr [ecx + 9]; ret; 
0x0014748e: add byte ptr [eax], al; lea eax, dword ptr [edi + 0xa]; pop edi; ret; 
0x00147354: add byte ptr [eax], al; lea eax, dword ptr [edi + 0xb]; pop edi; ret; 
0x001474ae: add byte ptr [eax], al; lea eax, dword ptr [edi + 0xc]; pop edi; ret; 
0x001474be: add byte ptr [eax], al; lea eax, dword ptr [edi + 0xd]; pop edi; ret; 
0x001474ce: add byte ptr [eax], al; lea eax, dword ptr [edi + 0xe]; pop edi; ret; 
0x0014730e: add byte ptr [eax], al; lea eax, dword ptr [edi + 0xf]; pop edi; ret; 
0x0014740e: add byte ptr [eax], al; lea eax, dword ptr [edi + 1]; pop edi; ret; 
0x0014741e: add byte ptr [eax], al; lea eax, dword ptr [edi + 2]; pop edi; ret; 
0x001472b1: add byte ptr [eax], al; lea eax, dword ptr [edi + 3]; pop edi; ret; 
0x0014743e: add byte ptr [eax], al; lea eax, dword ptr [edi + 4]; pop edi; ret; 
0x0014744e: add byte ptr [eax], al; lea eax, dword ptr [edi + 5]; pop edi; ret; 
0x0014745e: add byte ptr [eax], al; lea eax, dword ptr [edi + 6]; pop edi; ret; 
0x0014726b: add byte ptr [eax], al; lea eax, dword ptr [edi + 7]; pop edi; ret; 
0x0014746e: add byte ptr [eax], al; lea eax, dword ptr [edi + 8]; pop edi; ret; 
0x0014747e: add byte ptr [eax], al; lea eax, dword ptr [edi + 9]; pop edi; ret; 
0x00147831: add byte ptr [eax], al; lea eax, dword ptr [edi - 0x10]; pop edi; ret; 
0x001478ee: add byte ptr [eax], al; lea eax, dword ptr [edi - 0xa]; pop edi; ret; 
0x001478de: add byte ptr [eax], al; lea eax, dword ptr [edi - 0xb]; pop edi; ret; 
0x00147856: add byte ptr [eax], al; lea eax, dword ptr [edi - 0xc]; pop edi; ret; 
0x001478ce: add byte ptr [eax], al; lea eax, dword ptr [edi - 0xd]; pop edi; ret; 
0x001478be: add byte ptr [eax], al; lea eax, dword ptr [edi - 0xe]; pop edi; ret; 
0x0014795e: add byte ptr [eax], al; lea eax, dword ptr [edi - 1]; pop edi; ret; 
0x0014794e: add byte ptr [eax], al; lea eax, dword ptr [edi - 2]; pop edi; ret; 
0x0014793e: add byte ptr [eax], al; lea eax, dword ptr [edi - 3]; pop edi; ret; 
0x001478a9: add byte ptr [eax], al; lea eax, dword ptr [edi - 4]; pop edi; ret; 
0x0014792e: add byte ptr [eax], al; lea eax, dword ptr [edi - 5]; pop edi; ret; 
0x0014791e: add byte ptr [eax], al; lea eax, dword ptr [edi - 6]; pop edi; ret; 
0x0014790e: add byte ptr [eax], al; lea eax, dword ptr [edi - 7]; pop edi; ret; 
0x00147880: add byte ptr [eax], al; lea eax, dword ptr [edi - 8]; pop edi; ret; 
0x001478fe: add byte ptr [eax], al; lea eax, dword ptr [edi - 9]; pop edi; ret; 
0x001473fe: add byte ptr [eax], al; lea eax, dword ptr [edi]; pop edi; ret; 
0x00148afe: add byte ptr [eax], al; lea eax, dword ptr [edx + 0xa]; ret; 
0x00148a50: add byte ptr [eax], al; lea eax, dword ptr [edx + 0xb]; ret; 
0x00148b0e: add byte ptr [eax], al; lea eax, dword ptr [edx + 0xc]; ret; 
0x00148b1e: add byte ptr [eax], al; lea eax, dword ptr [edx + 0xd]; ret; 
0x00148b2e: add byte ptr [eax], al; lea eax, dword ptr [edx + 0xe]; ret; 
0x00148a79: add byte ptr [eax], al; lea eax, dword ptr [edx + 0xf]; ret; 
0x00148a8e: add byte ptr [eax], al; lea eax, dword ptr [edx + 1]; ret; 
0x00148a9e: add byte ptr [eax], al; lea eax, dword ptr [edx + 2]; ret; 
0x00148a03: add byte ptr [eax], al; lea eax, dword ptr [edx + 3]; ret; 
0x00148aae: add byte ptr [eax], al; lea eax, dword ptr [edx + 4]; ret; 
0x00148abe: add byte ptr [eax], al; lea eax, dword ptr [edx + 5]; ret; 
0x00148ace: add byte ptr [eax], al; lea eax, dword ptr [edx + 6]; ret; 
0x00148a26: add byte ptr [eax], al; lea eax, dword ptr [edx + 7]; ret; 
0x00148ade: add byte ptr [eax], al; lea eax, dword ptr [edx + 8]; ret; 
0x00148aee: add byte ptr [eax], al; lea eax, dword ptr [edx + 9]; ret; 
0x00113c3a: add byte ptr [eax], al; lea eax, dword ptr [esi + 0x2260]; add esp, 0x14; pop ebx; pop esi; ret; 
0x00033a7a: add byte ptr [eax], al; lea eax, dword ptr [esi + 6]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00033257: add byte ptr [eax], al; lea eax, dword ptr [esi - 4]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000f0094: add byte ptr [eax], al; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f00bb: add byte ptr [eax], al; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001470c7: add byte ptr [eax], al; lea edi, dword ptr [edi]; add eax, 1; ret; 
0x000a73d8: add byte ptr [eax], al; lea edi, dword ptr [edi]; add eax, 3; ret; 
0x00148498: add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 0xa]; ret; 
0x001484a8: add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 0xb]; ret; 
0x001484b8: add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 0xd]; ret; 
0x001484c8: add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 0xe]; ret; 
0x001484d8: add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 0xf]; ret; 
0x00148438: add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 2]; ret; 
0x00148448: add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 3]; ret; 
0x00148458: add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 5]; ret; 
0x00148468: add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 6]; ret; 
0x00148478: add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 7]; ret; 
0x001499b7: add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 8]; ret; 
0x00148488: add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 9]; ret; 
0x00147408: add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 1]; pop edi; ret; 
0x001473f8: add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edi]; pop edi; ret; 
0x00148af8: add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 0xa]; ret; 
0x00148b08: add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 0xc]; ret; 
0x00148b18: add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 0xd]; ret; 
0x00148b28: add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 0xe]; ret; 
0x00148a87: add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 1]; ret; 
0x00148a98: add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 2]; ret; 
0x00148aa8: add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 4]; ret; 
0x00148ab8: add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 5]; ret; 
0x00148ac8: add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 6]; ret; 
0x00148ad8: add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 8]; ret; 
0x00148ae8: add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 9]; ret; 
0x00087607: add byte ptr [eax], al; lea edi, dword ptr [edi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x00087648: add byte ptr [eax], al; lea edi, dword ptr [edi]; mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x00073407: add byte ptr [eax], al; lea edi, dword ptr [edi]; mov eax, 0xffffffff; ret; 
0x000a73f7: add byte ptr [eax], al; lea edi, dword ptr [edi]; mov eax, 1; ret; 
0x001139f7: add byte ptr [eax], al; lea edi, dword ptr [edi]; mov eax, 2; ret; 
0x00073457: add byte ptr [eax], al; lea edi, dword ptr [edi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x001298f7: add byte ptr [eax], al; lea edi, dword ptr [edi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x00087618: add byte ptr [eax], al; lea edi, dword ptr [edi]; mov word ptr [ecx], dx; pop ebx; ret; 
0x000875f7: add byte ptr [eax], al; lea edi, dword ptr [edi]; pop ebx; ret; 
0x00067907: add byte ptr [eax], al; lea edi, dword ptr [edi]; xor eax, eax; ret; 
0x000f1d7d: add byte ptr [eax], al; lea edx, dword ptr [eax + edx*2]; add word ptr [edx], 1; add esp, 8; pop ebx; ret; 
0x00112a8a: add byte ptr [eax], al; lea edx, dword ptr [esp + 0x2898]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x00116273: add byte ptr [eax], al; lea edx, dword ptr [esp + 0x84]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 4]; 
0x00149260: add byte ptr [eax], al; lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; xor eax, eax; ret; 
0x000baca2: add byte ptr [eax], al; lea esi, dword ptr [esi]; mov eax, ebx; sub eax, dword ptr [ebx + esi*4 - 0xe8340]; jmp eax; 
0x000b9d03: add byte ptr [eax], al; lea esi, dword ptr [esi]; mov eax, ebx; sub eax, dword ptr [ebx + esi*4 - 0xe92e0]; jmp eax; 
0x00023343: add byte ptr [eax], al; lea esi, dword ptr [esi]; mov ecx, esi; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0001a2e2: add byte ptr [eax], al; lea esi, dword ptr [esi]; mov edx, ebx; sub edx, dword ptr [ebx + eax*4 - 0x188d00]; jmp edx; 
0x00114472: add byte ptr [eax], al; lea esi, dword ptr [esi]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00173e02: add byte ptr [eax], al; leave; mov cl, 0xec; call dword ptr [eax]; 
0x001775b2: add byte ptr [eax], al; lodsb al, byte ptr [esi]; adc ebp, edi; jmp dword ptr [esi]; 
0x001956aa: add byte ptr [eax], al; lodsb al, byte ptr [esi]; add al, byte ptr fs:[eax]; inc eax; xor al, 0xf7; jmp dword ptr [ebx]; 
0x00175d5a: add byte ptr [eax], al; lodsb al, byte ptr [esi]; add byte ptr [eax], al; ret; 
0x0017e232: add byte ptr [eax], al; lodsb al, byte ptr [esi]; cmp eax, esi; jmp edi; 
0x0017c932: add byte ptr [eax], al; lodsb al, byte ptr [esi]; in al, 0xef; jmp ebx; 
0x0019afaa: add byte ptr [eax], al; lodsb al, byte ptr [esi]; mov ebp, 0xb5800002; clc; jmp dword ptr [eax]; 
0x001896aa: add byte ptr [eax], al; lodsb al, byte ptr [esi]; movsb byte ptr es:[edi], byte ptr [esi]; add dword ptr [eax], eax; pmaxsw mm5, mm0; jmp dword ptr [esi + 0xb]; 
0x0017c522: add byte ptr [eax], al; lodsb al, byte ptr [esi]; ret; 
0x0017b356: add byte ptr [eax], al; lodsd eax, dword ptr [esi]; imul bh; call dword ptr [eax]; 
0x0017b1d6: add byte ptr [eax], al; lodsd eax, dword ptr [esi]; imul edi; call dword ptr [eax]; 
0x0015b507: add byte ptr [eax], al; loope 0x15b50b; add byte ptr [ecx], al; adc byte ptr [eax], al; add byte ptr [eax], al; ret 1; 
0x00168876: add byte ptr [eax], al; loope 0x1688ee; in eax, dx; call eax; 
0x00168876: add byte ptr [eax], al; loope 0x1688ee; in eax, dx; call eax; ret 0; 
0x0017bb96: add byte ptr [eax], al; loope 0x17bb8a; out dx, eax; call dword ptr [eax]; 
0x00168066: add byte ptr [eax], al; mov ah, 0x16; in al, dx; call dword ptr [eax - 0x68]; 
0x001791aa: add byte ptr [eax], al; mov ah, 0x50; out dx, eax; call dword ptr [ecx]; 
0x001682de: add byte ptr [eax], al; mov ah, 0x6d; in al, dx; jmp dword ptr [eax]; 
0x00186e62: add byte ptr [eax], al; mov ah, 0x77; add dword ptr [eax], eax; pushal; push edx; call dword ptr [eax]; 
0x00187062: add byte ptr [eax], al; mov ah, 0x79; add dword ptr [eax], eax; pop ecx; add ebx, esi; call dword ptr [eax]; 
0x00177462: add byte ptr [eax], al; mov ah, 0x7d; add byte ptr [eax], al; ret 0xef13; 
0x001991b2: add byte ptr [eax], al; mov ah, 0x9f; add al, byte ptr [eax]; cmp byte ptr [eax - 8], al; call dword ptr [ecx]; 
0x0016800e: add byte ptr [eax], al; mov ah, 0xa; in al, dx; call esp; 
0x0019a962: add byte ptr [eax], al; mov ah, 0xb2; add al, byte ptr [eax]; xor al, 0xa2; clc; call dword ptr [eax]; 
0x0017b262: add byte ptr [eax], al; mov ah, 0xbb; add byte ptr [eax], al; dec ebp; imul edi; call dword ptr [eax]; 
0x0017be62: add byte ptr [eax], al; mov ah, 0xc7; add byte ptr [eax], al; fucomp st(6); out dx, eax; call dword ptr [eax]; 
0x0017c8b2: add byte ptr [eax], al; mov ah, 0xd6; add byte ptr [eax], al; or bh, bl; out dx, eax; jmp dword ptr [esi]; 
0x001745ba: add byte ptr [eax], al; mov ah, 0xd7; in al, dx; jmp dword ptr [edx]; 
0x00168e6e: add byte ptr [eax], al; mov ah, 0xde; out dx, eax; call dword ptr [eax - 0x17]; 
0x00008fe6: add byte ptr [eax], al; mov al, 0x18; adc byte ptr [eax], al; ret 0; 
0x00178a6e: add byte ptr [eax], al; mov al, 0x2e; out dx, eax; call dword ptr [esi]; 
0x001731ae: add byte ptr [eax], al; mov al, 0x3f; add byte ptr [eax], al; dec esp; add esp, ebp; jmp dword ptr [ecx]; 
0x0017980e: add byte ptr [eax], al; mov al, 0x57; out dx, eax; call dword ptr [ecx]; 
0x001758ee: add byte ptr [eax], al; mov al, 0x61; out dx, al; call edx; 
0x001775ae: add byte ptr [eax], al; mov al, 0x83; add byte ptr [eax], al; lodsb al, byte ptr [esi]; adc ebp, edi; jmp dword ptr [esi]; 
0x00189eae: add byte ptr [eax], al; mov al, 0xac; add dword ptr [eax], eax; in al, dx; in al, 0xf4; call dword ptr [edx]; 
0x0019b55e: add byte ptr [eax], al; mov al, 0xbe; add al, byte ptr [eax]; or dl, bl; clc; call dword ptr [eax]; 
0x00168f16: add byte ptr [eax], al; mov al, 0xee; out dx, eax; call eax; 
0x00185f9e: add byte ptr [eax], al; mov al, byte ptr [0x2c00016d]; fcompi st(2); call dword ptr [edi]; 
0x0019524e: add byte ptr [eax], al; mov al, byte ptr [0x3f00025b]; xor al, 0xf7; call dword ptr [eax]; 
0x00191e4e: add byte ptr [eax], al; mov al, byte ptr [0x4a000227]; sal esi, 1; call dword ptr [eax]; 
0x0019409e: add byte ptr [eax], al; mov al, byte ptr [0x4c00024e]; adc al, 0xf7; call dword ptr [edx + 3]; 
0x0019b69e: add byte ptr [eax], al; mov al, byte ptr [0x7c0002c4]; ret; 
0x00188a9e: add byte ptr [eax], al; mov al, byte ptr [0x8c000198]; sbb dh, ah; call dword ptr [edi]; 
0x0019649e: add byte ptr [eax], al; mov al, byte ptr [0x8c000272]; xchg edi, esi; call edi; 
0x0018389e: add byte ptr [eax], al; mov al, byte ptr [0xac000146]; dec ecx; int1; call dword ptr [ebx + 1]; 
0x0017d99e: add byte ptr [eax], al; mov al, byte ptr [0xbc0000e7]; or eax, esi; call dword ptr [edx]; 
0x0018ae9e: add byte ptr [eax], al; mov al, byte ptr [0xc0001bc]; inc eax; cmc; jmp ecx; 
0x0017d19e: add byte ptr [eax], al; mov al, byte ptr [0xcc0000df]; clc; out dx, eax; call dword ptr [ecx + 1]; 
0x0019289e: add byte ptr [eax], al; mov al, byte ptr [0xec000236]; out 0xf6, al; call dword ptr [esi + 5]; 
0x0008e25e: add byte ptr [eax], al; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, dword ptr [edx]; pop edi; ret; 
0x00089b3e: add byte ptr [eax], al; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, dword ptr [edx]; ret; 
0x0008cc3e: add byte ptr [eax], al; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x0008575e: add byte ptr [eax], al; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x00089a0e: add byte ptr [eax], al; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, dword ptr [edx + 1]; pop edi; ret; 
0x00089b4e: add byte ptr [eax], al; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, dword ptr [edx + 1]; ret; 
0x0008564e: add byte ptr [eax], al; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x0008576e: add byte ptr [eax], al; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x00113b44: add byte ptr [eax], al; mov bp, 1; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x0001908f: add byte ptr [eax], al; mov byte ptr [eax + 0x46], 0xb8; pop ebx; pop esi; ret; 
0x0003f5b2: add byte ptr [eax], al; mov byte ptr [eax + ecx], 0; pop ebx; ret; 
0x000915ae: add byte ptr [eax], al; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00170dc6: add byte ptr [eax], al; mov byte ptr [ebx - 0x15], ah; call dword ptr [ebx]; 
0x00175476: add byte ptr [eax], al; mov byte ptr [ebx], al; out dx, al; call dword ptr [ecx]; 
0x00184386: add byte ptr [eax], al; mov byte ptr [ecx + 1], dl; add ah, al; hlt; int1; jmp dword ptr [edi]; 
0x0008760e: add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x00188986: add byte ptr [eax], al; mov byte ptr [edi + 0x17640001], dl; hlt; jmp dword ptr [eax]; 
0x0017a366: add byte ptr [eax], al; mov byte ptr [edi], al; std; call dword ptr [esi]; 
0x0008dc8e: add byte ptr [eax], al; mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x00196086: add byte ptr [eax], al; mov byte ptr [esi + 2], ch; add byte ptr [esi - 9], al; call dword ptr [ebx]; 
0x0017bd12: add byte ptr [eax], al; mov byte ptr fs:[eax], 0; shr edi, 1; out dx, eax; call dword ptr [eax]; 
0x00168d26: add byte ptr [eax], al; mov ch, 0xce; out dx, eax; call dword ptr [eax]; 
0x0017311a: add byte ptr [eax], al; mov ch, 2; in al, dx; call dword ptr [eax]; 
0x000df3de: add byte ptr [eax], al; mov cl, 0xc; mov edi, ebp; xchg edi, ebx; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0017bd46: add byte ptr [eax], al; mov cl, 0xef; out dx, eax; call dword ptr [eax]; 
0x0017ba76: add byte ptr [eax], al; mov cl, 0xf1; out dx, eax; call dword ptr [eax]; 
0x0017b7a6: add byte ptr [eax], al; mov cl, 0xf3; out dx, eax; call dword ptr [eax]; 
0x00174312: add byte ptr [eax], al; mov dl, ch; in al, dx; call dword ptr [eax]; 
0x0006bf7e: add byte ptr [eax], al; mov dword ptr [eax + 0x24], 0; add esp, 0x1c; ret; 
0x0006bf77: add byte ptr [eax], al; mov dword ptr [eax + 0x28], 0; mov dword ptr [eax + 0x24], 0; add esp, 0x1c; ret; 
0x0011fc1e: add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; ret; 
0x000d8430: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; add esp, 8; ret; 
0x00115f00: add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x00057899: add byte ptr [eax], al; mov dword ptr [ebp - 0x1080], ecx; jmp edx; 
0x000566bd: add byte ptr [eax], al; mov dword ptr [ebp - 0x10d0], 0x20; jmp edx; 
0x00045048: add byte ptr [eax], al; mov dword ptr [ebp - 0x4b8], edi; jmp edx; 
0x00028d0a: add byte ptr [eax], al; mov dword ptr [ebp - 0x78], edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], ecx; call eax; 
0x00024f44: add byte ptr [eax], al; mov dword ptr [ebp - 0x7c], 1; mov ecx, edx; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0007d4dd: add byte ptr [eax], al; mov dword ptr [ebx + 0x19b0], eax; add esp, 0x18; pop ebx; ret; 
0x00019089: add byte ptr [eax], al; mov dword ptr [ebx + 0x96c], eax; mov byte ptr [eax + 0x46], 0xb8; pop ebx; pop esi; ret; 
0x00073533: add byte ptr [eax], al; mov dword ptr [ecx + 0x18a0], 0; mov dword ptr [ecx + 0x18a4], 0; ret; 
0x0007353d: add byte ptr [eax], al; mov dword ptr [ecx + 0x18a4], 0; ret; 
0x00019346: add byte ptr [eax], al; mov dword ptr [ecx + 0x504], edx; pop ebx; ret; 
0x000eebf2: add byte ptr [eax], al; mov dword ptr [ecx], ebx; int 0x80; 
0x0007da2d: add byte ptr [eax], al; mov dword ptr [ecx], edx; add esp, 0x100; ret; 
0x0008764e: add byte ptr [eax], al; mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x0008766e: add byte ptr [eax], al; mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x0008765e: add byte ptr [eax], al; mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x0008763e: add byte ptr [eax], al; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0008dcae: add byte ptr [eax], al; mov dword ptr [edi - 1], edx; pop edi; pop esi; pop ebx; ret; 
0x0008dcbe: add byte ptr [eax], al; mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x0006f435: add byte ptr [eax], al; mov dword ptr [edx + 0xb8], eax; mov ebp, dword ptr [esp + 0x98]; add esp, 0x9c; ret; 
0x0011f408: add byte ptr [eax], al; mov dword ptr [edx + 0xc], ecx; pop esi; ret; 
0x000e9904: add byte ptr [eax], al; mov dword ptr [edx + 4], 0; ret; 
0x001131e9: add byte ptr [eax], al; mov dword ptr [edx + 4], ecx; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0010fb0c: add byte ptr [eax], al; mov dword ptr [edx + 8], ecx; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0004c440: add byte ptr [eax], al; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0003f946: add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x0006a104: add byte ptr [eax], al; mov dword ptr [edx], esi; pop esi; ret; 
0x00071fa4: add byte ptr [eax], al; mov dword ptr [esi + 0x28], 0; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00071f9d: add byte ptr [eax], al; mov dword ptr [esi + 0x2c], 0; mov dword ptr [esi + 0x28], 0; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x001092a4: add byte ptr [eax], al; mov dword ptr [esp + 0x10], edx; mov dword ptr [esp], esi; call eax; 
0x00032eb3: add byte ptr [eax], al; mov dword ptr [esp + 0x14], eax; call ecx; 
0x0002f13c: add byte ptr [eax], al; mov dword ptr [esp + 0x14], eax; xchg edi, ebx; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x00026772: add byte ptr [eax], al; mov dword ptr [esp + 0x14], ecx; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000b308a: add byte ptr [eax], al; mov dword ptr [esp + 0x18], edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], ecx; call eax; 
0x000b91d7: add byte ptr [eax], al; mov dword ptr [esp + 0x1c], 0xd6; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000e0d02: add byte ptr [eax], al; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x000f0e49: add byte ptr [eax], al; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000e88f2: add byte ptr [eax], al; mov dword ptr [esp + 0x1c], ecx; call 0xb81e0; add esp, 0x2c; ret; 
0x000d95c9: add byte ptr [eax], al; mov dword ptr [esp + 0x1c], edx; call dword ptr [eax + 0x14]; 
0x0011cac5: add byte ptr [eax], al; mov dword ptr [esp + 0x20], edx; mov edx, dword ptr [eax + 8]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x000b55e1: add byte ptr [eax], al; mov dword ptr [esp + 0x24], ecx; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000f117b: add byte ptr [eax], al; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00099304: add byte ptr [eax], al; mov dword ptr [esp + 0xc], ecx; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edi; call esi; 
0x000a5cce: add byte ptr [eax], al; mov dword ptr [esp + 0xc], esi; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], edx; call edi; 
0x0011e1bd: add byte ptr [eax], al; mov dword ptr [esp + 4], 0x2260; mov dword ptr [esp], eax; call 0x11ded0; add esp, 0x1c; ret; 
0x00027784: add byte ptr [eax], al; mov dword ptr [esp + 4], eax; call 0x276f0; add esp, 0x1c; ret; 
0x000715b7: add byte ptr [eax], al; mov dword ptr [esp + 4], eax; call 0xdde60; add esp, 0x1c; ret; 
0x000ddb7f: add byte ptr [eax], al; mov dword ptr [esp + 4], eax; call 0xddee0; add esp, 0x2c; ret; 
0x0001f4aa: add byte ptr [eax], al; mov dword ptr [esp + 4], eax; call dword ptr [esi]; 
0x0007027e: add byte ptr [eax], al; mov dword ptr [esp + 4], eax; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; call dword ptr [edx + 0x40]; 
0x00067a97: add byte ptr [eax], al; mov dword ptr [esp + 4], eax; mov dword ptr [esp], ebp; call edi; 
0x00098f66: add byte ptr [eax], al; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edi; call esi; 
0x00099694: add byte ptr [eax], al; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edi; mov dword ptr [esp + 8], edx; call esi; 
0x0006bfb4: add byte ptr [eax], al; mov dword ptr [esp + 4], eax; mov dword ptr [esp], esi; call dword ptr [edx + 0x18]; 
0x000bd41a: add byte ptr [eax], al; mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebp - 0x134]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x000c019a: add byte ptr [eax], al; mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebp - 0x144]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x000d95ad: add byte ptr [eax], al; mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebx + 0xee0]; mov dword ptr [esp], ebp; call dword ptr [eax + 0xc]; 
0x0007c195: add byte ptr [eax], al; mov dword ptr [esp + 4], ebp; mov eax, dword ptr [esi + 0x24]; mov dword ptr [esp], eax; call dword ptr [esi + 0x1c]; 
0x0002dd53: add byte ptr [eax], al; mov dword ptr [esp + 4], ebp; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0006f9e4: add byte ptr [eax], al; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 8], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x0011cb0c: add byte ptr [eax], al; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x0011cb0c: add byte ptr [eax], al; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; add esp, 0x4c; ret; 
0x001194ec: add byte ptr [eax], al; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; mov dword ptr [esp + 0x458], ebp; call dword ptr [edx + 8]; 
0x000729f5: add byte ptr [eax], al; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x18]; 
0x00042fce: add byte ptr [eax], al; mov dword ptr [esp + 4], ecx; sub edx, ecx; mov dword ptr [esp + 8], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0006d63a: add byte ptr [eax], al; mov dword ptr [esp + 4], edi; mov dword ptr [esp + 8], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x40]; 
0x0007ba49: add byte ptr [eax], al; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; call eax; 
0x0007d714: add byte ptr [eax], al; mov dword ptr [esp + 4], edi; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x00032aea: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; call eax; 
0x0005d6f3: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x34]; mov dword ptr [esp + 8], edi; mov dword ptr [esp], edx; call eax; 
0x00056708: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x5c]; mov dword ptr [esp], edx; call eax; 
0x0004e388: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x64]; mov dword ptr [esp], edx; call eax; 
0x000428b0: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x70]; mov dword ptr [esp], edx; call eax; 
0x000479a0: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; lea edx, dword ptr [esp + 0x20d0]; mov dword ptr [esp], edx; call eax; 
0x0005ba58: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; lea edx, dword ptr [esp + 0x8190]; mov dword ptr [esp], edx; call eax; 
0x0006fad4: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], eax; mov dword ptr [esp], esi; call dword ptr [ecx + 0x40]; 
0x0006d8f9: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x000562f9: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], esi; mov dword ptr [esp], ecx; call dword ptr [eax + 0x1c]; 
0x00115f2b: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x000c8bba: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call esi; 
0x0006db95: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x48]; 
0x000724a5: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0xc]; 
0x00111871: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 4]; 
0x00066065: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x00064292: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x48]; 
0x0011cdea: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0xc]; 
0x0011cc28: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x00098ca6: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov eax, dword ptr [eax + 8]; mov dword ptr [esp], eax; call edi; 
0x000e1e79: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov eax, dword ptr [ecx + 0xc]; mov dword ptr [esp], eax; call dword ptr [ecx + 0x24]; 
0x000fb890: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x20]; mov dword ptr [esp], edx; call eax; 
0x000413ac: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], 1; call eax; 
0x0006fef9: add byte ptr [eax], al; mov dword ptr [esp + 4], esi; mov dword ptr [esp + 8], edi; mov dword ptr [esp + 0xc], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x00070450: add byte ptr [eax], al; mov dword ptr [esp + 4], esi; mov dword ptr [esp + 8], edi; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x0012b1e9: add byte ptr [eax], al; mov dword ptr [esp + 4], esi; mov dword ptr [esp + 8], edi; mov dword ptr [esp], ebp; mov dword ptr [esp + 0xc], edx; call dword ptr [eax + 0x40]; 
0x000f7e0f: add byte ptr [eax], al; mov dword ptr [esp + 4], esi; mov dword ptr [esp], ebp; mov dword ptr [esp + 8], eax; call dword ptr [edi + 0x14]; 
0x0011ce05: add byte ptr [eax], al; mov dword ptr [esp + 4], esi; mov dword ptr [esp], edx; call dword ptr [eax + 0xc]; 
0x00071674: add byte ptr [eax], al; mov dword ptr [esp + 8], eax; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; call dword ptr [edx + 0x38]; 
0x0001ec4c: add byte ptr [eax], al; mov dword ptr [esp + 8], eax; mov dword ptr [esp], ecx; call dword ptr [esi]; 
0x000990f6: add byte ptr [eax], al; mov dword ptr [esp + 8], eax; mov dword ptr [esp], edi; call esi; 
0x00021968: add byte ptr [eax], al; mov dword ptr [esp + 8], eax; mov dword ptr [esp], edx; call dword ptr [ebp]; 
0x0001f66b: add byte ptr [eax], al; mov dword ptr [esp + 8], eax; mov dword ptr [esp], edx; call dword ptr [esi]; 
0x0006aed4: add byte ptr [eax], al; mov dword ptr [esp + 8], ebp; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0006687d: add byte ptr [eax], al; mov dword ptr [esp + 8], ebp; mov dword ptr [esp], edx; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x1c]; 
0x0006ad6c: add byte ptr [eax], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 0x1c], ecx; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x1c]; 
0x0011b3d8: add byte ptr [eax], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], 6; mov dword ptr [esp], eax; call dword ptr [edx + 0x14]; 
0x00067c4c: add byte ptr [eax], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], edx; call eax; 
0x00072504: add byte ptr [eax], al; mov dword ptr [esp + 8], ecx; mov ecx, dword ptr [esp + 0x24]; mov dword ptr [esp], eax; mov dword ptr [esp + 4], ecx; call dword ptr [edx + 0x20]; 
0x00065265: add byte ptr [eax], al; mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x00066e6c: add byte ptr [eax], al; mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; call dword ptr [eax + 0x2c]; 
0x00043cce: add byte ptr [eax], al; mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0011eace: add byte ptr [eax], al; mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 8]; 
0x00066099: add byte ptr [eax], al; mov dword ptr [esp + 8], edi; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x00042a11: add byte ptr [eax], al; mov dword ptr [esp + 8], edi; mov ecx, dword ptr [ebp - 0x49c]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x1c]; 
0x00042b34: add byte ptr [eax], al; mov dword ptr [esp + 8], edi; mov edx, dword ptr [ebp - 0x4ac]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x000568bf: add byte ptr [eax], al; mov dword ptr [esp + 8], edx; mov dword ptr [ebp - 0x1120], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x000478e3: add byte ptr [eax], al; mov dword ptr [esp + 8], edx; mov dword ptr [esp + 0x14], edx; mov dword ptr [esp + 4], eax; mov dword ptr [esp], esi; call dword ptr [ecx + 0x1c]; 
0x0005b996: add byte ptr [eax], al; mov dword ptr [esp + 8], edx; mov dword ptr [esp + 0x18], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x00042ca8: add byte ptr [eax], al; mov dword ptr [esp + 8], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; mov dword ptr [ebp - 0x57c], edx; call dword ptr [eax + 0x1c]; 
0x0006fa54: add byte ptr [eax], al; mov dword ptr [esp + 8], edx; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; call dword ptr [eax + 0x3c]; 
0x00042606: add byte ptr [eax], al; mov dword ptr [esp + 8], edx; mov edx, dword ptr [ebp + 0xc]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x0006f5dc: add byte ptr [eax], al; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x24]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x20]; 
0x00116253: add byte ptr [eax], al; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x28]; mov dword ptr [esp], edi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x0006703f: add byte ptr [eax], al; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x34]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x2c]; 
0x0003ec1e: add byte ptr [eax], al; mov dword ptr [esp + 8], esi; mov dword ptr [esp], edx; call eax; 
0x000f8418: add byte ptr [eax], al; mov dword ptr [esp], 0x2000004; mov dword ptr [esp + 8], edx; call eax; 
0x00026c0b: add byte ptr [eax], al; mov dword ptr [esp], 1; call eax; 
0x0010e2cd: add byte ptr [eax], al; mov dword ptr [esp], eax; call 0x10d500; add esp, 0x1c; ret; 
0x0011e1c5: add byte ptr [eax], al; mov dword ptr [esp], eax; call 0x11ded0; add esp, 0x1c; ret; 
0x00124712: add byte ptr [eax], al; mov dword ptr [esp], eax; call 0x1243e0; add esp, 0x78; pop ebx; ret; 
0x000f1bdd: add byte ptr [eax], al; mov dword ptr [esp], eax; call 0x16f50; add esp, 0x18; pop ebx; ret; 
0x000ca022: add byte ptr [eax], al; mov dword ptr [esp], eax; call 0x276f0; add esp, 0x18; pop ebx; ret; 
0x0002e5cd: add byte ptr [eax], al; mov dword ptr [esp], eax; call 0x2e560; add esp, 0x1c; ret; 
0x00129da9: add byte ptr [eax], al; mov dword ptr [esp], eax; call 0x32db0; add esp, 0x18; pop ebx; ret; 
0x00031205: add byte ptr [eax], al; mov dword ptr [esp], eax; call 0x33eb0; add esp, 0x1c; ret; 
0x00031265: add byte ptr [eax], al; mov dword ptr [esp], eax; call 0x33ff0; add esp, 0x1c; ret; 
0x000311dd: add byte ptr [eax], al; mov dword ptr [esp], eax; call 0x35ad0; add esp, 0x1c; ret; 
0x0003f519: add byte ptr [eax], al; mov dword ptr [esp], eax; call 0x3efe0; add esp, 0x18; pop ebx; ret; 
0x0006917b: add byte ptr [eax], al; mov dword ptr [esp], eax; call 0x4c590; add esp, 0x18; pop ebx; ret; 
0x000e85e9: add byte ptr [eax], al; mov dword ptr [esp], eax; call 0x54fb0; add esp, 0x18; pop ebx; ret; 
0x0006f16b: add byte ptr [eax], al; mov dword ptr [esp], eax; call 0x5baa0; add esp, 0x18; pop ebx; ret; 
0x00068e09: add byte ptr [eax], al; mov dword ptr [esp], eax; call 0x66f50; add esp, 0x18; pop ebx; ret; 
0x0014ace3: add byte ptr [eax], al; mov dword ptr [esp], eax; call 0xd7fe0; add esp, 0x18; pop ebx; ret; 
0x00123d3d: add byte ptr [eax], al; mov dword ptr [esp], eax; call 0xdf100; add esp, 0x1c; sar eax, 0x1f; ret; 
0x000e62e1: add byte ptr [eax], al; mov dword ptr [esp], eax; call 0xe6d00; add esp, 0x18; pop ebx; ret; 
0x000eb443: add byte ptr [eax], al; mov dword ptr [esp], eax; call 0xeb5e0; add esp, 0x18; pop ebx; ret; 
0x00023993: add byte ptr [eax], al; mov dword ptr [esp], eax; call 0xec0b0; add esp, 0x18; pop ebx; ret; 
0x000fdf99: add byte ptr [eax], al; mov dword ptr [esp], eax; call 0xfd430; add esp, 0x18; pop ebx; ret; 
0x000fe09d: add byte ptr [eax], al; mov dword ptr [esp], eax; call 0xfdfb0; add esp, 0x1c; ret; 
0x0011b389: add byte ptr [eax], al; mov dword ptr [esp], eax; call dword ptr [edx + 0x14]; 
0x000726e8: add byte ptr [eax], al; mov dword ptr [esp], eax; call dword ptr [edx + 0x24]; 
0x0006ab10: add byte ptr [eax], al; mov dword ptr [esp], eax; call dword ptr [edx + 0x30]; 
0x00064fb7: add byte ptr [eax], al; mov dword ptr [esp], eax; call edx; 
0x00064fb7: add byte ptr [eax], al; mov dword ptr [esp], eax; call edx; add esp, 0x1c; ret; 
0x00118f3a: add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x0011dc40: add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x14]; 
0x00067e3c: add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x000d95b7: add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0xc]; 
0x0011c2d7: add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax]; 
0x0012b29d: add byte ptr [eax], al; mov dword ptr [esp], ebp; mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], ecx; call dword ptr [eax + 0x40]; 
0x00028d17: add byte ptr [eax], al; mov dword ptr [esp], ecx; call eax; 
0x0001afee: add byte ptr [eax], al; mov dword ptr [esp], edi; call 0x126c80; mov dword ptr [esp], esi; call edi; 
0x00112b76: add byte ptr [eax], al; mov dword ptr [esp], edi; call 0xdeb70; mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00111837: add byte ptr [eax], al; mov dword ptr [esp], edi; call dword ptr [eax + 0x14]; 
0x00113469: add byte ptr [eax], al; mov dword ptr [esp], edi; call dword ptr [eax + 0x18]; 
0x0011210e: add byte ptr [eax], al; mov dword ptr [esp], edi; call dword ptr [eax]; 
0x00112267: add byte ptr [eax], al; mov dword ptr [esp], edi; call dword ptr [eax]; mov eax, dword ptr [edi + 4]; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x00113d11: add byte ptr [eax], al; mov dword ptr [esp], edi; call dword ptr [esi]; 
0x000b483e: add byte ptr [eax], al; mov dword ptr [esp], edi; call esi; 
0x00118cce: add byte ptr [eax], al; mov dword ptr [esp], edi; mov dword ptr [esp + 0x28], eax; mov eax, dword ptr [esp + 0x44]; call dword ptr [eax + 0x14]; 
0x000283dc: add byte ptr [eax], al; mov dword ptr [esp], edi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00129aee: add byte ptr [eax], al; mov dword ptr [esp], edx; call 0x129990; add esp, 0x18; pop ebx; ret; 
0x00112a91: add byte ptr [eax], al; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x00113d03: add byte ptr [eax], al; mov dword ptr [esp], edx; call dword ptr [eax + 8]; 
0x000195aa: add byte ptr [eax], al; mov dword ptr [esp], edx; call eax; 
0x0007d561: add byte ptr [eax], al; mov dword ptr [esp], edx; call eax; add esp, 0x18; pop ebx; ret; 
0x00064ed5: add byte ptr [eax], al; mov dword ptr [esp], edx; call eax; add esp, 0x1c; ret; 
0x000ec94f: add byte ptr [eax], al; mov dword ptr [esp], edx; call eax; add esp, 0x28; pop ebx; ret; 
0x0011d93f: add byte ptr [eax], al; mov dword ptr [esp], edx; mov dword ptr [esp + 0x30], edx; mov dword ptr [esp + 4], 0; call dword ptr [eax + 0x14]; 
0x00042459: add byte ptr [eax], al; mov dword ptr [esp], edx; mov dword ptr [esp + 8], ebp; mov dword ptr [esp + 4], eax; call dword ptr [ecx + 0x1c]; 
0x00023eda: add byte ptr [eax], al; mov dword ptr [esp], edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0011cd66: add byte ptr [eax], al; mov dword ptr [esp], esi; call 0x11cb20; mov eax, dword ptr [esi + 8]; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x0006b8f1: add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0006f618: add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; add esp, 0x18; pop esi; ret; 
0x0006bab0: add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x00070b11: add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x00072dd3: add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 0x2c]; 
0x000648ea: add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 0x30]; 
0x000670b6: add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 0x34]; 
0x00070931: add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 0x44]; 
0x00064491: add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 8]; 
0x000637e9: add byte ptr [eax], al; mov dword ptr [esp], esi; call eax; 
0x0006b95e: add byte ptr [eax], al; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x000c804b: add byte ptr [eax], al; mov dword ptr [esp], esi; mov dword ptr [esp + 8], ecx; call dword ptr [ebp - 0x78]; 
0x000272c8: add byte ptr [eax], al; mov dword ptr gs:[eax], edx; pop ebx; ret; 
0x0011c3f5: add byte ptr [eax], al; mov dword ptr gs:[eax], edx; ret; 
0x000b5c3b: add byte ptr [eax], al; mov dword ptr gs:[edx], ecx; add esp, 0x28; pop ebx; ret; 
0x000915be: add byte ptr [eax], al; mov dx, word ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000eeeeb: add byte ptr [eax], al; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x000b9aa6: add byte ptr [eax], al; mov eax, 0x40; ret; 
0x00183ab6: add byte ptr [eax], al; mov eax, 0x44000148; push ebx; int1; call dword ptr [eax]; 
0x00188bb6: add byte ptr [eax], al; mov eax, 0x44000199; sbb al, 0xf4; jmp dword ptr [ebp]; 
0x001891b6: add byte ptr [eax], al; mov eax, 0x5400019f; dec edi; hlt; call dword ptr [ebx + 1]; 
0x001893b6: add byte ptr [eax], al; mov eax, 0x640001a1; push edi; hlt; jmp esi; 
0x000f0ae2: add byte ptr [eax], al; mov eax, 0x66; mov ebx, 0x12; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0003f858: add byte ptr [eax], al; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00179bb6: add byte ptr [eax], al; mov eax, 0x840000a9; pushal; out dx, eax; jmp dword ptr [edx + 5]; 
0x0017ebb6: add byte ptr [eax], al; mov eax, 0x940000f9; aas; sti; jmp esp; 
0x00177fb6: add byte ptr [eax], al; mov eax, 0xa400008d; pop ds; sti; jmp esi; 
0x001745b6: add byte ptr [eax], al; mov eax, 0xb4000053; xlatb; in al, dx; jmp dword ptr [edx]; 
0x000b8587: add byte ptr [eax], al; mov eax, 0xbe; int 0x80; 
0x001491a4: add byte ptr [eax], al; mov eax, 0xc; pop edi; ret; 
0x0018eeb6: add byte ptr [eax], al; mov eax, 0xd40001fc; and esi, esi; jmp dword ptr [esi]; 
0x000fc1e3: add byte ptr [eax], al; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0002c8bb: add byte ptr [eax], al; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x000ddfe6: add byte ptr [eax], al; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x000ddf4a: add byte ptr [eax], al; mov eax, 0xffffffff; add esp, 8; ret; 
0x00124864: add byte ptr [eax], al; mov eax, 0xffffffff; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000e6838: add byte ptr [eax], al; mov eax, 0xffffffff; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0006cbb4: add byte ptr [eax], al; mov eax, 0xffffffff; or dword ptr [esi], 0x20; mov esi, dword ptr [esp + 0x34]; add esp, 0x3c; ret; 
0x000e5058: add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x000e4f86: add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x0002ebc6: add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x000e3c35: add byte ptr [eax], al; mov eax, 1; add esp, 0x1c; ret; 
0x000b85d2: add byte ptr [eax], al; mov eax, 1; int 0x80; 
0x0007c2f6: add byte ptr [eax], al; mov eax, 1; ret; 
0x00129a66: add byte ptr [eax], al; mov eax, 2; add esp, 0xc; ret; 
0x000a740e: add byte ptr [eax], al; mov eax, 2; ret; 
0x000a741e: add byte ptr [eax], al; mov eax, 3; ret; 
0x001490fb: add byte ptr [eax], al; mov eax, 4; pop edi; ret; 
0x000a742e: add byte ptr [eax], al; mov eax, 4; ret; 
0x000a743e: add byte ptr [eax], al; mov eax, 5; ret; 
0x000a744e: add byte ptr [eax], al; mov eax, 6; ret; 
0x000a745e: add byte ptr [eax], al; mov eax, 7; ret; 
0x00149154: add byte ptr [eax], al; mov eax, 8; pop edi; ret; 
0x00168856: add byte ptr [eax], al; mov eax, dword ptr [0x10ffed74]; ret 0; 
0x00168e5e: add byte ptr [eax], al; mov eax, dword ptr [0x30ffefde]; call 0xdec08e6a; out dx, eax; jmp dword ptr [eax - 0x18]; 
0x00048e6a: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1c]; mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call eax; 
0x00040c40: add byte ptr [eax], al; mov eax, dword ptr [eax]; mov ebx, dword ptr [esp + 0x14]; mov eax, dword ptr [eax + 0x34]; add esp, 0x1c; ret; 
0x0011b2bf: add byte ptr [eax], al; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x00064a68: add byte ptr [eax], al; mov eax, dword ptr [ebp + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x00116936: add byte ptr [eax], al; mov eax, dword ptr [ebp + 0xb0]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0011c344: add byte ptr [eax], al; mov eax, dword ptr [ebp + 4]; add edx, 4; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 8]; 
0x0011c2f2: add byte ptr [eax], al; mov eax, dword ptr [ebp + 4]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x000a935d: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x3818]; add esp, 8; pop ebx; ret; 
0x00028a9a: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x390c]; mov dword ptr [esp], edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00024024: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x3910]; mov dword ptr [esp], edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00023ed4: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x3914]; mov dword ptr [esp], edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0007d744: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x391c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x00124b0c: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 0x14]; 
0x000d9593: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax]; 
0x0012628b: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0xee0]; xor ebp, ebp; call dword ptr [eax + 0x14]; 
0x00076cd5: add byte ptr [eax], al; mov eax, dword ptr [ebx - 0x15c]; mov dword ptr [esp], edx; mov dword ptr [esp + 0x28], edx; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x0007bee1: add byte ptr [eax], al; mov eax, dword ptr [ebx - 0xc4]; mov dword ptr [eax], edx; add esp, 0x18; pop ebx; ret; 
0x000e5e9e: add byte ptr [eax], al; mov eax, dword ptr [ebx - 0xf8]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x0011e59e: add byte ptr [eax], al; mov eax, dword ptr [ecx + 4]; mov dword ptr [esp + 4], esi; mov dword ptr [esp], ecx; call dword ptr [eax]; 
0x000ed3ee: add byte ptr [eax], al; mov eax, dword ptr [ecx - 0xfc]; mov eax, dword ptr [eax + 0x1c]; test eax, eax; cmove eax, edx; ret; 
0x0008993e: add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, dword ptr [edx + 3]; pop edi; ret; 
0x0008557e: add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x0014a2ee: add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x0011dc7e: add byte ptr [eax], al; mov eax, dword ptr [edi + 0xc]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x00127946: add byte ptr [eax], al; mov eax, dword ptr [edx]; add esp, 0xc; ret; 
0x0011188a: add byte ptr [eax], al; mov eax, dword ptr [edx]; mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp + 4], edi; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x001163c6: add byte ptr [eax], al; mov eax, dword ptr [edx]; mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x001118be: add byte ptr [eax], al; mov eax, dword ptr [esi + 0x10]; lea ebp, dword ptr [esp + 0x24]; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x00111867: add byte ptr [eax], al; mov eax, dword ptr [esi + 0x10]; lea edx, dword ptr [esp + 0x84]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 4]; 
0x0011a79b: add byte ptr [eax], al; mov eax, dword ptr [esi + 0x3c]; mov ecx, dword ptr [ebp - 0xbc]; mov dword ptr [esp], ecx; call dword ptr [eax + 0x10]; 
0x0012bd6e: add byte ptr [eax], al; mov eax, dword ptr [esi + 0x4c]; mov dword ptr [esp], esi; call dword ptr [eax + 0x44]; 
0x00119cd5: add byte ptr [eax], al; mov eax, dword ptr [esi + 0x50]; lea edx, dword ptr [esp + 0x84]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 4]; 
0x0011a1d0: add byte ptr [eax], al; mov eax, dword ptr [esi + 0x50]; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x00118f33: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x1c4]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x00033947: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x1c]; add esp, 0x28; pop ebx; ret; 
0x0007af1d: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [ebx + 0x1968], 1; add esp, 0x28; pop ebx; ret; 
0x001111ce: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00124aac: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 0x10]; 
0x00112a83: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x289c]; lea edx, dword ptr [esp + 0x2898]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x000eb49b: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x2c]; add esp, 0x38; pop ebx; ret; 
0x001195ae: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x430]; mov edx, ebx; sub edx, dword ptr [ebx + eax*4 - 0x89a30]; jmp edx; 
0x000f20b6: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x44]; call 0xf1f70; add esp, 4; ret; 
0x0014909e: add byte ptr [eax], al; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0011f76e: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0010fade: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x0002702e: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0006791e: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + 0x28]; ret; 
0x0007345e: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x001298fe: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0012998e: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x0012992e: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x000d8a26: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0007346e: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; ret; 
0x000d9278: add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000271ce: add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000e6064: add byte ptr [eax], al; mov eax, dword ptr gs:[ebp]; mov dword ptr [esp], eax; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000fc2b8: add byte ptr [eax], al; mov eax, ebp; mov ecx, 0x80; xor esi, esi; xchg ebx, edi; int 0x80; 
0x00097586: add byte ptr [eax], al; mov eax, ebx; sub eax, dword ptr [ebx + edi*4 - 0x10ba60]; jmp eax; 
0x00078786: add byte ptr [eax], al; mov eax, ebx; sub eax, dword ptr [ebx + esi*4 - 0x12a860]; jmp eax; 
0x00148251: add byte ptr [eax], al; mov eax, ecx; ret; 
0x0009416e: add byte ptr [eax], al; mov eax, edi; pop ebx; pop edi; ret; 
0x00069109: add byte ptr [eax], al; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00147fbe: add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x00049f5b: add byte ptr [eax], al; mov eax, edx; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0011b781: add byte ptr [eax], al; mov eax, edx; pop ebx; pop edi; ret; 
0x0008829e: add byte ptr [eax], al; mov eax, edx; pop ebx; ret; 
0x0007f455: add byte ptr [eax], al; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x00118a62: add byte ptr [eax], al; mov eax, edx; pop esi; pop edi; ret; 
0x0002ee67: add byte ptr [eax], al; mov eax, edx; ret; 
0x000edd6a: add byte ptr [eax], al; mov eax, esi; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0007a6f6: add byte ptr [eax], al; mov eax, esi; mov ebx, dword ptr [esp + 4]; mov esi, dword ptr [esp + 8]; add esp, 0xc; ret 4; 
0x000b84bb: add byte ptr [eax], al; mov eax, esi; mov ecx, 0x81; xchg ebx, edi; int 0x80; 
0x00041df7: add byte ptr [eax], al; mov eax, esi; pop ebx; pop esi; ret; 
0x0012ea67: add byte ptr [eax], al; mov eax, esi; ror edx, 9; xor edx, dword ptr gs:[0x18]; call edx; 
0x0000172a: add byte ptr [eax], al; mov ebp, 0xbe000007; pop es; add byte ptr [eax], al; ret 7; 
0x0015286a: add byte ptr [eax], al; mov ebp, 0xc000000e; push cs; add byte ptr [eax], al; ret; 
0x0017b412: add byte ptr [eax], al; mov ebp, 0xf62d0000; out dx, eax; call dword ptr [eax]; 
0x00076e1a: add byte ptr [eax], al; mov ebp, dword ptr [ebx - 0x15c]; mov dword ptr [esp], edx; mov dword ptr [esp + 0x28], edx; call dword ptr [ebp]; 
0x00054afc: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x1038]; add esp, 0x103c; ret; 
0x000aae47: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x108]; add esp, 0x10c; ret; 
0x000e1134: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x118]; add esp, 0x11c; ret; 
0x000692fb: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x128]; add esp, 0x12c; ret; 
0x0002e039: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x12c]; add esp, 0x130; ret; 
0x001187eb: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x138]; add esp, 0x13c; ret; 
0x0002ec5e: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x148]; add esp, 0x14c; ret; 
0x000b9e0d: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x168]; add esp, 0x16c; ret; 
0x000e7d11: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x1b8]; add esp, 0x1bc; ret; 
0x0002f3b9: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x258]; add esp, 0x25c; ret; 
0x0006b298: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x298]; add esp, 0x29c; ret; 
0x000547e0: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x438]; add esp, 0x43c; ret; 
0x0011959a: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x458]; add esp, 0x45c; ret; 
0x0011565d: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x488]; add esp, 0x48c; ret; 
0x000d9538: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x548]; add esp, 0x54c; ret; 
0x0005ba03: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x81b8]; add esp, 0x81bc; ret; 
0x000987d1: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x88]; add esp, 0x8c; ret; 
0x000e3ce7: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x98]; add esp, 0x9c; ret 4; 
0x0002331d: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x98]; add esp, 0x9c; ret; 
0x0006f6fb: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xa8]; add esp, 0xac; ret; 
0x000e172b: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xb8]; add esp, 0xbc; ret 8; 
0x000de30f: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xc8]; add esp, 0xcc; ret; 
0x0006d7c8: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xd8]; add esp, 0xdc; ret; 
0x00068f53: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xe8]; add esp, 0xec; ret; 
0x000de483: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xf8]; add esp, 0xfc; ret; 
0x000f04cf: add byte ptr [eax], al; mov ebx, 0x10; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f04f6: add byte ptr [eax], al; mov ebx, 0x10; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f03cf: add byte ptr [eax], al; mov ebx, 0x11; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f03f6: add byte ptr [eax], al; mov ebx, 0x11; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0a6f: add byte ptr [eax], al; mov ebx, 0x12; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0a96: add byte ptr [eax], al; mov ebx, 0x12; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0019acff: add byte ptr [eax], al; mov ebx, 0xa53c0002; clc; jmp dword ptr [edi]; 
0x000f02cf: add byte ptr [eax], al; mov ebx, 0xa; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f02f6: add byte ptr [eax], al; mov ebx, 0xa; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f054f: add byte ptr [eax], al; mov ebx, 0xb; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0576: add byte ptr [eax], al; mov ebx, 0xb; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f034f: add byte ptr [eax], al; mov ebx, 0xc; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0376: add byte ptr [eax], al; mov ebx, 0xc; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0605: add byte ptr [eax], al; mov ebx, 0xd; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f05c5: add byte ptr [eax], al; mov ebx, 0xe; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0245: add byte ptr [eax], al; mov ebx, 0xf; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0645: add byte ptr [eax], al; mov ebx, 1; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0105: add byte ptr [eax], al; mov ebx, 2; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f014f: add byte ptr [eax], al; mov ebx, 3; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0176: add byte ptr [eax], al; mov ebx, 3; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0285: add byte ptr [eax], al; mov ebx, 4; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f008f: add byte ptr [eax], al; mov ebx, 5; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f00b6: add byte ptr [eax], al; mov ebx, 5; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0205: add byte ptr [eax], al; mov ebx, 6; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f01c5: add byte ptr [eax], al; mov ebx, 7; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0685: add byte ptr [eax], al; mov ebx, 8; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f044f: add byte ptr [eax], al; mov ebx, 9; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0476: add byte ptr [eax], al; mov ebx, 9; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0001b008: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000d94a4: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; cmove eax, esi; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00023917: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00065022: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x00126d2f: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x24]; mov dword ptr [esi + 0xc], eax; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x00074dd7: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x44]; mov edi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x00117842: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x44]; mov esi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x001127cd: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x60]; mov esi, dword ptr [esp + 0x64]; mov edi, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x000ddc86: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x70]; mov esi, dword ptr [esp + 0x74]; mov edi, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x00019933: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x000f1b93: add byte ptr [eax], al; mov ebx, dword ptr [esp + 4]; mov esi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0011324c: add byte ptr [eax], al; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x001160a6: add byte ptr [eax], al; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000de570: add byte ptr [eax], al; mov ebx, edx; ret; 
0x000e6353: add byte ptr [eax], al; mov ecx, 0x5409; mov esi, eax; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000e631a: add byte ptr [eax], al; mov ecx, 0x5409; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000fc566: add byte ptr [eax], al; mov ecx, 0x80; xor esi, esi; xchg ebx, edi; call dword ptr gs:[0x10]; 
0x000fc1d9: add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0019ca66: add byte ptr [eax], al; mov ecx, 0xdf000001; add eax, 0x1250000; add byte ptr [eax], al; ret; 
0x0007c83a: add byte ptr [eax], al; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x00064d7c: add byte ptr [eax], al; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0xb8], edx; pop ebx; ret; 
0x0011a780: add byte ptr [eax], al; mov ecx, dword ptr [ebp + 0x14]; mov edx, dword ptr [ebp - 0xbc]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edx; call dword ptr [ebp + 0x10]; 
0x000ecfae: add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x30]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000f15ad: add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x3fc]; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00113850: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp], ebp; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x18]; 
0x000ef15d: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x38]; xchg edi, ebx; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0002e137: add byte ptr [eax], al; mov ecx, eax; mov edi, dword ptr [esp + 0x90]; xchg edi, ebx; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00129be6: add byte ptr [eax], al; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0x79400]; jmp ecx; 
0x0002ccdf: add byte ptr [eax], al; mov ecx, edi; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0012ea4f: add byte ptr [eax], al; mov ecx, edx; xchg ebx, ecx; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00024f4b: add byte ptr [eax], al; mov ecx, edx; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0002e32f: add byte ptr [eax], al; mov ecx, edx; xchg edi, ebx; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x000232a3: add byte ptr [eax], al; mov ecx, esi; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000e9601: add byte ptr [eax], al; mov edi, 0xffffff9c; mov ecx, dword ptr [esp + 0x20]; xchg edi, ebx; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x000b3f5b: add byte ptr [eax], al; mov edi, dword ptr [ebp - 0x3c]; xchg edi, ebx; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000dfed1: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x1018]; add esp, 0x101c; ret; 
0x00054dfa: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x1028]; add esp, 0x102c; ret; 
0x00054af5: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x1034]; mov ebp, dword ptr [esp + 0x1038]; add esp, 0x103c; ret; 
0x000aae40: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x104]; mov ebp, dword ptr [esp + 0x108]; add esp, 0x10c; ret; 
0x000e112d: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x114]; mov ebp, dword ptr [esp + 0x118]; add esp, 0x11c; ret; 
0x000692f4: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x124]; mov ebp, dword ptr [esp + 0x128]; add esp, 0x12c; ret; 
0x0011bcc7: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x128]; add esp, 0x12c; ret; 
0x0002e032: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x128]; mov ebp, dword ptr [esp + 0x12c]; add esp, 0x130; ret; 
0x001187e4: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x134]; mov ebp, dword ptr [esp + 0x138]; add esp, 0x13c; ret; 
0x0002ddd0: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x138]; add esp, 0x13c; ret; 
0x0002ec57: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x144]; mov ebp, dword ptr [esp + 0x148]; add esp, 0x14c; ret; 
0x000b9e06: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x164]; mov ebp, dword ptr [esp + 0x168]; add esp, 0x16c; ret; 
0x000e7e00: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x1a8]; add esp, 0x1ac; ret; 
0x000e7d0a: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x1b4]; mov ebp, dword ptr [esp + 0x1b8]; add esp, 0x1bc; ret; 
0x0002f3b2: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x254]; mov ebp, dword ptr [esp + 0x258]; add esp, 0x25c; ret; 
0x0006b291: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x294]; mov ebp, dword ptr [esp + 0x298]; add esp, 0x29c; ret; 
0x000547d9: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x434]; mov ebp, dword ptr [esp + 0x438]; add esp, 0x43c; ret; 
0x001198fc: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x438]; add esp, 0x43c; ret; 
0x00119593: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x454]; mov ebp, dword ptr [esp + 0x458]; add esp, 0x45c; ret; 
0x00115656: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x484]; mov ebp, dword ptr [esp + 0x488]; add esp, 0x48c; ret; 
0x000d9531: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x544]; mov ebp, dword ptr [esp + 0x548]; add esp, 0x54c; ret; 
0x0005b9fc: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x81b4]; mov ebp, dword ptr [esp + 0x81b8]; add esp, 0x81bc; ret; 
0x000987ca: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x84]; mov ebp, dword ptr [esp + 0x88]; add esp, 0x8c; ret; 
0x000196db: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x88]; add esp, 0x8c; ret; 
0x000e3ce0: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x94]; mov ebp, dword ptr [esp + 0x98]; add esp, 0x9c; ret 4; 
0x00023316: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x94]; mov ebp, dword ptr [esp + 0x98]; add esp, 0x9c; ret; 
0x0002f21a: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x98]; add esp, 0x9c; ret; 
0x0006f6f4: add byte ptr [eax], al; mov edi, dword ptr [esp + 0xa4]; mov ebp, dword ptr [esp + 0xa8]; add esp, 0xac; ret; 
0x0002e84a: add byte ptr [eax], al; mov edi, dword ptr [esp + 0xa8]; add esp, 0xac; ret; 
0x000e1724: add byte ptr [eax], al; mov edi, dword ptr [esp + 0xb4]; mov ebp, dword ptr [esp + 0xb8]; add esp, 0xbc; ret 8; 
0x000de308: add byte ptr [eax], al; mov edi, dword ptr [esp + 0xc4]; mov ebp, dword ptr [esp + 0xc8]; add esp, 0xcc; ret; 
0x000672d1: add byte ptr [eax], al; mov edi, dword ptr [esp + 0xc8]; add esp, 0xcc; ret; 
0x0006d7c1: add byte ptr [eax], al; mov edi, dword ptr [esp + 0xd4]; mov ebp, dword ptr [esp + 0xd8]; add esp, 0xdc; ret; 
0x00068f4c: add byte ptr [eax], al; mov edi, dword ptr [esp + 0xe4]; mov ebp, dword ptr [esp + 0xe8]; add esp, 0xec; ret; 
0x000de47c: add byte ptr [eax], al; mov edi, dword ptr [esp + 0xf4]; mov ebp, dword ptr [esp + 0xf8]; add esp, 0xfc; ret; 
0x000d8425: add byte ptr [eax], al; mov edi, dword ptr [esp + 4]; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; add esp, 8; ret; 
0x0002de89: add byte ptr [eax], al; mov edi, eax; mov edx, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0002eeb2: add byte ptr [eax], al; mov edi, eax; xchg edi, ebx; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x000df442: add byte ptr [eax], al; mov edi, ebp; xchg edi, ebx; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000fc1de: add byte ptr [eax], al; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0011f0b6: add byte ptr [eax], al; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0x20]; 
0x001140d6: add byte ptr [eax], al; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx]; 
0x0011e5e6: add byte ptr [eax], al; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], esi; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x0007c136: add byte ptr [eax], al; mov edx, dword ptr [ebx - 0x78]; mov dword ptr [esp + 0x1c], eax; call dword ptr [edx]; 
0x000317c6: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], edi; mov dword ptr [esp + 8], edx; call esi; 
0x0007b11e: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x34]; mov dword ptr [esp + 4], edx; lea edx, dword ptr [edi + 0x19]; mov dword ptr [esp], edx; call eax; 
0x00065884: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x40]; mov dword ptr [esp + 8], edi; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x0002e27c: add byte ptr [eax], al; mov edx, dword ptr [esp + 0xc]; mov esi, eax; xchg ebx, edx; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0011f32e: add byte ptr [eax], al; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0012990e: add byte ptr [eax], al; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x4c], edx; ret; 
0x001298be: add byte ptr [eax], al; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x001195b5: add byte ptr [eax], al; mov edx, ebx; sub edx, dword ptr [ebx + eax*4 - 0x89a30]; jmp edx; 
0x0014e67a: add byte ptr [eax], al; mov esi, 0xc0000006; push es; add byte ptr [eax], al; ret 6; 
0x0014e87a: add byte ptr [eax], al; mov esi, 0xc0000007; pop es; add byte ptr [eax], al; ret 7; 
0x000dfeca: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x1014]; mov edi, dword ptr [esp + 0x1018]; add esp, 0x101c; ret; 
0x00054df3: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x1024]; mov edi, dword ptr [esp + 0x1028]; add esp, 0x102c; ret; 
0x0011d2e9: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x10]; add esp, 0x1c; ret; 
0x00030f34: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0011bcc0: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x124]; mov edi, dword ptr [esp + 0x128]; add esp, 0x12c; ret; 
0x0002ddc9: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x134]; mov edi, dword ptr [esp + 0x138]; add esp, 0x13c; ret; 
0x00114523: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x00115103: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x14]; mov eax, edx; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00071fab: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00040e4f: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, dword ptr [eax + 0x34]; add esp, 0x1c; ret; 
0x00031054: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; mov ebp, dword ptr [esp + 0x20]; add esp, 0x24; ret; 
0x000982c6: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x20]; mov ebp, dword ptr [esp + 0x24]; add esp, 0x28; ret; 
0x0010027b: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x001198f5: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x434]; mov edi, dword ptr [esp + 0x438]; add esp, 0x43c; ret; 
0x000d952a: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x540]; mov edi, dword ptr [esp + 0x544]; mov ebp, dword ptr [esp + 0x548]; add esp, 0x54c; ret; 
0x000196d4: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x84]; mov edi, dword ptr [esp + 0x88]; add esp, 0x8c; ret; 
0x000672ca: add byte ptr [eax], al; mov esi, dword ptr [esp + 0xc4]; mov edi, dword ptr [esp + 0xc8]; add esp, 0xcc; ret; 
0x000695c7: add byte ptr [eax], al; mov esi, dword ptr [esp + 0xe0]; mov ebp, dword ptr [esp + 0xe8]; add esp, 0xec; ret; 
0x0011321d: add byte ptr [eax], al; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0011456d: add byte ptr [eax], al; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000aad10: add byte ptr [eax], al; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000cb5be: add byte ptr [eax], al; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000e6358: add byte ptr [eax], al; mov esi, eax; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0011325e: add byte ptr [eax], al; mov esi, ebx; sub esi, dword ptr [ebx + ecx*4 - 0x8fd88]; jmp esi; 
0x001881ba: add byte ptr [eax], al; mov esp, 0x4000018f; sal ebx, 1; call dword ptr [eax]; 
0x00172d6a: add byte ptr [eax], al; mov esp, 0x7a000036; add ah, ch; call dword ptr [eax]; 
0x001921ba: add byte ptr [eax], al; mov esp, 0x8000022f; fdecstp; call dword ptr [ebp]; 
0x0014e476: add byte ptr [eax], al; mov esp, 0xbe000005; add eax, 0x5c00000; add byte ptr [eax], al; ret 5; 
0x001529be: add byte ptr [eax], al; mov esp, 0xbf00000f; sldt word ptr [eax]; ret 0xf; 
0x001977ba: add byte ptr [eax], al; mov esp, 0xf0000285; int 0xf7; jmp dword ptr [esi]; 
0x00184e8a: add byte ptr [eax], al; mov word ptr [ecx + eax], ds; mov al, 0x49; cld; call ebx; 
0x0008762e: add byte ptr [eax], al; mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x0008761e: add byte ptr [eax], al; mov word ptr [ecx], dx; pop ebx; ret; 
0x0008dc9e: add byte ptr [eax], al; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x00188c8a: add byte ptr [eax], al; mov word ptr [edx + 0x1d100001], ds; hlt; jmp dword ptr [ecx + 1]; 
0x0018853a: add byte ptr [eax], al; mov word ptr [esi + 0x1a850001], cs; hlt; call dword ptr [eax]; 
0x00174c02: add byte ptr [eax], al; mov word ptr [esi - 3], ds; jmp dword ptr [eax]; 
0x00089c9e: add byte ptr [eax], al; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, dword ptr [edx + 0xf]; ret; 
0x000858be: add byte ptr [eax], al; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x0009171e: add byte ptr [eax], al; movdqu xmm0, xmmword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008dd7e: add byte ptr [eax], al; movdqu xmmword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0008768e: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000876ae: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000876be: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x0008769e: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000876ce: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x0008767e: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x0008dcee: add byte ptr [eax], al; movlpd qword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0008dcfe: add byte ptr [eax], al; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0008996e: add byte ptr [eax], al; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, dword ptr [edx + 7]; pop edi; ret; 
0x000855ae: add byte ptr [eax], al; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0014a2fe: add byte ptr [eax], al; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x00167bce: add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; and bl, ch; ljmp ptr [eax + 0x74000079]; and ch, bl; call eax; 
0x001682ce: add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; insb byte ptr es:[edi], dx; in al, dx; jmp esp; 
0x001688a6: add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; jp 0x168898; call esp; 
0x001685d6: add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; mov ch, 0xec; push dword ptr [eax - 0x1bffff4c]; mov ch, 0xec; call eax; 
0x0017b352: add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; mov esp, 0xf6ad0000; out dx, eax; call dword ptr [eax]; 
0x001711a2: add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; pop ds; add byte ptr [eax], al; fdiv dword ptr [ebx - 0x15]; call ecx; 
0x00177fba: add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; pop ds; sti; jmp esi; 
0x001949a2: add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; push edi; add al, byte ptr [eax]; cmp byte ptr [edi + esi*8], ah; jmp dword ptr [ebx]; 
0x0017b952: add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; ret 0; 
0x001686fe: add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xffec; 
0x001680a6: add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; xor al, 0xec; call esp; 
0x0006bbdd: add byte ptr [eax], al; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0006baa5: add byte ptr [eax], al; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x00070926: add byte ptr [eax], al; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x44]; 
0x000c1f76: add byte ptr [eax], al; movzx eax, al; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0xe106c]; jmp ecx; 
0x000ac836: add byte ptr [eax], al; movzx eax, al; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0xf67ac]; jmp ecx; 
0x00025ead: add byte ptr [eax], al; movzx eax, byte ptr [eax]; mov byte ptr [ebx + 0x10e1], al; lea eax, dword ptr [ebx + 0x10ac]; pop ebx; ret; 
0x001403e7: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; pop ebp; ret; 
0x0013ec1e: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x00140407: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; pop ebp; ret; 
0x00140427: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x00140447: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x00140467: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; pop ebp; ret; 
0x001403c7: add byte ptr [eax], al; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x000cb88e: add byte ptr [eax], al; movzx edx, dl; mov eax, ebx; sub eax, dword ptr [ebx + edx*4 - 0xd7754]; jmp eax; 
0x0000ccd6: add byte ptr [eax], al; nop; call dword ptr [eax]; 
0x0017c80e: add byte ptr [eax], al; nop; fsub st(7), st(0); jmp edx; 
0x000b9069: add byte ptr [eax], al; nop; lea esi, dword ptr [esi]; ret; 
0x0017a88e: add byte ptr [eax], al; nop; mov dh, 0; add ah, bh; test edi, ebp; jmp dword ptr [eax]; 
0x0019aa8e: add byte ptr [eax], al; nop; mov eax, 0x9f1c0002; clc; call dword ptr [ebx]; 
0x00177d8e: add byte ptr [eax], al; nop; mov eax, dword ptr [eax]; add byte ptr [edx], bl; out dx, eax; jmp dword ptr [esi]; 
0x0019b43e: add byte ptr [eax], al; nop; mov ebp, 0xdac80002; clc; call dword ptr [eax]; 
0x0018b18e: add byte ptr [eax], al; nop; mov edi, 0x2f1c0001; cli; call dword ptr [ebp + 2]; 
0x0019ac8e: add byte ptr [eax], al; nop; mov edx, 0xa18c0002; clc; call dword ptr [esi + 2]; 
0x0019b08e: add byte ptr [eax], al; nop; mov esi, 0xb60c0002; clc; jmp edx; 
0x00024a1c: add byte ptr [eax], al; nop; pop ebx; ret; 
0x00176c6e: add byte ptr [eax], al; nop; push es; out dx, eax; jmp dword ptr [esi]; 
0x0018b48e: add byte ptr [eax], al; nop; ret 1; 
0x0000a4d6: add byte ptr [eax], al; nop; ret; 
0x0017c77e: add byte ptr [eax], al; nop; salc; out dx, eax; call dword ptr [ebx + 3]; 
0x0017923e: add byte ptr [eax], al; nop; wait; add byte ptr [eax], al; ret; 
0x00170c0a: add byte ptr [eax], al; or al, 0x1a; add byte ptr [eax], al; add byte ptr [edx - 0x15], ah; jmp dword ptr [edx]; 
0x0017200a: add byte ptr [eax], al; or al, 0x2e; add byte ptr [eax], al; ror bl, 0xeb; jmp dword ptr [eax]; 
0x0019710a: add byte ptr [eax], al; or al, 0x7f; add al, byte ptr [eax]; pushal; mov al, 0xf7; call dword ptr [eax]; 
0x0017980a: add byte ptr [eax], al; or al, 0xa6; add byte ptr [eax], al; mov al, 0x57; out dx, eax; call dword ptr [ecx]; 
0x00173e32: add byte ptr [eax], al; or al, 0xab; in al, dx; call dword ptr [edi + 4]; 
0x0017c80a: add byte ptr [eax], al; or al, 0xd6; add byte ptr [eax], al; nop; fsub st(7), st(0); jmp edx; 
0x0017c8b6: add byte ptr [eax], al; or bh, bl; out dx, eax; jmp dword ptr [esi]; 
0x00175aca: add byte ptr [eax], al; or bl, ch; out dx, al; call dword ptr [eax]; 
0x0018bd06: add byte ptr [eax], al; or bl, cl; add dword ptr [eax], eax; aam 0x9d; cmc; jmp dword ptr [ebx]; 
0x00199f06: add byte ptr [eax], al; or byte ptr [ebp + 0x61c40002], ch; clc; call dword ptr [edi]; 
0x0017adf6: add byte ptr [eax], al; or byte ptr [ebx + edi*8], cl; jmp dword ptr [ebx]; 
0x0010507c: add byte ptr [eax], al; or byte ptr [edi], 0x45; ret 0x90c3; 
0x000a7e7d: add byte ptr [eax], al; or byte ptr [edi], 0x4e; ret 0xc483; 
0x001730b6: add byte ptr [eax], al; or byte ptr [edx], bh; add byte ptr [eax], al; cmc; add ch, ah; call dword ptr [eax]; 
0x0018b006: add byte ptr [eax], al; or byte ptr [esi + 0x46640001], bh; cmc; jmp dword ptr [ebx]; 
0x00169176: add byte ptr [eax], al; or byte ptr [esi], 0xf0; call dword ptr [eax - 6]; 
0x0018c706: add byte ptr [eax], al; or ch, dl; add dword ptr [eax], eax; in al, 0xba; cmc; call dword ptr [ebp]; 
0x00111239: add byte ptr [eax], al; or dword ptr [ebx + 0x32ac], 2; add esp, 0x18; pop ebx; ret; 
0x0002e0e6: add byte ptr [eax], al; or eax, 0xffffffff; add esp, 8; ret; 
0x0002d7d1: add byte ptr [eax], al; or eax, edx; mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x0017d8ff: add byte ptr [eax], al; or eax, esi; call dword ptr [eax]; 
0x000eee45: add byte ptr [eax], al; or eax, esi; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x0017a232: add byte ptr [eax], al; out 0x93, al; out dx, eax; call dword ptr [eax]; 
0x0018d7cf: add byte ptr [eax], al; out dx, al; cmc; jmp dword ptr [ebx]; 
0x00178146: add byte ptr [eax], al; out dx, al; sti; call dword ptr [eax]; 
0x0017e0ff: add byte ptr [eax], al; out dx, eax; add byte ptr [eax], al; dec esp; and esi, eax; jmp dword ptr [edi]; 
0x00174d0e: add byte ptr [eax], al; outsd dx, dword ptr fs:[esi]; in eax, dx; call dword ptr [eax]; 
0x000954a6: add byte ptr [eax], al; pmovmskb eax, xmm1; bsf eax, eax; lea eax, dword ptr [edi + eax + 0x30]; pop edi; ret; 
0x0009577e: add byte ptr [eax], al; pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x0019ac56: add byte ptr [eax], al; pop eax; mov edx, 0xa1240002; clc; jmp dword ptr [edi]; 
0x0017d9f6: add byte ptr [eax], al; pop eax; or dh, al; call dword ptr [edx]; 
0x000eec11: add byte ptr [eax], al; pop ebx; add ebx, 0xb43e1; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x000b9939: add byte ptr [eax], al; pop ebx; cmp dword ptr gs:[edx], 0x26; mov edx, 0xffffffff; cmovne eax, edx; ret; 
0x0012e531: add byte ptr [eax], al; pop ebx; pop esi; pop edi; neg eax; ret; 
0x000c1f69: add byte ptr [eax], al; pop ebx; pop esi; pop edi; pop ebp; ret 0x10; 
0x000d9d0d: add byte ptr [eax], al; pop ebx; pop esi; pop edi; pop ebp; ret 0x14; 
0x000d2ee5: add byte ptr [eax], al; pop ebx; pop esi; pop edi; pop ebp; ret 0x18; 
0x0001acf6: add byte ptr [eax], al; pop ebx; pop esi; pop edi; pop ebp; ret 0xc; 
0x000ab640: add byte ptr [eax], al; pop ebx; pop esi; pop edi; pop ebp; ret 8; 
0x0001f145: add byte ptr [eax], al; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009528e: add byte ptr [eax], al; pop ebx; pop esi; pop edi; xor eax, eax; ret; 
0x00055c46: add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0001934c: add byte ptr [eax], al; pop ebx; ret; 
0x0013080e: add byte ptr [eax], al; pop ebx; xor eax, eax; ret; 
0x0003f93f: add byte ptr [eax], al; pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x00184d6f: add byte ptr [eax], al; pop ecx; push cs; or byte ptr [ebx + 0x40e4902], al; ret; 
0x001268ce: add byte ptr [eax], al; pop edi; pop ebp; ret; 
0x00087130: add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0008d40c: add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000a70a3: add byte ptr [eax], al; pop edi; pop esi; ret; 
0x0011cf7e: add byte ptr [eax], al; pop edi; ret; 
0x00172d9e: add byte ptr [eax], al; pop edx; add ah, ch; call dword ptr [eax]; 
0x00174bff: add byte ptr [eax], al; pop edx; add byte ptr [eax], al; mov word ptr [esi - 3], ds; jmp dword ptr [eax]; 
0x0007c90b: add byte ptr [eax], al; pop edx; lea ecx, dword ptr [edx + ecx*8 + 0xb]; jmp ecx; 
0x000fc1ef: add byte ptr [eax], al; pop edx; pop ecx; pop ebx; ret; 
0x0019c8d2: add byte ptr [eax], al; pop es; add byte ptr [eax], al; ret 2; 
0x000a866b: add byte ptr [eax], al; pop esi; add eax, edx; ret; 
0x001780b6: add byte ptr [eax], al; pop esi; daa; sti; call dword ptr [eax]; 
0x0002e6e7: add byte ptr [eax], al; pop esi; pop edi; pop ebp; ret; 
0x0002f571: add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0013062e: add byte ptr [eax], al; pop esi; pop edi; xor eax, eax; pop ebp; ret; 
0x0009192e: add byte ptr [eax], al; pop esi; ret; 
0x0017a022: add byte ptr [eax], al; pop esi; xchg eax, ebp; out dx, eax; call dword ptr [eax]; 
0x0017a2f2: add byte ptr [eax], al; pop esi; xchg eax, ebx; out dx, eax; call dword ptr [eax]; 
0x0007dd80: add byte ptr [eax], al; pop esi; xor eax, eax; pop ebx; ret; 
0x0007e726: add byte ptr [eax], al; pop esi; xor eax, eax; pop edi; pop ebp; ret; 
0x00149b7e: add byte ptr [eax], al; pop esi; xor eax, eax; pop edi; ret; 
0x00177312: add byte ptr [eax], al; pop esp; add byte ptr [eax], al; add byte ptr [edx + ebp], bh; add byte ptr [edi + ecx - 0x11], ah; call dword ptr [esi + 3]; 
0x0018d00a: add byte ptr [eax], al; pop esp; fld dword ptr [ecx]; add byte ptr [ecx - 0x22], ah; cmc; call dword ptr [eax]; 
0x00174f52: add byte ptr [eax], al; pop esp; imul ebp; jmp dword ptr [ebx]; 
0x0016f932: add byte ptr [eax], al; pop esp; mov dh, 0xea; call dword ptr [edx]; 
0x0017db32: add byte ptr [eax], al; pop esp; or al, 0xf0; jmp dword ptr [ebp]; 
0x00176686: add byte ptr [eax], al; pop ss; add edi, ebp; call dword ptr [eax]; 
0x0017b536: add byte ptr [eax], al; popal; cmc; out dx, eax; call dword ptr [eax]; 
0x00168976: add byte ptr [eax], al; popfd; in eax, dx; jmp dword ptr [eax]; 
0x00174342: add byte ptr [eax], al; push -0x2b; in al, dx; call dword ptr [eax]; 
0x00185266: add byte ptr [eax], al; push 0x24000160; sub al, 0xf2; jmp dword ptr [ebp + 5]; 
0x00199466: add byte ptr [eax], al; push 0x440002a2; dec ebp; clc; jmp dword ptr [ebx]; 
0x00198e66: add byte ptr [eax], al; push 0x5400029c; aaa; clc; jmp dword ptr [eax]; 
0x0018ac66: add byte ptr [eax], al; push 0x740001ba; cmp dh, ch; call dword ptr [ebx]; 
0x00191a66: add byte ptr [eax], al; push 0x74000228; mov bh, 0xf6; jmp dword ptr [edi]; 
0x00194d16: add byte ptr [eax], al; push 0x77000256; sub esi, edi; call dword ptr [eax]; 
0x00187466: add byte ptr [eax], al; push 0x84000182; or ebx, esi; call edi; 
0x0018c066: add byte ptr [eax], al; push 0x840001ce; movsd dword ptr es:[edi], dword ptr [esi]; cmc; jmp esp; 
0x00173116: add byte ptr [eax], al; push 0xb500003a; add ch, ah; call dword ptr [eax]; 
0x00174966: add byte ptr [eax], al; push 0xe4000057; xor ch, ch; call dword ptr [ebx + 1]; 
0x00188a66: add byte ptr [eax], al; push 0xf4000198; sbb esp, esi; call eax; 
0x00016eae: add byte ptr [eax], al; push dword ptr [ebx + 4]; jmp dword ptr [ebx + 8]; 
0x0017c74e: add byte ptr [eax], al; push eax; aad 0; add byte ptr [esp + edx*8], bl; out dx, eax; call dword ptr [edi + 2]; 
0x0017326e: add byte ptr [eax], al; push eax; add al, 0xec; call dword ptr [edi + 1]; 
0x0018d04e: add byte ptr [eax], al; push eax; fiadd word ptr [ecx]; add byte ptr [esp + edx*8], bh; cmc; jmp dword ptr [eax]; 
0x0017a84e: add byte ptr [eax], al; push eax; mov dh, 0; add ah, cl; test bh, ch; jmp dword ptr [ecx + 1]; 
0x0016f91e: add byte ptr [eax], al; push eax; mov dh, 0xea; call dword ptr [edx]; 
0x0018aa4e: add byte ptr [eax], al; push eax; mov eax, 0x351c0001; cmc; call dword ptr [ecx]; 
0x0019b4fe: add byte ptr [eax], al; push eax; mov esi, 0xda480002; clc; call dword ptr [eax]; 
0x0017302a: add byte ptr [eax], al; push ebp; add ebp, esp; call dword ptr [eax]; 
0x0017b6b6: add byte ptr [eax], al; push ebp; hlt; out dx, eax; call dword ptr [eax]; 
0x00176626: add byte ptr [eax], al; push edi; add edi, ebp; call dword ptr [eax]; 
0x00168e86: add byte ptr [eax], al; push edi; loope 0x168e7a; jmp dword ptr [eax]; 
0x0017fff3: add byte ptr [eax], al; push edi; push cs; or byte ptr [ebx + 0x40e4902], al; ret; 
0x001874a2: add byte ptr [eax], al; push esp; add byte ptr [eax], al; add byte ptr [eax + 0x64000182], ch; or dh, bl; jmp dword ptr [ebp + 2]; 
0x001986b6: add byte ptr [eax], al; push esp; add byte ptr [eax], al; add byte ptr [esp + edx*4 + 0x15700002], bh; clc; call dword ptr [esi]; 
0x0017f752: add byte ptr [eax], al; push esp; add eax, 0xa9b80001; sti; call dword ptr [ecx]; 
0x0018da52: add byte ptr [eax], al; push esp; call 0xf8b0da5b; cmc; jmp esi; 
0x0017d03a: add byte ptr [eax], al; push esp; clc; out dx, eax; call dword ptr [edx]; 
0x00168e2e: add byte ptr [eax], al; push esp; fucomi st(7); call eax; 
0x0019a902: add byte ptr [eax], al; push esp; mov dl, 2; add byte ptr [edx - 8], dh; call dword ptr [eax]; 
0x0018ad52: add byte ptr [eax], al; push esp; mov ebx, 0x3c980001; cmc; jmp dword ptr [edx]; 
0x0017b202: add byte ptr [eax], al; push esp; mov ebx, 0xf78d0000; out dx, eax; call dword ptr [eax]; 
0x0017b502: add byte ptr [eax], al; push esp; mov esi, 0xf5810000; out dx, eax; call dword ptr [eax]; 
0x00174aaa: add byte ptr [eax], al; push esp; push ebp; in eax, dx; call dword ptr [eax]; 
0x001686f6: add byte ptr [eax], al; push esp; ret 0xffec; 
0x0018b452: add byte ptr [eax], al; push esp; ret 1; 
0x0016808e: add byte ptr [eax], al; push esp; xor ebp, esp; call dword ptr [ecx + ebx*4 + 0x347e0000]; in al, dx; call esp; 
0x001751ff: add byte ptr [eax], al; pushal; add byte ptr [eax], al; pushfd; add ch, dh; call dword ptr [esi]; 
0x00007966: add byte ptr [eax], al; pushal; clc; adc dword ptr [eax], eax; ret; 
0x001729fe: add byte ptr [eax], al; pushal; imul ebx; call ebx; 
0x00007136: add byte ptr [eax], al; pushal; jp 0x7145; add byte ptr [0x22000000], dl; add byte ptr [eax + eax], cl; ret; 
0x0019b40e: add byte ptr [eax], al; pushal; mov ebp, 0xdae80002; clc; call dword ptr [eax]; 
0x0017c45e: add byte ptr [eax], al; pushal; rol byte ptr [eax], cl; add byte ptr [edx + edi*4], bh; out dx, eax; jmp dword ptr [ebx]; 
0x00170d5e: add byte ptr [eax], al; pushal; sbb eax, dword ptr [eax]; add byte ptr [ebx - 0x15], cl; call dword ptr [ebx]; 
0x00199b5e: add byte ptr [eax], al; pushal; test eax, 0x5bbc0002; clc; call dword ptr [ecx]; 
0x00175202: add byte ptr [eax], al; pushfd; add ch, dh; call dword ptr [esi]; 
0x0018cf4a: add byte ptr [eax], al; pushfd; fadd dword ptr [ecx]; add cl, ah; fdivrp st(5); call dword ptr [eax]; 
0x00174642: add byte ptr [eax], al; pushfd; fsubr st(4); jmp dword ptr [edi]; 
0x001725c2: add byte ptr [eax], al; pushfd; fucomp st(3); call dword ptr [ebp + 4]; 
0x0017929a: add byte ptr [eax], al; pushfd; mov al, byte ptr [0x51700000]; out dx, eax; jmp dword ptr [ebx]; 
0x0017a49a: add byte ptr [eax], al; pushfd; mov dl, 0; add al, al; jp 0x17a492; call dword ptr [ebp]; 
0x0017da12: add byte ptr [eax], al; pushfd; or dh, al; call dword ptr [ecx]; 
0x0019527e: add byte ptr [eax], al; rcr byte ptr [ebx + 2], 1; add byte ptr [edi], bl; xor al, 0xf7; call dword ptr [eax]; 
0x0014c706: add byte ptr [eax], al; ret 0; 
0x0000098d: add byte ptr [eax], al; ret 0x1010; 
0x00152dc6: add byte ptr [eax], al; ret 0x12; 
0x0015085e: add byte ptr [eax], al; ret 0x1d4; 
0x00150ff6: add byte ptr [eax], al; ret 0x1d5; 
0x0014f866: add byte ptr [eax], al; ret 0x24; 
0x0014fd56: add byte ptr [eax], al; ret 0x33; 
0x0000044c: add byte ptr [eax], al; ret 0x3e00; 
0x001525c6: add byte ptr [eax], al; ret 0xc; 
0x00177466: add byte ptr [eax], al; ret 0xef13; 
0x00177c2e: add byte ptr [eax], al; ret 0xef21; 
0x00179f92: add byte ptr [eax], al; ret 0xef95; 
0x0017b056: add byte ptr [eax], al; ret 0xeff8; 
0x00168ffe: add byte ptr [eax], al; ret 0xeffa; 
0x001691ce: add byte ptr [eax], al; ret 0xf012; 
0x001529c6: add byte ptr [eax], al; ret 0xf; 
0x0014dc82: add byte ptr [eax], al; ret 1; 
0x00000ebe: add byte ptr [eax], al; ret 2; 
0x0014e082: add byte ptr [eax], al; ret 3; 
0x0000122a: add byte ptr [eax], al; ret 4; 
0x000013e6: add byte ptr [eax], al; ret 5; 
0x0000158e: add byte ptr [eax], al; ret 6; 
0x00001732: add byte ptr [eax], al; ret 7; 
0x000018c2: add byte ptr [eax], al; ret 8; 
0x0014ec82: add byte ptr [eax], al; ret 9; 
0x00000cf2: add byte ptr [eax], al; ret; 
0x0014e27e: add byte ptr [eax], al; rol byte ptr [eax + eax], 0; ret 4; 
0x00105070: add byte ptr [eax], al; rol byte ptr [ecx + 0xffe2], 0; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0017691e: add byte ptr [eax], al; rol byte ptr [ecx], 0xef; call dword ptr [ebx]; 
0x0017ad3e: add byte ptr [eax], al; rol byte ptr [edi], 1; sti; jmp edx; 
0x0019c9ca: add byte ptr [eax], al; rol byte ptr [edx], cl; add byte ptr [eax], al; ret 5; 
0x0019ca62: add byte ptr [eax], al; rol dword ptr [eax + eax], 1; add byte ptr [ecx - 0x20ffffff], bh; add eax, 0x1250000; add byte ptr [eax], al; ret; 
0x00105047: add byte ptr [eax], al; ror ax, 8; ret; 
0x0017200e: add byte ptr [eax], al; ror bl, 0xeb; jmp dword ptr [eax]; 
0x00173fbe: add byte ptr [eax], al; ror byte ptr [ebp], 0; cld; mov ch, 0xec; jmp dword ptr [ebx]; 
0x00176f1e: add byte ptr [eax], al; ror byte ptr [ecx], 0xef; jmp dword ptr [ebx]; 
0x00019526: add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0003ec14: add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp + 8], esi; mov dword ptr [esp], edx; call eax; 
0x00026c01: add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], 1; call eax; 
0x0001ba7c: add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000ff6f9: add byte ptr [eax], al; ror edx, 9; xor edx, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0017b086: add byte ptr [eax], al; sahf; clc; out dx, eax; call dword ptr [eax]; 
0x00175ede: add byte ptr [eax], al; sal al, 0xee; jmp dword ptr [edx]; 
0x0018a8be: add byte ptr [eax], al; sal byte ptr [esi + 0x31ec0001], 0xf5; call dword ptr [ebp]; 
0x0017b8f6: add byte ptr [eax], al; sal dl, 0xef; call dword ptr [eax]; 
0x00168866: add byte ptr [eax], al; sal dword ptr [ebp + ebp*8 - 1], 0x70; ret 0; 
0x0017bbc6: add byte ptr [eax], al; sal eax, -0x11; call dword ptr [eax]; 
0x0017b776: add byte ptr [eax], al; sal ebx, 1; out dx, eax; call dword ptr [eax]; 
0x0017ba46: add byte ptr [eax], al; sal ecx, 1; out dx, eax; call dword ptr [eax]; 
0x0017a0e2: add byte ptr [eax], al; salc; xchg eax, esp; out dx, eax; call dword ptr [eax]; 
0x0019b46e: add byte ptr [eax], al; sar byte ptr [ebp - 0x2557fffe], 0xf8; call dword ptr [eax]; 
0x00176fce: add byte ptr [eax], al; sar byte ptr [ebp], 1; add ah, ch; or ebp, edi; jmp dword ptr [ebx]; 
0x0019b1ce: add byte ptr [eax], al; sar byte ptr [edi - 0x4413fffe], 1; clc; jmp dword ptr [edi]; 
0x001930ce: add byte ptr [eax], al; sar byte ptr [esi], 1; add al, byte ptr [eax]; in al, dx; div esi; jmp dword ptr [eax]; 
0x000590c5: add byte ptr [eax], al; sar edi, 2; mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0017cae6: add byte ptr [eax], al; sbb ah, dh; out dx, eax; call dword ptr [eax]; 
0x0017aad6: add byte ptr [eax], al; sbb al, 0; add byte ptr [eax], al; fdivr qword ptr [eax - 0x74600000]; out dx, eax; call dword ptr [edx]; 
0x0018dc7a: add byte ptr [eax], al; sbb al, 0; add byte ptr [eax], al; sub dl, 1; add byte ptr [eax + edx*8 - 5], bh; jmp dword ptr [edx]; 
0x00177622: add byte ptr [eax], al; sbb al, 0x15; out dx, eax; jmp dword ptr [eax]; 
0x00177d92: add byte ptr [eax], al; sbb al, 0x22; out dx, eax; jmp dword ptr [esi]; 
0x00191bca: add byte ptr [eax], al; sbb al, 0x25; add al, byte ptr [eax]; dec ebp; sal esi, 1; call dword ptr [eax]; 
0x0017371a: add byte ptr [eax], al; sbb al, 0x45; add byte ptr [eax], al; adc byte ptr [esp + ebp*8], dl; call dword ptr [edi + 7]; 
0x0017511a: add byte ptr [eax], al; sbb al, 0x5f; add byte ptr [eax], al; xor ch, bh; in eax, dx; jmp dword ptr [eax + 1]; 
0x00176f1a: add byte ptr [eax], al; sbb al, 0x7d; add byte ptr [eax], al; ror byte ptr [ecx], 0xef; jmp dword ptr [ebx]; 
0x00197b1a: add byte ptr [eax], al; sbb al, 0x89; add al, byte ptr [eax]; nop; aad 0xf7; jmp dword ptr [ebx]; 
0x00189c1a: add byte ptr [eax], al; sbb al, 0xaa; add dword ptr [eax], eax; push eax; aam 0xf4; call dword ptr [edx]; 
0x0017c752: add byte ptr [eax], al; sbb al, 0xd4; out dx, eax; call dword ptr [edi + 2]; 
0x0018cf1a: add byte ptr [eax], al; sbb al, 0xdd; add dword ptr [eax], eax; pushal; aam 0xf5; call edi; 
0x0017d21a: add byte ptr [eax], al; sbb al, 0xe0; add byte ptr [eax], al; adc dl, bh; out dx, eax; jmp dword ptr [edi]; 
0x0017d31a: add byte ptr [eax], al; sbb al, 0xe1; add byte ptr [eax], al; xor dh, bh; out dx, eax; call dword ptr [edx]; 
0x0018d51a: add byte ptr [eax], al; sbb al, 0xe3; add dword ptr [eax], eax; mov al, 0xe3; cmc; call dword ptr [edi]; 
0x0016f91a: add byte ptr [eax], al; sbb al, 7; add byte ptr [eax], al; push eax; mov dh, 0xea; call dword ptr [edx]; 
0x00199a16: add byte ptr [eax], al; sbb byte ptr [eax + 0x59640002], ch; clc; jmp dword ptr [ecx]; 
0x00175ac6: add byte ptr [eax], al; sbb byte ptr [eax + eax], ah; or bl, ch; out dx, al; call dword ptr [eax]; 
0x00170f56: add byte ptr [eax], al; sbb byte ptr [eax - 0x15], ch; jmp dword ptr [ebx]; 
0x00198516: add byte ptr [eax], al; sbb byte ptr [ebx + 0x2a440002], dl; sti; jmp dword ptr [edi]; 
0x00199d16: add byte ptr [eax], al; sbb byte ptr [ebx + 0x5de40002], ch; clc; call dword ptr [ebp]; 
0x001753b6: add byte ptr [eax], al; sbb byte ptr [ebx], al; out dx, al; call dword ptr [ecx]; 
0x001753b2: add byte ptr [eax], al; sbb byte ptr [ebx], cl; add byte ptr [eax], al; sbb byte ptr [ebx], al; out dx, al; call dword ptr [ecx]; 
0x00178b16: add byte ptr [eax], al; sbb byte ptr [ecx + 0x31c40000], bl; out dx, eax; call eax; 
0x00172fc6: add byte ptr [eax], al; sbb byte ptr [ecx], bh; add byte ptr [eax], al; xchg eax, ebp; add ebp, esp; call dword ptr [eax]; 
0x0019a416: add byte ptr [eax], al; sbb byte ptr [edx - 0x742bfffe], dh; clc; jmp dword ptr [ebx]; 
0x000343d2: add byte ptr [eax], al; sbb byte ptr [esi + 0x5f], 0x5d; ret; 
0x001954c6: add byte ptr [eax], al; sbb byte ptr [esi + 2], bl; add byte ptr [ebp + esi - 9], cl; call dword ptr [eax]; 
0x0016f816: add byte ptr [eax], al; sbb byte ptr [esi], al; add byte ptr [eax], al; and al, 0xab; std; call dword ptr [edx]; 
0x00167b7e: add byte ptr [eax], al; sbb ebp, ebx; jmp dword ptr [eax]; 
0x001778aa: add byte ptr [eax], al; sbb edi, ebp; call dword ptr [esi]; 
0x0017af36: add byte ptr [eax], al; scasb al, byte ptr es:[edi]; stc; out dx, eax; call dword ptr [eax]; 
0x00168546: add byte ptr [eax], al; scasd eax, dword ptr es:[edi]; in al, dx; call eax; 
0x00054e3f: add byte ptr [eax], al; sete dl; mov eax, edx; add esp, 0x7c; ret; 
0x0014f85e: add byte ptr [eax], al; shl dword ptr [eax + eax], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret 0x24; 
0x000f0d9a: add byte ptr [eax], al; shl edx, 0x18; or eax, edx; add esp, 0x7c; ret; 
0x000ce096: add byte ptr [eax], al; shl edx, cl; or dword ptr [eax + 0x50], edx; xor eax, eax; pop esi; ret; 
0x00189fbe: add byte ptr [eax], al; shr byte ptr [ebp - 0x18f3ffff], 0xf4; call esi; 
0x0017a07e: add byte ptr [eax], al; shr byte ptr [ecx - 0x6ae60000], 1; out dx, eax; call dword ptr [eax]; 
0x0017bd16: add byte ptr [eax], al; shr edi, 1; out dx, eax; call dword ptr [eax]; 
0x00168efe: add byte ptr [eax], al; shr esp, cl; out dx, eax; push dword ptr [ebx + ebp*8 - 0x131d0000]; out dx, eax; jmp esp; 
0x00168e66: add byte ptr [eax], al; stosb byte ptr es:[edi], al; fsubp st(7); jmp dword ptr [eax - 0x18]; 
0x0016fa32: add byte ptr [eax], al; stosb byte ptr es:[edi], al; shr dl, 1; call dword ptr [eax]; 
0x0017a2ba: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; adc byte ptr [eax + eax - 0x106c8200], ch; call dword ptr [eax]; 
0x00179fba: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; adc byte ptr [ecx - 0x6a5e0000], ch; out dx, eax; call dword ptr [eax]; 
0x0017a1ca: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; and byte ptr [ebx - 0x6bd60000], ch; out dx, eax; call dword ptr [eax]; 
0x0019b4ca: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; and byte ptr [esi - 0x2597fffe], bh; clc; call dword ptr [eax]; 
0x0019ae92: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; call 0xb719b154; mov ah, 0xf8; call dword ptr [eax]; 
0x0019b52a: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; cmp byte ptr [esi - 0x25d7fffe], 0xf8; call dword ptr [eax]; 
0x0017ba9e: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; hlt; ret; 
0x00192cfa: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; in al, 1; add byte ptr [ecx + esi*8 - 0xa], bh; call dword ptr [esi]; 
0x0017b8ee: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; inc esp; ret 0; 
0x00175d56: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; lodsb al, byte ptr [esi]; add byte ptr [eax], al; ret; 
0x0017745e: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; mov ah, 0x7d; add byte ptr [eax], al; ret 0xef13; 
0x0019524a: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; mov al, byte ptr [0x3f00025b]; xor al, 0xf7; call dword ptr [eax]; 
0x00191e4a: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; mov al, byte ptr [0x4a000227]; sal esi, 1; call dword ptr [eax]; 
0x0017b40e: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; mov ebp, 0xf62d0000; out dx, eax; call dword ptr [eax]; 
0x00188536: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; mov word ptr [esi + 0x1a850001], cs; hlt; call dword ptr [eax]; 
0x0017b94e: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; ret 0; 
0x00194d12: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; push 0x77000256; sub esi, edi; call dword ptr [eax]; 
0x00173112: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; push 0xb500003a; add ch, ah; call dword ptr [eax]; 
0x0019b46a: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; sar byte ptr [ebp - 0x2557fffe], 0xf8; call dword ptr [eax]; 
0x0019a412: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; sbb byte ptr [edx - 0x742bfffe], dh; clc; jmp dword ptr [ebx]; 
0x0017a07a: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; shr byte ptr [ecx - 0x6ae60000], 1; out dx, eax; call dword ptr [eax]; 
0x0017a22a: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; sub byte ptr [ebx - 0x6c1a0000], 0xef; call dword ptr [eax]; 
0x001888d2: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; sub byte ptr [edx - 0x401ffff], dl; hlt; call dword ptr [eax]; 
0x0017af2e: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; test byte ptr [eax - 0x6520000], bh; out dx, eax; call dword ptr [eax]; 
0x0017b22e: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; test byte ptr [ebx - 0x8930000], bh; out dx, eax; call dword ptr [eax]; 
0x0019a92e: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; test byte ptr [edx - 0x5dabfffe], dh; clc; call dword ptr [eax]; 
0x0017b52e: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; test byte ptr [esi - 0xa9f0000], bh; out dx, eax; call dword ptr [eax]; 
0x0017ba3e: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; xchg eax, esp; ret; 
0x0019052a: add byte ptr [eax], al; sub al, 0x13; add al, byte ptr [eax]; add byte ptr [eax - 0xa], bl; jmp dword ptr [ebx]; 
0x001941da: add byte ptr [eax], al; sub al, 0x4b; add al, byte ptr [eax]; push ebp; sbb dh, bh; call dword ptr [eax]; 
0x00194c2a: add byte ptr [eax], al; sub al, 0x5a; add al, byte ptr [eax]; inc eax; sub edi, esi; call dword ptr [ecx]; 
0x0018642a: add byte ptr [eax], al; sub al, 0x72; add dword ptr [eax], eax; shl dh, 0xf2; jmp dword ptr [edx]; 
0x0018812a: add byte ptr [eax], al; sub al, 0x8f; add dword ptr [eax], eax; adc al, 0xf3; call dword ptr [eax]; 
0x0017abe2: add byte ptr [eax], al; sub al, 0x90; out dx, eax; call dword ptr [edx]; 
0x00188d2a: add byte ptr [eax], al; sub al, 0x9b; add dword ptr [eax], eax; push eax; and esp, esi; jmp dword ptr [edi]; 
0x0019eae2: add byte ptr [eax], al; sub al, 6; add byte ptr [eax], al; ret; 
0x001759e6: add byte ptr [eax], al; sub bh, bl; out dx, al; jmp dword ptr [esi]; 
0x0018b48a: add byte ptr [eax], al; sub byte ptr [eax], al; add byte ptr [eax], al; nop; ret 1; 
0x00178d7e: add byte ptr [eax], al; sub byte ptr [eax], al; add byte ptr [eax], al; test byte ptr [ebx + 0x37a80000], bl; out dx, eax; call dword ptr [edx]; 
0x00170d26: add byte ptr [eax], al; sub byte ptr [ebx - 0x15], ah; call dword ptr [ebx]; 
0x00189d26: add byte ptr [eax], al; sub byte ptr [ebx - 0x205bffff], ch; hlt; call dword ptr [edx]; 
0x0017a22e: add byte ptr [eax], al; sub byte ptr [ebx - 0x6c1a0000], 0xef; call dword ptr [eax]; 
0x00188b26: add byte ptr [eax], al; sub byte ptr [ecx + 0x1b040001], bl; hlt; jmp dword ptr [ebx]; 
0x00178926: add byte ptr [eax], al; sub byte ptr [edi + 0x2a440000], dl; out dx, eax; jmp dword ptr [ebx]; 
0x001707a6: add byte ptr [eax], al; sub byte ptr [edx - 0x15], al; call dword ptr [edx]; 
0x001888d6: add byte ptr [eax], al; sub byte ptr [edx - 0x401ffff], dl; hlt; call dword ptr [eax]; 
0x0017df26: add byte ptr [eax], al; sub ch, ch; add byte ptr [eax], al; hlt; sbb al, 0xf0; call esp; 
0x0018dc7e: add byte ptr [eax], al; sub dl, 1; add byte ptr [eax + edx*8 - 5], bh; jmp dword ptr [edx]; 
0x0007ca69: add byte ptr [eax], al; sub eax, edx; ret; 
0x0002d7a1: add byte ptr [eax], al; sub eax, edx; sar eax, 0x10; ret; 
0x00097fa6: add byte ptr [eax], al; sub eax, esi; pop esi; pop edi; pop ebp; ret; 
0x0010fd8d: add byte ptr [eax], al; sub edx, 1; mov byte ptr [ecx + 1], dl; ret; 
0x000e6aa2: add byte ptr [eax], al; sub edx, eax; mov eax, edx; pop ebx; ret; 
0x000fd40e: add byte ptr [eax], al; sub esp, 0xc; call 0xb9030; add esp, 0xc; and eax, 0xffff; ret; 
0x000ab392: add byte ptr [eax], al; sub esp, 8; add esp, 0x18; pop ebx; ret; 
0x0019e47e: add byte ptr [eax], al; syscall; 
0x00178d86: add byte ptr [eax], al; test al, 0x37; out dx, eax; call dword ptr [edx]; 
0x001734a6: add byte ptr [eax], al; test al, 0x42; add byte ptr [eax], al; aam 7; in al, dx; call dword ptr [edi]; 
0x00176fa6: add byte ptr [eax], al; test al, 0x7d; add byte ptr [eax], al; xor al, 0xb; out dx, eax; call esp; 
0x001874a6: add byte ptr [eax], al; test al, 0x82; add dword ptr [eax], eax; or dh, bl; jmp dword ptr [ebp + 2]; 
0x001778a6: add byte ptr [eax], al; test al, 0x86; add byte ptr [eax], al; sbb edi, ebp; call dword ptr [esi]; 
0x001791a6: add byte ptr [eax], al; test al, 0x9f; add byte ptr [eax], al; mov ah, 0x50; out dx, eax; call dword ptr [ecx]; 
0x0018a3a6: add byte ptr [eax], al; test al, 0xb1; add dword ptr [eax], eax; aam 0xf2; hlt; jmp dword ptr [ebx]; 
0x00173516: add byte ptr [eax], al; test al, 8; in al, dx; call dword ptr [esi]; 
0x001687b6: add byte ptr [eax], al; test al, ah; in al, dx; call eax; 
0x00168dee: add byte ptr [eax], al; test al, bl; out dx, eax; call dword ptr [eax - 0x1a]; 
0x0019b982: add byte ptr [eax], al; test bh, al; add al, byte ptr [eax]; sbb bl, dl; clc; jmp dword ptr [eax]; 
0x00168796: add byte ptr [eax], al; test bh, bl; in al, dx; call dword ptr [eax - 0x43]; 
0x00168c36: add byte ptr [eax], al; test bh, bl; out dx, al; jmp dword ptr [eax]; 
0x0017deea: add byte ptr [eax], al; test byte ptr [eax + esi*8], bl; jmp dword ptr [edx]; 
0x00179bba: add byte ptr [eax], al; test byte ptr [eax - 0x11], ah; jmp dword ptr [edx + 5]; 
0x0017af32: add byte ptr [eax], al; test byte ptr [eax - 0x6520000], bh; out dx, eax; call dword ptr [eax]; 
0x00178d82: add byte ptr [eax], al; test byte ptr [ebx + 0x37a80000], bl; out dx, eax; call dword ptr [edx]; 
0x0017b232: add byte ptr [eax], al; test byte ptr [ebx - 0x8930000], bh; out dx, eax; call dword ptr [eax]; 
0x00182d82: add byte ptr [eax], al; test byte ptr [ebx], bh; add dword ptr [eax], eax; cmp byte ptr [edi], ch; int1; call dword ptr [esi]; 
0x00179b82: add byte ptr [eax], al; test byte ptr [ecx + 0x60480000], ch; out dx, eax; call dword ptr [eax]; 
0x001680d6: add byte ptr [eax], al; test byte ptr [edi], bh; in al, dx; call dword ptr [eax - 0x65]; 
0x0016857e: add byte ptr [eax], al; test byte ptr [edx - 0x4cc30014], dh; add byte ptr [eax], al; in al, 0xb2; in al, dx; jmp dword ptr [eax - 0x4d]; 
0x0019a932: add byte ptr [eax], al; test byte ptr [edx - 0x5dabfffe], dh; clc; call dword ptr [eax]; 
0x0018a482: add byte ptr [eax], al; test byte ptr [edx - 0x8d7ffff], dh; hlt; call dword ptr [esi]; 
0x0017b532: add byte ptr [eax], al; test byte ptr [esi - 0xa9f0000], bh; out dx, eax; call dword ptr [eax]; 
0x00114e75: add byte ptr [eax], al; test eax, eax; setne al; add esp, 0x1c; movzx eax, al; ret; 
0x0007fd4e: add byte ptr [eax], al; test esi, esi; cmovne eax, edx; add esp, 0x18; pop esi; ret; 
0x00172fca: add byte ptr [eax], al; xchg eax, ebp; add ebp, esp; call dword ptr [eax]; 
0x0017a322: add byte ptr [eax], al; xchg eax, ebx; out dx, eax; call dword ptr [eax]; 
0x0017baa6: add byte ptr [eax], al; xchg eax, ecx; int1; out dx, eax; call dword ptr [eax]; 
0x0017b7d6: add byte ptr [eax], al; xchg eax, ecx; out dx, eax; call dword ptr [eax]; 
0x0017a142: add byte ptr [eax], al; xchg eax, edx; xchg eax, esp; out dx, eax; call dword ptr [eax]; 
0x00190e1f: add byte ptr [eax], al; xchg eax, esi; idiv bh; ret 0; 
0x0017cb42: add byte ptr [eax], al; xchg eax, esp; aam 0; add al, bl; out dx, eax; call dword ptr [eax]; 
0x0017ebba: add byte ptr [eax], al; xchg eax, esp; aas; sti; jmp esp; 
0x00187592: add byte ptr [eax], al; xchg eax, esp; add dword ptr [ecx], 0; dec eax; adc bl, dh; call dword ptr [ebx]; 
0x0018d192: add byte ptr [eax], al; xchg eax, esp; fild word ptr [ecx]; add al, bh; fdivr st(5), st(0); call dword ptr [eax]; 
0x00168b8e: add byte ptr [eax], al; xchg eax, esp; fldz; call dword ptr [eax]; 
0x00178142: add byte ptr [eax], al; xchg eax, esp; mov al, byte ptr [eax]; add dh, ch; sti; call dword ptr [eax]; 
0x0017bd42: add byte ptr [eax], al; xchg eax, esp; mov byte ptr [eax], 0; mov cl, 0xef; out dx, eax; call dword ptr [eax]; 
0x0016890e: add byte ptr [eax], al; xchg eax, esp; nop; in eax, dx; call eax; 
0x0016870e: add byte ptr [eax], al; xchg eax, esp; ret; 
0x0017b742: add byte ptr [eax], al; xchg eax, esp; rol byte ptr [eax], 0; int1; out dx, eax; call dword ptr [eax]; 
0x0017227a: add byte ptr [eax], al; xchg eax, esp; shr bl, cl; jmp dword ptr [esi]; 
0x000eedf2: add byte ptr [eax], al; xchg ebx, ecx; ret; 
0x001272a8: add byte ptr [eax], al; xchg ebx, edi; call dword ptr gs:[0x10]; 
0x000b84c2: add byte ptr [eax], al; xchg ebx, edi; int 0x80; 
0x000c5b40: add byte ptr [eax], al; xchg ebx, edi; neg eax; pop edi; ret; 
0x000ba6b7: add byte ptr [eax], al; xchg ebx, edx; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0002e247: add byte ptr [eax], al; xchg ebx, edx; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000e631f: add byte ptr [eax], al; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000fc781: add byte ptr [eax], al; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0002e140: add byte ptr [eax], al; xchg edi, ebx; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00188a62: add byte ptr [eax], al; xor al, 0; add byte ptr [eax], al; push 0xf4000198; sbb esp, esi; call eax; 
0x00170c32: add byte ptr [eax], al; xor al, 0x1a; add byte ptr [eax], al; cmp byte ptr [edx - 0x15], ah; jmp dword ptr [edx]; 
0x00168356: add byte ptr [eax], al; xor al, 0x73; in al, dx; call dword ptr [eax]; 
0x0017a44a: add byte ptr [eax], al; xor al, 0x7a; out dx, eax; jmp dword ptr [esi]; 
0x00197132: add byte ptr [eax], al; xor al, 0x7f; add al, byte ptr [eax]; dec eax; mov cl, 0xf7; jmp dword ptr [esi]; 
0x001780e2: add byte ptr [eax], al; xor al, 0x8a; add byte ptr [eax], al; daa; sti; call dword ptr [eax]; 
0x001685fe: add byte ptr [eax], al; xor al, 0xb8; in al, dx; jmp eax; 
0x00176faa: add byte ptr [eax], al; xor al, 0xb; out dx, eax; call esp; 
0x0017b3e2: add byte ptr [eax], al; xor al, 0xbd; add byte ptr [eax], al; dec ebp; imul bh; call dword ptr [eax]; 
0x0017cae2: add byte ptr [eax], al; xor al, 0xd4; add byte ptr [eax], al; sbb ah, dh; out dx, eax; call dword ptr [eax]; 
0x00168b9e: add byte ptr [eax], al; xor al, 0xda; out dx, al; call dword ptr [eax - 0x29]; 
0x00172462: add byte ptr [eax], al; xor al, byte ptr fs:[eax]; add byte ptr [eax], bl; fldpi; call dword ptr [edi]; 
0x0017e22e: add byte ptr [eax], al; xor al, dh; add byte ptr [eax], al; lodsb al, byte ptr [esi]; cmp eax, esi; jmp edi; 
0x0017c92e: add byte ptr [eax], al; xor bh, dl; add byte ptr [eax], al; lodsb al, byte ptr [esi]; in al, 0xef; jmp ebx; 
0x00179a2e: add byte ptr [eax], al; xor byte ptr [eax + 0x58cc0000], ch; out dx, eax; jmp dword ptr [ebx]; 
0x00173e2e: add byte ptr [eax], al; xor byte ptr [eax + eax], cl; or al, 0xab; in al, dx; call dword ptr [edi + 4]; 
0x00188a9a: add byte ptr [eax], al; xor byte ptr [eax], al; add byte ptr [eax], al; mov al, byte ptr [0x8c000198]; sbb dh, ah; call dword ptr [edi]; 
0x000e5e92: add byte ptr [eax], al; xor byte ptr [ecx], 0xc0; pop ebx; ret; 
0x0019912e: add byte ptr [eax], al; xor byte ptr [edi + 0x3ebc0002], bl; clc; jmp dword ptr [eax]; 
0x0016f92e: add byte ptr [eax], al; xor byte ptr [edi], al; add byte ptr [eax], al; pop esp; mov dh, 0xea; call dword ptr [edx]; 
0x0018442e: add byte ptr [eax], al; xor byte ptr [edx + 1], dl; add ah, bl; cmc; int1; call dword ptr [ebx]; 
0x0017511e: add byte ptr [eax], al; xor ch, bh; in eax, dx; jmp dword ptr [eax + 1]; 
0x0018b32e: add byte ptr [eax], al; xor cl, al; add dword ptr [eax], eax; fcom qword ptr [esi - 0xb]; call dword ptr [ebx]; 
0x0017db2e: add byte ptr [eax], al; xor cl, ch; add byte ptr [eax], al; pop esp; or al, 0xf0; jmp dword ptr [ebp]; 
0x0017d31e: add byte ptr [eax], al; xor dh, bh; out dx, eax; call dword ptr [edx]; 
0x0017b956: add byte ptr [eax], al; xor dl, 0xef; call dword ptr [eax]; 
0x00032bdd: add byte ptr [eax], al; xor eax, eax; add esp, 0x18; pop ebx; ret; 
0x0005566e: add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x000329a1: add byte ptr [eax], al; xor eax, eax; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000f723e: add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x000a7082: add byte ptr [eax], al; xor eax, eax; pop edi; pop esi; ret; 
0x0009551e: add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0007f357: add byte ptr [eax], al; xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x0006790e: add byte ptr [eax], al; xor eax, eax; ret; 
0x0003388c: add byte ptr [eax], al; xor eax, edx; mov dword ptr [ecx], esi; pop esi; ret; 
0x00126291: add byte ptr [eax], al; xor ebp, ebp; call dword ptr [eax + 0x14]; 
0x0002efeb: add byte ptr [eax], al; xor edx, edx; mov edi, eax; xchg edi, ebx; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x000fc56b: add byte ptr [eax], al; xor esi, esi; xchg ebx, edi; call dword ptr gs:[0x10]; 
0x000fc2bf: add byte ptr [eax], al; xor esi, esi; xchg ebx, edi; int 0x80; 
0x001726ab: add byte ptr [eax], bh; add byte ptr [eax], al; add byte ptr [eax + 0x1c000034], dh; out 0xeb, al; call ecx; 
0x001745b3: add byte ptr [eax], bh; add byte ptr [eax], al; add byte ptr [eax - 0x4bffffad], bh; xlatb; in al, dx; jmp dword ptr [edx]; 
0x00189f4f: add byte ptr [eax], bh; add byte ptr [eax], al; add byte ptr [ebp + ebp*4 + 1], dl; add byte ptr [eax - 0x1a], ch; hlt; jmp dword ptr [esi]; 
0x00167b7c: add byte ptr [eax], bh; add byte ptr [ebx + ebx - 0x15], ah; jmp dword ptr [eax]; 
0x001949a7: add byte ptr [eax], bh; and al, 0xf7; jmp dword ptr [ebx]; 
0x00194443: add byte ptr [eax], bh; and dh, bh; call dword ptr [eax]; 
0x001730e7: add byte ptr [eax], bh; cmp al, byte ptr [eax]; add ch, dl; add ch, ah; call dword ptr [eax]; 
0x00182d87: add byte ptr [eax], bh; das; int1; call dword ptr [esi]; 
0x0017d037: add byte ptr [eax], bh; fiadd word ptr [eax]; add byte ptr [eax + edi*8 - 0x11], dl; call dword ptr [edx]; 
0x0017cab7: add byte ptr [eax], bh; hlt; out dx, eax; call dword ptr [eax]; 
0x001991b7: add byte ptr [eax], bh; inc eax; clc; call dword ptr [ecx]; 
0x00183837: add byte ptr [eax], bh; inc esi; add dword ptr [eax], eax; add al, 0x49; int1; call dword ptr [edx]; 
0x0018b837: add byte ptr [eax], bh; mov byte ptr [ecx], 0; mov ah, 0x79; cmc; jmp dword ptr [esi]; 
0x00199337: add byte ptr [eax], bh; mov eax, dword ptr [0x44740002]; clc; jmp dword ptr [edi]; 
0x00194ce7: add byte ptr [eax], bh; push esi; add al, byte ptr [eax]; xchg eax, edi; sub esi, edi; call dword ptr [eax]; 
0x0013837f: add byte ptr [eax], bh; ret 0x840f; 
0x0017c337: add byte ptr [eax], bh; rol dword ptr [eax], 1; add byte ptr [eax + esi*4], dl; out dx, eax; jmp dword ptr [eax + 2]; 
0x00187907: add byte ptr [eax], bh; sbb esi, ebx; call dword ptr [ebx]; 
0x00198907: add byte ptr [eax], bh; sub al, bh; call dword ptr [ebx]; 
0x00194b57: add byte ptr [eax], bh; sub bh, dh; call esi; 
0x0017d21b: add byte ptr [eax], bl; add byte ptr [eax], al; adc dl, bh; out dx, eax; jmp dword ptr [edi]; 
0x0017d99b: add byte ptr [eax], bl; add byte ptr [eax], al; add byte ptr [eax - 0x43ffff19], ah; or eax, esi; call dword ptr [edx]; 
0x0016f313: add byte ptr [eax], bl; add byte ptr [eax], al; add byte ptr [eax], bl; add dword ptr [eax], eax; add byte ptr [ebx - 0x16], dl; jmp dword ptr [eax]; 
0x00199a13: add byte ptr [eax], bl; add byte ptr [eax], al; add byte ptr [eax], bl; test al, 2; add byte ptr [ecx + ebx*2 - 8], ah; jmp dword ptr [ecx]; 
0x0017bf2f: add byte ptr [eax], bl; add byte ptr [eax], al; add byte ptr [ecx*8 - 0xc880000], dh; cld; jmp dword ptr [ebx]; 
0x00173717: add byte ptr [eax], bl; add byte ptr [eax], al; sbb al, 0x45; add byte ptr [eax], al; adc byte ptr [esp + ebp*8], dl; call dword ptr [edi + 7]; 
0x00175ac7: add byte ptr [eax], bl; add byte ptr fs:[eax], al; or bl, ch; out dx, al; call dword ptr [eax]; 
0x0016f317: add byte ptr [eax], bl; add dword ptr [eax], eax; add byte ptr [ebx - 0x16], dl; jmp dword ptr [eax]; 
0x00197317: add byte ptr [eax], bl; add dword ptr [edx], 0xf7bd0400; jmp dword ptr [ebx]; 
0x001753b7: add byte ptr [eax], bl; add ebp, esi; call dword ptr [ecx]; 
0x00194473: add byte ptr [eax], bl; and dh, bh; call dword ptr [eax]; 
0x00172467: add byte ptr [eax], bl; fldpi; call dword ptr [edi]; 
0x0017cae7: add byte ptr [eax], bl; hlt; out dx, eax; call dword ptr [eax]; 
0x0019a417: add byte ptr [eax], bl; mov dl, 2; add ah, dl; mov edi, eax; jmp dword ptr [ebx]; 
0x001753b3: add byte ptr [eax], bl; or eax, dword ptr [eax]; add byte ptr [eax], bl; add ebp, esi; call dword ptr [ecx]; 
0x00196017: add byte ptr [eax], bl; outsb dx, byte ptr [esi]; add al, byte ptr [eax]; test byte ptr [ebx - 9], bl; jmp esp; 
0x0016f817: add byte ptr [eax], bl; push es; add byte ptr [eax], al; and al, 0xab; std; call dword ptr [edx]; 
0x0019b987: add byte ptr [eax], bl; sar eax, cl; jmp dword ptr [eax]; 
0x00199d17: add byte ptr [eax], bl; stosd dword ptr es:[edi], eax; add al, byte ptr [eax]; in al, 0x5d; clc; call dword ptr [ebp]; 
0x00199a17: add byte ptr [eax], bl; test al, 2; add byte ptr [ecx + ebx*2 - 8], ah; jmp dword ptr [ecx]; 
0x00198517: add byte ptr [eax], bl; xchg eax, ebx; add al, byte ptr [eax]; inc esp; sub bh, bl; jmp dword ptr [edi]; 
0x0018b4e3: add byte ptr [eax], ch; add byte ptr [eax], al; add al, ch; ret 1; 
0x0019054b: add byte ptr [eax], ch; add byte ptr [eax], al; add byte ptr [eax + 0x13], dl; add al, byte ptr [eax]; mov word ptr [eax - 0xa], ds; call ecx; 
0x001778a3: add byte ptr [eax], ch; add byte ptr [eax], al; add byte ptr [eax + 0x64000086], ch; sbb edi, ebp; call dword ptr [esi]; 
0x001893b3: add byte ptr [eax], ch; add byte ptr [eax], al; add byte ptr [eax + 0x640001a1], bh; push edi; hlt; jmp esi; 
0x0018ae9b: add byte ptr [eax], ch; add byte ptr [eax], al; add byte ptr [eax + 0xc0001bc], ah; inc eax; cmc; jmp ecx; 
0x0018b27f: add byte ptr [eax], ch; add byte ptr [eax], al; add byte ptr [eax + eax*8 + 0x52780001], al; cmc; jmp esp; 
0x00186a37: add byte ptr [eax], ch; add byte ptr [eax], al; add byte ptr [eax + edi*2], bh; add dword ptr [eax], eax; sal dl, 0xf2; call ecx; 
0x001722a3: add byte ptr [eax], ch; add byte ptr [eax], al; add byte ptr [eax - 0x2bffffd0], ch; shr bl, cl; call dword ptr [edx]; 
0x0018c47b: add byte ptr [eax], ch; add byte ptr [eax], al; add byte ptr [eax - 0x33fffe2e], al; mov bl, 0xf5; call dword ptr [ebx]; 
0x0018e27b: add byte ptr [eax], ch; add byte ptr [eax], al; add byte ptr [eax - 0x53fffe10], al; or al, 0xf6; jmp dword ptr [edx]; 
0x00177fb3: add byte ptr [eax], ch; add byte ptr [eax], al; add byte ptr [eax - 0x5bffff73], bh; pop ds; sti; jmp esi; 
0x0018c3a3: add byte ptr [eax], ch; add byte ptr [eax], al; add byte ptr [eax - 0x7bfffe2f], ch; scasd eax, dword ptr es:[edi]; cmc; call dword ptr [ebx]; 
0x0019743b: add byte ptr [eax], ch; add byte ptr [eax], al; add byte ptr [eax - 0x7e], al; add al, byte ptr [eax]; lodsb al, byte ptr [esi]; ret; 
0x0018b7af: add byte ptr [eax], ch; add byte ptr [eax], al; add byte ptr [ebp + eax*8 + 0x6fc80001], dh; cmc; jmp dword ptr [edi + 3]; 
0x00178d7f: add byte ptr [eax], ch; add byte ptr [eax], al; add byte ptr [ebx + ebx*4 + 0x37a80000], al; out dx, eax; call dword ptr [edx]; 
0x0019740f: add byte ptr [eax], ch; add byte ptr [eax], al; add byte ptr [edx + eax*4], dl; add al, byte ptr [eax]; dec eax; ret; 
0x0018dc4f: add byte ptr [eax], ch; add byte ptr [eax], al; add byte ptr [edx + ebp*8 + 1], dl; add byte ptr [eax - 5], bh; cmc; jmp dword ptr [edi]; 
0x0017e077: add byte ptr [eax], ch; add byte ptr [eax], al; add byte ptr [esi + ebp*8], bh; add byte ptr [eax], dl; and al, dh; call dword ptr [edx]; 
0x00170d27: add byte ptr [eax], ch; arpl bx, bp; call dword ptr [ebx]; 
0x00188b27: add byte ptr [eax], ch; cdq; add dword ptr [eax], eax; add al, 0x1b; hlt; jmp dword ptr [ebx]; 
0x0018b127: add byte ptr [eax], ch; dec edi; cmc; call dword ptr [ebx]; 
0x0018a487: add byte ptr [eax], ch; div esp; call dword ptr [esi]; 
0x001759e7: add byte ptr [eax], ch; fucompi st(6); jmp dword ptr [esi]; 
0x0017df27: add byte ptr [eax], ch; in eax, dx; add byte ptr [eax], al; hlt; sbb al, 0xf0; call esp; 
0x0018d4f7: add byte ptr [eax], ch; jecxz 0x18d4f0; jmp dword ptr [edx]; 
0x0017ab77: add byte ptr [eax], ch; mov gs, edi; call dword ptr [ebx]; 
0x0018e1d7: add byte ptr [eax], ch; or al, 0xf6; call dword ptr [edi]; 
0x001853d7: add byte ptr [eax], ch; pop ebp; add dword ptr [eax], eax; mov byte ptr [edx - 0xe], al; call dword ptr [eax]; 
0x0019a9e7: add byte ptr [eax], ch; sahf; clc; jmp dword ptr [edi]; 
0x00189d27: add byte ptr [eax], ch; stosd dword ptr es:[edi], eax; add dword ptr [eax], eax; movsb byte ptr es:[edi], byte ptr [esi]; fcompi st(4); call dword ptr [edx]; 
0x00178927: add byte ptr [eax], ch; xchg eax, edi; add byte ptr [eax], al; inc esp; sub ch, bh; jmp dword ptr [ebx]; 
0x00026dfd: add byte ptr [eax], cl; add byte ptr [eax], al; ret; 
0x001730b7: add byte ptr [eax], cl; cmp al, byte ptr [eax]; add ch, dh; add ch, ah; call dword ptr [eax]; 
0x0017c8b7: add byte ptr [eax], cl; fucompi st(7); jmp dword ptr [esi]; 
0x00183277: add byte ptr [eax], cl; hlt; cli; jmp dword ptr [ebx]; 
0x001890f7: add byte ptr [eax], cl; inc edx; hlt; call edi; 
0x001919d7: add byte ptr [eax], cl; mov dh, 0xf6; jmp dword ptr [edx]; 
0x00187b07: add byte ptr [eax], cl; mov dword ptr [ecx], eax; add byte ptr [esp + esi - 0xd], dh; jmp dword ptr [ecx]; 
0x0018b007: add byte ptr [eax], cl; mov esi, 0x46640001; cmc; jmp dword ptr [ebx]; 
0x0017adf7: add byte ptr [eax], cl; or al, 0xfb; jmp dword ptr [ebx]; 
0x00192aa7: add byte ptr [eax], cl; out dx, al; idiv bh; ret 0; 
0x0018b5f7: add byte ptr [eax], cl; pop edi; cmc; call dword ptr [edx]; 
0x00198817: add byte ptr [eax], cl; sbb al, 0xf8; jmp esp; 
0x0006a005: add byte ptr [eax], cl; sete al; movzx eax, al; ret; 
0x00188a9b: add byte ptr [eax], dh; add byte ptr [eax], al; add byte ptr [eax - 0x73fffe68], ah; sbb dh, ah; call dword ptr [edi]; 
0x00179bb3: add byte ptr [eax], dh; add byte ptr [eax], al; mov eax, 0x840000a9; pushal; out dx, eax; jmp dword ptr [edx + 5]; 
0x00173e2f: add byte ptr [eax], dh; dec esp; add byte ptr [eax], al; or al, 0xab; in al, dx; call dword ptr [edi + 4]; 
0x0017e22f: add byte ptr [eax], dh; lock add byte ptr [eax], al; lodsb al, byte ptr [esi]; cmp eax, esi; jmp edi; 
0x0016f92f: add byte ptr [eax], dh; pop es; add byte ptr [eax], al; pop esp; mov dh, 0xea; call dword ptr [edx]; 
0x0018442f: add byte ptr [eax], dh; push edx; add dword ptr [eax], eax; fdivr st(5), st(0); int1; call dword ptr [ebx]; 
0x0018b42f: add byte ptr [eax], dh; ret 1; 
0x00009df7: add byte ptr [eax], dh; ret; 
0x0018b32f: add byte ptr [eax], dh; rol dword ptr [ecx], 0; fcom qword ptr [esi - 0xb]; call dword ptr [ebx]; 
0x0017511f: add byte ptr [eax], dh; std; in eax, dx; jmp dword ptr [eax + 1]; 
0x00194d9f: add byte ptr [eax], dh; sub edi, esi; jmp dword ptr [ebx]; 
0x00179a2f: add byte ptr [eax], dh; test al, 0; add ah, cl; pop eax; out dx, eax; jmp dword ptr [ebx]; 
0x0017c92f: add byte ptr [eax], dh; xlatb; add byte ptr [eax], al; lodsb al, byte ptr [esi]; in al, 0xef; jmp ebx; 
0x0017371f: add byte ptr [eax], dl; adc al, 0xec; call dword ptr [edi + 7]; 
0x0017abdb: add byte ptr [eax], dl; add byte ptr [eax], al; add al, ah; mov ecx, 0x902c0000; out dx, eax; call dword ptr [edx]; 
0x0018b5db: add byte ptr [eax], dl; add byte ptr [eax], al; add al, ah; ret; 
0x001992f3: add byte ptr [eax], dl; add byte ptr [eax], al; add al, bh; mov al, byte ptr [0x44640002]; clc; call dword ptr [ecx]; 
0x00179297: add byte ptr [eax], dl; add byte ptr [eax], al; add byte ptr [eax + 0x51700000], bl; out dx, eax; jmp dword ptr [ebx]; 
0x00170d1f: add byte ptr [eax], dl; add byte ptr [eax], al; add byte ptr [ebx + ebx], ah; add byte ptr [eax], al; sub byte ptr [ebx - 0x15], ah; call dword ptr [ebx]; 
0x00179b7f: add byte ptr [eax], dl; add byte ptr [eax], al; add byte ptr [ecx + ebp*4 + 0x60480000], al; out dx, eax; call dword ptr [eax]; 
0x00176f17: add byte ptr [eax], dl; add byte ptr [eax], al; add byte ptr [edi*2 + 0x9c00000], bl; out dx, eax; jmp dword ptr [ebx]; 
0x00170c07: add byte ptr [eax], dl; add byte ptr [eax], al; add byte ptr [edx + ebx], cl; add byte ptr [eax], al; add byte ptr [edx - 0x15], ah; jmp dword ptr [edx]; 
0x00170c2f: add byte ptr [eax], dl; add byte ptr [eax], al; add byte ptr [edx + ebx], dh; add byte ptr [eax], al; cmp byte ptr [edx - 0x15], ah; jmp dword ptr [edx]; 
0x0017c487: add byte ptr [eax], dl; add byte ptr [eax], al; add byte ptr [edx + edx*8 - 0x42c00000], cl; out dx, eax; jmp dword ptr [ebx]; 
0x0018a097: add byte ptr [eax], dl; add byte ptr [eax], al; add byte ptr [esi + ebp*4 - 0x16afffff], bl; hlt; call dword ptr [ecx]; 
0x00026f3d: add byte ptr [eax], dl; add byte ptr [eax], al; ret; 
0x0007dcb9: add byte ptr [eax], dl; add byte ptr [esi + eax - 0x73], dh; cmp dword ptr [edi + edx*8 - 8], -1; pop ebx; ret; 
0x0017e07f: add byte ptr [eax], dl; and al, dh; call dword ptr [edx]; 
0x0017d21f: add byte ptr [eax], dl; cli; out dx, eax; jmp dword ptr [edi]; 
0x001720cf: add byte ptr [eax], dl; int 0xeb; call dword ptr [edx]; 
0x0019940f: add byte ptr [eax], dl; mov byte ptr [0x4abc0002], al; clc; call edx; 
0x00006ac7: add byte ptr [eax], dl; ret 0x12; 
0x000081a7: add byte ptr [eax], dl; ret; 
0x0006aa45: add byte ptr [eax], dl; setne al; movzx eax, al; ret; 
0x00179fbf: add byte ptr [eax], dl; test eax, 0x95a20000; out dx, eax; call dword ptr [eax]; 
0x0019830f: add byte ptr [eax], dl; xchg eax, ecx; add al, byte ptr [eax]; cmp al, 4; clc; jmp dword ptr [esi + 2]; 
0x00188f4f: add byte ptr [eax], dl; xor dh, ah; jmp dword ptr [esi]; 
0x0019230f: add byte ptr [eax], dl; xor dword ptr [edx], eax; add ah, bl; fdivr st(6), st(0); jmp dword ptr [ecx]; 
0x001312bc: add byte ptr [ebp + 0x11], dh; pop ebx; ret; 
0x000ed963: add byte ptr [ebp + 0x12], dh; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000b8187: add byte ptr [ebp + 0x14], dh; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000e8097: add byte ptr [ebp + 0x1c], dh; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x000e8147: add byte ptr [ebp + 0x1c], dh; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000deb77: add byte ptr [ebp + 0x1c], dh; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000b9b36: add byte ptr [ebp + 0x1e], dh; lea esi, dword ptr [esi]; xor eax, eax; ret; 
0x000f04c7: add byte ptr [ebp + 0x1f], dh; mov edx, ebx; mov eax, 0x66; mov ebx, 0x10; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f03c7: add byte ptr [ebp + 0x1f], dh; mov edx, ebx; mov eax, 0x66; mov ebx, 0x11; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0a67: add byte ptr [ebp + 0x1f], dh; mov edx, ebx; mov eax, 0x66; mov ebx, 0x12; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f02c7: add byte ptr [ebp + 0x1f], dh; mov edx, ebx; mov eax, 0x66; mov ebx, 0xa; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0547: add byte ptr [ebp + 0x1f], dh; mov edx, ebx; mov eax, 0x66; mov ebx, 0xb; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0347: add byte ptr [ebp + 0x1f], dh; mov edx, ebx; mov eax, 0x66; mov ebx, 0xc; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0147: add byte ptr [ebp + 0x1f], dh; mov edx, ebx; mov eax, 0x66; mov ebx, 3; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0087: add byte ptr [ebp + 0x1f], dh; mov edx, ebx; mov eax, 0x66; mov ebx, 5; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0447: add byte ptr [ebp + 0x1f], dh; mov edx, ebx; mov eax, 0x66; mov ebx, 9; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000b81e7: add byte ptr [ebp + 0x20], dh; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa2; call dword ptr gs:[0x10]; 
0x000df5f7: add byte ptr [ebp + 0x20], dh; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 8; call dword ptr gs:[0x10]; 
0x0016d1f7: add byte ptr [ebp + 0x20fff9ca], ah; mov edi, 0xcab10002; stc; call dword ptr [eax - 0x41]; 
0x00113c3b: add byte ptr [ebp + 0x226086], cl; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000243b4: add byte ptr [ebp + 0x244489c0], al; sub byte ptr [edi], cl; test byte ptr [ebp - 0x76000003], dl; ret 0x838d; 
0x0009e77b: add byte ptr [ebp + 0x248c8bc9], al; add byte ptr [eax], 0; add byte ptr [edi], cl; xchg eax, esp; ret 0xed31; 
0x00149261: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; lea edi, dword ptr [edi]; xor eax, eax; ret; 
0x001470c8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; add eax, 1; ret; 
0x00095c88: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; bsf eax, eax; lea eax, dword ptr [eax + edx + 0x10]; ret; 
0x00095828: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x10]; ret; 
0x001499b8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [ecx + 8]; ret; 
0x00147488: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xa]; pop edi; ret; 
0x00147498: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xb]; pop edi; ret; 
0x001474a8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xc]; pop edi; ret; 
0x001474b8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xd]; pop edi; ret; 
0x001474c8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xe]; pop edi; ret; 
0x00147418: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 2]; pop edi; ret; 
0x00147428: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 3]; pop edi; ret; 
0x00147438: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 4]; pop edi; ret; 
0x00147448: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 5]; pop edi; ret; 
0x00147458: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 6]; pop edi; ret; 
0x00147468: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 8]; pop edi; ret; 
0x00147478: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 9]; pop edi; ret; 
0x001478e8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 0xa]; pop edi; ret; 
0x001478d8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 0xb]; pop edi; ret; 
0x001478c8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 0xd]; pop edi; ret; 
0x001478b8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 0xe]; pop edi; ret; 
0x00147958: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 1]; pop edi; ret; 
0x00147948: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 2]; pop edi; ret; 
0x00147938: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 3]; pop edi; ret; 
0x00149c48: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 4]; pop edi; ret; 
0x00147928: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 5]; pop edi; ret; 
0x00147918: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 6]; pop edi; ret; 
0x00147908: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 7]; pop edi; ret; 
0x001478f8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 9]; pop edi; ret; 
0x00148a88: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edx + 1]; ret; 
0x00087608: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x000733e8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x000a73f8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 1; ret; 
0x000a7408: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 2; ret; 
0x000a7418: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 3; ret; 
0x000a7428: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 4; ret; 
0x000a7438: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 5; ret; 
0x000a7448: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 6; ret; 
0x000a7458: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 7; ret; 
0x00027028: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x00073458: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x001298f8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x00149988: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000875f8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; pop ebx; ret; 
0x001327e8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; pop ebx; xor eax, eax; ret; 
0x001474d8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x00067908: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; xor eax, eax; ret; 
0x00112a8b: add byte ptr [ebp + 0x28982494], cl; add byte ptr [eax], al; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x00146db2: add byte ptr [ebp + 0x2b], dh; pop ebx; ret; 
0x0012fa87: add byte ptr [ebp + 0x30850fff], al; add eax, dword ptr [eax]; add byte ptr [ebp - 0x48a4f45], cl; jmp dword ptr [esi + 0xf]; 
0x00113112: add byte ptr [ebp + 0x311174c0], al; ror byte ptr [ebx - 0x74ebdb8c], 0x7c; and al, 0x18; add esp, 0x1c; ret; 
0x001123ce: add byte ptr [ebp + 0x311575c0], al; ror byte ptr [ebx - 0x74ebdb8c], 0x7c; and al, 0x18; add esp, 0x1c; ret; 
0x00169e47: add byte ptr [ebp + 0x31], ch; int1; call esp; 
0x000fa48e: add byte ptr [ebp + 0x35], dh; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00080220: add byte ptr [ebp + 0x37840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx + 0x1242454], cl; ret 0x442b; 
0x00132af0: add byte ptr [ebp + 0x3d], dh; pop ebx; ret; 
0x00074c52: add byte ptr [ebp + 0x44c8b], cl; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x77]; 
0x00131288: add byte ptr [ebp + 0x45], dh; pop ebx; ret; 
0x0011cdff: add byte ptr [ebp + 0x5302494], cl; add byte ptr [eax], al; mov dword ptr [esp + 4], esi; mov dword ptr [esp], edx; call dword ptr [eax + 0xc]; 
0x00033a7b: add byte ptr [ebp + 0x5c8b0646], cl; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00033258: add byte ptr [ebp + 0x5c8bfc46], cl; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000c07e4: add byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret 0x10; 
0x0002457c: add byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret 4; 
0x000cfaf6: add byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret 8; 
0x0001c344: add byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x0001bd24: add byte ptr [ebp + 0x6b2674d2], al; ret 0x893c; 
0x00038a3f: add byte ptr [ebp + 0x75168bd2], al; sbb dh, dh; ret 0x7501; 
0x000b905d: add byte ptr [ebp + 0x75c189d2], al; fisub dword ptr [ebp - 0x77]; or eax, 0x68; nop; lea esi, dword ptr [esi]; ret; 
0x00116274: add byte ptr [ebp + 0x842494], cl; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 4]; 
0x0002dfc3: add byte ptr [ebp + 0x8beed], al; add byte ptr [eax], al; cmovne edx, eax; xchg edi, ebx; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x0011c2e7: add byte ptr [ebp + 0xa], dh; mov eax, dword ptr [esp + 0x2c]; mov dword ptr [eax], 0xf; mov eax, dword ptr [ebp + 4]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x000b9047: add byte ptr [ebp + 0xb68dc0], al; add byte ptr [eax], al; add byte ptr [ebp - 0x14], dh; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x0014ab69: add byte ptr [ebp + 0xb6], cl; add bl, dh; ret; 
0x000e77e1: add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x000a7139: add byte ptr [ebp + 0xbf], cl; add byte ptr [ebx + 0x4f391c4e], cl; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x00126f49: add byte ptr [ebp + 0xbf], cl; add byte ptr [ebx - 0x18], dl; sbb eax, 0x8100002e; ret; 
0x00087649: add byte ptr [ebp + 0xbf], cl; add byte ptr [ecx + 0x4518811], cl; pop ebx; ret; 
0x00130819: add byte ptr [ebp + 0xbf], cl; add byte ptr [edx + 0xe], dh; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x00147069: add byte ptr [ebp + 0xbf], cl; add dh, dh; ret 0x7510; 
0x0007993d: add byte ptr [ebp + 0xd850fc0], al; add al, byte ptr [eax]; add byte ptr [ebx - 0x1876d], cl; jmp dword ptr [ebp - 0x75]; 
0x00079bd4: add byte ptr [ebp + 0xe850fc0], al; add al, byte ptr [eax]; add byte ptr [ebx - 0x1876d], cl; jmp dword ptr [ebp - 0x75]; 
0x00055255: add byte ptr [ebp + 0xe890fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x7d]; 
0x0001933d: add byte ptr [ebp + 0xe], dh; rdtsc; mov dword ptr [ecx + 0x500], eax; mov dword ptr [ecx + 0x504], edx; pop ebx; ret; 
0x000fc2b4: add byte ptr [ebp + 0xf0], bh; mov eax, ebp; mov ecx, 0x80; xor esi, esi; xchg ebx, edi; int 0x80; 
0x0001b318: add byte ptr [ebp + 0xf1189d2], al; test byte ptr [ebx - 0x74fffffa], cl; dec ebp; aam 0x6b; ret 0x8d3c; 
0x00172ffb: add byte ptr [ebp + 3], dh; in al, dx; call dword ptr [eax]; 
0x0017302b: add byte ptr [ebp + 3], dl; in al, dx; call dword ptr [eax]; 
0x0012baf6: add byte ptr [ebp + 7], dh; add byte ptr [ebx + 0x468b1456], cl; adc byte ptr [ecx], bh; ret 0x2477; 
0x00132b24: add byte ptr [ebp + 9], dh; pop ebx; ret; 
0x001694c7: add byte ptr [ebp + eax*2 - 0x10], ah; jmp dword ptr [eax + 0x11]; 
0x0018fa4b: add byte ptr [ebp + eax*2 - 0xa], dh; call dword ptr [ebx + 1]; 
0x0018b7b3: add byte ptr [ebp + eax*8 + 0x6fc80001], dh; cmc; jmp dword ptr [edi + 3]; 
0x00169af7: add byte ptr [ebp + eax*8 - 0x10], dh; call dword ptr [eax + 0x44]; 
0x0016d18f: add byte ptr [ebp + eax*8 - 7], dl; push dword ptr [eax - 0x43]; add al, byte ptr [eax]; push -0x3a; stc; jmp eax; 
0x0016e177: add byte ptr [ebp + ebp*2 + 0x1bacfffb], dh; add eax, dword ptr [eax]; xor al, 0x6e; sti; jmp eax; 
0x0016edc7: add byte ptr [ebp + ebp*2 - 4], dl; jmp esp; 
0x00189f53: add byte ptr [ebp + ebp*4 + 1], dl; add byte ptr [eax - 0x1a], ch; hlt; jmp dword ptr [esi]; 
0x0016bee7: add byte ptr [ebp + ebx + 0x51bcfff8], dh; add al, byte ptr [eax]; adc al, 0x1e; clc; jmp eax; 
0x00167baf: add byte ptr [ebp + ebx - 0x15], al; call dword ptr [eax]; 
0x0016d69f: add byte ptr [ebp + ebx - 0x1fc30006], al; add al, byte ptr [eax]; add al, 0x1e; cli; jmp dword ptr [eax - 0x20]; 
0x0016f00f: add byte ptr [ebp + ebx*2 - 0x7c6f0003], dl; add dword ptr [eax], eax; add al, 0x72; std; jmp dword ptr [eax]; 
0x00199ccb: add byte ptr [ebp + ebx*2 - 8], dh; call dword ptr [ebp]; 
0x0016c1ef: add byte ptr [ebp + ebx*2 - 8], dh; call eax; 
0x00188f4b: add byte ptr [ebp + ebx*4 + 1], cl; add byte ptr [eax], dl; xor dh, ah; jmp dword ptr [esi]; 
0x00168977: add byte ptr [ebp + ebx*4 - 0x13], ah; jmp dword ptr [eax]; 
0x000da96f: add byte ptr [ebp + ecx - 0x7d], dh; ret 0x8901; 
0x0016ca8f: add byte ptr [ebp + ecx - 7], dh; call dword ptr [eax - 0x6f]; 
0x00169527: add byte ptr [ebp + ecx*2 - 0x10], ah; jmp dword ptr [eax]; 
0x0016b45f: add byte ptr [ebp + ecx*2 - 0xa], dl; call dword ptr [eax]; 
0x0019946b: add byte ptr [ebp + ecx*2 - 8], al; jmp dword ptr [ebx]; 
0x001966a3: add byte ptr [ebp + ecx*4 - 9], cl; call ecx; 
0x00168d1f: add byte ptr [ebp + ecx*8 - 0x1e5f0011], dh; add byte ptr [eax], al; mov ch, 0xce; out dx, eax; call dword ptr [eax]; 
0x0016ec87: add byte ptr [ebp + edi - 4], dl; call esp; 
0x00168ccf: add byte ptr [ebp + edi*4 - 0x11], al; call esp; 
0x0019afab: add byte ptr [ebp + edi*4 - 0x4a7ffffe], ch; clc; jmp dword ptr [eax]; 
0x00172cf3: add byte ptr [ebp + edi*8 - 0x15], bl; jmp dword ptr [ebx]; 
0x001675a4: add byte ptr [ebp + edi*8 - 1], cl; mov al, 0x4c; std; push dword ptr [eax + 0x4d]; std; call eax; 
0x0016b047: add byte ptr [ebp + edx - 0xb], ah; jmp dword ptr [eax - 4]; 
0x00174a7b: add byte ptr [ebp + edx*2 - 0x13], dh; call dword ptr [eax]; 
0x00174aab: add byte ptr [ebp + edx*2 - 0x13], dl; call dword ptr [eax]; 
0x0019877b: add byte ptr [ebp + edx*4 + 2], bh; add byte ptr [eax + 0x19], ah; clc; call edx; 
0x0016dc57: add byte ptr [ebp + edx*8 - 6], al; jmp dword ptr [eax]; 
0x0016d2df: add byte ptr [ebp + edx*8 - 7], ah; dec dword ptr [esp + eax*8 + 2]; add byte ptr [ebp + edx*8 - 7], dh; jmp dword ptr [eax - 0x3c]; 
0x0016d2cf: add byte ptr [ebp + edx*8 - 7], al; dec dword ptr [eax]; ret; 
0x0016d2e7: add byte ptr [ebp + edx*8 - 7], dh; jmp dword ptr [eax - 0x3c]; 
0x0016bfe7: add byte ptr [ebp + esi + 0x5724fff8], ah; add al, byte ptr [eax]; adc al, 0x36; clc; jmp dword ptr [eax + 0x57]; 
0x001954cb: add byte ptr [ebp + esi - 9], cl; call dword ptr [eax]; 
0x001696df: add byte ptr [ebp + esi*2 - 0x10], dl; jmp dword ptr [eax + 0x1d]; 
0x001685d7: add byte ptr [ebp + esi*4 - 0x4b4f0014], ah; add byte ptr [eax], al; in al, 0xb5; in al, dx; call eax; 
0x00169887: add byte ptr [ebp - 0x10], ah; call dword ptr [eax]; 
0x0016930f: add byte ptr [ebp - 0x10], al; call dword ptr [eax]; 
0x00082fa2: add byte ptr [ebp - 0x148afe90], cl; xor eax, eax; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000b904f: add byte ptr [ebp - 0x14], dh; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x0014ab60: add byte ptr [ebp - 0x16f48b40], al; push ss; add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add bl, dh; ret; 
0x000d2483: add byte ptr [ebp - 0x1f7bf037], al; add eax, dword ptr [eax]; add dh, dh; ret 0xf08; 
0x000b9d04: add byte ptr [ebp - 0x2776ff8a], cl; sub eax, dword ptr [ebx + esi*4 - 0xe92e0]; jmp eax; 
0x0014ab3e: add byte ptr [ebp - 0x31], dh; add esp, 0x18; pop ebx; ret; 
0x00149a6f: add byte ptr [ebp - 0x37af037], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x000f7a45: add byte ptr [ebp - 0x3b7bf037], al; add byte ptr [eax], al; add byte ptr [ebx + 0x518b1445], cl; adc al, 0x39; ret 0xa7d; 
0x0007fd4f: add byte ptr [ebp - 0x3dbaf00a], al; add esp, 0x18; pop esi; ret; 
0x000fb846: add byte ptr [ebp - 0x3dbbf040], al; cmp eax, dword ptr [esp + 4]; setae al; movzx eax, al; ret; 
0x00114e76: add byte ptr [ebp - 0x3f6af040], al; add esp, 0x1c; movzx eax, al; ret; 
0x000e0912: add byte ptr [ebp - 0x3f6bf040], al; add esp, 0x58; movzx eax, al; pop ebx; ret; 
0x0015286b: add byte ptr [ebp - 0x3ffffff2], bh; push cs; add byte ptr [eax], al; ret; 
0x00001583: add byte ptr [ebp - 0x40fffffa], bh; push es; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret 6; 
0x0000172b: add byte ptr [ebp - 0x41fffff9], bh; pop es; add byte ptr [eax], al; ret 7; 
0x0010996f: add byte ptr [ebp - 0x42f0c6d], cl; dec dword ptr [ecx - 0x72cbdbac]; xchg eax, ebx; call eax; 
0x000fdbb0: add byte ptr [ebp - 0x433c87d], cl; dec dword ptr [ecx - 0x5e17dbfc]; inc ebp; inc dword ptr [ebp - 0x76eb8b40]; ret 0x848b; 
0x0010d723: add byte ptr [ebp - 0x444216d], cl; jmp dword ptr [esi - 0x3f]; 
0x000ba6af: add byte ptr [ebp - 0x45cbdbb4], cl; add dword ptr [eax], eax; add byte ptr [eax], al; xchg ebx, edx; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000b9965: add byte ptr [ebp - 0x46], dh; mov eax, 0xfffa; pop ebx; ret; 
0x0002e23f: add byte ptr [ebp - 0x46d38a40], al; or byte ptr [eax], al; add byte ptr [eax], al; xchg ebx, edx; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x001118b7: add byte ptr [ebp - 0x477bf040], al; add byte ptr [eax], al; add byte ptr [ebx + 0x6c8d1046], cl; and al, 0x24; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x0012fa8f: add byte ptr [ebp - 0x48a4f45], cl; jmp dword ptr [esi + 0xf]; 
0x000f0de3: add byte ptr [ebp - 0x4fb88a40], al; or ecx, dword ptr [ecx - 0x76e3dba4]; ret; 
0x0004b4a5: add byte ptr [ebp - 0x57c2fb0], cl; or dword ptr [edi], ecx; xchg eax, edi; ret 0xe083; 
0x00079e55: add byte ptr [ebp - 0x5f7af040], al; add al, byte ptr [eax]; add byte ptr [ebx - 0x1876d], cl; jmp dword ptr [ebp - 0x75]; 
0x00149acf: add byte ptr [ebp - 0x677af02e], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x00078d69: add byte ptr [ebp - 0x6f7af040], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x1876d], cl; jmp dword ptr [ebp - 0x75]; 
0x00093494: add byte ptr [ebp - 0x72ffd98c], cl; mov esp, 0x27; add byte ptr [ebp - 0x7cc78a40], al; ret; 
0x00098959: add byte ptr [ebp - 0x736c7240], al; sbb al, byte ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x00023927: add byte ptr [ebp - 0x74468b40], al; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0011262a: add byte ptr [ebp - 0x74658b40], al; inc esi; add al, 0x89; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x00098daf: add byte ptr [ebp - 0x74788a40], al; push ebp; mov esp, 0x830002c6; ret 0x8901; 
0x0011b1e1: add byte ptr [ebp - 0x74a58b40], al; push eax; or dh, dh; ret 0x7401; 
0x00111f89: add byte ptr [ebp - 0x74ad8b40], al; push eax; or dh, dh; ret 0x7401; 
0x00074d58: add byte ptr [ebp - 0x74c88a40], al; mov esp, dword ptr [esi + edi*8 - 0x12ce0001]; mov dword ptr [esp + 0x18], edx; mov dword ptr [esp], 0; call dword ptr [ecx]; 
0x000f1777: add byte ptr [ebp - 0x74e38b2e], al; mov ebp, 0xfffffbf4; mov ecx, dword ptr [ebp - 0x3fc]; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000ea064: add byte ptr [ebp - 0x74e88b2e], al; add al, byte ptr [ebp - 0x7cf68b40]; ret 0x8904; 
0x0005563e: add byte ptr [ebp - 0x74ea8b13], al; xor al, 0x24; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000fc0d6: add byte ptr [ebp - 0x74ed8b2e], al; cmp eax, 0x38; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000197e4: add byte ptr [ebp - 0x74f18b40], al; push esp; and al, 0x20; mov dword ptr [esp], edx; call eax; 
0x00064fae: add byte ptr [ebp - 0x74f48b2e], al; sbb dword ptr [eax - 0x77000000], 0xd2ff2404; add esp, 0x1c; ret; 
0x000e62aa: add byte ptr [ebp - 0x74f68740], al; inc esp; and al, 0x1c; add esp, 0x28; pop ebx; ret; 
0x0004a1fa: add byte ptr [ebp - 0x75], ah; add byte ptr [edi], cl; cwde; ret 0x4489; 
0x0004a5f1: add byte ptr [ebp - 0x75], ah; add byte ptr [edi], cl; cwde; ret 0x44f6; 
0x000e6065: add byte ptr [ebp - 0x75], ah; inc ebp; add byte ptr [ecx - 0x2078dbfc], cl; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000b7e24: add byte ptr [ebp - 0x76b88a01], al; call 0x1c2fdab8; mov ebx, eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000def04: add byte ptr [ebp - 0x76b88a13], al; xchg edi, ebx; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x000c5997: add byte ptr [ebp - 0x76b88a40], al; call 0x1c30b62b; mov ebx, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000c5a77: add byte ptr [ebp - 0x76b88a40], al; call 0x1c30b70b; mov ebx, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000f0b77: add byte ptr [ebp - 0x76b88a40], al; call 0x1c33680b; mov ebx, eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x000ce9df: add byte ptr [ebp - 0x76d38740], al; ret 0x4e8b; 
0x00126094: add byte ptr [ebp - 0x76de872e], al; rol dword ptr [edi + 0x6b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b9128: add byte ptr [ebp - 0x76e18a40], al; rol dword ptr [edi + 0xd5b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b91a8: add byte ptr [ebp - 0x76e18a40], al; rol dword ptr [edi + 0xd6b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00076e41: add byte ptr [ebp - 0x76ed8b40], al; push esp; and al, 0x28; mov dword ptr [esp + 0x2c], ecx; call eax; 
0x00076cff: add byte ptr [ebp - 0x76f58b40], al; push esp; and al, 0x28; call eax; 
0x00023874: add byte ptr [ebp - 0x76f78b2e], al; add al, 0x24; call 0x16f50; add esp, 0x18; pop ebx; ret; 
0x000ea112: add byte ptr [ebp - 0x76f78b40], al; add al, 0x24; call 0x643c0; add esp, 0x18; pop ebx; ret; 
0x0001a2e3: add byte ptr [ebp - 0x76ffd98c], cl; fisubr dword ptr [ebx]; xchg eax, esp; add dword ptr [eax], 0x73; out 0xff, eax; jmp edx; 
0x000baca3: add byte ptr [ebp - 0x76ffd98c], cl; fsubr dword ptr [ebx]; test byte ptr [ebx - 0xe8340], dh; jmp eax; 
0x000cf71b: add byte ptr [ebp - 0x76ffd98c], cl; ret 0x448d; 
0x00025089: add byte ptr [ebp - 0x77], ah; add ecx, ebp; mov ebx, 0x89fffffe; rol dword ptr [edi + 0x6b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ff0df: add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x001242f5: add byte ptr [ebp - 0x77c1bb3], cl; dec dword ptr [edi]; inc esp; ret 0x508d; 
0x000de919: add byte ptr [ebp - 0x78d08a40], al; fistp qword ptr [eax + 0x127]; call dword ptr gs:[0x10]; 
0x000f0c53: add byte ptr [ebp - 0x78d08a40], al; fistp qword ptr [eax + 0x159]; call dword ptr gs:[0x10]; 
0x000e6d6b: add byte ptr [ebp - 0x78d48a40], al; fistp qword ptr [eax + 0x91]; call dword ptr gs:[0x10]; 
0x000e6e2b: add byte ptr [ebp - 0x78d48a40], al; fistp qword ptr [eax + 0x92]; call dword ptr gs:[0x10]; 
0x000e0c1b: add byte ptr [ebp - 0x78d48a40], al; fistp qword ptr [eax + 0xa8]; call dword ptr gs:[0x10]; 
0x000df12b: add byte ptr [ebp - 0x78d48a40], al; fistp qword ptr [eax + 0xdd]; call dword ptr gs:[0x10]; 
0x000b94c7: add byte ptr [ebp - 0x78dc8a40], al; fistp qword ptr [eax + 0xd0]; call dword ptr gs:[0x10]; 
0x000b9557: add byte ptr [ebp - 0x78dc8a40], al; fistp qword ptr [eax + 0xd2]; call dword ptr gs:[0x10]; 
0x000e798c: add byte ptr [ebp - 0x78e38a40], al; sar dword ptr [eax + 0xcb], cl; call dword ptr gs:[0x10]; 
0x000e7a0c: add byte ptr [ebp - 0x78e38a40], al; sar dword ptr [eax + 0xcc], cl; call dword ptr gs:[0x10]; 
0x000b55ac: add byte ptr [ebp - 0x78e38a40], al; sar dword ptr [eax + 0xce], cl; call dword ptr gs:[0x10]; 
0x0006a64a: add byte ptr [ebp - 0x7ae38a37], al; jmp dword ptr [esi - 0x43]; 
0x000f1d7e: add byte ptr [ebp - 0x7c99afec], cl; add al, byte ptr [ecx]; add esp, 8; pop ebx; ret; 
0x00087a4f: add byte ptr [ebp - 0x7cc78a40], al; ret; 
0x000d0b67: add byte ptr [ebp - 0x7ceb8b2e], al; ret 0x8d04; 
0x000b9a7a: add byte ptr [ebp - 0x7d], ah; cmp ah, byte ptr [esi]; mov edx, 0xffffffff; cmovne eax, edx; ret; 
0x0016d207: add byte ptr [ebp - 0x7f000636], bh; mov edi, 0xcad40002; stc; jmp eax; 
0x000de7f1: add byte ptr [ebp - 0x7fd18a40], al; int 0x80; 
0x000de7f1: add byte ptr [ebp - 0x7fd18a40], al; int 0x80; xchg edi, ebx; mov eax, 5; call dword ptr gs:[0x10]; 
0x0012309d: add byte ptr [ebp - 0x9d7b], cl; dec dword ptr [ecx - 0xbb6b]; jmp dword ptr [esi - 0x39]; 
0x00035cd6: add byte ptr [ebp - 0x9ea8a40], al; ret 0x7501; 
0x0017b3b7: add byte ptr [ebp - 0xa], ch; out dx, eax; call dword ptr [eax]; 
0x0017b3e7: add byte ptr [ebp - 0xa], cl; out dx, eax; call dword ptr [eax]; 
0x00101940: add byte ptr [ebp - 0xb], dh; mov eax, dword ptr [esp + 0x10]; pop esi; pop edi; pop ebp; ret; 
0x00084058: add byte ptr [ebp - 0xb], dh; mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x0007313f: add byte ptr [ebp - 0xc0b8a40], al; ret; 
0x0017b687: add byte ptr [ebp - 0xc], dh; out dx, eax; call dword ptr [eax]; 
0x0017b6b7: add byte ptr [ebp - 0xc], dl; out dx, eax; call dword ptr [eax]; 
0x00023344: add byte ptr [ebp - 0xe76ff8a], cl; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x00185043: add byte ptr [ebp - 0xe], bh; jmp dword ptr [esi]; 
0x00098073: add byte ptr [ebp - 0xe], dh; pop esi; pop edi; pop ebp; ret; 
0x000b85cc: add byte ptr [ebp - 1], ah; adc eax, 0x10; mov eax, 1; int 0x80; 
0x000de56a: add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; ret; 
0x000fc1e9: add byte ptr [ebp - 1], ah; adc eax, 0x10; pop edx; pop ecx; pop ebx; ret; 
0x000b9084: add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x000eedec: add byte ptr [ebp - 1], ah; adc eax, 0x10; xchg ebx, ecx; ret; 
0x000c5b3a: add byte ptr [ebp - 1], ah; adc eax, 0x10; xchg ebx, edi; neg eax; pop edi; ret; 
0x00167798: add byte ptr [ebp - 3], bl; call dword ptr [eax + 0x5d]; 
0x00167798: add byte ptr [ebp - 3], bl; call dword ptr [eax + 0x5d]; std; jmp dword ptr [eax + 0x50]; 
0x0016ed5f: add byte ptr [ebp - 4], ah; lcall ptr [esi + 0x65b40002]; cld; jmp dword ptr [eax]; 
0x0016da7f: add byte ptr [ebp - 6], al; call dword ptr [eax]; 
0x0017b237: add byte ptr [ebp - 9], ch; out dx, eax; call dword ptr [eax]; 
0x0017b267: add byte ptr [ebp - 9], cl; out dx, eax; call dword ptr [eax]; 
0x0016edbf: add byte ptr [ebp*2 - 0x7d730004], dl; add al, byte ptr [eax]; push esp; insd dword ptr es:[edi], dx; cld; jmp esp; 
0x000dfecb: add byte ptr [ebx + 0x101424b4], cl; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x1018]; add esp, 0x101c; ret; 
0x000dfed2: add byte ptr [ebx + 0x101824bc], cl; add byte ptr [eax], al; add esp, 0x101c; ret; 
0x00054df4: add byte ptr [ebx + 0x102424b4], cl; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x1028]; add esp, 0x102c; ret; 
0x00054dfb: add byte ptr [ebx + 0x102824bc], cl; add byte ptr [eax], al; add esp, 0x102c; ret; 
0x00054af6: add byte ptr [ebx + 0x103424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x1038]; add esp, 0x103c; ret; 
0x00054afd: add byte ptr [ebx + 0x103824ac], cl; add byte ptr [eax], al; add esp, 0x103c; ret; 
0x000aae41: add byte ptr [ebx + 0x10424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x108]; add esp, 0x10c; ret; 
0x000aae48: add byte ptr [ebx + 0x10824ac], cl; add byte ptr [eax], al; add esp, 0x10c; ret; 
0x000f04d0: add byte ptr [ebx + 0x10], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f04f7: add byte ptr [ebx + 0x10], bh; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000e112e: add byte ptr [ebx + 0x11424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x118]; add esp, 0x11c; ret; 
0x000e1135: add byte ptr [ebx + 0x11824ac], cl; add byte ptr [eax], al; add esp, 0x11c; ret; 
0x000f03d0: add byte ptr [ebx + 0x11], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f03f7: add byte ptr [ebx + 0x11], bh; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00080228: add byte ptr [ebx + 0x1242454], cl; ret 0x442b; 
0x0011bcc1: add byte ptr [ebx + 0x12424b4], cl; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x128]; add esp, 0x12c; ret; 
0x000692f5: add byte ptr [ebx + 0x12424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x128]; add esp, 0x12c; ret; 
0x00122dec: add byte ptr [ebx + 0x1274fff8], al; mov ecx, eax; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x001219d8: add byte ptr [ebx + 0x1274fffa], al; mov ecx, edx; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000692fc: add byte ptr [ebx + 0x12824ac], cl; add byte ptr [eax], al; add esp, 0x12c; ret; 
0x0011bcc8: add byte ptr [ebx + 0x12824bc], cl; add byte ptr [eax], al; add esp, 0x12c; ret; 
0x0002e033: add byte ptr [ebx + 0x12824bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x12c]; add esp, 0x130; ret; 
0x000f0a70: add byte ptr [ebx + 0x12], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0a97: add byte ptr [ebx + 0x12], bh; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000ad416: add byte ptr [ebx + 0x12c246c], cl; ret 0x48d; 
0x0002e03a: add byte ptr [ebx + 0x12c24ac], cl; add byte ptr [eax], al; add esp, 0x130; ret; 
0x0002ddca: add byte ptr [ebx + 0x13424b4], cl; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x138]; add esp, 0x13c; ret; 
0x001187e5: add byte ptr [ebx + 0x13424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x138]; add esp, 0x13c; ret; 
0x001141c7: add byte ptr [ebx + 0x137401f8], al; xor eax, eax; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x001187ec: add byte ptr [ebx + 0x13824ac], cl; add byte ptr [eax], al; add esp, 0x13c; ret; 
0x0002ddd1: add byte ptr [ebx + 0x13824bc], cl; add byte ptr [eax], al; add esp, 0x13c; ret; 
0x0002ec58: add byte ptr [ebx + 0x14424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x148]; add esp, 0x14c; ret; 
0x0002ec5f: add byte ptr [ebx + 0x14824ac], cl; add byte ptr [eax], al; add esp, 0x14c; ret; 
0x000b9e07: add byte ptr [ebx + 0x16424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x168]; add esp, 0x16c; ret; 
0x0004b2c4: add byte ptr [ebx + 0x1682454], cl; ret 0x5489; 
0x000b9e0e: add byte ptr [ebx + 0x16824ac], cl; add byte ptr [eax], al; add esp, 0x16c; ret; 
0x00133e25: add byte ptr [ebx + 0x18], dh; call 0x129d73; add ebx, 0x32773; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001338d5: add byte ptr [ebx + 0x18], dh; call 0x129d73; add ebx, 0x32a43; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x000734bf: add byte ptr [ebx + 0x18a083], al; add byte ptr [ecx], al; pop ebx; ret; 
0x000e7e01: add byte ptr [ebx + 0x1a824bc], cl; add byte ptr [eax], al; add esp, 0x1ac; ret; 
0x000e9a7b: add byte ptr [ebx + 0x1b018c4], al; pop ebx; ret; 
0x000e7d0b: add byte ptr [ebx + 0x1b424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x1b8]; add esp, 0x1bc; ret; 
0x0014805f: add byte ptr [ebx + 0x1b720eea], al; lea eax, dword ptr [edi + 0xd]; pop edi; ret; 
0x0014907f: add byte ptr [ebx + 0x1b720eef], al; lea eax, dword ptr [eax + 0xd]; pop edi; ret; 
0x0014871f: add byte ptr [ebx + 0x1b7c0ec2], al; lea eax, dword ptr [ecx + 0xe]; ret; 
0x001149bf: add byte ptr [ebx + 0x1b810c4], al; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x0011e507: add byte ptr [ebx + 0x1b820c4], al; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x000e7d12: add byte ptr [ebx + 0x1b824ac], cl; add byte ptr [eax], al; add esp, 0x1bc; ret; 
0x00118f34: add byte ptr [ebx + 0x1c42484], cl; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x0013c7de: add byte ptr [ebx + 0x1c740fe7], al; call 0x129d73; add ebx, 0x2afb7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0013b2ae: add byte ptr [ebx + 0x1c740fe7], al; call 0x129d73; add ebx, 0x2c327; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0013a18e: add byte ptr [ebx + 0x1c740fe7], al; call 0x129d73; add ebx, 0x2d1c7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0013918e: add byte ptr [ebx + 0x1c740fe7], al; call 0x129d73; add ebx, 0x2e007; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x001381ae: add byte ptr [ebx + 0x1c740fe7], al; call 0x129d73; add ebx, 0x2ee27; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00136bde: add byte ptr [ebx + 0x1c740fe7], al; call 0x129d73; add ebx, 0x30237; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0013575e: add byte ptr [ebx + 0x1c740fe7], al; call 0x129d73; add ebx, 0x31437; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x001342ce: add byte ptr [ebx + 0x1c740fe7], al; call 0x129d73; add ebx, 0x32647; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000fe017: add byte ptr [ebx + 0x1c74fff8], al; mov ecx, eax; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0011b2c0: add byte ptr [ebx + 0x20508b00], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x001119b0: add byte ptr [ebx + 0x20508b02], cl; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x18], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x0011188b: add byte ptr [ebx + 0x20508b02], cl; mov dword ptr [esp + 4], edi; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x001163c7: add byte ptr [ebx + 0x20508b02], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x000060fb: add byte ptr [ebx + 0x22000000], dl; add byte ptr [eax + eax], cl; ret 3; 
0x00113b3f: add byte ptr [ebx + 0x239886], cl; add byte ptr [esi - 0x43], ah; add dword ptr [eax], eax; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x000c348a: add byte ptr [ebx + 0x244c890a], cl; cmp byte ptr [edi], cl; mov dh, 0x4a; add al, 0x83; ret 0x8305; 
0x0002f3b3: add byte ptr [ebx + 0x25424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x258]; add esp, 0x25c; ret; 
0x0002f3ba: add byte ptr [ebx + 0x25824ac], cl; add byte ptr [eax], al; add esp, 0x25c; ret; 
0x00027017: add byte ptr [ebx + 0x28408b00], cl; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00112a84: add byte ptr [ebx + 0x289c2484], cl; add byte ptr [eax], al; lea edx, dword ptr [esp + 0x2898]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x00096b34: add byte ptr [ebx + 0x29202454], cl; ret 0xc083; 
0x0003058d: add byte ptr [ebx + 0x293c2454], cl; ret 0x5489; 
0x0006b292: add byte ptr [ebx + 0x29424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x298]; add esp, 0x29c; ret; 
0x0006b299: add byte ptr [ebx + 0x29824ac], cl; add byte ptr [eax], al; add esp, 0x29c; ret; 
0x0014804f: add byte ptr [ebx + 0x2b720dea], al; lea eax, dword ptr [edi + 0xc]; pop edi; ret; 
0x0014906f: add byte ptr [ebx + 0x2b720def], al; lea eax, dword ptr [eax + 0xc]; pop edi; ret; 
0x0014870f: add byte ptr [ebx + 0x2b7c0dc2], al; lea eax, dword ptr [ecx + 0xd]; ret; 
0x00026fe7: add byte ptr [ebx + 0x30408b00], cl; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0011123a: add byte ptr [ebx + 0x32ac8b], al; add byte ptr [edx], al; add esp, 0x18; pop ebx; ret; 
0x000ddc0e: add byte ptr [ebx + 0x347401fe], al; lea ecx, dword ptr [esp + 0x10]; xchg ebx, edx; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ddd8e: add byte ptr [ebx + 0x347401fe], al; lea ecx, dword ptr [esp + 0x10]; xchg ebx, edx; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000ddcce: add byte ptr [ebx + 0x347401fe], al; lea ecx, dword ptr [esp + 0x10]; xchg ebx, edx; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x0006d4a2: add byte ptr [ebx + 0x34890c40], cl; and al, 0x29; ret 0xfac1; 
0x00028a9b: add byte ptr [ebx + 0x390c83], cl; add byte ptr [ecx - 0x373edbec], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x00024025: add byte ptr [ebx + 0x391083], cl; add byte ptr [ecx - 0x373edbec], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x00023ed5: add byte ptr [ebx + 0x391483], cl; add byte ptr [ecx - 0x373edbec], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x000a5650: add byte ptr [ebx + 0x391c2454], cl; ret 0xcf74; 
0x0014803f: add byte ptr [ebx + 0x3b720bea], al; lea eax, dword ptr [edi + 0xa]; pop edi; ret; 
0x0014905f: add byte ptr [ebx + 0x3b720bef], al; lea eax, dword ptr [eax + 0xa]; pop edi; ret; 
0x001486ff: add byte ptr [ebx + 0x3b7c0bc2], al; lea eax, dword ptr [ecx + 0xb]; ret; 
0x0011328d: add byte ptr [ebx + 0x42891040], cl; add al, 0x8b; sbb al, 0x24; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x001195af: add byte ptr [ebx + 0x4302484], cl; add byte ptr [eax], al; mov edx, ebx; sub edx, dword ptr [ebx + eax*4 - 0x89a30]; jmp edx; 
0x001198f6: add byte ptr [ebx + 0x43424b4], cl; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x438]; add esp, 0x43c; ret; 
0x000547da: add byte ptr [ebx + 0x43424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x438]; add esp, 0x43c; ret; 
0x000547e1: add byte ptr [ebx + 0x43824ac], cl; add byte ptr [eax], al; add esp, 0x43c; ret; 
0x001198fd: add byte ptr [ebx + 0x43824bc], cl; add byte ptr [eax], al; add esp, 0x43c; ret; 
0x000bcb36: add byte ptr [ebx + 0x440f01c0], al; ret 0xe289; 
0x0007ad83: add byte ptr [ebx + 0x440ffff8], al; ret 0xc483; 
0x000711d7: add byte ptr [ebx + 0x44892056], cl; and al, 4; mov dword ptr [esp], esi; sub edx, eax; mov dword ptr [esp + 8], edx; call dword ptr [ecx + 0x38]; 
0x0012243f: add byte ptr [ebx + 0x45031445], cl; sbb byte ptr [ecx], bh; ret 0x870f; 
0x000704cf: add byte ptr [ebx + 0x452b0445], cl; or al, 0x89; ret 0xfac1; 
0x0012b327: add byte ptr [ebx + 0x452b0845], cl; add al, 0x89; ret 0xfac1; 
0x000674bf: add byte ptr [ebx + 0x452b2c45], cl; and al, 0x89; ret 0xfac1; 
0x00119594: add byte ptr [ebx + 0x45424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x458]; add esp, 0x45c; ret; 
0x0011959b: add byte ptr [ebx + 0x45824ac], cl; add byte ptr [eax], al; add esp, 0x45c; ret; 
0x00031ebe: add byte ptr [ebx + 0x4589ac45], cl; in al, 0x8b; dec ebp; adc al, 0x83; jmp dword ptr [eax]; 
0x000b4f12: add byte ptr [ebx + 0x458bd04d], cl; mov esp, 0x8b900c89; dec ebp; or al, 0x83; ret 0x8901; 
0x00073d7f: add byte ptr [ebx + 0x462b0446], cl; or al, 0x89; ret 0xfac1; 
0x00066a7f: add byte ptr [ebx + 0x462b0846], cl; add al, 0x89; ret 0xfac1; 
0x00069527: add byte ptr [ebx + 0x468b0c4e], cl; or byte ptr [ecx + 0x29cd29d5], cl; ret 0xe75; 
0x0012baf9: add byte ptr [ebx + 0x468b1456], cl; adc byte ptr [ecx], bh; ret 0x2477; 
0x00070203: add byte ptr [ebx + 0x468b1456], cl; adc byte ptr [ecx], bh; ret 0x3776; 
0x000c44cf: add byte ptr [ebx + 0x468b2056], cl; and al, 0x39; ret 0x840f; 
0x000915ef: add byte ptr [ebx + 0x470880e], cl; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00095a5d: add byte ptr [ebx + 0x478d04c4], 0xff; pop esi; pop edi; pop ebp; ret; 
0x00115657: add byte ptr [ebx + 0x48424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x488]; add esp, 0x48c; ret; 
0x0011565e: add byte ptr [ebx + 0x48824ac], cl; add byte ptr [eax], al; add esp, 0x48c; ret; 
0x0006b8a7: add byte ptr [ebx + 0x4891c52], cl; and al, 0x29; ret 0xfac1; 
0x0007298f: add byte ptr [ebx + 0x4892056], cl; and al, 0x29; ret 0xc281; 
0x0014802f: add byte ptr [ebx + 0x4b720aea], al; lea eax, dword ptr [edi + 9]; pop edi; ret; 
0x0014904f: add byte ptr [ebx + 0x4b720aef], al; lea eax, dword ptr [eax + 9]; pop edi; ret; 
0x001486ef: add byte ptr [ebx + 0x4b7c0ac2], al; lea eax, dword ptr [ecx + 0xa]; ret; 
0x0011f0b7: add byte ptr [ebx + 0x4c890450], cl; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0x20]; 
0x001140d7: add byte ptr [ebx + 0x4c890450], cl; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx]; 
0x0004c5a6: add byte ptr [ebx + 0x4d8b0875], cl; adc byte ptr [ebx + 0x7e800c7d], cl; inc esi; add byte ptr [ecx - 0x1cf73], cl; dec dword ptr [ebx - 0x1577d]; jmp dword ptr [ebp - 0x75]; 
0x000e5a5d: add byte ptr [ebx + 0x4e8b2856], cl; sub al, 0x89; push esi; xor byte ptr [ebx + 0x4e894050], cl; xor al, 0xf6; ret 0x7420; 
0x000a713f: add byte ptr [ebx + 0x4f391c4e], cl; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000a71bf: add byte ptr [ebx + 0x4f39344e], cl; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x0006dbdf: add byte ptr [ebx + 0x50391050], cl; or al, 0xf; xchg eax, esp; ret 0xb60f; 
0x000f7a4d: add byte ptr [ebx + 0x518b1445], cl; adc al, 0x39; ret 0xa7d; 
0x000d952b: add byte ptr [ebx + 0x54024b4], cl; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x544]; mov ebp, dword ptr [esp + 0x548]; add esp, 0x54c; ret; 
0x000d9532: add byte ptr [ebx + 0x54424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x548]; add esp, 0x54c; ret; 
0x000d9539: add byte ptr [ebx + 0x54824ac], cl; add byte ptr [eax], al; add esp, 0x54c; ret; 
0x00118a97: add byte ptr [ebx + 0x54891cc2], al; and al, 4; mov dword ptr [esp], eax; mov dword ptr [esp + 8], esi; call dword ptr [ecx + 0xc]; 
0x001199d4: add byte ptr [ebx + 0x54894cc0], al; and al, 4; mov dword ptr [esp], eax; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x000b39b0: add byte ptr [ebx + 0x548b08ec], al; and al, 0x10; call 0xb3930; add esp, 8; pop ebx; ret; 
0x0012b1bf: add byte ptr [ebx + 0x548d4c45], cl; and al, 0x30; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x48]; 
0x000e590f: add byte ptr [ebx + 0x56891856], cl; sbb al, 0x8b; push eax; sub al, 0xf6; ret 0x7420; 
0x00023be3: add byte ptr [ebx + 0x58408b00], cl; ret; 
0x00094a9a: add byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x0014801f: add byte ptr [ebx + 0x5b7209ea], al; lea eax, dword ptr [edi + 8]; pop edi; ret; 
0x0014903f: add byte ptr [ebx + 0x5b7209ef], al; lea eax, dword ptr [eax + 8]; pop edi; ret; 
0x001486df: add byte ptr [ebx + 0x5b7c09c2], al; lea eax, dword ptr [ecx + 9]; ret; 
0x0007231f: add byte ptr [ebx + 0x5c8bfe26], al; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00103739: add byte ptr [ebx + 0x5d5b14c4], al; ret; 
0x000f1cf1: add byte ptr [ebx + 0x5d8bf875], cl; hlt; mov edi, dword ptr [ebp - 4]; mov esp, ebp; pop ebp; ret; 
0x00091637: add byte ptr [ebx + 0x5e082444], cl; ret; 
0x0001a000: add byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x0007af9f: add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0007cb7f: add byte ptr [ebx + 0x5e5b10c4], al; pop edi; pop ebp; ret; 
0x00016fe4: add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0003f767: add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000190c9: add byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0012e632: add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x000da9d3: add byte ptr [ebx + 0x5e5b2cc4], 0x5f; pop ebp; ret; 
0x0001ae56: add byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0002c49e: add byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x00031ba9: add byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x0007566f: add byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x00020f84: add byte ptr [ebx + 0x5e5b6cc4], al; pop edi; pop ebp; ret; 
0x000daed2: add byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; ret 0x10; 
0x00116fa0: add byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; ret; 
0x00023efb: add byte ptr [ebx + 0x5e], bl; mov eax, edi; pop edi; pop ebp; ret; 
0x000d12f3: add byte ptr [ebx + 0x5e], bl; pop edi; mov eax, ecx; pop ebp; ret 4; 
0x000db8d2: add byte ptr [ebx + 0x5e], bl; pop edi; mov eax, edx; pop ebp; ret 0x1c; 
0x000e53a8: add byte ptr [ebx + 0x5e], bl; pop edi; mov eax, edx; pop ebp; ret; 
0x0012e532: add byte ptr [ebx + 0x5e], bl; pop edi; neg eax; ret; 
0x000eeb27: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; neg eax; ret; 
0x000c1f6a: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 0x10; 
0x000d9d0e: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 0x14; 
0x000d2ee6: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 0x18; 
0x0001acf7: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 0xc; 
0x000ab641: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 8; 
0x0001f146: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0009528f: add byte ptr [ebx + 0x5e], bl; pop edi; xor eax, eax; ret; 
0x00055c47: add byte ptr [ebx + 0x5e], bl; ret; 
0x0014909f: add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x0007fe24: add byte ptr [ebx + 0x5f5e10c4], al; pop ebp; ret; 
0x001278f2: add byte ptr [ebx + 0x5f5e24c4], al; ret; 
0x000ca516: add byte ptr [ebx + 0x5f5e30c4], al; pop ebp; ret 0xc; 
0x000cef8e: add byte ptr [ebx + 0x5f5e30c4], al; pop ebp; ret 8; 
0x00097b77: add byte ptr [ebx + 0x5f5e40c4], al; pop ebp; ret; 
0x000b993a: add byte ptr [ebx + 0x65], bl; cmp dword ptr [edx], 0x26; mov edx, 0xffffffff; cmovne eax, edx; ret; 
0x000857af: add byte ptr [ebx + 0x66028901], cl; mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000d8a27: add byte ptr [ebx + 0x66042444], cl; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0014800f: add byte ptr [ebx + 0x6b7207ea], al; lea eax, dword ptr [edi + 6]; pop edi; ret; 
0x0014902f: add byte ptr [ebx + 0x6b7207ef], al; lea eax, dword ptr [eax + 6]; pop edi; ret; 
0x001486cf: add byte ptr [ebx + 0x6b7c07c2], al; lea eax, dword ptr [ecx + 7]; ret; 
0x001185bf: add byte ptr [ebx + 0x6c890447], cl; and al, 4; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x0006ceb2: add byte ptr [ebx + 0x6c892046], cl; and al, 4; mov dword ptr [esp], esi; sub eax, ebp; mov dword ptr [esp + 8], eax; call dword ptr [edx + 0x38]; 
0x001118bf: add byte ptr [ebx + 0x6c8d1046], cl; and al, 0x24; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x0016ee2c: add byte ptr [ebx + 0x70740002], ch; cld; call dword ptr [eax - 0x55]; 
0x0011e587: add byte ptr [ebx + 0x74890441], cl; and al, 4; mov dword ptr [esp], ecx; call dword ptr [eax + 4]; 
0x0011e59f: add byte ptr [ebx + 0x74890441], cl; and al, 4; mov dword ptr [esp], ecx; call dword ptr [eax]; 
0x0011e5e7: add byte ptr [ebx + 0x74890450], cl; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x0011324d: add byte ptr [ebx + 0x748b241c], cl; and al, 4; add esp, 8; ret; 
0x001160a7: add byte ptr [ebx + 0x748b241c], cl; and al, 4; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000831bf: add byte ptr [ebx + 0x748b241c], cl; and al, 4; mov edi, dword ptr [esp + 8]; mov ebp, dword ptr [esp + 0xc]; add esp, 0x10; ret; 
0x001207f2: add byte ptr [ebx + 0x74ffa87d], al; adc ecx, dword ptr [ebx - 0x347857b3]; mov eax, 6; call dword ptr gs:[0x10]; 
0x001222a7: add byte ptr [ebx + 0x74ffb07d], al; adc ecx, dword ptr [ebx - 0x34784fb3]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000b09ab: add byte ptr [ebx + 0x758b144d], cl; or al, 0xe8; mov esp, 0x81000793; ret; 
0x001486bf: add byte ptr [ebx + 0x7b7c06c2], al; lea eax, dword ptr [ecx + 6]; ret; 
0x00048e6b: add byte ptr [ebx + 0x7c891c40], cl; and al, 8; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call eax; 
0x000aad11: add byte ptr [ebx + 0x7c8b2434], cl; and al, 4; add esp, 8; ret; 
0x000cb5bf: add byte ptr [ebx + 0x7c8b2434], cl; and al, 4; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000424e6: add byte ptr [ebx + 0x7e800875], cl; inc esi; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x000196d5: add byte ptr [ebx + 0x8424b4], cl; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x88]; add esp, 0x8c; ret; 
0x000987cb: add byte ptr [ebx + 0x8424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x88]; add esp, 0x8c; ret; 
0x000ebc47: add byte ptr [ebx + 0x8558b00], cl; mov dword ptr [ebp - 0x38], ecx; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edx; call dword ptr [ebp + 0x10]; 
0x000987d2: add byte ptr [ebx + 0x8824ac], cl; add byte ptr [eax], al; add esp, 0x8c; ret; 
0x000196dc: add byte ptr [ebx + 0x8824bc], cl; add byte ptr [eax], al; add esp, 0x8c; ret; 
0x0006f3e6: add byte ptr [ebx + 0x940684], cl; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x48]; 
0x000725fd: add byte ptr [ebx + 0x940684], cl; add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 0x30]; 
0x000e3ce1: add byte ptr [ebx + 0x9424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x98]; add esp, 0x9c; ret 4; 
0x00023317: add byte ptr [ebx + 0x9424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x98]; add esp, 0x9c; ret; 
0x000e3ce8: add byte ptr [ebx + 0x9824ac], cl; add byte ptr [eax], al; add esp, 0x9c; ret 4; 
0x0002331e: add byte ptr [ebx + 0x9824ac], cl; add byte ptr [eax], al; add esp, 0x9c; ret; 
0x0002f21b: add byte ptr [ebx + 0x9824bc], cl; add byte ptr [eax], al; add esp, 0x9c; ret; 
0x0006f6f5: add byte ptr [ebx + 0xa424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xa8]; add esp, 0xac; ret; 
0x0006f6fc: add byte ptr [ebx + 0xa824ac], cl; add byte ptr [eax], al; add esp, 0xac; ret; 
0x0002e84b: add byte ptr [ebx + 0xa824bc], cl; add byte ptr [eax], al; add esp, 0xac; ret; 
0x000f02d0: add byte ptr [ebx + 0xa], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f02f7: add byte ptr [ebx + 0xa], bh; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000e1725: add byte ptr [ebx + 0xb424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xb8]; add esp, 0xbc; ret 8; 
0x0014806f: add byte ptr [ebx + 0xb720fea], al; lea eax, dword ptr [edi + 0xe]; pop edi; ret; 
0x0014908f: add byte ptr [ebx + 0xb720fef], al; lea eax, dword ptr [eax + 0xe]; pop edi; ret; 
0x0014872f: add byte ptr [ebx + 0xb7c0fc2], al; lea eax, dword ptr [ecx + 0xf]; ret; 
0x000e172c: add byte ptr [ebx + 0xb824ac], cl; add byte ptr [eax], al; add esp, 0xbc; ret 8; 
0x000f0550: add byte ptr [ebx + 0xb], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0577: add byte ptr [ebx + 0xb], bh; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000672cb: add byte ptr [ebx + 0xc424b4], cl; add byte ptr [eax], al; mov edi, dword ptr [esp + 0xc8]; add esp, 0xcc; ret; 
0x000de309: add byte ptr [ebx + 0xc424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xc8]; add esp, 0xcc; ret; 
0x000de310: add byte ptr [ebx + 0xc824ac], cl; add byte ptr [eax], al; add esp, 0xcc; ret; 
0x000672d2: add byte ptr [ebx + 0xc824bc], cl; add byte ptr [eax], al; add esp, 0xcc; ret; 
0x000f0350: add byte ptr [ebx + 0xc], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0377: add byte ptr [ebx + 0xc], bh; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00127947: add byte ptr [ebx + 0xcc48302], cl; ret; 
0x0006d7c2: add byte ptr [ebx + 0xd424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xd8]; add esp, 0xdc; ret; 
0x0006d7c9: add byte ptr [ebx + 0xd824ac], cl; add byte ptr [eax], al; add esp, 0xdc; ret; 
0x000f0606: add byte ptr [ebx + 0xd], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000695c8: add byte ptr [ebx + 0xe024b4], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xe8]; add esp, 0xec; ret; 
0x00068f4d: add byte ptr [ebx + 0xe424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xe8]; add esp, 0xec; ret; 
0x00068f54: add byte ptr [ebx + 0xe824ac], cl; add byte ptr [eax], al; add esp, 0xec; ret; 
0x00173178: add byte ptr [ebx + 0xe], al; and byte ptr [edi - 0x7a], cl; add al, byte ptr [ebx + 0xe750203]; add al, 0xc6; ret; 
0x000f05c6: add byte ptr [ebx + 0xe], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0018740c: add byte ptr [ebx + 0xe], cl; or byte ptr [ebx + 0x40e5902], al; ret; 
0x0012628c: add byte ptr [ebx + 0xee083], cl; add byte ptr [ecx], dh; in eax, dx; call dword ptr [eax + 0x14]; 
0x000de47d: add byte ptr [ebx + 0xf424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xf8]; add esp, 0xfc; ret; 
0x001430d0: add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000de484: add byte ptr [ebx + 0xf824ac], cl; add byte ptr [eax], al; add esp, 0xfc; ret; 
0x000f0246: add byte ptr [ebx + 0xf], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000a75af: add byte ptr [ebx + 0xff1390a], cl; inc esp; ret 0xc283; 
0x000a3a33: add byte ptr [ebx + 0xff68532], cl; test ah, cl; add byte ptr [eax], al; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x000f0646: add byte ptr [ebx + 1], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0019df9b: add byte ptr [ebx + 2], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000f0106: add byte ptr [ebx + 2], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0150: add byte ptr [ebx + 3], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0177: add byte ptr [ebx + 3], bh; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0286: add byte ptr [ebx + 4], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0090: add byte ptr [ebx + 5], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f00b7: add byte ptr [ebx + 5], bh; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0206: add byte ptr [ebx + 6], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f01c6: add byte ptr [ebx + 7], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0686: add byte ptr [ebx + 8], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0450: add byte ptr [ebx + 9], bh; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0477: add byte ptr [ebx + 9], bh; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0016a6af: add byte ptr [ebx + eax - 0xd], dh; call dword ptr [eax - 0x44]; 
0x00169f97: add byte ptr [ebx + eax*2 + 0x528cfff1], dl; add dword ptr [eax], eax; and al, 0x44; int1; jmp esp; 
0x00173513: add byte ptr [ebx + eax*2], dl; add byte ptr [eax], al; test al, 8; in al, dx; call dword ptr [esi]; 
0x000bacff: add byte ptr [ebx + eax*4 + 0xe], dh; add ah, al; or dword ptr [esi], 0x2bd88900; test byte ptr [ebx - 0xe82e0], dh; jmp eax; 
0x000bacfb: add byte ptr [ebx + eax*4 + 0xe], dh; add byte ptr [ebx + eax*4 + 0xe], dh; add ah, al; or dword ptr [esi], 0x2bd88900; test byte ptr [ebx - 0xe82e0], dh; jmp eax; 
0x0016a2cf: add byte ptr [ebx + eax*4], ah; int1; jmp esp; 
0x0017ba43: add byte ptr [ebx + eax*8 - 0xe2f0000], dl; out dx, eax; call dword ptr [eax]; 
0x0016dd34: add byte ptr [ebx + eax], 0; adc al, 0xf5; cli; call esp; 
0x0019c8cb: add byte ptr [ebx + eax], ah; add byte ptr [eax], al; ret; 
0x00199d73: add byte ptr [ebx + ebp*4 + 2], dh; add byte ptr [eax + 0x5e], cl; clc; jmp dword ptr [ebx]; 
0x00189dab: add byte ptr [ebx + ebp*4 - 0x1dcfffff], ch; hlt; jmp dword ptr [edx]; 
0x0016f853: add byte ptr [ebx + ebp*4 - 3], cl; jmp dword ptr [ebp]; 
0x0016f81b: add byte ptr [ebx + ebp*4], ah; std; call dword ptr [edx]; 
0x00199d3b: add byte ptr [ebx + ebp*4], bh; add al, byte ptr [eax]; and byte ptr [esi - 8], bl; jmp dword ptr [ebx]; 
0x00173e33: add byte ptr [ebx + ebp*4], cl; in al, dx; call dword ptr [edi + 4]; 
0x0018d6f3: add byte ptr [ebx + ebp*8], bl; cmc; call dword ptr [edx]; 
0x00167b7f: add byte ptr [ebx + ebx - 0x15], ah; jmp dword ptr [eax]; 
0x00184d03: add byte ptr [ebx + ebx*2], al; add dword ptr [eax], eax; test al, 0xda; cli; call dword ptr [ecx + 3]; 
0x00178d83: add byte ptr [ebx + ebx*4 + 0x37a80000], al; out dx, eax; call dword ptr [edx]; 
0x0016cf17: add byte ptr [ebx + ebx*4 - 0x50df0007], dh; add al, byte ptr [eax]; adc al, 0x9c; stc; call dword ptr [eax - 0x51]; 
0x0016cf07: add byte ptr [ebx + ebx*4], ah; stc; call esp; 
0x00188d2b: add byte ptr [ebx + ebx*4], ch; add dword ptr [eax], eax; push eax; and esp, esi; jmp dword ptr [edi]; 
0x00168e2f: add byte ptr [ebx + ebx*8 - 0x11], dl; call eax; 
0x0016adb7: add byte ptr [ebx + ebx*8 - 0xc], al; push dword ptr [eax - 0x2afffe15]; fcomi st(4); call dword ptr [eax - 0x15]; 
0x00168e1f: add byte ptr [ebx + ebx*8], bh; out dx, eax; push dword ptr [eax + 0x480000e6]; fucomi st(7); jmp eax; 
0x0017cd5b: add byte ptr [ebx + ebx*8], bl; add byte ptr [eax], al; int1; out dx, eax; call dword ptr [eax]; 
0x00170d23: add byte ptr [ebx + ebx], ah; add byte ptr [eax], al; sub byte ptr [ebx - 0x15], ah; call dword ptr [ebx]; 
0x00188b2b: add byte ptr [ebx + ebx], al; hlt; jmp dword ptr [ebx]; 
0x0016ddbf: add byte ptr [ebx + ecx - 5], dh; call dword ptr [eax]; 
0x00167cd7: add byte ptr [ebx + ecx*2 - 0x7f2b0015], dh; add byte ptr [eax], al; adc dl, byte ptr [eax - 0x15]; jmp dword ptr [eax + 0x7f]; 
0x001941db: add byte ptr [ebx + ecx*2], ch; add al, byte ptr [eax]; push ebp; sbb dh, bh; call dword ptr [eax]; 
0x0016c0f7: add byte ptr [ebx + ecx*2], dh; clc; call dword ptr [eax]; 
0x0016c537: add byte ptr [ebx + ecx*4], dh; clc; jmp dword ptr [eax]; 
0x0016dbcf: add byte ptr [ebx + ecx*8 - 6], dl; call dword ptr [eax]; 
0x00176fab: add byte ptr [ebx + ecx], dh; out dx, eax; call esp; 
0x00182d83: add byte ptr [ebx + edi + 0x2f380001], al; int1; call dword ptr [esi]; 
0x0016c3c7: add byte ptr [ebx + edi*2 - 8], dl; call esp; 
0x0016c3bf: add byte ptr [ebx + edi*2], dl; clc; inc eax; imul eax, dword ptr [edx], 0xf87b5400; call esp; 
0x0017b233: add byte ptr [ebx + edi*4 - 0x8930000], al; out dx, eax; call dword ptr [eax]; 
0x0017b263: add byte ptr [ebx + edi*4 - 0x8b30000], dh; out dx, eax; call dword ptr [eax]; 
0x0017b1d3: add byte ptr [ebx + edi*4], ah; add byte ptr [eax], al; lodsd eax, dword ptr [esi]; imul edi; call dword ptr [eax]; 
0x0016c71f: add byte ptr [ebx + edi*4], al; clc; jmp dword ptr [eax + 0x7b]; 
0x0017ad3b: add byte ptr [ebx + edi*4], bh; add byte ptr [eax], al; rol byte ptr [edi], 1; sti; jmp edx; 
0x0016e6d7: add byte ptr [ebx + edi*8], ah; sti; call dword ptr [eax]; 
0x00169f47: add byte ptr [ebx + edi], al; int1; push dword ptr [eax + 0x3400014f]; cmp esi, ecx; call eax; 
0x00169f4f: add byte ptr [ebx + edi], dh; int1; call eax; 
0x00198643: add byte ptr [ebx + edx - 8], bh; jmp dword ptr [edi]; 
0x0016c147: add byte ptr [ebx + edx*2 + 0x5ea0fff8], ah; add al, byte ptr [eax]; push esi; clc; jmp eax; 
0x00183abb: add byte ptr [ebx + edx*2 - 0xf], al; call dword ptr [eax]; 
0x0018453b: add byte ptr [ebx + edx*2], bh; add dword ptr [eax], eax; cmp bh, 0xf1; call edi; 
0x0018bbab: add byte ptr [ebx + edx*4 - 0xb], dl; call dword ptr [ecx]; 
0x0017c5a3: add byte ptr [ebx + edx*8 - 0x36680000], ah; out dx, eax; call edi; 
0x0016dc1f: add byte ptr [ebx + edx*8], dh; cli; call dword ptr [eax - 1]; 
0x0019052b: add byte ptr [ebx + edx], ch; add al, byte ptr [eax]; add byte ptr [eax - 0xa], bl; jmp dword ptr [ebx]; 
0x0016808f: add byte ptr [ebx + esi - 0x14], dl; call dword ptr [ecx + ebx*4 + 0x347e0000]; in al, dx; call esp; 
0x0016f16f: add byte ptr [ebx + esi - 2], al; jmp eax; 
0x0016cd8f: add byte ptr [ebx + esi*2 - 7], ah; call dword ptr [eax]; 
0x00168357: add byte ptr [ebx + esi*2], dh; in al, dx; call dword ptr [eax]; 
0x0016ee8f: add byte ptr [ebx + esi*2], dl; cld; jmp dword ptr [eax]; 
0x0016a41f: add byte ptr [ebx + esi*4 - 0xf], al; call dword ptr [eax + 0x6b]; 
0x00167ebf: add byte ptr [ebx + esi*8 - 0x15], dh; call dword ptr [eax - 0x6f]; 
0x0016dd2f: add byte ptr [ebx + esi*8 - 6], ah; inc dword ptr [eax + 0x14000304]; cmc; cli; call esp; 
0x0016f047: add byte ptr [ebx + esi*8], ah; std; jmp eax; 
0x0016e687: add byte ptr [ebx + esi*8], ah; sti; jmp dword ptr [eax]; 
0x0015a690: add byte ptr [ebx + esi*8], dh; call dword ptr [eax]; 
0x0015a690: add byte ptr [ebx + esi*8], dh; call dword ptr [eax]; xor al, 0xf3; push dword ptr [eax]; xor al, 0xf3; call dword ptr [eax + 0x34]; 
0x0016d437: add byte ptr [ebx + esi*8], dl; stc; call esp; 
0x0016ab7f: add byte ptr [ebx + esi], dl; hlt; jmp dword ptr [eax]; 
0x00169f07: add byte ptr [ebx + esi], dl; int1; jmp dword ptr [eax + 0x4e]; 
0x00056f12: add byte ptr [ebx - 0x105b43], cl; dec dword ptr [edi]; dec ebp; ret 0xc701; 
0x00057903: add byte ptr [ebx - 0x107b43], al; call dword ptr [ebx + 0xf]; 
0x0005a49e: add byte ptr [ebx - 0x109b43], al; call dword ptr [eax]; 
0x0017e103: add byte ptr [ebx - 0x10], cl; jmp dword ptr [edi]; 
0x0005990a: add byte ptr [ebx - 0x10a343], al; call dword ptr [eax]; 
0x000ac4b9: add byte ptr [ebx - 0x10e36d], cl; inc dword ptr [eax - 0x7bf0ffc6]; ret; 
0x00056ff9: add byte ptr [ebx - 0x10f743], al; call dword ptr [ebx + 0xf]; 
0x0002a9b3: add byte ptr [ebx - 0x12f6d], cl; dec dword ptr [ecx - 0x1b37b]; jmp dword ptr [ebp - 0x75]; 
0x000b668b: add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x000bc920: add byte ptr [ebx - 0x12f73], cl; jmp dword ptr [ebp - 0x7d]; 
0x000ff0fb: add byte ptr [ebx - 0x12f75], cl; jmp dword ptr [ebp - 0x75]; 
0x000b63c8: add byte ptr [ebx - 0x12f7d], cl; jmp dword ptr [ebp - 0x75]; 
0x0002722a: add byte ptr [ebx - 0x12f7f], cl; jmp dword ptr [ebp + 3]; 
0x000c76cd: add byte ptr [ebx - 0x1375], cl; jmp dword ptr [ebp - 0x75]; 
0x000fefca: add byte ptr [ebx - 0x137f], cl; jmp dword ptr [ebp - 0x75]; 
0x000bf6a0: add byte ptr [ebx - 0x13f73], cl; jmp dword ptr [ebp - 0x7d]; 
0x001684d7: add byte ptr [ebx - 0x14], dh; call esp; 
0x0005baf0: add byte ptr [ebx - 0x15745], cl; jmp dword ptr [ebp - 0x75]; 
0x000cd38f: add byte ptr [ebx - 0x15755], cl; jmp dword ptr [ebp - 0x75]; 
0x000176b1: add byte ptr [ebx - 0x1576d], cl; jmp dword ptr [ebp - 0x75]; 
0x000625e9: add byte ptr [ebx - 0x15775], cl; dec dword ptr [ebx - 0x1336b]; dec dword ptr [ecx - 0x10f7b]; jmp dword ptr [ebp - 0x75]; 
0x0005d92f: add byte ptr [ebx - 0x15775], cl; jmp dword ptr [ebp - 0x75]; 
0x0002728b: add byte ptr [ebx - 0x1577d], cl; dec dword ptr [ebx - 0x12f6d]; jmp dword ptr [ebp - 0x75]; 
0x00025d7b: add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x00023bda: add byte ptr [ebx - 0x1577f], cl; jmp dword ptr [ebp - 0x75]; 
0x00170d63: add byte ptr [ebx - 0x15], cl; call dword ptr [ebx]; 
0x00076e1b: add byte ptr [ebx - 0x15b55], cl; dec dword ptr [ecx + 0x54892414]; and al, 0x28; call dword ptr [ebp]; 
0x00076cd6: add byte ptr [ebx - 0x15b7d], cl; dec dword ptr [ecx + 0x54892414]; and al, 0x28; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x0002fe67: add byte ptr [ebx - 0x167c71fc], cl; add edi, esi; test dword ptr [ebx - 0xc8a0007], 0x5f5ed089; ret; 
0x0016f31b: add byte ptr [ebx - 0x16], dl; jmp dword ptr [eax]; 
0x00079269: add byte ptr [ebx - 0x16a4e73c], al; in eax, dx; ret 0xffff; 
0x0012759a: add byte ptr [ebx - 0x1737f], cl; jmp dword ptr [ebp + 3]; 
0x0002b72c: add byte ptr [ebx - 0x17b3dbb4], cl; cmp eax, 0x81000fe6; ret; 
0x000dd66e: add byte ptr [ebx - 0x17c7dbbc], cl; cwde; ret; 
0x0006c363: add byte ptr [ebx - 0x17cffbb], cl; dec dword ptr [edi]; xchg eax, esp; ret 0x7c89; 
0x00078d71: add byte ptr [ebx - 0x1876d], cl; jmp dword ptr [ebp - 0x75]; 
0x00077b32: add byte ptr [ebx - 0x18775], cl; jmp dword ptr [ebp - 0x7d]; 
0x00079638: add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x75]; 
0x00074c58: add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x77]; 
0x00113a2f: add byte ptr [ebx - 0x18], dl; cmp eax, 0x81000163; ret; 
0x0010e52f: add byte ptr [ebx - 0x18], dl; cmp eax, 0x810001b8; ret; 
0x000f5d2f: add byte ptr [ebx - 0x18], dl; cmp eax, 0x81000340; ret; 
0x0006be2f: add byte ptr [ebx - 0x18], dl; cmp eax, 0x81000bdf; ret; 
0x001318ff: add byte ptr [ebx - 0x18], dl; insd dword ptr es:[edi], dx; test bh, bh; inc dword ptr [ecx + 0x716eec3]; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x0010c6af: add byte ptr [ebx - 0x18], dl; mov ebp, 0x810001d6; ret; 
0x000f47af: add byte ptr [ebx - 0x18], dl; mov ebp, 0x81000355; ret; 
0x000eb4af: add byte ptr [ebx - 0x18], dl; mov ebp, 0x810003e8; ret; 
0x00099aaf: add byte ptr [ebx - 0x18], dl; mov ebp, 0x81000902; ret; 
0x00033eaf: add byte ptr [ebx - 0x18], dl; mov ebp, 0x81000f5e; ret; 
0x00032daf: add byte ptr [ebx - 0x18], dl; mov ebp, 0x81000f6f; ret; 
0x0014b2af: add byte ptr [ebx - 0x18], dl; mov ebp, 0x81fffdea; ret; 
0x0011995f: add byte ptr [ebx - 0x18], dl; or eax, 0x81000104; ret; 
0x000eb45f: add byte ptr [ebx - 0x18], dl; or eax, 0x810003e9; ret; 
0x0007be5f: add byte ptr [ebx - 0x18], dl; or eax, 0x81000adf; ret; 
0x0002385f: add byte ptr [ebx - 0x18], dl; or eax, 0x81001065; ret; 
0x0014b35f: add byte ptr [ebx - 0x18], dl; or eax, 0x81fffdea; ret; 
0x0014af5f: add byte ptr [ebx - 0x18], dl; or eax, 0x81fffdee; ret; 
0x0014ac5f: add byte ptr [ebx - 0x18], dl; or eax, 0x81fffdf1; ret; 
0x0012a85f: add byte ptr [ebx - 0x18], dl; or eax, 0x81fffff5; ret; 
0x00142bcf: add byte ptr [ebx - 0x18], dl; popfd; jno 0x142bd3; inc dword ptr [ecx + 0x6041ec3]; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x00128b4f: add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000012; ret; 
0x00126f4f: add byte ptr [ebx - 0x18], dl; sbb eax, 0x8100002e; ret; 
0x000fe84f: add byte ptr [ebx - 0x18], dl; sbb eax, 0x810002b5; ret; 
0x000ea04f: add byte ptr [ebx - 0x18], dl; sbb eax, 0x810003fd; ret; 
0x000e8a4f: add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000413; ret; 
0x000b5c4f: add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000741; ret; 
0x00099b4f: add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000902; ret; 
0x00035b4f: add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000f42; ret; 
0x00035a4f: add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000f43; ret; 
0x00033f4f: add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000f5e; ret; 
0x00032d4f: add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000f70; ret; 
0x00026c4f: add byte ptr [ebx - 0x18], dl; sbb eax, 0x81001031; ret; 
0x0014b04f: add byte ptr [ebx - 0x18], dl; sbb eax, 0x81fffded; ret; 
0x0012ee4f: add byte ptr [ebx - 0x18], dl; sbb eax, 0x81ffffaf; ret; 
0x0010f33f: add byte ptr [ebx - 0x18], dl; sub eax, 0x810001aa; ret; 
0x000c5c3f: add byte ptr [ebx - 0x18], dl; sub eax, 0x81000641; ret; 
0x0002ac47: add byte ptr [ebx - 0x1ab4b], cl; jmp dword ptr [esi - 0x70]; 
0x00025618: add byte ptr [ebx - 0x1bf73], cl; jmp dword ptr [ebx]; 
0x0004fea6: add byte ptr [ebx - 0x1cb73], cl; call ecx; 
0x0004f187: add byte ptr [ebx - 0x1cb73], cl; dec dword ptr [ebx - 0x1bf6b]; call ecx; 
0x000644c5: add byte ptr [ebx - 0x1d17dbbb], cl; push -5; dec dword ptr [ebx - 0x2517afbb]; push -5; jmp dword ptr [ebp - 0x7d]; 
0x0010aa37: add byte ptr [ebx - 0x1e77b], cl; dec dword ptr [ebx - 0xf74d]; jmp dword ptr [ebp - 0x77]; 
0x00168e7f: add byte ptr [ebx - 0x1f], cl; out dx, eax; push eax; call 0xe16d8e8a; out dx, eax; jmp dword ptr [eax]; 
0x000b3f5c: add byte ptr [ebx - 0x20783b83], cl; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x00168c1f: add byte ptr [ebx - 0x21], ah; out dx, al; call esp; 
0x00019eba: add byte ptr [ebx - 0x2508bb3c], al; ret; 
0x000f208f: add byte ptr [ebx - 0x2dcefb14], al; mov eax, dword ptr [esp + 0x44]; call 0xf1f70; add esp, 4; ret; 
0x00109fbe: add byte ptr [ebx - 0x2f76d73c], al; pop ebx; ret; 
0x00124a6f: add byte ptr [ebx - 0x2f76e73c], al; pop ebx; ret; 
0x00115d14: add byte ptr [ebx - 0x32], ch; sbb al, 0x89; ret 0x808b; 
0x000d772f: add byte ptr [ebx - 0x336d], cl; dec dword ptr [ebx + 0x5b0a8902]; ret; 
0x000ecfaf: add byte ptr [ebx - 0x34782fb3], cl; mov eax, 6; call dword ptr gs:[0x10]; 
0x00032b17: add byte ptr [ebx - 0x373efbbf], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x0007fd3c: add byte ptr [ebx - 0x39c6fe40], al; cmovbe eax, edx; add esp, 0x18; pop esi; ret; 
0x001134dc: add byte ptr [ebx - 0x3a7cfbb9], cl; add eax, dword ptr [ebx + 0x6c89fce5]; and al, 4; mov dword ptr [esp], edi; call dword ptr [eax + 0x18]; 
0x0011c345: add byte ptr [ebx - 0x3d7cfbbb], cl; add al, 0x89; push esp; and al, 4; mov dword ptr [esp], ebp; call dword ptr [eax + 8]; 
0x000a3dba: add byte ptr [ebx - 0x3eebdb94], cl; cli; sbb byte ptr [ebx - 0x77e7dbb4], cl; push esp; cmp eax, 0x83fa8900; ret 0x8901; 
0x0003f1d9: add byte ptr [ebx - 0x3f7c7fbb], cl; add dword ptr [ecx], edi; ret 0x870f; 
0x000f15ae: add byte ptr [ebx - 0x3fb73], cl; inc dword ptr [edi + 0x92b8df]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ce62f: add byte ptr [ebx - 0x3fcecf3c], al; pop esi; pop edi; pop ebp; ret; 
0x0004108e: add byte ptr [ebx - 0x3fcedf3c], al; pop ebx; pop esi; pop edi; ret; 
0x000f3ca7: add byte ptr [ebx - 0x3fcedf3c], al; pop esi; pop edi; pop ebp; ret; 
0x000d770f: add byte ptr [ebx - 0x3fceeb3c], al; pop ebx; pop esi; ret; 
0x001149af: add byte ptr [ebx - 0x3fceef3c], al; pop esi; pop edi; pop ebp; ret; 
0x000fc3bf: add byte ptr [ebx - 0x3fe6fe06], al; add esp, 0x18; and eax, 0xc; pop ebx; ret; 
0x00055492: add byte ptr [ebx - 0x3fe6fe08], al; add esp, 0x18; pop ebx; ret; 
0x0001a3fc: add byte ptr [ebx - 0x3fe6fe08], al; not eax; add esp, 8; pop ebx; ret; 
0x000f160f: add byte ptr [ebx - 0x40b43], cl; dec dword ptr [ebx - 0x3fb73]; inc dword ptr [edi + 0x92b8df]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013336f: add byte ptr [ebx - 0x42], dh; call 0x129d73; add ebx, 0x32d29; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00132d3f: add byte ptr [ebx - 0x42], dh; call 0x129d73; add ebx, 0x330d9; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00151de3: add byte ptr [ebx - 0x47fffffb], dh; add eax, 0x5bd0000; add byte ptr [eax], al; ret 5; 
0x000429a4: add byte ptr [ebx - 0x4af6b], cl; ljmp ptr [ecx]; ret 0xbd83; 
0x0019ad00: add byte ptr [ebx - 0x5ac3fffe], bh; clc; jmp dword ptr [edi]; 
0x0019df7b: add byte ptr [ebx - 0x61000000], dh; pop es; add byte ptr [eax], al; ret 7; 
0x000e38a5: add byte ptr [ebx - 0x6376d7c0], cl; and al, 0x8c; add byte ptr [eax], al; add al, ch; mov esi, 0x81000464; ret; 
0x00119cd6: add byte ptr [ebx - 0x6b72afba], cl; and al, 0x84; add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbac], cl; cmp al, 0x24; call dword ptr [eax + 4]; 
0x00111868: add byte ptr [ebx - 0x6b72efba], cl; and al, 0x84; add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbac], cl; cmp al, 0x24; call dword ptr [eax + 4]; 
0x0006c366: add byte ptr [ebx - 0x6bf00002], al; ret 0x7c89; 
0x0004b4f4: add byte ptr [ebx - 0x6bf0fe40], al; ret 0x25e9; 
0x0004c3c4: add byte ptr [ebx - 0x6bf0fe40], al; ret 0x3ce9; 
0x0004b594: add byte ptr [ebx - 0x6bf0fe40], al; ret 0x50e9; 
0x0004c3ad: add byte ptr [ebx - 0x6bf0fe40], al; ret 0x53e9; 
0x00049c86: add byte ptr [ebx - 0x6bf0fe40], al; ret 0x73e9; 
0x0004c40c: add byte ptr [ebx - 0x6bf0fe40], al; ret 0x7de9; 
0x0004c3f2: add byte ptr [ebx - 0x6bf0fe40], al; ret 0x97e9; 
0x000497a0: add byte ptr [ebx - 0x6bf0fe40], al; ret 0xc5eb; 
0x00064d7d: add byte ptr [ebx - 0x6e76a7b8], cl; mov eax, 0x5b000000; ret; 
0x000c519d: add byte ptr [ebx - 0x6f6d], cl; dec dword ptr [ecx + 0x24c4830a]; pop ebx; pop esi; ret; 
0x00107d6b: add byte ptr [ebx - 0x71f0ff08], al; ret; 
0x0008b76c: add byte ptr [ebx - 0x72fd76ff], cl; inc edx; add al, 0x5f; pop ebx; ret; 
0x000ab3bc: add byte ptr [ebx - 0x72feef82], al; mov byte ptr [edi + eax], ch; add byte ptr [ecx + 0xf14247c], cl; sahf; ret 0xd129; 
0x001486af: add byte ptr [ebx - 0x73f0fa3e], al; xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, dword ptr [ecx + 5]; ret; 
0x0014867f: add byte ptr [ebx - 0x73f0fe3e], al; mov bh, 0; add byte ptr [eax], al; lea eax, dword ptr [ecx + 1]; ret; 
0x0014851d: add byte ptr [ebx - 0x73f0ff3e], al; sbb dword ptr [edx], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x00035ccf: add byte ptr [ebx - 0x74abdbbc], cl; push ebp; add byte ptr [ebp - 0x9ea8a40], al; ret 0x7501; 
0x00113851: add byte ptr [ebx - 0x74dbdbb4], cl; inc esp; and al, 0x3c; mov dword ptr [esp], ebp; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x18]; 
0x00040e50: add byte ptr [ebx - 0x74e7db8c], cl; pop esp; and al, 0x14; mov eax, dword ptr [eax + 0x34]; add esp, 0x1c; ret; 
0x0012990f: add byte ptr [ebx - 0x74f7dbac], cl; inc esp; and al, 4; mov dword ptr [eax + 0x4c], edx; ret; 
0x001298bf: add byte ptr [ebx - 0x74f7dbac], cl; inc esp; and al, 4; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x000271cf: add byte ptr [ebx - 0x74f7dbbc], cl; push esp; and al, 4; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00026a8a: add byte ptr [ebx - 0x74fbdbac], cl; sub dword ptr [eax + 0x65fffffe], 0x448b008b; nop; inc eax; ret; 
0x001298ff: add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; dec esp; ret; 
0x0012997f: add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; pop eax; ret; 
0x0012992f: add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; pop esp; ret; 
0x0012991f: add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; push eax; ret; 
0x0012998f: add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; push esp; ret; 
0x0007314f: add byte ptr [ebx - 0x74fbdbbc], cl; push esp; and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x000d2600: add byte ptr [ebx - 0x76abdbbc], cl; ret 0xc283; 
0x0009f31a: add byte ptr [ebx - 0x76b3dbbc], cl; ret 0xfac1; 
0x00039bae: add byte ptr [ebx - 0x76b7dbbc], cl; ret 0xfac1; 
0x0001f2d1: add byte ptr [ebx - 0x76bfdb8c], cl; ret 0x542b; 
0x00070739: add byte ptr [ebx - 0x76bfdbb4], cl; inc ecx; adc al, 0xe9; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x00036d9b: add byte ptr [ebx - 0x76bfdbbc], cl; ret 0xfac1; 
0x0002b163: add byte ptr [ebx - 0x76c7dbb4], cl; ret 0x448b; 
0x0007b11f: add byte ptr [ebx - 0x76cbdbac], cl; push esp; and al, 4; lea edx, dword ptr [edi + 0x19]; mov dword ptr [esp], edx; call eax; 
0x000eec97: add byte ptr [ebx - 0x76d3db84], cl; pop esp; and al, 0xc; mov ebx, eax; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x00123d77: add byte ptr [ebx - 0x76d3db84], cl; pop esp; and al, 0xc; mov ebx, eax; mov eax, 0xbc; call dword ptr gs:[0x10]; 
0x00123e3a: add byte ptr [ebx - 0x76d3db84], cl; pop esp; and al, 0xc; mov ebx, eax; mov eax, 0xbd; call dword ptr gs:[0x10]; 
0x000c6f11: add byte ptr [ebx - 0x76d3db94], cl; imul ebp, dword ptr [eax], 0xfffe8ae9; jmp dword ptr [esi - 0x70]; 
0x000dc0dc: add byte ptr [ebx - 0x76d3db94], cl; ret 0x748b; 
0x000a7b24: add byte ptr [ebx - 0x76dfdba4], cl; ret 0x7c8b; 
0x00124aad: add byte ptr [ebx - 0x76dfdbbc], cl; add al, 0x24; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 0x10]; 
0x000317c7: add byte ptr [ebx - 0x76e3dbac], cl; insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp], edi; mov dword ptr [esp + 8], edx; call esi; 
0x001111cf: add byte ptr [ebx - 0x76e3dbbc], cl; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x001295e7: add byte ptr [ebx - 0x76ebdbac], cl; test byte ptr [esp + ecx*8], ah; add byte ptr [eax], al; add byte ptr [ebx - 0x7cebdbbc], cl; ret 0x8b04; 
0x000a3daf: add byte ptr [ebx - 0x76efdb84], cl; ret 0xff25; 
0x0008737c: add byte ptr [ebx - 0x76fd76ff], cl; clc; pop edi; pop ebx; ret; 
0x0008557f: add byte ptr [ebx - 0x76fd76ff], cl; clc; pop edi; ret; 
0x000d62df: add byte ptr [ebx - 0x776df3c], al; pop esi; pop edi; pop ebp; ret; 
0x0014b131: add byte ptr [ebx - 0x776ef3c], al; pop ebx; pop esi; pop edi; ret; 
0x00083585: add byte ptr [ebx - 0x776fb3c], al; pop esi; pop edi; pop ebp; ret; 
0x000db87c: add byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret 0x1c; 
0x0003edf9: add byte ptr [ebx - 0x780d76d0], cl; sar dword ptr [eax + 0x25], cl; call dword ptr gs:[0x10]; 
0x000de8a4: add byte ptr [ebx - 0x78efdb84], cl; fistp qword ptr [eax + 0x127]; call dword ptr gs:[0x10]; 
0x00055564: add byte ptr [ebx - 0x78efdb84], cl; fistp qword ptr [eax + 0x12e]; call dword ptr gs:[0x10]; 
0x000e0ad4: add byte ptr [ebx - 0x78efdb84], cl; fistp qword ptr [eax + 0x131]; call dword ptr gs:[0x10]; 
0x000eeda4: add byte ptr [ebx - 0x78efdb84], cl; fistp qword ptr [eax + 0xe1]; call dword ptr gs:[0x10]; 
0x000de6fc: add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0x128]; call dword ptr gs:[0x10]; 
0x000e0b6c: add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0x12d]; call dword ptr gs:[0x10]; 
0x000e0a2c: add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0x130]; call dword ptr gs:[0x10]; 
0x000b85fc: add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xb]; call dword ptr gs:[0x10]; 
0x000e983c: add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xc1]; call dword ptr gs:[0x10]; 
0x000e989c: add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xc2]; call dword ptr gs:[0x10]; 
0x000e00cc: add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xc6]; call dword ptr gs:[0x10]; 
0x000e006c: add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xcf]; call dword ptr gs:[0x10]; 
0x000b93fc: add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xd1]; call dword ptr gs:[0x10]; 
0x000b945c: add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xd3]; call dword ptr gs:[0x10]; 
0x000e000c: add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xd4]; call dword ptr gs:[0x10]; 
0x000df0bc: add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xdd]; call dword ptr gs:[0x10]; 
0x000dde2f: add byte ptr [ebx - 0x78f3dbac], cl; sar dword ptr [eax + 0xc3], cl; call dword ptr gs:[0x10]; 
0x000ddeaf: add byte ptr [ebx - 0x78f3dbac], cl; sar dword ptr [eax + 0xc4], cl; call dword ptr gs:[0x10]; 
0x000dde6f: add byte ptr [ebx - 0x78f3dbac], cl; sar dword ptr [eax + 0xc5], cl; call dword ptr gs:[0x10]; 
0x000e956f: add byte ptr [ebx - 0x78f7dbac], cl; sar dword ptr [eax + 0x10f], cl; call dword ptr gs:[0x10]; 
0x000e65bf: add byte ptr [ebx - 0x78f7dbac], cl; sar dword ptr [eax + 0x4b], cl; call dword ptr gs:[0x10]; 
0x000e6a7f: add byte ptr [ebx - 0x78f7dbac], cl; sar dword ptr [eax + 0x60], cl; call dword ptr gs:[0x10]; 
0x000e657f: add byte ptr [ebx - 0x78f7dbac], cl; sar dword ptr [eax + 0xbf], cl; call dword ptr gs:[0x10]; 
0x000b90df: add byte ptr [ebx - 0x78f7dbac], cl; sar dword ptr [eax + 0xcd], cl; call dword ptr gs:[0x10]; 
0x00148ce4: add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x000a25b9: add byte ptr [ebx - 0x7a8bdbbc], cl; ror byte ptr [edi], 0x85; ret; 
0x000d96cb: add byte ptr [ebx - 0x7af00008], al; push ebx; add dword ptr [eax], eax; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x7d]; 
0x000205c0: add byte ptr [ebx - 0x7af07f39], al; ret 3; 
0x0005d333: add byte ptr [ebx - 0x7af0cf02], al; ret 0x18; 
0x00045400: add byte ptr [ebx - 0x7af0fe40], al; ret 0xfffd; 
0x000e891a: add byte ptr [ebx - 0x7af7dbac], cl; ror byte ptr [ebx - 0xf77f], cl; push dword ptr [edi + ecx + 0x65]; mov dword ptr [eax], 0x26; mov eax, 0xffffffff; ret; 
0x000edbaa: add byte ptr [ebx - 0x7afbdbac], cl; ror byte ptr [ebx - 0xf77f], cl; push dword ptr [edi + ecx + 0x65]; mov dword ptr [eax], 0x26; mov eax, 0xffffffff; ret; 
0x00026fe9: add byte ptr [ebx - 0x7b74cfc0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x00027019: add byte ptr [ebx - 0x7b74d7c0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x0005e45b: add byte ptr [ebx - 0x7bf00008], al; xor ch, byte ptr [eax + eax]; add byte ptr [ebx - 0x15775], cl; jmp dword ptr [ebp - 0x75]; 
0x00041f1b: add byte ptr [ebx - 0x7bf0ef03], al; ret; 
0x000841e7: add byte ptr [ebx - 0x7bf0f108], al; call dword ptr [eax]; 
0x00131fe4: add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x00149142: add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0007f509: add byte ptr [ebx - 0x7bf0fe01], al; inc esi; add dword ptr [eax], eax; add byte ptr [ecx], ch; ret 0xea01; 
0x00131a83: add byte ptr [ebx - 0x7bf0ff07], al; ret; 
0x0004b2b7: add byte ptr [ebx - 0x7c9bdbbc], cl; call 0x9d8cc1c3; add byte ptr [eax], al; add byte ptr [ebx + 0x1682454], cl; ret 0x5489; 
0x000d12fc: add byte ptr [ebx - 0x7cbfdbb4], cl; ret 0x8510; 
0x0001e13b: add byte ptr [ebx - 0x7ccfdbac], cl; ret 0x3904; 
0x000d50c6: add byte ptr [ebx - 0x7ccfdbbc], cl; ret 0xc740; 
0x0004b63b: add byte ptr [ebx - 0x7cd3dbb4], cl; rol byte ptr [ecx], 0xf; xchg eax, esp; ret 0x97e9; 
0x0004b5f3: add byte ptr [ebx - 0x7cd3dbb4], cl; rol byte ptr [ecx], 0xf; xchg eax, esp; ret 0xdfe9; 
0x0004b521: add byte ptr [ebx - 0x7cd3dbb4], cl; rol byte ptr [ecx], 0xf; xchg eax, esp; ret 0xe9; 
0x000dd1cf: add byte ptr [ebx - 0x7cd7dbbc], cl; ret 0x8b01; 
0x001295f2: add byte ptr [ebx - 0x7cebdbbc], cl; ret 0x8b04; 
0x00080f6a: add byte ptr [ebx - 0x7cf3dbac], cl; ret 0x8501; 
0x0011f76f: add byte ptr [ebx - 0x7cfbdbbc], cl; inc eax; adc al, 4; mov eax, 1; ret; 
0x000e6f87: add byte ptr [ebx - 0x7cfe1bbb], al; ret 0x8b08; 
0x00148f7a: add byte ptr [ebx - 0x7df0f711], al; sbb al, 1; add byte ptr [eax], al; lea eax, dword ptr [eax + 7]; pop edi; ret; 
0x0005ba04: add byte ptr [ebx - 0x7e47db54], cl; add byte ptr [eax], al; add esp, 0x81bc; ret; 
0x0005b9fd: add byte ptr [ebx - 0x7e4bdb44], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x81b8]; add esp, 0x81bc; ret; 
0x0003f952: add byte ptr [ebx - 0x7f], bl; ret; 
0x0013131d: add byte ptr [ebx - 0x8f55], cl; jmp dword ptr [ebp - 0x75]; 
0x00097285: add byte ptr [ebx - 0x8f75], cl; dec dword ptr [ebx - 0x12f6d]; jmp dword ptr [ebp - 0x75]; 
0x000e5def: add byte ptr [ebx - 0x8f7dbb4], cl; ret 0xeff0; 
0x000e5e4f: add byte ptr [ebx - 0x8f7dbbc], cl; ret 0xeff0; 
0x0002726a: add byte ptr [ebx - 0x8f7f], cl; jmp dword ptr [ebp + 3]; 
0x00101a2c: add byte ptr [ebx - 0x98afe17], al; pop esi; sub eax, 1; pop edi; pop ebp; ret; 
0x000e23b3: add byte ptr [ebx - 0xab7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00018cc6: add byte ptr [ebx - 0xb34b], cl; call dword ptr [edi - 0x75]; 
0x0007b27b: add byte ptr [ebx - 0xb745], cl; inc dword ptr [ebp + 0x740789c0]; cmp byte ptr [ebx - 0x76dbdbac], cl; xor al, 0x24; mov dword ptr [esp + 4], edx; call eax; 
0x00062964: add byte ptr [ebx - 0xbb6b], cl; dec dword ptr [ecx - 0x7c7b6e8c]; ret 0x8301; 
0x000e3533: add byte ptr [ebx - 0xbb7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000fd048: add byte ptr [ebx - 0xbf75], cl; jmp dword ptr [ebp - 0x75]; 
0x0002724a: add byte ptr [ebx - 0xbf7f], cl; jmp dword ptr [ebp + 3]; 
0x0007bee2: add byte ptr [ebx - 0xc37d], cl; dec dword ptr [ecx + 0x18c48310]; pop ebx; ret; 
0x000f2627: add byte ptr [ebx - 0xc77b], cl; call ecx; 
0x000e346b: add byte ptr [ebx - 0xc77b], cl; dec dword ptr [ecx + 0x26e82404]; ret 0xffff; 
0x000e345d: add byte ptr [ebx - 0xc77b], cl; inc dword ptr [ebp + 0x17840fc0]; add dword ptr [eax], eax; add byte ptr [ebx - 0xc77b], cl; dec dword ptr [ecx + 0x26e82404]; ret 0xffff; 
0x0009857f: add byte ptr [ebx - 0xc8afe17], al; pop esi; sub eax, 4; pop edi; pop ebp; ret; 
0x000610a1: add byte ptr [ebx - 0xd743], cl; jmp dword ptr [ebp - 0x39]; 
0x00076e39: add byte ptr [ebx - 0xd77d], cl; dec dword ptr [ebx + 0x74c08500]; adc cl, byte ptr [ecx - 0x76d7dbac]; dec esp; and al, 0x2c; call eax; 
0x0015a820: add byte ptr [ebx - 0xd], cl; jmp dword ptr [eax]; 
0x001236e7: add byte ptr [ebx - 0xdb43], cl; jmp dword ptr [esi - 0x70]; 
0x0005d672: add byte ptr [ebx - 0xe373], cl; dec dword ptr [ebx - 0xd743]; jmp dword ptr [ebp - 0x77]; 
0x0005f0d8: add byte ptr [ebx - 0xeb73], cl; call ecx; 
0x0005f925: add byte ptr [ebx - 0xeb73], cl; inc dword ptr [ecx]; ret 0x9589; 
0x000fc55f: add byte ptr [ebx - 0xf47eb39], al; add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; xor esi, esi; xchg ebx, edi; call dword ptr gs:[0x10]; 
0x0012729f: add byte ptr [ebx - 0xf4fe339], al; mov ecx, 0x81; xchg ebx, edi; call dword ptr gs:[0x10]; 
0x0004cabf: add byte ptr [ebx - 0xf745], cl; dec dword ptr [eax - 0x1a36b]; dec dword ptr [ebx - 0x18b7b]; dec dword ptr [ebx - 0x1bb6b]; jmp dword ptr [ebp - 0x75]; 
0x00124237: add byte ptr [ebx - 0xf74d], cl; inc dword ptr [ebx + 0x16ba19f8]; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x8965; 
0x001241df: add byte ptr [ebx - 0xf74d], cl; jmp dword ptr [ebp - 0x39]; 
0x0001c6a1: add byte ptr [ebx - 0xf74d], cl; jmp dword ptr [ebp - 0x75]; 
0x0010ab91: add byte ptr [ebx - 0xf74d], cl; jmp dword ptr [ebp - 0x7d]; 
0x001202fe: add byte ptr [ebx - 0xf755], cl; jmp dword ptr [ebp - 0x39]; 
0x000e3a27: add byte ptr [ebx - 0xf755], cl; jmp dword ptr [ebp - 0x75]; 
0x00122f2f: add byte ptr [ebx - 0xf755], cl; jmp dword ptr [ebp - 0x7d]; 
0x0010b27f: add byte ptr [ebx - 0xf76d], cl; dec dword ptr [ecx + 0x2a8b65f1]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0010053f: add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp + 3]; 
0x000b6770: add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x39]; 
0x000b5676: add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x75]; 
0x000b4f2f: add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x7d]; 
0x00122ddd: add byte ptr [ebx - 0xf76d], cl; push dword ptr [ecx]; jmp dword ptr [ebp - 0x39]; 
0x00123a46: add byte ptr [ebx - 0xf76db3c], al; pop esi; pop edi; ret; 
0x000ed28a: add byte ptr [ebx - 0xf76eb3c], al; pop ebx; pop esi; ret; 
0x000b4e2c: add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp + 3]; 
0x00031e93: add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x75]; 
0x0005525d: add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x7d]; 
0x001229a4: add byte ptr [ebx - 0xf775], cl; push dword ptr [ecx]; jmp dword ptr [ebp - 0x39]; 
0x0002e1ca: add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0004fd2f: add byte ptr [ebx - 0xf77d], cl; dec dword ptr [ebx - 0x1af6b]; inc edi; test dword ptr [esi + edi*8 - 1], ebx; call dword ptr [eax]; 
0x0004ccc7: add byte ptr [ebx - 0xf77d], cl; dec dword ptr [ebx - 0x1af6b]; jmp dword ptr [ebp - 0x77]; 
0x0005cc8f: add byte ptr [ebx - 0xf77d], cl; dec dword ptr [ebx - 0xe34b]; jmp dword ptr [ebp - 0x77]; 
0x0005ef67: add byte ptr [ebx - 0xf77d], cl; dec dword ptr [ebx - 0xe373]; jmp dword ptr [ebp - 0x77]; 
0x0005e727: add byte ptr [ebx - 0xf77d], cl; dec dword ptr [ecx - 0x10343]; jmp dword ptr [ebp - 0x75]; 
0x000b5154: add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp + 3]; 
0x0001a317: add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x00028697: add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x000e02cd: add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x77]; 
0x00069bbf: add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x7d]; 
0x000354ef: add byte ptr [ebx - 0xf77d], cl; push dword ptr [ecx]; div byte ptr [ecx]; jmp dword ptr [ebp - 0x39]; 
0x00019b5a: add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp + 3]; 
0x0002ebba: add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp - 0x39]; 
0x000b9b5f: add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp - 0x7d]; 
0x00076a92: add byte ptr [ebx - 0xfb55], cl; dec dword ptr [ebx - 0x177cefbb]; add dword ptr [ecx], eax; ret 0xd0f7; 
0x000ed3ef: add byte ptr [ebx - 0xfb7f], cl; dec dword ptr [ebx - 0x3f7ae3c0]; cmove eax, edx; ret; 
0x00083e92: add byte ptr [ebx - 0xfd6fb3c], al; pop esi; pop edi; pop ebp; ret; 
0x000c98bf: add byte ptr [ebx - 0xff73], cl; inc dword ptr [edi + 0x6b8cb]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001065ce: add byte ptr [ebx - 0xff7d], cl; jmp dword ptr [ebp + 3]; 
0x001003c7: add byte ptr [ebx - 0xff7d], cl; jmp dword ptr [ebp - 0x39]; 
0x0010533a: add byte ptr [ebx - 0xff7f], cl; jmp dword ptr [ebp + 3]; 
0x00167508: add byte ptr [ebx - 3], cl; call dword ptr [eax - 0x6f0002b5]; dec ecx; std; jmp dword ptr [eax]; 
0x0016bbf7: add byte ptr [ebx - 9], dh; call dword ptr [eax + 0x43]; 
0x0018cf1b: add byte ptr [ebx*8 - 0x2b9fffff], bl; cmc; call edi; 
0x00027214: add byte ptr [ebx], ah; inc esp; and al, 8; ret; 
0x0016dc55: add byte ptr [ebx], al; add byte ptr [ebp + edx*8 - 6], al; jmp dword ptr [eax]; 
0x00136c9b: add byte ptr [ebx], al; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0008d1d1: add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0008d2f8: add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000e88af: add byte ptr [ebx], al; push esp; and al, 0x2c; mov eax, edx; add esp, 0x3c; ret; 
0x0007dd0c: add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x00132b6e: add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x001307a6: add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001342de: add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0011967f: add byte ptr [ebx], bh; lodsb al, byte ptr [esi]; ret; 
0x00167358: add byte ptr [ebx], bh; std; call dword ptr [eax + 0x3b]; 
0x0018d51b: add byte ptr [ebx], bl; add dword ptr [eax], eax; mov al, 0xe3; cmc; call dword ptr [edi]; 
0x0016d74f: add byte ptr [ebx], cl; aaa; cli; jmp esp; 
0x0003402c: add byte ptr [ebx], cl; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x000f2f02: add byte ptr [ebx], cl; add byte ptr [ecx - 0x8fbdb8c], cl; ret 0xff80; 
0x00166cb4: add byte ptr [ebx], cl; std; jmp edx; 
0x0000954b: add byte ptr [ebx], dh; add byte ptr [eax], al; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; mov eax, dword ptr [0xd0000010]; ret 7; 
0x0015a66c: add byte ptr [ebx], dh; call dword ptr [eax]; xor esi, ebx; jmp dword ptr [eax]; 
0x000e5324: add byte ptr [ebx], dh; test byte ptr [eax + edi], ah; add al, 0; add byte ptr [ecx], cl; ret 0x850f; 
0x00060c2c: add byte ptr [ecx + 0x1000fa], al; add byte ptr [edi], cl; xchg dword ptr [ecx - 0x7d000000], edx; ret 0x830f; 
0x000f1176: add byte ptr [ecx + 0x100ce], al; add byte ptr [ecx - 0x76f3dba4], cl; ret; 
0x0010fb0d: add byte ptr [ecx + 0x1089084a], cl; xor eax, eax; ret; 
0x0003c451: add byte ptr [ecx + 0x10fcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00112268: add byte ptr [ecx + 0x10ff243c], cl; mov eax, dword ptr [edi + 4]; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x001127b2: add byte ptr [ecx + 0x10ff243c], cl; mov edx, dword ptr [edi + 4]; mov dword ptr [esp], edi; mov dword ptr [esp + 0x2c], eax; call dword ptr [edx + 0x10]; 
0x00168857: add byte ptr [ecx + 0x10ffed74], ah; ret 0; 
0x0000943b: add byte ptr [ecx + 0x12000000], bl; add byte ptr [eax + eax], cl; ret 0x38; 
0x0007a738: add byte ptr [ecx + 0x1288bbc3], al; add byte ptr [ecx - 0x9e7db8c], cl; ret 0x7403; 
0x000725f7: add byte ptr [ecx + 0x1309fcc3], al; add byte ptr [ebx + 0x940684], cl; add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 0x30]; 
0x000701fd: add byte ptr [ecx + 0x132df6c3], al; add byte ptr [ebx + 0x468b1456], cl; adc byte ptr [ecx], bh; ret 0x3776; 
0x0006f3e0: add byte ptr [ecx + 0x133c13c3], al; add byte ptr [ebx + 0x940684], cl; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x48]; 
0x0006c35d: add byte ptr [ecx + 0x136c96c3], al; add byte ptr [ebx - 0x17cffbb], cl; dec dword ptr [edi]; xchg eax, esp; ret 0x7c89; 
0x00023994: add byte ptr [ecx + 0x13e82404], cl; xchg dword ptr [eax + eax], ecx; add esp, 0x18; pop ebx; ret; 
0x00125fed: add byte ptr [ecx + 0x14cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0005555e: add byte ptr [ecx + 0x14da95c3], al; add byte ptr [ebx - 0x78efdb84], cl; fistp qword ptr [eax + 0x12e]; call dword ptr gs:[0x10]; 
0x00055524: add byte ptr [ecx + 0x14dacfc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000fe758: add byte ptr [ecx + 0x15cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003fa00: add byte ptr [ecx + 0x1635f3c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0003f8e2: add byte ptr [ecx + 0x163711c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0003f875: add byte ptr [ecx + 0x16377ec1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0003edf3: add byte ptr [ecx + 0x164200c3], al; add byte ptr [ebx - 0x780d76d0], cl; sar dword ptr [eax + 0x25], cl; call dword ptr gs:[0x10]; 
0x0003eb87: add byte ptr [ecx + 0x16cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0002ebb4: add byte ptr [ecx + 0x17443fc1], al; add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp - 0x39]; 
0x0002e2de: add byte ptr [ecx + 0x174d15c3], al; add byte ptr [edi + 0xb3b8d3], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002e1ee: add byte ptr [ecx + 0x174e05c3], al; add byte ptr [edi + 0xb0b8d3], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002918c: add byte ptr [ecx + 0x179e67c3], al; add byte ptr [ecx + 0xfcec], al; add byte ptr [ecx - 0x8f6b], cl; jmp dword ptr [ebp - 0x75]; 
0x00027285: add byte ptr [ecx + 0x17bd6ec3], al; add byte ptr [ebx - 0x1577d], cl; dec dword ptr [ebx - 0x12f6d]; jmp dword ptr [ebp - 0x75]; 
0x00027264: add byte ptr [ecx + 0x17bd8fc1], al; add byte ptr [ebx - 0x8f7f], cl; jmp dword ptr [ebp + 3]; 
0x00027244: add byte ptr [ecx + 0x17bdafc1], al; add byte ptr [ebx - 0xbf7f], cl; jmp dword ptr [ebp + 3]; 
0x00027224: add byte ptr [ecx + 0x17bdcfc1], al; add byte ptr [ebx - 0x12f7f], cl; jmp dword ptr [ebp + 3]; 
0x00026a84: add byte ptr [ecx + 0x17c56fc1], al; add byte ptr [ebx - 0x74fbdbac], cl; sub dword ptr [eax + 0x65fffffe], 0x448b008b; nop; inc eax; ret; 
0x00025d75: add byte ptr [ecx + 0x17d27ec3], al; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x00023bd4: add byte ptr [ecx + 0x17f41fc1], al; add byte ptr [ebx - 0x1577f], cl; jmp dword ptr [ebp - 0x75]; 
0x00019b54: add byte ptr [ecx + 0x18949fc1], al; add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp + 3]; 
0x0004c441: add byte ptr [ecx + 0x1b802], cl; add byte ptr [eax], al; ret; 
0x000eec19: add byte ptr [ecx + 0x1b8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b81a2: add byte ptr [ecx + 0x1db8c1], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009c194: add byte ptr [ecx + 0x1ecc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000394b1: add byte ptr [ecx + 0x1fcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0006b948: add byte ptr [ecx + 0x1fe82434], cl; ret; 
0x0007e8ff: add byte ptr [ecx + 0x241c8b3a], cl; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0007876f: add byte ptr [ecx + 0x241c8bd0], cl; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00082c61: add byte ptr [ecx + 0x24348bd0], cl; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0002de8a: add byte ptr [ecx + 0x24548bc7], cl; or al, 0x87; fistp qword ptr [eax + 0x10e]; call dword ptr gs:[0x10]; 
0x0010194f: add byte ptr [ecx + 0x24548be8], cl; adc byte ptr [ecx], ch; ret 0x7c8d; 
0x00123f6c: add byte ptr [ecx + 0x245c8bf0], cl; push eax; mov esi, dword ptr [esp + 0x54]; mov edi, dword ptr [esp + 0x58]; add esp, 0x5c; ret; 
0x00114d8f: add byte ptr [ecx + 0x24748be8], cl; adc byte ptr [ebx - 0x74ebdb84], cl; insb byte ptr es:[edi], dx; and al, 0x18; add esp, 0x1c; ret; 
0x000d9c57: add byte ptr [ecx + 0x24748bf8], cl; and byte ptr [ebx - 0x74dbdb84], cl; insb byte ptr es:[edi], dx; and al, 0x28; add esp, 0x2c; ret 8; 
0x0002e138: add byte ptr [ecx + 0x24bc8bc1], cl; nop; add byte ptr [eax], al; add byte ptr [edi + 0xafb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010f3b1: add byte ptr [ecx + 0x26e82404], cl; adc bh, bh; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x000b514c: add byte ptr [ecx + 0x2be82404], cl; sbb eax, dword ptr [edi]; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp + 3]; 
0x00169d1f: add byte ptr [ecx + 0x2f], bl; int1; jmp esp; 
0x00169d17: add byte ptr [ecx + 0x2f], cl; int1; push dword ptr [eax + edi + 0x2f590001]; int1; jmp esp; 
0x00169d9f: add byte ptr [ecx + 0x30], al; int1; jmp esp; 
0x0006ba37: add byte ptr [ecx + 0x30e82434], cl; ret 0xffff; 
0x00168e5f: add byte ptr [ecx + 0x30ffefde], ah; call 0xdec08e6a; out dx, eax; jmp dword ptr [eax - 0x18]; 
0x0019898f: add byte ptr [ecx + 0x32], bh; clc; call dword ptr [eax]; 
0x00169ec7: add byte ptr [ecx + 0x32], cl; int1; call esp; 
0x0014ad14: add byte ptr [ecx + 0x33e82404], cl; ret 0xffec; 
0x0008766f: add byte ptr [ecx + 0x3518911], cl; pop ebx; ret; 
0x001075ce: add byte ptr [ecx + 0x39e82404], cl; mov edi, edi; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x0016885f: add byte ptr [ecx + 0x40ffed74], dh; ret 0; 
0x000d9a05: add byte ptr [ecx + 0x42e82404], cl; sal ah, cl; jmp dword ptr [esi - 0x70]; 
0x00019498: add byte ptr [ecx + 0x44892414], cl; and al, 8; mov eax, dword ptr [esp + 0x78]; mov dword ptr [esp + 4], eax; call esi; 
0x00118ccf: add byte ptr [ecx + 0x4489243c], cl; and al, 0x28; mov eax, dword ptr [esp + 0x44]; call dword ptr [eax + 0x14]; 
0x00094afd: add byte ptr [ecx + 0x448b0750], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x0009168a: add byte ptr [ecx + 0x448b0750], cl; and al, 8; pop esi; ret; 
0x00094b1d: add byte ptr [ecx + 0x448b0850], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000916aa: add byte ptr [ecx + 0x448b0850], cl; and al, 8; pop esi; ret; 
0x00094bfd: add byte ptr [ecx + 0x448b0f48], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x0009177a: add byte ptr [ecx + 0x448b0f48], cl; and al, 8; pop esi; ret; 
0x00094c1d: add byte ptr [ecx + 0x448b1048], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x0009179a: add byte ptr [ecx + 0x448b1048], cl; and al, 8; pop esi; ret; 
0x0016cc04: add byte ptr [ecx + 0x44940002], bl; stc; jmp dword ptr [eax]; 
0x000fede3: add byte ptr [ecx + 0x44e82404], cl; out 0xff, al; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0008764f: add byte ptr [ecx + 0x4518811], cl; pop ebx; ret; 
0x0008dccf: add byte ptr [ecx + 0x4578817], cl; pop edi; pop esi; pop ebx; ret; 
0x000f1835: add byte ptr [ecx + 0x45c6a045], cl; mov bl, 0x73; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0009f0fd: add byte ptr [ecx + 0x4ae82404], cl; jnp 0x9f0fd; jmp dword ptr [esi - 0x70]; 
0x0011ac96: add byte ptr [ecx + 0x4b83046], cl; add byte ptr [eax], al; add cl, ch; ret 0xfffc; 
0x001100aa: add byte ptr [ecx + 0x4c4833e], cl; pop esi; pop edi; pop ebp; ret; 
0x000c804c: add byte ptr [ecx + 0x4c892434], cl; and al, 8; call dword ptr [ebp - 0x78]; 
0x0006ba17: add byte ptr [ecx + 0x50e82434], cl; ret 0xffff; 
0x000720b9: add byte ptr [ecx + 0x50ff2434], cl; adc byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0008765f: add byte ptr [ecx + 0x51896611], cl; add al, 0x5b; ret; 
0x000e6354: add byte ptr [ecx + 0x5409], bh; mov esi, eax; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000e631b: add byte ptr [ecx + 0x5409], bh; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0011d940: add byte ptr [ecx + 0x54892414], cl; and al, 0x30; mov dword ptr [esp + 4], 0; call dword ptr [eax + 0x14]; 
0x0012b29e: add byte ptr [ecx + 0x5489242c], cl; and al, 4; mov dword ptr [esp + 8], ecx; call dword ptr [eax + 0x40]; 
0x0006b95f: add byte ptr [ecx + 0x54892434], cl; and al, 4; call dword ptr [eax + 0xc]; 
0x0008dcdf: add byte ptr [ecx + 0x57896617], cl; add al, 0x5f; pop esi; pop ebx; ret; 
0x000424e0: add byte ptr [ecx + 0x59cec], al; add byte ptr [ebx + 0x7e800875], cl; inc esi; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x0009c3ed: add byte ptr [ecx + 0x5ae82404], cl; test al, 0xf8; jmp dword ptr [esi - 0x70]; 
0x0008dcbf: add byte ptr [ecx + 0x5b5e5f17], cl; ret; 
0x0008df2f: add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x0007f456: add byte ptr [ecx + 0x5d5f5ed0], cl; ret; 
0x000740b0: add byte ptr [ecx + 0x5d5f5ee8], cl; ret; 
0x000cc20f: add byte ptr [ecx + 0x5d5f5ef8], cl; ret; 
0x0008dcaf: add byte ptr [ecx + 0x5e5fff57], cl; pop ebx; ret; 
0x000d0fe5: add byte ptr [ecx + 0x5f5e5bc8], cl; pop ebp; ret 4; 
0x000db4bc: add byte ptr [ecx + 0x5f5e5bd0], cl; pop ebp; ret 0x1c; 
0x00041712: add byte ptr [ecx + 0x5f5e5bd0], cl; pop ebp; ret; 
0x00120350: add byte ptr [ecx + 0x5f5e5be8], cl; pop ebp; ret 0x10; 
0x0002e520: add byte ptr [ecx + 0x5f5e5be8], cl; pop ebp; ret; 
0x0002bdb8: add byte ptr [ecx + 0x5f5e5bf0], cl; pop ebp; ret; 
0x00023ec5: add byte ptr [ecx + 0x5f5e5bf8], cl; pop ebp; ret; 
0x0006910a: add byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x0007bbe5: add byte ptr [ecx + 0x62e82404], cl; or ch, bh; jmp dword ptr [ebp - 0x7d]; 
0x0010d9df: add byte ptr [ecx + 0x68e82404], cl; xchg eax, ebp; lock dec dword ptr [ebx - 0xf775]; jmp dword ptr [ebp - 0x77]; 
0x000238ae: add byte ptr [ecx + 0x69e82404], cl; pop dword ptr [0x18c48300]; pop ebx; ret; 
0x0004245a: add byte ptr [ecx + 0x6c892414], cl; and al, 8; mov dword ptr [esp + 4], eax; call dword ptr [ecx + 0x1c]; 
0x000917ba: add byte ptr [ecx + 0x70881048], cl; adc al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x0010d8f6: add byte ptr [ecx + 0x71e8243c], cl; adc bh, ch; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x000f5c45: add byte ptr [ecx + 0x72e82434], cl; ret; 
0x0007e53b: add byte ptr [ecx + 0x75], cl; stc; pop esi; ret; 
0x000b8577: add byte ptr [ecx + 0x75d8f7d0], cl; add eax, 0xb8; and byte ptr [ebp - 0x5d], 0x6c; add byte ptr [eax], al; add byte ptr [eax + 0xbe], bh; int 0x80; 
0x0006455f: add byte ptr [ecx + 0x78e82434], cl; ret 0; 
0x00127594: add byte ptr [ecx + 0x7ba5fc1], al; add byte ptr [ebx - 0x1737f], cl; jmp dword ptr [ebp + 3]; 
0x00123ef4: add byte ptr [ecx + 0x7f0ffc1], al; add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp - 0x39]; 
0x00123ed4: add byte ptr [ecx + 0x7f11fc1], al; add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp - 0x39]; 
0x00123df2: add byte ptr [ecx + 0x7f201c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000fc567: add byte ptr [ecx + 0x80], bh; xor esi, esi; xchg ebx, edi; call dword ptr gs:[0x10]; 
0x000fc2b9: add byte ptr [ecx + 0x80b9e8], cl; add byte ptr [eax], al; xor esi, esi; xchg ebx, edi; int 0x80; 
0x000fc1da: add byte ptr [ecx + 0x81], bh; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000b84bc: add byte ptr [ecx + 0x81b9f0], cl; add byte ptr [eax], al; xchg ebx, edi; int 0x80; 
0x000c1f64: add byte ptr [ecx + 0x89cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 0x10; 
0x0012ea68: add byte ptr [ecx + 0x9cac1f0], cl; xor edx, dword ptr gs:[0x18]; call edx; 
0x0012e4b0: add byte ptr [ecx + 0x9cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 0x18; 
0x00105334: add byte ptr [ecx + 0x9dcbfc1], al; add byte ptr [ebx - 0xff7f], cl; jmp dword ptr [ebp + 3]; 
0x0010512f: add byte ptr [ecx + 0x9dec4c3], al; add byte ptr [ecx - 0x76d7db8c], cl; ret 0xeac1; 
0x000fefc4: add byte ptr [ecx + 0xa402fc1], al; add byte ptr [ebx - 0x137f], cl; jmp dword ptr [ebp - 0x75]; 
0x000ea21c: add byte ptr [ecx + 0xacc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003b53d: add byte ptr [ecx + 0xae82404], cl; mov bh, 0xfe; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x000f312e: add byte ptr [ecx + 0xafec5c3], al; add byte ptr [ecx - 0x8fbdb8c], cl; ret 0xff80; 
0x000f307e: add byte ptr [ecx + 0xaff75c3], al; add byte ptr [ecx - 0x8fbdb8c], cl; ret 0xff80; 
0x000f2fbe: add byte ptr [ecx + 0xb0035c3], al; add byte ptr [ecx - 0x8fbdb8c], cl; ret 0xff80; 
0x000f2efe: add byte ptr [ecx + 0xb00f5c3], al; add byte ptr [ecx - 0x8fbdb8c], cl; ret 0xff80; 
0x000f2e3e: add byte ptr [ecx + 0xb01b5c3], al; add byte ptr [ecx - 0x8fbdb8c], cl; ret 0xff80; 
0x000f2d7e: add byte ptr [ecx + 0xb0275c3], al; add byte ptr [ecx - 0x8fbdb8c], cl; ret 0xff80; 
0x000f2cbe: add byte ptr [ecx + 0xb0335c3], al; add byte ptr [ecx - 0x8fbdb8c], cl; ret 0xff80; 
0x000f2c0e: add byte ptr [ecx + 0xb03e5c3], al; add byte ptr [ecx - 0x8fbdb8c], cl; ret 0xff80; 
0x000f2b4e: add byte ptr [ecx + 0xb04a5c3], al; add byte ptr [ecx - 0x8fbdb8c], cl; ret 0xff80; 
0x000f2a8e: add byte ptr [ecx + 0xb0565c3], al; add byte ptr [ecx - 0x8fbdb8c], cl; ret 0xff80; 
0x000f29ce: add byte ptr [ecx + 0xb0625c3], al; add byte ptr [ecx - 0x8fbdb8c], cl; ret 0xff80; 
0x000f290e: add byte ptr [ecx + 0xb06e5c3], al; add byte ptr [ecx - 0x8fbdb8c], cl; ret 0xff80; 
0x000f11f4: add byte ptr [ecx + 0xb1dffc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000f0b23: add byte ptr [ecx + 0xb24d0c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000f06a3: add byte ptr [ecx + 0xb2950c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000f0663: add byte ptr [ecx + 0xb2990c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000f0623: add byte ptr [ecx + 0xb29d0c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000f05e3: add byte ptr [ecx + 0xb2a10c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000f059d: add byte ptr [ecx + 0xb2a56c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000f051d: add byte ptr [ecx + 0xb2ad6c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000f049d: add byte ptr [ecx + 0xb2b56c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000f041d: add byte ptr [ecx + 0xb2bd6c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000f039d: add byte ptr [ecx + 0xb2c56c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000f031d: add byte ptr [ecx + 0xb2cd6c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000f02a3: add byte ptr [ecx + 0xb2d50c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000f0263: add byte ptr [ecx + 0xb2d90c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000f0223: add byte ptr [ecx + 0xb2dd0c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000f01e3: add byte ptr [ecx + 0xb2e10c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000f019d: add byte ptr [ecx + 0xb2e56c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000f0123: add byte ptr [ecx + 0xb2ed0c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000f00dd: add byte ptr [ecx + 0xb2f16c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000f0058: add byte ptr [ecx + 0xb2f9bc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000efff8: add byte ptr [ecx + 0xb2ffbc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000effa4: add byte ptr [ecx + 0xb304fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eff61: add byte ptr [ecx + 0xb3092c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000efee2: add byte ptr [ecx + 0xb3111c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000efe94: add byte ptr [ecx + 0xb315fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000efe54: add byte ptr [ecx + 0xb319fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000efe0c: add byte ptr [ecx + 0xb31e7c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000efdc4: add byte ptr [ecx + 0xb322fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000efd7d: add byte ptr [ecx + 0xb3276c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000efcf0: add byte ptr [ecx + 0xb3303c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000efcb0: add byte ptr [ecx + 0xb3343c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000efc6d: add byte ptr [ecx + 0xb3386c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000efbe0: add byte ptr [ecx + 0xb3413c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000efba5: add byte ptr [ecx + 0xb344ec1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000efafc: add byte ptr [ecx + 0xb34f7c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000efab2: add byte ptr [ecx + 0xb3541c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000efa62: add byte ptr [ecx + 0xb3591c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000efa14: add byte ptr [ecx + 0xb35dfc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef9d0: add byte ptr [ecx + 0xb3623c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef996: add byte ptr [ecx + 0xb365dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef952: add byte ptr [ecx + 0xb36a1c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef902: add byte ptr [ecx + 0xb36f1c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef8b6: add byte ptr [ecx + 0xb373dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef874: add byte ptr [ecx + 0xb377fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef830: add byte ptr [ecx + 0xb37c3c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef7e8: add byte ptr [ecx + 0xb380bc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef7b6: add byte ptr [ecx + 0xb383dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef772: add byte ptr [ecx + 0xb3881c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef720: add byte ptr [ecx + 0xb38d3c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef6dd: add byte ptr [ecx + 0xb3916c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef64c: add byte ptr [ecx + 0xb39a7c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef600: add byte ptr [ecx + 0xb39f3c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef5c0: add byte ptr [ecx + 0xb3a33c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef586: add byte ptr [ecx + 0xb3a6dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef546: add byte ptr [ecx + 0xb3aadc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef504: add byte ptr [ecx + 0xb3aefc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef4c4: add byte ptr [ecx + 0xb3b2fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef484: add byte ptr [ecx + 0xb3b6fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef444: add byte ptr [ecx + 0xb3bafc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef400: add byte ptr [ecx + 0xb3bf3c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef3b8: add byte ptr [ecx + 0xb3c3bc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef35c: add byte ptr [ecx + 0xb3c97c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef314: add byte ptr [ecx + 0xb3cdfc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef2d4: add byte ptr [ecx + 0xb3d1fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef290: add byte ptr [ecx + 0xb3d63c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef256: add byte ptr [ecx + 0xb3d9dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eeffa: add byte ptr [ecx + 0xb3ff9c3], al; add byte ptr [edi + 0x148b8d3], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000eef58: add byte ptr [ecx + 0xb409bc3], al; add byte ptr [edi + 0x147b8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000eef09: add byte ptr [ecx + 0xb40eac1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eed64: add byte ptr [ecx + 0xb428fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eed20: add byte ptr [ecx + 0xb42d3c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eec2c: add byte ptr [ecx + 0xb43c7c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eeab4: add byte ptr [ecx + 0xb453fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eea70: add byte ptr [ecx + 0xb4583c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eea36: add byte ptr [ecx + 0xb45bdc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000edc24: add byte ptr [ecx + 0xb53cfc1], al; add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp - 0x39]; 
0x000ed742: add byte ptr [ecx + 0xb58b1c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ed6f4: add byte ptr [ecx + 0xb58ffc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ed6b2: add byte ptr [ecx + 0xb5941c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ed664: add byte ptr [ecx + 0xb598fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ed626: add byte ptr [ecx + 0xb59cdc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ed5dc: add byte ptr [ecx + 0xb5a17c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ed596: add byte ptr [ecx + 0xb5a5dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ed54c: add byte ptr [ecx + 0xb5aa7c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ed502: add byte ptr [ecx + 0xb5af1c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ed4b4: add byte ptr [ecx + 0xb5b3fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ed476: add byte ptr [ecx + 0xb5b7dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ed42c: add byte ptr [ecx + 0xb5bc7c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eb408: add byte ptr [ecx + 0xb7bebc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eb3d0: add byte ptr [ecx + 0xb7c23c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eb394: add byte ptr [ecx + 0xb7c5fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eb354: add byte ptr [ecx + 0xb7c9fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eb312: add byte ptr [ecx + 0xb7ce1c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eb2c6: add byte ptr [ecx + 0xb7d2dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eb286: add byte ptr [ecx + 0xb7d6dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eb241: add byte ptr [ecx + 0xb7db2c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eb1c6: add byte ptr [ecx + 0xb7e2dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eb184: add byte ptr [ecx + 0xb7e6fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eb13a: add byte ptr [ecx + 0xb7eb9c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eb0b8: add byte ptr [ecx + 0xb7f3bc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eaec7: add byte ptr [ecx + 0xb812cc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0006f436: add byte ptr [ecx + 0xb882], cl; add byte ptr [ebx + 0x9824ac], cl; add byte ptr [eax], al; add esp, 0x9c; ret; 
0x000e9836: add byte ptr [ecx + 0xb97bdc3], al; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xc1]; call dword ptr gs:[0x10]; 
0x000e9804: add byte ptr [ecx + 0xb97efc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e97c4: add byte ptr [ecx + 0xb982fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e9569: add byte ptr [ecx + 0xb9a8ac3], al; add byte ptr [ebx - 0x78f7dbac], cl; sar dword ptr [eax + 0x10f], cl; call dword ptr gs:[0x10]; 
0x000e8510: add byte ptr [ecx + 0xbaae3c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e84d4: add byte ptr [ecx + 0xbab1fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e8490: add byte ptr [ecx + 0xbab63c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e820c: add byte ptr [ecx + 0xbade7c3], al; add byte ptr [edi + 0x58b8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e81d0: add byte ptr [ecx + 0xbae23c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e8196: add byte ptr [ecx + 0xbae5dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e8118: add byte ptr [ecx + 0xbaedbc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e80e6: add byte ptr [ecx + 0xbaf0dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e8070: add byte ptr [ecx + 0xbaf83c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e8030: add byte ptr [ecx + 0xbafc3c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e7ec9: add byte ptr [ecx + 0xbb12ac1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e7e34: add byte ptr [ecx + 0xbb1bfc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e7d64: add byte ptr [ecx + 0xbb28fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e6ce4: add byte ptr [ecx + 0xbc30fc1], al; add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp - 0x39]; 
0x000e6ae6: add byte ptr [ecx + 0xbc50dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e6a79: add byte ptr [ecx + 0xbc57ac3], al; add byte ptr [ebx - 0x78f7dbac], cl; sar dword ptr [eax + 0x60], cl; call dword ptr gs:[0x10]; 
0x000e67e4: add byte ptr [ecx + 0xbc80fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e66ff: add byte ptr [ecx + 0xbc8f4c3], al; add byte ptr [edi + 0x154b8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e660f: add byte ptr [ecx + 0xbc9e4c3], al; add byte ptr [edi + 0x154b8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e65b9: add byte ptr [ecx + 0xbca3ac3], al; add byte ptr [ebx - 0x78f7dbac], cl; sar dword ptr [eax + 0x4b], cl; call dword ptr gs:[0x10]; 
0x000e6579: add byte ptr [ecx + 0xbca7ac3], al; add byte ptr [ebx - 0x78f7dbac], cl; sar dword ptr [eax + 0xbf], cl; call dword ptr gs:[0x10]; 
0x000d63f9: add byte ptr [ecx + 0xbcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000e61b8: add byte ptr [ecx + 0xbce3bc3], al; add byte ptr [edi + 0x36b8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e5f9c: add byte ptr [ecx + 0xbd057c3], al; add byte ptr [edi + 0x36b8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e5e49: add byte ptr [ecx + 0xbd1aac3], al; add byte ptr [ebx - 0x8f7dbbc], cl; ret 0xeff0; 
0x000e5de9: add byte ptr [ecx + 0xbd20ac3], al; add byte ptr [ebx - 0x8f7dbb4], cl; ret 0xeff0; 
0x000e4f38: add byte ptr [ecx + 0xbe0bbc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e14e4: add byte ptr [ecx + 0xc1b0fc1], al; add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp - 0x39]; 
0x000e13bc: add byte ptr [ecx + 0xc1c37c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e136c: add byte ptr [ecx + 0xc1c87c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e0bd0: add byte ptr [ecx + 0xc2423c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e0b66: add byte ptr [ecx + 0xc248dc3], al; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0x12d]; call dword ptr gs:[0x10]; 
0x000e0b30: add byte ptr [ecx + 0xc24c3c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e0ace: add byte ptr [ecx + 0xc2525c3], al; add byte ptr [ebx - 0x78efdb84], cl; fistp qword ptr [eax + 0x131]; call dword ptr gs:[0x10]; 
0x000e0a96: add byte ptr [ecx + 0xc255dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e0a26: add byte ptr [ecx + 0xc25cdc3], al; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0x130]; call dword ptr gs:[0x10]; 
0x000e09f4: add byte ptr [ecx + 0xc25ffc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e0944: add byte ptr [ecx + 0xc26afc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e00c6: add byte ptr [ecx + 0xc2f2dc3], al; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xc6]; call dword ptr gs:[0x10]; 
0x000e0066: add byte ptr [ecx + 0xc2f8dc3], al; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xcf]; call dword ptr gs:[0x10]; 
0x000df700: add byte ptr [ecx + 0xc38f3c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000df6c0: add byte ptr [ecx + 0xc3933c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000df64d: add byte ptr [ecx + 0xc39a6c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000df5d4: add byte ptr [ecx + 0xc3a1fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000df590: add byte ptr [ecx + 0xc3a63c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000df556: add byte ptr [ecx + 0xc3a9dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000df514: add byte ptr [ecx + 0xc3adfc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000df4d0: add byte ptr [ecx + 0xc3b23c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000df1e4: add byte ptr [ecx + 0xc3e0fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000df0b6: add byte ptr [ecx + 0xc3f3dc3], al; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xdd]; call dword ptr gs:[0x10]; 
0x000ded44: add byte ptr [ecx + 0xc42afc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ded06: add byte ptr [ecx + 0xc42edc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000decc1: add byte ptr [ecx + 0xc4332c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000dec41: add byte ptr [ecx + 0xc43b2c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000debc6: add byte ptr [ecx + 0xc442dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000dea81: add byte ptr [ecx + 0xc4572c3], al; add dh, dh; ret 0x8940; 
0x000dea12: add byte ptr [ecx + 0xc45e1c3], al; add byte ptr [eax - 0x20787f32], al; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000de901: add byte ptr [ecx + 0xc46f2c3], al; add dh, dh; ret 0x8940; 
0x000de7a1: add byte ptr [ecx + 0xc4852c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000de6c4: add byte ptr [ecx + 0xc492fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000de5e4: add byte ptr [ecx + 0xc4a0fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000de5a4: add byte ptr [ecx + 0xc4a4fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000de22b: add byte ptr [ecx + 0xc4dc8c3], al; add byte ptr [edi + 0x10db8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000de1cb: add byte ptr [ecx + 0xc4e28c3], al; add byte ptr [edi + 0x10cb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000de194: add byte ptr [ecx + 0xc4e5fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000de154: add byte ptr [ecx + 0xc4e9fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000de03c: add byte ptr [ecx + 0xc4fb7c3], al; add byte ptr [edi + 0x12cb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000dde69: add byte ptr [ecx + 0xc518ac3], al; add byte ptr [ebx - 0x78f3dbac], cl; sar dword ptr [eax + 0xc5], cl; call dword ptr gs:[0x10]; 
0x000dde29: add byte ptr [ecx + 0xc51cac3], al; add byte ptr [ebx - 0x78f3dbac], cl; sar dword ptr [eax + 0xc3], cl; call dword ptr gs:[0x10]; 
0x000ddb34: add byte ptr [ecx + 0xc54bfc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ddac7: add byte ptr [ecx + 0xc552cc3], al; add byte ptr [edi + 0x13eb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000dda8f: add byte ptr [ecx + 0xc5564c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000dda54: add byte ptr [ecx + 0xc559fc1], al; add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp - 0x39]; 
0x00094ec0: add byte ptr [ecx + 0xc5ac3c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000949b5: add byte ptr [ecx + 0xc5fcec1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00094990: add byte ptr [ecx + 0xc5ff3c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00094970: add byte ptr [ecx + 0xc6013c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00094953: add byte ptr [ecx + 0xc6030c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000948b4: add byte ptr [ecx + 0xc604fc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00094926: add byte ptr [ecx + 0xc605dc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00094896: add byte ptr [ecx + 0xc606dc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009490f: add byte ptr [ecx + 0xc6074c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000948f4: add byte ptr [ecx + 0xc608fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00094871: add byte ptr [ecx + 0xc6092c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000948d2: add byte ptr [ecx + 0xc60b1c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00094847: add byte ptr [ecx + 0xc60bcc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009482e: add byte ptr [ecx + 0xc60d5c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009480d: add byte ptr [ecx + 0xc60f6c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000947e9: add byte ptr [ecx + 0xc611ac1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000947cb: add byte ptr [ecx + 0xc6138c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00094748: add byte ptr [ecx + 0xc61bbc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00091596: add byte ptr [ecx + 0xc92edc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00091571: add byte ptr [ecx + 0xc9312c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00091547: add byte ptr [ecx + 0xc933cc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009152e: add byte ptr [ecx + 0xc9355c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009150d: add byte ptr [ecx + 0xc9376c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000914e9: add byte ptr [ecx + 0xc939ac1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000914cb: add byte ptr [ecx + 0xc93b8c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000914af: add byte ptr [ecx + 0xc93d4c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0008f620: add byte ptr [ecx + 0xcb18fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008f53b: add byte ptr [ecx + 0xcb304c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008f528: add byte ptr [ecx + 0xcb317c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008f50c: add byte ptr [ecx + 0xcb333c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008ea15: add byte ptr [ecx + 0xcbd9ac1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008e9f0: add byte ptr [ecx + 0xcbdbfc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008e9d0: add byte ptr [ecx + 0xcbddfc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008e9b3: add byte ptr [ecx + 0xcbdfcc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008e914: add byte ptr [ecx + 0xcbe1bc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0008e986: add byte ptr [ecx + 0xcbe29c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008e96f: add byte ptr [ecx + 0xcbe40c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008e954: add byte ptr [ecx + 0xcbe5bc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008e932: add byte ptr [ecx + 0xcbe7dc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008e840: add byte ptr [ecx + 0xcbeefc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0008e820: add byte ptr [ecx + 0xcbf0fc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0008e7fb: add byte ptr [ecx + 0xcbf34c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0008df20: add byte ptr [ecx + 0xcc72fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008de3b: add byte ptr [ecx + 0xcc8a4c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008de28: add byte ptr [ecx + 0xcc8b7c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008de0c: add byte ptr [ecx + 0xcc8d3c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008d3d5: add byte ptr [ecx + 0xcd27ac1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008d3b0: add byte ptr [ecx + 0xcd29fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008d390: add byte ptr [ecx + 0xcd2bfc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008d373: add byte ptr [ecx + 0xcd2dcc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008d2d4: add byte ptr [ecx + 0xcd2fbc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0008d346: add byte ptr [ecx + 0xcd309c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008d32f: add byte ptr [ecx + 0xcd320c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008d314: add byte ptr [ecx + 0xcd33bc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008d2f2: add byte ptr [ecx + 0xcd35dc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008d210: add byte ptr [ecx + 0xcd3bfc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0008d1f0: add byte ptr [ecx + 0xcd3dfc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0008d1cb: add byte ptr [ecx + 0xcd404c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0014ac3b: add byte ptr [ecx + 0xce82404], cl; ret; 
0x000df43e: add byte ptr [ecx + 0xd], bh; mov edi, ebp; xchg edi, ebx; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0007df60: add byte ptr [ecx + 0xdc5c3c3], al; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x0007dd06: add byte ptr [ecx + 0xdc81dc3], al; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x000c5594: add byte ptr [ecx + 0xdda5fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000c5550: add byte ptr [ecx + 0xddaa3c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000c5510: add byte ptr [ecx + 0xddae3c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000c54c8: add byte ptr [ecx + 0xddb2bc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000c5490: add byte ptr [ecx + 0xddb63c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000c5456: add byte ptr [ecx + 0xddb9dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000c5414: add byte ptr [ecx + 0xddbdfc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000c53d4: add byte ptr [ecx + 0xddc1fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000b9456: add byte ptr [ecx + 0xe9b9dc3], al; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xd3]; call dword ptr gs:[0x10]; 
0x000b93f6: add byte ptr [ecx + 0xe9bfdc3], al; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xd1]; call dword ptr gs:[0x10]; 
0x000b93b8: add byte ptr [ecx + 0xe9c3bc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000b9380: add byte ptr [ecx + 0xe9c73c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000b92c0: add byte ptr [ecx + 0xe9d33c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000b90d9: add byte ptr [ecx + 0xe9f1ac3], al; add byte ptr [ebx - 0x78f7dbac], cl; sar dword ptr [eax + 0xcd], cl; call dword ptr gs:[0x10]; 
0x00171b84: add byte ptr [ecx + 0xe], al; or byte ptr [ebp + 0x50d4202], al; inc ecx; add dword ptr [ebx], 0x78; ret; 
0x00172e3c: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x200e4e02], al; imul ecx, dword ptr [esi], 0x40e4108; ret; 
0x0018575c: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e5902], al; ret; 
0x00189ca0: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e5a02], al; ret; 
0x0017d778: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e5b02], al; ret; 
0x0016f454: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e6102], al; ret; 
0x0019b3ec: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e6e02], al; ret; 
0x00198224: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e6f02], al; ret; 
0x00191708: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e7002], al; ret; 
0x0017d098: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e7202], al; ret; 
0x0017d708: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e7802], al; ret; 
0x00190ff4: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e7a02], al; ret; 
0x0017c920: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e7f02], al; ret; 
0x0018b2d0: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x600e4302], al; push cs; or byte ptr [esi + ecx + 4], al; ret; 
0x00184d70: add byte ptr [ecx + 0xe], bl; or byte ptr [ebx + 0x40e4902], al; ret; 
0x000b85f6: add byte ptr [ecx + 0xea9fdc3], al; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xb]; call dword ptr gs:[0x10]; 
0x000b823d: add byte ptr [ecx + 0xeadb6c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000b81c6: add byte ptr [ecx + 0xeae2dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000b7ef0: add byte ptr [ecx + 0xeb103c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000b7dcc: add byte ptr [ecx + 0xeb227c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000b7d51: add byte ptr [ecx + 0xeb2a2c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000b7bc0: add byte ptr [ecx + 0xeb433c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000b3eea: add byte ptr [ecx + 0xef109c3], al; add byte ptr [edi + 0xdcb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b3e33: add byte ptr [ecx + 0xef1c0c3], al; add byte ptr [edi + 0x8db8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ab3c6: add byte ptr [ecx + 0xf14247c], cl; sahf; ret 0xd129; 
0x000ba1c7: add byte ptr [ecx + 0xf6fe], al; add byte ptr [edi], cl; xchg ah, bl; add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x000ab3b6: add byte ptr [ecx + 0xf7c3dc3], al; add byte ptr [ebx - 0x72feef82], al; mov byte ptr [edi + eax], ch; add byte ptr [ecx + 0xf14247c], cl; sahf; ret 0xd129; 
0x000aaca0: add byte ptr [ecx + 0xf8353c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000aac66: add byte ptr [ecx + 0xf838dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000aac24: add byte ptr [ecx + 0xf83cfc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00105078: add byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x45; ret 0x90c3; 
0x000a84c4: add byte ptr [ecx + 0xfab2fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000a8484: add byte ptr [ecx + 0xfab6fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000a5d5c: add byte ptr [ecx + 0xfc085fe], cl; xchg eax, ebp; ret 0xd589; 
0x000a18dd: add byte ptr [ecx + 0xfcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00029192: add byte ptr [ecx + 0xfcec], al; add byte ptr [ecx - 0x8f6b], cl; jmp dword ptr [ebp - 0x75]; 
0x00131647: add byte ptr [ecx + 0xff289d7], cl; xchg eax, esp; ret 0xd689; 
0x0012fa3e: add byte ptr [ecx + 0xff989ce], cl; cwde; sar dword ptr [edx], 0xf; xchg eax, edx; ret 0xcf89; 
0x0007c799: add byte ptr [ecx + eax + 0x40], dh; pop ebp; pop ebx; pop esi; pop edi; ret; 
0x0007dc74: add byte ptr [ecx + eax + 0x40], dh; pop edi; pop esi; ret; 
0x0007f8f0: add byte ptr [ecx + eax + 0x40], dh; pop edi; ret; 
0x0007d052: add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x001731b3: add byte ptr [ecx + eax - 0x14], cl; jmp dword ptr [ecx]; 
0x00169acf: add byte ptr [ecx + eax*8 - 0x10], al; call dword ptr [eax]; 
0x0017b7d3: add byte ptr [ecx + eax*8], ah; add byte ptr [eax], al; xchg eax, ecx; out dx, eax; call dword ptr [eax]; 
0x0016b37f: add byte ptr [ecx + ebp + 0xf98fff6], dl; add al, byte ptr [eax]; sub dh, dh; call eax; 
0x00179b83: add byte ptr [ecx + ebp*4 + 0x60480000], al; out dx, eax; call dword ptr [eax]; 
0x001727bb: add byte ptr [ecx + ebp*8 - 0x15], dl; jmp dword ptr [ebx]; 
0x0018a14b: add byte ptr [ecx + ebp*8 - 0xc], ah; call dword ptr [eax]; 
0x0018a0b3: add byte ptr [ecx + ebp*8 - 0xc], bl; jmp dword ptr [edx]; 
0x001778ab: add byte ptr [ecx + ebx - 0x11], ah; call dword ptr [esi]; 
0x00194b53: add byte ptr [ecx + ebx*2 + 2], dl; add byte ptr [eax], bh; sub bh, dh; call esi; 
0x00199a1b: add byte ptr [ecx + ebx*2 - 8], ah; jmp dword ptr [ecx]; 
0x00190eeb: add byte ptr [ecx + ebx*4], al; idiv bh; ret; 
0x0018d00b: add byte ptr [ecx + ebx*8 + 1], bl; add byte ptr [ecx - 0x22], ah; cmc; call dword ptr [eax]; 
0x00168b7f: add byte ptr [ecx + ebx*8], al; out dx, al; call eax; 
0x0016b0cf: add byte ptr [ecx + ebx], dl; cmc; call dword ptr [eax]; 
0x0016aa97: add byte ptr [ecx + ecx - 0xc], dh; call dword ptr [eax]; 
0x0018383b: add byte ptr [ecx + ecx*2], al; int1; call dword ptr [edx]; 
0x0016a2ff: add byte ptr [ecx + ecx*4 + 0x6630fff1], al; add dword ptr [eax], eax; mov ah, 0x89; int1; call dword ptr [eax + 0x66]; 
0x00197b1b: add byte ptr [ecx + ecx*4], bl; add al, byte ptr [eax]; nop; aad 0xf7; jmp dword ptr [ebx]; 
0x0016e497: add byte ptr [ecx + ecx*8], dl; sti; jmp eax; 
0x0016d86f: add byte ptr [ecx + edi*2], ah; cli; call eax; 
0x0016c37f: add byte ptr [ecx + edi*2], dl; clc; call dword ptr [eax]; 
0x001699a7: add byte ptr [ecx + edi*4 - 0x10], al; call dword ptr [eax + 0x2f]; 
0x00191aab: add byte ptr [ecx + edi*4 - 0xa], ah; call dword ptr [ecx]; 
0x0017ab73: add byte ptr [ecx + edi*4], dh; add byte ptr [eax], ch; mov gs, edi; call dword ptr [ebx]; 
0x000b3325: add byte ptr [ecx + edx + 0x6b], dh; ret 0x8934; 
0x0016a86f: add byte ptr [ecx + edx*4 - 0xd], dh; inc dword ptr [eax]; mov dword ptr [ecx], 0xf391b400; jmp dword ptr [eax]; 
0x000b9d63: add byte ptr [ecx + edx*4], bh; push cs; add byte ptr [ecx - 0x4c7bd428], cl; sub byte ptr [ebp - 0xf], 0xff; jmp eax; 
0x0016d287: add byte ptr [ecx + edx*8], dh; stc; push dword ptr [eax]; ret 2; 
0x001852e3: add byte ptr [ecx + esi - 0xe], bl; jmp dword ptr [eax]; 
0x0016d84f: add byte ptr [ecx + esi*2 - 6], ah; call eax; 
0x0016a3cf: add byte ptr [ecx + esi*4 - 0xf], ah; inc dword ptr [eax + 0x6a]; add dword ptr [eax], eax; movsb byte ptr es:[edi], byte ptr [esi]; mov cl, 0xf1; jmp dword ptr [eax + 0x6a]; 
0x0016d097: add byte ptr [ecx + esi*4 - 7], ah; jmp dword ptr [eax]; 
0x0016d08f: add byte ptr [ecx + esi*4], ah; stc; ljmp ptr [edi + esi*4 + 2]; add byte ptr [ecx + esi*4 - 7], ah; jmp dword ptr [eax]; 
0x00192d03: add byte ptr [ecx + esi*8 - 0xa], bh; call dword ptr [esi]; 
0x001939bf: add byte ptr [ecx + esi*8], ah; add dword ptr [eax], eax; in al, dx; or bh, dh; call dword ptr [esi]; 
0x00169e17: add byte ptr [ecx + esi], bl; int1; push dword ptr [esi + edi + 0x31290001]; int1; jmp esp; 
0x000311de: add byte ptr [ecx - 0x1617dbfc], cl; dec eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000ff5ae: add byte ptr [ecx - 0x1617dbfc], cl; fincstp; dec dword ptr [ebx - 0xf775]; jmp dword ptr [ebp - 0x75]; 
0x00103d0e: add byte ptr [ecx - 0x17fbdbbc], cl; or cl, ah; dec dword ptr [ebx - 0x76dfdbb4]; ret 0x448b; 
0x001115d7: add byte ptr [ecx - 0x17fbdbbc], cl; outsd dx, dword ptr [esi]; sub edx, esi; dec dword ptr [ebx - 0x12f6d]; jmp dword ptr [ebp - 0x75]; 
0x000d9046: add byte ptr [ecx - 0x17fbdbbc], cl; pushal; ret; 
0x000ea674: add byte ptr [ecx - 0x17fbdbbc], cl; ret 0x5f; 
0x00053673: add byte ptr [ecx - 0x17fbdbbc], cl; ret; 
0x0005243d: add byte ptr [ecx - 0x18f43], cl; jmp dword ptr [ebp - 0x75]; 
0x0004c5b3: add byte ptr [ecx - 0x1cf73], cl; dec dword ptr [ebx - 0x1577d]; jmp dword ptr [ebp - 0x75]; 
0x00097565: add byte ptr [ecx - 0x1d17dbfc], cl; idiv al; jmp dword ptr [esi - 0x70]; 
0x0016884f: add byte ptr [ecx - 0x1f00128c], dl; rol dword ptr [eax], 0; mov eax, dword ptr [0x10ffed74]; ret 0; 
0x000e6069: add byte ptr [ecx - 0x2078dbfc], cl; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0019ca67: add byte ptr [ecx - 0x20ffffff], bh; add eax, 0x1250000; add byte ptr [eax], al; ret; 
0x0018d00f: add byte ptr [ecx - 0x22], ah; cmc; call dword ptr [eax]; 
0x00002403: add byte ptr [ecx - 0x23], al; out 0xa9, al; ret 0xbd07; 
0x0010872e: add byte ptr [ecx - 0x2617dbfc], cl; jns 0x108735; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x000d3b11: add byte ptr [ecx - 0x2744722a], cl; ret; 
0x000d3dfc: add byte ptr [ecx - 0x2844722a], cl; ret; 
0x00064fb8: add byte ptr [ecx - 0x2d00dbfc], cl; add esp, 0x1c; ret; 
0x000d3ce6: add byte ptr [ecx - 0x2e44722a], cl; ret; 
0x0002dd62: add byte ptr [ecx - 0x2f00dbec], cl; add esp, 0x14; pop ebx; pop ebp; ret; 
0x0007d562: add byte ptr [ecx - 0x2f00dbec], cl; add esp, 0x18; pop ebx; ret; 
0x00064ed6: add byte ptr [ecx - 0x2f00dbec], cl; add esp, 0x1c; ret; 
0x000ec950: add byte ptr [ecx - 0x2f00dbec], cl; add esp, 0x28; pop ebx; ret; 
0x00009553: add byte ptr [ecx - 0x2ffffff0], ah; ret 7; 
0x000d3c59: add byte ptr [ecx - 0x3444722a], cl; ret; 
0x00028d0b: add byte ptr [ecx - 0x373e77ab], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr [esp], ecx; call eax; 
0x000283dd: add byte ptr [ecx - 0x373edbc4], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x00023edb: add byte ptr [ecx - 0x373edbec], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x000d3bb0: add byte ptr [ecx - 0x3a44722a], cl; ret; 
0x001186ae: add byte ptr [ecx - 0x3b7cc7ba], cl; xor al, 0x89; rcr byte ptr [esi + 0x5f], 1; ret; 
0x0014ac84: add byte ptr [ecx - 0x3c17dbfc], cl; ret 0xffec; 
0x000d3a45: add byte ptr [ecx - 0x4044722a], cl; ret; 
0x000e85ea: add byte ptr [ecx - 0x4217dbfc], cl; leave; idiv bh; add esp, 0x18; pop ebx; ret; 
0x000fc1a7: add byte ptr [ecx - 0x4609ce35], cl; add byte ptr [eax], 0; add byte ptr [ecx], bh; sal byte ptr [ebp + 0xc], 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00123d3e: add byte ptr [ecx - 0x4617dbfc], cl; mov bl, 0xfb; inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x000d39e4: add byte ptr [ecx - 0x4644722a], cl; ret; 
0x000df443: add byte ptr [ecx - 0x47207811], cl; fld qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002e330: add byte ptr [ecx - 0x4720782f], cl; mov cl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002eeb3: add byte ptr [ecx - 0x47207839], cl; mov cl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f04ee: add byte ptr [ecx - 0x4725763a], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x10], bh; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f03ee: add byte ptr [ecx - 0x4725763a], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x11], bh; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0a8e: add byte ptr [ecx - 0x4725763a], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x12], bh; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f02ee: add byte ptr [ecx - 0x4725763a], cl; add byte ptr [eax], al; add byte ptr [ebx + 0xa], bh; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f056e: add byte ptr [ecx - 0x4725763a], cl; add byte ptr [eax], al; add byte ptr [ebx + 0xb], bh; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f036e: add byte ptr [ecx - 0x4725763a], cl; add byte ptr [eax], al; add byte ptr [ebx + 0xc], bh; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f016e: add byte ptr [ecx - 0x4725763a], cl; add byte ptr [eax], al; add byte ptr [ebx + 3], bh; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f00ae: add byte ptr [ecx - 0x4725763a], cl; add byte ptr [eax], al; add byte ptr [ebx + 5], bh; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f046e: add byte ptr [ecx - 0x4725763a], cl; add byte ptr [eax], al; add byte ptr [ebx + 9], bh; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000ddc47: add byte ptr [ecx - 0x472c7807], cl; push 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0001925b: add byte ptr [ecx - 0x47fbdbbc], cl; ret 0; 
0x0004293a: add byte ptr [ecx - 0x4a75b], cl; jmp dword ptr [ebp - 0x75]; 
0x000b9d67: add byte ptr [ecx - 0x4c7bd428], cl; sub byte ptr [ebp - 0xf], 0xff; jmp eax; 
0x000a1d95: add byte ptr [ecx - 0x4d17dbfc], cl; dec esi; clc; jmp dword ptr [esi - 0x70]; 
0x00173d13: add byte ptr [ecx - 0x4e], ch; in al, dx; call dword ptr [eax]; 
0x00173d43: add byte ptr [ecx - 0x4e], cl; in al, dx; call dword ptr [eax]; 
0x00168554: add byte ptr [ecx - 0x507c0000], dh; in al, dx; jmp dword ptr [eax]; 
0x000d3a34: add byte ptr [ecx - 0x5244722a], cl; ret; 
0x000d3937: add byte ptr [ecx - 0x5844722a], cl; ret; 
0x0014aca2: add byte ptr [ecx - 0x5a17dbfc], cl; ret 0xffec; 
0x000d3b00: add byte ptr [ecx - 0x5e44722a], cl; ret; 
0x0016d1b7: add byte ptr [ecx - 0x5f000639], bh; mov ebp, 0xc7c50002; stc; call eax; 
0x000f3e0e: add byte ptr [ecx - 0x617dbfc], cl; ret 0; 
0x000838ad: add byte ptr [ecx - 0x6517dbfc], cl; xor edi, edx; jmp dword ptr [esi - 0x70]; 
0x000fee8f: add byte ptr [ecx - 0x6717dbcc], cl; in eax, 0xff; inc dword ptr [ebx + 0x5e5b74c4]; ret; 
0x00167968: add byte ptr [ecx - 0x6e5f0004], dl; cld; call dword ptr [eax - 0x6e]; 
0x000cb4b7: add byte ptr [ecx - 0x6f17dbfc], cl; mov bh, 0xf5; call dword ptr [edi + 0x56]; 
0x000f5c28: add byte ptr [ecx - 0x7017dbcc], cl; ret; 
0x000d8739: add byte ptr [ecx - 0x7117dbfc], cl; inc esp; cli; inc dword ptr [ebp + 0x74c289c0]; ret; 
0x0007a487: add byte ptr [ecx - 0x71f7c38], cl; sub eax, 8; pop esi; ret; 
0x000773d4: add byte ptr [ecx - 0x72270810], cl; dec esp; aaa; jmp dword ptr [ecx]; 
0x000fe239: add byte ptr [ecx - 0x72f7dbbc], cl; and dword ptr [esi], 0xffffffca; sti; dec dword ptr [ecx - 0x17fbdbbc]; ret; 
0x0011e239: add byte ptr [ecx - 0x72f7dbbc], cl; cmp dword ptr [ebx - 0x2e], -5; dec dword ptr [ecx - 0x17fbdbbc]; ret; 
0x00056709: add byte ptr [ecx - 0x72fbdbac], cl; push ebp; movsb byte ptr es:[edi], byte ptr [esi]; mov dword ptr [esp], edx; call eax; 
0x000428b1: add byte ptr [ecx - 0x72fbdbac], cl; push ebp; nop; mov dword ptr [esp], edx; call eax; 
0x0004e389: add byte ptr [ecx - 0x72fbdbac], cl; push ebp; pushfd; mov dword ptr [esp], edx; call eax; 
0x0005ba59: add byte ptr [ecx - 0x72fbdbac], cl; xchg eax, esp; and al, 0x90; add dword ptr [eax], 0x24148900; call eax; 
0x000e80ba: add byte ptr [ecx - 0x7425763f], cl; pop esp; and al, 4; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x000e816a: add byte ptr [ecx - 0x7425763f], cl; pop esp; and al, 4; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000deb9a: add byte ptr [ecx - 0x7425763f], cl; pop esp; and al, 4; mov eax, 6; call dword ptr gs:[0x10]; 
0x000f7a7f: add byte ptr [ecx - 0x742a763f], cl; push ebp; or al, 0x8b; inc ecx; or al, 0x39; ret 0xf275; 
0x000c7733: add byte ptr [ecx - 0x74725bb3], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xfffb; 
0x0011cac6: add byte ptr [ecx - 0x74dfdbac], cl; push eax; or byte ptr [ecx - 0x76fbdbb4], cl; add al, 0x24; call dword ptr [edx + 0xc]; 
0x001051c9: add byte ptr [ecx - 0x74efdbbc], cl; xor dword ptr [eax - 1], 0xffffffff; jmp dword ptr [ebp - 0x75]; 
0x00042a12: add byte ptr [ecx - 0x74f7db84], cl; lea esp, dword ptr [ebx + edi*8 - 1]; dec dword ptr [ecx + 0x4c892434]; and al, 4; call dword ptr [eax + 0x1c]; 
0x00042607: add byte ptr [ecx - 0x74f7dbac], cl; push ebp; or al, 0x89; xor al, 0x24; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x0006f5dd: add byte ptr [ecx - 0x74f7dbac], cl; push esp; and al, 0x24; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x20]; 
0x00116254: add byte ptr [ecx - 0x74f7dbac], cl; push esp; and al, 0x28; mov dword ptr [esp], edi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x00067040: add byte ptr [ecx - 0x74f7dbac], cl; push esp; and al, 0x34; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x2c]; 
0x00072505: add byte ptr [ecx - 0x74f7dbb4], cl; dec esp; and al, 0x24; mov dword ptr [esp], eax; mov dword ptr [esp + 4], ecx; call dword ptr [edx + 0x20]; 
0x0007c196: add byte ptr [ecx - 0x74fbdb94], cl; inc esi; and al, 0x89; add al, 0x24; call dword ptr [esi + 0x1c]; 
0x000e1e7a: add byte ptr [ecx - 0x74fbdbac], cl; inc ecx; or al, 0x89; add al, 0x24; call dword ptr [ecx + 0x24]; 
0x000fb891: add byte ptr [ecx - 0x74fbdbac], cl; push esp; and al, 0x20; mov dword ptr [esp], edx; call eax; 
0x000d95ae: add byte ptr [ecx - 0x74fbdbbc], cl; and eax, 0xe; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0xc]; 
0x0010f57e: add byte ptr [ecx - 0x7617dbfc], cl; or edi, edi; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x0003f77f: add byte ptr [ecx - 0x761b1410], cl; ret 0x9066; 
0x00063cd7: add byte ptr [ecx - 0x76bfdbbc], cl; ret 0xfe9; 
0x0010cd06: add byte ptr [ecx - 0x76d3db94], cl; ret 0xcd89; 
0x00105135: add byte ptr [ecx - 0x76d7db8c], cl; ret 0xeac1; 
0x000d6319: add byte ptr [ecx - 0x76d7dbac], cl; ret 0xac8b; 
0x000e0d03: add byte ptr [ecx - 0x76e3dba4], cl; ret; 
0x001092a5: add byte ptr [ecx - 0x76efdbac], cl; xor al, 0x24; call eax; 
0x000a5ccf: add byte ptr [ecx - 0x76f3db8c], cl; insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp], edx; call edi; 
0x000f0faa: add byte ptr [ecx - 0x76f3dba4], cl; ret; 
0x00099305: add byte ptr [ecx - 0x76f3dbb4], cl; inc esp; and al, 4; mov dword ptr [esp], edi; call esi; 
0x00065266: add byte ptr [ecx - 0x76f7db84], cl; insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x00066e6d: add byte ptr [ecx - 0x76f7db84], cl; insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x2c]; 
0x00043ccf: add byte ptr [ecx - 0x76f7db84], cl; push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0011eacf: add byte ptr [ecx - 0x76f7db84], cl; push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 8]; 
0x0006609a: add byte ptr [ecx - 0x76f7db84], cl; xor al, 0x24; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x0003ec1f: add byte ptr [ecx - 0x76f7db8c], cl; adc al, 0x24; call eax; 
0x0006687e: add byte ptr [ecx - 0x76f7db94], cl; adc al, 0x24; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x1c]; 
0x00042ca9: add byte ptr [ecx - 0x76f7dbac], cl; dec esp; and al, 4; mov dword ptr [esp], esi; mov dword ptr [ebp - 0x57c], edx; call dword ptr [eax + 0x1c]; 
0x000478e4: add byte ptr [ecx - 0x76f7dbac], cl; push esp; and al, 0x14; mov dword ptr [esp + 4], eax; mov dword ptr [esp], esi; call dword ptr [ecx + 0x1c]; 
0x0005b997: add byte ptr [ecx - 0x76f7dbac], cl; push esp; and al, 0x18; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x00067c4d: add byte ptr [ecx - 0x76f7dbb4], cl; adc al, 0x24; call eax; 
0x0006ad6d: add byte ptr [ecx - 0x76f7dbb4], cl; dec esp; and al, 0x1c; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x1c]; 
0x00021969: add byte ptr [ecx - 0x76f7dbbc], cl; adc al, 0x24; call dword ptr [ebp]; 
0x0001f66c: add byte ptr [ecx - 0x76f7dbbc], cl; adc al, 0x24; call dword ptr [esi]; 
0x000990f7: add byte ptr [ecx - 0x76f7dbbc], cl; cmp al, 0x24; call esi; 
0x00071675: add byte ptr [ecx - 0x76f7dbbc], cl; insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp], esi; call dword ptr [edx + 0x38]; 
0x0001ec4d: add byte ptr [ecx - 0x76f7dbbc], cl; or al, 0x24; call dword ptr [esi]; 
0x0006d63b: add byte ptr [ecx - 0x76fbdb84], cl; push esp; and al, 8; mov dword ptr [esp], esi; call dword ptr [eax + 0x40]; 
0x0007ba4a: add byte ptr [ecx - 0x76fbdb84], cl; xor al, 0x24; call eax; 
0x0011ce06: add byte ptr [ecx - 0x76fbdb8c], cl; adc al, 0x24; call dword ptr [eax + 0xc]; 
0x0002c66c: add byte ptr [ecx - 0x76fbdb8c], cl; dec byte ptr [ecx + 0x45e82404]; sbb eax, 0x508d0005; add esi, esi; ret 0x6601; 
0x000f7e10: add byte ptr [ecx - 0x76fbdb8c], cl; sub al, 0x24; mov dword ptr [esp + 8], eax; call dword ptr [edi + 0x14]; 
0x00115f2c: add byte ptr [ecx - 0x76fbdbac], cl; add al, 0x24; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x000c8bbb: add byte ptr [ecx - 0x76fbdbac], cl; add al, 0x24; call esi; 
0x000724a6: add byte ptr [ecx - 0x76fbdbac], cl; cmp al, 0x24; call dword ptr [eax + 0xc]; 
0x00111872: add byte ptr [ecx - 0x76fbdbac], cl; cmp al, 0x24; call dword ptr [eax + 4]; 
0x0006d8fa: add byte ptr [ecx - 0x76fbdbac], cl; dec esp; and al, 8; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x0006fad5: add byte ptr [ecx - 0x76fbdbac], cl; inc esp; and al, 8; mov dword ptr [esp], esi; call dword ptr [ecx + 0x40]; 
0x0006db96: add byte ptr [ecx - 0x76fbdbac], cl; sub al, 0x24; call dword ptr [eax + 0x48]; 
0x00112699: add byte ptr [ecx - 0x76fbdbac], cl; xor al, 0x24; call dword ptr [eax + 0x14]; 
0x00066066: add byte ptr [ecx - 0x76fbdbac], cl; xor al, 0x24; call dword ptr [eax + 0x1c]; 
0x00064293: add byte ptr [ecx - 0x76fbdbac], cl; xor al, 0x24; call dword ptr [eax + 0x48]; 
0x0011cdeb: add byte ptr [ecx - 0x76fbdbac], cl; xor al, 0x24; call dword ptr [eax + 0xc]; 
0x0011cc29: add byte ptr [ecx - 0x76fbdbac], cl; xor al, 0x24; call dword ptr [eax]; 
0x0011cb0d: add byte ptr [ecx - 0x76fbdbb4], cl; add al, 0x24; call dword ptr [edx + 0xc]; 
0x0011cb0d: add byte ptr [ecx - 0x76fbdbb4], cl; add al, 0x24; call dword ptr [edx + 0xc]; add esp, 0x4c; ret; 
0x001194ed: add byte ptr [ecx - 0x76fbdbb4], cl; add al, 0x24; mov dword ptr [esp + 0x458], ebp; call dword ptr [edx + 8]; 
0x0006f9e5: add byte ptr [ecx - 0x76fbdbb4], cl; push esp; and al, 8; mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x000729f6: add byte ptr [ecx - 0x76fbdbb4], cl; xor al, 0x24; call dword ptr [eax + 0x18]; 
0x00098f67: add byte ptr [ecx - 0x76fbdbbc], cl; cmp al, 0x24; call esi; 
0x00099695: add byte ptr [ecx - 0x76fbdbbc], cl; cmp al, 0x24; mov dword ptr [esp + 8], edx; call esi; 
0x0007027f: add byte ptr [ecx - 0x76fbdbbc], cl; dec esp; and al, 8; mov dword ptr [esp], esi; call dword ptr [edx + 0x40]; 
0x00067a98: add byte ptr [ecx - 0x76fbdbbc], cl; sub al, 0x24; call edi; 
0x0006bfb5: add byte ptr [ecx - 0x76fbdbbc], cl; xor al, 0x24; call dword ptr [edx + 0x18]; 
0x000df3df: add byte ptr [ecx - 0x781076f4], dh; fistp qword ptr [eax + 0xdd]; call dword ptr gs:[0x10]; 
0x0014acc0: add byte ptr [ecx - 0x7817dbfc], cl; ret 0xffec; 
0x0002f13d: add byte ptr [ecx - 0x78ebdbbc], cl; fistp qword ptr [eax + 0xb2]; call dword ptr gs:[0x10]; 
0x0002e9b4: add byte ptr [ecx - 0x7afbdb8c], cl; ror byte ptr [ecx + 0xf08247c], cl; test byte ptr [ebx - 0xa000000], al; ret 0x8901; 
0x000fc1c0: add byte ptr [ecx - 0x7afc7830], cl; sal byte ptr [ebp - 0x14], 0x5e; pop ebx; pop edx; ret; 
0x00129be7: add byte ptr [ecx - 0x7c73d427], cl; add byte ptr [eax + edi*8 - 1], ch; jmp ecx; 
0x00054306: add byte ptr [ecx - 0x7c878836], cl; ret 0x830f; 
0x0005452d: add byte ptr [ecx - 0x7cad8836], cl; ret 0x830f; 
0x0006d3eb: add byte ptr [ecx - 0x7cf174c6], cl; ret 0x8904; 
0x001189eb: add byte ptr [ecx - 0x7cf5740e], cl; ret 0x8d04; 
0x00055dff: add byte ptr [ecx - 0x7cf57416], cl; ret 0x8d04; 
0x0012817f: add byte ptr [ecx - 0x7cf76ab4], cl; rol byte ptr [ecx], 0x83; ret 0x3b01; 
0x0004a687: add byte ptr [ecx - 0x7cf77717], cl; rol byte ptr [ecx], 0x89; inc esi; adc al, 0x83; ret 0x8301; 
0x0003f940: add byte ptr [ecx - 0x7f], bl; ror dword ptr [edx], 0; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x00029198: add byte ptr [ecx - 0x8f6b], cl; jmp dword ptr [ebp - 0x75]; 
0x000f2914: add byte ptr [ecx - 0x8fbdb8c], cl; ret 0xff80; 
0x0005b871: add byte ptr [ecx - 0x917dbfc], cl; ret; 
0x0007a73e: add byte ptr [ecx - 0x9e7db8c], cl; ret 0x7403; 
0x0017b537: add byte ptr [ecx - 0xb], ah; out dx, eax; call dword ptr [eax]; 
0x0017b567: add byte ptr [ecx - 0xb], al; out dx, eax; call dword ptr [eax]; 
0x000fac7a: add byte ptr [ecx - 0xc76b], cl; dec dword ptr [ecx - 0xcb73]; dec dword ptr [ecx + 0x51e82404]; ret 0xfff1; 
0x0015a7e0: add byte ptr [ecx - 0xd], cl; jmp dword ptr [eax]; 
0x0007c83b: add byte ptr [ecx - 1], bh; cmovb eax, ecx; ret; 
0x00183f33: add byte ptr [ecx*2 + 0x6e580001], dh; int1; jmp dword ptr [edi]; 
0x00177f23: add byte ptr [ecx*4 + 0x28480000], ah; out dx, eax; call edx; 
0x0017bf33: add byte ptr [ecx*8 - 0xc880000], dh; cld; jmp dword ptr [ebx]; 
0x001236e4: add byte ptr [ecx], 0; add byte ptr [ebx - 0xdb43], cl; jmp dword ptr [esi - 0x70]; 
0x00069107: add byte ptr [ecx], 0; add byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x00183f57: add byte ptr [ecx], 3; fiadd word ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x45; ret; 
0x0018ba13: add byte ptr [ecx], 3; or eax, dword ptr [ebx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0016fc97: add byte ptr [ecx], 3; ret 0xa03; 
0x0019ac5b: add byte ptr [ecx], ah; clc; jmp dword ptr [edi]; 
0x0017b597: add byte ptr [ecx], ah; cmc; out dx, eax; call dword ptr [eax]; 
0x0016a7bf: add byte ptr [ecx], ah; lcall ptr [eax]; ret 1; 
0x0007cfa8: add byte ptr [ecx], ah; ret 0x2474; 
0x0015b50b: add byte ptr [ecx], al; adc byte ptr [eax], al; add byte ptr [eax], al; ret 1; 
0x0016929d: add byte ptr [ecx], al; add bl, dh; and eax, esi; jmp dword ptr [eax + 0x4000100]; 
0x00184981: add byte ptr [ecx], al; add byte ptr [eax + ebx - 0xe], bl; call dword ptr [ecx]; 
0x0010d71f: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ebp - 0x444216d], cl; jmp dword ptr [esi - 0x3f]; 
0x0007af9b: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000fc653: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0011cde7: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbac], cl; xor al, 0x24; call dword ptr [eax + 0xc]; 
0x00142c0b: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edx + 0x32], edi; cmc; call dword ptr [ebx - 0x18]; 
0x0007e767: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [esi + eax - 0x73], dh; or dword ptr [ecx + edx*2 - 7], 0xffffffff; pop ebx; ret; 
0x0007e287: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [esi + eax - 0x73], dh; sbb dword ptr [ebp + ecx - 7], -1; pop ebx; ret; 
0x0007e1e7: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [esi + eax - 0x73], dh; sub dword ptr [edi + edx*4 - 7], -1; pop ebx; ret; 
0x00027211: add byte ptr [ecx], al; add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x000ef68d: add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f1179: add byte ptr [ecx], al; add byte ptr [eax], al; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000c8bb8: add byte ptr [ecx], al; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call esi; 
0x000232a1: add byte ptr [ecx], al; add byte ptr [eax], al; mov ecx, esi; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000aae3e: add byte ptr [ecx], al; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x104]; mov ebp, dword ptr [esp + 0x108]; add esp, 0x10c; ret; 
0x0007d949: add byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; ret; 
0x00026f0d: add byte ptr [ecx], al; add byte ptr [eax], al; ret; 
0x0007ca67: add byte ptr [ecx], al; add byte ptr [eax], al; sub eax, edx; ret; 
0x00094ff3: add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x0017b5c7: add byte ptr [ecx], al; cmc; out dx, eax; call dword ptr [eax]; 
0x0011a74b: add byte ptr [ecx], al; mov eax, dword ptr [esi + 0x3c]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ecx; call dword ptr [eax + 4]; 
0x0010983d: add byte ptr [ecx], al; mov esi, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x001988d1: add byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00159487: add byte ptr [ecx], al; or eax, 0x73950000; ret 0x48; 
0x00073f90: add byte ptr [ecx], al; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000734c5: add byte ptr [ecx], al; pop ebx; ret; 
0x000a9a2d: add byte ptr [ecx], al; ret 0x9389; 
0x000431cc: add byte ptr [ecx], al; ret 0x9589; 
0x000d5d0a: add byte ptr [ecx], al; ret 0xb48b; 
0x0010bf77: add byte ptr [ecx], al; ret 0xb70f; 
0x000c3231: add byte ptr [ecx], al; ret 0xc083; 
0x0006de27: add byte ptr [ecx], al; ret 0xc101; 
0x0006a35e: add byte ptr [ecx], al; ret 0xd8f7; 
0x0002da0f: add byte ptr [ecx], al; ror dword ptr [ecx - 0x74f3dbac], 0x44; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000e20ee: add byte ptr [ecx], al; sar byte ptr [0x1000], 0xf; inc edx; ret 0x4589; 
0x00056d49: add byte ptr [ecx], al; test dword ptr [eax - 0x16000011], esi; ret 0xfffc; 
0x00169e9f: add byte ptr [ecx], al; xor dh, cl; jmp esp; 
0x0006de7f: add byte ptr [ecx], bh; ret 0x4b73; 
0x000419b9: add byte ptr [ecx], bh; ret 0x4f0f; 
0x000b0247: add byte ptr [ecx], bh; ret 0x830f; 
0x000780be: add byte ptr [ecx], bh; ret 0x840f; 
0x00078075: add byte ptr [ecx], bh; ret 0x850f; 
0x000c25de: add byte ptr [ecx], bh; ret 0x860f; 
0x0006fcb1: add byte ptr [ecx], bh; ret 0x870f; 
0x00127ee7: add byte ptr [ecx], bh; ret 0xc789; 
0x000fc43b: add byte ptr [ecx], bh; ret 0xe075; 
0x000fc229: add byte ptr [ecx], bh; ret 0xf75; 
0x0006412c: add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x4589; 
0x0011c4c9: add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc esp; and dword ptr [edi + edi*8 - 0x3b7c0001], 8; pop ebx; ret; 
0x000fc1b0: add byte ptr [ecx], bh; sal byte ptr [ebp + 0xc], 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00119447: add byte ptr [ecx], bh; xchg eax, esp; ret; 
0x0017d31b: add byte ptr [ecx], bl; add byte ptr [eax], al; xor dh, bh; out dx, eax; call dword ptr [edx]; 
0x0016cfaf: add byte ptr [ecx], bl; cmpsb byte ptr [esi], byte ptr es:[edi]; stc; jmp dword ptr [eax - 0x4e]; 
0x00173d73: add byte ptr [ecx], ch; mov dl, 0xec; call dword ptr [eax]; 
0x00038344: add byte ptr [ecx], ch; mov dword ptr [ebp - 0x5a71f001], 0x89fffffe; ret 0x18e9; 
0x0005d39b: add byte ptr [ecx], ch; mov edi, 0xfffef885; jmp dword ptr [ebp]; 
0x000d529d: add byte ptr [ecx], ch; ret 0x28b; 
0x0007029f: add byte ptr [ecx], ch; ret 0x5489; 
0x00021f5a: add byte ptr [ecx], ch; ret 0x6c8b; 
0x00038465: add byte ptr [ecx], ch; ret 0x848d; 
0x0007435f: add byte ptr [ecx], ch; ret 0x933b; 
0x0002aeef: add byte ptr [ecx], ch; ret 0xab89; 
0x00020f0c: add byte ptr [ecx], ch; ret 0xb48b; 
0x0006fb5f: add byte ptr [ecx], ch; ret 0xc601; 
0x000e6aa3: add byte ptr [ecx], ch; ret 0xd089; 
0x000478d3: add byte ptr [ecx], ch; ret 0xd285; 
0x000c31ab: add byte ptr [ecx], ch; ret 0xd501; 
0x000807ec: add byte ptr [ecx], ch; ret 0xd601; 
0x000cd5e6: add byte ptr [ecx], ch; ret 0xd701; 
0x0006c70d: add byte ptr [ecx], ch; ret 0xe0c1; 
0x0007f512: add byte ptr [ecx], ch; ret 0xea01; 
0x0011452f: add byte ptr [ecx], ch; ret 0xea83; 
0x000a87c5: add byte ptr [ecx], ch; ret 0xfa83; 
0x00169e1f: add byte ptr [ecx], ch; xor ecx, esi; jmp esp; 
0x00009f7b: add byte ptr [ecx], cl; add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; ret 0x11; 
0x0002c8b8: add byte ptr [ecx], cl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; add esp, 0x1c; ret; 
0x00068138: add byte ptr [ecx], cl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x00173da3: add byte ptr [ecx], cl; mov dl, 0xec; call dword ptr [eax]; 
0x00031165: add byte ptr [ecx], cl; ret 0x5489; 
0x000a9829: add byte ptr [ecx], cl; ret 0x840f; 
0x000a9f79: add byte ptr [ecx], cl; ret 0x850f; 
0x000650c1: add byte ptr [ecx], cl; ror byte ptr [ecx + 0x14c48306], 1; pop ebx; pop esi; ret; 
0x0002d7d2: add byte ptr [ecx], cl; ror byte ptr [ecx - 0x24f3dbbc], 1; insb byte ptr es:[edi], dx; and al, 4; ret; 
0x000d5cf4: add byte ptr [ecx], dh; imul cl; pop edx; out 0xff, al; inc dword ptr [ecx]; ret 0x13e9; 
0x00126292: add byte ptr [ecx], dh; in eax, dx; call dword ptr [eax + 0x14]; 
0x000d9f3d: add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret 0x14; 
0x000d21a6: add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0007f358: add byte ptr [ecx], dh; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x000fcd2f: add byte ptr [ecx], dh; rol byte ptr [ebx + 0x5f5e14c4], 0x5d; ret; 
0x000cc957: add byte ptr [ecx], dh; rol byte ptr [ebx + 0x5f5e60c4], 0x5d; ret; 
0x000c6ae7: add byte ptr [ecx], dh; rol byte ptr [ecx + 0xc0fefe], cl; add byte ptr [edi], cl; xchg eax, ebp; ret 0x548d; 
0x00117cec: add byte ptr [ecx], dh; rol ecx, -0x20; or byte ptr [ecx], dh; ror byte ptr [ecx + 0x31ead1ca], 1; ret 0xe281; 
0x00119676: add byte ptr [ecx], dh; ror byte ptr [ebp + 0x26b4], 0; add byte ptr [ebx], bh; lodsb al, byte ptr [esi]; ret; 
0x00112eaf: add byte ptr [ecx], dh; ror byte ptr [ebx - 0x74ebdb8c], 0x7c; and al, 0x18; add esp, 0x1c; ret; 
0x000329a2: add byte ptr [ecx], dh; ror byte ptr [ebx - 0x74ebdba4], 0x74; and al, 0x18; add esp, 0x1c; ret; 
0x0011d2c1: add byte ptr [ecx], dh; ror byte ptr [ebx - 0x74efdb8c], 0x7c; and al, 0x14; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0007768e: add byte ptr [ecx], dh; ror byte ptr [ebx - 0x74efdba4], 0x74; and al, 0x14; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0002efec: add byte ptr [ecx], dh; ror byte ptr [ecx - 0x47207839], cl; mov cl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00129977: add byte ptr [ecx], dh; shr bl, 0xf2; lea esi, dword ptr [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x000e9637: add byte ptr [ecx], dh; shr bl, cl; ret 0x748d; 
0x00029fae: add byte ptr [ecx], dh; shr cl, cl; stc; idiv bh; jmp dword ptr [esi - 0x70]; 
0x000980ef: add byte ptr [ecx], dh; test byte ptr [ebx - 0xf76eb3c], 0x5e; pop edi; ret; 
0x00004ff3: add byte ptr [ecx], dh; xor al, 0; add al, al; movsb byte ptr es:[edi], byte ptr [esi]; adc al, byte ptr [eax]; ret 2; 
0x00169d97: add byte ptr [ecx], dh; xor cl, dh; push dword ptr [ebx + edi + 0x30410001]; int1; jmp esp; 
0x0000884f: add byte ptr [ecx], dl; add cl, dh; jmp dword ptr [ebp + 0x56]; 
0x0000837f: add byte ptr [ecx], dl; add cl, dh; jmp dword ptr [edx]; 
0x0000841f: add byte ptr [ecx], dl; add cl, dh; jmp edi; 
0x0016a32f: add byte ptr [ecx], dl; int1; jmp dword ptr [eax + 0x67]; 
0x000ba6b8: add byte ptr [edi + 0x10ab8d3], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000de1d1: add byte ptr [edi + 0x10cb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000de231: add byte ptr [edi + 0x10db8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010fd84: add byte ptr [edi + 0x11], dh; shr edx, 3; mov eax, 2; sub edx, 1; mov byte ptr [ecx + 1], dl; ret; 
0x00007a9b: add byte ptr [edi + 0x12000000], dh; add byte ptr [eax + eax], cl; ret 0xc; 
0x000de042: add byte ptr [edi + 0x12cb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ddacd: add byte ptr [edi + 0x13eb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000eef5e: add byte ptr [edi + 0x147b8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ef000: add byte ptr [edi + 0x148b8d3], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e6615: add byte ptr [edi + 0x154b8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0016d58f: add byte ptr [edi + 0x20fffa0b], ah; xlatb; add al, byte ptr [eax]; mov bh, 0xb; cli; call dword ptr [eax - 0x29]; 
0x0016eaef: add byte ptr [edi + 0x24fffc22], ah; and eax, 0x22a70003; cld; jmp eax; 
0x000f8e5f: add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x77]; 
0x000060f3: add byte ptr [edi + 0x32], ah; add byte ptr [eax], al; and byte ptr [ecx], bl; lldt word ptr [ebx + 0x22000000]; add byte ptr [eax + eax], cl; ret 3; 
0x000e5fa2: add byte ptr [edi + 0x36b8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e8212: add byte ptr [edi + 0x58b8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0016eae7: add byte ptr [edi + 0x58fffc22], ah; adc eax, dword ptr [ebx]; add byte ptr [edi + 0x24fffc22], ah; and eax, 0x22a70003; cld; jmp eax; 
0x00087131: add byte ptr [edi + 0x5b], bl; ret; 
0x001268cf: add byte ptr [edi + 0x5d], bl; ret; 
0x000e0e27: add byte ptr [edi + 0x5e], bl; pop ebx; pop ebp; neg eax; ret; 
0x0008d40d: add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a70a4: add byte ptr [edi + 0x5e], bl; ret; 
0x000c5b41: add byte ptr [edi + 0x5fd8f7fb], al; ret; 
0x000b3e39: add byte ptr [edi + 0x8db8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000fc782: add byte ptr [edi + 0x92b8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002e141: add byte ptr [edi + 0xafb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002e1f4: add byte ptr [edi + 0xb0b8d3], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002e248: add byte ptr [edi + 0xb3b8d3], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00190227: add byte ptr [edi + 0xd1cfff5], al; mov ah, 0x85; cmc; jmp dword ptr [edx]; 
0x000b3ef0: add byte ptr [edi + 0xdcb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0017fff4: add byte ptr [edi + 0xe], dl; or byte ptr [ebx + 0x40e4902], al; ret; 
0x001765f7: add byte ptr [edi + 1], dh; out dx, eax; call dword ptr [eax]; 
0x0000d0ab: add byte ptr [edi + 1], dl; add byte ptr [eax], al; and al, byte ptr [eax]; or al, 0; ret; 
0x00176627: add byte ptr [edi + 1], dl; out dx, eax; call dword ptr [eax]; 
0x000a7224: add byte ptr [edi + 2], bh; neg eax; ret; 
0x00145444: add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebp; pop ebx; ret; 
0x00142bb4: add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebx; ret; 
0x00130644: add byte ptr [edi + 2], dh; neg eax; pop ebp; ret; 
0x001321c4: add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebp; pop ebx; ret; 
0x00131c64: add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebx; ret; 
0x00130354: add byte ptr [edi + 2], dh; neg eax; ret; 
0x0013280a: add byte ptr [edi + 3], bh; neg eax; ret; 
0x0019dcb3: add byte ptr [edi + 6], al; add byte ptr [eax], al; ret; 
0x00001587: add byte ptr [edi + 6], bh; add byte ptr [eax], al; add dl, al; push es; add byte ptr [eax], al; ret; 
0x0010359b: add byte ptr [edi + 7], dh; shr eax, 5; add esp, 0xc; ret; 
0x00132b35: add byte ptr [edi + 8], bh; neg eax; ret; 
0x00149734: add byte ptr [edi + 9], bh; neg eax; pop edi; pop esi; pop ebx; ret; 
0x000a71f4: add byte ptr [edi + 9], bh; neg eax; pop edi; pop esi; ret; 
0x0018add8: add byte ptr [edi + 9], ch; add eax, dword ptr [edx]; push edx; ret; 
0x000bb209: add byte ptr [edi + eax + 0xf], dh; mov dh, 0x51; add al, byte ptr [ebx - 0x377cfe3f]; add ch, bl; ret; 
0x00169bbf: add byte ptr [edi + eax - 0xf], dh; call eax; 
0x001983c3: add byte ptr [edi + eax - 8], bl; call edx; 
0x0018397b: add byte ptr [edi + eax*2 + 1], bh; add byte ptr [eax + 0x4c], dl; int1; jmp dword ptr [edx + 1]; 
0x001694ef: add byte ptr [edi + eax*2 - 0x10], dl; call dword ptr [eax]; 
0x0016b457: add byte ptr [edi + eax*2 - 0xa], dl; dec esp; adc al, 2; add byte ptr [ebp + ecx*2 - 0xa], dl; call dword ptr [eax]; 
0x0016c0c7: add byte ptr [edi + eax*2 - 8], al; jmp dword ptr [eax]; 
0x0016cc57: add byte ptr [edi + eax*2], dh; stc; ljmp ptr [edx + ebx*4 + 0x47940002]; stc; call eax; 
0x0016c4e7: add byte ptr [edi + eax*4], dh; clc; call eax; 
0x0016efa7: add byte ptr [edi + eax*8 + 0x72acfffc], dl; add dword ptr [eax], eax; adc al, 0xdc; cld; jmp eax; 
0x0017be63: add byte ptr [edi + eax*8 - 0x11230000], dh; out dx, eax; call dword ptr [eax]; 
0x0019b983: add byte ptr [edi + eax*8 - 0x2ce7fffe], al; clc; jmp dword ptr [eax]; 
0x0016f91b: add byte ptr [edi + eax], bl; add byte ptr [eax], al; push eax; mov dh, 0xea; call dword ptr [edx]; 
0x00176653: add byte ptr [edi + ebp*2 + 0x1370000], ah; out dx, eax; call dword ptr [eax]; 
0x00174d0f: add byte ptr [edi + ebp*2 - 0x13], ah; call dword ptr [eax]; 
0x0016ee07: add byte ptr [edi + ebp*2 - 0x581f0004], dh; add al, byte ptr [eax]; hlt; outsd dx, dword ptr [esi]; cld; call dword ptr [eax]; 
0x00168307: add byte ptr [edi + ebp*2 - 0x5b430014], dl; add byte ptr [eax], al; add al, 0x70; in al, dx; jmp eax; 
0x0016edff: add byte ptr [edi + ebp*2 - 4], ah; jmp dword ptr [eax]; 
0x001765f3: add byte ptr [edi + ebp*2], al; add byte ptr [edi + 1], dh; out dx, eax; call dword ptr [eax]; 
0x00176623: add byte ptr [edi + ebp*2], dh; add byte ptr [edi + 1], dl; out dx, eax; call dword ptr [eax]; 
0x0016edf7: add byte ptr [edi + ebp*2], dl; cld; lcall ptr [eax + ebx*4 + 0x6f640002]; cld; jmp dword ptr [eax]; 
0x0018a16b: add byte ptr [edi + ebp*4 + 1], ch; add al, al; cli; call dword ptr [eax]; 
0x00168547: add byte ptr [edi + ebp*4 - 0x14], ah; call eax; 
0x00168527: add byte ptr [edi + ebp*4], ah; in al, dx; call dword ptr [eax]; 
0x00168517: add byte ptr [edi + ebp*4], al; in al, dx; push dword ptr [eax + 0x140000af]; scasd eax, dword ptr es:[edi]; in al, dx; jmp eax; 
0x0016851f: add byte ptr [edi + ebp*4], dl; in al, dx; jmp eax; 
0x0018b193: add byte ptr [edi + ebp], bl; cli; call dword ptr [ebp + 2]; 
0x000c6a9e: add byte ptr [edi + ebx*2 - 0x77], dh; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0017511b: add byte ptr [edi + ebx*2], bl; add byte ptr [eax], al; xor ch, bh; in eax, dx; jmp dword ptr [eax + 1]; 
0x001991b3: add byte ptr [edi + ebx*4 + 0x40380002], dh; clc; call dword ptr [ecx]; 
0x0019aa93: add byte ptr [edi + ebx*4], bl; clc; call dword ptr [ebx]; 
0x0016878f: add byte ptr [edi + ebx*8 - 0x14], al; push dword ptr [eax]; mov ebp, 0xdf840000; in al, dx; call dword ptr [eax - 0x43]; 
0x0018d193: add byte ptr [edi + ebx*8 - 0x2307ffff], dl; cmc; call dword ptr [eax]; 
0x0016b0ff: add byte ptr [edi + ebx], dl; cmc; jmp dword ptr [eax]; 
0x001529bf: add byte ptr [edi + ecx + 0xfbf0000], bh; add byte ptr [eax], al; ret 0xf; 
0x0017731b: add byte ptr [edi + ecx - 0x11], ah; call dword ptr [esi + 3]; 
0x0016b02f: add byte ptr [edi + ecx - 0xb], dh; push dword ptr [ebx + edi*8 + 0xfb40001]; cmc; call esp; 
0x0016be5f: add byte ptr [edi + ecx - 8], dl; jmp esp; 
0x0016b6cf: add byte ptr [edi + ecx - 9], al; jmp eax; 
0x0016e007: add byte ptr [edi + ecx*2 + 0x14bcfffb], al; add eax, dword ptr [eax]; aam 0x4f; sti; call esp; 
0x0018b14b: add byte ptr [edi + ecx*2 - 0xb], ah; call dword ptr [ebx]; 
0x001891bb: add byte ptr [edi + ecx*2 - 0xc], dl; call dword ptr [ebx + 1]; 
0x00188173: add byte ptr [edi + ecx*4 + 1], dh; add al, bl; sal bl, 1; call dword ptr [eax]; 
0x0016ba2f: add byte ptr [edi + ecx*4 - 9], al; jmp dword ptr [eax + 0x38]; 
0x0016ba27: add byte ptr [edi + ecx*4], al; idiv edi; dec esp; cmp byte ptr [edx], al; add byte ptr [edi + ecx*4 - 9], al; jmp dword ptr [eax + 0x38]; 
0x0018812b: add byte ptr [edi + ecx*4], ch; add dword ptr [eax], eax; adc al, 0xf3; call dword ptr [eax]; 
0x0016e4ef: add byte ptr [edi + ecx*8 - 5], al; jmp esp; 
0x0016c08f: add byte ptr [edi + edi + 0x5aa4fff8], dl; add al, byte ptr [eax]; in al, 0x40; clc; jmp esp; 
0x00195bab: add byte ptr [edi + edi - 9], al; call dword ptr [ecx]; 
0x0016975f: add byte ptr [edi + edi*2 - 0x10], al; call dword ptr [eax + 0x20]; 
0x0017a67b: add byte ptr [edi + edi*2 - 0x11], dl; call esp; 
0x00168907: add byte ptr [edi + edi*2 - 0x398b0013], ah; add byte ptr [eax], al; xchg eax, esp; nop; in eax, dx; call eax; 
0x0016e2e7: add byte ptr [edi + edi*2], ah; sti; call esp; 
0x0019710b: add byte ptr [edi + edi*2], cl; add al, byte ptr [eax]; pushal; mov al, 0xf7; call dword ptr [eax]; 
0x00197133: add byte ptr [edi + edi*2], dh; add al, byte ptr [eax]; dec eax; mov cl, 0xf7; jmp dword ptr [esi]; 
0x001686a7: add byte ptr [edi + edi*4 - 0x14], dl; inc esp; mov eax, 0xbf840000; in al, dx; jmp esp; 
0x0016a8c7: add byte ptr [edi + edi*4 - 0xd], al; jmp dword ptr [eax - 0x37]; 
0x0018b123: add byte ptr [edi + edi*4], ah; add dword ptr [eax], eax; sub byte ptr [edi - 0xb], cl; call dword ptr [ebx]; 
0x0016ac4f: add byte ptr [edi + edi*4], al; hlt; call eax; 
0x0017b5c3: add byte ptr [edi + edi*4], dl; add byte ptr [eax], al; add ebp, esi; out dx, eax; call dword ptr [eax]; 
0x00172a83: add byte ptr [edi + edi*8 - 0x15], cl; call dword ptr [eax]; 
0x0016e6f7: add byte ptr [edi + edi*8 - 5], dl; call eax; 
0x0016d517: add byte ptr [edi + edi*8 - 7], al; call esp; 
0x0018898b: add byte ptr [edi + edx - 0xc], ah; jmp dword ptr [eax]; 
0x00194e03: add byte ptr [edi + edx*2 + 2], dl; add al, ah; sub esi, edi; call dword ptr [eax]; 
0x001893bb: add byte ptr [edi + edx*2 - 0xc], ah; jmp esi; 
0x0016e07f: add byte ptr [edi + edx*2], ah; sti; jmp esp; 
0x0016c157: add byte ptr [edi + edx*2], dl; clc; jmp dword ptr [eax]; 
0x00198903: add byte ptr [edi + edx*4], al; add al, byte ptr [eax]; cmp byte ptr [eax], ch; clc; call dword ptr [ebx]; 
0x0018c9b3: add byte ptr [edi + edx*8 - 0x3f97ffff], dh; cmc; jmp dword ptr [esi]; 
0x0016b15f: add byte ptr [edi + esi - 0xb], ah; call dword ptr [eax + 1]; 
0x00198e6b: add byte ptr [edi + esi - 8], dl; jmp dword ptr [eax]; 
0x001685f7: add byte ptr [edi + esi*4 - 0x49430014], ah; add byte ptr [eax], al; xor al, 0xb8; in al, dx; jmp eax; 
0x00191a6b: add byte ptr [edi + esi*4 - 0xa], dh; jmp dword ptr [edi]; 
0x00174f53: add byte ptr [edi + esi*8 - 0x13], bl; jmp dword ptr [ebx]; 
0x0016a9df: add byte ptr [edi + esi*8 - 0xd], dh; call eax; 
0x0016b317: add byte ptr [edi + esi*8], dl; cmc; lcall ptr [esp + ecx - 0x81bfffe]; cmc; call eax; 
0x0016c007: add byte ptr [edi + esi], dl; clc; jmp esp; 
0x00133e3f: add byte ptr [edi - 0x18], dl; sub eax, 0x81ffff5f; ret; 
0x00168e87: add byte ptr [edi - 0x1f], dl; out dx, eax; jmp dword ptr [eax]; 
0x00008cf3: add byte ptr [edi - 0x4fffffea], dl; ret; 
0x000e9602: add byte ptr [edi - 0x64], bh; mov ecx, dword ptr [esp + 0x20]; xchg edi, ebx; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x0016e94f: add byte ptr [edi - 0x730003de], ah; lock add dword ptr [eax], eax; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; jmp esp; 
0x0016a7ff: add byte ptr [edi - 0xd], al; call dword ptr [eax - 0x3d]; 
0x0016e9c7: add byte ptr [edi - 0xf0003de], ah; cmp eax, 0x22a70002; cld; call dword ptr [eax + 0x47]; 
0x0016b887: add byte ptr [edi - 9], al; call dword ptr [eax + 0x30]; 
0x00176f1b: add byte ptr [edi*2 + 0x9c00000], bl; out dx, eax; jmp dword ptr [ebx]; 
0x0017b3b3: add byte ptr [edi*4 - 0x9930000], al; out dx, eax; call dword ptr [eax]; 
0x0017b3e3: add byte ptr [edi*4 - 0x9b30000], dh; out dx, eax; call dword ptr [eax]; 
0x00167190: add byte ptr [edi*8 - 0x2d39f01], ch; push dword ptr [eax + 0xfffd2c]; sub eax, 0x2010fffd; std; call eax; 
0x00167018: add byte ptr [edi*8 - 0x2e36f01], bl; jmp eax; 
0x0019c8c7: add byte ptr [edi], bh; add al, 0; add byte ptr [ebx + eax], ah; add byte ptr [eax], al; ret; 
0x00195253: add byte ptr [edi], bh; xor al, 0xf7; call dword ptr [eax]; 
0x00195283: add byte ptr [edi], bl; xor al, 0xf7; call dword ptr [eax]; 
0x00189dd0: add byte ptr [edi], cl; cld; jmp dword ptr [edx]; 
0x0004a1fd: add byte ptr [edi], cl; cwde; ret 0x4489; 
0x0004a5f4: add byte ptr [edi], cl; cwde; ret 0x44f6; 
0x001313b8: add byte ptr [edi], cl; cwde; ret 0xfa85; 
0x000e20a7: add byte ptr [edi], cl; dec edi; ret 0x148d; 
0x00189fc3: add byte ptr [edi], cl; hlt; call esi; 
0x000c91a1: add byte ptr [edi], cl; inc ebp; ret 0x45c7; 
0x000c74c5: add byte ptr [edi], cl; inc ebp; ret 0x70e9; 
0x0004507f: add byte ptr [edi], cl; inc ebp; ret 0x8588; 
0x000578dc: add byte ptr [edi], cl; inc ebp; ret 0x8589; 
0x000c91dd: add byte ptr [edi], cl; inc ebp; ret 0x8ae9; 
0x0012f8d0: add byte ptr [edi], cl; inc ebp; ret 0x99e9; 
0x000678fd: add byte ptr [edi], cl; inc ebp; ret 0xc3f3; 
0x000e2aa0: add byte ptr [edi], cl; inc ebp; ret 0xcfe9; 
0x000e1928: add byte ptr [edi], cl; inc ebp; ret 0xe7e9; 
0x000407a3: add byte ptr [edi], cl; inc ebp; ret 0xfde9; 
0x0002dfca: add byte ptr [edi], cl; inc ebp; rol byte ptr [edi + 0xaeb8df], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e1a18: add byte ptr [edi], cl; inc edx; ret 0x4401; 
0x000e20f5: add byte ptr [edi], cl; inc edx; ret 0x4589; 
0x000f0d17: add byte ptr [edi], cl; inc edx; ret 0xc35e; 
0x0002aca5: add byte ptr [edi], cl; inc edx; ret 0xc801; 
0x00098961: add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x000f9769: add byte ptr [edi], cl; inc esp; ret 0x568d; 
0x000e1e28: add byte ptr [edi], cl; inc esp; ret 0x64e9; 
0x000e380a: add byte ptr [edi], cl; inc esp; ret 0x6c89; 
0x00040063: add byte ptr [edi], cl; inc esp; ret 0x7c83; 
0x00124245: add byte ptr [edi], cl; inc esp; ret 0x8965; 
0x001038af: add byte ptr [edi], cl; inc esp; ret 0xc483; 
0x00041d56: add byte ptr [edi], cl; inc esp; ret 0xc7; 
0x00026f37: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x00026f07: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x100; ret; 
0x00026ed7: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x00026e27: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x200; ret; 
0x00026e87: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x00026da7: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x400; ret; 
0x00026e57: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x00026df7: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x800; ret; 
0x00026fc7: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 1; ret; 
0x00026dd7: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 2; ret; 
0x00026eb7: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 4; ret; 
0x00026d87: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 8; ret; 
0x0007213f: add byte ptr [edi], cl; mov dh, 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x001278ef: add byte ptr [edi], cl; mov dh, 0; add esp, 0x24; pop esi; pop edi; ret; 
0x00025eae: add byte ptr [edi], cl; mov dh, 0; mov byte ptr [ebx + 0x10e1], al; lea eax, dword ptr [ebx + 0x10ac]; pop ebx; ret; 
0x00130824: add byte ptr [edi], cl; mov dh, 0x12; sub eax, edx; ret; 
0x000c2b63: add byte ptr [edi], cl; mov dh, 0x45; add ecx, dword ptr [ebp + 0x2de90475]; idiv bh; dec dword ptr [ebx - 0x15755]; jmp dword ptr [ebp - 0x75]; 
0x00140468: add byte ptr [edi], cl; mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x0013ec5f: add byte ptr [edi], cl; mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; ret; 
0x0013ec6f: add byte ptr [edi], cl; mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x000c1f77: add byte ptr [edi], cl; mov dh, 0xc0; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0xe106c]; jmp ecx; 
0x000ac90f: add byte ptr [edi], cl; mov dh, 0xc0; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0xf66d4]; jmp ecx; 
0x000ac837: add byte ptr [edi], cl; mov dh, 0xc0; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0xf67ac]; jmp ecx; 
0x000d4367: add byte ptr [edi], cl; mov dh, 0xd0; mov ecx, ebx; sub ecx, dword ptr [ebx + edx*4 - 0xcec7c]; jmp ecx; 
0x000cb88f: add byte ptr [edi], cl; mov dh, 0xd2; mov eax, ebx; sub eax, dword ptr [ebx + edx*4 - 0xd7754]; jmp eax; 
0x0012b78f: add byte ptr [edi], cl; mov dh, 2; add esp, 0x14; pop ebx; pop esi; ret; 
0x001403c8: add byte ptr [edi], cl; mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x0013ec0f: add byte ptr [edi], cl; mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x00095124: add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x0009556f: add byte ptr [edi], cl; mov esp, 0x5ff801c0; ret; 
0x0009559f: add byte ptr [edi], cl; mov esp, 0x76c229c0; cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x0009151f: add byte ptr [edi], cl; mov esp, 0x83ce01d2; ret 0x2910; 
0x00097516: add byte ptr [edi], cl; popfd; ret 0xea81; 
0x0004c6f1: add byte ptr [edi], cl; test ah, ch; add byte ptr [eax], al; add dh, dh; ret 0xf80; 
0x00131fde: add byte ptr [edi], cl; test ah, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x000ad99f: add byte ptr [edi], cl; test al, bh; or dword ptr [eax], eax; add dh, dh; ret 0x7518; 
0x0013058f: add byte ptr [edi], cl; test byte ptr [eax + eax - 0x127d0000], bl; or byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x0014919f: add byte ptr [edi], cl; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x0005fc1d: add byte ptr [edi], cl; test byte ptr [eax - 0x1600002b], ch; ret; 
0x0014914f: add byte ptr [edi], cl; test byte ptr [eax - 0x48000000], bh; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0012fd17: add byte ptr [edi], cl; test byte ptr [edi - 0x76ffffff], bl; ret 0xe281; 
0x001302aa: add byte ptr [edi], cl; test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x00088352: add byte ptr [edi], cl; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x001490f6: add byte ptr [edi], cl; test ch, bh; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x000882fc: add byte ptr [edi], cl; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0014913c: add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0013108f: add byte ptr [edi], cl; test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x0013098f: add byte ptr [edi], cl; test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x00132a6c: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000000], edi; ret; 
0x0013113a: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000001], esp; ret; 
0x00130f5a: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000003], eax; ret; 
0x00130a2a: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000008], esi; ret; 
0x00130d84: add byte ptr [edi], cl; test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00047adc: add byte ptr [edi], cl; test dword ptr [ebp - 0x7d000000], esi; call 0x89c4ffea; ret 0xec75; 
0x00130b56: add byte ptr [edi], cl; test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x00130c5e: add byte ptr [edi], cl; test dword ptr [ecx + 0x5b000006], eax; ret; 
0x001329e0: add byte ptr [edi], cl; test dword ptr [ecx + 1], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x0001bd1e: add byte ptr [edi], cl; test dword ptr [ecx - 0x7b000000], esp; sal byte ptr [esi + 0x6b], cl; ret 0x893c; 
0x0014433e: add byte ptr [edi], cl; test dword ptr [ecx - 0x7cfffff2], ebp; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x000d958e: add byte ptr [edi], cl; test dword ptr [edi + 3], ebx; add byte ptr [eax], al; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax]; 
0x00130bd3: add byte ptr [edi], cl; test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x00142c0f: add byte ptr [edi], cl; test dword ptr [edx + 0x32], edi; cmc; call dword ptr [ebx - 0x18]; 
0x0002c68d: add byte ptr [edi], cl; test dword ptr [edx - 0xa000000], edi; ret 0xf02; 
0x001249d7: add byte ptr [edi], cl; test dword ptr [esi + 1], ebx; add byte ptr [eax], al; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax]; 
0x00124b07: add byte ptr [edi], cl; test dword ptr [esi - 0x75000000], ecx; and eax, 0xe; add byte ptr [eax], al; call dword ptr [eax + 0x14]; 
0x001065c8: add byte ptr [edi], cl; test ebp, ebp; add byte ptr [eax], al; add byte ptr [ebx - 0xff7d], cl; jmp dword ptr [ebp + 3]; 
0x0013fd3a: add byte ptr [edi], cl; test ebp, edi; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x000ba1cd: add byte ptr [edi], cl; xchg ah, bl; add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x00043662: add byte ptr [edi], cl; xchg dword ptr [eax - 0x7cfffffc], esi; ret 0x830f; 
0x00031e8d: add byte ptr [edi], cl; xchg dword ptr [ecx + eax], ebp; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x75]; 
0x00060c32: add byte ptr [edi], cl; xchg dword ptr [ecx - 0x7d000000], edx; ret 0x830f; 
0x000bda49: add byte ptr [edi], cl; xchg dword ptr [esi - 0x76fffffc], eax; loope 0xbd9d6; ret 0x831e; 
0x000be1f9: add byte ptr [edi], cl; xchg dword ptr [esi - 0x76fffffc], eax; loope 0xbe186; ret 0x831e; 
0x000aa074: add byte ptr [edi], cl; xchg eax, ebp; ret 0x10e9; 
0x000c6aef: add byte ptr [edi], cl; xchg eax, ebp; ret 0x548d; 
0x000d25ba: add byte ptr [edi], cl; xchg eax, ebp; ret 0x8488; 
0x0012f340: add byte ptr [edi], cl; xchg eax, edx; ret 0xcf89; 
0x00037eaa: add byte ptr [edi], cl; xchg eax, edx; ret 0xd009; 
0x000d4867: add byte ptr [edi], cl; xchg eax, esp; ret 0x3d; 
0x0012f636: add byte ptr [edi], cl; xchg eax, esp; ret 0xc985; 
0x00054e40: add byte ptr [edi], cl; xchg eax, esp; ret 0xd089; 
0x0009e784: add byte ptr [edi], cl; xchg eax, esp; ret 0xed31; 
0x0016e684: add byte ptr [edi], dh; add eax, dword ptr [eax]; and al, 0xf3; sti; jmp dword ptr [eax]; 
0x00176657: add byte ptr [edi], dh; add edi, ebp; call dword ptr [eax]; 
0x00176687: add byte ptr [edi], dl; add edi, ebp; call dword ptr [eax]; 
0x00177efb: add byte ptr [edi], dl; out dx, eax; call dword ptr [edi + 1]; 
0x000081a3: add byte ptr [edi], dl; sub dword ptr [eax], eax; add byte ptr [eax], dl; ret; 
0x0000c6fb: add byte ptr [edx + 0x12000000], bh; add byte ptr [eax + eax], cl; ret 0x59; 
0x0003edf6: add byte ptr [edx + 0x16], al; add byte ptr [ebx - 0x780d76d0], cl; sar dword ptr [eax + 0x25], cl; call dword ptr gs:[0x10]; 
0x00025bdf: add byte ptr [edx + 0x20], dh; mov ecx, dword ptr [ebp - 0x1d4]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0016cd97: add byte ptr [edx + 0x20fff974], dh; mov dword ptr [0x74c20002], eax; stc; call dword ptr [eax - 0x5d]; 
0x0016eba7: add byte ptr [edx + 0x2d], cl; cld; jmp esp; 
0x00169c97: add byte ptr [edx + 0x2e], bl; int1; push dword ptr [ebp + esi + 0x2e6a0001]; int1; jmp esp; 
0x00169c9f: add byte ptr [edx + 0x2e], ch; int1; jmp esp; 
0x000fc1f0: add byte ptr [edx + 0x59], bl; pop ebx; ret; 
0x0008d8ef: add byte ptr [edx + 0x5f178816], cl; pop esi; pop ebx; ret; 
0x00007963: add byte ptr [edx + 0x6000004b], cl; clc; adc dword ptr [eax], eax; ret; 
0x00168e67: add byte ptr [edx + 0x60ffefde], ch; call 0xdeca8e72; out dx, eax; call dword ptr [eax - 0x17]; 
0x000ed3ea: add byte ptr [edx + 0x64], bh; mov eax, dword ptr [ecx - 0xfc]; mov eax, dword ptr [eax + 0x1c]; test eax, eax; cmove eax, edx; ret; 
0x00005613: add byte ptr [edx + 0x70000017], bl; ret; 
0x00184d10: add byte ptr [edx + 0xe], ah; or byte ptr [ebx + 0x40e5f02], al; ret; 
0x0013081f: add byte ptr [edx + 0xe], dh; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x000fc1df: add byte ptr [edx + 1], bh; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00082c9e: add byte ptr [edx + 2], dh; neg eax; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0018e954: add byte ptr [edx + 9], al; add eax, dword ptr [edx]; push edi; ret; 
0x0016d537: add byte ptr [edx + eax - 0x2b130006], al; add al, byte ptr [eax]; hlt; add al, 0xfa; call eax; 
0x001871cb: add byte ptr [edx + eax - 0xd], dh; call dword ptr [esi + 2]; 
0x0019bd1a: add byte ptr [edx + eax - 0xfffffb], cl; inc dword ptr [ecx]; or bh, byte ptr [eax + 5]; ret; 
0x0018343b: add byte ptr [edx + eax*2], bh; add dword ptr [eax], eax; push eax; cmp esi, ecx; jmp edx; 
0x00173413: add byte ptr [edx + eax*2], dl; add byte ptr [eax], al; fadd dword ptr [esi]; in al, dx; jmp dword ptr [edi]; 
0x0016a2c7: add byte ptr [edx + eax*4 + 0x64b8fff1], dl; add dword ptr [eax], eax; and al, 0x83; int1; jmp esp; 
0x00197413: add byte ptr [edx + eax*4], dl; add al, byte ptr [eax]; dec eax; ret; 
0x001686f7: add byte ptr [edx + eax*8 - 0x14], dl; call dword ptr [eax]; 
0x0017b953: add byte ptr [edx + eax*8 - 0xd800000], ah; out dx, eax; call dword ptr [eax]; 
0x0017b8f3: add byte ptr [edx + eax*8], al; add al, al; out dx, eax; call dword ptr [eax]; 
0x0016e707: add byte ptr [edx + eax], ah; cld; call dword ptr [eax + 0x3c]; 
0x0017892b: add byte ptr [edx + ebp - 0x11], al; jmp dword ptr [ebx]; 
0x0016b387: add byte ptr [edx + ebp - 0xa], ah; call eax; 
0x0019851b: add byte ptr [edx + ebp - 5], al; jmp dword ptr [edi]; 
0x001695ff: add byte ptr [edx + ebp*2 - 0x10], bh; call dword ptr [eax]; 
0x001682a7: add byte ptr [edx + ebp*2 - 0x5cd70014], dl; add byte ptr [eax], al; hlt; push -0x14; call dword ptr [eax - 0x5d]; 
0x0016e11f: add byte ptr [edx + ebp*2 - 5], dl; call dword ptr [eax + 0x1a]; 
0x0016d837: add byte ptr [edx + ebp*2 - 6], ah; jmp dword ptr [eax]; 
0x00199c53: add byte ptr [edx + ebp*4 + 2], dl; add al, ch; pop esp; clc; call dword ptr [eax]; 
0x00189c1b: add byte ptr [edx + ebp*4], bl; add dword ptr [eax], eax; push eax; aam 0xf4; call dword ptr [edx]; 
0x0018dc53: add byte ptr [edx + ebp*8 + 1], dl; add byte ptr [eax - 5], bh; cmc; jmp dword ptr [edi]; 
0x00177317: add byte ptr [edx + ebp], bh; add byte ptr [edi + ecx - 0x11], ah; call dword ptr [esi + 3]; 
0x00125263: add byte ptr [edx + ebx - 0x80], dh; jp 0x125291; add byte ptr [esp + edx - 0x7d], dh; ret 0x8328; 
0x0016816f: add byte ptr [edx + ebx*2 - 0x14], al; call dword ptr [eax]; 
0x00194c2b: add byte ptr [edx + ebx*2], ch; add al, byte ptr [eax]; inc eax; sub edi, esi; call dword ptr [ecx]; 
0x00188c8b: add byte ptr [edx + ebx*4 + 0x1d100001], cl; hlt; jmp dword ptr [ecx + 1]; 
0x00188c13: add byte ptr [edx + ebx*4], dl; add dword ptr [eax], eax; test al, 0x1c; hlt; jmp dword ptr [ecx]; 
0x0016d337: add byte ptr [edx + ebx*8], ah; stc; call eax; 
0x00168b9f: add byte ptr [edx + ebx*8], dh; out dx, al; call dword ptr [eax - 0x29]; 
0x00170c0b: add byte ptr [edx + ebx], cl; add byte ptr [eax], al; add byte ptr [edx - 0x15], ah; jmp dword ptr [edx]; 
0x00170c33: add byte ptr [edx + ebx], dh; add byte ptr [eax], al; cmp byte ptr [edx - 0x15], ah; jmp dword ptr [edx]; 
0x001874ab: add byte ptr [edx + ecx - 0xd], ah; jmp dword ptr [ebp + 2]; 
0x0016dfaf: add byte ptr [edx + ecx*2], dl; sti; jmp esp; 
0x00178143: add byte ptr [edx + ecx*4 + 0x26ee0000], dl; sti; call dword ptr [eax]; 
0x0016c527: add byte ptr [edx + ecx*4 - 8], dh; jmp eax; 
0x001780b3: add byte ptr [edx + ecx*4], al; add byte ptr [eax], al; pop esi; daa; sti; call dword ptr [eax]; 
0x001780e3: add byte ptr [edx + ecx*4], dh; add byte ptr [eax], al; daa; sti; call dword ptr [eax]; 
0x0019bca3: add byte ptr [edx + ecx*8 - 0x1f97fffe], ah; clc; jmp dword ptr [ebx]; 
0x0018ac6b: add byte ptr [edx + edi - 0xb], dh; call dword ptr [ebx]; 
0x0016889f: add byte ptr [edx + edi*2 - 0x13], ah; push dword ptr [eax - 0x5bffff3c]; jp 0x168898; call esp; 
0x0016b98f: add byte ptr [edx + edi*2 - 9], ah; call esp; 
0x0016b987: add byte ptr [edx + edi*2], ah; idiv edi; sal byte ptr [edx + eax], 0; jp 0x16b98a; call esp; 
0x0017a44b: add byte ptr [edx + edi*2], dh; out dx, eax; jmp dword ptr [esi]; 
0x0016c39f: add byte ptr [edx + edi*2], dl; clc; jmp dword ptr [eax + 0x69]; 
0x001717db: add byte ptr [edx + edi*4 - 0x15], dh; call dword ptr [ecx]; 
0x000b359f: add byte ptr [edx + edi*4 - 0x7d], dh; mov byte ptr [ecx], 0x83; ret 0x3b34; 
0x0016c717: add byte ptr [edx + edi*4 - 8], ah; push dword ptr [ebx + edi*2]; add al, byte ptr [eax]; add al, 0xbb; clc; jmp dword ptr [eax + 0x7b]; 
0x0017c463: add byte ptr [edx + edi*4], bh; out dx, eax; jmp dword ptr [ebx]; 
0x00063363: add byte ptr [edx + edi*8 + 0x13], dh; add dl, al; call dword ptr [ebx]; 
0x0016f057: add byte ptr [edx + edi*8], ah; std; call esp; 
0x00178df3: add byte ptr [edx + edi], bh; out dx, eax; jmp dword ptr [esi + 2]; 
0x00182c13: add byte ptr [edx + edi], dl; add dword ptr [eax], eax; mov byte ptr [esi], ch; int1; call dword ptr [ebx]; 
0x00065703: add byte ptr [edx + edx - 0x75], dh; inc ebp; sub al, 0x2b; inc ebp; and al, 0x89; ret 0xfac1; 
0x00169bd7: add byte ptr [edx + edx - 0xf], dh; ljmp ptr [eax + 0x7400014a]; adc al, 0xf1; call esp; 
0x0019895b: add byte ptr [edx + edx*4 + 0x32990002], ch; clc; call dword ptr [eax]; 
0x0016843f: add byte ptr [edx + edx*4], al; in al, dx; jmp eax; 
0x0017c48b: add byte ptr [edx + edx*8 - 0x42c00000], cl; out dx, eax; jmp dword ptr [ebx]; 
0x0016dc17: add byte ptr [edx + edx*8 - 6], dh; ljmp ptr [eax]; inc dword ptr [edx]; add byte ptr [ebx + edx*8], dh; cli; call dword ptr [eax - 1]; 
0x0016d2a7: add byte ptr [edx + edx*8 - 7], dh; inc eax; ret 2; 
0x00168b57: add byte ptr [edx + edx*8], al; out dx, al; jmp esp; 
0x0017046b: add byte ptr [edx + edx], ch; add al, dh; xor ebp, ebx; jmp dword ptr [esi]; 
0x0016ab6f: add byte ptr [edx + esi - 0xc], dl; call eax; 
0x0019535b: add byte ptr [edx + esi - 9], al; call ebx; 
0x0016cd87: add byte ptr [edx + esi*2 - 7], ah; jmp eax; 
0x0016f017: add byte ptr [edx + esi*2], al; std; jmp dword ptr [eax]; 
0x0018642b: add byte ptr [edx + esi*2], ch; add dword ptr [eax], eax; shl dh, 0xf2; jmp dword ptr [edx]; 
0x0017a49b: add byte ptr [edx + esi*4 + 0x7ac00000], bl; out dx, eax; call dword ptr [ebp]; 
0x0019a473: add byte ptr [edx + esi*4 + 2], dh; add byte ptr [eax - 0x71], bl; clc; call dword ptr [esi + 1]; 
0x0019a903: add byte ptr [edx + esi*4 + 2], dl; add byte ptr [edx - 8], dh; call dword ptr [eax]; 
0x0016857f: add byte ptr [edx + esi*4 - 0x4cc30014], al; add byte ptr [eax], al; in al, 0xb2; in al, dx; jmp dword ptr [eax - 0x4d]; 
0x0019a933: add byte ptr [edx + esi*4 - 0x5dabfffe], al; clc; call dword ptr [eax]; 
0x0019a963: add byte ptr [edx + esi*4 - 0x5dcbfffe], dh; clc; call dword ptr [eax]; 
0x0018a483: add byte ptr [edx + esi*4 - 0x8d7ffff], al; hlt; call dword ptr [esi]; 
0x0017c373: add byte ptr [edx + esi*4], bh; out dx, eax; jmp dword ptr [edi]; 
0x0016d42f: add byte ptr [edx + esi*8 - 7], ah; push dword ptr [eax + 0x140002ce]; stc; call esp; 
0x0016bcd7: add byte ptr [edx + esi*8 - 9], dh; jmp esp; 
0x00183173: add byte ptr [edx + esi*8], bh; cli; jmp dword ptr [ebx + 1]; 
0x00172463: add byte ptr [edx + esi], ah; add byte ptr [eax], bl; fldpi; call dword ptr [edi]; 
0x001689af: add byte ptr [edx - 0x13], dh; call esp; 
0x00170c10: add byte ptr [edx - 0x15], ah; jmp dword ptr [edx]; 
0x00170c73: add byte ptr [edx - 0x15], bh; jmp dword ptr [edx]; 
0x00167bd7: add byte ptr [edx - 0x15], dh; call eax; 
0x00170c4b: add byte ptr [edx - 0x15], dl; jmp dword ptr [eax]; 
0x00174343: add byte ptr [edx - 0x2b], ch; in al, dx; call dword ptr [eax]; 
0x0016d197: add byte ptr [edx - 0x3a], ch; stc; jmp eax; 
0x0016cff7: add byte ptr [edx - 0x57], cl; stc; call dword ptr [eax]; 
0x0016cfcf: add byte ptr [edx - 0x59], bl; stc; jmp dword ptr [eax]; 
0x000038b7: add byte ptr [edx - 0x6a8b6174], al; and dword ptr [ecx], edi; push cs; pop esp; ret; 
0x0008563f: add byte ptr [edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x00195517: add byte ptr [edx - 0xa], 0xff; sbb al, 0xd; or dword ptr [edx - 0xa], eax; jmp dword ptr [edx]; 
0x00187a43: add byte ptr [edx - 0xd], bl; jmp dword ptr [eax + 3]; 
0x00145724: add byte ptr [edx - 1], bh; cmovbe eax, edx; pop esi; pop ebp; pop ebx; ret; 
0x0016e85f: add byte ptr [edx - 4], al; call esp; 
0x000a609c: add byte ptr [edx - 5], bl; inc dword ptr [ecx + 0x184c4]; add byte ptr [ebx + 0x5e], bl; ret; 
0x0019a907: add byte ptr [edx - 8], dh; call dword ptr [eax]; 
0x0019a937: add byte ptr [edx - 8], dl; call dword ptr [eax]; 
0x0007c432: add byte ptr [edx - 9], al; ret 3; 
0x0016e057: add byte ptr [edx*2 + 0x164cfffb], dl; add eax, dword ptr [eax]; and al, 0x55; sti; jmp dword ptr [eax + 0x16]; 
0x0017cbd3: add byte ptr [edx*8 - 0xc880000], ah; out dx, eax; call dword ptr [eax]; 
0x000060ff: add byte ptr [edx], ah; add byte ptr [eax + eax], cl; ret 3; 
0x0000583f: add byte ptr [edx], ah; add byte ptr [eax + eax], cl; ret; 
0x0000cccf: add byte ptr [edx], ah; add byte ptr [eax + eax], cl; xor byte ptr [ebx], bl; add byte ptr [eax], al; nop; call dword ptr [eax]; 
0x0009d6fc: add byte ptr [edx], ah; add byte ptr [eax], al; add cl, ch; int1; out 0xff, al; jmp dword ptr [esi - 0x70]; 
0x00034a0a: add byte ptr [edx], ah; add byte ptr [eax], al; add cl, ch; ret; 
0x0019e47b: add byte ptr [edx], ah; pop es; add byte ptr [eax], al; syscall; 
0x00159484: add byte ptr [edx], al; add byte ptr [eax], al; add dword ptr [0x73950000], ecx; ret 0x48; 
0x000272c6: add byte ptr [edx], al; add byte ptr [eax], al; mov dword ptr gs:[eax], edx; pop ebx; ret; 
0x0008758c: add byte ptr [edx], al; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00026e2d: add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x000fe882: add byte ptr [edx], al; add esp, 0x18; pop ebx; ret; 
0x0017408c: add byte ptr [edx], al; inc eax; push cs; or byte ptr [ebx + 0x40e5702], al; ret; 
0x000f841f: add byte ptr [edx], al; mov dword ptr [esp + 8], edx; call eax; 
0x000f830e: add byte ptr [edx], al; mov dword ptr [esp], eax; mov dword ptr [esp + 8], ecx; mov ecx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 4], ecx; call edx; 
0x00179c0e: add byte ptr [edx], al; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00002547: add byte ptr [edx], al; xchg dh, ch; inc ebp; ret 0x88ad; 
0x0016ebef: add byte ptr [edx], al; xor ah, bh; ljmp ptr [eax + ecx + 1]; add byte ptr [eax + esi], dl; cld; jmp dword ptr [eax + 9]; 
0x0000c3eb: add byte ptr [edx], bh; add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; ret; 
0x00182c00: add byte ptr [edx], bh; add dword ptr [eax], eax; sub al, 0x5c; cld; call dword ptr [ebx]; 
0x0007ad7e: add byte ptr [edx], bh; cmp eax, -1; cmove eax, edx; add esp, 0x1c; ret; 
0x00172d6f: add byte ptr [edx], bh; in al, dx; call dword ptr [eax]; 
0x00172d9f: add byte ptr [edx], bl; in al, dx; call dword ptr [eax]; 
0x00177d93: add byte ptr [edx], bl; out dx, eax; jmp dword ptr [esi]; 
0x0017a083: add byte ptr [edx], bl; xchg eax, ebp; out dx, eax; call dword ptr [eax]; 
0x0016ac97: add byte ptr [edx], ch; ret 0xfff4; 
0x00191e83: add byte ptr [edx], ch; sal esi, 1; call dword ptr [eax]; 
0x0017a1d3: add byte ptr [edx], ch; xchg eax, esp; out dx, eax; call dword ptr [eax]; 
0x0019a967: add byte ptr [edx], dh; clc; call dword ptr [eax]; 
0x0015a638: add byte ptr [edx], dh; push dword ptr [eax]; xor dh, bl; jmp dword ptr [eax + 0x32]; 
0x0000af6f: add byte ptr [edx], dl; add byte ptr [eax + eax], cl; fsub dword ptr [eax + eax]; add byte ptr [eax], dl; ret; 
0x0000795f: add byte ptr [edx], dl; add byte ptr [eax + eax], cl; mov cl, byte ptr [ebx]; add byte ptr [eax - 8], ah; adc dword ptr [eax], eax; ret; 
0x0000954f: add byte ptr [edx], dl; add byte ptr [eax + eax], cl; mov eax, dword ptr [0xd0000010]; ret 7; 
0x0000819f: add byte ptr [edx], dl; add byte ptr [eax + eax], cl; pop ss; sub dword ptr [eax], eax; add byte ptr [eax], dl; ret; 
0x00009f7f: add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0x11; 
0x0000943f: add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0x38; 
0x0000422f: add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0x52; 
0x0000c6ff: add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0x59; 
0x00007a9f: add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0xc; 
0x0000b59f: add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 8; 
0x0000c3ef: add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret; 
0x0000cf0f: add byte ptr [edx], dl; add byte ptr [eax + eax], cl; xlatb; and al, 0; add byte ptr [eax], dl; ret; 
0x000340cc: add byte ptr [edx], dl; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x0019a997: add byte ptr [edx], dl; clc; call dword ptr [eax]; 
0x001137ae: add byte ptr [esi + 0x17], dh; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x001780b7: add byte ptr [esi + 0x27], bl; sti; call dword ptr [eax]; 
0x001321af: add byte ptr [esi + 0x31], bl; rcr byte ptr [edi + 0x5d], 0x5b; ret; 
0x0016ebff: add byte ptr [esi + 0x31], ch; cld; call eax; 
0x00168097: add byte ptr [esi + 0x34], bh; in al, dx; call esp; 
0x0000282b: add byte ptr [esi + 0x4ea2738b], bl; push ecx; mov edi, 0xa9011612; ret; 
0x0016809f: add byte ptr [esi + 0x4ffec34], cl; cdq; add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; xor al, 0xec; call esp; 
0x0002e6e8: add byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x0014050f: add byte ptr [esi + 0x5f], bl; pop ebx; pop ebp; xor eax, eax; ret; 
0x0002f572: add byte ptr [esi + 0x5f], bl; ret; 
0x0013062f: add byte ptr [esi + 0x5f], bl; xor eax, eax; pop ebp; ret; 
0x0008996f: add byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, dword ptr [edx + 7]; pop edi; ret; 
0x000855af: add byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000857cf: add byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0008768f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000876af: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000876bf: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x0008769f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000876cf: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000876df: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000876ef: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000876ff: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x0008767f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; pop ebx; ret; 
0x0008dcef: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [edi - 1]; pop edi; pop esi; pop ebx; ret; 
0x0008dcff: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [edi]; pop edi; pop esi; pop ebx; ret; 
0x00094c5f: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000917dc: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094c7f: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000917fc: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094b3f: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000916cc: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094b5f: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000916ec: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094b7f: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009170c: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009183c: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009187f: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009189f: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094c9f: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009181c: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00091860: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00132759: add byte ptr [esi + 0xf], ah; cmp byte ptr [eax], al; ret 0xf66; 
0x0012fb7a: add byte ptr [esi + 0xf], ah; out dx, eax; call dword ptr [eax - 0x7cef397d]; ret 0x8910; 
0x0013321f: add byte ptr [esi + 0xf], ah; outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x0013550b: add byte ptr [esi + 0xf], ah; salc; add cl, byte ptr [ebx + 0x5b082444]; ret; 
0x00095481: add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x0009575a: add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0009577f: add byte ptr [esi + 0xf], ah; xlatb; ror dword ptr [edi], -0x43; rol byte ptr [ecx], 0xc8; ret; 
0x00009f8b: add byte ptr [esi + 2], dl; add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; ret 0x11; 
0x0019d5a3: add byte ptr [esi + 6], dh; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x001690df: add byte ptr [esi + eax - 0x10], al; jmp esp; 
0x0007dcbb: add byte ptr [esi + eax - 0x73], dh; cmp dword ptr [edi + edx*8 - 8], -1; pop ebx; ret; 
0x0007d0e7: add byte ptr [esi + eax - 0x73], dh; or dword ptr [ecx + ebp*8 - 0x12], 0xffffffff; pop ebx; ret; 
0x0007e76b: add byte ptr [esi + eax - 0x73], dh; or dword ptr [ecx + edx*2 - 7], 0xffffffff; pop ebx; ret; 
0x0007c3f7: add byte ptr [esi + eax - 0x73], dh; or dword ptr [esi + eax*8 - 0x12], 0xffffffff; pop ebx; ret; 
0x0007e3a7: add byte ptr [esi + eax - 0x73], dh; or dword ptr [esp + edx*2 - 0x12], 0xffffffff; pop ebx; ret; 
0x0007e28b: add byte ptr [esi + eax - 0x73], dh; sbb dword ptr [ebp + ecx - 7], -1; pop ebx; ret; 
0x0007e1eb: add byte ptr [esi + eax - 0x73], dh; sub dword ptr [edi + edx*4 - 7], -1; pop ebx; ret; 
0x000eae26: add byte ptr [esi + eax - 0x77], dh; xchg eax, ecx; pushfd; add dword ptr [eax], eax; add bl, dh; ret; 
0x0016d557: add byte ptr [esi + eax - 6], dl; call dword ptr [eax]; 
0x0018f94b: add byte ptr [esi + eax*2 - 0xa], cl; call dword ptr [eax]; 
0x0018b00b: add byte ptr [esi + eax*2 - 0xb], ah; jmp dword ptr [ebx]; 
0x0016cc37: add byte ptr [esi + eax*2], dh; stc; jmp eax; 
0x0016d957: add byte ptr [esi + eax*4 - 6], al; jmp dword ptr [eax]; 
0x0017bd43: add byte ptr [esi + eax*8 - 0x104f0000], dl; out dx, eax; call dword ptr [eax]; 
0x0017bd13: add byte ptr [esi + eax*8], ah; add cl, dl; out dx, eax; out dx, eax; call dword ptr [eax]; 
0x0017bce3: add byte ptr [esi + eax*8], dh; add byte ptr [eax], al; int1; out dx, eax; out dx, eax; call dword ptr [eax]; 
0x0019eae3: add byte ptr [esi + eax], ch; add byte ptr [eax], al; ret; 
0x0012011b: add byte ptr [esi + ebp + 8], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00168837: add byte ptr [esi + ebp*2 - 0x13], dh; jmp dword ptr [eax - 0x3d]; 
0x001682ef: add byte ptr [esi + ebp*2], al; in al, dx; call dword ptr [eax - 0x5c]; 
0x0016e17f: add byte ptr [esi + ebp*2], dh; sti; jmp eax; 
0x0018a09b: add byte ptr [esi + ebp*4 - 0x16afffff], bl; hlt; call dword ptr [ecx]; 
0x0016a37f: add byte ptr [esi + ebp*4], dl; int1; jmp eax; 
0x0017e07b: add byte ptr [esi + ebp*8], bh; add byte ptr [eax], dl; and al, dh; call dword ptr [edx]; 
0x0018d7e3: add byte ptr [esi + ebp*8], bl; cmc; jmp dword ptr [ebx]; 
0x0017200b: add byte ptr [esi + ebp], cl; add byte ptr [eax], al; ror bl, 0xeb; jmp dword ptr [eax]; 
0x0016e807: add byte ptr [esi + ebx - 4], dl; call dword ptr [eax + 0x40]; 
0x0016d6a7: add byte ptr [esi + ebx], al; cli; jmp dword ptr [eax - 0x20]; 
0x0016beef: add byte ptr [esi + ebx], dl; clc; jmp eax; 
0x0016916f: add byte ptr [esi + ecx - 0x10], dh; jmp dword ptr [eax]; 
0x0016c11f: add byte ptr [esi + ecx*2], al; clc; push dword ptr [eax - 0x1bfffda3]; dec esi; clc; call esp; 
0x0018853b: add byte ptr [esi + ecx*4 + 0x1a850001], cl; hlt; call dword ptr [eax]; 
0x0016b55f: add byte ptr [esi + ecx*4 - 0xa], al; jmp eax; 
0x00168437: add byte ptr [esi + ecx*4], dl; in al, dx; dec dword ptr [eax + 0x40000ab]; xchg eax, edx; in al, dx; jmp eax; 
0x00169bcf: add byte ptr [esi + ecx], al; int1; call dword ptr [eax + 0x4a]; 
0x0017b533: add byte ptr [esi + edi*4 - 0xa9f0000], al; out dx, eax; call dword ptr [eax]; 
0x0017b563: add byte ptr [esi + edi*4 - 0xabf0000], dh; out dx, eax; call dword ptr [eax]; 
0x0018806b: add byte ptr [esi + edi*4 - 0xd], dh; jmp dword ptr [eax]; 
0x0016905f: add byte ptr [esi + edi*8 - 0x11], al; jmp dword ptr [eax - 0xc]; 
0x00172bd3: add byte ptr [esi + edi*8 - 0x15], ch; call dword ptr [eax]; 
0x00169057: add byte ptr [esi + edi*8], dl; out dx, eax; dec dword ptr [esp + esi*8]; add byte ptr [esi + edi*8 - 0x11], al; jmp dword ptr [eax - 0xc]; 
0x0016e077: add byte ptr [esi + edx*2 + 0x16bcfffb], ah; add eax, dword ptr [eax]; and al, 0x57; sti; jmp esp; 
0x0016c14f: add byte ptr [esi + edx*2 - 8], ah; jmp eax; 
0x00174d0b: add byte ptr [esi + edx*2], bl; add byte ptr [edi + ebp*2 - 0x13], ah; call dword ptr [eax]; 
0x00168467: add byte ptr [esi + edx*4], al; in al, dx; call eax; 
0x00198813: add byte ptr [esi + edx*4], dl; add al, byte ptr [eax]; or byte ptr [eax + edi*8], bl; jmp esp; 
0x0017c8b3: add byte ptr [esi + edx*8 - 0x20f80000], dh; out dx, eax; jmp dword ptr [esi]; 
0x0017c80b: add byte ptr [esi + edx*8], cl; add byte ptr [eax], al; nop; fsub st(7), st(0); jmp edx; 
0x0018288b: add byte ptr [esi + esi + 0x28200001], cl; int1; jmp esi; 
0x00172d6b: add byte ptr [esi + esi + 0x7a0000], bh; in al, dx; call dword ptr [eax]; 
0x0016970f: add byte ptr [esi + esi*2 + 0x1e80fff0], dh; add dword ptr [eax], eax; ret; 
0x001696ff: add byte ptr [esi + esi*2 - 0x10], al; jmp eax; 
0x00174deb: add byte ptr [esi + esi*2 - 0x13], ah; jmp dword ptr [ebx]; 
0x0016f933: add byte ptr [esi + esi*4 - 0x16], bl; call dword ptr [edx]; 
0x0016abff: add byte ptr [esi + esi*4], ah; hlt; call dword ptr [eax]; 
0x0019b093: add byte ptr [esi + esi*4], cl; clc; jmp edx; 
0x00167f5f: add byte ptr [esi + esi*8 - 0x15], ah; jmp eax; 
0x0016bfef: add byte ptr [esi + esi], dl; clc; jmp dword ptr [eax + 0x57]; 
0x0016ae8f: add byte ptr [esi - 0x13], cl; hlt; call eax; 
0x0016d387: add byte ptr [esi - 0x17], cl; stc; jmp esp; 
0x00033d0d: add byte ptr [esi - 0x39], ah; inc eax; push cs; add dword ptr [eax], eax; xor eax, eax; ret; 
0x00110cc9: add byte ptr [esi - 0x39], ah; inc ebp; ret 0x301; 
0x0016d19f: add byte ptr [esi - 0x3a], dh; stc; call dword ptr [eax]; 
0x0014e87b: add byte ptr [esi - 0x3ffffff9], bh; pop es; add byte ptr [eax], al; ret 7; 
0x0014e67b: add byte ptr [esi - 0x3ffffffa], bh; push es; add byte ptr [eax], al; ret 6; 
0x00113b45: add byte ptr [esi - 0x43], ah; add dword ptr [eax], eax; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x001529b7: add byte ptr [esi - 0x46fffff1], dh; sldt word ptr [eax]; mov esp, 0xbf00000f; sldt word ptr [eax]; ret 0xf; 
0x0016cfd7: add byte ptr [esi - 0x59], ah; stc; call dword ptr [eax - 0x4d]; 
0x0017a023: add byte ptr [esi - 0x6b], bl; out dx, eax; call dword ptr [eax]; 
0x0017a2c3: add byte ptr [esi - 0x6d], bh; out dx, eax; call dword ptr [eax]; 
0x0017a2f3: add byte ptr [esi - 0x6d], bl; out dx, eax; call dword ptr [eax]; 
0x00168ff7: add byte ptr [esi - 0x7001006], dh; int1; add byte ptr [eax], al; ret 0xeffa; 
0x00024a1d: add byte ptr [esi - 0x70], ah; pop ebx; ret; 
0x000915bf: add byte ptr [esi - 0x75], ah; push ss; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0005ec4c: add byte ptr [esi - 0x77], ah; adc cl, ch; inc ecx; sar bh, 1; inc dword ptr [ebx - 0xbf43]; call dword ptr [eax]; 
0x00094bde: add byte ptr [esi - 0x77], ah; dec eax; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x0009175b: add byte ptr [esi - 0x77], ah; dec eax; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x0008dc9f: add byte ptr [esi - 0x77], ah; pop ss; pop edi; pop esi; pop ebx; ret; 
0x00094ade: add byte ptr [esi - 0x77], ah; push eax; or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x0009166b: add byte ptr [esi - 0x77], ah; push eax; or byte ptr [ebx + 0x5e082444], cl; ret; 
0x00149ad7: add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x00149a77: add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x0019c9c3: add byte ptr [esi - 0x7cffffff], ch; pop es; add byte ptr [eax], al; rol byte ptr [edx], cl; add byte ptr [eax], al; ret 5; 
0x0018c093: add byte ptr [esi - 0xb], cl; jmp eax; 
0x00018964: add byte ptr [esi - 1], dh; test dword ptr [edi + edi*8 - 1], eax; inc dword ptr [ebx - 0xb77b]; jmp dword ptr [eax]; 
0x000d8a18: add byte ptr [esi - 9], ah; ret 0xff80; 
0x0019608b: add byte ptr [esi - 9], al; call dword ptr [ebx]; 
0x0019606b: add byte ptr [esi - 9], al; jmp dword ptr [eax]; 
0x0016cdbf: add byte ptr [esi*2 - 0x5b9b0007], dl; add al, byte ptr [eax]; aam 0x75; stc; jmp dword ptr [eax]; 
0x0002ebc3: add byte ptr [esi], ah; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0016c64f: add byte ptr [esi], al; clc; call esp; 
0x0018887b: add byte ptr [esi], bh; cld; hlt; call dword ptr [eax]; 
0x001780e7: add byte ptr [esi], bh; daa; sti; call dword ptr [eax]; 
0x0017a323: add byte ptr [esi], bh; xchg eax, ebx; out dx, eax; call dword ptr [eax]; 
0x0000422b: add byte ptr [esi], bl; add byte ptr [eax], al; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0x52; 
0x001888ab: add byte ptr [esi], bl; cld; hlt; call dword ptr [eax]; 
0x00167294: add byte ptr [esi], ch; std; jmp dword ptr [eax + 0x2e]; 
0x0017980b: add byte ptr [esi], cl; add byte ptr [eax], al; mov al, 0x57; out dx, eax; call dword ptr [ecx]; 
0x0000a4d3: add byte ptr [esi], cl; pop ecx; add byte ptr [eax], al; nop; ret; 
0x00166de8: add byte ptr [esi], cl; std; jmp eax; 
0x0016b127: add byte ptr [esi], dh; cmc; call eax; 
0x0016cd37: add byte ptr [esi], dh; stc; call dword ptr [eax - 0x5f]; 
0x000e4d88: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x00032818: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; add esp, 0x1c; ret; 
0x000ddfe3: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; add esp, 0xc; ret; 
0x000ddf47: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; add esp, 8; ret; 
0x000e4f83: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0002ed06: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x00192cff: add byte ptr [esp + 1], ah; add byte ptr [ecx + esi*8 - 0xa], bh; call dword ptr [esi]; 
0x00169fc7: add byte ptr [esp + eax*2 - 0xf], dh; call esp; 
0x0016df67: add byte ptr [esp + eax*2 - 5], dl; jmp dword ptr [eax + 0x11]; 
0x001992fb: add byte ptr [esp + eax*2 - 8], ah; call dword ptr [ecx]; 
0x00199323: add byte ptr [esp + eax*2 - 8], ch; jmp dword ptr [eax]; 
0x0019933b: add byte ptr [esp + eax*2 - 8], dh; jmp dword ptr [edi]; 
0x00169f9f: add byte ptr [esp + eax*2], ah; int1; jmp esp; 
0x0016e347: add byte ptr [esp + eax*4], al; sti; call dword ptr [eax + 0x4000323]; test ebx, edi; jmp esp; 
0x0019b67b: add byte ptr [esp + eax*8 + 2], bh; add al, dh; ret 0xfff8; 
0x0016e467: add byte ptr [esp + eax*8], ah; sti; jmp eax; 
0x0016acdf: add byte ptr [esp + eax*8], al; hlt; call eax; 
0x00198313: add byte ptr [esp + eax], bh; clc; jmp dword ptr [esi + 2]; 
0x0016881f: add byte ptr [esp + ebp*2], ah; in eax, dx; jmp dword ptr [eax]; 
0x0018a31b: add byte ptr [esp + ebp*4 + 1], ch; add ah, dl; cmc; hlt; call dword ptr [eax]; 
0x0018a34b: add byte ptr [esp + ebp*4 - 0xa4bffff], bl; hlt; call dword ptr [eax]; 
0x0016a33f: add byte ptr [esp + ebp*4 - 0xf], al; jmp eax; 
0x0018de53: add byte ptr [esp + ebp*8 + 1], dl; add al, ch; std; cmc; call ecx; 
0x00188bbb: add byte ptr [esp + ebx - 0xc], al; jmp dword ptr [ebp]; 
0x00184e8b: add byte ptr [esp + ebx*2 + 0x49b00001], cl; cld; call ebx; 
0x001491d7: add byte ptr [esp + ebx*2 - 0x48], dh; adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x00182c03: add byte ptr [esp + ebx*2], ch; cld; call dword ptr [ebx]; 
0x0016cf27: add byte ptr [esp + ebx*4 - 0x50770007], dh; add al, byte ptr [eax]; in al, 0x9d; stc; call esp; 
0x0016cf1f: add byte ptr [esp + ebx*4], dl; stc; call dword ptr [eax - 0x51]; 
0x0016f03f: add byte ptr [esp + ebx*8 - 3], dh; lcall ptr [eax]; test dword ptr [ecx], eax; add byte ptr [ebx + esi*8], ah; std; jmp eax; 
0x00168bd7: add byte ptr [esp + ebx*8], al; out dx, al; jmp esp; 
0x0016efaf: add byte ptr [esp + ebx*8], dl; cld; jmp eax; 
0x0017db33: add byte ptr [esp + ecx - 0x10], bl; jmp dword ptr [ebp]; 
0x00176ffb: add byte ptr [esp + ecx - 0x11], dh; call dword ptr [ebx + 2]; 
0x001824cb: add byte ptr [esp + ecx*2 - 4], al; call esp; 
0x0001a30f: add byte ptr [esp + ecx*4 + 0x18], bh; add ah, bl; mov word ptr [eax], ds; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x00076f4d: add byte ptr [esp + ecx*4 - 0x75], dh; and dword ptr [esi + edi*8 + 0x4c7ffff], 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [eax]; 
0x0018bad3: add byte ptr [esp + ecx*4 - 0xb], ch; jmp edi; 
0x0016b557: add byte ptr [esp + ecx*4], al; idiv bh; mov byte ptr [edx + eax], bl; add byte ptr [esi + ecx*4 - 0xa], al; jmp eax; 
0x0018be4b: add byte ptr [esp + ecx*8 + 1], cl; add byte ptr [eax - 0x60], dh; cmc; jmp dword ptr [edx]; 
0x0017205b: add byte ptr [esp + ecx*8 - 0x15], ah; call dword ptr [ecx]; 
0x0016e4a7: add byte ptr [esp + ecx*8 - 5], ah; push dword ptr [eax]; sub eax, 0xccb40003; sti; call dword ptr [eax + 0x2d]; 
0x0016d227: add byte ptr [esp + ecx*8], dh; stc; jmp dword ptr [eax - 0x40]; 
0x0016be17: add byte ptr [esp + ecx], dl; clc; call esp; 
0x0016cb1f: add byte ptr [esp + edi - 7], ah; call esp; 
0x001683cf: add byte ptr [esp + edi*2 - 0x14], dh; jmp dword ptr [eax - 0x58]; 
0x0016d8cf: add byte ptr [esp + edi*2 - 6], cl; call eax; 
0x0016ac2f: add byte ptr [esp + edi*4 - 0x1ec3000c], ah; add dword ptr [eax], eax; xor al, 0xbd; hlt; jmp dword ptr [eax - 0x1f]; 
0x0017b353: add byte ptr [esp + edi*4 - 0x9530000], ah; out dx, eax; call dword ptr [eax]; 
0x0017b2f3: add byte ptr [esp + edi*4], al; add ch, ch; imul bh; call dword ptr [eax]; 
0x0017b323: add byte ptr [esp + edi*4], dh; add ch, cl; imul bh; call dword ptr [eax]; 
0x0016b5e7: add byte ptr [esp + edi*8 - 0xa], dh; jmp eax; 
0x0016b5df: add byte ptr [esp + edi*8 - 0xa], dl; inc esp; and dword ptr [edx], eax; add byte ptr [esp + edi*8 - 0xa], dh; jmp eax; 
0x00063307: add byte ptr [esp + edi*8], cl; adc eax, dword ptr [eax]; ret 0x13ff; 
0x001775fb: add byte ptr [esp + edx - 0x11], ah; call esp; 
0x00125269: add byte ptr [esp + edx - 0x7d], dh; ret 0x8328; 
0x00169bdf: add byte ptr [esp + edx - 0xf], dh; call esp; 
0x001940a3: add byte ptr [esp + edx - 9], cl; call dword ptr [edx + 3]; 
0x00174adb: add byte ptr [esp + edx*2], al; in eax, dx; call esp; 
0x001986bb: add byte ptr [esp + edx*4 + 0x15700002], bh; clc; call dword ptr [esi]; 
0x0016ced7: add byte ptr [esp + edx*4], ah; stc; inc dword ptr [eax - 0x3bfffd53]; xchg eax, esp; stc; call eax; 
0x0017cb43: add byte ptr [esp + edx*8 - 0xc280000], dl; out dx, eax; call dword ptr [eax]; 
0x0017cb13: add byte ptr [esp + edx*8], ah; add al, bh; out dx, eax; call dword ptr [eax]; 
0x00168d9f: add byte ptr [esp + edx*8], ah; out dx, eax; call eax; 
0x0017cab3: add byte ptr [esp + edx*8], al; add byte ptr [eax], al; cmp ah, dh; out dx, eax; call dword ptr [eax]; 
0x0018d053: add byte ptr [esp + edx*8], bh; cmc; jmp dword ptr [eax]; 
0x0017c753: add byte ptr [esp + edx*8], bl; out dx, eax; call dword ptr [edi + 2]; 
0x0017cae3: add byte ptr [esp + edx*8], dh; add byte ptr [eax], al; sbb ah, dh; out dx, eax; call dword ptr [eax]; 
0x00187b0b: add byte ptr [esp + esi - 0xd], dh; jmp dword ptr [ecx]; 
0x0016836f: add byte ptr [esp + esi*2 - 0x14], ah; jmp dword ptr [eax - 0x5a]; 
0x00098128: add byte ptr [esp + esi*2], al; push es; lea eax, dword ptr [ebx - 0x595d4]; pop ebx; ret; 
0x00097d08: add byte ptr [esp + esi*2], al; push es; lea eax, dword ptr [ebx - 0x597b4]; pop ebx; ret; 
0x0007d088: add byte ptr [esp + esi*2], al; push es; lea eax, dword ptr [ebx - 0x5a4a4]; pop ebx; ret; 
0x00097e68: add byte ptr [esp + esi*2], al; push es; lea eax, dword ptr [ebx - 0xfbd84]; pop ebx; ret; 
0x00097d48: add byte ptr [esp + esi*2], al; push es; lea eax, dword ptr [ebx - 0xfcaa4]; pop ebx; ret; 
0x0016abf7: add byte ptr [esp + esi*4 - 0x2047000c], dh; add dword ptr [eax], eax; and al, 0xb6; hlt; call dword ptr [eax]; 
0x0016d0df: add byte ptr [esp + esi*4 - 0x46fb0007], al; add al, byte ptr [eax]; mov ah, 0xb4; stc; jmp dword ptr [eax]; 
0x0016d0d7: add byte ptr [esp + esi*4 - 7], al; jmp eax; 
0x0017cf43: add byte ptr [esp + esi*8 - 0x11], ch; call dword ptr [edx]; 
0x0016a607: add byte ptr [esp - 0xe], ah; jmp esp; 
0x0016a577: add byte ptr [esp - 0xe], dh; jmp dword ptr [eax]; 
0x0016dcaf: add byte ptr [esp - 6], dh; call eax; 
0x00053670: add byte ptr cs:[eax], al; add byte ptr [ecx - 0x17fbdbbc], cl; ret; 
0x0014af45: add byte ptr cs:[eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00104fec: add byte ptr cs:[eax], al; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0017200d: add byte ptr cs:[eax], al; ror bl, 0xeb; jmp dword ptr [eax]; 
0x001038d3: add byte ptr cs:[eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000ff6f8: add byte ptr cs:[eax], al; ror edx, 9; xor edx, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000bafbe: add byte ptr es:[eax + 0x74000178], al; or al, byte ptr [ebx - 0x49f0fd40]; or byte ptr [ecx + ecx*8 - 0x3fce2e8b], al; pop esi; ret; 
0x00022f8e: add byte ptr es:[eax + 1], bh; ret; 
0x000bafd6: add byte ptr es:[eax - 0x508ad307], al; pop esi; nop; ret; 
0x000ed296: add byte ptr es:[eax - 0x76d00088], al; ret 0xe74; 
0x000733ce: add byte ptr es:[eax - 1], bh; mov edx, 0xffffffff; ret; 
0x000723ce: add byte ptr es:[eax - 1], bh; ret; 
0x0002ebc4: add byte ptr es:[eax], al; add byte ptr [eax - 1], bh; ret; 
0x0003f763: add byte ptr es:[eax], al; add byte ptr [eax], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009556b: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x00095c7b: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edx; ret; 
0x0009558b: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, dword ptr [eax + edi + 0x20]; pop edi; ret; 
0x00095c9b: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, dword ptr [eax + edx + 0x20]; ret; 
0x0009583b: add byte ptr es:[eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x20]; ret; 
0x0009584b: add byte ptr es:[eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x30]; ret; 
0x001499b4: add byte ptr es:[eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 8]; ret; 
0x00087604: add byte ptr es:[eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x001110f4: add byte ptr es:[eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; mov eax, 1; ret; 
0x001139f4: add byte ptr es:[eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; mov eax, 2; ret; 
0x001298f4: add byte ptr es:[eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x00073444: add byte ptr es:[eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; xor eax, eax; ret; 
0x0008766b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x0008763b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0007b623: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x00129a63: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 2; add esp, 0xc; ret; 
0x0011dc7b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [edi + 0xc]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x0012bd6b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [esi + 0x4c]; mov dword ptr [esp], esi; call dword ptr [eax + 0x44]; 
0x0012998b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x0012992b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0007346b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; ret; 
0x00078783: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, ebx; sub eax, dword ptr [ebx + esi*4 - 0x12a860]; jmp eax; 
0x001499eb: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0009416b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, edi; pop ebx; pop edi; ret; 
0x00147fbb: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x0008829b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, edx; pop ebx; ret; 
0x00123d03: add byte ptr es:[eax], al; add byte ptr [eax], al; mov ecx, esi; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0011f0b3: add byte ptr es:[eax], al; add byte ptr [eax], al; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0x20]; 
0x001140d3: add byte ptr es:[eax], al; add byte ptr [eax], al; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx]; 
0x0012990b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0011325b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov esi, ebx; sub esi, dword ptr [ebx + ecx*4 - 0x8fd88]; jmp esi; 
0x000876bb: add byte ptr es:[eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x0008769b: add byte ptr es:[eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000876cb: add byte ptr es:[eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x00070923: add byte ptr es:[eax], al; add byte ptr [eax], al; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x44]; 
0x000ac833: add byte ptr es:[eax], al; add byte ptr [eax], al; movzx eax, al; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0xf67ac]; jmp ecx; 
0x0013ec1b: add byte ptr es:[eax], al; add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x0009192b: add byte ptr es:[eax], al; add byte ptr [eax], al; pop esi; ret; 
0x00129a73: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x000f723b: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x0009597b: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x00095aeb: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00147487: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xa]; pop edi; ret; 
0x00147497: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xb]; pop edi; ret; 
0x001474a7: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xc]; pop edi; ret; 
0x001474b7: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xd]; pop edi; ret; 
0x001474c7: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xe]; pop edi; ret; 
0x00147417: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 2]; pop edi; ret; 
0x00147427: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 3]; pop edi; ret; 
0x00147437: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 4]; pop edi; ret; 
0x00147447: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 5]; pop edi; ret; 
0x00147457: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 6]; pop edi; ret; 
0x00147467: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 8]; pop edi; ret; 
0x00147477: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 9]; pop edi; ret; 
0x001478e7: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 0xa]; pop edi; ret; 
0x001478d7: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 0xb]; pop edi; ret; 
0x001478c7: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 0xd]; pop edi; ret; 
0x001478b7: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 0xe]; pop edi; ret; 
0x00147957: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 1]; pop edi; ret; 
0x00147947: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 2]; pop edi; ret; 
0x00147937: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 3]; pop edi; ret; 
0x00149c47: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 4]; pop edi; ret; 
0x00147927: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 5]; pop edi; ret; 
0x00147917: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 6]; pop edi; ret; 
0x00147907: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 7]; pop edi; ret; 
0x001478f7: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 9]; pop edi; ret; 
0x00027027: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x00149987: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, ecx; ret; 
0x001474d7: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0012fa86: add byte ptr es:[ebp + 0x30850fff], al; add eax, dword ptr [eax]; add byte ptr [ebp - 0x48a4f45], cl; jmp dword ptr [esi + 0xf]; 
0x0011cdfe: add byte ptr es:[ebp + 0x5302494], cl; add byte ptr [eax], al; mov dword ptr [esp + 4], esi; mov dword ptr [esp], edx; call dword ptr [eax + 0xc]; 
0x00149a6e: add byte ptr es:[ebp - 0x37af037], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x000ba6ae: add byte ptr es:[ebp - 0x45cbdbb4], cl; add dword ptr [eax], eax; add byte ptr [eax], al; xchg ebx, edx; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00098dae: add byte ptr es:[ebp - 0x74788a40], al; push ebp; mov esp, 0x830002c6; ret 0x8901; 
0x000f1776: add byte ptr es:[ebp - 0x74e38b2e], al; mov ebp, 0xfffffbf4; mov ecx, dword ptr [ebp - 0x3fc]; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x001141c6: add byte ptr es:[ebx + 0x137401f8], al; xor eax, eax; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000704ce: add byte ptr es:[ebx + 0x452b0445], cl; or al, 0x89; ret 0xfac1; 
0x00073d7e: add byte ptr es:[ebx + 0x462b0446], cl; or al, 0x89; ret 0xfac1; 
0x000c44ce: add byte ptr es:[ebx + 0x468b2056], cl; and al, 0x39; ret 0x840f; 
0x0006b8a6: add byte ptr es:[ebx + 0x4891c52], cl; and al, 0x29; ret 0xfac1; 
0x0006dbde: add byte ptr es:[ebx + 0x50391050], cl; or al, 0xf; xchg eax, esp; ret 0xb60f; 
0x0012b1be: add byte ptr es:[ebx + 0x548d4c45], cl; and al, 0x30; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x48]; 
0x0007231e: add byte ptr es:[ebx + 0x5c8bfe26], al; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000e9526: add byte ptr es:[ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0011ceb6: add byte ptr es:[ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x00094ece: add byte ptr es:[ebx + 0x5e], bl; ret; 
0x000b3576: add byte ptr es:[ebx + 0x5f5e10c4], al; pop ebp; ret; 
0x00097b76: add byte ptr es:[ebx + 0x5f5e40c4], al; pop ebp; ret; 
0x0011e586: add byte ptr es:[ebx + 0x74890441], cl; and al, 4; mov dword ptr [esp], ecx; call dword ptr [eax + 4]; 
0x000831be: add byte ptr es:[ebx + 0x748b241c], cl; and al, 4; mov edi, dword ptr [esp + 8]; mov ebp, dword ptr [esp + 0xc]; add esp, 0x10; ret; 
0x000a75ae: add byte ptr es:[ebx + 0xff1390a], cl; inc esp; ret 0xc283; 
0x000f299e: add byte ptr es:[ebx - 0x12f7d], cl; jmp dword ptr [ebp - 0x75]; 
0x00040d36: add byte ptr es:[ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x00032b16: add byte ptr es:[ebx - 0x373efbbf], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x000ce62e: add byte ptr es:[ebx - 0x3fcecf3c], al; pop esi; pop edi; pop ebp; ret; 
0x000d770e: add byte ptr es:[ebx - 0x3fceeb3c], al; pop ebx; pop esi; ret; 
0x0012997e: add byte ptr es:[ebx - 0x74fbdbbc], cl; inc eax; pop eax; ret; 
0x0012991e: add byte ptr es:[ebx - 0x74fbdbbc], cl; inc eax; push eax; ret; 
0x000a3dae: add byte ptr es:[ebx - 0x76efdb84], cl; ret 0xff25; 
0x000d62de: add byte ptr es:[ebx - 0x776df3c], al; pop esi; pop edi; pop ebp; ret; 
0x0004b2b6: add byte ptr es:[ebx - 0x7c9bdbbc], cl; call 0x9d8cc1c3; add byte ptr [eax], al; add byte ptr [ebx + 0x1682454], cl; ret 0x5489; 
0x000f2626: add byte ptr es:[ebx - 0xc77b], cl; call ecx; 
0x0004cabe: add byte ptr es:[ebx - 0xf745], cl; dec dword ptr [eax - 0x1a36b]; dec dword ptr [ebx - 0x18b7b]; dec dword ptr [ebx - 0x1bb6b]; jmp dword ptr [ebp - 0x75]; 
0x00122f2e: add byte ptr es:[ebx - 0xf755], cl; jmp dword ptr [ebp - 0x7d]; 
0x0010b27e: add byte ptr es:[ebx - 0xf76d], cl; dec dword ptr [ecx + 0x2a8b65f1]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000fe9b6: add byte ptr es:[ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x75]; 
0x000f07a6: add byte ptr es:[ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x7d]; 
0x0005cc76: add byte ptr es:[ebx - 0xf775], cl; jmp dword ptr [ebp - 0x75]; 
0x000e82fe: add byte ptr es:[ebx - 0xf775], cl; jmp dword ptr [ebp - 0x7d]; 
0x0004e096: add byte ptr es:[ebx - 0xf77d], cl; dec dword ptr [ebx - 0x1af6b]; jmp dword ptr [ebp - 0x77]; 
0x0005cc8e: add byte ptr es:[ebx - 0xf77d], cl; dec dword ptr [ebx - 0xe34b]; jmp dword ptr [ebp - 0x77]; 
0x0005ef66: add byte ptr es:[ebx - 0xf77d], cl; dec dword ptr [ebx - 0xe373]; jmp dword ptr [ebp - 0x77]; 
0x0001a35e: add byte ptr es:[ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x000e1856: add byte ptr es:[ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x00069bbe: add byte ptr es:[ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x7d]; 
0x000354ee: add byte ptr es:[ebx - 0xf77d], cl; push dword ptr [ecx]; div byte ptr [ecx]; jmp dword ptr [ebp - 0x39]; 
0x000c98be: add byte ptr es:[ebx - 0xff73], cl; inc dword ptr [edi + 0x6b8cb]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001004b6: add byte ptr es:[ebx - 0xff7d], cl; jmp dword ptr [ebp - 0x39]; 
0x0010194e: add byte ptr es:[ecx + 0x24548be8], cl; adc byte ptr [ecx], ch; ret 0x7c8d; 
0x000d9c56: add byte ptr es:[ecx + 0x24748bf8], cl; and byte ptr [ebx - 0x74dbdb84], cl; insb byte ptr es:[edi], dx; and al, 0x28; add esp, 0x2c; ret 8; 
0x0008df2e: add byte ptr es:[ecx + 0x5b5e5ff8], cl; ret; 
0x000ddc46: add byte ptr es:[ecx - 0x472c7807], cl; push 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0007a486: add byte ptr es:[ecx - 0x71f7c38], cl; sub eax, 8; pop esi; ret; 
0x0006de7e: add byte ptr es:[ecx], bh; ret 0x4b73; 
0x0012b39e: add byte ptr es:[ecx], bh; ret 0x850f; 
0x00127ee6: add byte ptr es:[ecx], bh; ret 0xc789; 
0x0002aeee: add byte ptr es:[ecx], ch; ret 0xab89; 
0x0006fb5e: add byte ptr es:[ecx], ch; ret 0xc601; 
0x00112eae: add byte ptr es:[ecx], dh; ror byte ptr [ebx - 0x74ebdb8c], 0x7c; and al, 0x18; add esp, 0x1c; ret; 
0x00129976: add byte ptr es:[ecx], dh; shr bl, 0xf2; lea esi, dword ptr [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x000e9636: add byte ptr es:[ecx], dh; shr bl, cl; ret 0x748d; 
0x0008dc7e: add byte ptr es:[edi + 0x5e], bl; pop ebx; ret; 
0x000a71fe: add byte ptr es:[edi + 0x5e], bl; ret; 
0x0007213e: add byte ptr es:[edi], cl; mov dh, 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x001278ee: add byte ptr es:[edi], cl; mov dh, 0; add esp, 0x24; pop esi; pop edi; ret; 
0x0013ec5e: add byte ptr es:[edi], cl; mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; ret; 
0x0013ec6e: add byte ptr es:[edi], cl; mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x000d4366: add byte ptr es:[edi], cl; mov dh, 0xd0; mov ecx, ebx; sub ecx, dword ptr [ebx + edx*4 - 0xcec7c]; jmp ecx; 
0x0012b78e: add byte ptr es:[edi], cl; mov dh, 2; add esp, 0x14; pop ebx; pop esi; ret; 
0x0013ec0e: add byte ptr es:[edi], cl; mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0008563e: add byte ptr es:[edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x0014050e: add byte ptr es:[esi + 0x5f], bl; pop ebx; pop ebp; xor eax, eax; ret; 
0x000876de: add byte ptr es:[esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000876ee: add byte ptr es:[esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000876fe: add byte ptr es:[esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x0002aab5: add byte ptr fs:[eax], al; add byte ptr [eax + ecx - 0x77], dh; ret 0xc8d; 
0x000ed3ec: add byte ptr fs:[eax], al; add byte ptr [ebx - 0xfb7f], cl; dec dword ptr [ebx - 0x3f7ae3c0]; cmove eax, edx; ret; 
0x0018be48: add byte ptr fs:[eax], al; add byte ptr [esp + ecx*8 + 1], cl; add byte ptr [eax - 0x60], dh; cmc; jmp dword ptr [edx]; 
0x00175ac9: add byte ptr fs:[eax], al; or bl, ch; out dx, al; call dword ptr [eax]; 
0x00172d6d: add byte ptr ss:[eax], al; jp 0x172d72; in al, dx; call dword ptr [eax]; 
0x00019932: add byte ptr ss:[eax], al; mov ebx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x00019b3e: add byte ptr ss:[eax], al; pop ebx; ret; 
0x00172d9d: add byte ptr ss:[eax], al; pop edx; add ah, ch; call dword ptr [eax]; 
0x0001af7e: add byte ptr ss:[eax], al; ret; 
0x001730bd: add ch, ah; call dword ptr [eax]; 
0x0016d71f: add ch, ah; sub edx, edi; jmp esp; 
0x0000b59b: add ch, al; add dword ptr [eax], eax; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 8; 
0x00117648: add ch, al; and eax, 0x81000127; ret; 
0x0006e408: add ch, al; ret 0x8dd; 
0x000a6307: add ch, al; ret; 
0x001769e1: add ch, bh; call dword ptr [ecx]; 
0x00166e25: add ch, bh; jmp dword ptr [eax]; 
0x0015afa3: add ch, bh; ljmp ptr [edx]; add bh, bh; dec dword ptr [edi]; cld; jmp dword ptr [esi]; 
0x000338c8: add ch, bl; inc esp; and al, 0x18; add esp, 0x28; pop ebx; ret; 
0x0017be67: add ch, bl; out dx, al; out dx, eax; call dword ptr [eax]; 
0x000bb215: add ch, bl; ret; 
0x00047fb4: add ch, byte ptr [0x83000000]; ret 0x8904; 
0x001715f0: add ch, byte ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00198c45: add ch, byte ptr [eax + 0xa]; push cs; add al, 0xc6; ret; 
0x00197d49: add ch, byte ptr [ebp + 0x41140e0a]; ret; 
0x00170174: add ch, byte ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x00199dbd: add ch, byte ptr [ebp + 0xe]; add al, 0xc6; ret; 
0x00171fe9: add ch, byte ptr [ebx + 0xa]; push cs; add al, 0xc6; ret; 
0x001748f0: add ch, byte ptr [ebx + 0xa]; ret; 
0x00171fc5: add ch, byte ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x0018a6d3: add ch, byte ptr [ecx + 0xa]; ret; 
0x0018deb5: add ch, byte ptr [ecx + 0xe]; add al, 0xc6; ret; 
0x000af6b8: add ch, byte ptr [ecx]; ret 0x448b; 
0x000a76b2: add ch, byte ptr [ecx]; ret 0x48d; 
0x000b194b: add ch, byte ptr [ecx]; ret 0x858b; 
0x000afb9d: add ch, byte ptr [ecx]; ret 0xc8d; 
0x000afebe: add ch, byte ptr [ecx]; ret 0xd089; 
0x000b164a: add ch, byte ptr [ecx]; ret 0xd285; 
0x001924d1: add ch, byte ptr [edi + 0xa]; push cs; add al, 0xc6; ret; 
0x0017ab89: add ch, byte ptr [edi + 0xe]; add al, 0xc6; ret; 
0x00192fc8: add ch, byte ptr [edx + 0xa]; push cs; adc al, 0x46; ret; 
0x001930e5: add ch, byte ptr [edx + 0xa]; push cs; add al, 0xc7; ret; 
0x00188b1d: add ch, byte ptr [edx + 0xe]; add al, 0xc6; ret; 
0x0019ae2d: add ch, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0018793d: add ch, byte ptr [edx + ecx + 0xe]; add al, 0xc7; ret; 
0x0016ffad: add ch, byte ptr [esi + 0x41140e0a]; ret; 
0x0016fb21: add ch, byte ptr [esi + 0xa]; ret; 
0x0017eebc: add ch, byte ptr [esi + ecx + 4]; ret; 
0x0017b2f7: add ch, ch; imul bh; call dword ptr [eax]; 
0x0003ae05: add ch, cl; dec esp; in eax, 0xff; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0017b327: add ch, cl; imul bh; call dword ptr [eax]; 
0x0017b1a7: add ch, cl; imul edi; call dword ptr [eax]; 
0x0001f5ed: add ch, cl; ret 0xfffc; 
0x0000c973: add ch, cl; sub dword ptr [eax], eax; add byte ptr [eax], ah; xchg eax, esp; add dword ptr [eax], eax; ret 1; 
0x0001af71: add ch, dh; adc byte ptr [eax], al; add ecx, 0x18807f; mov eax, dword ptr [ecx + 0x36c8]; ret; 
0x001730bb: add ch, dh; add ch, ah; call dword ptr [eax]; 
0x00175205: add ch, dh; call dword ptr [esi]; 
0x0016af91: add ch, dh; call eax; 
0x00165d9f: add ch, dh; int 0xfc; call dword ptr [0x35fffcce]; into; cld; call dword ptr [ebp - 0x32]; 
0x0016afa1: add ch, dh; jmp eax; 
0x0016a95f: add ch, dh; out 0xf3, al; jmp dword ptr [eax - 0x33]; 
0x0016ce2f: add ch, dh; test ecx, edi; jmp dword ptr [eax]; 
0x00169e97: add ch, dh; xor ecx, esi; push dword ptr [ecx + eax*2 + 0x32010001]; int1; jmp esp; 
0x001730eb: add ch, dl; add ch, ah; call dword ptr [eax]; 
0x0016adbf: add ch, dl; fcomi st(4); call dword ptr [eax - 0x15]; 
0x00172447: add ch, dl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0016d717: add ch, dl; sub edx, edi; push dword ptr [edi + ebx*8 + 0x29e50002]; cli; jmp esp; 
0x000e355a: add cl, 0xff; dec dword ptr [ebx - 0xbf73]; inc dword ptr [edi + 0x6b8cb]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0018cf4f: add cl, ah; fdivrp st(5); call dword ptr [eax]; 
0x000ba583: add cl, ah; or dword ptr [esi], 0; ret 0xe87; 
0x0018cf7f: add cl, al; fdivrp st(5); call dword ptr [eax]; 
0x000590c6: add cl, al; inc dword ptr [edx]; mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0002318b: add cl, al; ret 0x8909; 
0x00166a34: add cl, bh; cld; call edx; 
0x00166a34: add cl, bh; cld; call edx; stc; cld; jmp dword ptr [edx - 6]; 
0x001700d5: add cl, bh; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00186fa7: add cl, bl; add ebx, esi; call dword ptr [eax]; 
0x00191f0a: add cl, bl; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0007c970: add cl, byte ptr [eax + 0x24448b27]; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00094a0b: add cl, byte ptr [eax + 0x448b0270]; and al, 0xc; pop ebx; pop esi; ret; 
0x001339bd: add cl, byte ptr [eax + 0x448b5f07]; and al, 8; pop ebx; ret; 
0x0017ace5: add cl, byte ptr [eax + 0x46140e0a]; ret; 
0x0017908e: add cl, byte ptr [eax + 0xa]; push cs; add al, 0xc6; ret; 
0x000857ea: add cl, byte ptr [eax - 0x2f76f7be]; ret; 
0x00085788: add cl, byte ptr [eax - 0x2f76fdbe]; ret; 
0x00094103: add cl, byte ptr [eax - 0x776f786]; pop ebx; pop edi; ret; 
0x000856aa: add cl, byte ptr [eax - 0x776f7be]; pop edi; ret; 
0x00093dcb: add cl, byte ptr [eax - 0x776fdbe]; pop ebx; pop edi; ret; 
0x00085668: add cl, byte ptr [eax - 0x776fdbe]; pop edi; ret; 
0x001908c6: add cl, byte ptr [eax - 0x7d]; add ebp, dword ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x0007c5ab: add cl, byte ptr [eax]; sal byte ptr [esp + eax - 0x78], 0x64; adc dword ptr [ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0008b770: add cl, byte ptr [ebp + 0x5b5f0442]; ret; 
0x0008b7a2: add cl, byte ptr [ebp + 0x5b5f0842]; ret; 
0x0008efbb: add cl, byte ptr [ebp + 0x5e5f0347]; pop ebx; ret; 
0x0002f76a: add cl, byte ptr [ebp + 0x6c084]; add byte ptr [eax], al; call 0x2f730; jmp eax; 
0x000eb9dc: add cl, byte ptr [ebp + 0x748b0076]; and al, 4; mov edi, dword ptr [esp + 8]; mov ebp, dword ptr [esp + 0xc]; add esp, 0x10; ret; 
0x0017d66b: add cl, byte ptr [ebp + 0xa]; push cs; adc al, 0x43; ret; 
0x00190f5d: add cl, byte ptr [ebp + 0xa]; push cs; add al, 0xc6; ret; 
0x0008784a: add cl, byte ptr [ebp - 0x7af0fdb6]; cmp eax, 0x5bffffff; ret; 
0x00090ffa: add cl, byte ptr [ebx + 0x42890741]; pop es; mov eax, edi; pop edi; ret; 
0x000cfbb1: add cl, byte ptr [ebx + 0x448d0855]; ret 0x8b08; 
0x001119b2: add cl, byte ptr [ebx + 0x4c892050]; and al, 4; mov dword ptr [esp + 0x18], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x0013550f: add cl, byte ptr [ebx + 0x5b082444]; ret; 
0x00094a0e: add cl, byte ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x000915d8: add cl, byte ptr [ebx + 0x5e082444]; ret; 
0x00116493: add cl, byte ptr [ebx + 0x6c892050]; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x0011188d: add cl, byte ptr [ebx + 0x7c892050]; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x0006c269: add cl, byte ptr [ebx + 0x7c8b2434]; and al, 4; add esp, 8; ret; 
0x00082939: add cl, byte ptr [ebx + 0x7c8b2434]; and al, 4; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0017c89d: add cl, byte ptr [ebx + 0xa]; push cs; add al, 0xc6; ret; 
0x00178bde: add cl, byte ptr [ebx + 0xe]; add al, 0xc6; ret; 
0x0004e815: add cl, byte ptr [ebx - 0x1d76b]; dec dword ptr [ecx - 0x18b6b]; inc dword ptr [ecx]; ret 0x9539; 
0x0004f264: add cl, byte ptr [ebx - 0x1d76b]; inc dword ptr [ecx]; ret 0x9539; 
0x0004e8ce: add cl, byte ptr [ebx - 0x1db6b]; ljmp ptr [ecx]; ret 0x953b; 
0x0013694f: add cl, byte ptr [ebx - 0x74f7dbbc]; dec esp; and al, 0x10; add eax, ecx; pop ebx; ret; 
0x000f7cf4: add cl, byte ptr [ebx - 0x8f45]; jmp dword ptr [ebp - 0x75]; 
0x000f2d82: add cl, byte ptr [ebx]; add byte ptr [ecx - 0x8fbdb8c], cl; ret 0xff80; 
0x00082744: add cl, byte ptr [ecx + 0x24348be8]; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0003a0a7: add cl, byte ptr [ecx + 0x31d089c1]; sar byte ptr [ecx], cl; ret 0x820f; 
0x0003d045: add cl, byte ptr [ecx + 0x31d089c1]; sar byte ptr [ecx], cl; ret 0x830f; 
0x0009ca8f: add cl, byte ptr [ecx + 0x31f889f1]; sar byte ptr [ecx], cl; ret 0x830f; 
0x0009f875: add cl, byte ptr [ecx + 0x31f889f1]; sar byte ptr [ecx], cl; ret 0xa72; 
0x0008b7da: add cl, byte ptr [ecx + 0x428d0842]; or al, 0x5f; pop ebx; ret; 
0x000f830f: add cl, byte ptr [ecx + 0x4c892404]; and al, 8; mov ecx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 4], ecx; call edx; 
0x0006a0f6: add cl, byte ptr [ecx + 0x5e057432]; ret; 
0x0016fcb1: add cl, byte ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0017aeaa: add cl, byte ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x0016fb90: add cl, byte ptr [ecx + 0xa]; ret; 
0x00178d22: add cl, byte ptr [ecx + 0xe]; add al, 0xc6; ret; 
0x0018da41: add cl, byte ptr [ecx + 0xe]; or al, 0x43; ret; 
0x000d0f04: add cl, byte ptr [ecx - 0x17f7dbac]; ret 0xfad1; 
0x000709db: add cl, byte ptr [ecx - 0x17f7dbbc]; pop ebx; ret 0xffff; 
0x00071437: add cl, byte ptr [ecx - 0x17f7dbbc]; push dword ptr [edi - 0x77c0001]; dec dword ptr [edi]; xchg eax, esp; ret 0xd284; 
0x0004f144: add cl, byte ptr [ecx - 0x1f373]; dec dword ptr [ebx - 0x1bf73]; dec dword ptr [ecx - 0x18b6b]; inc dword ptr [ecx]; ret 0x9539; 
0x00088363: add cl, byte ptr [ecx - 0x2f76f7be]; pop ebx; ret; 
0x0008584a: add cl, byte ptr [ecx - 0x2f76f7be]; ret; 
0x0008582a: add cl, byte ptr [ecx - 0x2f76f8be]; ret; 
0x000a845b: add cl, byte ptr [ecx - 0x763c0cfe]; fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x4e; call dword ptr gs:[0x10]; 
0x000c271c: add cl, byte ptr [ecx - 0x769bdbac]; ret 0xfac1; 
0x000d598d: add cl, byte ptr [ecx - 0x769fdbac]; ret 0xfac1; 
0x000d5ae0: add cl, byte ptr [ecx - 0x76afdbac]; ret 0xfac1; 
0x000590c9: add cl, byte ptr [ecx - 0x76f7db84]; push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x00056a5a: add cl, byte ptr [ecx - 0x76f7dbac]; xor al, 0x24; call dword ptr [eax + 0x1c]; 
0x0001efcb: add cl, byte ptr [ecx - 0x76fbdb94]; inc esp; and al, 8; mov eax, dword ptr [edi + 0xc]; mov dword ptr [esp], eax; call dword ptr [edi + 4]; 
0x0001cdc8: add cl, byte ptr [ecx - 0x76fbdb94]; inc esp; and al, 8; mov eax, dword ptr [esi + 0xc]; mov dword ptr [esp], eax; call dword ptr [esi + 4]; 
0x000a7715: add cl, byte ptr [ecx - 0x76fbdbbc]; call 0x892a6fe1; ret 0xeac1; 
0x000873ea: add cl, byte ptr [ecx - 0x776f7be]; pop edi; pop ebx; ret; 
0x000855fa: add cl, byte ptr [ecx - 0x776f7be]; pop edi; ret; 
0x000856ea: add cl, byte ptr [ecx - 0x776f8be]; pop edi; ret; 
0x00149fea: add cl, byte ptr [ecx - 0x7ca1f78e]; ret 0x830c; 
0x0011080c: add cl, byte ptr [ecx]; ret 0x1688; 
0x001831d7: add cl, byte ptr [edi + 0x43140e0a]; ret; 
0x00185664: add cl, byte ptr [edi + 0xa]; ret; 
0x001355e7: add cl, byte ptr [edi]; mov bh, 8; mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013c537: add cl, byte ptr [edi]; mov bh, 8; mov word ptr [edx], cx; pop ebx; ret; 
0x000d52a1: add cl, byte ptr [edi]; mov dh, 0x72; add al, 0x83; ret 0x8505; 
0x0006d933: add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0xc289; 
0x0008784d: add cl, byte ptr [edi]; test dword ptr [0x5bffffff], edi; ret; 
0x001485dc: add cl, byte ptr [edi]; test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x0014782c: add cl, byte ptr [edi]; test dword ptr [ebp], edi; add byte ptr [eax], al; lea eax, dword ptr [edi - 0x10]; pop edi; ret; 
0x001483ac: add cl, byte ptr [edi]; test dword ptr [ebp], edi; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0008746d: add cl, byte ptr [edi]; test dword ptr [ebx + eax], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0008ea6e: add cl, byte ptr [edi]; test dword ptr [ebx], edi; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00148f38: add cl, byte ptr [edi]; test dword ptr [ecx - 0xa000000], esi; ret 0xf04; 
0x0014863a: add cl, byte ptr [edi]; test dword ptr [edi - 0x7d000000], ebx; ret 0xf08; 
0x0014787b: add cl, byte ptr [edi]; test dword ptr [esi - 0x73000000], ecx; inc edi; clc; pop edi; ret; 
0x0006d0dd: add cl, byte ptr [edi]; test ebx, ecx; add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x00148e25: add cl, byte ptr [edi]; test esp, eax; add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x000ca2c2: add cl, byte ptr [edi]; xchg eax, ebp; rol byte ptr [ebx + 0x5f5e40c4], 0x5d; ret 8; 
0x000520a0: add cl, byte ptr [edi]; xchg eax, esp; ret 0xb60f; 
0x0011eee0: add cl, byte ptr [edi]; xchg eax, esp; ret 0xd089; 
0x000740fa: add cl, byte ptr [edi]; xchg eax, esp; ret 0xe783; 
0x0011e65d: add cl, byte ptr [edi]; xchg eax, esp; ret 0xf883; 
0x0018ba9c: add cl, byte ptr [edx + 0xa]; push cs; adc al, 0x43; ret; 
0x00179f44: add cl, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0016fec7: add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x00179c0f: add cl, byte ptr [edx]; push cs; adc al, 0x43; ret; 
0x001737b7: add cl, byte ptr [edx]; push cs; adc al, 0x45; ret; 
0x0018a501: add cl, byte ptr [edx]; push cs; adc al, 0x46; ret; 
0x0016fbc2: add cl, byte ptr [edx]; ret; 
0x00183b59: add cl, byte ptr [esi + 0x43140e0a]; ret; 
0x00195afa: add cl, byte ptr [esi + 0xa]; push cs; add al, 0xc6; ret; 
0x001907de: add cl, byte ptr [esi + 0xe]; add al, 0xc6; ret; 
0x00189f01: add cl, byte ptr [esi + 0xe]; xor byte ptr [esi + 0xe], dh; or byte ptr [esi + ecx + 4], al; ret; 
0x0017ced5: add cl, byte ptr [esi + ecx + 0x10]; inc ecx; ret; 
0x0017eea9: add cl, byte ptr [esi + ecx + 4]; ret; 
0x0019b694: add cl, byte ptr [esi - 0x383afbf2]; mov byte ptr [eax], 0x44; add byte ptr [eax], al; add byte ptr [eax + 0x7c0002c4], ah; ret; 
0x00196ee6: add cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00182921: add cl, byte ptr [esi]; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x001828ff: add cl, byte ptr [esi]; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7204], al; ret; 
0x001823f3: add cl, byte ptr [esi]; or al, 0x86; add ebp, dword ptr [esi + ecx + 8]; ret; 
0x0018229f: add cl, byte ptr [esi]; or al, 0x86; add ebx, dword ptr [esi + ecx + 8]; ret; 
0x0018225b: add cl, byte ptr [esi]; or al, 0x86; add edx, dword ptr [esi + ecx + 8]; ret; 
0x001822c1: add cl, byte ptr [esi]; or al, 0x86; add esp, dword ptr [esi + ecx + 8]; ret; 
0x001820d2: add cl, byte ptr [esi]; or al, 0x87; add ebx, dword ptr [esi + ecx + 8]; ret; 
0x0018206c: add cl, byte ptr [esi]; or al, 0x87; add edx, dword ptr [esi + ecx + 8]; ret; 
0x0018a4e8: add cl, byte ptr es:[edx]; push cs; adc al, 0x43; ret; 
0x000b9cff: add cl, ch; add byte ptr [eax], al; add byte ptr [ebp - 0x2776ff8a], cl; sub eax, dword ptr [ebx + esi*4 - 0xe92e0]; jmp eax; 
0x0003de32: add cl, ch; dec edx; out 0xff, eax; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0009d700: add cl, ch; int1; out 0xff, al; jmp dword ptr [esi - 0x70]; 
0x00173dd3: add cl, ch; mov cl, 0xec; call dword ptr [eax]; 
0x0005b4e5: add cl, ch; outsd dx, dword ptr [esi]; ret; 
0x0005d532: add cl, ch; pop esi; out 0xff, eax; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x75]; 
0x0005debc: add cl, ch; push es; fdivp st(7); dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x0007aa0f: add cl, ch; ret 0xffd2; 
0x000967d7: add cl, ch; ret 0xfffc; 
0x000f8757: add cl, ch; ret 0xfffd; 
0x0007a04b: add cl, ch; ret 0xfffe; 
0x00034a0e: add cl, ch; ret; 
0x0005de8f: add cl, ch; salc; out 0xff, al; dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0xe373]; jmp dword ptr [ebp - 0x77]; 
0x000c9414: add cl, ch; xchg eax, esi; loope 0xc9418; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x7d]; 
0x00173e03: add cl, cl; mov cl, 0xec; call dword ptr [eax]; 
0x001769a1: add cl, cl; out dx, al; jmp dword ptr [edx]; 
0x00168bcf: add cl, dh; fucomi st(6); call dword ptr [eax]; 
0x00008851: add cl, dh; jmp dword ptr [ebp + 0x56]; 
0x00008381: add cl, dh; jmp dword ptr [edx]; 
0x00008421: add cl, dh; jmp edi; 
0x0016aeaf: add cl, dh; out dx, al; hlt; call dword ptr [eax]; 
0x0017b747: add cl, dh; out dx, eax; call dword ptr [eax]; 
0x0017bce7: add cl, dh; out dx, eax; out dx, eax; call dword ptr [eax]; 
0x0019ca63: add cl, dl; add al, 0; add byte ptr [ecx - 0x20ffffff], bh; add eax, 0x1250000; add byte ptr [eax], al; ret; 
0x0017ba47: add cl, dl; int1; out dx, eax; call dword ptr [eax]; 
0x0017b777: add cl, dl; out dx, eax; call dword ptr [eax]; 
0x0017bd17: add cl, dl; out dx, eax; out dx, eax; call dword ptr [eax]; 
0x000ed6f1: add dh, 3; add byte ptr [ecx + 0xb58ffc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0016aa81: add dh, ah; call dword ptr [eax - 0x29]; 
0x00000530: add dh, ah; ret 0xad0; 
0x0017a233: add dh, ah; xchg eax, ebx; out dx, eax; call dword ptr [eax]; 
0x0017d509: add dh, al; push dword ptr [eax + eax]; add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e7202], al; ret; 
0x00145446: add dh, bh; fadd dword ptr [ebx + 0x5b5d04c4]; ret; 
0x00131c66: add dh, bh; fcomp dword ptr [edi + 0x5b]; ret; 
0x001321c6: add dh, bh; fcomp dword ptr [edi + 0x5d]; pop ebx; ret; 
0x00082ca0: add dh, bh; fmul dword ptr [ebx + 0x7c8b2434]; and al, 4; add esp, 8; ret; 
0x00082cea: add dh, bh; fmul dword ptr [ebx + 0x7c8b2434]; and al, 4; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0015afbb: add dh, bh; jmp edi; 
0x001380b4: add dh, bh; ret 0xf; 
0x0013807a: add dh, bh; ret 2; 
0x001888db: add dh, bh; sti; hlt; call dword ptr [eax]; 
0x00151887: add dh, bh; xlatb; add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax], al; call edi; 
0x001871cd: add dh, bl; call dword ptr [esi + 2]; 
0x0007e248: add dh, bl; movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; cld; pop edi; ret; 
0x000556ba: add dh, bl; ret; 
0x0018890b: add dh, bl; sti; hlt; call dword ptr [eax]; 
0x0017dc64: add dh, byte ptr [eax + 0xa]; push cs; adc al, 0x43; ret; 
0x001734bd: add dh, byte ptr [eax + 0xa]; push cs; add al, 0xc6; ret; 
0x00178ec1: add dh, byte ptr [eax + 0xe]; add al, 0xc6; ret; 
0x0016ebf0: add dh, byte ptr [eax]; cld; ljmp ptr [eax + ecx + 1]; add byte ptr [eax + esi], dl; cld; jmp dword ptr [eax + 9]; 
0x00095c6c: add dh, byte ptr [eax]; ret; 
0x0006bde2: add dh, byte ptr [ebp + 0x14]; mov eax, dword ptr [eax + 0xb8]; mov dword ptr [esp], esi; call dword ptr [eax + 0x34]; 
0x0018f558: add dh, byte ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x0018a1c5: add dh, byte ptr [ebp + 0xa]; ret; 
0x00173181: add dh, byte ptr [ebp + 0xe]; add al, 0xc6; ret; 
0x0018a612: add dh, byte ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x0018c509: add dh, byte ptr [ebx + 0xa]; push cs; add al, 0xc7; ret; 
0x00175f88: add dh, byte ptr [ebx + 0xa]; ret; 
0x0017c326: add dh, byte ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x00195e30: add dh, byte ptr [ecx + 0xa]; ret; 
0x0018df8d: add dh, byte ptr [ecx + 0xe]; add al, 0xc6; ret; 
0x00017f1e: add dh, byte ptr [ecx]; rol byte ptr [eax - 0x6bf0a2c8], cl; ret 0x348d; 
0x00082071: add dh, byte ptr [ecx]; ror byte ptr [ebp - 0x74ffd98c], 0x55; rol byte ptr [ecx], 1; ret 0x1403; 
0x00033c26: add dh, byte ptr [ecx]; ror byte ptr [ebx - 0x74ebdba4], 0x74; and al, 0x18; add esp, 0x1c; ret; 
0x0006c184: add dh, byte ptr [ecx]; ror byte ptr [ebx - 0x74efdba4], 0x74; and al, 0x14; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00082f14: add dh, byte ptr [ecx]; test byte ptr [ecx + 0x247c8bf0], 4; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x00186ad5: add dh, byte ptr [edi + 0xa]; push cs; add al, 0xc6; ret; 
0x00171ae9: add dh, byte ptr [edi + 0xe]; add al, 0xc6; ret; 
0x000d31f7: add dh, byte ptr [edi + edi*2 - 0x75]; outsb dx, byte ptr [esi]; sub al, 0xe9; ret; 
0x00097bab: add dh, byte ptr [edx + 0x31]; ror byte ptr [ebx - 0x74fbdba4], 0x74; and al, 8; add esp, 0xc; ret; 
0x0019a9f9: add dh, byte ptr [edx + 0xa]; push cs; add al, 0xc6; ret; 
0x0018aa39: add dh, byte ptr [edx + 0xa]; push cs; add al, 0xc7; ret; 
0x0017dea9: add dh, byte ptr [edx + 0xe]; add al, 0xc6; ret; 
0x001339bb: add dh, byte ptr [edx + eax - 0x78]; pop es; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00133f0b: add dh, byte ptr [edx + eax - 0x78]; pop es; pop edi; pop ebx; ret; 
0x00173475: add dh, byte ptr [esi + 0xa]; push cs; add al, 0xc6; ret; 
0x00176720: add dh, byte ptr [esi + 0xe]; adc al, 0x41; ret; 
0x001909dd: add dh, byte ptr [esi + ecx + 0x10]; ret; 
0x001807d1: add dh, byte ptr [esi + ecx + 4]; ret; 
0x0018d7d0: add dh, ch; cmc; jmp dword ptr [ebx]; 
0x00178147: add dh, ch; sti; call dword ptr [eax]; 
0x001691d7: add dh, cl; adc dh, al; jmp dword ptr [eax - 4]; 
0x00165e14: add dh, cl; cld; jmp dword ptr [eax]; 
0x00178177: add dh, cl; sti; call dword ptr [eax]; 
0x000cf63c: add dh, dh; inc esp; ret 0x804; 
0x00191f86: add dh, dh; jmp dword ptr [edx]; 
0x0015afb3: add dh, dh; ljmp ptr [ecx - 0x3c000500]; add dh, bh; jmp edi; 
0x000d1bc3: add dh, dh; ret 0x7404; 
0x0014685d: add dh, dh; ret 0x7501; 
0x0008f8bf: add dh, dh; ret 0x7510; 
0x000ad9a5: add dh, dh; ret 0x7518; 
0x0002e9c4: add dh, dh; ret 0x8901; 
0x000de907: add dh, dh; ret 0x8940; 
0x000c745f: add dh, dh; ret 0xc740; 
0x000c6bf4: add dh, dh; ret 0xf01; 
0x0002c693: add dh, dh; ret 0xf02; 
0x001472a9: add dh, dh; ret 0xf04; 
0x000d248b: add dh, dh; ret 0xf08; 
0x001498d1: add dh, dh; ret 0xf0f; 
0x00147241: add dh, dh; ret 0xf10; 
0x000ae157: add dh, dh; ret 0xf18; 
0x00147252: add dh, dh; ret 0xf20; 
0x0002e930: add dh, dh; ret 0xf302; 
0x00147263: add dh, dh; ret 0xf40; 
0x0004c6f7: add dh, dh; ret 0xf80; 
0x0016cf97: add dh, dl; movsb byte ptr es:[edi], byte ptr [esi]; stc; call eax; 
0x0017a0e3: add dh, dl; xchg eax, esp; out dx, eax; call dword ptr [eax]; 
0x000632d3: add dl, al; call dword ptr [ebx]; 
0x0000158f: add dl, al; push es; add byte ptr [eax], al; ret; 
0x00179f93: add dl, al; xchg eax, ebp; out dx, eax; call dword ptr [eax]; 
0x0019c04c: add dl, bh; add dword ptr [0xffff0000], eax; add dword ptr [edx], ebx; sbb eax, 0x73000005; ret 0x8d01; 
0x0015afaf: add dl, bh; call dword ptr [ecx - 0x56000a00]; add bl, bh; inc ebx; add dh, bh; jmp edi; 
0x0019a38d: add dl, bl; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0019291e: add dl, byte ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00185be1: add dl, byte ptr [eax + 0xe]; add al, 0xc6; ret; 
0x0006687a: add dl, byte ptr [eax + eax + 0x6c890000]; and al, 8; mov dword ptr [esp], edx; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x1c]; 
0x00183e04: add dl, byte ptr [ebp + 0x41140e0a]; ret; 
0x00193fa2: add dl, byte ptr [ebp + 0xe]; add al, 0xc6; ret; 
0x00172c46: add dl, byte ptr [ebx + 0xa]; push cs; add al, 0xc6; ret; 
0x00189636: add dl, byte ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x00196a2e: add dl, byte ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x00019b52: add dl, byte ptr [ecx]; add byte ptr [ecx + 0x18949fc1], al; add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp + 3]; 
0x00198060: add dl, byte ptr [edi + 0x43140e0a]; ret; 
0x00187eaf: add dl, byte ptr [edi + 0xa]; push cs; adc al, 0x43; ret; 
0x001733c9: add dl, byte ptr [edi + 0xe]; add al, 0xc6; ret; 
0x0019227c: add dl, byte ptr [edx + 0x43140e0a]; ret; 
0x00190838: add dl, byte ptr [edx + 0xa]; push cs; adc al, 0x46; ret; 
0x001741d6: add dl, byte ptr [edx + 0xa]; push cs; add al, 0xc6; ret; 
0x001886f6: add dl, byte ptr [edx + 0xa]; ret; 
0x00189dc2: add dl, byte ptr [edx + 0xe]; add al, 0xc6; ret; 
0x00196e3d: add dl, byte ptr [edx - 0x3938fbf2]; ret; 
0x00193f9f: add dl, byte ptr [edx - 0x7a]; add dl, byte ptr [ebp + 0xe]; add al, 0xc6; ret; 
0x001706ca: add dl, byte ptr [esi + 0x43140e0a]; ret; 
0x00198077: add dl, byte ptr [esi + 0xa]; push cs; adc al, 0x43; ret; 
0x0017959f: add dl, byte ptr [esi + 0xa]; push cs; adc al, 0x44; ret; 
0x00179d86: add dl, byte ptr [esi + 0xa]; push cs; add al, 0xc6; ret; 
0x0019dcaf: add dl, ch; add al, 0; add byte ptr [edi + 6], al; add byte ptr [eax], al; ret; 
0x00194003: add dl, cl; adc al, 0xf7; call dword ptr [eax]; 
0x0017c4da: add dl, cl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001987b8: add dl, dl; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0016fc93: add dword ptr [0x1800e43], 3; ret 0xa03; 
0x001988b3: add dword ptr [0x1900e4e], 2; ret; 
0x001737af: add dword ptr [0x1a00e46], 3; pop es; add cl, byte ptr [edx]; push cs; adc al, 0x45; ret; 
0x0017176f: add dword ptr [0x1c00e46], 2; mov edx, 0x43140e0a; ret; 
0x00192277: add dword ptr [0x2400e43], -0x6e; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00174163: add dword ptr [0x2e00e46], 3; pop esp; add dword ptr [edx], ecx; push cs; adc al, 0x46; ret; 
0x001905db: add dword ptr [0x3400e43], -0x61; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x00183e5f: add dword ptr [0x3500e43], -0x57; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x001940bf: add dword ptr [0x3600e43], -0x5f; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x001736cb: add dword ptr [0x3700e43], -0x48; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00195dfa: add dword ptr [0x3870486], 2; arpl word ptr [edx], cx; ret; 
0x0019700a: add dword ptr [0x3870486], 2; dec byte ptr [edx]; ret; 
0x00187a86: add dword ptr [0x3870486], 2; fisttp qword ptr [edx]; ret; 
0x0018c3ea: add dword ptr [0x3870486], 2; fmul qword ptr [edx]; ret; 
0x00195e2a: add dword ptr [0x3870486], 2; jno 0x195e3d; ret; 
0x0019364e: add dword ptr [0x3870486], 2; loope 0x193661; ret; 
0x001759ba: add dword ptr [0x3870486], 2; mov cs, word ptr [edx]; ret; 
0x0018d602: add dword ptr [0x3870486], 2; xchg byte ptr [edx], cl; ret; 
0x0017e1de: add dword ptr [0x3870486], 3; add al, 0xa; ret; 
0x001729ba: add dword ptr [0x3870486], 3; cmpsd dword ptr [esi], dword ptr es:[edi]; add dword ptr [edx], ecx; ret; 
0x0016f982: add dword ptr [0x3870486], 3; daa; add dword ptr [edx], ecx; ret; 
0x00172c16: add dword ptr [0x3870486], 3; dec edi; add dword ptr [edx], ecx; ret; 
0x0017141a: add dword ptr [0x3870486], 3; dec esp; add ecx, dword ptr [edx]; ret; 
0x00190f8a: add dword ptr [0x3870486], 3; fld dword ptr [edx + ecx]; ret; 
0x0018473a: add dword ptr [0x3870486], 3; imul eax, dword ptr [ecx], 0xa; ret; 
0x0017117a: add dword ptr [0x3870486], 3; inc esp; add dword ptr [edx], ecx; ret; 
0x0018d986: add dword ptr [0x3870486], 3; insd dword ptr es:[edi], dx; add dword ptr [edx], ecx; ret; 
0x00177e6e: add dword ptr [0x3870486], 3; int1; add dword ptr [edx], ecx; ret; 
0x00173eee: add dword ptr [0x3870486], 3; lar ecx, word ptr [edx]; ret; 
0x00174a4a: add dword ptr [0x3870486], 3; pop ecx; add al, 0xa; ret; 
0x0017252a: add dword ptr [0x3870486], 3; pop edi; add dword ptr [edx], ecx; ret; 
0x001984ae: add dword ptr [0x3870486], 3; push eax; add dword ptr [edx], ecx; ret; 
0x00187f6a: add dword ptr [0x3870486], 3; push ebx; add cl, byte ptr [edx]; ret; 
0x00195fb2: add dword ptr [0x3870486], 3; push ebx; add dword ptr [edx], ecx; ret; 
0x0018a3be: add dword ptr [0x3870486], 3; pushfd; add dword ptr [edx], ecx; ret; 
0x0018cb32: add dword ptr [0x3870486], 3; rol byte ptr [edx], 0xa; ret; 
0x0019887a: add dword ptr [0x3870486], 3; salc; add cl, byte ptr [edx]; ret; 
0x0018f1fa: add dword ptr [0x3870486], 3; wait; add cl, byte ptr [edx]; ret; 
0x00187c36: add dword ptr [0x3870486], 3; xchg byte ptr [edx + ecx], al; ret; 
0x0016fbba: add dword ptr [0x3870486], 3; xchg eax, ebx; add cl, byte ptr [edx]; ret; 
0x0019650e: add dword ptr [0x3870486], 3; xchg eax, esi; add dword ptr [edx], ecx; ret; 
0x00187f3d: add dword ptr [0x5d030486], 6; ret; 
0x00159488: add dword ptr [0x73950000], ecx; ret 0x48; 
0x000b9a33: add dword ptr [0xb8907174], edx; and byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0019c04e: add dword ptr [0xffff0000], eax; add dword ptr [edx], ebx; sbb eax, 0x73000005; ret 0x8d01; 
0x0016a32d: add dword ptr [bx + si], eax; adc al, 0xa1; int1; jmp dword ptr [eax + 0x67]; 
0x0016a33d: add dword ptr [bx + si], eax; inc esp; lodsb al, byte ptr [esi]; int1; jmp eax; 
0x0011f714: add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0011f728: add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x0011e92e: add dword ptr [eax + 0x28c48306], ecx; mov eax, edx; pop esi; ret; 
0x0007d054: add dword ptr [eax + 0x2b], eax; inc esp; and al, 4; ret; 
0x00093da4: add dword ptr [eax + 0x5bf88902], ecx; pop edi; ret; 
0x0007e446: add dword ptr [eax + 0x5bf88927], ecx; pop esi; pop edi; ret; 
0x0007c79b: add dword ptr [eax + 0x5d], eax; pop ebx; pop esi; pop edi; ret; 
0x00089a01: add dword ptr [eax + 0x5f028d02], ecx; ret; 
0x0007dc76: add dword ptr [eax + 0x5f], eax; pop esi; ret; 
0x0007f8f2: add dword ptr [eax + 0x5f], eax; ret; 
0x00085641: add dword ptr [eax + 0x5ff88902], ecx; ret; 
0x000f7233: add dword ptr [eax + 0xf], eax; inc esp; ret 0x8dc3; 
0x000562f6: add dword ptr [eax + eax + 0x54890000], edx; and al, 4; mov dword ptr [esp + 8], esi; mov dword ptr [esp], ecx; call dword ptr [eax + 0x1c]; 
0x001016c5: add dword ptr [eax + eax*8 - 0x138afe78], eax; add esp, 4; mov eax, edi; pop esi; pop edi; ret; 
0x00082d10: add dword ptr [eax + eax*8 - 0x2dce0c8b], eax; mov eax, edx; ret; 
0x000e1988: add dword ptr [eax + eax], -0x7f; ret; 
0x000d7159: add dword ptr [eax + edx - 0x75], esi; xor dword ptr [eax - 1], 0xffffffff; jmp dword ptr [ebp - 0x75]; 
0x000a58a2: add dword ptr [eax - 0x6bf0d006], eax; ret 0xb60f; 
0x0007bbe1: add dword ptr [eax - 0x76ffffe7], 4; and al, 0xe8; bound ecx, qword ptr [eax]; std; jmp dword ptr [ebp - 0x7d]; 
0x0002724c: add dword ptr [eax - 1], 0x365ffff; add eax, 0; ret; 
0x001775f9: add dword ptr [eax], 0; adc al, 0xef; call esp; 
0x0002e9c1: add dword ptr [eax], 0; add dh, dh; ret 0x8901; 
0x0006ab2a: add dword ptr [eax], 0; add esp, 0x18; pop ebx; ret; 
0x001775b1: add dword ptr [eax], 0; lodsb al, byte ptr [esi]; adc ebp, edi; jmp dword ptr [esi]; 
0x000fc1dc: add dword ptr [eax], 0x1ba0000; add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x0005ba62: add dword ptr [eax], 0x24148900; call eax; 
0x0005b9fb: add dword ptr [eax], 0x24bc8b00; mov ah, 0x81; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x81b8]; add esp, 0x81bc; ret; 
0x000d9a02: add dword ptr [eax], 0x4890000; and al, 0xe8; inc edx; sal ah, cl; jmp dword ptr [esi - 0x70]; 
0x0010533c: add dword ptr [eax], 0x65ffffff; add eax, dword ptr [0]; ret; 
0x0001a2ec: add dword ptr [eax], 0x73; out 0xff, eax; jmp edx; 
0x00019343: add dword ptr [eax], 0x89000005; xchg eax, ecx; add al, 5; add byte ptr [eax], al; pop ebx; ret; 
0x00167cf5: add dword ptr [eax], 0xeb510400; call dword ptr [eax - 0x7f]; 
0x001272a6: add dword ptr [eax], 0xfb870000; call dword ptr gs:[0x10]; 
0x000b84c0: add dword ptr [eax], 0xfb870000; int 0x80; 
0x0011a74a: add dword ptr [eax], 1; mov eax, dword ptr [esi + 0x3c]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ecx; call dword ptr [eax + 4]; 
0x0016adbe: add dword ptr [eax], eax; aad 0xdb; hlt; call dword ptr [eax - 0x15]; 
0x0016af9e: add dword ptr [eax], eax; aam 0; cmc; jmp eax; 
0x00169f86: add dword ptr [eax], eax; aam 0x41; int1; call dword ptr [eax + 0x52]; 
0x0016a096: add dword ptr [eax], eax; aam 0x54; int1; jmp esp; 
0x0018bd0a: add dword ptr [eax], eax; aam 0x9d; cmc; jmp dword ptr [ebx]; 
0x0018bdea: add dword ptr [eax], eax; aam 0x9f; cmc; call dword ptr [esi]; 
0x0016a40e: add dword ptr [eax], eax; aam 0xb2; int1; call dword ptr [eax]; 
0x0016acbe: add dword ptr [eax], eax; aam 0xc2; hlt; call dword ptr [eax - 0x1c]; 
0x0018a3aa: add dword ptr [eax], eax; aam 0xf2; hlt; jmp dword ptr [ebx]; 
0x0018a31e: add dword ptr [eax], eax; aam 0xf5; hlt; call dword ptr [eax]; 
0x0016b0ce: add dword ptr [eax], eax; adc al, 0x19; cmc; call dword ptr [eax]; 
0x0016b0fe: add dword ptr [eax], eax; adc al, 0x1f; cmc; jmp dword ptr [eax]; 
0x0016ebf6: add dword ptr [eax], eax; adc al, 0x30; cld; jmp dword ptr [eax + 9]; 
0x0016ab7e: add dword ptr [eax], eax; adc al, 0x33; hlt; jmp dword ptr [eax]; 
0x00169f06: add dword ptr [eax], eax; adc al, 0x33; int1; jmp dword ptr [eax + 0x4e]; 
0x0016a32e: add dword ptr [eax], eax; adc al, 0xa1; int1; jmp dword ptr [eax + 0x67]; 
0x0016a37e: add dword ptr [eax], eax; adc al, 0xae; int1; jmp eax; 
0x0016efae: add dword ptr [eax], eax; adc al, 0xdc; cld; jmp eax; 
0x0018812e: add dword ptr [eax], eax; adc al, 0xf3; call dword ptr [eax]; 
0x00188f4e: add dword ptr [eax], eax; adc byte ptr [edx], dh; hlt; jmp dword ptr [esi]; 
0x0016eb86: add dword ptr [eax], eax; adc eax, 0x88fffc28; add eax, 0x28240001; cld; call esp; 
0x00188b2a: add dword ptr [eax], eax; add al, 0x1b; hlt; jmp dword ptr [ebx]; 
0x00169f46: add dword ptr [eax], eax; add al, 0x3b; int1; push dword ptr [eax + 0x3400014f]; cmp esi, ecx; call eax; 
0x0018383a: add dword ptr [eax], eax; add al, 0x49; int1; call dword ptr [edx]; 
0x0016f016: add dword ptr [eax], eax; add al, 0x72; std; jmp dword ptr [eax]; 
0x0016ac4e: add dword ptr [eax], eax; add al, 0xbf; hlt; call eax; 
0x0016acde: add dword ptr [eax], eax; add al, 0xc4; hlt; call eax; 
0x00169bce: add dword ptr [eax], eax; add al, 0xe; int1; call dword ptr [eax + 0x4a]; 
0x0004a12e: add dword ptr [eax], eax; add al, ch; cmp eax, 0x81000dfc; ret; 
0x0010e5ae: add dword ptr [eax], eax; add al, ch; mov ebp, 0x810001b7; ret; 
0x000e10a8: add dword ptr [eax], eax; add al, ch; ret; 
0x00125d3b: add dword ptr [eax], eax; add bh, al; add al, byte ptr [eax]; add byte ptr [eax], al; add bl, ch; ret; 
0x0019ca69: add dword ptr [eax], eax; add bh, bl; add eax, 0x1250000; add byte ptr [eax], al; ret; 
0x0007c41f: add dword ptr [eax], eax; add bh, dh; ret 3; 
0x0007350d: add dword ptr [eax], eax; add bl, dh; ret; 
0x0002c25b: add dword ptr [eax], eax; add byte ptr [eax + 0xf3d017a], al; test dword ptr [ecx - 0x7c000003], esp; ret 0x8902; 
0x0019e509: add dword ptr [eax], eax; add byte ptr [eax + 3], bh; add byte ptr [eax], al; fld qword ptr [ebx]; add byte ptr [eax], al; ret; 
0x0008b9de: add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; lcall ptr [edi + 0x5b]; ret; 
0x000d31f3: add dword ptr [eax], eax; add byte ptr [eax - 0x74808bfe], ch; outsb dx, byte ptr [esi]; sub al, 0xe9; ret; 
0x000b6680: add dword ptr [eax], eax; add byte ptr [eax - 0x7af000c1], al; movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x000e01a0: add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x0015188a: add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax], al; call edi; 
0x00150a3a: add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax], al; call esp; 
0x0015085a: add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax], al; ret 0x1d4; 
0x00150ff2: add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax], al; ret 0x1d5; 
0x00150862: add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0002b728: add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ebx - 0x17b3dbb4], cl; cmp eax, 0x81000fe6; ret; 
0x000fc654: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0007b5f5: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x001098bc: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x18; pop esi; ret; 
0x000e3c38: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0011fa8a: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x0006be9b: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x0007af9c: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x00114acd: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 8; ret; 
0x00072ea2: add dword ptr [eax], eax; add byte ptr [eax], al; call 0x72ab0; add esp, 0x18; pop ebx; ret; 
0x000dda77: add dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00026c10: add dword ptr [eax], eax; add byte ptr [eax], al; call eax; 
0x000b85d5: add dword ptr [eax], eax; add byte ptr [eax], al; int 0x80; 
0x000f0648: add dword ptr [eax], eax; add byte ptr [eax], al; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00057897: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [ebp - 0x1080], ecx; jmp edx; 
0x00045046: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [ebp - 0x4b8], edi; jmp edx; 
0x0011f406: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [edx + 0xc], ecx; pop esi; ret; 
0x000ddb7d: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [esp + 4], eax; call 0xddee0; add esp, 0x2c; ret; 
0x0007027c: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [esp + 4], eax; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; call dword ptr [edx + 0x40]; 
0x0006d638: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [esp + 4], edi; mov dword ptr [esp + 8], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x40]; 
0x0006fad2: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], eax; mov dword ptr [esp], esi; call dword ptr [ecx + 0x40]; 
0x0011cde8: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0xc]; 
0x0002e5eb: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [esp], eax; call 0x2e560; add esp, 0x1c; ret; 
0x000fe09b: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [esp], eax; call 0xfdfb0; add esp, 0x1c; ret; 
0x0011210c: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [esp], edi; call dword ptr [eax]; 
0x0011d93d: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [esp], edx; mov dword ptr [esp + 0x30], edx; mov dword ptr [esp + 4], 0; call dword ptr [eax + 0x14]; 
0x000637e7: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [esp], esi; call eax; 
0x000fc1e1: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000f20b4: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, dword ptr [esp + 0x44]; call 0xf1f70; add esp, 4; ret; 
0x000b84b9: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, esi; mov ecx, 0x81; xchg ebx, edi; int 0x80; 
0x000e6318: add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, 0x5409; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0007c838: add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x00024f49: add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, edx; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000b9c59: add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, esi; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0011d2e7: add dword ptr [eax], eax; add byte ptr [eax], al; mov esi, dword ptr [esp + 0x10]; add esp, 0x1c; ret; 
0x00114521: add dword ptr [eax], eax; add byte ptr [eax], al; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x0011456b: add dword ptr [eax], eax; add byte ptr [eax], al; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000e8c53: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x001268cc: add dword ptr [eax], eax; add byte ptr [eax], al; pop edi; pop ebp; ret; 
0x000fccf6: add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; pop ebp; ret; 
0x0002f56f: add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000bb1f9: add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; ret; 
0x00022f91: add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000ba6b5: add dword ptr [eax], eax; add byte ptr [eax], al; xchg ebx, edx; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0005566c: add dword ptr [eax], eax; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x00033256: add dword ptr [eax], eax; add byte ptr [ebp + 0x5c8bfc46], cl; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000d2481: add dword ptr [eax], eax; add byte ptr [ebp - 0x1f7bf037], al; add eax, dword ptr [eax]; add dh, dh; ret 0xf08; 
0x000def02: add dword ptr [eax], eax; add byte ptr [ebp - 0x76b88a13], al; xchg edi, ebx; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x0012309b: add dword ptr [eax], eax; add byte ptr [ebp - 0x9d7b], cl; dec dword ptr [ecx - 0xbb6b]; jmp dword ptr [esi - 0x39]; 
0x000aae3f: add dword ptr [eax], eax; add byte ptr [ebx + 0x10424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x108]; add esp, 0x10c; ret; 
0x000aae46: add dword ptr [eax], eax; add byte ptr [ebx + 0x10824ac], cl; add byte ptr [eax], al; add esp, 0x10c; ret; 
0x000e112c: add dword ptr [eax], eax; add byte ptr [ebx + 0x11424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x118]; add esp, 0x11c; ret; 
0x000e1133: add dword ptr [eax], eax; add byte ptr [ebx + 0x11824ac], cl; add byte ptr [eax], al; add esp, 0x11c; ret; 
0x00080226: add dword ptr [eax], eax; add byte ptr [ebx + 0x1242454], cl; ret 0x442b; 
0x0011bcbf: add dword ptr [eax], eax; add byte ptr [ebx + 0x12424b4], cl; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x128]; add esp, 0x12c; ret; 
0x000692f3: add dword ptr [eax], eax; add byte ptr [ebx + 0x12424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x128]; add esp, 0x12c; ret; 
0x000692fa: add dword ptr [eax], eax; add byte ptr [ebx + 0x12824ac], cl; add byte ptr [eax], al; add esp, 0x12c; ret; 
0x0011bcc6: add dword ptr [eax], eax; add byte ptr [ebx + 0x12824bc], cl; add byte ptr [eax], al; add esp, 0x12c; ret; 
0x0002e031: add dword ptr [eax], eax; add byte ptr [ebx + 0x12824bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x12c]; add esp, 0x130; ret; 
0x0002e038: add dword ptr [eax], eax; add byte ptr [ebx + 0x12c24ac], cl; add byte ptr [eax], al; add esp, 0x130; ret; 
0x0002ddc8: add dword ptr [eax], eax; add byte ptr [ebx + 0x13424b4], cl; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x138]; add esp, 0x13c; ret; 
0x001187e3: add dword ptr [eax], eax; add byte ptr [ebx + 0x13424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x138]; add esp, 0x13c; ret; 
0x001187ea: add dword ptr [eax], eax; add byte ptr [ebx + 0x13824ac], cl; add byte ptr [eax], al; add esp, 0x13c; ret; 
0x0002ddcf: add dword ptr [eax], eax; add byte ptr [ebx + 0x13824bc], cl; add byte ptr [eax], al; add esp, 0x13c; ret; 
0x0002ec56: add dword ptr [eax], eax; add byte ptr [ebx + 0x14424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x148]; add esp, 0x14c; ret; 
0x0002ec5d: add dword ptr [eax], eax; add byte ptr [ebx + 0x14824ac], cl; add byte ptr [eax], al; add esp, 0x14c; ret; 
0x000b9e05: add dword ptr [eax], eax; add byte ptr [ebx + 0x16424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x168]; add esp, 0x16c; ret; 
0x000b9e0c: add dword ptr [eax], eax; add byte ptr [ebx + 0x16824ac], cl; add byte ptr [eax], al; add esp, 0x16c; ret; 
0x000e7dff: add dword ptr [eax], eax; add byte ptr [ebx + 0x1a824bc], cl; add byte ptr [eax], al; add esp, 0x1ac; ret; 
0x000e7d09: add dword ptr [eax], eax; add byte ptr [ebx + 0x1b424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x1b8]; add esp, 0x1bc; ret; 
0x000e7d10: add dword ptr [eax], eax; add byte ptr [ebx + 0x1b824ac], cl; add byte ptr [eax], al; add esp, 0x1bc; ret; 
0x000fe015: add dword ptr [eax], eax; add byte ptr [ebx + 0x1c74fff8], al; mov ecx, eax; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0011b2be: add dword ptr [eax], eax; add byte ptr [ebx + 0x20508b00], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x00031ebc: add dword ptr [eax], eax; add byte ptr [ebx + 0x4589ac45], cl; in al, 0x8b; dec ebp; adc al, 0x83; jmp dword ptr [eax]; 
0x00118a95: add dword ptr [eax], eax; add byte ptr [ebx + 0x54891cc2], al; and al, 4; mov dword ptr [esp], eax; mov dword ptr [esp + 8], esi; call dword ptr [ecx + 0xc]; 
0x0003eebe: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x000d9d0c: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 0x14; 
0x000d2ee4: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 0x18; 
0x000365f0: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0006b35b: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; ret; 
0x000aad0f: add dword ptr [eax], eax; add byte ptr [ebx + 0x7c8b2434], cl; and al, 4; add esp, 8; ret; 
0x00059908: add dword ptr [eax], eax; add byte ptr [ebx - 0x10a343], al; call dword ptr [eax]; 
0x000b7a09: add dword ptr [eax], eax; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x0010cea4: add dword ptr [eax], eax; add byte ptr [ebx - 0x12f75], cl; jmp dword ptr [ebp - 0x75]; 
0x000b63c6: add dword ptr [eax], eax; add byte ptr [ebx - 0x12f7d], cl; jmp dword ptr [ebp - 0x75]; 
0x000cd38d: add dword ptr [eax], eax; add byte ptr [ebx - 0x15755], cl; jmp dword ptr [ebp - 0x75]; 
0x0016f319: add dword ptr [eax], eax; add byte ptr [ebx - 0x16], dl; jmp dword ptr [eax]; 
0x00078d6f: add dword ptr [eax], eax; add byte ptr [ebx - 0x1876d], cl; jmp dword ptr [ebp - 0x75]; 
0x00079636: add dword ptr [eax], eax; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x75]; 
0x000644c3: add dword ptr [eax], eax; add byte ptr [ebx - 0x1d17dbbb], cl; push -5; dec dword ptr [ebx - 0x2517afbb]; push -5; jmp dword ptr [ebp - 0x7d]; 
0x000b3f5a: add dword ptr [eax], eax; add byte ptr [ebx - 0x20783b83], cl; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0014851b: add dword ptr [eax], eax; add byte ptr [ebx - 0x73f0ff3e], al; sbb dword ptr [edx], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000c6f0f: add dword ptr [eax], eax; add byte ptr [ebx - 0x76d3db94], cl; imul ebp, dword ptr [eax], 0xfffe8ae9; jmp dword ptr [esi - 0x70]; 
0x001295e5: add dword ptr [eax], eax; add byte ptr [ebx - 0x76ebdbac], cl; test byte ptr [esp + ecx*8], ah; add byte ptr [eax], al; add byte ptr [ebx - 0x7cebdbbc], cl; ret 0x8b04; 
0x00148ce2: add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x00041f19: add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0ef03], al; ret; 
0x00131fe2: add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x0007f507: add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fe01], al; inc esi; add dword ptr [eax], eax; add byte ptr [ecx], ch; ret 0xea01; 
0x00131a81: add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0ff07], al; ret; 
0x0001e139: add dword ptr [eax], eax; add byte ptr [ebx - 0x7ccfdbac], cl; ret 0x3904; 
0x00097283: add dword ptr [eax], eax; add byte ptr [ebx - 0x8f75], cl; dec dword ptr [ebx - 0x12f6d]; jmp dword ptr [ebp - 0x75]; 
0x000e23b1: add dword ptr [eax], eax; add byte ptr [ebx - 0xab7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000e3531: add dword ptr [eax], eax; add byte ptr [ebx - 0xbb7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000e3469: add dword ptr [eax], eax; add byte ptr [ebx - 0xc77b], cl; dec dword ptr [ecx + 0x26e82404]; ret 0xffff; 
0x001236e5: add dword ptr [eax], eax; add byte ptr [ebx - 0xdb43], cl; jmp dword ptr [esi - 0x70]; 
0x0011da99: add dword ptr [eax], eax; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x75]; 
0x000d96d2: add dword ptr [eax], eax; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x7d]; 
0x00031e91: add dword ptr [eax], eax; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x75]; 
0x0005525b: add dword ptr [eax], eax; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x7d]; 
0x001229a2: add dword ptr [eax], eax; add byte ptr [ebx - 0xf775], cl; push dword ptr [ecx]; jmp dword ptr [ebp - 0x39]; 
0x00036a12: add dword ptr [eax], eax; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x0004dcce: add dword ptr [eax], eax; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x000e02cb: add dword ptr [eax], eax; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x77]; 
0x00076a90: add dword ptr [eax], eax; add byte ptr [ebx - 0xfb55], cl; dec dword ptr [ebx - 0x177cefbb]; add dword ptr [ecx], eax; ret 0xd0f7; 
0x00027212: add dword ptr [eax], eax; add byte ptr [ebx], ah; inc esp; and al, 8; ret; 
0x0004c43f: add dword ptr [eax], eax; add byte ptr [ecx + 0x1b802], cl; add byte ptr [eax], al; ret; 
0x00069108: add dword ptr [eax], eax; add byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x000d9044: add dword ptr [eax], eax; add byte ptr [ecx - 0x17fbdbbc], cl; pushal; ret; 
0x00097563: add dword ptr [eax], eax; add byte ptr [ecx - 0x1d17dbfc], cl; idiv al; jmp dword ptr [esi - 0x70]; 
0x00126cb4: add dword ptr [eax], eax; add byte ptr [ecx - 0x2f00dbec], cl; add esp, 0x18; pop ebx; ret; 
0x000f117a: add dword ptr [eax], eax; add byte ptr [ecx - 0x76f3dba4], cl; ret; 
0x000c8bb9: add dword ptr [eax], eax; add byte ptr [ecx - 0x76fbdbac], cl; add al, 0x24; call esi; 
0x0010d71d: add dword ptr [eax], eax; add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ebp - 0x444216d], cl; jmp dword ptr [esi - 0x3f]; 
0x00056d47: add dword ptr [eax], eax; add byte ptr [ecx], al; test dword ptr [eax - 0x16000011], esi; ret 0xfffc; 
0x00078073: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x850f; 
0x00021f58: add dword ptr [eax], eax; add byte ptr [ecx], ch; ret 0x6c8b; 
0x00020f0a: add dword ptr [eax], eax; add byte ptr [ecx], ch; ret 0xb48b; 
0x0007f510: add dword ptr [eax], eax; add byte ptr [ecx], ch; ret 0xea01; 
0x000a87c3: add dword ptr [eax], eax; add byte ptr [ecx], ch; ret 0xfa83; 
0x000875bd: add dword ptr [eax], eax; add byte ptr [edi + 0x5b], bl; ret; 
0x000a70a2: add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x000e9600: add dword ptr [eax], eax; add byte ptr [edi - 0x64], bh; mov ecx, dword ptr [esp + 0x20]; xchg edi, ebx; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x00189dce: add dword ptr [eax], eax; add byte ptr [edi], cl; cld; jmp dword ptr [edx]; 
0x000c919f: add dword ptr [eax], eax; add byte ptr [edi], cl; inc ebp; ret 0x45c7; 
0x00095122: add dword ptr [eax], eax; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x000d4865: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg eax, esp; ret 0x3d; 
0x0000583d: add dword ptr [eax], eax; add byte ptr [edx], ah; add byte ptr [eax + eax], cl; ret; 
0x0000af6d: add dword ptr [eax], eax; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; fsub dword ptr [eax + eax]; add byte ptr [eax], dl; ret; 
0x0000b59d: add dword ptr [eax], eax; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 8; 
0x0002e6e6: add dword ptr [eax], eax; add byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x001481fc: add dword ptr [eax], eax; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00149ad5: add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x00149a75: add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x0018d7ce: add dword ptr [eax], eax; add dh, ch; cmc; jmp dword ptr [ebx]; 
0x00147285: add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x00147296: add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x001472a7: add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x0014723f: add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x00147250: add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x00147261: add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x00169e9e: add dword ptr [eax], eax; add dword ptr [edx], esi; int1; jmp esp; 
0x000ed289: add dword ptr [eax], eax; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x0004c4f1: add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x0016a7be: add dword ptr [eax], eax; and al, 0x21; lcall ptr [eax]; ret 1; 
0x0016eb8e: add dword ptr [eax], eax; and al, 0x28; cld; call esp; 
0x00169f9e: add dword ptr [eax], eax; and al, 0x44; int1; jmp esp; 
0x0016a2ce: add dword ptr [eax], eax; and al, 0x83; int1; jmp esp; 
0x0016abfe: add dword ptr [eax], eax; and al, 0xb6; hlt; call dword ptr [eax]; 
0x0016ae76: add dword ptr [eax], eax; and al, 0xe8; hlt; jmp dword ptr [eax - 0xf]; 
0x0016f046: add dword ptr [eax], eax; and al, 0xf3; std; jmp eax; 
0x0016f056: add dword ptr [eax], eax; and al, 0xfa; std; call esp; 
0x0018288e: add dword ptr [eax], eax; and byte ptr [eax], ch; int1; jmp esi; 
0x00183bce: add dword ptr [eax], eax; and byte ptr [ebp - 0xf], bl; call dword ptr [eax]; 
0x0018b0ce: add dword ptr [eax], eax; and byte ptr [edi - 0xb], cl; call dword ptr [ebx]; 
0x0016929e: add dword ptr [eax], eax; and eax, esi; jmp dword ptr [eax + 0x4000100]; 
0x00187006: add dword ptr [eax], eax; cdq; add ebx, esi; call dword ptr [eax]; 
0x00184726: add dword ptr [eax], eax; clc; adc dl, dh; jmp dword ptr [eax]; 
0x0018c1e6: add dword ptr [eax], eax; clc; and edi, edx; call dword ptr [edi]; 
0x0018da06: add dword ptr [eax], eax; clc; div ebp; call dword ptr [esi]; 
0x0018d196: add dword ptr [eax], eax; clc; fdivr st(5), st(0); call dword ptr [eax]; 
0x0018efc6: add dword ptr [eax], eax; clc; sub esi, esi; call dword ptr [edi + 1]; 
0x0018887a: add dword ptr [eax], eax; cld; hlt; call dword ptr [eax]; 
0x001878e2: add dword ptr [eax], eax; cld; sbb dh, bl; call dword ptr [ebx]; 
0x0019c04b: add dword ptr [eax], eax; cli; add dword ptr [0xffff0000], eax; add dword ptr [edx], ebx; sbb eax, 0x73000005; ret 0x8d01; 
0x0016a95e: add dword ptr [eax], eax; cmc; out 0xf3, al; jmp dword ptr [eax - 0x33]; 
0x00169e96: add dword ptr [eax], eax; cmc; xor ecx, esi; push dword ptr [ecx + eax*2 + 0x32010001]; int1; jmp esp; 
0x0018d052: add dword ptr [eax], eax; cmp al, 0xd4; cmc; jmp dword ptr [eax]; 
0x00183172: add dword ptr [eax], eax; cmp al, 0xf2; cli; jmp dword ptr [ebx + 1]; 
0x0018a256: add dword ptr [eax], eax; cmp al, dh; hlt; call dword ptr [ebx]; 
0x0018453e: add dword ptr [eax], eax; cmp bh, 0xf1; call edi; 
0x00182d86: add dword ptr [eax], eax; cmp byte ptr [edi], ch; int1; call dword ptr [esi]; 
0x00055491: add dword ptr [eax], eax; cmp eax, 1; sbb eax, eax; add esp, 0x18; pop ebx; ret; 
0x0016e8ee: add dword ptr [eax], eax; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; call dword ptr [eax + 0x34]; 
0x0016e92e: add dword ptr [eax], eax; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; call dword ptr [eax - 0x58fffe49]; and bh, ah; call eax; 
0x0016e936: add dword ptr [eax], eax; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; call eax; 
0x0016e94e: add dword ptr [eax], eax; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; dec dword ptr [eax + esi*8 + 0x22a70001]; cld; jmp esp; 
0x0016e956: add dword ptr [eax], eax; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; jmp esp; 
0x00182216: add dword ptr [eax], eax; cwde; and cl, dh; jmp dword ptr [ebx]; 
0x0018da56: add dword ptr [eax], eax; cwde; clc; cmc; jmp esi; 
0x0018ad56: add dword ptr [eax], eax; cwde; cmp al, 0xf5; jmp dword ptr [edx]; 
0x00187596: add dword ptr [eax], eax; dec eax; adc bl, dh; call dword ptr [ebx]; 
0x00169ec6: add dword ptr [eax], eax; dec ecx; xor dh, cl; call esp; 
0x0018b14a: add dword ptr [eax], eax; dec edi; cmc; call dword ptr [ebx]; 
0x0016ae8e: add dword ptr [eax], eax; dec esi; in eax, dx; hlt; call eax; 
0x0018c092: add dword ptr [eax], eax; dec esp; cmpsb byte ptr [esi], byte ptr es:[edi]; cmc; jmp eax; 
0x0018b332: add dword ptr [eax], eax; fcom qword ptr [esi - 0xb]; call dword ptr [ebx]; 
0x00187cd2: add dword ptr [eax], eax; fcomp qword ptr [ecx - 0xd]; call dword ptr [esi]; 
0x0018dea2: add dword ptr [eax], eax; fdiv st(6), st(0); cmc; call dword ptr [ebp]; 
0x0018890a: add dword ptr [eax], eax; fdivp st(3); hlt; call dword ptr [eax]; 
0x00184432: add dword ptr [eax], eax; fdivr st(5), st(0); int1; call dword ptr [ebx]; 
0x0017fef2: add dword ptr [eax], eax; fsub st(5), st(0); sti; jmp ecx; 
0x00187ffa: add dword ptr [eax], eax; hlt; mov ah, 0xf3; jmp dword ptr [esi + 3]; 
0x00169ac6: add dword ptr [eax], eax; hlt; sal al, 0xff; lock xor byte ptr [ecx], al; add byte ptr [ecx + eax*8 - 0x10], al; call dword ptr [eax]; 
0x00188a6a: add dword ptr [eax], eax; hlt; sbb esp, esi; call eax; 
0x00169c66: add dword ptr [eax], eax; hlt; sub al, 0xf1; jmp esp; 
0x0016ab66: add dword ptr [eax], eax; hlt; xor esp, esi; push dword ptr [eax + 0x540001dc]; xor dh, ah; call eax; 
0x0016b0f6: add dword ptr [eax], eax; in al, 0x1d; cmc; call eax; 
0x0016a0fe: add dword ptr [eax], eax; in al, 0x5c; int1; call dword ptr [eax + 0x5a]; 
0x0016a186: add dword ptr [eax], eax; in al, 0x66; int1; call dword ptr [eax]; 
0x0018c70a: add dword ptr [eax], eax; in al, 0xba; cmc; call dword ptr [ebp]; 
0x0016ad3e: add dword ptr [eax], eax; in al, 0xca; hlt; call dword ptr [eax - 0x18]; 
0x0016a606: add dword ptr [eax], eax; in al, 0xf2; jmp esp; 
0x0018d9f2: add dword ptr [eax], eax; in al, dx; div ebp; call dword ptr [esi]; 
0x00189eb2: add dword ptr [eax], eax; in al, dx; in al, 0xf4; call dword ptr [edx]; 
0x001939c2: add dword ptr [eax], eax; in al, dx; or bh, dh; call dword ptr [esi]; 
0x0018a8c2: add dword ptr [eax], eax; in al, dx; xor ebp, esi; call dword ptr [ebp]; 
0x00188cce: add dword ptr [eax], eax; inc eax; push ds; hlt; call ecx; 
0x001881be: add dword ptr [eax], eax; inc eax; sal ebx, 1; call dword ptr [eax]; 
0x001854de: add dword ptr [eax], eax; inc eax; xor al, 0xf2; call dword ptr [edx]; 
0x00169d9e: add dword ptr [eax], eax; inc ecx; xor cl, dh; jmp esp; 
0x0018b00a: add dword ptr [eax], eax; inc esi; cmc; jmp dword ptr [ebx]; 
0x001824ca: add dword ptr [eax], eax; inc esp; dec esp; cld; call esp; 
0x0016adb6: add dword ptr [eax], eax; inc esp; fcomi st(4); push dword ptr [eax - 0x2afffe15]; fcomi st(4); call dword ptr [eax - 0x15]; 
0x0016a33e: add dword ptr [eax], eax; inc esp; lodsb al, byte ptr [esi]; int1; jmp eax; 
0x0016a41e: add dword ptr [eax], eax; inc esp; mov bl, 0xf1; call dword ptr [eax + 0x6b]; 
0x00183aba: add dword ptr [eax], eax; inc esp; push ebx; int1; call dword ptr [eax]; 
0x00188bba: add dword ptr [eax], eax; inc esp; sbb al, 0xf4; jmp dword ptr [ebp]; 
0x00169e46: add dword ptr [eax], eax; insd dword ptr es:[edi], dx; xor ecx, esi; call esp; 
0x0016aeae: add dword ptr [eax], eax; int1; out dx, al; hlt; call dword ptr [eax]; 
0x0018a0ee: add dword ptr [eax], eax; jo 0x18a0db; hlt; call dword ptr [eax]; 
0x0018be4e: add dword ptr [eax], eax; jo 0x18bdf2; cmc; jmp dword ptr [edx]; 
0x00169dc6: add dword ptr [eax], eax; lea esi, dword ptr [eax]; int1; call esp; 
0x001838a2: add dword ptr [eax], eax; lodsb al, byte ptr [esi]; dec ecx; int1; call dword ptr [ebx + 1]; 
0x0018e282: add dword ptr [eax], eax; lodsb al, byte ptr [esi]; or al, 0xf6; jmp dword ptr [edx]; 
0x00188152: add dword ptr [eax], eax; lodsb al, byte ptr [esi]; sal bl, 1; call dword ptr [eax]; 
0x0016acae: add dword ptr [eax], eax; lodsd eax, dword ptr [esi]; ret 0xfff4; 
0x0018cf4e: add dword ptr [eax], eax; loope 0x18cf30; cmc; call dword ptr [eax]; 
0x0016af8e: add dword ptr [eax], eax; mov ah, 0; cmc; call eax; 
0x0018b83a: add dword ptr [eax], eax; mov ah, 0x79; cmc; jmp dword ptr [esi]; 
0x0016a306: add dword ptr [eax], eax; mov ah, 0x89; int1; call dword ptr [eax + 0x66]; 
0x0016ac86: add dword ptr [eax], eax; mov ah, 0xc1; hlt; lcall ptr [eax + 0x200001e3]; ret 0xfff4; 
0x0018cc6a: add dword ptr [eax], eax; mov ah, 0xcb; cmc; call dword ptr [ebx]; 
0x0018a1da: add dword ptr [eax], eax; mov ah, 0xe9; hlt; call dword ptr [eax + 6]; 
0x0018a34e: add dword ptr [eax], eax; mov ah, 0xf5; hlt; call dword ptr [eax]; 
0x0016b036: add dword ptr [eax], eax; mov ah, 0xf; cmc; call esp; 
0x00184e8e: add dword ptr [eax], eax; mov al, 0x49; cld; call ebx; 
0x0018d51e: add dword ptr [eax], eax; mov al, 0xe3; cmc; call dword ptr [edi]; 
0x001853da: add dword ptr [eax], eax; mov byte ptr [edx - 0xe], al; call dword ptr [eax]; 
0x00182c16: add dword ptr [eax], eax; mov byte ptr [esi], ch; int1; call dword ptr [ebx]; 
0x0016af2e: add dword ptr [eax], eax; mov ch, 0xf6; hlt; call esp; 
0x0019bfca: add dword ptr [eax], eax; mov dl, 2; add eax, 0xffff0000; add dword ptr [ebx], ecx; ret; 
0x00112698: add dword ptr [eax], eax; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x00113b48: add dword ptr [eax], eax; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x00109a9c: add dword ptr [eax], eax; mov dword ptr [esp], esi; call edi; 
0x000df43d: add dword ptr [eax], eax; mov ecx, 0xd; mov edi, ebp; xchg edi, ebx; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000e80b9: add dword ptr [eax], eax; mov ecx, eax; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x000e8169: add dword ptr [eax], eax; mov ecx, eax; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000deb99: add dword ptr [eax], eax; mov ecx, eax; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0018d182: add dword ptr [eax], eax; mov esp, ds; cmc; jmp dword ptr [ecx]; 
0x00188aa2: add dword ptr [eax], eax; mov word ptr [edx], ds; hlt; call dword ptr [edi]; 
0x0016ed36: add dword ptr [eax], eax; movsb byte ptr es:[edi], byte ptr [esi]; dec eax; cld; jmp dword ptr [eax + 3]; 
0x0016a066: add dword ptr [eax], eax; movsb byte ptr es:[edi], byte ptr [esi]; dec edi; int1; call eax; 
0x00189d2a: add dword ptr [eax], eax; movsb byte ptr es:[edi], byte ptr [esi]; fcompi st(4); call dword ptr [edx]; 
0x00189e9a: add dword ptr [eax], eax; movsb byte ptr es:[edi], byte ptr [esi]; in al, 0xf4; call dword ptr [edx]; 
0x0016997e: add dword ptr [eax], eax; movsb byte ptr es:[edi], byte ptr [esi]; mov bh, 0xf0; call esp; 
0x0016a3d6: add dword ptr [eax], eax; movsb byte ptr es:[edi], byte ptr [esi]; mov cl, 0xf1; jmp dword ptr [eax + 0x6a]; 
0x0018b3aa: add dword ptr [eax], eax; movsb byte ptr es:[edi], byte ptr [esi]; push edi; cmc; call dword ptr [ebx]; 
0x00169ade: add dword ptr [eax], eax; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x001693b6: add dword ptr [eax], eax; movsb byte ptr es:[edi], byte ptr [esi]; xor al, dh; jmp dword ptr [eax + 0xc]; 
0x0018850e: add dword ptr [eax], eax; movsd dword ptr es:[edi], dword ptr [esi]; sbb dh, ah; call dword ptr [eax]; 
0x0018ec9e: add dword ptr [eax], eax; nop; and dh, dh; jmp dword ptr [edi]; 
0x00180c7e: add dword ptr [eax], eax; nop; ret 0xfff0; 
0x0018509e: add dword ptr [eax], eax; nop; sub dl, dh; jmp dword ptr [ecx]; 
0x00183276: add dword ptr [eax], eax; or ah, dh; cli; jmp dword ptr [ebx]; 
0x0018aea2: add dword ptr [eax], eax; or al, 0x40; cmc; jmp ecx; 
0x00189fc2: add dword ptr [eax], eax; or al, 0xe7; hlt; call esi; 
0x0018b5f6: add dword ptr [eax], eax; or byte ptr [edi - 0xb], bl; call dword ptr [edx]; 
0x001890f6: add dword ptr [eax], eax; or byte ptr [edx - 0xc], al; call edi; 
0x001874aa: add dword ptr [eax], eax; or dh, bl; jmp dword ptr [ebp + 2]; 
0x0016ebfe: add dword ptr [eax], eax; outsb dx, byte ptr [esi]; xor esp, edi; call eax; 
0x001896ae: add dword ptr [eax], eax; pmaxsw mm5, mm0; jmp dword ptr [esi + 0xb]; 
0x00183f36: add dword ptr [eax], eax; pop eax; outsb dx, byte ptr [esi]; int1; jmp dword ptr [edi]; 
0x00187066: add dword ptr [eax], eax; pop ecx; add ebx, esi; call dword ptr [eax]; 
0x00169d1e: add dword ptr [eax], eax; pop ecx; das; int1; jmp esp; 
0x00169c96: add dword ptr [eax], eax; pop edx; int1; push dword ptr [ebp + esi + 0x2e6a0001]; int1; jmp esp; 
0x00094f8a: add dword ptr [eax], eax; pop esi; pop edi; pop ebp; ret; 
0x00187a42: add dword ptr [eax], eax; pop esp; and dh, bl; jmp dword ptr [eax + 3]; 
0x00184982: add dword ptr [eax], eax; pop esp; sbb dl, dh; call dword ptr [ecx]; 
0x001852e2: add dword ptr [eax], eax; pop esp; xor edx, esi; jmp dword ptr [eax]; 
0x0018898a: add dword ptr [eax], eax; pop ss; hlt; jmp dword ptr [eax]; 
0x0018d00e: add dword ptr [eax], eax; popal; fdivrp st(5); call dword ptr [eax]; 
0x00169c9e: add dword ptr [eax], eax; push 0x2e; int1; jmp esp; 
0x001888aa: add dword ptr [eax], eax; push ds; cld; hlt; call dword ptr [eax]; 
0x00189c1e: add dword ptr [eax], eax; push eax; aam 0xf4; call dword ptr [edx]; 
0x00188d2e: add dword ptr [eax], eax; push eax; and esp, esi; jmp dword ptr [edi]; 
0x0018343e: add dword ptr [eax], eax; push eax; cmp esi, ecx; jmp edx; 
0x0018397e: add dword ptr [eax], eax; push eax; dec esp; int1; jmp dword ptr [edx + 1]; 
0x001893ba: add dword ptr [eax], eax; push edi; hlt; jmp esi; 
0x001891ba: add dword ptr [eax], eax; push esp; dec edi; hlt; call dword ptr [ebx + 1]; 
0x0016acd6: add dword ptr [eax], eax; push esp; ret; 
0x00167b4e: add dword ptr [eax], eax; push esp; sbb bl, ch; call dword ptr [eax]; 
0x0018bbaa: add dword ptr [eax], eax; push esp; xchg eax, ebx; cmc; call dword ptr [ecx]; 
0x0016ab6e: add dword ptr [eax], eax; push esp; xor dh, ah; call eax; 
0x0018cf1e: add dword ptr [eax], eax; pushal; aam 0xf5; call edi; 
0x00186e66: add dword ptr [eax], eax; pushal; push edx; call dword ptr [eax]; 
0x00189f92: add dword ptr [eax], eax; pushfd; out 0xf4, al; jmp dword ptr [eax]; 
0x001884ee: add dword ptr [eax], eax; rcl bh, 0xf3; jmp dword ptr [eax]; 
0x0018cf7e: add dword ptr [eax], eax; rcr esi, -0xb; call dword ptr [eax]; 
0x0000c97a: add dword ptr [eax], eax; ret 1; 
0x00169716: add dword ptr [eax], eax; ret; 
0x0018aece: add dword ptr [eax], eax; rol byte ptr [ecx - 0xb], 1; call dword ptr [ebx]; 
0x00186a3e: add dword ptr [eax], eax; sal dl, 0xf2; call ecx; 
0x00169ad6: add dword ptr [eax], eax; sal eax, -1; and al, 0x31; add dword ptr [eax], eax; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x0018a16e: add dword ptr [eax], eax; sar byte ptr [esi], 0xfa; call dword ptr [eax]; 
0x001844fe: add dword ptr [eax], eax; sar dl, 1; int1; jmp esi; 
0x0018b192: add dword ptr [eax], eax; sbb al, 0x2f; cli; call dword ptr [ebp + 2]; 
0x00169e16: add dword ptr [eax], eax; sbb al, 0x31; int1; push dword ptr [esi + edi + 0x31290001]; int1; jmp esp; 
0x0018aa52: add dword ptr [eax], eax; sbb al, 0x35; cmc; call dword ptr [ecx]; 
0x0018d6f2: add dword ptr [eax], eax; sbb al, 0xeb; cmc; call dword ptr [edx]; 
0x0018d7e2: add dword ptr [eax], eax; sbb al, 0xee; cmc; jmp dword ptr [ebx]; 
0x0018642e: add dword ptr [eax], eax; shl dh, 0xf2; jmp dword ptr [edx]; 
0x00182c02: add dword ptr [eax], eax; sub al, 0x5c; cld; call dword ptr [ebx]; 
0x0018a242: add dword ptr [eax], eax; sub al, 0xf0; hlt; call dword ptr [ebx]; 
0x0018a486: add dword ptr [eax], eax; sub bh, dh; hlt; call dword ptr [esi]; 
0x0018d4f6: add dword ptr [eax], eax; sub bl, ah; cmc; jmp dword ptr [edx]; 
0x0018b126: add dword ptr [eax], eax; sub byte ptr [edi - 0xb], cl; call dword ptr [ebx]; 
0x0018e1d6: add dword ptr [eax], eax; sub byte ptr [esi + esi*8], cl; call dword ptr [edi]; 
0x00169e1e: add dword ptr [eax], eax; sub dword ptr [ecx], esi; int1; jmp esp; 
0x00188c16: add dword ptr [eax], eax; test al, 0x1c; hlt; jmp dword ptr [ecx]; 
0x00184d06: add dword ptr [eax], eax; test al, 0xda; cli; call dword ptr [ecx + 3]; 
0x0016a2fe: add dword ptr [eax], eax; test byte ptr [ecx + 0x6630fff1], cl; add dword ptr [eax], eax; mov ah, 0x89; int1; call dword ptr [eax + 0x66]; 
0x0016aa7e: add dword ptr [eax], eax; test byte ptr [edx], al; hlt; call dword ptr [eax - 0x29]; 
0x0018e24a: add dword ptr [eax], eax; test byte ptr [esi + esi*8], cl; call dword ptr [edx]; 
0x001894fa: add dword ptr [eax], eax; test byte ptr [esi - 0xc], bl; call dword ptr [edx]; 
0x0018853e: add dword ptr [eax], eax; test dword ptr [edx], ebx; hlt; call dword ptr [eax]; 
0x001693be: add dword ptr [eax], eax; xchg eax, ebp; xor eax, esi; call eax; 
0x0018ecfa: add dword ptr [eax], eax; xchg eax, esp; and esi, esi; jmp edi; 
0x0016a3fe: add dword ptr [eax], eax; xchg eax, esp; mov dl, 0xf1; jmp eax; 
0x0016a526: add dword ptr [eax], eax; xchg eax, esp; ret 0xfff1; 
0x0016ec16: add dword ptr [eax], eax; xchg eax, esp; xor esp, edi; jmp dword ptr [eax]; 
0x0016b126: add dword ptr [eax], eax; xor al, 0x26; cmc; call eax; 
0x00169f4e: add dword ptr [eax], eax; xor al, 0x3b; int1; call eax; 
0x0016ac36: add dword ptr [eax], eax; xor al, 0xbd; hlt; jmp dword ptr [eax - 0x1f]; 
0x00189dae: add dword ptr [eax], eax; xor dl, ah; hlt; jmp dword ptr [edx]; 
0x00169d96: add dword ptr [eax], eax; xor dword ptr [eax], esi; int1; push dword ptr [ebx + edi + 0x30410001]; int1; jmp esp; 
0x00033db8: add dword ptr [eax], eax; xor eax, eax; add esp, 8; ret; 
0x00033d12: add dword ptr [eax], eax; xor eax, eax; ret; 
0x0004b2ab: add dword ptr [eax], edi; ret 0x840f; 
0x0004b4b1: add dword ptr [eax], edi; ret 0x850f; 
0x0009587c: add dword ptr [eax], edx; ret; 
0x0009589c: add dword ptr [eax], esi; ret; 
0x000da575: add dword ptr [eax], esi; ror byte ptr [ebx - 0x74dfdb8c], 0x7c; and al, 0x24; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 8; 
0x0009588c: add dword ptr [eax], esp; ret; 
0x00124ddd: add dword ptr [ebp + 0x14], esi; add esp, 0x18; mov eax, edx; pop ebx; ret; 
0x00067f49: add dword ptr [ebp + 0x14], esi; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000b3d60: add dword ptr [ebp + 0x16], esi; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x001499d5: add dword ptr [ebp + 0x18], esi; lea eax, dword ptr [ecx + 4]; ret; 
0x001499e2: add dword ptr [ebp + 0x1b], esi; lea eax, dword ptr [ecx + 0xc]; ret; 
0x0014a2a2: add dword ptr [ebp + 0x2b], esi; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0014a28a: add dword ptr [ebp + 0x33], esi; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00124d2e: add dword ptr [ebp + 0x36], esi; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x0004188d: add dword ptr [ebp + 0x3b], esi; mov eax, edx; mov ebx, dword ptr [esp + 4]; mov esi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000f54c3: add dword ptr [ebp + 0x44], esi; add esp, 0x18; mov eax, edx; pop ebx; ret; 
0x00110bc0: add dword ptr [ebp + 0x44], esi; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0004bc2e: add dword ptr [ebp + 0x53], esi; add esp, 0x18; mov eax, edx; pop ebx; ret; 
0x00068d43: add dword ptr [ebp + 0x54], esi; mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000d75c0: add dword ptr [ebp + 0x5e5bf465], ecx; pop edi; pop ebp; ret; 
0x001046ed: add dword ptr [ebp + 0x5eee75c9], eax; pop edi; pop ebp; ret; 
0x00124b34: add dword ptr [ebp + 0x75], esi; add esp, 8; pop ebx; ret; 
0x000ab3c0: add dword ptr [ebp + 0x76c88], ecx; add byte ptr [ecx + 0xf14247c], cl; sahf; ret 0xd129; 
0x00033355: add dword ptr [ebp + 0x79], esi; mov eax, dword ptr [esp + 0x1c]; add esp, 0x28; pop ebx; ret; 
0x0002e93a: add dword ptr [ebp + 0xb], esi; xor eax, eax; pop ebx; pop edi; ret; 
0x00035c1c: add dword ptr [ebp + 0xf4c2454], eax; xchg eax, ebp; ret 0xb60f; 
0x000b3ce4: add dword ptr [ebp + 0xf], esi; add esp, 0x18; pop esi; ret; 
0x0014b30e: add dword ptr [ebp + 0xf], esi; pop ebx; ret; 
0x0011e5d0: add dword ptr [ebp + ebp + 0x72], esi; adc esi, dword ptr [ecx]; rol byte ptr [ebx - 0x6bf0fd06], 0xc0; add esp, 0x28; pop esi; ret; 
0x0011e990: add dword ptr [ebp + edi + 0x72], esi; adc esi, dword ptr [ecx]; rol byte ptr [ebx - 0x6bf0fd06], 0xc0; add esp, 0x28; pop esi; ret; 
0x0011e810: add dword ptr [ebp + esi + 0x72], esi; adc esi, dword ptr [ecx]; rol byte ptr [ebx - 0x6bf0fd06], 0xc0; add esp, 0x28; pop esi; ret; 
0x00168888: add dword ptr [ebp - 0x13], esi; push dword ptr [eax]; ret; 
0x001016c9: add dword ptr [ebp - 0x14], esi; add esp, 4; mov eax, edi; pop esi; pop edi; ret; 
0x00082fa5: add dword ptr [ebp - 0x15], esi; xor eax, eax; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0002f56b: add dword ptr [ebp - 0x16], esi; mov eax, 1; pop esi; pop edi; ret; 
0x00097fe5: add dword ptr [ebp - 0x18], esi; sub eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00094f4b: add dword ptr [ebp - 0x36], esi; nop; pop esi; pop edi; pop ebp; ret; 
0x0008d404: add dword ptr [ebp - 0x7af0fe81], ecx; mov byte ptr [0x5f000009], al; pop esi; pop ebx; ret; 
0x00087448: add dword ptr [ebp - 0x7af0feb6], ecx; add eax, dword ptr ds:[eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000421d7: add dword ptr [ebp - 0x7cbfdbbc], ecx; rol dword ptr [ecx], 0x39; ret 0xed72; 
0x0004215f: add dword ptr [ebp - 0x7cdfdbbc], ecx; rol dword ptr [ecx], 0x39; ret 0xed72; 
0x00101a2f: add dword ptr [ebp - 0xa], esi; pop esi; sub eax, 1; pop edi; pop ebp; ret; 
0x00098582: add dword ptr [ebp - 0xd], esi; pop esi; sub eax, 4; pop edi; pop ebp; ret; 
0x00121dc3: add dword ptr [ebx + 0x1274fffa], eax; mov ecx, edx; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000734c0: add dword ptr [ebx + 0x18a0], 1; pop ebx; ret; 
0x00097039: add dword ptr [ebx + 0x211c244c], ecx; ret 0xd789; 
0x000941ff: add dword ptr [ebx + 0x3888ffd8], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000bd782: add dword ptr [ebx + 0x489b704], ecx; and al, 0xe8; ret 0xf597; 
0x0001ced1: add dword ptr [ebx + 0x4c881477], ecx; push ss; add al, 0x83; ret 0x3b01; 
0x0011a74c: add dword ptr [ebx + 0x54893c46], ecx; and al, 4; mov dword ptr [esp], ecx; call dword ptr [eax + 4]; 
0x000264b7: add dword ptr [ebx + 0x558b04c7], eax; or byte ptr [ebp - 0x5cf000ba], cl; ret 0x8a72; 
0x0008b515: add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x000f2034: add dword ptr [ebx + 0x5e5b0cc4], eax; pop edi; pop ebp; ret; 
0x000e8443: add dword ptr [ebx + 0x5e5b24c4], eax; ret; 
0x000ec188: add dword ptr [ebx + 0x5e5b2cc4], eax; pop edi; pop ebp; ret; 
0x000f8b33: add dword ptr [ebx + 0x5e5b3cc4], eax; pop edi; pop ebp; ret; 
0x00073f91: add dword ptr [ebx + 0x5e], ebx; pop edi; pop ebp; ret; 
0x0003f775: add dword ptr [ebx + 0x5e], ebx; ret; 
0x000a5a99: add dword ptr [ebx + 0x748b241c], ecx; and al, 4; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0011acae: add dword ptr [ebx + 0x7c892050], ecx; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x000555dd: add dword ptr [ebx + 0x7c8b2434], ecx; and al, 4; add esp, 8; ret; 
0x0006e584: add dword ptr [ebx + 0xa8904c1], eax; add esp, 0x18; pop ebx; ret; 
0x0006e423: add dword ptr [ebx + 0xa8904c1], eax; ret; 
0x0007316f: add dword ptr [ebx + 0xb750450], ecx; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x00089c03: add dword ptr [ebx + 0xf660741], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, dword ptr [edx + 0xa]; ret; 
0x00085823: add dword ptr [ebx + 0xf660741], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x00089c23: add dword ptr [ebx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; ret; 
0x00085843: add dword ptr [ebx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00174982: add dword ptr [ebx + eax*2], 0xe; xor byte ptr [edx], al; mov eax, dword ptr [0x43100e0a]; ret; 
0x0004a165: add dword ptr [ebx - 0x15745], ecx; jmp dword ptr [ebp - 0x75]; 
0x00060477: add dword ptr [ebx - 0x15775], ecx; inc dword ptr [ecx]; ror byte ptr [ecx - 0x1037b], 1; jmp dword ptr [ebp - 0x75]; 
0x0005d8ee: add dword ptr [ebx - 0x15775], ecx; jmp dword ptr [ebp - 0x75]; 
0x0004f95e: add dword ptr [ebx - 0x19373], ecx; jmp dword ptr [ebp - 0x75]; 
0x000537d5: add dword ptr [ebx - 0x1df7b], eax; call dword ptr [ecx]; 
0x0007c34c: add dword ptr [ebx - 0x298afb88], ecx; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x0011bb0c: add dword ptr [ebx - 0x2f76d73c], eax; pop ebx; ret; 
0x0003305d: add dword ptr [ebx - 0x3776dbcc], ecx; mov dword ptr [ecx + 4], edx; mov edi, dword ptr [esp + 4]; add esp, 8; ret 4; 
0x000678b2: add dword ptr [ebx - 0x49f0fe3f], eax; ror byte ptr [ecx - 0x3b7cebb6], 0x18; pop ebx; ret; 
0x0010983e: add dword ptr [ebx - 0x74e7db8c], ecx; pop esp; and al, 0x14; add esp, 0x1c; ret; 
0x00019d26: add dword ptr [ebx - 0x76ebdb94], ecx; ret 0x4c89; 
0x000636f6: add dword ptr [ebx - 0x76ebdbb4], ecx; push esi; sbb al, 0x83; ret 0x8901; 
0x00082599: add dword ptr [ebx - 0x77], ebx; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x00127c72: add dword ptr [ebx - 0x7ac3dbbc], ecx; ret 0x1574; 
0x00127b53: add dword ptr [ebx - 0x7ac7dbbc], ecx; ret 0x840f; 
0x000d4429: add dword ptr [ebx - 0x7ccfdbbc], ecx; ret 0x8940; 
0x00185c1c: add dword ptr [ebx - 0x7d], ecx; add ebx, dword ptr [ecx - 0x7a]; add al, byte ptr [edx]; bound ecx, qword ptr [esi]; add al, 0xc6; ret; 
0x00185bfc: add dword ptr [ebx - 0x7d], ecx; add ebx, dword ptr [ecx - 0x7a]; add bh, byte ptr [edi + 0xe]; add al, 0xc6; ret; 
0x0011a766: add dword ptr [ebx - 0xbb73], ecx; dec dword ptr [ebx + 0x4c892050]; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x001219cb: add dword ptr [ebx - 0xf775], ecx; jmp dword ptr [ebp - 0x39]; 
0x00190bf9: add dword ptr [ebx], 0x43; push cs; xor byte ptr [edx + 0xa], bh; push cs; or al, 0x41; ret; 
0x00198bcd: add dword ptr [ebx], 0x4f; xchg byte ptr [edx], al; add al, byte ptr [edx + 0xe]; add al, 0xc6; ret; 
0x00197525: add dword ptr [ebx], 0x4f; xchg byte ptr [edx], al; add bl, byte ptr [eax + 0xe]; add al, 0xc6; ret; 
0x00199db9: add dword ptr [ebx], 0x4f; xchg byte ptr [edx], al; insd dword ptr es:[edi], dx; push cs; add al, 0xc6; ret; 
0x00197035: add dword ptr [ebx], 0x4f; xchg byte ptr [edx], al; jno 0x19704a; add al, 0xc6; ret; 
0x00195af5: add dword ptr [ebx], 0x51; xchg byte ptr [edx], al; add cl, byte ptr [esi + 0xa]; push cs; add al, 0xc6; ret; 
0x00195b41: add dword ptr [ebx], 0x51; xchg byte ptr [edx], al; jo 0x195b56; add al, 0xc6; ret; 
0x001924cd: add dword ptr [ebx], 0x51; xchg byte ptr [edx], al; outsd dx, dword ptr [esi]; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00188b19: add dword ptr [ebx], 0x51; xchg byte ptr [edx], al; push 0xe; add al, 0xc6; ret; 
0x00170991: add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; add al, byte ptr [edx + 0xa]; push cs; add al, 0xc6; ret; 
0x0017c861: add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; add bl, byte ptr [ebx + 0xa]; push cs; add al, 0xc6; ret; 
0x001907d9: add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; add cl, byte ptr [esi + 0xe]; add al, 0xc6; ret; 
0x0019b19d: add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; add dl, byte ptr [ebp + 0xe]; add al, 0xc6; ret; 
0x001741d1: add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; add dl, byte ptr [edx + 0xa]; push cs; add al, 0xc6; ret; 
0x00171fe5: add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; imul ecx, dword ptr [edx], 0xe; add al, 0xc6; ret; 
0x0018df89: add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; jno 0x18df9e; add al, 0xc6; ret; 
0x00175211: add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; jnp 0x175226; add al, 0xc6; ret; 
0x001734b9: add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; jo 0x1734ca; push cs; add al, 0xc6; ret; 
0x00178ebd: add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; jo 0x178ed2; add al, 0xc6; ret; 
0x00179c6d: add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; jp 0x179c7e; push cs; add al, 0xc6; ret; 
0x0017ad29: add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; jp 0x17ad3a; push cs; add al, 0xc6; ret; 
0x0019aa1d: add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; jp 0x19aa2e; push cs; add al, 0xc6; ret; 
0x0019aa45: add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; jp 0x19aa56; push cs; add al, 0xc6; ret; 
0x00171f9d: add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; or cl, byte ptr [0xffffc604]; ret; 
0x001715b9: add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00174279: add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; or cl, byte ptr gs:[esi]; add al, 0xc6; ret; 
0x0017ab85: add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; outsd dx, dword ptr [esi]; push cs; add al, 0xc6; ret; 
0x00198169: add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; pop ebp; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00185cb1: add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; pop ecx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00171c49: add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; pop esi; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00174221: add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; pop esp; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00183581: add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; popal; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00198c41: add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; push 0xc6040e0a; ret; 
0x0017c5ed: add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; pushal; push cs; add al, 0xc6; ret; 
0x0018cc25: add dword ptr [ebx], 0x53; xchg dword ptr [edx], eax; or cl, byte ptr gs:[esi]; add al, 0xc7; ret; 
0x00170525: add dword ptr [ebx], 0x54; xchg byte ptr [edx], al; add al, byte ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x00196a29: add dword ptr [ebx], 0x54; xchg byte ptr [edx], al; add dl, byte ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x0017c899: add dword ptr [ebx], 0x54; xchg byte ptr [edx], al; dec ebx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0017981d: add dword ptr [ebx], 0x55; xchg byte ptr [edx], al; bound ecx, qword ptr [edx]; push cs; add al, 0xc6; ret; 
0x00190d1d: add dword ptr [ebx], 0x55; xchg byte ptr [edx], al; jp 0x190d2e; push cs; add al, 0xc6; ret; 
0x00191b61: add dword ptr [ebx], 0x55; xchg byte ptr [edx], al; outsd dx, dword ptr [esi]; push cs; add al, 0xc6; ret; 
0x0018f00d: add dword ptr [ebx], 0x55; xchg byte ptr [edx], al; push cs; add al, 0xc6; ret; 
0x00198d81: add dword ptr [ebx], 0x55; xchg byte ptr [edx], al; push edx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x001930e1: add dword ptr [ebx], 0x55; xchg dword ptr [edx], eax; push 0xa; push cs; add al, 0xc7; ret; 
0x00187939: add dword ptr [ebx], 0x57; xchg dword ptr [edx], eax; insb byte ptr es:[edi], dx; or cl, byte ptr [esi]; add al, 0xc7; ret; 
0x00190f59: add dword ptr [ebx], 0x58; xchg byte ptr [edx], al; dec ebp; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0018c0e5: add dword ptr [ebx], 0x58; xchg byte ptr [edx], al; or cl, byte ptr [0xffffc604]; ret; 
0x0018582d: add dword ptr [ebx], 0x58; xchg byte ptr [edx], al; pop edx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x001733c5: add dword ptr [ebx], 0x58; xchg byte ptr [edx], al; push edi; push cs; add al, 0xc6; ret; 
0x00185c1e: add dword ptr [ebx], 0x59; xchg byte ptr [edx], al; add ah, byte ptr [edx + 0xe]; add al, 0xc6; ret; 
0x0017a598: add dword ptr [ebx], 0x5d; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0018a305: add dword ptr [ebx], 0x5d; xchg byte ptr [edx], al; pushal; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00178b6c: add dword ptr [ebx], 0x60; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0019a811: add dword ptr [ebx], 0x60; xchg byte ptr [edx], al; pop ebx; push cs; add al, 0xc6; ret; 
0x001908c8: add dword ptr [ebx], 0x69; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0019b2c1: add dword ptr [ebx], 0x69; xchg byte ptr [edx], al; or cl, byte ptr [0xffffc604]; ret; 
0x0018d488: add dword ptr [ebx], 0x6a; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0017ca6d: add dword ptr [ebx], 0x6a; xchg byte ptr [edx], al; push esi; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0018ab0f: add dword ptr [ebx], 0x6c; or cl, byte ptr [esi]; add al, 0xc7; ret; 
0x001704e8: add dword ptr [ebx], 0x6d; push cs; add al, 0xc6; ret; 
0x001875a7: add dword ptr [ebx], 0x70; or cl, byte ptr [esi]; add al, 0xc7; ret; 
0x0018de91: add dword ptr [ebx], 0x70; xchg byte ptr [edx], al; pop edx; push cs; add al, 0xc6; ret; 
0x0017ae58: add dword ptr [ebx], 0x71; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0018a8d3: add dword ptr [ebx], 0x71; or cl, byte ptr [esi]; add al, 0xc7; ret; 
0x00177eec: add dword ptr [ebx], 0x71; push cs; add al, 0xc6; ret; 
0x00177e08: add dword ptr [ebx], 0x72; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x001908ec: add dword ptr [ebx], 0x73; push cs; add al, 0xc6; ret; 
0x0019094c: add dword ptr [ebx], 0x74; push cs; add al, 0xc6; ret; 
0x0019a4c8: add dword ptr [ebx], 0x76; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0018c247: add dword ptr [ebx], 0x77; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00171b8e: add dword ptr [ebx], 0x78; ret; 
0x00179d38: add dword ptr [ebx], 0x79; push cs; add al, 0xc6; ret; 
0x0018df69: add dword ptr [ebx], 0x79; xchg byte ptr [edx], al; popal; push cs; add al, 0xc6; ret; 
0x00199bd8: add dword ptr [ebx], 0x7a; push cs; add al, 0xc6; ret; 
0x0017173c: add dword ptr [ebx], 0x7b; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x001775c4: add dword ptr [ebx], 0x7c; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0018b9ac: add dword ptr [ebx], 0x7f; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00179bac: add dword ptr [ebx], 0x7f; push cs; add al, 0xc6; ret; 
0x00182600: add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e4204], al; ret; 
0x0018266f: add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e4a04], al; ret; 
0x0018265e: add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x001826c4: add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e4f04], al; ret; 
0x0018263c: add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e7104], al; ret; 
0x00182902: add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e7204], al; ret; 
0x0018264d: add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e7304], al; ret; 
0x0018262b: add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e7504], al; ret; 
0x0017908c: add dword ptr [ebx], 2; dec eax; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00178bdc: add dword ptr [ebx], 2; dec ebx; push cs; add al, 0xc6; ret; 
0x0017aea8: add dword ptr [ebx], 2; dec ecx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00178d20: add dword ptr [ebx], 2; dec ecx; push cs; add al, 0xc6; ret; 
0x00171cd3: add dword ptr [ebx], 2; inc eax; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0017a4b0: add dword ptr [ebx], 2; inc ebp; push cs; add al, 0xc6; ret; 
0x0017a4d0: add dword ptr [ebx], 2; inc edi; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0017aaf0: add dword ptr [ebx], 2; inc edx; push cs; add al, 0xc6; ret; 
0x00178a80: add dword ptr [ebx], 2; inc esi; push cs; add al, 0xc6; ret; 
0x0019b8e0: add dword ptr [ebx], 2; inc esp; push cs; add al, 0xc6; ret; 
0x0017c324: add dword ptr [ebx], 2; jno 0x17c333; push cs; add al, 0xc6; ret; 
0x00174aec: add dword ptr [ebx], 2; jnp 0x174afb; push cs; add al, 0xc6; ret; 
0x0017ae08: add dword ptr [ebx], 2; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00171bd7: add dword ptr [ebx], 2; pop eax; or cl, byte ptr [esi]; add al, 0xc7; ret; 
0x00174504: add dword ptr [ebx], 2; pop ecx; push cs; add al, 0xc6; ret; 
0x00196d1c: add dword ptr [ebx], 2; pop edi; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00172cbf: add dword ptr [ebx], 2; pop esi; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00185bdf: add dword ptr [ebx], 2; push eax; push cs; add al, 0xc6; ret; 
0x00172c44: add dword ptr [ebx], 2; push ebx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00189dc0: add dword ptr [ebx], 2; push edx; push cs; add al, 0xc6; ret; 
0x00179d84: add dword ptr [ebx], 2; push esi; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x001368c5: add dword ptr [ebx], eax; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0016dcad: add dword ptr [ebx], eax; add byte ptr [esp - 6], dh; call eax; 
0x001989e0: add dword ptr [ebx], eax; cmp al, byte ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00183f58: add dword ptr [ebx], eax; fiadd word ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x45; ret; 
0x0018ba14: add dword ptr [ebx], eax; or eax, dword ptr [ebx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001737b4: add dword ptr [ebx], eax; pop es; add cl, byte ptr [edx]; push cs; adc al, 0x45; ret; 
0x0016fc98: add dword ptr [ebx], eax; ret 0xa03; 
0x001858b0: add dword ptr [ebx], eax; test byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000f2e42: add dword ptr [ebx], ecx; add byte ptr [ecx - 0x8fbdb8c], cl; ret 0xff80; 
0x0019bfd3: add dword ptr [ebx], ecx; ret; 
0x000ce009: add dword ptr [ebx], edi; push eax; add al, 0x7c; int1; pop esi; ret; 
0x000fdbe3: add dword ptr [ecx + 0x206cc4], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0007e351: add dword ptr [ecx + 0x24348bf0], ecx; add esp, 8; ret; 
0x00089a71: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; lea eax, dword ptr [edx + 6]; pop edi; ret; 
0x00089ba1: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; lea eax, dword ptr [edx + 6]; ret; 
0x00085691: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000857c1: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x0008c911: add dword ptr [ecx + 0x3428d02], ecx; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00089941: add dword ptr [ecx + 0x3428d02], ecx; pop edi; ret; 
0x00089b71: add dword ptr [ecx + 0x3428d02], ecx; ret; 
0x000368ce: add dword ptr [ecx + 0x38f889f2], ecx; ret 0xf175; 
0x00089b91: add dword ptr [ecx + 0x418b6602], ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, dword ptr [edx + 5]; ret; 
0x000857b1: add dword ptr [ecx + 0x418b6602], ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x00089b81: add dword ptr [ecx + 0x4418a02], ecx; mov byte ptr [edx + 4], al; lea eax, dword ptr [edx + 4]; ret; 
0x000857a1: add dword ptr [ecx + 0x4418a02], ecx; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x0008ce01: add dword ptr [ecx + 0x4418b02], ecx; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x0008b76e: add dword ptr [ecx + 0x4428d02], ecx; pop edi; pop ebx; ret; 
0x00088431: add dword ptr [ecx + 0x5bd08902], ecx; ret; 
0x00093de4: add dword ptr [ecx + 0x5bf88902], ecx; pop edi; ret; 
0x0008737e: add dword ptr [ecx + 0x5ff88902], ecx; pop ebx; ret; 
0x00085581: add dword ptr [ecx + 0x5ff88902], ecx; ret; 
0x00101670: add dword ptr [ecx + 0x75c984f1], ecx; loope 0x1016d6; pop edi; pop ebp; ret; 
0x0008288a: add dword ptr [ecx + ecx*8 - 0x2fd6088b], eax; sub eax, 1; ret; 
0x0010170c: add dword ptr [ecx + ecx*8 - 0x3b7c108b], eax; adc byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x0007e21b: add dword ptr [ecx + edx*8 + 0x660273e9], esp; movsd dword ptr es:[edi], dword ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; pop edi; ret; 
0x0007e194: add dword ptr [ecx + edx*8 + 0x660273e9], esp; movsd dword ptr es:[edi], dword ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg eax, edi; mov esi, edx; ret; 
0x000f87ba: add dword ptr [ecx - 0x3b7ce3ba], ecx; and al, 0x5b; pop esi; ret; 
0x00072295: add dword ptr [ecx - 0x3b7cfbaa], ecx; adc al, 0x5b; pop esi; ret; 
0x0002e766: add dword ptr [ecx - 0x3b7cfbaa], ecx; xor al, 0x5b; pop esi; ret; 
0x000ca612: add dword ptr [ecx - 0x3fe6f7ba], ecx; mov esi, dword ptr [esp + 0x18]; and eax, 0xc; add esp, 0x1c; ret; 
0x0007cb06: add dword ptr [ecx - 0x49f0dbfc], ecx; ret 0x7c89; 
0x00049352: add dword ptr [ecx - 0x760fd638], ecx; inc ebp; mov ah, 0xe9; ret; 
0x000b8306: add dword ptr [ecx - 0x7629762f], ecx; pop ebp; in al, 0x89; ret; 
0x0009f89e: add dword ptr [ecx - 0x76afdbbc], ecx; ret 0x448b; 
0x0003769a: add dword ptr [ecx - 0x76b7dbbc], ecx; ret 0x448b; 
0x0009cab2: add dword ptr [ecx - 0x76cfdbbc], ecx; ret 0x448b; 
0x000f101f: add dword ptr [ecx - 0x76f3dba4], ecx; ret; 
0x0001e633: add dword ptr [ecx - 0x76fbdb84], ecx; inc esp; and al, 8; mov eax, dword ptr [ebp + 0xc]; mov dword ptr [esp], eax; call dword ptr [ebp + 4]; 
0x0001d2d8: add dword ptr [ecx - 0x76fbdb8c], ecx; inc esp; and al, 8; mov eax, dword ptr [ebp + 0xc]; mov dword ptr [esp], eax; call dword ptr [ebp + 4]; 
0x0001e1f3: add dword ptr [ecx - 0x76fbdb94], ecx; inc esp; and al, 8; mov eax, dword ptr [edi + 0xc]; mov dword ptr [esp], eax; call dword ptr [edi + 4]; 
0x0016f015: add dword ptr [ecx], 0; add al, 0x72; std; jmp dword ptr [eax]; 
0x00187595: add dword ptr [ecx], 0; dec eax; adc bl, dh; call dword ptr [ebx]; 
0x001700be: add dword ptr [ecx], 0x41140e0a; ret; 
0x001481fb: add dword ptr [ecx], 0xf660000; xlatb; ret; 
0x000eb2f8: add dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0007f3a3: add dword ptr [ecx], eax; ret 0x4489; 
0x00129695: add dword ptr [ecx], eax; ret 0x5489; 
0x000d720d: add dword ptr [ecx], eax; ret 0x5739; 
0x00076a9e: add dword ptr [ecx], eax; ret 0xd0f7; 
0x0004b31b: add dword ptr [ecx], eax; ret 0xf980; 
0x00074d8c: add dword ptr [ecx], ebp; adc dword ptr [ecx - 0x7614fb90], ecx; call eax; 
0x0002300d: add dword ptr [ecx], ebp; ret 0x5489; 
0x0005e6fd: add dword ptr [ecx], ebp; ret 0x953b; 
0x0007fd9f: add dword ptr [ecx], ebp; ret 0xf001; 
0x000fc3c2: add dword ptr [ecx], ebx; rol byte ptr [ebx - 0x1f7ce73c], 0xc; pop ebx; ret; 
0x0006ab1a: add dword ptr [ecx], ebx; rol byte ptr [ebx - 0x2f08e73c], 0x5b; ret; 
0x00116d8f: add dword ptr [ecx], ebx; rol byte ptr [ebx - 0x3b7cfd40], 0x1c; ret; 
0x000e15fc: add dword ptr [ecx], ebx; ror byte ptr [ebx - 0x74efdba4], 0x74; and al, 0x14; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0001a3ff: add dword ptr [ecx], ebx; sal bh, 0xd0; add esp, 8; pop ebx; ret; 
0x0011b714: add dword ptr [ecx], ebx; sal bh, cl; rol byte ptr [ebx - 0x2f76d73c], cl; pop ebx; ret; 
0x0004c438: add dword ptr [ecx], ebx; sal byte ptr [eax], 0xc0; add eax, 0x107; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0007b52b: add dword ptr [ecx], ebx; test byte ptr [ecx + 0x245c8bf0], 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000625e7: add dword ptr [ecx], ecx; add byte ptr [ebx - 0x15775], cl; dec dword ptr [ebx - 0x1336b]; dec dword ptr [ecx - 0x10f7b]; jmp dword ptr [ebp - 0x75]; 
0x000a093b: add dword ptr [ecx], edi; call 0xfff3f7b7; idiv edi; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x000a544b: add dword ptr [ecx], edi; ret 0x1375; 
0x0003064a: add dword ptr [ecx], edi; ret 0x189; 
0x000419b1: add dword ptr [ecx], edi; ret 0x3a74; 
0x00038a62: add dword ptr [ecx], edi; ret 0x689; 
0x0003f1df: add dword ptr [ecx], edi; ret 0x870f; 
0x0003f247: add dword ptr [ecx], edi; ret 0xd476; 
0x000cb3af: add dword ptr [ecx], edi; ret 0xd689; 
0x0003f346: add dword ptr [ecx], edi; ret 0xd77; 
0x00042166: add dword ptr [ecx], edi; ret 0xed72; 
0x000a9ab6: add dword ptr [ecx], edi; ret 0xed75; 
0x0001cd4b: add dword ptr [ecx], edi; ret 0xf075; 
0x000cc38d: add dword ptr [ecx], edi; ret 0xf275; 
0x000c5680: add dword ptr [ecx], edi; ret 0xf377; 
0x0002f54a: add dword ptr [ecx], edi; sal byte ptr [ebp - 0xf], 1; xor eax, eax; pop esi; pop edi; ret; 
0x00101a35: add dword ptr [edi + 0x5d], ebx; ret; 
0x0008ef96: add dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x0018ff8f: add dword ptr [edi + 0xd1cfff5], eax; jnp 0x18ff1b; cmc; jmp dword ptr [edx]; 
0x00134620: add dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x00047a30: add dword ptr [edi + edi*8 + 0x8bffff], -0x77; add al, 0x24; call 0x424d0; add esp, 0x18; pop ebx; ret; 
0x0006f070: add dword ptr [edi + edi*8 + 0x8bffff], -0x77; add al, 0x24; call 0x56370; add esp, 0x18; pop ebx; ret; 
0x00074cef: add dword ptr [edi + edi*8], -1; inc dword ptr [ebx + 0x408b11ea]; adc bh, dh; fsub dword ptr [ecx]; ret 0x5489; 
0x000ed3f1: add dword ptr [edi + edi*8], 0x408bffff; sbb al, 0x85; ror byte ptr [edi], 0x44; ret 0x90c3; 
0x00037ee3: add dword ptr [edi - 0x14], -1; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x0018fcdd: add dword ptr [edi - 0xb], edi; jmp dword ptr [edx]; 
0x000afc34: add dword ptr [edi], ecx; dec ecx; ret 0xed85; 
0x000b1be9: add dword ptr [edi], ecx; dec ecx; ret 0xf685; 
0x0008046c: add dword ptr [edi], ecx; inc ebp; add esp, 0x18; mov eax, esi; pop esi; ret; 
0x000bcb39: add dword ptr [edi], ecx; inc esp; ret 0xe289; 
0x0013567f: add dword ptr [edi], ecx; mov dh, 0; mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013c5bf: add dword ptr [edi], ecx; mov dh, 0; mov byte ptr [edx], al; pop ebx; ret; 
0x000678b5: add dword ptr [edi], ecx; mov dh, 0xc0; mov dword ptr [edx + 0x14], ecx; add esp, 0x18; pop ebx; ret; 
0x0006aa74: add dword ptr [edi], ecx; mov dh, 0xc0; mov dword ptr [edx + 0x14], ecx; ret; 
0x00135557: add dword ptr [edi], ecx; mov dh, 8; mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013c4b7: add dword ptr [edi], ecx; mov dh, 8; mov byte ptr [edx], cl; pop ebx; ret; 
0x000979d2: add dword ptr [edi], ecx; scasd eax, dword ptr es:[edi]; ret 0xedc1; 
0x0011abca: add dword ptr [edi], ecx; test byte ptr [ebp - 0x74000003], dl; dec ebp; or byte ptr [ebx + 0x20508b01], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x001202f8: add dword ptr [edi], ecx; test cl, bl; add byte ptr [eax], al; add byte ptr [ebx - 0xf755], cl; jmp dword ptr [ebp - 0x39]; 
0x00074caf: add dword ptr [edi], ecx; test dword ptr [eax + 0x5c], esi; add byte ptr [eax], al; pop ebx; ret; 
0x001064d8: add dword ptr [edi], ecx; test dword ptr [ebp + 0x65000001], ebp; mov dword ptr [edx], ecx; add esp, 0x28; pop ebx; ret; 
0x00148e1c: add dword ptr [edi], ecx; test dword ptr [ebx - 0xa000000], ecx; ret 0xf02; 
0x000c6bee: add dword ptr [edi], ecx; test dword ptr [ebx], esi; add al, byte ptr [eax]; add dh, dh; ret 0xf01; 
0x000662c9: add dword ptr [edi], ecx; test dword ptr [edi - 0xcfffffc], edi; ret; 
0x0008d407: add dword ptr [edi], ecx; test dword ptr [edx + 0x5f000009], esp; pop esi; pop ebx; ret; 
0x001249f7: add dword ptr [edi], ecx; test dword ptr [esi + 1], ecx; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0008744b: add dword ptr [edi], ecx; test dword ptr [esi], edi; add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000c810d: add dword ptr [edi], ecx; test ecx, ebp; or dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x00071865: add dword ptr [edi], ecx; test edx, ebp; sbb al, 0; add bl, dh; ret; 
0x00109fb8: add dword ptr [edi], ecx; test edx, esi; add al, 0; add byte ptr [ebx - 0x2f76d73c], al; pop ebx; ret; 
0x00124a69: add dword ptr [edi], ecx; test esp, edi; add byte ptr [eax], al; add byte ptr [ebx - 0x2f76e73c], al; pop ebx; ret; 
0x0004b4f7: add dword ptr [edi], ecx; xchg eax, esp; ret 0x25e9; 
0x0004c3c7: add dword ptr [edi], ecx; xchg eax, esp; ret 0x3ce9; 
0x0004b597: add dword ptr [edi], ecx; xchg eax, esp; ret 0x50e9; 
0x0004c3b0: add dword ptr [edi], ecx; xchg eax, esp; ret 0x53e9; 
0x00049c89: add dword ptr [edi], ecx; xchg eax, esp; ret 0x73e9; 
0x0004c40f: add dword ptr [edi], ecx; xchg eax, esp; ret 0x7de9; 
0x0004b642: add dword ptr [edi], ecx; xchg eax, esp; ret 0x97e9; 
0x000497a3: add dword ptr [edi], ecx; xchg eax, esp; ret 0xc5eb; 
0x0010a356: add dword ptr [edi], ecx; xchg eax, esp; ret 0xd689; 
0x0004b5fa: add dword ptr [edi], ecx; xchg eax, esp; ret 0xdfe9; 
0x0004b528: add dword ptr [edi], ecx; xchg eax, esp; ret 0xe9; 
0x0011f984: add dword ptr [edi], ecx; xchg eax, esp; rol byte ptr [ebx - 0x49f0d73c], 0xc0; pop ebx; ret; 
0x0011f9dd: add dword ptr [edi], ecx; xchg eax, esp; rol byte ptr [ebx - 0x49f0e73c], 0xc0; pop ebx; ret; 
0x000bd629: add dword ptr [edi], ecx; xchg eax, esp; rol byte ptr [ebx - 0x49f0f73c], 0xc0; ret; 
0x0011efbb: add dword ptr [edx + 0x72], esi; and byte ptr [ecx], dh; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xd089; 
0x001830cb: add dword ptr [edx + 0xe], ecx; add bh, al; inc ecx; adc eax, dword ptr [ecx]; ret; 
0x00089bc3: add dword ptr [edx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, dword ptr [edx + 8]; ret; 
0x000857e3: add dword ptr [edx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000555da: add dword ptr [edx + 4], 1; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000648dd: add dword ptr [edx + 4], 1; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x30]; 
0x000d1bca: add dword ptr [edx + ebx*4 - 0xa], esi; ret 0x7408; 
0x0008334e: add dword ptr [edx + edx*8 - 0x41f0f88c], eax; sar byte ptr [ecx], cl; bnd jne 0x83348; pop esi; ret; 
0x000949e2: add dword ptr [edx - 0x74cf77ca], ecx; inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x00093da2: add dword ptr [edx - 0x76fd77ff], ecx; clc; pop ebx; pop edi; ret; 
0x00090ef2: add dword ptr [edx - 0x76fd77ff], ecx; clc; pop edi; ret; 
0x00191566: add dword ptr [edx], -0x7f; add eax, dword ptr [edx + 0xc0e5f04]; ret 0xe41; 
0x0018b2d4: add dword ptr [edx], 0x43; push cs; pushal; push cs; or byte ptr [esi + ecx + 4], al; ret; 
0x00199fe0: add dword ptr [edx], 0x43; push cs; xor byte ptr [edx], al; imul ecx, dword ptr [esi], 0x40e4108; ret; 
0x001916e8: add dword ptr [edx], 0x45; push cs; and byte ptr [edx], al; ret 0xe0a; 
0x00189f00: add dword ptr [edx], 0x4e; push cs; xor byte ptr [esi + 0xe], dh; or byte ptr [esi + ecx + 4], al; ret; 
0x001823f2: add dword ptr [edx], 0xe; or al, 0x86; add ebp, dword ptr [esi + ecx + 8]; ret; 
0x0018229e: add dword ptr [edx], 0xe; or al, 0x86; add ebx, dword ptr [esi + ecx + 8]; ret; 
0x0018225a: add dword ptr [edx], 0xe; or al, 0x86; add edx, dword ptr [esi + ecx + 8]; ret; 
0x001822c0: add dword ptr [edx], 0xe; or al, 0x86; add esp, dword ptr [esi + ecx + 8]; ret; 
0x001820d1: add dword ptr [edx], 0xe; or al, 0x87; add ebx, dword ptr [esi + ecx + 8]; ret; 
0x0018206b: add dword ptr [edx], 0xe; or al, 0x87; add edx, dword ptr [esi + ecx + 8]; ret; 
0x00197319: add dword ptr [edx], 0xf7bd0400; jmp dword ptr [ebx]; 
0x00197385: add dword ptr [edx], 0xf7be0800; jmp dword ptr [ebx + 1]; 
0x000f1d83: add dword ptr [edx], 1; add esp, 8; pop ebx; ret; 
0x0018ec16: add dword ptr [edx], 2; pop esi; ret; 
0x0016b15d: add dword ptr [edx], eax; add byte ptr [edi + esi - 0xb], ah; call dword ptr [eax + 1]; 
0x00171774: add dword ptr [edx], eax; mov edx, 0x43140e0a; ret; 
0x001701cd: add dword ptr [edx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001988b8: add dword ptr [edx], eax; ret; 
0x0019c054: add dword ptr [edx], ebx; sbb eax, 0x73000005; ret 0x8d01; 
0x0016fce0: add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00175bc4: add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x001702de: add dword ptr [edx], ecx; push cs; adc al, 0x45; ret; 
0x0017416b: add dword ptr [edx], ecx; push cs; adc al, 0x46; ret; 
0x0016f98a: add dword ptr [edx], ecx; ret; 
0x00169ea0: add dword ptr [edx], esi; int1; jmp esp; 
0x0011f841: add dword ptr [esi + 0x14], edi; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000ba0e5: add dword ptr [esi + 0x5f], ebx; pop ebp; ret; 
0x0002f853: add dword ptr [esi + 0x5f], ebx; ret; 
0x001140af: add dword ptr [esi + 0x72], esi; or al, 0x31; rol byte ptr [ebx - 0x6bf0fd06], 0xc0; add esp, 0x1c; ret; 
0x00089c43: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x00085863: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x00089c63: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x00085883: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x00089c83: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, dword ptr [edx + 0xe]; ret; 
0x000858a3: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000876d3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 5]; pop ebx; ret; 
0x000876e3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 6]; pop ebx; ret; 
0x000876f3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 7]; pop ebx; ret; 
0x00087703: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 8]; pop ebx; ret; 
0x00089973: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, dword ptr [edx + 7]; pop edi; ret; 
0x00089bb3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, dword ptr [edx + 7]; ret; 
0x0008b79e: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, dword ptr [edx + 8]; pop edi; pop ebx; ret; 
0x0014a313: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00093d34: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edi; pop ebx; pop edi; ret; 
0x000873ae: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edi; pop edi; pop ebx; ret; 
0x000855b3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edi; pop edi; ret; 
0x000883d8: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edx; pop ebx; ret; 
0x000857d3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edx; ret; 
0x0008e4d3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, dword ptr [edx + 0xc]; ret; 
0x0008ce93: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x0008e4f3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, dword ptr [edx + 0xd]; ret; 
0x0008ceb3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x0008e513: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, dword ptr [edx + 0xe]; ret; 
0x0008ced3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x0008e533: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, dword ptr [edx + 0xf]; ret; 
0x0008cef3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x0012f4fb: add dword ptr [esi + 0xf], esp; outsd dx, dword ptr [esi]; ret 0xf66; 
0x0011eed7: add dword ptr [esi + ebx*2 + 0x72], esi; sbb al, 0x31; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xd089; 
0x00149bbb: add dword ptr [esi + edx*4 + 0x5e], esi; lea eax, dword ptr [edi - 0x10]; pop edi; ret; 
0x000ddc11: add dword ptr [esp + esi - 0x73], esi; dec esp; and al, 0x10; xchg ebx, edx; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ddd91: add dword ptr [esp + esi - 0x73], esi; dec esp; and al, 0x10; xchg ebx, edx; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000ddcd1: add dword ptr [esp + esi - 0x73], esi; dec esp; and al, 0x10; xchg ebx, edx; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x0016997d: add dword ptr cs:[eax], eax; movsb byte ptr es:[edi], byte ptr [esi]; mov bh, 0xf0; call esp; 
0x00169e15: add dword ptr ds:[eax], eax; sbb al, 0x31; int1; push dword ptr [esi + edi + 0x31290001]; int1; jmp esp; 
0x00169e1d: add dword ptr ds:[eax], eax; sub dword ptr [ecx], esi; int1; jmp esp; 
0x000b9e0b: add dword ptr fs:[eax], eax; add byte ptr [ebx + 0x16824ac], cl; add byte ptr [eax], al; add esp, 0x16c; ret; 
0x00056d46: add dword ptr fs:[eax], eax; add byte ptr [ecx], al; test dword ptr [eax - 0x16000011], esi; ret 0xfffc; 
0x00078072: add dword ptr fs:[eax], eax; add byte ptr [ecx], bh; ret 0x850f; 
0x0016a2cd: add dword ptr fs:[eax], eax; and al, 0x83; int1; jmp esp; 
0x0016a2fd: add dword ptr gs:[eax], eax; test byte ptr [ecx + 0x6630fff1], cl; add dword ptr [eax], eax; mov ah, 0x89; int1; call dword ptr [eax + 0x66]; 
0x0018288d: add dword ptr ss:[eax], eax; and byte ptr [eax], ch; int1; jmp esi; 
0x0018ff3d: add dword ptr ss:[edx], ecx; push cs; adc al, 0x43; ret; 
0x0019daa1: add eax, 0; add byte ptr [eax], al; ret 3; 
0x00019b63: add eax, 0; ret; 
0x0011cde5: add eax, 0x10000; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0xc]; 
0x001909dc: add eax, 0x100e7402; ret; 
0x0017bee4: add eax, 0x100edf02; ret; 
0x0004c43d: add eax, 0x107; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00094803: add eax, 0x10; bsf edx, edx; call 0x129d77; add ecx, 0xc60f6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00091503: add eax, 0x10; bsf edx, edx; call 0x129d77; add ecx, 0xc9376; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009486a: add eax, 0x10; call 0x129d77; add ecx, 0xc6092; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009156a: add eax, 0x10; call 0x129d77; add ecx, 0xc9312; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00083fa8: add eax, 0x10; pop edi; pop esi; ret; 
0x0019ca6d: add eax, 0x1250000; add byte ptr [eax], al; ret; 
0x00094b3b: add eax, 0x130f66; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000916c8: add eax, 0x130f66; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0017015d: add eax, 0x140e0a02; inc ecx; ret; 
0x000ca987: add eax, 0x14; call 0xca930; xor eax, eax; add esp, 0xc; ret; 
0x000aad0d: add eax, 0x16e; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0007fa57: add eax, 0x174d138; inc eax; pop edi; ret; 
0x0001952d: add eax, 0x18; call eax; 
0x000fe8ae: add eax, 0x18; call eax; add esp, 0x18; pop ebx; ret; 
0x000fc0e6: add eax, 0x18; call eax; add esp, 8; pop ebx; ret; 
0x00032ae7: add eax, 0x18; mov dword ptr [esp + 4], edx; call eax; 
0x00056705: add eax, 0x18; mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x5c]; mov dword ptr [esp], edx; call eax; 
0x0004e385: add eax, 0x18; mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x64]; mov dword ptr [esp], edx; call eax; 
0x000428ad: add eax, 0x18; mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x70]; mov dword ptr [esp], edx; call eax; 
0x0004799d: add eax, 0x18; mov dword ptr [esp + 4], edx; lea edx, dword ptr [esp + 0x20d0]; mov dword ptr [esp], edx; call eax; 
0x0005ba55: add eax, 0x18; mov dword ptr [esp + 4], edx; lea edx, dword ptr [esp + 0x8190]; mov dword ptr [esp], edx; call eax; 
0x000fb88d: add eax, 0x18; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x20]; mov dword ptr [esp], edx; call eax; 
0x0003ec1b: add eax, 0x18; mov dword ptr [esp + 8], esi; mov dword ptr [esp], edx; call eax; 
0x00026c08: add eax, 0x18; mov dword ptr [esp], 1; call eax; 
0x00028d14: add eax, 0x18; mov dword ptr [esp], ecx; call eax; 
0x0001ba83: add eax, 0x18; mov dword ptr [esp], edx; call eax; 
0x000238b5: add eax, 0x18c48300; pop ebx; ret; 
0x001737b0: add eax, 0x1a00e46; add eax, dword ptr [edi]; add cl, byte ptr [edx]; push cs; adc al, 0x45; ret; 
0x00171770: add eax, 0x1c00e46; add bh, byte ptr [edx + 0x43140e0a]; ret; 
0x00040ea5: add eax, 0x1cc48300; ret; 
0x0009488f: add eax, 0x20; call 0x129d77; add ecx, 0xc606d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009158f: add eax, 0x20; call 0x129d77; add ecx, 0xc92ed; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00083fb5: add eax, 0x20; pop edi; pop esi; ret; 
0x00089ae8: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; pop edi; ret; 
0x00089c48: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x00085708: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x00085868: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x00185aa8: add eax, 0x2400e43; ret 0xe0a; 
0x00192278: add eax, 0x2400e43; xchg eax, edx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0002443a: add eax, 0x24548b00; sbb byte ptr [ebx - 0x7ae3dbb4], cl; sal byte ptr [ebp - 0x50], 0x83; ret 0x8901; 
0x0014b3a0: add eax, 0x24748900; sbb byte ptr [ebx - 0x134d], cl; jmp dword ptr [ebp - 0x75]; 
0x0016eb85: add eax, 0x28150001; cld; dec dword ptr [eax + 0x24000105]; sub ah, bh; call esp; 
0x0016eb8d: add eax, 0x28240001; cld; call esp; 
0x00040cb1: add eax, 0x28c48300; pop ebx; ret; 
0x000a7f33: add eax, 0x291ff8c1; ret 0x1b8; 
0x000b0420: add eax, 0x291ff8c1; ret 0xd26b; 
0x0006d6d7: add eax, 0x2c; mov dword ptr [esp + 4], eax; call dword ptr [ebp + 0x18]; 
0x0006dcbe: add eax, 0x2c; mov dword ptr [esp + 4], eax; call dword ptr [ecx + 0x18]; 
0x0006ccbe: add eax, 0x2c; mov dword ptr [esp + 4], eax; call dword ptr [edx + 4]; 
0x000874b1: add eax, 0x2d8850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00174164: add eax, 0x2e00e46; add ebx, dword ptr [ecx + eax + 0xa]; push cs; adc al, 0x46; ret; 
0x00094741: add eax, 0x30; call 0x129d77; add ecx, 0xc61bb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000914a8: add eax, 0x30; call 0x129d77; add ecx, 0xc93d4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00083fc2: add eax, 0x30; pop edi; pop esi; ret; 
0x001905dc: add eax, 0x3400e43; lahf; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x00183e60: add eax, 0x3500e43; test eax, 0x140e0a01; inc ecx; ret; 
0x00166228: add eax, 0x35fffcd4; aam 0xfc; jmp dword ptr [ebp - 0x2c]; 
0x001940c0: add eax, 0x3600e43; mov eax, dword ptr [0x140e0a01]; inc ecx; ret; 
0x001736cc: add eax, 0x3700e43; mov eax, 0x140e0a01; inc ecx; ret; 
0x0017485b: add eax, 0x3870486; add ah, al; ret; 
0x00195dfb: add eax, 0x3870486; add ah, byte ptr [ebx + 0xa]; ret; 
0x0019a48b: add eax, 0x3870486; add ah, byte ptr [ecx + 0xa]; ret; 
0x0018831f: add eax, 0x3870486; add ah, byte ptr [esi + 0xa]; ret; 
0x00187987: add eax, 0x3870486; add al, byte ptr [ecx + 0xa]; ret; 
0x001876fb: add eax, 0x3870486; add bl, byte ptr [ecx + 0xa]; ret; 
0x0018a1ef: add eax, 0x3870486; add bl, byte ptr [edi + 0xa]; ret; 
0x0016fb8b: add eax, 0x3870486; add cl, byte ptr [ecx + 0xa]; ret; 
0x0018565f: add eax, 0x3870486; add cl, byte ptr [edi + 0xa]; ret; 
0x00195e2b: add eax, 0x3870486; add dh, byte ptr [ecx + 0xa]; ret; 
0x0017117b: add eax, 0x3870486; add eax, dword ptr [ecx + eax + 0xa]; ret; 
0x0018cb33: add eax, 0x3870486; add eax, eax; add cl, byte ptr [edx]; ret; 
0x001895bb: add eax, 0x3870486; add ebp, edx; add cl, byte ptr [edx]; ret; 
0x001896c3: add eax, 0x3870486; add ebx, dword ptr [ebx]; or ecx, dword ptr [edx]; ret; 
0x0018c37f: add eax, 0x3870486; add ebx, dword ptr [ecx]; add dword ptr [edx], ecx; ret; 
0x00193693: add eax, 0x3870486; add ebx, dword ptr [edx]; add cl, byte ptr [edx]; ret; 
0x00183a8f: add eax, 0x3870486; add ebx, dword ptr [edx]; add dword ptr [edx], ecx; ret; 
0x001748db: add eax, 0x3870486; add ebx, eax; add dword ptr [edx], ecx; ret; 
0x0018a6af: add eax, 0x3870486; add ebx, ebp; add dword ptr [edx], ecx; ret; 
0x00190f8b: add eax, 0x3870486; add ebx, ecx; add al, 0xa; ret; 
0x0018754f: add eax, 0x3870486; add ebx, esi; add dword ptr [edx], ecx; ret; 
0x0017141b: add eax, 0x3870486; add ecx, dword ptr [ebx + eax + 0xa]; ret; 
0x00173eef: add eax, 0x3870486; add ecx, dword ptr [edi]; add cl, byte ptr [edx]; ret; 
0x0019a4ef: add eax, 0x3870486; add ecx, ebx; add cl, byte ptr [edx]; ret; 
0x0019a3bf: add eax, 0x3870486; add ecx, edx; add dword ptr [edx], ecx; ret; 
0x0016f603: add eax, 0x3870486; add edx, dword ptr [eax]; add ecx, dword ptr [edx]; ret; 
0x00190e03: add eax, 0x3870486; add edx, dword ptr [ebp + eax + 0xa]; ret; 
0x0019887b: add eax, 0x3870486; add edx, esi; add cl, byte ptr [edx]; ret; 
0x0019a0fb: add eax, 0x3870486; add esi, dword ptr [ebx]; add dword ptr [edx], ecx; ret; 
0x0019602f: add eax, 0x3870486; add esi, dword ptr [ecx + eax + 0xa]; ret; 
0x00196213: add eax, 0x3870486; add esi, dword ptr [ecx]; add dword ptr [edx], ecx; ret; 
0x00174f17: add eax, 0x3870486; add esi, dword ptr [ecx]; add ecx, dword ptr [edx]; ret; 
0x00187d83: add eax, 0x3870486; add esi, dword ptr [esi]; add al, 0xa; ret; 
0x0017e1df: add eax, 0x3870486; add esi, ebx; add al, 0xa; ret; 
0x00177e6f: add eax, 0x3870486; add esi, ecx; add dword ptr [edx], ecx; ret; 
0x0018d857: add eax, 0x3870486; add esp, dword ptr [ebx]; add dword ptr [edx], ecx; ret; 
0x0016f983: add eax, 0x3870486; add esp, dword ptr [edi]; add dword ptr [edx], ecx; ret; 
0x00185fdf: add eax, 0x3870486; add esp, dword ptr [edx]; add dword ptr [edx], ecx; ret; 
0x0018ef7f: add eax, 0x3870486; add esp, ebx; add ecx, dword ptr [edx]; ret; 
0x001859eb: add eax, 0x3870486; add esp, edx; add al, 0xa; ret; 
0x0017e247: add eax, 0x3870486; jnp 0x17e258; ret; 
0x00184593: add eax, 0x3870486; jns 0x1845a4; ret; 
0x0008b5f4: add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x0012e8a0: add eax, 0x38; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x00187f38: add eax, 0x42038743; add dword ptr [0x5d030486], 6; ret; 
0x0008e37c: add eax, 0x42130f66; add eax, 0x5f0c428d; ret; 
0x00093eef: add eax, 0x42130f66; add eax, 0x5f5bf889; ret; 
0x001199d5: add eax, 0x4c; mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x00142b13: add eax, 0x542b60f; mov ecx, dword ptr [ebx + ecx*4 - 0x567f4]; mov eax, dword ptr [ebx + eax*4 - 0x567f4]; sub eax, ecx; pop ebx; ret; 
0x0014046c: add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x0013ec63: add eax, 0x542b60f; sub eax, ecx; ret; 
0x0000369f: add eax, 0x572808a8; call dword ptr [esi + 0x6f]; 
0x00184d6d: add eax, 0x59000000; push cs; or byte ptr [ebx + 0x40e4902], al; ret; 
0x000db0f8: add eax, 0x5b000000; pop esi; pop edi; pop ebp; ret 0x10; 
0x000e7c0b: add eax, 0x5b18c483; ret; 
0x0002d452: add eax, 0x5b28c483; ret; 
0x000871c9: add eax, 0x5b5f0000; ret; 
0x0014e471: add eax, 0x5ba0000; add byte ptr [eax], al; mov esp, 0xbe000005; add eax, 0x5c00000; add byte ptr [eax], al; ret 5; 
0x00151de9: add eax, 0x5bd0000; add byte ptr [eax], al; ret 5; 
0x000013e1: add eax, 0x5be0000; add byte ptr [eax], al; ret 5; 
0x0014e47d: add eax, 0x5c00000; add byte ptr [eax], al; ret 5; 
0x00187f3e: add eax, 0x5d030486; push es; ret; 
0x0007dd7e: add eax, 0x5e000002; xor eax, eax; pop ebx; ret; 
0x0011cd59: add eax, 0x5e5b0000; pop edi; pop ebp; ret; 
0x000c6af6: add eax, 0x5e5bd089; ret; 
0x0008d7c3: add eax, 0x5e5f0000; pop ebx; ret; 
0x00089af1: add eax, 0x5f0c428d; ret; 
0x0008f0e1: add eax, 0x5f0d478d; pop esi; pop ebx; ret; 
0x00093ef4: add eax, 0x5f5bf889; ret; 
0x0008d9f8: add eax, 0x7130f66; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x0011ce04: add eax, 0x74890000; and al, 4; mov dword ptr [esp], edx; call dword ptr [eax + 0xc]; 
0x0019c8d1: add eax, 0x7640000; add byte ptr [eax], al; ret 2; 
0x0001f26c: add eax, 0x7703f883; adc eax, 0x830ab60f; ret 0x8901; 
0x00171b8c: add eax, 0x78038341; ret; 
0x000343d0: add eax, 0x80000000; pop esi; pop edi; pop ebp; ret; 
0x0009486e: add eax, 0x81000955; rcl dword ptr [edx + 0x3000c60], 0xc; xchg eax, ecx; jmp ecx; 
0x0009156e: add eax, 0x81000988; rcl dword ptr [edx], -0x6d; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00138f6a: add eax, 0x81ffff0e; ret; 
0x000916d1: add eax, 0x824448b; pop esi; ret; 
0x0002510f: add eax, 0x83240489; ret 0x8901; 
0x00129ff7: add eax, 0x83fffb51; clc; push dword ptr [esp + ebp*4 - 0x77]; ret 0xe283; 
0x00023cd2: add eax, 0x85d23100; ror byte ptr [edi], 0x94; ret 0xfe83; 
0x00187d80: add eax, 0x86058343; add al, 0x87; add eax, dword ptr [ebx]; add al, 0xa; ret; 
0x0016f980: add eax, 0x86058343; add al, 0x87; add eax, dword ptr [ebx]; daa; add dword ptr [edx], ecx; ret; 
0x00172c14: add eax, 0x86058343; add al, 0x87; add eax, dword ptr [ebx]; dec edi; add dword ptr [edx], ecx; ret; 
0x00171418: add eax, 0x86058343; add al, 0x87; add eax, dword ptr [ebx]; dec esp; add ecx, dword ptr [edx]; ret; 
0x00184738: add eax, 0x86058343; add al, 0x87; add eax, dword ptr [ebx]; imul eax, dword ptr [ecx], 0xa; ret; 
0x0018d984: add eax, 0x86058343; add al, 0x87; add eax, dword ptr [ebx]; insd dword ptr es:[edi], dx; add dword ptr [edx], ecx; ret; 
0x00177e6c: add eax, 0x86058343; add al, 0x87; add eax, dword ptr [ebx]; int1; add dword ptr [edx], ecx; ret; 
0x001984ac: add eax, 0x86058343; add al, 0x87; add eax, dword ptr [ebx]; push eax; add dword ptr [edx], ecx; ret; 
0x00187f68: add eax, 0x86058343; add al, 0x87; add eax, dword ptr [ebx]; push ebx; add cl, byte ptr [edx]; ret; 
0x00195fb0: add eax, 0x86058343; add al, 0x87; add eax, dword ptr [ebx]; push ebx; add dword ptr [edx], ecx; ret; 
0x0018a3bc: add eax, 0x86058343; add al, 0x87; add eax, dword ptr [ebx]; pushfd; add dword ptr [edx], ecx; ret; 
0x00187c34: add eax, 0x86058343; add al, 0x87; add eax, dword ptr [ebx]; xchg byte ptr [edx + ecx], al; ret; 
0x0016fbb8: add eax, 0x86058343; add al, 0x87; add eax, dword ptr [ebx]; xchg eax, ebx; add cl, byte ptr [edx]; ret; 
0x0019650c: add eax, 0x86058343; add al, 0x87; add eax, dword ptr [ebx]; xchg eax, esi; add dword ptr [edx], ecx; ret; 
0x00195df8: add eax, 0x86058343; add al, 0x87; add eax, dword ptr [edx]; arpl word ptr [edx], cx; ret; 
0x00197008: add eax, 0x86058343; add al, 0x87; add eax, dword ptr [edx]; dec byte ptr [edx]; ret; 
0x00187a84: add eax, 0x86058343; add al, 0x87; add eax, dword ptr [edx]; fisttp qword ptr [edx]; ret; 
0x00195e28: add eax, 0x86058343; add al, 0x87; add eax, dword ptr [edx]; jno 0x195e3d; ret; 
0x0019364c: add eax, 0x86058343; add al, 0x87; add eax, dword ptr [edx]; loope 0x193661; ret; 
0x0018c740: add eax, 0x86058343; add al, 0x87; add eax, dword ptr [edx]; mov cs, word ptr [edx]; ret; 
0x0019178c: add eax, 0x86058343; add al, 0x87; add edi, dword ptr [eax + 0xa]; ret; 
0x00172528: add eax, 0x86058346; add al, 0x87; add eax, dword ptr [ebx]; pop edi; add dword ptr [edx], ecx; ret; 
0x0018c3e8: add eax, 0x86058346; add al, 0x87; add eax, dword ptr [edx]; fmul qword ptr [edx]; ret; 
0x00190f88: add eax, 0x86058349; add al, 0x87; add eax, dword ptr [ebx]; fld dword ptr [edx + ecx]; ret; 
0x0018cb30: add eax, 0x86058349; add al, 0x87; add eax, dword ptr [ebx]; rol byte ptr [edx], 0xa; ret; 
0x001759b8: add eax, 0x86058349; add al, 0x87; add eax, dword ptr [edx]; mov cs, word ptr [edx]; ret; 
0x0017e244: add eax, 0x86058349; add al, 0x87; add edi, dword ptr [ebx + 0xa]; ret; 
0x00184590: add eax, 0x86058349; add al, 0x87; add edi, dword ptr [ecx + 0xa]; ret; 
0x001711b8: add eax, 0x86058349; add al, 0x87; add esi, dword ptr [edi + 0xa]; ret; 
0x0017e1dc: add eax, 0x8605834c; add al, 0x87; add eax, dword ptr [ebx]; add al, 0xa; ret; 
0x001729b8: add eax, 0x8605834c; add al, 0x87; add eax, dword ptr [ebx]; cmpsd dword ptr [esi], dword ptr es:[edi]; add dword ptr [edx], ecx; ret; 
0x00171178: add eax, 0x8605834c; add al, 0x87; add eax, dword ptr [ebx]; inc esp; add dword ptr [edx], ecx; ret; 
0x00173eec: add eax, 0x8605834c; add al, 0x87; add eax, dword ptr [ebx]; lar ecx, word ptr [edx]; ret; 
0x00174a48: add eax, 0x8605834c; add al, 0x87; add eax, dword ptr [ebx]; pop ecx; add al, 0xa; ret; 
0x00198878: add eax, 0x8605834c; add al, 0x87; add eax, dword ptr [ebx]; salc; add cl, byte ptr [edx]; ret; 
0x0018d600: add eax, 0x8605834c; add al, 0x87; add eax, dword ptr [edx]; xchg byte ptr [edx], cl; ret; 
0x00190ce0: add eax, 0x8605834c; add al, 0x87; add edx, dword ptr [esi + 0xa]; ret; 
0x0018f1f8: add eax, 0x8605834f; add al, 0x87; add eax, dword ptr [ebx]; wait; add cl, byte ptr [edx]; ret; 
0x0002e1f1: add eax, 0x8700174e; sar dword ptr [eax + 0xb0], cl; call dword ptr gs:[0x10]; 
0x0018a1bc: add eax, 0x87048644; add eax, dword ptr [ebx + eax*4 + 5]; add dh, byte ptr [ebp + 0xa]; ret; 
0x00170848: add eax, 0x87048644; add eax, dword ptr [ecx - 0x7d]; add eax, 0xa010f03; ret; 
0x0019b370: add eax, 0x87048644; add eax, dword ptr [ecx - 0x7d]; add eax, 0xa014103; ret; 
0x0019a03c: add eax, 0x87048644; add eax, dword ptr [ecx - 0x7d]; add eax, 0xa01a003; ret; 
0x0018b6dc: add eax, 0x87048644; add eax, dword ptr [edi - 0x7d]; add eax, 0xa03ba03; ret; 
0x0019a76c: add eax, 0x87048647; add ecx, dword ptr [ebp - 0x7d]; add eax, 0xa017803; ret; 
0x00149012: add eax, 0x87820f; add byte ptr [eax], al; lea eax, dword ptr [eax + 4]; pop edi; ret; 
0x00147ff2: add eax, 0x87820f; add byte ptr [eax], al; lea eax, dword ptr [edi + 4]; pop edi; ret; 
0x001486b2: add eax, 0x878c0f; add byte ptr [eax], al; lea eax, dword ptr [ecx + 5]; ret; 
0x0013d5c5: add eax, 0x8806b60f; pop es; pop esi; pop edi; pop ebx; ret; 
0x000ca020: add eax, 0x89000000; add al, 0x24; call 0x276f0; add esp, 0x18; pop ebx; ret; 
0x001127af: add eax, 0x89000000; cmp al, 0x24; call dword ptr [eax]; 
0x0011cb0a: add eax, 0x89000000; dec esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x000e1e77: add eax, 0x89000000; push esp; and al, 4; mov eax, dword ptr [ecx + 0xc]; mov dword ptr [esp], eax; call dword ptr [ecx + 0x24]; 
0x00083995: add eax, 0x89000000; ret 0x838d; 
0x000c5c98: add eax, 0x8902e0c1; add al, 0x24; call 0x16ee0; add esp, 0x18; pop ebx; ret; 
0x000243e1: add eax, 0x89c08500; ret 0x840f; 
0x00134860: add eax, 0x8b1c035f; jmp ebx; 
0x000f0092: add eax, 0x8d000000; dec esp; and al, 4; call dword ptr gs:[0x10]; 
0x000f00b9: add eax, 0x8d000000; dec esp; and al, 8; call dword ptr gs:[0x10]; 
0x000a6302: add eax, 0x8d99eb00; add ch, al; ret; 
0x000a1835: add eax, 0x8e0f0000; hlt; add al, 0; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x0016ca79: add eax, 0x90a8fff9; add al, byte ptr [eax]; test byte ptr [edi], al; stc; call esp; 
0x00019345: add eax, 0x91890000; add al, 5; add byte ptr [eax], al; pop ebx; ret; 
0x0008d48c: add eax, 0x91d850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0006db92: add eax, 0x94; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x48]; 
0x0006fef6: add eax, 0x94; mov dword ptr [esp + 4], esi; mov dword ptr [esp + 8], edi; mov dword ptr [esp + 0xc], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x0008eacf: add eax, 0x9da850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00170850: add eax, 0xa010f03; ret; 
0x0019b378: add eax, 0xa014103; ret; 
0x0019a774: add eax, 0xa017803; ret; 
0x0019a044: add eax, 0xa01a003; ret; 
0x0018b6e4: add eax, 0xa03ba03; ret; 
0x0017f755: add eax, 0xa9b80001; sti; call dword ptr [ecx]; 
0x0014921d: add eax, 0xa; pop edi; ret; 
0x001470f4: add eax, 0xa; ret; 
0x0014925f: add eax, 0xb48d0000; add byte ptr es:[eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; xor eax, eax; ret; 
0x000b857d: add eax, 0xb8; and byte ptr [ebp - 0x5d], 0x6c; add byte ptr [eax], al; add byte ptr [eax + 0xbe], bh; int 0x80; 
0x00148e82: add eax, 0xb; pop edi; ret; 
0x001470a6: add eax, 0xb; ret; 
0x0019a2ba: add eax, 0xbc030486; add dword ptr [edx], ecx; ret; 
0x00144ede: add eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00094b44: add eax, 0xc24448b; pop ebx; pop esi; ret; 
0x0016b1e5: add eax, 0xc5340002; cmc; call eax; 
0x00098438: add eax, 0xc; nop; lea esi, dword ptr [esi]; ret; 
0x00149227: add eax, 0xc; pop edi; ret; 
0x0010faea: add eax, 0xc; ret; 
0x0002e8e5: add eax, 0xd0f7e0d3; and dword ptr [edx + esi*4], eax; xor eax, eax; pop esi; ret; 
0x00030de6: add eax, 0xd; add esp, 4; jmp eax; 
0x0014922c: add eax, 0xd; pop edi; ret; 
0x00147100: add eax, 0xd; ret; 
0x0001933b: add eax, 0xe750000; rdtsc; mov dword ptr [ecx + 0x500], eax; mov dword ptr [ecx + 0x504], edx; pop ebx; ret; 
0x00087c07: add eax, 0xe9fffff6; inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x00149231: add eax, 0xe; pop edi; ret; 
0x00147104: add eax, 0xe; ret; 
0x00087581: add eax, 0xeb83f889; or eax, 0xf0d4a8d; test dword ptr [eax], eax; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000c919e: add eax, 0xf000001; inc ebp; ret 0x45c7; 
0x000874ae: add eax, 0xf054a8d; test eax, ebx; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0008d489: add eax, 0xf057f8d; test dword ptr [0x5f000009], ebx; pop esi; pop ebx; ret; 
0x0008eacc: add eax, 0xf057f8d; test edx, ebx; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d9437: add eax, 0xf0890000; pop ebx; pop esi; ret; 
0x00148eab: add eax, 0xf; pop edi; ret; 
0x001470bf: add eax, 0xf; ret; 
0x0019c049: add eax, 0xfa0001c3; add dword ptr [0xffff0000], eax; add dword ptr [edx], ebx; sbb eax, 0x73000005; ret 0x8d01; 
0x0013fd3e: add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0019bfce: add eax, 0xffff0000; add dword ptr [ebx], ecx; ret; 
0x0019c04f: add eax, 0xffff0000; add dword ptr [edx], ebx; sbb eax, 0x73000005; ret 0x8d01; 
0x0007fd3d: add eax, 1; cmp esi, eax; cmovbe eax, edx; add esp, 0x18; pop esi; ret; 
0x001098b5: add eax, 1; mov dword ptr [esi + 0x18], eax; mov eax, 1; add esp, 0x18; pop esi; ret; 
0x000f87b8: add eax, 1; mov dword ptr [esi + 0x1c], eax; add esp, 0x24; pop ebx; pop esi; ret; 
0x0003f773: add eax, 1; pop ebx; pop esi; ret; 
0x001491f0: add eax, 1; pop edi; ret; 
0x0007e2ed: add eax, 1; ret; 
0x00116d92: add eax, 2; add esp, 0x1c; ret; 
0x00082937: add eax, 2; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x001491f5: add eax, 2; pop edi; ret; 
0x000a73c7: add eax, 2; ret; 
0x00148e35: add eax, 3; pop edi; ret; 
0x000a73e0: add eax, 3; ret; 
0x0011451a: add eax, 4; mov dword ptr [esi + 0x10], eax; mov eax, 1; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x000983e8: add eax, 4; nop; lea esi, dword ptr [esi]; ret; 
0x001491ff: add eax, 4; pop edi; ret; 
0x001470dc: add eax, 4; ret; 
0x00149204: add eax, 5; pop edi; ret; 
0x001470e0: add eax, 5; ret; 
0x00149209: add eax, 6; pop edi; ret; 
0x001470e4: add eax, 6; ret; 
0x00148e5b: add eax, 7; pop edi; ret; 
0x0014707f: add eax, 7; ret; 
0x000c5d8a: add eax, 8; mov dword ptr [esp], eax; call 0x7dcd0; add esp, 0x1c; ret; 
0x00116b22: add eax, 8; mov dword ptr [esp], eax; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x00149213: add eax, 8; pop edi; ret; 
0x00098430: add eax, 8; ret; 
0x0010fae4: add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x00149218: add eax, 9; pop edi; ret; 
0x001470f0: add eax, 9; ret; 
0x00019b62: add eax, dword ptr [0]; ret; 
0x0017015c: add eax, dword ptr [0x140e0a02]; inc ecx; ret; 
0x00170031: add eax, dword ptr [eax + 3]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0016e766: add eax, dword ptr [eax]; aam 0x11; cld; push dword ptr [esi + edi + 0x11f40003]; cld; call esp; 
0x0016e856: add eax, dword ptr [eax]; aam 0x20; cld; ljmp ptr [eax + 0x44000341]; and bh, ah; call esp; 
0x0016df8e: add eax, dword ptr [eax]; aam 0x48; sti; call dword ptr [eax + 0x12]; 
0x0016e00e: add eax, dword ptr [eax]; aam 0x4f; sti; call esp; 
0x0016e1de: add eax, dword ptr [eax]; aam 0x74; sti; ljmp ptr [ebp + ebx + 0x75a40003]; sti; call esp; 
0x0016dfae: add eax, dword ptr [eax]; adc al, 0x4a; sti; jmp esp; 
0x0016e15e: add eax, dword ptr [eax]; adc al, 0x6d; sti; call dword ptr [eax + 0x1b]; 
0x0016e496: add eax, dword ptr [eax]; adc al, 0xc9; sti; jmp eax; 
0x0016dd36: add eax, dword ptr [eax]; adc al, 0xf5; cli; call esp; 
0x0016e346: add eax, dword ptr [eax]; add al, 0x84; sti; call dword ptr [eax + 0x4000323]; test ebx, edi; jmp esp; 
0x0016e34e: add eax, dword ptr [eax]; add al, 0x85; sti; jmp esp; 
0x0019c8cd: add eax, dword ptr [eax]; add bl, al; add eax, 0x7640000; add byte ptr [eax], al; ret 2; 
0x0008b83f: add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; lcall ptr [edi + 0x5b]; ret; 
0x000f196a: add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00184d0d: add eax, dword ptr [eax]; add byte ptr [eax], al; bound ecx, qword ptr [esi]; or byte ptr [ebx + 0x40e5f02], al; ret; 
0x000debf8: add eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f0152: add eax, dword ptr [eax]; add byte ptr [eax], al; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0179: add eax, dword ptr [eax]; add byte ptr [eax], al; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000715b5: add eax, dword ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp + 4], eax; call 0xdde60; add esp, 0x1c; ret; 
0x000bd418: add eax, dword ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebp - 0x134]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x000c0198: add eax, dword ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebp - 0x144]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x0011c2d5: add eax, dword ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax]; 
0x00117840: add eax, dword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x44]; mov esi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x000a7421: add eax, dword ptr [eax]; add byte ptr [eax], al; ret; 
0x0012fa8d: add eax, dword ptr [eax]; add byte ptr [ebp - 0x48a4f45], cl; jmp dword ptr [esi + 0xf]; 
0x0014512e: add eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00025616: add eax, dword ptr [eax]; add byte ptr [ebx - 0x1bf73], cl; jmp dword ptr [ebx]; 
0x00128c46: add eax, dword ptr [eax]; add byte ptr [ebx - 0xf76eb3c], al; pop ebx; pop esi; ret; 
0x0003fbc0: add eax, dword ptr [eax]; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x000d9f8a: add eax, dword ptr [eax]; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x7d]; 
0x000d95ac: add eax, dword ptr [eax]; add byte ptr [ecx - 0x74fbdbbc], cl; and eax, 0xe; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0xc]; 
0x0010cd04: add eax, dword ptr [eax]; add byte ptr [ecx - 0x76d3db94], cl; ret 0xcd89; 
0x00029fac: add eax, dword ptr [eax]; add byte ptr [ecx], dh; shr cl, cl; stc; idiv bh; jmp dword ptr [esi - 0x70]; 
0x0008744f: add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00103599: add eax, dword ptr [eax]; add byte ptr [edi + 7], dh; shr eax, 5; add esp, 0xc; ret; 
0x00179c0d: add eax, dword ptr [eax]; add cl, byte ptr [edx]; push cs; adc al, 0x43; ret; 
0x000d1bc1: add eax, dword ptr [eax]; add dh, dh; ret 0x7404; 
0x00148e29: add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x000d2489: add eax, dword ptr [eax]; add dh, dh; ret 0xf08; 
0x00148e46: add eax, dword ptr [eax]; add dh, dh; ret 0xf20; 
0x00148e4f: add eax, dword ptr [eax]; add dh, dh; ret 0xf40; 
0x001988d0: add eax, dword ptr [eax]; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x000f1325: add eax, dword ptr [eax]; add ebx, 0xb1ccd; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000f12b1: add eax, dword ptr [eax]; add ebx, 0xb1d41; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000f1237: add eax, dword ptr [eax]; add ebx, 0xb1dbb; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000f0fa3: add eax, dword ptr [eax]; add ebx, 0xb204f; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000eeff9: add eax, dword ptr [eax]; add ebx, 0xb3ff9; xchg ebx, edx; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x000eef57: add eax, dword ptr [eax]; add ebx, 0xb409b; xchg edi, ebx; mov eax, 0x147; call dword ptr gs:[0x10]; 
0x00132b6d: add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001307a5: add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001342dd: add eax, dword ptr [eax]; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000f2753: add eax, dword ptr [eax]; add ecx, 0xb089f; mov eax, dword ptr [ecx - 0xfc]; mov eax, dword ptr [eax + 0x1c]; ret; 
0x0016e05e: add eax, dword ptr [eax]; and al, 0x55; sti; jmp dword ptr [eax + 0x16]; 
0x0016e07e: add eax, dword ptr [eax]; and al, 0x57; sti; jmp esp; 
0x0016e2e6: add eax, dword ptr [eax]; and al, 0x7f; sti; call esp; 
0x0016e466: add eax, dword ptr [eax]; and al, 0xc4; sti; jmp eax; 
0x0016e686: add eax, dword ptr [eax]; and al, 0xf3; sti; jmp dword ptr [eax]; 
0x0016e6d6: add eax, dword ptr [eax]; and al, 0xfb; sti; call dword ptr [eax]; 
0x0016e706: add eax, dword ptr [eax]; and al, 2; cld; call dword ptr [eax + 0x3c]; 
0x0016dd2e: add eax, dword ptr [eax]; cli; inc dword ptr [eax + 0x14000304]; cmc; cli; call esp; 
0x0016eaf6: add eax, dword ptr [eax]; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; jmp eax; 
0x0016e76e: add eax, dword ptr [eax]; hlt; adc esp, edi; call esp; 
0x0016e446: add eax, dword ptr [eax]; hlt; ret 0xfffb; 
0x0016e546: add eax, dword ptr [eax]; hlt; sar bl, 1; call dword ptr [eax + 0x30]; 
0x0016e5be: add eax, dword ptr [eax]; in al, 0xe2; sti; jmp dword ptr [eax]; 
0x0016dc56: add eax, dword ptr [eax]; inc esp; aad 0xfa; jmp dword ptr [eax]; 
0x0016e85e: add eax, dword ptr [eax]; inc esp; and bh, ah; call esp; 
0x0016e4ee: add eax, dword ptr [eax]; inc esp; iretd; sti; jmp esp; 
0x0016e44e: add eax, dword ptr [eax]; inc esp; ret; 
0x0016eb3e: add eax, dword ptr [eax]; mov ah, 0x22; cld; call esp; 
0x0016e176: add eax, dword ptr [eax]; mov ah, 0x6d; sti; ljmp ptr [ebx + ebx + 0x6e340003]; sti; jmp eax; 
0x0016e18e: add eax, dword ptr [eax]; mov ah, 0x6e; sti; jmp dword ptr [eax]; 
0x0016e4ae: add eax, dword ptr [eax]; mov ah, 0xcc; sti; call dword ptr [eax + 0x2d]; 
0x0016e6be: add eax, dword ptr [eax]; movsb byte ptr es:[edi], byte ptr [esi]; cli; sti; jmp esp; 
0x0016e1ae: add eax, dword ptr [eax]; movsb byte ptr es:[edi], byte ptr [esi]; jno 0x16e1ae; call eax; 
0x0016e42e: add eax, dword ptr [eax]; movsb byte ptr es:[edi], byte ptr [esi]; sar ebx, -1; mov eax, 0x6400032a; ret 0xfffb; 
0x0016e68e: add eax, dword ptr [eax]; movsb byte ptr es:[edi], byte ptr [esi]; sti; jmp eax; 
0x0016e7b6: add eax, dword ptr [eax]; nop; adc al, 0xfc; jmp dword ptr [eax + 0x3a]; 
0x0016e516: add eax, dword ptr [eax]; nop; sar bl, 1; call esp; 
0x0000d0aa: add eax, dword ptr [eax]; push edi; add dword ptr [eax], eax; add byte ptr [edx], ah; add byte ptr [eax + eax], cl; ret; 
0x0016df66: add eax, dword ptr [eax]; push esp; inc esp; sti; jmp dword ptr [eax + 0x11]; 
0x0016e11e: add eax, dword ptr [eax]; push esp; push -5; call dword ptr [eax + 0x1a]; 
0x0016e806: add eax, dword ptr [eax]; push esp; push ds; cld; call dword ptr [eax + 0x40]; 
0x0016e79e: add eax, dword ptr [eax]; pushal; adc al, 0xfc; call eax; 
0x0000b12a: add eax, dword ptr [eax]; ret; 
0x0016dcb6: add eax, dword ptr [eax]; test ah, ah; cli; jmp esp; 
0x0016e046: add eax, dword ptr [eax]; test byte ptr [ebx + edi*8 - 1], dl; cld; adc eax, 0x54c40003; sti; jmp dword ptr [eax]; 
0x0016e3c6: add eax, dword ptr [eax]; xchg eax, esp; movsd dword ptr es:[edi], dword ptr [esi]; sti; call eax; 
0x0016de36: add eax, dword ptr [eax]; xor al, 0x1d; sti; jmp eax; 
0x0016e17e: add eax, dword ptr [eax]; xor al, 0x6e; sti; jmp eax; 
0x0016e1a6: add eax, dword ptr [eax]; xor al, 0x70; sti; lcall ptr [eax - 0x5bfffce4]; jno 0x16e1ae; call eax; 
0x001886b5: add eax, dword ptr [ebp + 0x140e0a04]; inc ecx; ret; 
0x000a74bf: add eax, dword ptr [ebp + 0x5ed475f6]; ret; 
0x000fc1c4: add eax, dword ptr [ebp + 0x5eec75c0]; pop ebx; pop edx; ret; 
0x0019b691: add eax, dword ptr [ebp + 0xe8e0202]; add al, 0xc5; mov esi, 0x4400; add byte ptr [eax + 0x7c0002c4], ah; ret; 
0x00179bf5: add eax, dword ptr [ebp + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00118876: add eax, dword ptr [ebx + 0x5689fce2]; add al, 0x83; ret 0x8901; 
0x001134e2: add eax, dword ptr [ebx + 0x6c89fce5]; and al, 4; mov dword ptr [esp], edi; call dword ptr [eax + 0x18]; 
0x00064f27: add eax, dword ptr [ebx + 0x748b200e]; and al, 0x14; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0017497e: add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0x300e4304], al; add ah, byte ptr [ecx + 0x43100e0a]; ret; 
0x00198e52: add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xc0e7e04], al; ret; 
0x00190bfa: add eax, dword ptr [ebx + 0xe]; xor byte ptr [edx + 0xa], bh; push cs; or al, 0x41; ret; 
0x00175988: add eax, dword ptr [ebx + eax + 0xa]; push cs; adc al, 0x43; ret; 
0x00196b02: add eax, dword ptr [ebx + eax*4 + 4]; push ebx; xchg dword ptr [edx], eax; push 0xc6c7040e; ret; 
0x0018a1c1: add eax, dword ptr [ebx + eax*4 + 5]; add dh, byte ptr [ebp + 0xa]; ret; 
0x00189848: add eax, dword ptr [ebx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00113357: add eax, dword ptr [ebx - 0x1f7c031f]; cld; lea eax, dword ptr [eax + ecx + 0x28]; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edi; call dword ptr [edx + 0x18]; 
0x000d25f6: add eax, dword ptr [ebx - 0x7b77fe20]; and al, 0xde; add byte ptr [eax], al; add byte ptr [ebx - 0x76abdbbc], cl; ret 0xc283; 
0x0017e1e3: add eax, dword ptr [ebx]; add al, 0xa; ret; 
0x001729bf: add eax, dword ptr [ebx]; cmpsd dword ptr [esi], dword ptr es:[edi]; add dword ptr [edx], ecx; ret; 
0x0016f987: add eax, dword ptr [ebx]; daa; add dword ptr [edx], ecx; ret; 
0x00172c1b: add eax, dword ptr [ebx]; dec edi; add dword ptr [edx], ecx; ret; 
0x0017141f: add eax, dword ptr [ebx]; dec esp; add ecx, dword ptr [edx]; ret; 
0x00190f8f: add eax, dword ptr [ebx]; fld dword ptr [edx + ecx]; ret; 
0x0018473f: add eax, dword ptr [ebx]; imul eax, dword ptr [ecx], 0xa; ret; 
0x0017117f: add eax, dword ptr [ebx]; inc esp; add dword ptr [edx], ecx; ret; 
0x0018d98b: add eax, dword ptr [ebx]; insd dword ptr es:[edi], dx; add dword ptr [edx], ecx; ret; 
0x00177e73: add eax, dword ptr [ebx]; int1; add dword ptr [edx], ecx; ret; 
0x00173ef3: add eax, dword ptr [ebx]; lar ecx, word ptr [edx]; ret; 
0x00174a4f: add eax, dword ptr [ebx]; pop ecx; add al, 0xa; ret; 
0x0017252f: add eax, dword ptr [ebx]; pop edi; add dword ptr [edx], ecx; ret; 
0x001984b3: add eax, dword ptr [ebx]; push eax; add dword ptr [edx], ecx; ret; 
0x00187f6f: add eax, dword ptr [ebx]; push ebx; add cl, byte ptr [edx]; ret; 
0x00195fb7: add eax, dword ptr [ebx]; push ebx; add dword ptr [edx], ecx; ret; 
0x0018a3c3: add eax, dword ptr [ebx]; pushfd; add dword ptr [edx], ecx; ret; 
0x0018cb37: add eax, dword ptr [ebx]; rol byte ptr [edx], 0xa; ret; 
0x0019887f: add eax, dword ptr [ebx]; salc; add cl, byte ptr [edx]; ret; 
0x0018f1ff: add eax, dword ptr [ebx]; wait; add cl, byte ptr [edx]; ret; 
0x00187c3b: add eax, dword ptr [ebx]; xchg byte ptr [edx + ecx], al; ret; 
0x0016fbbf: add eax, dword ptr [ebx]; xchg eax, ebx; add cl, byte ptr [edx]; ret; 
0x00196513: add eax, dword ptr [ebx]; xchg eax, esi; add dword ptr [edx], ecx; ret; 
0x001700bd: add eax, dword ptr [ecx + 0x140e0a01]; inc ecx; ret; 
0x0018e4ee: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xc0e5d04], al; ret; 
0x0018b4a6: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xc0e6104], al; ret; 
0x0017cf16: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xc0e6704], al; ret; 
0x0016fc8a: add eax, dword ptr [ecx + 0xe]; adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x1800e43], 3; ret 0xa03; 
0x001988aa: add eax, dword ptr [ecx + 0xe]; adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x1900e4e], 2; ret; 
0x00171766: add eax, dword ptr [ecx + 0xe]; adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x1c00e46], 2; mov edx, 0x43140e0a; ret; 
0x0018ce38: add eax, dword ptr [ecx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00196469: add eax, dword ptr [ecx + 1]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x001858b1: add eax, dword ptr [ecx + eax + 0x41140e0a]; ret; 
0x00199f8d: add eax, dword ptr [ecx + eax + 0x43140e0a]; ret; 
0x00171180: add eax, dword ptr [ecx + eax + 0xa]; ret; 
0x0017b079: add eax, dword ptr [ecx - 0x11]; jmp dword ptr [edx]; 
0x0017084d: add eax, dword ptr [ecx - 0x7d]; add eax, 0xa010f03; ret; 
0x0019b375: add eax, dword ptr [ecx - 0x7d]; add eax, 0xa014103; ret; 
0x0019a041: add eax, dword ptr [ecx - 0x7d]; add eax, 0xa01a003; ret; 
0x00055490: add eax, dword ptr [ecx]; add byte ptr [ebx - 0x3fe6fe08], al; add esp, 0x18; pop ebx; ret; 
0x001701cc: add eax, dword ptr [ecx]; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0019217b: add eax, dword ptr [ecx]; add dword ptr [edx], ecx; ret; 
0x00136b9f: add eax, dword ptr [ecx]; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b3657: add eax, dword ptr [ecx]; add esp, 0x18; pop esi; ret; 
0x000d0af9: add eax, dword ptr [ecx]; ret 0x4489; 
0x00029a29: add eax, dword ptr [ecx]; ret 0xd001; 
0x0018b6e1: add eax, dword ptr [edi - 0x7d]; add eax, 0xa03ba03; ret; 
0x001737b5: add eax, dword ptr [edi]; add cl, byte ptr [edx]; push cs; adc al, 0x45; ret; 
0x00191569: add eax, dword ptr [edx + 0xc0e5f04]; ret 0xe41; 
0x0007adc4: add eax, dword ptr [edx + 0xc]; xor eax, 0xfedabeeb; mov dword ptr [edx + 4], eax; pop ebx; ret; 
0x0014a473: add eax, dword ptr [edx + 8]; mov dword ptr [esp], eax; call edi; 
0x000f2887: add eax, dword ptr [edx + ecx]; lea esi, dword ptr [esi]; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000f3249: add eax, dword ptr [edx + ecx]; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000f3bbc: add eax, dword ptr [edx + ecx]; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x00187f3b: add eax, dword ptr [edx - 0x7d]; add eax, 0x5d030486; push es; ret; 
0x0019a2b7: add eax, dword ptr [edx - 0x7d]; add eax, 0xbc030486; add dword ptr [edx], ecx; ret; 
0x0004b592: add eax, dword ptr [edx]; add byte ptr [ebx - 0x6bf0fe40], al; ret 0x50e9; 
0x0004b5f1: add eax, dword ptr [edx]; add byte ptr [ebx - 0x7cd3dbb4], cl; rol byte ptr [ecx], 0xf; xchg eax, esp; ret 0xdfe9; 
0x0004b51f: add eax, dword ptr [edx]; add byte ptr [ebx - 0x7cd3dbb4], cl; rol byte ptr [ecx], 0xf; xchg eax, esp; ret 0xe9; 
0x00195dff: add eax, dword ptr [edx]; arpl word ptr [edx], cx; ret; 
0x0019700f: add eax, dword ptr [edx]; dec byte ptr [edx]; ret; 
0x0017908d: add eax, dword ptr [edx]; dec eax; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00178bdd: add eax, dword ptr [edx]; dec ebx; push cs; add al, 0xc6; ret; 
0x0017aea9: add eax, dword ptr [edx]; dec ecx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00178d21: add eax, dword ptr [edx]; dec ecx; push cs; add al, 0xc6; ret; 
0x00187a8b: add eax, dword ptr [edx]; fisttp qword ptr [edx]; ret; 
0x0018c3ef: add eax, dword ptr [edx]; fmul qword ptr [edx]; ret; 
0x0018c1cf: add eax, dword ptr [edx]; imul ecx, dword ptr [edx], 0xc6c7040e; ret; 
0x00171cd4: add eax, dword ptr [edx]; inc eax; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0017a4b1: add eax, dword ptr [edx]; inc ebp; push cs; add al, 0xc6; ret; 
0x0017a4d1: add eax, dword ptr [edx]; inc edi; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0017aaf1: add eax, dword ptr [edx]; inc edx; push cs; add al, 0xc6; ret; 
0x00178a81: add eax, dword ptr [edx]; inc esi; push cs; add al, 0xc6; ret; 
0x0019b8e1: add eax, dword ptr [edx]; inc esp; push cs; add al, 0xc6; ret; 
0x0017c325: add eax, dword ptr [edx]; jno 0x17c333; push cs; add al, 0xc6; ret; 
0x00195e2f: add eax, dword ptr [edx]; jno 0x195e3d; ret; 
0x00174aed: add eax, dword ptr [edx]; jnp 0x174afb; push cs; add al, 0xc6; ret; 
0x00193653: add eax, dword ptr [edx]; loope 0x193661; ret; 
0x001759bf: add eax, dword ptr [edx]; mov cs, word ptr [edx]; ret; 
0x0017ae09: add eax, dword ptr [edx]; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00171bd8: add eax, dword ptr [edx]; pop eax; or cl, byte ptr [esi]; add al, 0xc7; ret; 
0x00174505: add eax, dword ptr [edx]; pop ecx; push cs; add al, 0xc6; ret; 
0x00196d1d: add eax, dword ptr [edx]; pop edi; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00172cc0: add eax, dword ptr [edx]; pop esi; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00185be0: add eax, dword ptr [edx]; push eax; push cs; add al, 0xc6; ret; 
0x00172c45: add eax, dword ptr [edx]; push ebx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0018e92f: add eax, dword ptr [edx]; push edi; ret; 
0x00189dc1: add eax, dword ptr [edx]; push edx; push cs; add al, 0xc6; ret; 
0x0018addb: add eax, dword ptr [edx]; push edx; ret; 
0x00179d85: add eax, dword ptr [edx]; push esi; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0018752a: add eax, dword ptr [edx]; push esi; ret; 
0x0018d607: add eax, dword ptr [edx]; xchg byte ptr [edx], cl; ret; 
0x0019153d: add eax, dword ptr [esi + 0xc0e6704]; mov byte ptr [ecx + 0xe], 8; ret; 
0x00173aa9: add eax, dword ptr [esi + 9]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00175bc2: add eax, dword ptr [esi]; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x0007d84c: add eax, dword ptr [esp + ecx + 0x40de750c]; inc eax; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x00030de3: add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x0002f730: add eax, dword ptr [esp]; ret; 
0x00133178: add eax, dword ptr cs:[eax]; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0016e545: add eax, dword ptr cs:[eax]; hlt; sar bl, 1; call dword ptr [eax + 0x30]; 
0x0016e765: add eax, dword ptr ds:[eax]; aam 0x11; cld; push dword ptr [esi + edi + 0x11f40003]; cld; call esp; 
0x0008744e: add eax, dword ptr ds:[eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0016e76d: add eax, dword ptr ds:[eax]; hlt; adc esp, edi; call esp; 
0x00133ee0: add eax, dword ptr es:[eax]; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00134292: add eax, dword ptr es:[eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001342dc: add eax, dword ptr es:[eax]; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00019b61: add eax, dword ptr gs:[0]; ret; 
0x0000d0a9: add eax, dword ptr ss:[eax]; push edi; add dword ptr [eax], eax; add byte ptr [edx], ah; add byte ptr [eax + eax], cl; ret; 
0x0018cb38: add eax, eax; add cl, byte ptr [edx]; ret; 
0x001702dc: add eax, eax; add dword ptr [edx], ecx; push cs; adc al, 0x45; ret; 
0x00173999: add eax, eax; or dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x000d8dd7: add eax, ebp; ret; 
0x0016fef4: add eax, ecx; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0009494b: add eax, ecx; add esi, ecx; call 0x129d77; add ecx, 0xc6030; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0013c795: add eax, ecx; call 0x129d73; add ebx, 0x2af44; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013b569: add eax, ecx; call 0x129d73; add ebx, 0x2bfb0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013b462: add eax, ecx; call 0x129d73; add ebx, 0x2bff7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013b266: add eax, ecx; call 0x129d73; add ebx, 0x2c1f3; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013a145: add eax, ecx; call 0x129d73; add ebx, 0x2d154; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00139138: add eax, ecx; call 0x129d73; add ebx, 0x2dfa1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00138158: add eax, ecx; call 0x129d73; add ebx, 0x2edc1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00136e99: add eax, ecx; call 0x129d73; add ebx, 0x2fec0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00136d92: add eax, ecx; call 0x129d73; add ebx, 0x2ff07; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00136b96: add eax, ecx; call 0x129d73; add ebx, 0x30103; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00135a19: add eax, ecx; call 0x129d73; add ebx, 0x310c0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00135912: add eax, ecx; call 0x129d73; add ebx, 0x31107; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00135708: add eax, ecx; call 0x129d73; add ebx, 0x31311; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134589: add eax, ecx; call 0x129d73; add ebx, 0x322d0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134482: add eax, ecx; call 0x129d73; add ebx, 0x32317; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134278: add eax, ecx; call 0x129d73; add ebx, 0x32521; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00132899: add eax, ecx; call 0x129d73; add ebx, 0x35104; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001327d4: add eax, ecx; call 0x129d73; add ebx, 0x351c9; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001308a9: add eax, ecx; call 0x129d73; add ebx, 0x36ff0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013079a: add eax, ecx; call 0x129d73; add ebx, 0x370ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0012f64f: add eax, ecx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0013690e: add eax, ecx; pop ebx; ret; 
0x00094ff6: add eax, ecx; pop edi; ret; 
0x000952e0: add eax, ecx; ret; 
0x0013d584: add eax, ecx; sfence; call 0x129d73; add ebx, 0x2a152; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013c3e8: add eax, ecx; sfence; call 0x129d73; add ebx, 0x2b06e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013af44: add eax, ecx; sfence; call 0x129d73; add ebx, 0x2c352; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00139f34: add eax, ecx; sfence; call 0x129d73; add ebx, 0x2d1a2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00138f64: add eax, ecx; sfence; call 0x129d73; add ebx, 0x2dfb2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00137d98: add eax, ecx; sfence; call 0x129d73; add ebx, 0x2eefe; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001368b8: add eax, ecx; sfence; call 0x129d73; add ebx, 0x3015e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00135488: add eax, ecx; sfence; call 0x129d73; add ebx, 0x3130e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00094ff4: add eax, edi; add eax, ecx; pop edi; ret; 
0x0013b360: add eax, edi; pop edi; call 0x129d73; add ebx, 0x2c1b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00136c90: add eax, edi; pop edi; call 0x129d73; add ebx, 0x300c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00135810: add eax, edi; pop edi; call 0x129d73; add ebx, 0x312c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134380: add eax, edi; pop edi; call 0x129d73; add ebx, 0x324d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00095097: add eax, edi; pop edi; ret; 
0x00095276: add eax, edi; sub eax, 0x10; pop edi; ret; 
0x00095964: add eax, edi; xor ch, ch; add eax, ecx; pop edi; ret; 
0x00083fa6: add eax, edx; add eax, 0x10; pop edi; pop esi; ret; 
0x00083fb3: add eax, edx; add eax, 0x20; pop edi; pop esi; ret; 
0x00083fc0: add eax, edx; add eax, 0x30; pop edi; pop esi; ret; 
0x00095b1d: add eax, edx; add eax, ecx; ret; 
0x001143f4: add eax, edx; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00083f9c: add eax, edx; pop edi; pop esi; ret; 
0x00095c83: add eax, edx; ret; 
0x00095237: add eax, esi; pop ebx; pop esi; sub eax, 0x10; pop edi; ret; 
0x0006c060: add eax, esi; pop esi; ret; 
0x00118600: add ebp, 0xc; mov dword ptr [esp + 0x2c], edx; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x001134e0: add ebp, 3; and ebp, 0xfffffffc; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], edi; call dword ptr [eax + 0x18]; 
0x00066a79: add ebp, dword ptr [eax + 0x768dfffc]; add byte ptr [ebx + 0x462b0846], cl; add al, 0x89; ret 0xfac1; 
0x001835da: add ebp, dword ptr [eax + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018a7ab: add ebp, dword ptr [eax + 3]; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x00173759: add ebp, dword ptr [eax]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x001704e9: add ebp, dword ptr [ebp + 0xe]; add al, 0xc6; ret; 
0x00183e64: add ebp, dword ptr [ecx + 0x140e0a01]; inc ecx; ret; 
0x001908c9: add ebp, dword ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x0019b2c2: add ebp, dword ptr [ecx - 0x7a]; add ah, byte ptr [edi + 0xa]; push cs; add al, 0xc6; ret; 
0x00171430: add ebp, dword ptr [ecx]; add dword ptr [edx], ecx; ret; 
0x000a77ff: add ebp, dword ptr [ecx]; ret 0x448b; 
0x000a7da8: add ebp, dword ptr [ecx]; ret 0x48d; 
0x0018d489: add ebp, dword ptr [edx + 0xa]; push cs; add al, 0xc6; ret; 
0x0018ab10: add ebp, dword ptr [edx + ecx + 0xe]; add al, 0xc7; ret; 
0x0017ca6e: add ebp, dword ptr [edx - 0x7a]; add dl, byte ptr [esi + 0xa]; push cs; add al, 0xc6; ret; 
0x00180380: add ebp, dword ptr [esi + 2]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x001823f7: add ebp, dword ptr [esi + ecx + 8]; ret; 
0x0017c23c: add ebp, dword ptr [esp + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0007c907: add ebp, eax; add byte ptr [eax], al; add byte ptr [eax], al; pop edx; lea ecx, dword ptr [edx + ecx*8 + 0xb]; jmp ecx; 
0x000660af: add ebp, eax; mov eax, ebp; pop ebp; ret; 
0x00166e2d: add ebp, edi; inc dword ptr [eax + 2]; std; call eax; 
0x00166e2d: add ebp, edi; inc dword ptr [eax + 2]; std; call eax; add bh, ch; jmp dword ptr [eax + 3]; 
0x0010eb34: add ebp, edi; jmp dword ptr [esi - 0x39]; 
0x00166e29: add ebp, edi; push dword ptr [eax + 0x40fffd01]; add bh, ch; call eax; 
0x001895c0: add ebp, edx; add cl, byte ptr [edx]; ret; 
0x000031d2: add ebp, esi; aam 0x5c; ret 0x2ec0; 
0x001753b9: add ebp, esi; call dword ptr [ecx]; 
0x0017b5c8: add ebp, esi; out dx, eax; call dword ptr [eax]; 
0x0016ff65: add ebp, esp; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0018a724: add ebp, esp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00172fcd: add ebp, esp; call dword ptr [eax]; 
0x0008f534: add ebx, 0x10; call 0x129d77; add ecx, 0xcb304; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008de34: add ebx, 0x10; call 0x129d77; add ecx, 0xcc8a4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000725f8: add ebx, 0x1309fc; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x30]; 
0x0006f3e1: add ebx, 0x133c13; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x48]; 
0x0005555f: add ebx, 0x14da95; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x12e; call dword ptr gs:[0x10]; 
0x0003edf4: add ebx, 0x164200; mov esi, dword ptr [eax]; mov edx, esi; xchg ebx, edx; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x0002e2df: add ebx, 0x174d15; xchg ebx, edx; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0002e1ef: add ebx, 0x174e05; xchg ebx, edx; mov eax, 0xb0; call dword ptr gs:[0x10]; 
0x0013d782: add ebx, 0x2a05e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013d58e: add ebx, 0x2a152; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013caa9: add ebx, 0x2ac37; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013c99f: add ebx, 0x2ad41; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013c898: add ebx, 0x2ae48; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013c79c: add ebx, 0x2af44; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013c67c: add ebx, 0x2afa4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013c7e9: add ebx, 0x2afb7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0013c3f2: add ebx, 0x2b06e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013b570: add ebx, 0x2bfb0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013b469: add ebx, 0x2bff7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013b368: add ebx, 0x2c1b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013b26d: add ebx, 0x2c1f3; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013b152: add ebx, 0x2c24e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013b2b9: add ebx, 0x2c327; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0013af4e: add ebx, 0x2c352; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013a459: add ebx, 0x2ce47; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013a34f: add ebx, 0x2cf51; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013a248: add ebx, 0x2d058; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013a14c: add ebx, 0x2d154; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00139f3e: add ebx, 0x2d1a2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013a199: add ebx, 0x2d1c7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00139459: add ebx, 0x2dc87; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013934f: add ebx, 0x2dd91; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00139248: add ebx, 0x2de98; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013913f: add ebx, 0x2dfa1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00138f6e: add ebx, 0x2dfb2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00139199: add ebx, 0x2e007; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0013914f: add ebx, 0x2e091; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00138479: add ebx, 0x2eaa7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013836f: add ebx, 0x2ebb1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00138268: add ebx, 0x2ecb8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013815f: add ebx, 0x2edc1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013804c: add ebx, 0x2ee14; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001381b9: add ebx, 0x2ee27; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0013816f: add ebx, 0x2eeb1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00137da2: add ebx, 0x2eefe; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00136ea0: add ebx, 0x2fec0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00136d99: add ebx, 0x2ff07; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00136c98: add ebx, 0x300c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00136b9d: add ebx, 0x30103; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001368c2: add ebx, 0x3015e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00136be9: add ebx, 0x30237; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00135a20: add ebx, 0x310c0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00135919: add ebx, 0x31107; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00135818: add ebx, 0x312c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00135492: add ebx, 0x3130e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013570f: add ebx, 0x31311; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00135769: add ebx, 0x31437; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0013571f: add ebx, 0x314c1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134590: add ebx, 0x322d0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134489: add ebx, 0x32317; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134388: add ebx, 0x324d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013427f: add ebx, 0x32521; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001342d9: add ebx, 0x32647; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00133edd: add ebx, 0x326c3; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0013428f: add ebx, 0x326d1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00133e2d: add ebx, 0x32773; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00133d69: add ebx, 0x327b7; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0013398d: add ebx, 0x32993; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001338dd: add ebx, 0x32a43; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001337f5: add ebx, 0x32aab; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00133433: add ebx, 0x32c6d; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00133377: add ebx, 0x32d29; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0013331b: add ebx, 0x32d85; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0013325d: add ebx, 0x32e43; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00133175: add ebx, 0x32eab; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00132e03: add ebx, 0x3301d; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00132d47: add ebx, 0x330d9; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00132ceb: add ebx, 0x33135; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00132c2d: add ebx, 0x331f3; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00132b69: add ebx, 0x33237; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001328a0: add ebx, 0x35104; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001327db: add ebx, 0x351c9; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001308b0: add ebx, 0x36ff0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001307a1: add ebx, 0x370ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0012e797: add ebx, 0x7485d; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0012e721: add ebx, 0x748d3; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0012e6a7: add ebx, 0x7494d; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000f1327: add ebx, 0xb1ccd; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000f12b3: add ebx, 0xb1d41; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000f1239: add ebx, 0xb1dbb; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000f0fa5: add ebx, 0xb204f; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000eeffb: add ebx, 0xb3ff9; xchg ebx, edx; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x000eef59: add ebx, 0xb409b; xchg edi, ebx; mov eax, 0x147; call dword ptr gs:[0x10]; 
0x000eec14: add ebx, 0xb43e1; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x000e9837: add ebx, 0xb97bd; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xc1; call dword ptr gs:[0x10]; 
0x000e956a: add ebx, 0xb9a8a; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0x10f; call dword ptr gs:[0x10]; 
0x000e820d: add ebx, 0xbade7; xchg edi, ebx; mov eax, 0x58; call dword ptr gs:[0x10]; 
0x000e6be3: add ebx, 0xbc411; mov ecx, edx; xchg ebx, ecx; mov eax, 0x2d; call dword ptr gs:[0x10]; 
0x000e6a7a: add ebx, 0xbc57a; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0x60; call dword ptr gs:[0x10]; 
0x000e6700: add ebx, 0xbc8f4; xchg edi, ebx; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000e6610: add ebx, 0xbc9e4; xchg edi, ebx; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000e65ba: add ebx, 0xbca3a; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0x4b; call dword ptr gs:[0x10]; 
0x000e657a: add ebx, 0xbca7a; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0xbf; call dword ptr gs:[0x10]; 
0x000e61b9: add ebx, 0xbce3b; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000e5f9d: add ebx, 0xbd057; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000e0b67: add ebx, 0xc248d; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x000e0acf: add ebx, 0xc2525; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x000e0a27: add ebx, 0xc25cd; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x000e00c7: add ebx, 0xc2f2d; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x000e0067: add ebx, 0xc2f8d; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000df0b7: add ebx, 0xc3f3d; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000dea13: add ebx, 0xc45e1; or dh, 0x80; xchg edi, ebx; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000de22c: add ebx, 0xc4dc8; xchg edi, ebx; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x000de1cc: add ebx, 0xc4e28; xchg edi, ebx; mov eax, 0x10c; call dword ptr gs:[0x10]; 
0x000de03d: add ebx, 0xc4fb7; xchg edi, ebx; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000dde6a: add ebx, 0xc518a; mov edx, dword ptr [esp + 0xc]; xchg ebx, edx; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x000dde2a: add ebx, 0xc51ca; mov edx, dword ptr [esp + 0xc]; xchg ebx, edx; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ddac8: add ebx, 0xc552c; xchg edi, ebx; mov eax, 0x13e; call dword ptr gs:[0x10]; 
0x0007df61: add ebx, 0xdc5c3; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x0007dd07: add ebx, 0xdc81d; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x000b9457: add ebx, 0xe9b9d; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x000b93f7: add ebx, 0xe9bfd; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000b90da: add ebx, 0xe9f1a; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x000b85f7: add ebx, 0xea9fd; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x000b3eeb: add ebx, 0xef109; xchg edi, ebx; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000b3e34: add ebx, 0xef1c0; xchg edi, ebx; mov eax, 0x8d; call dword ptr gs:[0x10]; 
0x0018c0e6: add ebx, dword ptr [eax - 0x7a]; add ah, byte ptr [edi + 0xa]; push cs; add al, 0xc6; ret; 
0x0018582e: add ebx, dword ptr [eax - 0x7a]; add bl, byte ptr [edx + 0xa]; push cs; add al, 0xc6; ret; 
0x00190f5a: add ebx, dword ptr [eax - 0x7a]; add cl, byte ptr [ebp + 0xa]; push cs; add al, 0xc6; ret; 
0x001733c6: add ebx, dword ptr [eax - 0x7a]; add dl, byte ptr [edi + 0xe]; add al, 0xc6; ret; 
0x0017a599: add ebx, dword ptr [ebp + 0xa]; push cs; add al, 0xc6; ret; 
0x00187f41: add ebx, dword ptr [ebp + 6]; ret; 
0x0018a306: add ebx, dword ptr [ebp - 0x7a]; add ah, byte ptr [eax + 0xa]; push cs; add al, 0xc6; ret; 
0x00196ee4: add ebx, dword ptr [ebx + 2]; push cs; adc al, 0x41; ret; 
0x0007dd0d: add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x00132b6f: add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001307a7: add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001342df: add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x001896c8: add ebx, dword ptr [ebx]; or ecx, dword ptr [edx]; ret; 
0x00173928: add ebx, dword ptr [ecx + 0x140e0a01]; inc ecx; ret; 
0x001840ff: add ebx, dword ptr [ecx + eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00174169: add ebx, dword ptr [ecx + eax + 0xa]; push cs; adc al, 0x46; ret; 
0x00185c1f: add ebx, dword ptr [ecx - 0x7a]; add al, byte ptr [edx]; bound ecx, qword ptr [esi]; add al, 0xc6; ret; 
0x00185bff: add ebx, dword ptr [ecx - 0x7a]; add bh, byte ptr [edi + 0xe]; add al, 0xc6; ret; 
0x0018c384: add ebx, dword ptr [ecx]; add dword ptr [edx], ecx; ret; 
0x001842b1: add ebx, dword ptr [ecx]; add ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x001905e0: add ebx, dword ptr [edi + 0x140e0a02]; inc ecx; ret; 
0x0008d959: add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x00183478: add ebx, dword ptr [edi + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00134740: add ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x00189ae8: add ebx, dword ptr [edx + 0x140e0a03]; inc ebx; ret; 
0x00189c00: add ebx, dword ptr [edx + 0x140e0a07]; inc ebx; ret; 
0x00185e2d: add ebx, dword ptr [edx - 0xe]; jmp dword ptr [edx]; 
0x00193698: add ebx, dword ptr [edx]; add cl, byte ptr [edx]; ret; 
0x00183a94: add ebx, dword ptr [edx]; add dword ptr [edx], ecx; ret; 
0x0007d3b5: add ebx, dword ptr [esi + 0x5f]; ret; 
0x001725fb: add ebx, dword ptr [esi + 2]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001820d6: add ebx, dword ptr [esi + ecx + 8]; ret; 
0x001748e0: add ebx, eax; add dword ptr [edx], ecx; ret; 
0x0018a6b4: add ebx, ebp; add dword ptr [edx], ecx; ret; 
0x0002870d: add ebx, ebp; sbb byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x7d]; 
0x0002e977: add ebx, ebp; test al, 0x8d; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x00190f90: add ebx, ecx; add al, 0xa; ret; 
0x00176dcd: add ebx, ecx; out dx, al; jmp dword ptr [edx]; 
0x00183f59: add ebx, esi; add dword ptr [edx], ecx; push cs; adc al, 0x45; ret; 
0x00187554: add ebx, esi; add dword ptr [edx], ecx; ret; 
0x00186fa9: add ebx, esi; call dword ptr [eax]; 
0x000899f3: add ebx, esi; movq qword ptr [edx], mm0; lea eax, dword ptr [edx + 0xf]; pop edi; ret; 
0x00089ca3: add ebx, esi; movq qword ptr [edx], mm0; lea eax, dword ptr [edx + 0xf]; ret; 
0x00085633: add ebx, esi; movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x000858c3: add ebx, esi; movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x00073435: add ecx, 0x12fbbf; mov eax, dword ptr [ecx + 0x96c]; ret; 
0x0002ee05: add ecx, 0x1741ef; mov eax, dword ptr [ecx + 0x58]; ret; 
0x0002ede5: add ecx, 0x17420f; mov eax, dword ptr [ecx + 0x54]; ret; 
0x0002ebb5: add ecx, 0x17443f; mov eax, dword ptr [ecx - 0xf8]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00027265: add ecx, 0x17bd8f; mov eax, dword ptr [ecx - 0x90]; add eax, dword ptr gs:[0]; ret; 
0x00027245: add ecx, 0x17bdaf; mov eax, dword ptr [ecx - 0xc0]; add eax, dword ptr gs:[0]; ret; 
0x00027225: add ecx, 0x17bdcf; mov eax, dword ptr [ecx - 0x130]; add eax, dword ptr gs:[0]; ret; 
0x00026a85: add ecx, 0x17c56f; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [ecx - 0x158]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x00023bd5: add ecx, 0x17f41f; mov eax, dword ptr [ecx - 0x158]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x58]; ret; 
0x000231a5: add ecx, 0x17fe4f; mov eax, dword ptr [ecx + 0xfe4]; ret; 
0x0001af95: add ecx, 0x18805f; mov eax, dword ptr [ecx + 0x36c0]; ret; 
0x0001af75: add ecx, 0x18807f; mov eax, dword ptr [ecx + 0x36c8]; ret; 
0x00019b55: add ecx, 0x18949f; mov eax, dword ptr [ecx - 0xf8]; add eax, dword ptr gs:[0]; ret; 
0x00019655: add ecx, 0x18999f; lea eax, dword ptr [ecx - 0x43dee]; ret; 
0x00019635: add ecx, 0x1899bf; lea eax, dword ptr [ecx - 0x46116]; ret; 
0x00127595: add ecx, 0x7ba5f; mov eax, dword ptr [ecx - 0x174]; add eax, dword ptr gs:[0]; ret; 
0x00123ef5: add ecx, 0x7f0ff; mov eax, dword ptr [ecx - 0xf8]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00123ed5: add ecx, 0x7f11f; mov eax, dword ptr [ecx - 0xf8]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00133ed2: add ecx, 0x80; call 0x129d73; add ebx, 0x326c3; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0011c3e5: add ecx, 0x86c0f; mov eax, dword ptr [ecx - 0x58]; lea edx, dword ptr [ecx + 0x33ac]; mov dword ptr gs:[eax], edx; ret; 
0x00105335: add ecx, 0x9dcbf; mov eax, dword ptr [ecx - 0x100]; add eax, dword ptr gs:[0]; ret; 
0x000fefc5: add ecx, 0xa402f; mov eax, dword ptr [ecx - 0x14]; mov eax, dword ptr gs:[eax]; ret; 
0x0003f942: add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x000f2755: add ecx, 0xb089f; mov eax, dword ptr [ecx - 0xfc]; mov eax, dword ptr [eax + 0x1c]; ret; 
0x000e14e5: add ecx, 0xc1b0f; mov eax, dword ptr [ecx - 0xf8]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00094ec1: add ecx, 0xc5ac3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949b6: add ecx, 0xc5fce; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094991: add ecx, 0xc5ff3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094971: add ecx, 0xc6013; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094954: add ecx, 0xc6030; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000948b5: add ecx, 0xc604f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00094927: add ecx, 0xc605d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094897: add ecx, 0xc606d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00094910: add ecx, 0xc6074; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000948f5: add ecx, 0xc608f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094872: add ecx, 0xc6092; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000948d3: add ecx, 0xc60b1; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094848: add ecx, 0xc60bc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009482f: add ecx, 0xc60d5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009480e: add ecx, 0xc60f6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000947ea: add ecx, 0xc611a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000947cc: add ecx, 0xc6138; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00094749: add ecx, 0xc61bb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00091597: add ecx, 0xc92ed; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00091572: add ecx, 0xc9312; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00091548: add ecx, 0xc933c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009152f: add ecx, 0xc9355; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009150e: add ecx, 0xc9376; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000914ea: add ecx, 0xc939a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000914cc: add ecx, 0xc93b8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000914b0: add ecx, 0xc93d4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008f621: add ecx, 0xcb18f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008f53c: add ecx, 0xcb304; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008f529: add ecx, 0xcb317; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008f50d: add ecx, 0xcb333; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008ea16: add ecx, 0xcbd9a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e9f1: add ecx, 0xcbdbf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e9d1: add ecx, 0xcbddf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e9b4: add ecx, 0xcbdfc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e915: add ecx, 0xcbe1b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008e987: add ecx, 0xcbe29; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e970: add ecx, 0xcbe40; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e955: add ecx, 0xcbe5b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e933: add ecx, 0xcbe7d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e841: add ecx, 0xcbeef; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008e821: add ecx, 0xcbf0f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008e7fc: add ecx, 0xcbf34; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008df21: add ecx, 0xcc72f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008de3c: add ecx, 0xcc8a4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008de29: add ecx, 0xcc8b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008de0d: add ecx, 0xcc8d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d3d6: add ecx, 0xcd27a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d3b1: add ecx, 0xcd29f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d391: add ecx, 0xcd2bf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d374: add ecx, 0xcd2dc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d2d5: add ecx, 0xcd2fb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008d347: add ecx, 0xcd309; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d330: add ecx, 0xcd320; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d315: add ecx, 0xcd33b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d2f3: add ecx, 0xcd35d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d211: add ecx, 0xcd3bf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008d1f1: add ecx, 0xcd3df; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008d1cc: add ecx, 0xcd404; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0006aad0: add ecx, 1; mov dword ptr [edx + 4], ecx; add esp, 0x18; pop ebx; ret; 
0x0006aa9f: add ecx, 1; mov dword ptr [edx + 4], ecx; ret; 
0x000678b3: add ecx, 1; movzx eax, al; mov dword ptr [edx + 0x14], ecx; add esp, 0x18; pop ebx; ret; 
0x0006aa72: add ecx, 1; movzx eax, al; mov dword ptr [edx + 0x14], ecx; ret; 
0x0006b90a: add ecx, 4; mov dword ptr [eax], ecx; add esp, 0x18; mov eax, edx; pop esi; ret; 
0x0006eff1: add ecx, 4; mov dword ptr [edx + 0x10], ecx; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0006ee7a: add ecx, 4; mov dword ptr [edx + 0x10], ecx; pop esi; ret; 
0x0006e585: add ecx, 4; mov dword ptr [edx], ecx; add esp, 0x18; pop ebx; ret; 
0x0006e424: add ecx, 4; mov dword ptr [edx], ecx; ret; 
0x0019630d: add ecx, dword ptr [0x140e0a01]; inc ebx; ret; 
0x00183ef5: add ecx, dword ptr [eax + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018a4ff: add ecx, dword ptr [eax]; add cl, byte ptr [edx]; push cs; adc al, 0x46; ret; 
0x00173678: add ecx, dword ptr [eax]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x001706b2: add ecx, dword ptr [ebp + 0x140e0a01]; inc ecx; ret; 
0x0018406d: add ecx, dword ptr [ebp + 0x140e0a03]; inc ecx; ret; 
0x000c2b67: add ecx, dword ptr [ebp + 0x2de90475]; idiv bh; dec dword ptr [ebx - 0x15755]; jmp dword ptr [ebp - 0x75]; 
0x0008f029: add ecx, dword ptr [ebp + 0x5e5f0747]; pop ebx; ret; 
0x0007d3b2: add ecx, dword ptr [ebp + 0x5f5e0346]; ret; 
0x00087490: add ecx, dword ptr [ebp - 0x7af0fcb6]; test byte ptr [edx], 0; add byte ptr [edi + 0x5b], bl; ret; 
0x0019a771: add ecx, dword ptr [ebp - 0x7d]; add eax, 0xa017803; ret; 
0x00094a7c: add ecx, dword ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x00091629: add ecx, dword ptr [ebx + 0x5e082444]; ret; 
0x0007c5b3: add ecx, dword ptr [ebx + 0x5f082444]; ret; 
0x00171420: add ecx, dword ptr [ebx + eax + 0xa]; ret; 
0x000f2c12: add ecx, dword ptr [ebx]; add byte ptr [ecx - 0x8fbdb8c], cl; ret 0xff80; 
0x00192488: add ecx, dword ptr [ebx]; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x0018ba15: add ecx, dword ptr [ebx]; add ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x00094a77: add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091624: add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008d954: add ecx, dword ptr [ecx + 0x357890f]; pop edi; pop esi; pop ebx; ret; 
0x00097c8c: add ecx, dword ptr [ecx + 0x375044a]; mov dword ptr [edx + 8], ecx; pop esi; pop edi; ret; 
0x00089a76: add ecx, dword ptr [ecx + 0x428d0342]; push es; pop edi; ret; 
0x00089ba6: add ecx, dword ptr [ecx + 0x428d0342]; push es; ret; 
0x00097c91: add ecx, dword ptr [ecx + 0x5f5e084a]; ret; 
0x000e98f3: add ecx, dword ptr [ecx + 0xa890451]; mov dword ptr [edx + 4], eax; ret; 
0x0008d2f9: add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d1d2: add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000857c6: add ecx, dword ptr [ecx - 0x2f76fcbe]; ret; 
0x000d50bb: add ecx, dword ptr [ecx - 0x76f7dbb4]; test byte ptr [esp + ebx*8], ah; add byte ptr [eax], al; add byte ptr [ebx - 0x7ccfdbbc], cl; ret 0xc740; 
0x00093e39: add ecx, dword ptr [ecx - 0x776fcbe]; pop ebx; pop edi; ret; 
0x00085696: add ecx, dword ptr [ecx - 0x776fcbe]; pop edi; ret; 
0x0008eba9: add ecx, dword ptr [ecx]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0017569d: add ecx, dword ptr [ecx]; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x00198bce: add ecx, dword ptr [edi - 0x7a]; add al, byte ptr [edx]; inc edx; push cs; add al, 0xc6; ret; 
0x00197526: add ecx, dword ptr [edi - 0x7a]; add al, byte ptr [edx]; pop eax; push cs; add al, 0xc6; ret; 
0x00199dba: add ecx, dword ptr [edi - 0x7a]; add ch, byte ptr [ebp + 0xe]; add al, 0xc6; ret; 
0x00197036: add ecx, dword ptr [edi - 0x7a]; add dh, byte ptr [ecx + 0xe]; add al, 0xc6; ret; 
0x00173ef4: add ecx, dword ptr [edi]; add cl, byte ptr [edx]; ret; 
0x00170851: add ecx, dword ptr [edi]; add dword ptr [edx], ecx; ret; 
0x0001d709: add ecx, dword ptr [edi]; dec eax; ret 0xe083; 
0x000ecdad: add ecx, dword ptr [edi]; dec eax; ret 0xf8c1; 
0x000320c2: add ecx, dword ptr [edi]; dec ecx; ret 0xf8c1; 
0x00073bef: add ecx, dword ptr [edi]; mov dh, 2; pop esi; ret; 
0x0008ea91: add ecx, dword ptr [edi]; test dword ptr [eax], ebx; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00087493: add ecx, dword ptr [edi]; test esi, esi; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0010bf71: add ecx, dword ptr [edi]; xchg byte ptr [esp + eax], ch; add byte ptr [ecx], al; ret 0xb70f; 
0x00110f09: add ecx, dword ptr [edi]; xchg eax, ebp; ret 0xd021; 
0x00170033: add ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0017598a: add ecx, dword ptr [edx]; push cs; adc al, 0x43; ret; 
0x0018a7ad: add ecx, dword ptr [edx]; push cs; adc al, 0x46; ret; 
0x0016f60a: add ecx, dword ptr [edx]; ret; 
0x00184085: add ecx, dword ptr [esi + 0x140e0a0f]; inc ecx; ret; 
0x00173a91: add ecx, dword ptr [esi + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00182601: add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4204], al; ret; 
0x00182670: add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4a04], al; ret; 
0x0018265f: add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x001826c5: add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4f04], al; ret; 
0x0018263d: add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7104], al; ret; 
0x00182903: add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7204], al; ret; 
0x0018264e: add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7304], al; ret; 
0x0018262c: add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7504], al; ret; 
0x00170049: add ecx, dword ptr [esi]; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0017069a: add ecx, dword ptr [esi]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x000f0d0f: add ecx, eax; cmp edx, ecx; mov edx, 0; cmovb eax, edx; pop esi; ret; 
0x0011f39a: add ecx, eax; mov dword ptr [edx + 0xc], ecx; pop esi; ret; 
0x0002da10: add ecx, eax; mov dword ptr [esp + 0xc], edx; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0002d659: add ecx, eax; mov dword ptr [esp + 4], edx; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0002d401: add ecx, eax; mov dword ptr [esp + 8], edx; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00047bf4: add ecx, eax; pop esi; mov eax, ecx; pop edi; pop ebp; ret; 
0x0002508c: add ecx, ebp; mov ebx, 0x89fffffe; rol dword ptr [edi + 0x6b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00046cf8: add ecx, ebp; xchg eax, edi; ret 0xffff; 
0x0019a4f4: add ecx, ebx; add cl, byte ptr [edx]; ret; 
0x0018a865: add ecx, ebx; pop es; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x000ee2cc: add ecx, ebx; ret 0xcad8; 
0x0017d653: add ecx, edi; add cl, byte ptr [edx]; push cs; adc al, 0x43; ret; 
0x0019a3c4: add ecx, edx; add dword ptr [edx], ecx; ret; 
0x0008d370: add ecx, edx; or dword ptr [eax], eax; add ecx, 0xcd2dc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00165e04: add ecx, esi; cld; jmp dword ptr [ebx]; 
0x0008f505: add edi, 0x10; call 0x129d77; add ecx, 0xcb333; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008de05: add edi, 0x10; call 0x129d77; add ecx, 0xcc8d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000fc560: add edi, 0x14; mov eax, 0xf0; mov ecx, 0x80; xor esi, esi; xchg ebx, edi; call dword ptr gs:[0x10]; 
0x001272a0: add edi, 0x1c; mov al, 0xf0; mov ecx, 0x81; xchg ebx, edi; call dword ptr gs:[0x10]; 
0x000283d5: add edi, 0x40; mov eax, dword ptr [ebx + 0x3914]; mov dword ptr [esp], edi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0011266a: add edi, 0xc; mov dword ptr [esp + 0x14], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x0017bfbc: add edi, dword ptr [0x140e0a01]; inc ebx; ret; 
0x001736d0: add edi, dword ptr [eax + 0x140e0a01]; inc ecx; ret; 
0x00191793: add edi, dword ptr [eax + 0xa]; ret; 
0x0010fd89: add edi, dword ptr [eax + 2]; sub edx, 1; mov byte ptr [ecx + 1], dl; ret; 
0x00173bb9: add edi, dword ptr [eax]; adc cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x00189131: add edi, dword ptr [eax]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0017dc4c: add edi, dword ptr [ebx + 0x140e0a03]; inc ebx; ret; 
0x0017173d: add edi, dword ptr [ebx + 0xa]; push cs; add al, 0xc6; ret; 
0x0017e24b: add edi, dword ptr [ebx + 0xa]; ret; 
0x001962dd: add edi, dword ptr [ebx + eax + 0xa]; push cs; adc al, 0x43; ret; 
0x0016fcde: add edi, dword ptr [ebx]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00184597: add edi, dword ptr [ecx + 0xa]; ret; 
0x00179d39: add edi, dword ptr [ecx + 0xe]; add al, 0xc6; ret; 
0x00173ba1: add edi, dword ptr [ecx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018df6a: add edi, dword ptr [ecx - 0x7a]; add ah, byte ptr [ecx + 0xe]; add al, 0xc6; ret; 
0x0018cd8b: add edi, dword ptr [ecx]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x000a99c7: add edi, dword ptr [ecx]; ret 0x820f; 
0x0018b9ad: add edi, dword ptr [edi + 0xa]; push cs; add al, 0xc6; ret; 
0x00179bad: add edi, dword ptr [edi + 0xe]; add al, 0xc6; ret; 
0x0016fec5: add edi, dword ptr [edx + 0x140e0a02]; inc ecx; ret; 
0x0019b7e4: add edi, dword ptr [edx + 0x140e0a03]; inc ecx; ret; 
0x00199bd9: add edi, dword ptr [edx + 0xe]; add al, 0xc6; ret; 
0x001775c5: add edi, dword ptr [edx + ecx + 0xe]; add al, 0xc6; ret; 
0x001989e1: add edi, dword ptr [edx]; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x000cc175: add edi, eax; mov dword ptr [esi + 0x28], edi; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0004f4d4: add edi, eax; test dword ptr [esi + edi*8 - 1], ebx; call dword ptr [eax]; 
0x001765f9: add edi, ebp; call dword ptr [eax]; 
0x00176921: add edi, ebp; call dword ptr [ebx]; 
0x00179606: add edi, ebp; jmp dword ptr [edx]; 
0x00134b29: add edi, ecx; add edx, edi; lea eax, dword ptr [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134bb9: add edi, ecx; add edx, edi; lea eax, dword ptr [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134c49: add edi, ecx; add edx, edi; lea eax, dword ptr [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134cd9: add edi, ecx; add edx, edi; lea eax, dword ptr [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134d69: add edi, ecx; add edx, edi; lea eax, dword ptr [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134df9: add edi, ecx; add edx, edi; lea eax, dword ptr [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134619: add edi, ecx; add edx, edi; lea eax, dword ptr [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001346a9: add edi, ecx; add edx, edi; lea eax, dword ptr [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134739: add edi, ecx; add edx, edi; lea eax, dword ptr [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001347c9: add edi, ecx; add edx, edi; lea eax, dword ptr [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134859: add edi, ecx; add edx, edi; lea eax, dword ptr [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001348e9: add edi, ecx; add edx, edi; lea eax, dword ptr [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134979: add edi, ecx; add edx, edi; lea eax, dword ptr [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134a09: add edi, ecx; add edx, edi; lea eax, dword ptr [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134a99: add edi, ecx; add edx, edi; lea eax, dword ptr [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008e9ab: add edi, ecx; add esi, ecx; call 0x129d77; add ecx, 0xcbdfc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d36b: add edi, ecx; add esi, ecx; call 0x129d77; add ecx, 0xcd2dc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0017012d: add edi, edi; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0019bfc8: add edi, edi; add dword ptr [eax], eax; mov dl, 2; add eax, 0xffff0000; add dword ptr [ebx], ecx; ret; 
0x001841b4: add edi, esi; or eax, 0x41140e0a; ret; 
0x0002fe6d: add edi, esi; test dword ptr [ebx - 0xc8a0007], 0x5f5ed089; ret; 
0x00094825: add edx, 0x10; sub edx, ecx; call 0x129d77; add ecx, 0xc60d5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00091525: add edx, 0x10; sub edx, ecx; call 0x129d77; add ecx, 0xc9355; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008e837: add edx, 0x10; sub edx, ecx; call 0x129d77; add ecx, 0xcbeef; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008d207: add edx, 0x10; sub edx, ecx; call 0x129d77; add ecx, 0xcd3bf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00118a98: add edx, 0x1c; mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; mov dword ptr [esp + 8], esi; call dword ptr [ecx + 0xc]; 
0x000272c4: add edx, 0x200; mov dword ptr gs:[eax], edx; pop ebx; ret; 
0x00072293: add edx, 1; mov dword ptr [esi + 4], edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x00072404: add edx, 1; mov dword ptr [esi + 4], edx; add esp, 0x18; pop esi; ret; 
0x0011c349: add edx, 4; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 8]; 
0x00126f2c: add edx, dword ptr [eax + 4]; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x001842c9: add edx, dword ptr [eax + edx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0016f608: add edx, dword ptr [eax]; add ecx, dword ptr [edx]; ret; 
0x001962f5: add edx, dword ptr [ebp + 3]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00190e08: add edx, dword ptr [ebp + eax + 0xa]; ret; 
0x0005788b: add edx, dword ptr [ebp - 0x106c]; mov dword ptr [ebp - 0x10c8], 1; mov dword ptr [ebp - 0x1080], ecx; jmp edx; 
0x0004503a: add edx, dword ptr [ebp - 0x49c]; mov dword ptr [ebp - 0x510], 1; mov dword ptr [ebp - 0x4b8], edi; jmp edx; 
0x001930e2: add edx, dword ptr [ebp - 0x79]; add ch, byte ptr [edx + 0xa]; push cs; add al, 0xc7; ret; 
0x0017981e: add edx, dword ptr [ebp - 0x7a]; add ah, byte ptr [edx + 0xa]; push cs; add al, 0xc6; ret; 
0x00190d1e: add edx, dword ptr [ebp - 0x7a]; add bh, byte ptr [edx + 0xa]; push cs; add al, 0xc6; ret; 
0x00191b62: add edx, dword ptr [ebp - 0x7a]; add ch, byte ptr [edi + 0xe]; add al, 0xc6; ret; 
0x00198d82: add edx, dword ptr [ebp - 0x7a]; add dl, byte ptr [edx + 0xa]; push cs; add al, 0xc6; ret; 
0x0018cc26: add edx, dword ptr [ebx - 0x79]; add ah, byte ptr [ebp + 0xa]; push cs; add al, 0xc7; ret; 
0x0017c5ee: add edx, dword ptr [ebx - 0x7a]; add ah, byte ptr [eax + 0xe]; add al, 0xc6; ret; 
0x0017427a: add edx, dword ptr [ebx - 0x7a]; add ah, byte ptr [ebp + 0xa]; push cs; add al, 0xc6; ret; 
0x00183582: add edx, dword ptr [ebx - 0x7a]; add ah, byte ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x00171f9e: add edx, dword ptr [ebx - 0x7a]; add ah, byte ptr [edi + 0xa]; push cs; add al, 0xc6; ret; 
0x001715ba: add edx, dword ptr [ebx - 0x7a]; add ah, byte ptr [esi + 0xa]; push cs; add al, 0xc6; ret; 
0x001907da: add edx, dword ptr [ebx - 0x7a]; add al, byte ptr [edx]; dec esi; push cs; add al, 0xc6; ret; 
0x00170992: add edx, dword ptr [ebx - 0x7a]; add al, byte ptr [edx]; inc edx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0017c862: add edx, dword ptr [ebx - 0x7a]; add al, byte ptr [edx]; pop ebx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0019b19e: add edx, dword ptr [ebx - 0x7a]; add al, byte ptr [edx]; push ebp; push cs; add al, 0xc6; ret; 
0x001741d2: add edx, dword ptr [ebx - 0x7a]; add al, byte ptr [edx]; push edx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00175212: add edx, dword ptr [ebx - 0x7a]; add bh, byte ptr [ebx + 0xe]; add al, 0xc6; ret; 
0x00179c6e: add edx, dword ptr [ebx - 0x7a]; add bh, byte ptr [edx + 0xa]; push cs; add al, 0xc6; ret; 
0x0019816a: add edx, dword ptr [ebx - 0x7a]; add bl, byte ptr [ebp + 0xa]; push cs; add al, 0xc6; ret; 
0x00185cb2: add edx, dword ptr [ebx - 0x7a]; add bl, byte ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x00174222: add edx, dword ptr [ebx - 0x7a]; add bl, byte ptr [edx + ecx + 0xe]; add al, 0xc6; ret; 
0x00171c4a: add edx, dword ptr [ebx - 0x7a]; add bl, byte ptr [esi + 0xa]; push cs; add al, 0xc6; ret; 
0x00198c42: add edx, dword ptr [ebx - 0x7a]; add ch, byte ptr [eax + 0xa]; push cs; add al, 0xc6; ret; 
0x00171fe6: add edx, dword ptr [ebx - 0x7a]; add ch, byte ptr [ebx + 0xa]; push cs; add al, 0xc6; ret; 
0x00171fc2: add edx, dword ptr [ebx - 0x7a]; add ch, byte ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x0017ab86: add edx, dword ptr [ebx - 0x7a]; add ch, byte ptr [edi + 0xe]; add al, 0xc6; ret; 
0x001734ba: add edx, dword ptr [ebx - 0x7a]; add dh, byte ptr [eax + 0xa]; push cs; add al, 0xc6; ret; 
0x00178ebe: add edx, dword ptr [ebx - 0x7a]; add dh, byte ptr [eax + 0xe]; add al, 0xc6; ret; 
0x0018df8a: add edx, dword ptr [ebx - 0x7a]; add dh, byte ptr [ecx + 0xe]; add al, 0xc6; ret; 
0x00186ad2: add edx, dword ptr [ebx - 0x7a]; add dh, byte ptr [edi + 0xa]; push cs; add al, 0xc6; ret; 
0x00171ae6: add edx, dword ptr [ebx - 0x7a]; add dh, byte ptr [edi + 0xe]; add al, 0xc6; ret; 
0x0019a9f6: add edx, dword ptr [ebx - 0x7a]; add dh, byte ptr [edx + 0xa]; push cs; add al, 0xc6; ret; 
0x0017dea6: add edx, dword ptr [ebx - 0x7a]; add dh, byte ptr [edx + 0xe]; add al, 0xc6; ret; 
0x00173472: add edx, dword ptr [ebx - 0x7a]; add dh, byte ptr [esi + 0xa]; push cs; add al, 0xc6; ret; 
0x00183fe7: add edx, dword ptr [ecx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00186c6c: add edx, dword ptr [ecx + eax + 0xa]; push cs; adc al, 0x43; ret; 
0x00195af6: add edx, dword ptr [ecx - 0x7a]; add al, byte ptr [edx]; dec esi; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0018dcde: add edx, dword ptr [ecx - 0x7a]; add ch, byte ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x001924ce: add edx, dword ptr [ecx - 0x7a]; add ch, byte ptr [edi + 0xa]; push cs; add al, 0xc6; ret; 
0x00188b1a: add edx, dword ptr [ecx - 0x7a]; add ch, byte ptr [edx + 0xe]; add al, 0xc6; ret; 
0x00195b42: add edx, dword ptr [ecx - 0x7a]; add dh, byte ptr [eax + 0xe]; add al, 0xc6; ret; 
0x00188c06: add edx, dword ptr [ecx - 0x7a]; add dh, byte ptr [edx + 0xe]; add al, 0xc6; ret; 
0x0016fda3: add edx, dword ptr [edi + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018793a: add edx, dword ptr [edi - 0x79]; add ch, byte ptr [edx + ecx + 0xe]; add al, 0xc7; ret; 
0x0018deb2: add edx, dword ptr [edi - 0x7a]; add ch, byte ptr [ecx + 0xe]; add al, 0xc6; ret; 
0x0017c55c: add edx, dword ptr [edx + 1]; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x0018bc91: add edx, dword ptr [edx + eax + 0x43140e0a]; ret; 
0x00187fa2: add edx, dword ptr [edx]; push es; ret; 
0x00190ce7: add edx, dword ptr [esi + 0xa]; ret; 
0x00170526: add edx, dword ptr [esi + eax*4 + 2]; add al, byte ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x00196a2a: add edx, dword ptr [esi + eax*4 + 2]; add dl, byte ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x0017c89a: add edx, dword ptr [esi + eax*4 + 2]; dec ebx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00182070: add edx, dword ptr [esi + ecx + 8]; ret; 
0x0018aa36: add edx, dword ptr [esi - 0x79]; add dh, byte ptr [edx + 0xa]; push cs; add al, 0xc7; ret; 
0x000a7b38: add edx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; imul eax, edx; ret; 
0x000e88b0: add edx, dword ptr [esp + 0x2c]; mov eax, edx; add esp, 0x3c; ret; 
0x0017242f: add edx, eax; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x00196451: add edx, ebp; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x00179dfd: add edx, ebx; add cl, byte ptr [edx]; ret; 
0x0013c793: add edx, ecx; add eax, ecx; call 0x129d73; add ebx, 0x2af44; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013b567: add edx, ecx; add eax, ecx; call 0x129d73; add ebx, 0x2bfb0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013b460: add edx, ecx; add eax, ecx; call 0x129d73; add ebx, 0x2bff7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013b264: add edx, ecx; add eax, ecx; call 0x129d73; add ebx, 0x2c1f3; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013a143: add edx, ecx; add eax, ecx; call 0x129d73; add ebx, 0x2d154; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00139136: add edx, ecx; add eax, ecx; call 0x129d73; add ebx, 0x2dfa1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00138156: add edx, ecx; add eax, ecx; call 0x129d73; add ebx, 0x2edc1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00136e97: add edx, ecx; add eax, ecx; call 0x129d73; add ebx, 0x2fec0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00136d90: add edx, ecx; add eax, ecx; call 0x129d73; add ebx, 0x2ff07; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00136b94: add edx, ecx; add eax, ecx; call 0x129d73; add ebx, 0x30103; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00135a17: add edx, ecx; add eax, ecx; call 0x129d73; add ebx, 0x310c0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00135910: add edx, ecx; add eax, ecx; call 0x129d73; add ebx, 0x31107; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00135706: add edx, ecx; add eax, ecx; call 0x129d73; add ebx, 0x31311; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134587: add edx, ecx; add eax, ecx; call 0x129d73; add ebx, 0x322d0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134480: add edx, ecx; add eax, ecx; call 0x129d73; add ebx, 0x32317; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134276: add edx, ecx; add eax, ecx; call 0x129d73; add ebx, 0x32521; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00132897: add edx, ecx; add eax, ecx; call 0x129d73; add ebx, 0x35104; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001327d2: add edx, ecx; add eax, ecx; call 0x129d73; add ebx, 0x351c9; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001308a7: add edx, ecx; add eax, ecx; call 0x129d73; add ebx, 0x36ff0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00130798: add edx, ecx; add eax, ecx; call 0x129d73; add ebx, 0x370ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0007dd10: add edx, ecx; add esi, ecx; jmp ebx; 
0x00165e34: add edx, ecx; cld; push dword ptr [ebx]; sar esp, 1; jmp dword ptr [ebx - 0x2f]; 
0x00132b72: add edx, ecx; jmp ebx; 
0x0011424e: add edx, ecx; mov dword ptr [esp + 4], edx; mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x00166324: add edx, edi; cld; push dword ptr [ebx]; xlatb; cld; jmp dword ptr [ebx - 0x29]; 
0x00134b2b: add edx, edi; lea eax, dword ptr [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134bbb: add edx, edi; lea eax, dword ptr [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134c4b: add edx, edi; lea eax, dword ptr [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134cdb: add edx, edi; lea eax, dword ptr [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134d6b: add edx, edi; lea eax, dword ptr [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134dfb: add edx, edi; lea eax, dword ptr [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013461b: add edx, edi; lea eax, dword ptr [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001346ab: add edx, edi; lea eax, dword ptr [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013473b: add edx, edi; lea eax, dword ptr [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001347cb: add edx, edi; lea eax, dword ptr [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013485b: add edx, edi; lea eax, dword ptr [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001348eb: add edx, edi; lea eax, dword ptr [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013497b: add edx, edi; lea eax, dword ptr [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134a0b: add edx, edi; lea eax, dword ptr [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134a9b: add edx, edi; lea eax, dword ptr [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0016ff95: add edx, edx; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0017730d: add edx, edx; out dx, al; jmp dword ptr [edx]; 
0x00198880: add edx, esi; add cl, byte ptr [edx]; ret; 
0x00123df5: add edx, esi; pop es; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00189959: add edx, esp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00094867: add esi, 0x10; add eax, 0x10; call 0x129d77; add ecx, 0xc6092; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00091567: add esi, 0x10; add eax, 0x10; call 0x129d77; add ecx, 0xc9312; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009488c: add esi, 0x20; add eax, 0x20; call 0x129d77; add ecx, 0xc606d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009158c: add esi, 0x20; add eax, 0x20; call 0x129d77; add ecx, 0xc92ed; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0007e330: add esi, 0x21; mov eax, esi; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x0009473e: add esi, 0x30; add eax, 0x30; call 0x129d77; add ecx, 0xc61bb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000914a5: add esi, 0x30; add eax, 0x30; call 0x129d77; add ecx, 0xc93d4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0007e34f: add esi, 1; mov eax, esi; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x00175a20: add esi, dword ptr [eax + 0x140e0a02]; inc ecx; ret; 
0x001875a8: add esi, dword ptr [eax + 0xa]; push cs; add al, 0xc7; ret; 
0x0007a745: add esi, dword ptr [eax + edx - 0x75]; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00095d35: add esi, dword ptr [eax + edx - 0x7d]; ret 0x3904; 
0x0018de92: add esi, dword ptr [eax - 0x7a]; add bl, byte ptr [edx + 0xe]; add al, 0xc6; ret; 
0x001908ed: add esi, dword ptr [ebx + 0xe]; add al, 0xc6; ret; 
0x00101743: add esi, dword ptr [ebx + ecx*8 - 0x7d]; out dx, al; add al, 0x83; ret 0x8304; 
0x0019a100: add esi, dword ptr [ebx]; add dword ptr [edx], ecx; ret; 
0x0018b6ac: add esi, dword ptr [ecx + 0x140e0a01]; inc ebx; ret; 
0x0017ae59: add esi, dword ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x0018a8d4: add esi, dword ptr [ecx + 0xa]; push cs; add al, 0xc7; ret; 
0x00177eed: add esi, dword ptr [ecx + 0xe]; add al, 0xc6; ret; 
0x00196034: add esi, dword ptr [ecx + eax + 0xa]; ret; 
0x0019ba9d: add esi, dword ptr [ecx + eax]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0010b3ec: add esi, dword ptr [ecx + edx + 0x31]; shl byte ptr [esi - 0x7d], cl; std; adc byte ptr [edi], cl; xchg eax, esp; ret 0xd589; 
0x001868a0: add esi, dword ptr [ecx]; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x00196218: add esi, dword ptr [ecx]; add dword ptr [edx], ecx; ret; 
0x00174f1c: add esi, dword ptr [ecx]; add ecx, dword ptr [edx]; ret; 
0x0011036b: add esi, dword ptr [ecx]; rol byte ptr [ebx + 0x5f5e40c4], 0x5d; ret; 
0x00001a25: add esi, dword ptr [ecx]; sbb al, 0x30; mov eax, dword ptr [0x3a6d4813]; ret; 
0x0018c248: add esi, dword ptr [edi + 0xa]; push cs; add al, 0xc6; ret; 
0x001711bf: add esi, dword ptr [edi + 0xa]; ret; 
0x0007e535: add esi, dword ptr [edi + eax - 0x3a]; add al, 1; add byte ptr [ecx + 0x75], cl; stc; pop esi; ret; 
0x00177e09: add esi, dword ptr [edx + 0xa]; push cs; add al, 0xc6; ret; 
0x00183375: add esi, dword ptr [edx + eax + 0xa]; push cs; adc al, 0x43; ret; 
0x0018737c: add esi, dword ptr [edx]; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x001897ed: add esi, dword ptr [edx]; add dword ptr [edx], ecx; push cs; adc al, 0x46; ret; 
0x0019a4c9: add esi, dword ptr [esi + 0xa]; push cs; add al, 0xc6; ret; 
0x00187d88: add esi, dword ptr [esi]; add al, 0xa; ret; 
0x0018ff3c: add esi, dword ptr [esi]; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x00031612: add esi, eax; mov dword ptr [esp], esi; call edi; 
0x0017e25a: add esi, ebp; add cl, byte ptr [edx]; ret; 
0x0017c2db: add esi, ebx; add al, 0xa; push cs; adc al, 0x43; ret; 
0x0017e1e4: add esi, ebx; add al, 0xa; ret; 
0x0016a6b1: add esi, ebx; call dword ptr [eax - 0x44]; 
0x0006812c: add esi, ebx; ret; 
0x0007e2cd: add esi, ebx; stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x00177e74: add esi, ecx; add dword ptr [edx], ecx; ret; 
0x000947e0: add esi, ecx; bsf edx, edx; call 0x129d77; add ecx, 0xc611a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000914e0: add esi, ecx; bsf edx, edx; call 0x129d77; add ecx, 0xc939a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008e7f2: add esi, ecx; bsf edx, edx; call 0x129d77; add ecx, 0xcbf34; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008d1c2: add esi, ecx; bsf edx, edx; call 0x129d77; add ecx, 0xcd404; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009498a: add esi, ecx; call 0x129d77; add ecx, 0xc5ff3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009496a: add esi, ecx; call 0x129d77; add ecx, 0xc6013; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009494d: add esi, ecx; call 0x129d77; add ecx, 0xc6030; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e9ea: add esi, ecx; call 0x129d77; add ecx, 0xcbdbf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e9ca: add esi, ecx; call 0x129d77; add ecx, 0xcbddf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e9ad: add esi, ecx; call 0x129d77; add ecx, 0xcbdfc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d3aa: add esi, ecx; call 0x129d77; add ecx, 0xcd29f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d38a: add esi, ecx; call 0x129d77; add ecx, 0xcd2bf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d36d: add esi, ecx; call 0x129d77; add ecx, 0xcd2dc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0007dd12: add esi, ecx; jmp ebx; 
0x0017023d: add esi, edi; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x001981f9: add esi, edi; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0010b6fd: add esi, edx; mov dword ptr [edx + ecx], esi; pop esi; pop edi; pop ebp; ret 4; 
0x00191fb6: add esi, esi; jmp dword ptr [edx]; 
0x0002c67d: add esi, esi; ret 0x6601; 
0x0018733b: add esi, esp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0007d947: add esp, 0x100; pop ebx; ret; 
0x0007da31: add esp, 0x100; ret; 
0x0007ca65: add esp, 0x100; sub eax, edx; ret; 
0x000dfeda: add esp, 0x101c; ret; 
0x00054e03: add esp, 0x102c; ret; 
0x00054b05: add esp, 0x103c; ret; 
0x0002dadf: add esp, 0x10; and eax, 0x8000; ret; 
0x001149c0: add esp, 0x10; mov eax, 1; pop esi; pop edi; pop ebp; ret; 
0x0007fb5d: add esp, 0x10; mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x000f8eb7: add esp, 0x10; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0011ed09: add esp, 0x10; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x000e9e12: add esp, 0x10; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00027a06: add esp, 0x10; mov eax, esi; pop esi; pop edi; pop ebp; ret 4; 
0x000ceca2: add esp, 0x10; mov eax, esi; pop esi; pop edi; pop ebp; ret 8; 
0x00097dd2: add esp, 0x10; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x0007cb80: add esp, 0x10; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00016fe5: add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0002db5f: add esp, 0x10; pop ebx; ret; 
0x00114a75: add esp, 0x10; pop esi; movzx eax, al; pop edi; pop ebp; ret; 
0x0007c364: add esp, 0x10; pop esi; pop edi; pop ebp; ret; 
0x000311c9: add esp, 0x10; ret; 
0x00104ffa: add esp, 0x10; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000a5738: add esp, 0x10; xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x000aae50: add esp, 0x10c; ret; 
0x0003c452: add esp, 0x10fc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002e448: add esp, 0x118; pop ebx; ret; 
0x000e113d: add esp, 0x11c; ret; 
0x00069304: add esp, 0x12c; ret; 
0x0002e6e3: add esp, 0x130; pop esi; pop edi; pop ebp; ret; 
0x0002e042: add esp, 0x130; ret; 
0x0002ddd9: add esp, 0x13c; ret; 
0x00031760: add esp, 0x140; pop esi; pop edi; pop ebp; ret; 
0x0003f770: add esp, 0x14; add eax, 1; pop ebx; pop esi; ret; 
0x00124d31: add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x000ed28b: add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x0010fd1b: add esp, 0x14; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x000980e1: add esp, 0x14; mov eax, esi; pop esi; pop edi; ret; 
0x0002dd68: add esp, 0x14; pop ebx; pop ebp; ret; 
0x0004bb8e: add esp, 0x14; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000251d7: add esp, 0x14; pop ebx; pop esi; ret; 
0x000ca436: add esp, 0x14; pop esi; pop edi; pop ebp; ret; 
0x000cb4f3: add esp, 0x14; pop esi; pop edi; ret; 
0x0002c824: add esp, 0x14; ret; 
0x000d7710: add esp, 0x14; xor eax, eax; pop ebx; pop esi; ret; 
0x0003fd32: add esp, 0x14c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002ec67: add esp, 0x14c; ret; 
0x000d2ee1: add esp, 0x15c; pop ebx; pop esi; pop edi; pop ebp; ret 0x18; 
0x000fe759: add esp, 0x15c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003eb88: add esp, 0x16c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000b9e16: add esp, 0x16c; ret; 
0x00069105: add esp, 0x180; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0006b358: add esp, 0x184; pop ebx; pop esi; ret; 
0x000fc3c5: add esp, 0x18; and eax, 0xc; pop ebx; ret; 
0x00111223: add esp, 0x18; lea eax, dword ptr [ebx + 0x32cc]; pop ebx; ret; 
0x000e9a7c: add esp, 0x18; mov al, 1; pop ebx; ret; 
0x000e8c4f: add esp, 0x18; mov eax, 1; pop ebx; ret; 
0x001142f7: add esp, 0x18; mov eax, ecx; pop esi; ret; 
0x0004bc31: add esp, 0x18; mov eax, edx; pop ebx; ret; 
0x0006b90f: add esp, 0x18; mov eax, edx; pop esi; ret; 
0x00080470: add esp, 0x18; mov eax, esi; pop esi; ret; 
0x0011f9e1: add esp, 0x18; movzx eax, al; pop ebx; ret; 
0x0006ab1d: add esp, 0x18; not eax; pop ebx; ret; 
0x0004ba97: add esp, 0x18; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0001961d: add esp, 0x18; pop ebx; ret; 
0x0007f0ec: add esp, 0x18; pop esi; pop edi; pop ebp; ret; 
0x0006beed: add esp, 0x18; pop esi; ret; 
0x000830c0: add esp, 0x18; ret; 
0x00129ac4: add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x0007fd1a: add esp, 0x18; xor eax, eax; pop esi; ret; 
0x000e7e09: add esp, 0x1ac; ret; 
0x000e7d1a: add esp, 0x1bc; ret; 
0x0011441b: add esp, 0x1c; add eax, edx; ret; 
0x00124773: add esp, 0x1c; mov eax, edx; ret; 
0x00114e7c: add esp, 0x1c; movzx eax, al; ret; 
0x000ef0a5: add esp, 0x1c; movzx eax, al; sub eax, 1; ret; 
0x0011fbb2: add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x000190ca: add esp, 0x1c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000ca36c: add esp, 0x1c; ret 0xc; 
0x00019939: add esp, 0x1c; ret; 
0x00123d47: add esp, 0x1c; sar eax, 0x1f; ret; 
0x0009be03: add esp, 0x1ec; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000394b2: add esp, 0x1fc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000fdbe4: add esp, 0x206c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000fffd6: add esp, 0x20; mov eax, 0xffffffff; pop esi; pop edi; pop ebp; ret; 
0x0011e508: add esp, 0x20; mov eax, 1; pop esi; pop edi; pop ebp; ret; 
0x00047af6: add esp, 0x20; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000d62e0: add esp, 0x20; mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x0004216f: add esp, 0x20; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000b0989: add esp, 0x20; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x000410a9: add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00031544: add esp, 0x20; pop esi; pop edi; pop ebp; ret; 
0x000d7812: add esp, 0x20; pop esi; xor eax, eax; pop edi; pop ebp; ret; 
0x0007e9f2: add esp, 0x20; ret; 
0x0004108f: add esp, 0x20; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000a561a: add esp, 0x20; xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x000b5699: add esp, 0x24; mov eax, ecx; pop ebx; pop esi; ret; 
0x00114798: add esp, 0x24; mov eax, edx; pop esi; pop edi; ret; 
0x000a57fb: add esp, 0x24; mov eax, esi; pop ebx; pop esi; ret; 
0x0011c1b3: add esp, 0x24; mov eax, esi; pop esi; pop edi; ret; 
0x000c51a6: add esp, 0x24; pop ebx; pop esi; ret; 
0x00080611: add esp, 0x24; pop esi; pop edi; pop ebp; ret; 
0x000aadbf: add esp, 0x24; pop esi; pop edi; ret; 
0x00019f3f: add esp, 0x24; ret; 
0x0002f3c2: add esp, 0x25c; ret; 
0x0011e61e: add esp, 0x28; mov eax, 1; pop esi; ret; 
0x00109fbf: add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x0011e931: add esp, 0x28; mov eax, edx; pop esi; ret; 
0x000d84b2: add esp, 0x28; movzx eax, al; pop ebx; ret; 
0x00055450: add esp, 0x28; pop ebx; mov eax, edx; ret; 
0x000969e0: add esp, 0x28; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0001aefc: add esp, 0x28; pop ebx; ret; 
0x000c5dbb: add esp, 0x28; pop esi; pop edi; pop ebp; ret; 
0x000ce67c: add esp, 0x28; pop esi; ret; 
0x000982d4: add esp, 0x28; ret; 
0x0006b2a1: add esp, 0x29c; ret; 
0x000a7b40: add esp, 0x2c; imul eax, edx; ret; 
0x000fc903: add esp, 0x2c; mov eax, edx; ret; 
0x0011f6fc: add esp, 0x2c; mov edx, eax; mov eax, edx; ret; 
0x000ef0e5: add esp, 0x2c; movzx eax, al; sub eax, 1; ret; 
0x0001ae57: add esp, 0x2c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001007b4: add esp, 0x2c; ret 4; 
0x000d9c66: add esp, 0x2c; ret 8; 
0x00019871: add esp, 0x2c; ret; 
0x000eeb9a: add esp, 0x30; pop ebx; pop edi; ret; 
0x000b555e: add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000ca517: add esp, 0x30; pop esi; pop edi; pop ebp; ret 0xc; 
0x000cef8f: add esp, 0x30; pop esi; pop edi; pop ebp; ret 8; 
0x000419e6: add esp, 0x30; pop esi; pop edi; pop ebp; ret; 
0x000cf0eb: add esp, 0x30; xor eax, eax; pop esi; pop edi; pop ebp; ret 8; 
0x000ce630: add esp, 0x30; xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x000ed7c8: add esp, 0x34; mov eax, edx; pop ebx; pop esi; ret; 
0x001186b2: add esp, 0x34; mov eax, edx; pop esi; pop edi; ret; 
0x0002e76a: add esp, 0x34; pop ebx; pop esi; ret; 
0x000ef1d8: add esp, 0x34; ret; 
0x0012e8e0: add esp, 0x38; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000b55c8: add esp, 0x38; pop ebx; ret; 
0x0001ace6: add esp, 0x3c; pop ebx; pop esi; pop edi; pop ebp; ret 0xc; 
0x000d06c2: add esp, 0x3c; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00024e06: add esp, 0x3c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003315d: add esp, 0x3c; ret 4; 
0x0001bb5d: add esp, 0x3c; ret 8; 
0x0001ba3b: add esp, 0x3c; ret; 
0x000ca1d6: add esp, 0x40; mov eax, 0xffffffff; pop esi; pop edi; pop ebp; ret 8; 
0x000421e7: add esp, 0x40; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00127b72: add esp, 0x40; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x0011baa3: add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x000ca2c6: add esp, 0x40; pop esi; pop edi; pop ebp; ret 8; 
0x00097b78: add esp, 0x40; pop esi; pop edi; pop ebp; ret; 
0x000e6261: add esp, 0x40; ret; 
0x000ca2e7: add esp, 0x40; xor eax, eax; pop esi; pop edi; pop ebp; ret 8; 
0x000ec6b4: add esp, 0x418; pop ebx; ret; 
0x00118a5e: add esp, 0x434; mov eax, edx; pop esi; pop edi; ret; 
0x000547e9: add esp, 0x43c; ret; 
0x00041df3: add esp, 0x444; mov eax, esi; pop ebx; pop esi; ret; 
0x000b5dc9: add esp, 0x44; mov eax, ecx; pop ebx; pop esi; ret; 
0x00019ebb: add esp, 0x44; neg edx; ret; 
0x00080ac8: add esp, 0x44; pop esi; pop edi; pop ebp; ret; 
0x00019e46: add esp, 0x44; ret; 
0x0007f451: add esp, 0x450; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0007f498: add esp, 0x450; pop esi; pop edi; pop ebp; ret; 
0x0007f353: add esp, 0x450; xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x00096d95: add esp, 0x45c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001195a3: add esp, 0x45c; ret; 
0x000a7ba3: add esp, 0x48; pop ebx; ret; 
0x00115666: add esp, 0x48c; ret; 
0x000da6a7: add esp, 0x4c; pop ebx; pop esi; pop edi; pop ebp; ret 0x18; 
0x000cf712: add esp, 0x4c; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00030410: add esp, 0x4c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000d7dd5: add esp, 0x4c; ret 0x1c; 
0x0011b5ca: add esp, 0x4c; ret 8; 
0x0001a33a: add esp, 0x4c; ret; 
0x0007f65d: add esp, 0x50; pop esi; pop edi; pop ebp; ret; 
0x000d9434: add esp, 0x524; mov eax, esi; pop ebx; pop esi; ret; 
0x0011f91b: add esp, 0x54; pop ebx; pop esi; mov eax, edx; ret; 
0x000d9541: add esp, 0x54c; ret; 
0x0011cd56: add esp, 0x55c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000e0918: add esp, 0x58; movzx eax, al; pop ebx; ret; 
0x000cee0b: add esp, 0x5c; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0001cf07: add esp, 0x5c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00054a17: add esp, 0x5c; ret; 
0x001184a7: add esp, 0x60; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0012869f: add esp, 0x60; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x0007a7e6: add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x00118597: add esp, 0x60; pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x000cc95a: add esp, 0x60; pop esi; pop edi; pop ebp; ret; 
0x0007a8cb: add esp, 0x60; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000e60b9: add esp, 0x64; ret; 
0x0001d436: add esp, 0x6c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011c32b: add esp, 0x6c; ret 0xc; 
0x0002351a: add esp, 0x6c; ret 8; 
0x0006634b: add esp, 0x6c; ret; 
0x000fee98: add esp, 0x74; pop ebx; pop esi; ret; 
0x0012471c: add esp, 0x78; pop ebx; ret; 
0x0002d8ef: add esp, 0x7c; fsubp st(1); ret; 
0x000d0d55: add esp, 0x7c; pop ebx; pop esi; pop edi; pop ebp; ret 0x10; 
0x0001feed: add esp, 0x7c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002d868: add esp, 0x7c; ret; 
0x0005ba0c: add esp, 0x81bc; ret; 
0x0011b77d: add esp, 0x84; mov eax, edx; pop ebx; pop edi; ret; 
0x000c1f65: add esp, 0x89c; pop ebx; pop esi; pop edi; pop ebp; ret 0x10; 
0x000196e4: add esp, 0x8c; ret; 
0x000749f5: add esp, 0x8ec; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011cf7a: add esp, 0x98; pop edi; ret; 
0x0012e2a6: add esp, 0x9c; pop ebx; pop esi; pop edi; pop ebp; ret 0x10; 
0x0012e4b1: add esp, 0x9c; pop ebx; pop esi; pop edi; pop ebp; ret 0x18; 
0x00055349: add esp, 0x9c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000e3cf0: add esp, 0x9c; ret 4; 
0x00023326: add esp, 0x9c; ret; 
0x000ab63c: add esp, 0xac; pop ebx; pop esi; pop edi; pop ebp; ret 8; 
0x000aee0c: add esp, 0xac; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002e853: add esp, 0xac; ret; 
0x000d63fa: add esp, 0xbc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000e1734: add esp, 0xbc; ret 8; 
0x00055c42: add esp, 0xc4; pop ebx; pop esi; ret; 
0x000f3b62: add esp, 0xc; and eax, 0x1000; ret; 
0x000f3ac2: add esp, 0xc; and eax, 0x100; ret; 
0x000f3a22: add esp, 0xc; and eax, 0x2000; ret; 
0x000f37a2: add esp, 0xc; and eax, 0x200; ret; 
0x000f38e2: add esp, 0xc; and eax, 0x4000; ret; 
0x000f3522: add esp, 0xc; and eax, 0x400; ret; 
0x0002d4ae: add esp, 0xc; and eax, 0x80000000; ret; 
0x000f3842: add esp, 0xc; and eax, 0x8000; ret; 
0x000fd418: add esp, 0xc; and eax, 0xffff; ret; 
0x000f35c2: add esp, 0xc; and eax, 1; ret; 
0x000f3662: add esp, 0xc; and eax, 2; ret; 
0x000f3982: add esp, 0xc; and eax, 4; ret; 
0x000f3482: add esp, 0xc; and eax, 8; ret; 
0x0002d341: add esp, 0xc; fsubp st(1); pop esi; pop edi; ret; 
0x000ed9f2: add esp, 0xc; movzx eax, al; ret; 
0x000f2017: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a7e62: add esp, 0xc; pop esi; pop edi; pop ebp; ret; 
0x0002d2ea: add esp, 0xc; pop esi; pop edi; ret; 
0x0007a702: add esp, 0xc; ret 4; 
0x000268d2: add esp, 0xc; ret; 
0x00103e18: add esp, 0xcc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000672da: add esp, 0xcc; ret; 
0x000dff8d: add esp, 0xd4; pop ebx; pop esi; ret; 
0x0006d7d1: add esp, 0xdc; ret; 
0x00118009: add esp, 0xec; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00068f5c: add esp, 0xec; ret; 
0x000a15c0: add esp, 0xfc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000de48c: add esp, 0xfc; ret; 
0x00030deb: add esp, 4; jmp eax; 
0x00095a5e: add esp, 4; lea eax, dword ptr [edi - 1]; pop esi; pop edi; pop ebp; ret; 
0x00095a68: add esp, 4; lea eax, dword ptr [edi - 2]; pop esi; pop edi; pop ebp; ret; 
0x000836ed: add esp, 4; mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x00083586: add esp, 4; mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x001016cc: add esp, 4; mov eax, edi; pop esi; pop edi; ret; 
0x00145449: add esp, 4; pop ebp; pop ebx; ret; 
0x0001a001: add esp, 4; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0007afa0: add esp, 4; pop ebx; pop esi; ret; 
0x000c5ea1: add esp, 4; pop ebx; ret; 
0x000959f0: add esp, 4; pop esi; pop edi; pop ebp; ret; 
0x000fa665: add esp, 4; pop esi; pop edi; ret; 
0x000310fe: add esp, 4; ret; 
0x00083e93: add esp, 4; sub eax, esi; pop esi; pop edi; pop ebp; ret; 
0x000fc236: add esp, 8; mov eax, edx; pop ebx; ret; 
0x000bd62d: add esp, 8; movzx eax, al; ret; 
0x0011c509: add esp, 8; pop ebx; mov eax, edx; ret; 
0x000fd0ea: add esp, 8; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0001a404: add esp, 8; pop ebx; ret; 
0x00041bfc: add esp, 8; pop esi; pop edi; pop ebp; ret; 
0x001047f3: add esp, 8; pop esi; ret; 
0x0003306a: add esp, 8; ret 4; 
0x00025f7c: add esp, 8; ret; 
0x00095e78: add esp, 8; xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x00178b6d: add esp, dword ptr [eax + 0xa]; push cs; add al, 0xc6; ret; 
0x0019a812: add esp, dword ptr [eax - 0x7a]; add bl, byte ptr [ebx + 0xe]; add al, 0xc6; ret; 
0x0017acfc: add esp, dword ptr [eax]; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0019192b: add esp, dword ptr [ebp + 0x140e0a01]; inc ecx; ret; 
0x0018d85c: add esp, dword ptr [ebx]; add dword ptr [edx], ecx; ret; 
0x001940c4: add esp, dword ptr [ecx + 0x140e0a01]; inc ecx; ret; 
0x00173981: add esp, dword ptr [ecx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00173b48: add esp, dword ptr [ecx + eax + 0x41140e0a]; ret; 
0x0016ff7d: add esp, dword ptr [ecx]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0017e0e3: add esp, dword ptr [ecx]; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x0016f988: add esp, dword ptr [edi]; add dword ptr [edx], ecx; ret; 
0x00186cac: add esp, dword ptr [edx]; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x00185fe4: add esp, dword ptr [edx]; add dword ptr [edx], ecx; ret; 
0x00177359: add esp, dword ptr [esi + 1]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0018419c: add esp, dword ptr [esi + 4]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001822c5: add esp, dword ptr [esi + ecx + 8]; ret; 
0x0018a4e7: add esp, dword ptr [esi]; add cl, byte ptr [edx]; push cs; adc al, 0x43; ret; 
0x00171190: add esp, eax; add dword ptr [edx], ecx; ret; 
0x001731b5: add esp, ebp; jmp dword ptr [ecx]; 
0x0018ef84: add esp, ebx; add ecx, dword ptr [edx]; ret; 
0x001859f0: add esp, edx; add al, 0xa; ret; 
0x00175846: add esp, esp; add dword ptr [edx], ecx; ret; 
0x00170061: add esp, esp; add ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0016a305: add word ptr [eax], ax; mov ah, 0x89; int1; call dword ptr [eax + 0x66]; 
0x000f1c09: add word ptr [ebx], 0x8100; ret; 
0x000f1d82: add word ptr [edx], 1; add esp, 8; pop ebx; ret; 
0x0017735a: add word ptr [edx], cx; push cs; adc al, 0x43; ret; 
0x000c9d88: and ah, 0xfe; neg eax; pop ebp; ret; 
0x0016e859: and ah, bh; ljmp ptr [eax + 0x44000341]; and bh, ah; call esp; 
0x0017a075: and ah, byte ptr [ecx]; out dx, eax; jmp dword ptr [edx]; 
0x00198810: and al, 0; add byte ptr [eax], al; adc al, 0x96; add al, byte ptr [eax]; or byte ptr [eax + edi*8], bl; jmp esp; 
0x000eca44: and al, 0; add byte ptr [eax], al; add al, ch; ret 0xf76d; 
0x00041013: and al, 0; add byte ptr [eax], al; add al, ch; ret; 
0x0011e235: and al, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x72f7dbbc], cl; cmp dword ptr [ebx - 0x2e], -5; dec dword ptr [ecx - 0x17fbdbbc]; ret; 
0x0006a35a: and al, 0; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0xd8f7; 
0x000e8101: and al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001775f4: and al, 0; add byte ptr [eax], al; clc; add dword ptr [eax], 0; adc al, 0xef; call esp; 
0x0018b5f0: and al, 0; add byte ptr [eax], al; hlt; ret; 
0x00185f9c: and al, 0; add byte ptr [eax], al; mov al, byte ptr [0x2c00016d]; fcompi st(2); call dword ptr [edi]; 
0x0018389c: and al, 0; add byte ptr [eax], al; mov al, byte ptr [0xac000146]; dec ecx; int1; call dword ptr [ebx + 1]; 
0x0018eeb4: and al, 0; add byte ptr [eax], al; mov eax, 0xd40001fc; and esi, esi; jmp dword ptr [esi]; 
0x000e3c33: and al, 0; add byte ptr [eax], al; mov eax, 1; add esp, 0x1c; ret; 
0x0018b58c: and al, 0; add byte ptr [eax], al; nop; ret; 
0x00199f04: and al, 0; add byte ptr [eax], al; or byte ptr [ebp + 0x61c40002], ch; clc; call dword ptr [edi]; 
0x0018c064: and al, 0; add byte ptr [eax], al; push 0x840001ce; movsd dword ptr es:[edi], dword ptr [esi]; cmc; jmp esp; 
0x0018ad50: and al, 0; add byte ptr [eax], al; push esp; mov ebx, 0x3c980001; cmc; jmp dword ptr [edx]; 
0x00176fcc: and al, 0; add byte ptr [eax], al; sar byte ptr [ebp], 1; add ah, ch; or ebp, edi; jmp dword ptr [ebx]; 
0x0018a480: and al, 0; add byte ptr [eax], al; test byte ptr [edx - 0x8d7ffff], dh; hlt; call dword ptr [esi]; 
0x0000af75: and al, 0; add byte ptr [eax], dl; ret; 
0x000b9963: and al, 0; add byte ptr [ebp - 0x46], dh; mov eax, 0xfffa; pop ebx; ret; 
0x0017314c: and al, 0; in al, dx; jmp dword ptr [ecx]; 
0x00098f62: and al, 0x10; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edi; call esi; 
0x000990f2: and al, 0x10; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 8], eax; mov dword ptr [esp], edi; call esi; 
0x00067c48: and al, 0x10; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], edx; call eax; 
0x00054df8: and al, 0x10; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x1028]; add esp, 0x102c; ret; 
0x0011f83f: and al, 0x10; add dword ptr [esi + 0x14], edi; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0013690c: and al, 0x10; add eax, ecx; pop ebx; ret; 
0x0002c822: and al, 0x10; add esp, 0x14; ret; 
0x000ab4a2: and al, 0x10; add esp, 0x1c; ret; 
0x0011cf73: and al, 0x10; call 0x11cec0; add esp, 0x98; pop edi; ret; 
0x000b39b6: and al, 0x10; call 0xb3930; add esp, 8; pop ebx; ret; 
0x000f2799: and al, 0x10; call 0xf1bf0; pop edx; pop ecx; pop eax; ret; 
0x0002d9a2: and al, 0x10; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0002da18: and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0002d4a5: and al, 0x10; fstp qword ptr [esp]; mov eax, dword ptr [esp + 4]; add esp, 0xc; and eax, 0x80000000; ret; 
0x0011ba77: and al, 0x10; lea edx, dword ptr [ebx - 0x84aa4]; mov dword ptr [esp + 8], edx; call dword ptr [eax]; 
0x0011c5b0: and al, 0x10; mov dword ptr [edx], ecx; pop ebx; pop esi; pop edi; ret; 
0x00129b3a: and al, 0x10; mov dword ptr [edx], edi; pop esi; pop edi; ret; 
0x00066c7f: and al, 0x10; mov dword ptr [esp + 0xc], 0; call dword ptr [eax + 0x24]; 
0x00066a30: and al, 0x10; mov dword ptr [esp + 0xc], edi; mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x0011b68a: and al, 0x10; mov dword ptr [esp], eax; call dword ptr [edx]; 
0x001092a8: and al, 0x10; mov dword ptr [esp], esi; call eax; 
0x001153cd: and al, 0x10; mov dword ptr gs:[esi], edi; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000ef6b8: and al, 0x10; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000eb2f5: and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x000efc48: and al, 0x10; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000efd58: and al, 0x10; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000efec5: and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x000ef8e5: and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x000ef755: and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x000e7e6f: and al, 0x10; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000ef935: and al, 0x10; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x000efa95: and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x000efa45: and al, 0x10; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x00123dd5: and al, 0x10; mov eax, 0xbc; call dword ptr gs:[0x10]; 
0x00123e95: and al, 0x10; mov eax, 0xbd; call dword ptr gs:[0x10]; 
0x000ed725: and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x000ed695: and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x000ed4e5: and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012e525: and al, 0x10; mov eax, 0xfa; call dword ptr gs:[0x10]; 
0x00127952: and al, 0x10; mov eax, dword ptr [eax]; add esp, 0xc; ret; 
0x0002f135: and al, 0x10; mov eax, dword ptr [esp + 0xa8]; mov dword ptr [esp + 0x14], eax; xchg edi, ebx; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x000830ba: and al, 0x10; mov ebp, dword ptr [esp + 0x14]; add esp, 0x18; ret; 
0x000ef686: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000efc16: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000efd26: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000efdec: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000ef33c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000eff39: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000b7dac: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000efadc: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x000eb219: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000e134c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000ed52c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x000ed5bc: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x000ed40c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x000e139c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x000ef62c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000dec19: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 3; call dword ptr gs:[0x10]; 
0x000dec99: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 4; call dword ptr gs:[0x10]; 
0x000de779: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 5; call dword ptr gs:[0x10]; 
0x000b7d29: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 7; call dword ptr gs:[0x10]; 
0x000ef793: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x000dece3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x13; call dword ptr gs:[0x10]; 
0x000df533: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x000eff0d: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000e6d03: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000e0a73: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000e6ac3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x000eea13: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x000ef893: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000aac43: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000ef233: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x000eb1a3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x000ef523: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000ef563: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000eb1ed: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000c5433: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000ef973: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eb2a3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x000eb263: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000ed573: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x000ed603: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x000ed453: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000debed: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 3; call dword ptr gs:[0x10]; 
0x000dec6d: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 4; call dword ptr gs:[0x10]; 
0x000de74d: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 5; call dword ptr gs:[0x10]; 
0x000b7cfd: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 7; call dword ptr gs:[0x10]; 
0x000ddaeb: and al, 0x10; mov edi, dword ptr [esp + 0x14]; add esp, 0x18; ret; 
0x000e7099: and al, 0x10; mov edi, dword ptr [esp + 0x14]; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000e75f9: and al, 0x10; mov edi, dword ptr [esp + 0x14]; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000ca362: and al, 0x10; mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret 0xc; 
0x00019d8a: and al, 0x10; mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0007b2a3: and al, 0x10; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0006cf4e: and al, 0x10; mov edi, dword ptr [esp + 0x3c]; mov dword ptr [esp], edi; call dword ptr [edi + 0xc]; 
0x000de62b: and al, 0x10; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x000f11ca: and al, 0x10; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x1c]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00019852: and al, 0x10; mov edx, dword ptr [esp + 0x34]; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x30]; mov dword ptr [esp], edx; call eax; 
0x0001af5a: and al, 0x10; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000a870b: and al, 0x10; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; mov ebp, dword ptr [esp + 0x1c]; add esp, 0x20; ret; 
0x000a7b3a: and al, 0x10; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; imul eax, edx; ret; 
0x000828cb: and al, 0x10; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0007c975: and al, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00101945: and al, 0x10; pop esi; pop edi; pop ebp; ret; 
0x000ecb3a: and al, 0x10; xchg ebx, edx; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x000ddc16: and al, 0x10; xchg ebx, edx; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ddd96: and al, 0x10; xchg ebx, edx; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000ddcd6: and al, 0x10; xchg ebx, edx; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x000de8a7: and al, 0x10; xchg edi, ebx; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00055567: and al, 0x10; xchg edi, ebx; mov eax, 0x12e; call dword ptr gs:[0x10]; 
0x000e0ad7: and al, 0x10; xchg edi, ebx; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x000e140b: and al, 0x10; xchg edi, ebx; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x00102aa6: and al, 0x10; xchg edi, ebx; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000eeda7: and al, 0x10; xchg edi, ebx; mov eax, 0xe1; call dword ptr gs:[0x10]; 
0x000ddf0f: and al, 0x10; xchg edi, ebx; mov eax, 0xe; call dword ptr gs:[0x10]; 
0x001028e6: and al, 0x10; xchg edi, ebx; mov eax, 3; call dword ptr gs:[0x10]; 
0x0016df8c: and al, 0x12; add eax, dword ptr [eax]; aam 0x48; sti; call dword ptr [eax + 0x12]; 
0x000dfece: and al, 0x14; adc byte ptr [eax], al; add byte ptr [ebx + 0x101824bc], cl; add byte ptr [eax], al; add esp, 0x101c; ret; 
0x0010d9db: and al, 0x14; add al, byte ptr [eax]; add byte ptr [ecx + 0x68e82404], cl; xchg eax, ebp; lock dec dword ptr [ebx - 0xf775]; jmp dword ptr [ebp - 0x77]; 
0x00123814: and al, 0x14; add byte ptr [eax], al; add al, ch; ret 0xef36; 
0x000e1131: and al, 0x14; add dword ptr [eax], eax; add byte ptr [ebx + 0x11824ac], cl; add byte ptr [eax], al; add esp, 0x11c; ret; 
0x000ca985: and al, 0x14; add eax, 0x14; call 0xca930; xor eax, eax; add esp, 0xc; ret; 
0x000830be: and al, 0x14; add esp, 0x18; ret; 
0x00114419: and al, 0x14; add esp, 0x1c; add eax, edx; ret; 
0x0002e3e6: and al, 0x14; add esp, 0x1c; ret; 
0x000eaeae: and al, 0x14; call dword ptr gs:[0x10]; 
0x00032eb7: and al, 0x14; call ecx; 
0x000f1273: and al, 0x14; cmovbe eax, dword ptr [esp + 8]; add esp, 0x1c; ret; 
0x000d94a8: and al, 0x14; cmove eax, esi; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000e0dea: and al, 0x14; cmp ebp, 0xfffff000; mov ebp, dword ptr [esp + 0x18]; cmova eax, edx; add esp, 0x1c; ret; 
0x0006cf46: and al, 0x14; lea edi, dword ptr [esp + 0x5c]; mov dword ptr [esp + 0x10], edi; mov edi, dword ptr [esp + 0x3c]; mov dword ptr [esp], edi; call dword ptr [edi + 0xc]; 
0x000d86a3: and al, 0x14; mov dword ptr [edi + 4], eax; xor eax, eax; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0007b29d: and al, 0x14; mov dword ptr [edi], eax; mov ebx, dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000703cb: and al, 0x14; mov dword ptr [edx + 0xb8], ecx; add esp, 0x1c; ret; 
0x000ab34a: and al, 0x14; mov dword ptr [edx], eax; mov eax, esi; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00129b92: and al, 0x14; mov dword ptr [edx], ebp; pop esi; pop edi; pop ebp; ret; 
0x000d8031: and al, 0x14; mov dword ptr [esi + 0x14], 0; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000f70b6: and al, 0x14; mov dword ptr [esi + 0xc], edx; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000f7016: and al, 0x14; mov dword ptr [esi + 4], edx; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000f7066: and al, 0x14; mov dword ptr [esi + 8], edx; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000e709d: and al, 0x14; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000e75fd: and al, 0x14; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000478eb: and al, 0x14; mov dword ptr [esp + 4], eax; mov dword ptr [esp], esi; call dword ptr [ecx + 0x1c]; 
0x0011266f: and al, 0x14; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x00079df8: and al, 0x14; mov dword ptr [esp + 4], edx; call eax; 
0x0007bb51: and al, 0x14; mov dword ptr [esp + 8], esi; mov dword ptr [esp + 4], edi; mov dword ptr [esp], ebp; call eax; 
0x000eb62c: and al, 0x14; mov dword ptr gs:[eax], 0x16; add esp, 0x1c; ret; 
0x00032814: and al, 0x14; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x0002c8b4: and al, 0x14; mov dword ptr gs:[eax], 9; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x000efb44: and al, 0x14; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000eeb1a: and al, 0x14; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000ef39a: and al, 0x14; mov eax, 0x153; call dword ptr gs:[0x10]; 
0x000effda: and al, 0x14; mov eax, 0x15b; call dword ptr gs:[0x10]; 
0x000f003a: and al, 0x14; mov eax, 0x15c; call dword ptr gs:[0x10]; 
0x000e7ea3: and al, 0x14; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x00040c46: and al, 0x14; mov eax, dword ptr [eax + 0x34]; add esp, 0x1c; ret; 
0x00115107: and al, 0x14; mov eax, edx; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000ca366: and al, 0x14; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret 0xc; 
0x00019d8e: and al, 0x14; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000f11d2: and al, 0x14; mov ebp, dword ptr [esp + 0x1c]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000ef6b4: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000eb2f1: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x000efc44: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000efd54: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000efec1: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x000ef8e1: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x000ef751: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x000e7e6b: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000ef931: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x000efa91: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x000efa41: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x00123dd1: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xbc; call dword ptr gs:[0x10]; 
0x00123e91: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xbd; call dword ptr gs:[0x10]; 
0x000ed721: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x000ed691: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x000ed4e1: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012e521: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xfa; call dword ptr gs:[0x10]; 
0x000ef682: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000efc12: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000efd22: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000efde8: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000ef338: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000eff35: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000b7da8: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000efad8: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x000eb215: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000e1348: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000ed528: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x000ed5b8: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x000ed408: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x000e1398: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x000ef628: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000dec15: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 3; call dword ptr gs:[0x10]; 
0x000dec95: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 4; call dword ptr gs:[0x10]; 
0x000de775: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 5; call dword ptr gs:[0x10]; 
0x000b7d25: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 7; call dword ptr gs:[0x10]; 
0x00102aa2: and al, 0x14; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000ddf0b: and al, 0x14; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0xe; call dword ptr gs:[0x10]; 
0x001028e2: and al, 0x14; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 3; call dword ptr gs:[0x10]; 
0x0001af5e: and al, 0x14; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0007e9e8: and al, 0x14; mov edi, dword ptr [esp + 0x18]; mov ebp, dword ptr [esp + 0x1c]; add esp, 0x20; ret; 
0x000e6a5b: and al, 0x14; mov edx, 0xffffffff; call 0xe6980; sar eax, 0x1f; add esp, 0xc; ret; 
0x0002391b: and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0011fc64: and al, 0x14; mov esi, dword ptr [esp + 0x18]; mov dword ptr [eax], 0; add esp, 0x1c; ret; 
0x000e3c2a: and al, 0x14; mov esi, dword ptr [esp + 0x18]; mov dword ptr gs:[eax], 0x24; mov eax, 1; add esp, 0x1c; ret; 
0x00040d25: and al, 0x14; mov esi, dword ptr [esp + 0x18]; test eax, eax; cmovs eax, edx; add esp, 0x1c; ret; 
0x000e1485: and al, 0x14; mov esi, ecx; xchg edi, ebx; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x0011ea94: and al, 0x14; movzx eax, al; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000739e6: and al, 0x14; or dword ptr [esi], 8; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00026776: and al, 0x14; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000f7104: and al, 0x14; test edx, edx; cmovns eax, dword ptr [esi + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000ddfa7: and al, 0x14; xchg edi, ebx; mov eax, 0x129; call dword ptr gs:[0x10]; 
0x0002f140: and al, 0x14; xchg edi, ebx; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0002dbfc: and al, 0x14; xor eax, eax; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00124771: and al, 0x18; add esp, 0x1c; mov eax, edx; ret; 
0x000ca36a: and al, 0x18; add esp, 0x1c; ret 0xc; 
0x00019d92: and al, 0x18; add esp, 0x1c; ret; 
0x000c5b7d: and al, 0x18; add esp, 0x28; pop ebx; mov eax, edx; ret; 
0x000338cb: and al, 0x18; add esp, 0x28; pop ebx; ret; 
0x0007f496: and al, 0x18; add esp, 0x450; pop esi; pop edi; pop ebp; ret; 
0x000ca61a: and al, 0x18; and eax, 0xc; add esp, 0x1c; ret; 
0x000e0df4: and al, 0x18; cmova eax, edx; add esp, 0x1c; ret; 
0x000195a3: and al, 0x18; lea edx, dword ptr [ecx + ebp*8 + 0x258]; mov dword ptr [esp], edx; call eax; 
0x0006bf70: and al, 0x18; mov dword ptr [eax + 0x20], 0; mov dword ptr [eax + 0x28], 0; mov dword ptr [eax + 0x24], 0; add esp, 0x1c; ret; 
0x0011fc68: and al, 0x18; mov dword ptr [eax], 0; add esp, 0x1c; ret; 
0x0001992d: and al, 0x18; mov dword ptr [ebx + 0x368c], ecx; mov ebx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x000689a2: and al, 0x18; mov dword ptr [edx], eax; xor eax, eax; add esp, 0x1c; ret; 
0x00073206: and al, 0x18; mov dword ptr [esi + 4], eax; xor eax, eax; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x0007bb4d: and al, 0x18; mov dword ptr [esp + 0x14], ecx; mov dword ptr [esp + 8], esi; mov dword ptr [esp + 4], edi; mov dword ptr [esp], ebp; call eax; 
0x0003167e: and al, 0x18; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; mov dword ptr [esp + 8], ecx; call edi; 
0x0005b99e: and al, 0x18; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x00064f6b: and al, 0x18; mov dword ptr [esp + 4], ecx; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x00079861: and al, 0x18; mov dword ptr [esp + 4], edx; call eax; 
0x00031623: and al, 0x18; mov dword ptr [esp + 4], esi; mov dword ptr [esp + 8], ecx; mov ecx, dword ptr [esp + 0x30]; mov dword ptr [esp], ecx; call edi; 
0x0007b843: and al, 0x18; mov dword ptr [esp + 8], esi; mov dword ptr [esp + 4], ecx; call eax; 
0x00074d67: and al, 0x18; mov dword ptr [esp], 0; call dword ptr [ecx]; 
0x0011199a: and al, 0x18; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x0011e535: and al, 0x18; mov dword ptr [esp], eax; call dword ptr [esp + 0x40]; add esp, 0x3c; ret; 
0x000e3c2e: and al, 0x18; mov dword ptr gs:[eax], 0x24; mov eax, 1; add esp, 0x1c; ret; 
0x000efb7e: and al, 0x18; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000eaeaa: and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000eeb79: and al, 0x18; mov eax, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x1c], eax; xchg ebx, ecx; mov eax, 0x95; call dword ptr gs:[0x10]; 
0x0007e9ec: and al, 0x18; mov ebp, dword ptr [esp + 0x1c]; add esp, 0x20; ret; 
0x0010fc5d: and al, 0x18; mov ebp, dword ptr [esp + 0x20]; add esp, 0x24; ret; 
0x00127a09: and al, 0x18; mov ebp, dword ptr [esp + 0x28]; cmovbe eax, edx; add esp, 0x2c; ret; 
0x00109841: and al, 0x18; mov ebx, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x000703c7: and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov dword ptr [edx + 0xb8], ecx; add esp, 0x1c; ret; 
0x000eb628: and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov dword ptr gs:[eax], 0x16; add esp, 0x1c; ret; 
0x00032810: and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x0002c8b0: and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov dword ptr gs:[eax], 9; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x000efb40: and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000eeb16: and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000ef396: and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x153; call dword ptr gs:[0x10]; 
0x000effd6: and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x15b; call dword ptr gs:[0x10]; 
0x000f0036: and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x15c; call dword ptr gs:[0x10]; 
0x000e7e9f: and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x00040e53: and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, dword ptr [eax + 0x34]; add esp, 0x1c; ret; 
0x000ef6b0: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000eb2ed: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x000efc40: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000efd50: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000efebd: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x000ef8dd: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x000ef74d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x000e7e67: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000ef92d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x000efa8d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x000efa3d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x00123dcd: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xbc; call dword ptr gs:[0x10]; 
0x00123e8d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xbd; call dword ptr gs:[0x10]; 
0x000ed71d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x000ed68d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x000ed4dd: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012e51d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xfa; call dword ptr gs:[0x10]; 
0x000e1407: and al, 0x18; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x000f11ce: and al, 0x18; mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x1c]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000ddfa3: and al, 0x18; mov edi, dword ptr [esp + 0x14]; xchg edi, ebx; mov eax, 0x129; call dword ptr gs:[0x10]; 
0x00031058: and al, 0x18; mov edi, dword ptr [esp + 0x1c]; mov ebp, dword ptr [esp + 0x20]; add esp, 0x24; ret; 
0x000eebe9: and al, 0x18; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x000ef67e: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000efc0e: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000efd1e: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000efde4: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000ef334: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000b7da4: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000efad4: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x000e1344: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000ed524: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x000ed5b4: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x000ed404: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x000e1394: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x000ef624: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x00019f39: and al, 0x18; mov edx, dword ptr [esp + 0x1c]; add esp, 0x24; ret; 
0x00064f83: and al, 0x18; mov edx, dword ptr [esp + 0x1c]; add esp, 0x2c; ret; 
0x000eb105: and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x000eeadf: and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; int 0x80; 
0x0003165a: and al, 0x18; mov edx, dword ptr [esp + 0x20]; mov dword ptr [esp + 4], esi; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], edx; call edi; 
0x00114415: and al, 0x18; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; add eax, edx; ret; 
0x0002e3e2: and al, 0x18; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x00074d44: and al, 0x18; neg eax; mov dword ptr [esp], eax; call dword ptr [ecx]; 
0x000b308e: and al, 0x18; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], ecx; call eax; 
0x00040d29: and al, 0x18; test eax, eax; cmovs eax, edx; add esp, 0x1c; ret; 
0x000de0d2: and al, 0x18; xchg edi, ebx; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00170d24: and al, 0x1b; add byte ptr [eax], al; sub byte ptr [ebx - 0x15], ah; call dword ptr [ebx]; 
0x0009e64c: and al, 0x1c; adc dword ptr [eax], eax; add al, ch; sbb eax, 0x810008b7; ret; 
0x00097037: and al, 0x1c; add dword ptr [ebx + 0x211c244c], ecx; ret 0xd789; 
0x00126f2a: and al, 0x1c; add edx, dword ptr [eax + 4]; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x00031542: and al, 0x1c; add esp, 0x20; pop esi; pop edi; pop ebp; ret; 
0x0007e9f0: and al, 0x1c; add esp, 0x20; ret; 
0x00019f3d: and al, 0x1c; add esp, 0x24; ret; 
0x001247b0: and al, 0x1c; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x0005544e: and al, 0x1c; add esp, 0x28; pop ebx; mov eax, edx; ret; 
0x0003335a: and al, 0x1c; add esp, 0x28; pop ebx; ret; 
0x000fc901: and al, 0x1c; add esp, 0x2c; mov eax, edx; ret; 
0x00064f87: and al, 0x1c; add esp, 0x2c; ret; 
0x000b555c: and al, 0x1c; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00126e61: and al, 0x1c; add esp, 0x34; pop ebx; pop esi; ret; 
0x0010e38b: and al, 0x1c; add esp, 0x50; pop esi; pop edi; pop ebp; ret; 
0x00041bfa: and al, 0x1c; add esp, 8; pop esi; pop edi; pop ebp; ret; 
0x000e88f6: and al, 0x1c; call 0xb81e0; add esp, 0x2c; ret; 
0x000d95cd: and al, 0x1c; call dword ptr [eax + 0x14]; 
0x0007c070: and al, 0x1c; call dword ptr [edx]; 
0x00074f87: and al, 0x1c; call edx; 
0x0011f283: and al, 0x1c; mov byte ptr [esi], al; add esp, 0x28; mov eax, 1; pop esi; ret; 
0x000d8461: and al, 0x1c; mov dword ptr [eax + 8], edx; add esp, 8; ret; 
0x0007af21: and al, 0x1c; mov dword ptr [ebx + 0x1968], 1; add esp, 0x28; pop ebx; ret; 
0x0011e61a: and al, 0x1c; mov dword ptr [esi], eax; add esp, 0x28; mov eax, 1; pop esi; ret; 
0x00112585: and al, 0x1c; mov dword ptr [esi], eax; mov eax, dword ptr [esi + 8]; mov dword ptr [esp], edi; mov dword ptr [esp + 4], eax; call dword ptr [esi + 0xc]; 
0x000317ca: and al, 0x1c; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], edi; mov dword ptr [esp + 8], edx; call esi; 
0x000f8319: and al, 0x1c; mov dword ptr [esp + 4], ecx; call edx; 
0x0011f16d: and al, 0x1c; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0x20]; 
0x0011e9ba: and al, 0x1c; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x0011e605: and al, 0x1c; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx]; 
0x0011f040: and al, 0x1c; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x0011ef58: and al, 0x1c; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x20]; 
0x0011e6d7: and al, 0x1c; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x00111858: and al, 0x1c; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x0006ad74: and al, 0x1c; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x1c]; 
0x0007b938: and al, 0x1c; mov dword ptr [esp + 4], esi; mov dword ptr [esp], ecx; call eax; 
0x0007b3bf: and al, 0x1c; mov dword ptr [esp + 8], ecx; lea ecx, dword ptr [edi + 0x19]; mov dword ptr [esp + 4], ecx; call eax; 
0x001127a5: and al, 0x1c; mov dword ptr [esp + 8], edx; mov dword ptr [esp + 4], 5; mov dword ptr [esp], edi; call dword ptr [eax]; 
0x00114256: and al, 0x1c; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x000792b0: and al, 0x1c; mov dword ptr [esp], ecx; mov dword ptr [esp + 4], edx; call eax; 
0x0007a108: and al, 0x1c; mov dword ptr [esp], edx; call eax; 
0x0007a7ab: and al, 0x1c; mov dword ptr [esp], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 8], esi; call eax; 
0x001111d2: and al, 0x1c; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000f11d6: and al, 0x1c; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00126caf: and al, 0x1c; mov eax, dword ptr [eax + 0x1a0]; mov dword ptr [esp], edx; call eax; 
0x00126c59: and al, 0x1c; mov eax, dword ptr [ebx - 0xfc]; mov dword ptr [esp], edx; mov eax, dword ptr [eax + 0x1a0]; call eax; 
0x0011263a: and al, 0x1c; mov eax, dword ptr [edi + 0x10]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], eax; call dword ptr [edi + 0x14]; 
0x0003105c: and al, 0x1c; mov ebp, dword ptr [esp + 0x20]; add esp, 0x24; ret; 
0x000efb7a: and al, 0x1c; mov ebx, dword ptr [esp + 0x18]; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000eaea6: and al, 0x1c; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000ed986: and al, 0x1c; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000b7e2d: and al, 0x1c; mov ebx, eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000e0d06: and al, 0x1c; mov ebx, eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x000f0b80: and al, 0x1c; mov ebx, eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x000f0dec: and al, 0x1c; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000c57e1: and al, 0x1c; mov ebx, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000c58c1: and al, 0x1c; mov ebx, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00074d3a: and al, 0x1c; mov ecx, dword ptr [ebx - 0x15c]; mov dword ptr [esp + 0x18], edx; neg eax; mov dword ptr [esp], eax; call dword ptr [ecx]; 
0x000efb3c: and al, 0x1c; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000eeb12: and al, 0x1c; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000ef392: and al, 0x1c; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x153; call dword ptr gs:[0x10]; 
0x000effd2: and al, 0x1c; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x15b; call dword ptr gs:[0x10]; 
0x000f0032: and al, 0x1c; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x15c; call dword ptr gs:[0x10]; 
0x000e7e9b: and al, 0x1c; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000de0ce: and al, 0x1c; mov edi, dword ptr [esp + 0x18]; xchg edi, ebx; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000982ca: and al, 0x1c; mov edi, dword ptr [esp + 0x20]; mov ebp, dword ptr [esp + 0x24]; add esp, 0x28; ret; 
0x0010fc59: and al, 0x1c; mov esi, dword ptr [esp + 0x18]; mov ebp, dword ptr [esp + 0x20]; add esp, 0x24; ret; 
0x000eb109: and al, 0x1c; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x000eeede: and al, 0x1c; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, 8; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x00023c37: and al, 0x1c; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000eeae3: and al, 0x1c; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; int 0x80; 
0x000e0e0e: and al, 0x1c; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; mov eax, 0x110; call dword ptr gs:[0x10]; 
0x000e4f0e: and al, 0x1c; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000ce8a5: and al, 0x1c; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; ret; 
0x000ce877: and al, 0x1c; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000ed8b5: and al, 0x1c; mov esi, dword ptr [esp + 0x30]; add esp, 0x3c; ret; 
0x000e6a1b: and al, 0x1c; mov esi, dword ptr [esp + 0x70]; mov edi, dword ptr [esp + 0x74]; mov ebp, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x0011e862: and al, 0x1c; mov word ptr [esi], ax; add esp, 0x28; mov eax, 1; pop esi; ret; 
0x000eeb81: and al, 0x1c; xchg ebx, ecx; mov eax, 0x95; call dword ptr gs:[0x10]; 
0x000e8aba: and al, 0x1e; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0011cb08: and al, 0x20; add eax, 0x89000000; dec esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x000c5d88: and al, 0x20; add eax, 8; mov dword ptr [esp], eax; call 0x7dcd0; add esp, 0x1c; ret; 
0x00101842: and al, 0x20; add esp, 0x10; pop esi; pop edi; pop ebp; ret; 
0x00031060: and al, 0x20; add esp, 0x24; ret; 
0x000ae908: and al, 0x20; call 0xab4b0; sub esp, 8; add esp, 0x18; pop ebx; ret; 
0x000e2600: and al, 0x20; call 0xe2070; sub esp, 8; add esp, 0x18; pop ebx; ret; 
0x000e25ba: and al, 0x20; call 0xe2070; sub esp, 8; add esp, 0x1c; ret; 
0x000e3780: and al, 0x20; call 0xe31f0; sub esp, 8; add esp, 0x18; pop ebx; ret; 
0x000e373a: and al, 0x20; call 0xe31f0; sub esp, 8; add esp, 0x1c; ret; 
0x0007c2a0: and al, 0x20; call dword ptr [edx]; 
0x00110058: and al, 0x20; mov dword ptr [ecx], edx; pop esi; pop edi; ret; 
0x000b3757: and al, 0x20; mov dword ptr [esi + 0xc], edx; mov esi, dword ptr [esp + 0x98]; add esp, 0x9c; ret; 
0x0010f93e: and al, 0x20; mov dword ptr [esi], edx; mov edi, dword ptr [esp + 0x28]; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; ret; 
0x000b9507: and al, 0x20; mov dword ptr [esp + 0x24], ecx; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0011c3bc: and al, 0x20; mov dword ptr [esp + 4], 5; call 0x11c1e0; sub esp, 0xc; add esp, 0x1c; ret; 
0x00098973: and al, 0x20; mov dword ptr [esp + 4], eax; call 0x98990; add esp, 0x18; pop ebx; ret; 
0x000b7d8c: and al, 0x20; mov dword ptr [esp + 4], eax; call 0xb7da0; add esp, 0x1c; ret; 
0x0003165e: and al, 0x20; mov dword ptr [esp + 4], esi; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], edx; call edi; 
0x00102f9d: and al, 0x20; mov dword ptr [esp], eax; call 0x102fb0; add esp, 0x1c; ret; 
0x0010316d: and al, 0x20; mov dword ptr [esp], eax; call 0x103180; add esp, 0x1c; ret; 
0x0010347d: and al, 0x20; mov dword ptr [esp], eax; call 0x103280; add esp, 0x1c; ret; 
0x001090ab: and al, 0x20; mov dword ptr [esp], eax; call 0x1090c0; add esp, 0x18; pop ebx; ret; 
0x0010958b: and al, 0x20; mov dword ptr [esp], eax; call 0x1095a0; add esp, 0x18; pop ebx; ret; 
0x00113035: and al, 0x20; mov dword ptr [esp], eax; call 0x11ea10; add esp, 0x1c; ret; 
0x0011ec8c: and al, 0x20; mov dword ptr [esp], eax; call 0x11eb00; add esp, 0x1c; ret; 
0x00102c17: and al, 0x20; mov dword ptr [esp], eax; call 0x1246e0; add esp, 0x18; pop ebx; ret; 
0x00126581: and al, 0x20; mov dword ptr [esp], eax; call 0x124a80; add esp, 0x18; pop ebx; ret; 
0x00126541: and al, 0x20; mov dword ptr [esp], eax; call 0x124bc0; add esp, 0x18; pop ebx; ret; 
0x00126561: and al, 0x20; mov dword ptr [esp], eax; call 0x124c30; add esp, 0x18; pop ebx; ret; 
0x001265a1: and al, 0x20; mov dword ptr [esp], eax; call 0x126250; add esp, 0x18; pop ebx; ret; 
0x001265c9: and al, 0x20; mov dword ptr [esp], eax; call 0x126370; add esp, 0x18; pop ebx; ret; 
0x00128a09: and al, 0x20; mov dword ptr [esp], eax; call 0x128950; add esp, 0x18; pop ebx; ret; 
0x00128b39: and al, 0x20; mov dword ptr [esp], eax; call 0x128a80; add esp, 0x18; pop ebx; ret; 
0x00128cb1: and al, 0x20; mov dword ptr [esp], eax; call 0x128b90; add esp, 0x18; pop ebx; ret; 
0x0012a871: and al, 0x20; mov dword ptr [esp], eax; call 0x12a150; add esp, 0x18; pop ebx; ret; 
0x000c5cc1: and al, 0x20; mov dword ptr [esp], eax; call 0x16f50; add esp, 0x18; pop ebx; ret; 
0x00025f0e: and al, 0x20; mov dword ptr [esp], eax; call 0x25f20; add esp, 0x18; pop ebx; ret; 
0x00027755: and al, 0x20; mov dword ptr [esp], eax; call 0x276f0; add esp, 0x1c; ret; 
0x00032ddb: and al, 0x20; mov dword ptr [esp], eax; call 0x32d50; add esp, 0x18; pop ebx; ret; 
0x00033a3b: and al, 0x20; mov dword ptr [esp], eax; call 0x33ce0; add esp, 0x18; pop ebx; ret; 
0x00033aab: and al, 0x20; mov dword ptr [esp], eax; call 0x33d70; add esp, 0x18; pop ebx; ret; 
0x0003f7cd: and al, 0x20; mov dword ptr [esp], eax; call 0x33fa0; add esp, 0x1c; ret; 
0x0003f7fd: and al, 0x20; mov dword ptr [esp], eax; call 0x34040; add esp, 0x1c; ret; 
0x00035a3e: and al, 0x20; mov dword ptr [esp], eax; call 0x36110; add esp, 0x18; pop ebx; ret; 
0x000388cd: and al, 0x20; mov dword ptr [esp], eax; call 0x36110; add esp, 0x1c; ret; 
0x00035abe: and al, 0x20; mov dword ptr [esp], eax; call 0x38f30; add esp, 0x18; pop ebx; ret; 
0x0003b84d: and al, 0x20; mov dword ptr [esp], eax; call 0x38f30; add esp, 0x1c; ret; 
0x00035b3e: and al, 0x20; mov dword ptr [esp], eax; call 0x3bef0; add esp, 0x18; pop ebx; ret; 
0x0003e6dd: and al, 0x20; mov dword ptr [esp], eax; call 0x3bef0; add esp, 0x1c; ret; 
0x00102bd3: and al, 0x20; mov dword ptr [esp], eax; call 0x3efe0; add esp, 0x18; pop ebx; ret; 
0x0004c465: and al, 0x20; mov dword ptr [esp], eax; call 0x424d0; add esp, 0x1c; ret; 
0x00049fe1: and al, 0x20; mov dword ptr [esp], eax; call 0x49ee0; add esp, 0x18; pop ebx; ret; 
0x00054689: and al, 0x20; mov dword ptr [esp], eax; call 0x4c590; add esp, 0x18; pop ebx; ret; 
0x000546c5: and al, 0x20; mov dword ptr [esp], eax; call 0x54660; add esp, 0x1c; ret; 
0x000e8689: and al, 0x20; mov dword ptr [esp], eax; call 0x54fb0; add esp, 0x18; pop ebx; ret; 
0x00055b85: and al, 0x20; mov dword ptr [esp], eax; call 0x55ba0; add esp, 0x1c; ret; 
0x0006f041: and al, 0x20; mov dword ptr [esp], eax; call 0x56370; add esp, 0x18; pop ebx; ret; 
0x00062ea9: and al, 0x20; mov dword ptr [esp], eax; call 0x5baa0; add esp, 0x18; pop ebx; ret; 
0x0006f131: and al, 0x20; mov dword ptr [esp], eax; call 0x62e80; add esp, 0x18; pop ebx; ret; 
0x00068b51: and al, 0x20; mov dword ptr [esp], eax; call 0x643c0; add esp, 0x18; pop ebx; ret; 
0x00064ea1: and al, 0x20; mov dword ptr [esp], eax; call 0x64db0; add esp, 0x18; pop ebx; ret; 
0x000553f9: and al, 0x20; mov dword ptr [esp], eax; call 0x65980; add esp, 0x18; pop ebx; ret; 
0x00068dd1: and al, 0x20; mov dword ptr [esp], eax; call 0x66df0; add esp, 0x18; pop ebx; ret; 
0x0004c521: and al, 0x20; mov dword ptr [esp], eax; call 0x67210; add esp, 0x18; pop ebx; ret; 
0x00054741: and al, 0x20; mov dword ptr [esp], eax; call 0x67300; add esp, 0x18; pop ebx; ret; 
0x0004c551: and al, 0x20; mov dword ptr [esp], eax; call 0x68e20; add esp, 0x18; pop ebx; ret; 
0x0004c581: and al, 0x20; mov dword ptr [esp], eax; call 0x68ff0; add esp, 0x18; pop ebx; ret; 
0x0004c4e9: and al, 0x20; mov dword ptr [esp], eax; call 0x69210; add esp, 0x18; pop ebx; ret; 
0x000696a1: and al, 0x20; mov dword ptr [esp], eax; call 0x694b0; add esp, 0x18; pop ebx; ret; 
0x0006b109: and al, 0x20; mov dword ptr [esp], eax; call 0x6b1a0; add esp, 0x18; pop ebx; ret; 
0x0006b385: and al, 0x20; mov dword ptr [esp], eax; call 0x6b2b0; add esp, 0x1c; ret; 
0x00073983: and al, 0x20; mov dword ptr [esp], eax; call 0x73890; add esp, 0x18; pop ebx; ret; 
0x000985b4: and al, 0x20; mov dword ptr [esp], eax; call 0x7e180; add esp, 0x18; pop ebx; ret; 
0x00097c24: and al, 0x20; mov dword ptr [esp], eax; call 0x7e790; add esp, 0x18; pop ebx; ret; 
0x0007c876: and al, 0x20; mov dword ptr [esp], eax; call 0x81390; add esp, 0x18; pop ebx; ret; 
0x00083731: and al, 0x20; mov dword ptr [esp], eax; call 0x82760; add esp, 0x18; pop ebx; ret; 
0x00104827: and al, 0x20; mov dword ptr [esp], eax; call 0x97ff0; add esp, 0x18; pop ebx; ret; 
0x00104a27: and al, 0x20; mov dword ptr [esp], eax; call 0x984e0; add esp, 0x18; pop ebx; ret; 
0x001046a7: and al, 0x20; mov dword ptr [esp], eax; call 0x98bc0; add esp, 0x18; pop ebx; ret; 
0x00040e9d: and al, 0x20; mov dword ptr [esp], eax; call 0x99b00; add esp, 0x1c; ret; 
0x00040ecd: and al, 0x20; mov dword ptr [esp], eax; call 0x99ba0; add esp, 0x1c; ret; 
0x00099c6e: and al, 0x20; mov dword ptr [esp], eax; call 0x9b9e0; add esp, 0x18; pop ebx; ret; 
0x00099d2e: and al, 0x20; mov dword ptr [esp], eax; call 0x9e640; add esp, 0x18; pop ebx; ret; 
0x00099d6e: and al, 0x20; mov dword ptr [esp], eax; call 0xa1190; add esp, 0x18; pop ebx; ret; 
0x000a3926: and al, 0x20; mov dword ptr [esp], eax; call 0xa44c0; add esp, 0x18; pop ebx; ret; 
0x000a396e: and al, 0x20; mov dword ptr [esp], eax; call 0xa4ca0; add esp, 0x18; pop ebx; ret; 
0x000a5fd5: and al, 0x20; mov dword ptr [esp], eax; call 0xa5ff0; add esp, 0x1c; ret; 
0x000a842a: and al, 0x20; mov dword ptr [esp], eax; call 0xa7e90; add esp, 0x18; pop ebx; ret; 
0x000a7be1: and al, 0x20; mov dword ptr [esp], eax; call 0xa94b0; add esp, 0x18; pop ebx; ret; 
0x000b8765: and al, 0x20; mov dword ptr [esp], eax; call 0xb85e0; add esp, 0x18; pop ebx; ret; 
0x000b8a65: and al, 0x20; mov dword ptr [esp], eax; call 0xb8bd0; add esp, 0x18; pop ebx; ret; 
0x0012df51: and al, 0x20; mov dword ptr [esp], eax; call 0xc55b0; add esp, 0x18; pop ebx; ret; 
0x0012df81: and al, 0x20; mov dword ptr [esp], eax; call 0xc5640; add esp, 0x18; pop ebx; ret; 
0x000df685: and al, 0x20; mov dword ptr [esp], eax; call 0xde7c0; add esp, 0x1c; ret; 
0x00102b8f: and al, 0x20; mov dword ptr [esp], eax; call 0xdf720; add esp, 0x18; pop ebx; ret; 
0x0012e0a1: and al, 0x20; mov dword ptr [esp], eax; call 0xe00b0; add esp, 0x18; pop ebx; ret; 
0x00102ef7: and al, 0x20; mov dword ptr [esp], eax; call 0xe0500; add esp, 0x18; pop ebx; ret; 
0x000e63c1: and al, 0x20; mov dword ptr [esp], eax; call 0xe6d00; add esp, 0x18; pop ebx; ret; 
0x00102f2f: and al, 0x20; mov dword ptr [esp], eax; call 0xe7c80; add esp, 0x18; pop ebx; ret; 
0x000eac9d: and al, 0x20; mov dword ptr [esp], eax; call 0xea6f0; add esp, 0x1c; ret; 
0x000eb4cb: and al, 0x20; mov dword ptr [esp], eax; call 0xeb4e0; add esp, 0x18; pop ebx; ret; 
0x000ec5bd: and al, 0x20; mov dword ptr [esp], eax; call 0xec330; add esp, 0x1c; ret; 
0x000ec59d: and al, 0x20; mov dword ptr [esp], eax; call 0xec440; add esp, 0x1c; ret; 
0x000fb795: and al, 0x20; mov dword ptr [esp], eax; call 0xfa420; add esp, 0x18; pop ebx; ret; 
0x000fab00: and al, 0x20; mov dword ptr [esp], eax; call edx; 
0x00124ab0: and al, 0x20; mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 0x10]; 
0x00124dbc: and al, 0x20; mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 0xc]; 
0x00124a48: and al, 0x20; mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 4]; 
0x000197eb: and al, 0x20; mov dword ptr [esp], edx; call eax; 
0x000197eb: and al, 0x20; mov dword ptr [esp], edx; call eax; add esp, 0x18; pop ebx; ret; 
0x000319ce: and al, 0x20; mov dword ptr [esp], esi; mov dword ptr [esp + 8], ecx; mov ecx, dword ptr [esp + 0x2c]; mov dword ptr [esp + 4], ecx; call edi; 
0x000fb8cd: and al, 0x20; mov eax, dword ptr [ebx + 0x386c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000fb90d: and al, 0x20; mov eax, dword ptr [ebx + 0x3870]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000fb94d: and al, 0x20; mov eax, dword ptr [ebx + 0x3874]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000fbcad: and al, 0x20; mov eax, dword ptr [ebx + 0x38a0]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000fbced: and al, 0x20; mov eax, dword ptr [ebx + 0x38a4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000fbd2d: and al, 0x20; mov eax, dword ptr [ebx + 0x38a8]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000fbd6d: and al, 0x20; mov eax, dword ptr [ebx + 0x38ac]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000fbdfd: and al, 0x20; mov eax, dword ptr [ebx + 0x38b4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0012e89d: and al, 0x20; mov eax, dword ptr [ebx + 0x38c0]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0012e8dd: and al, 0x20; mov eax, dword ptr [ebx + 0x38c4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0012e96d: and al, 0x20; mov eax, dword ptr [ebx + 0x38cc]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000fbedb: and al, 0x20; mov eax, dword ptr [ebx + 0x38dc]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000fbfcd: and al, 0x20; mov eax, dword ptr [ebx + 0x38e8]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000fc05d: and al, 0x20; mov eax, dword ptr [ebx + 0x38f0]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000fc09d: and al, 0x20; mov eax, dword ptr [ebx + 0x38f4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0006428b: and al, 0x20; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x48]; 
0x000982ce: and al, 0x20; mov ebp, dword ptr [esp + 0x24]; add esp, 0x28; ret; 
0x0002ef99: and al, 0x20; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000eebe5: and al, 0x20; mov ebx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x000efb76: and al, 0x20; mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000eaea2: and al, 0x20; mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000de0ca: and al, 0x20; mov ecx, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x18]; xchg edi, ebx; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000eb10d: and al, 0x20; mov edi, dword ptr [esp + 0x24]; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x000eeee2: and al, 0x20; mov edi, dword ptr [esp + 0x24]; mov ebp, 8; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x00127557: and al, 0x20; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 4; 
0x000d9c5c: and al, 0x20; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 8; 
0x00019bcd: and al, 0x20; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000eeae7: and al, 0x20; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; int 0x80; 
0x000e0e12: and al, 0x20; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; mov eax, 0x110; call dword ptr gs:[0x10]; 
0x000e4f12: and al, 0x20; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x0011cac9: and al, 0x20; mov edx, dword ptr [eax + 8]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x000efb38: and al, 0x20; mov edx, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000eeb0e: and al, 0x20; mov edx, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000ef38e: and al, 0x20; mov edx, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x153; call dword ptr gs:[0x10]; 
0x000effce: and al, 0x20; mov edx, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x15b; call dword ptr gs:[0x10]; 
0x000f002e: and al, 0x20; mov edx, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x15c; call dword ptr gs:[0x10]; 
0x000e7e97: and al, 0x20; mov edx, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x00019867: and al, 0x20; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0002d85a: and al, 0x20; mov esi, dword ptr [esp + 0x70]; mov edi, dword ptr [esp + 0x74]; mov ebp, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x000e96d2: and al, 0x20; mov esi, ecx; xchg edi, ebx; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x0006b8e6: and al, 0x20; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000c55d9: and al, 0x20; test esi, esi; cmovns ecx, esi; xchg edi, ebx; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000e960a: and al, 0x20; xchg edi, ebx; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x000ff04b: and al, 0x20; xchg edi, ebx; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0016a7c0: and al, 0x21; lcall ptr [eax]; ret 1; 
0x00054df7: and al, 0x24; adc byte ptr [eax], al; add byte ptr [ebx + 0x102824bc], cl; add byte ptr [eax], al; add esp, 0x102c; ret; 
0x000692f8: and al, 0x24; add dword ptr [eax], eax; add byte ptr [ebx + 0x12824ac], cl; add byte ptr [eax], al; add esp, 0x12c; ret; 
0x0011bcc4: and al, 0x24; add dword ptr [eax], eax; add byte ptr [ebx + 0x12824bc], cl; add byte ptr [eax], al; add esp, 0x12c; ret; 
0x001117da: and al, 0x24; add esp, 0x18; pop ebx; ret; 
0x000276b6: and al, 0x24; add esp, 0x1c; ret; 
0x000982d2: and al, 0x24; add esp, 0x28; ret; 
0x000a7b3e: and al, 0x24; add esp, 0x2c; imul eax, edx; ret; 
0x00069474: and al, 0x24; add esp, 0x2c; ret; 
0x000e68d7: and al, 0x24; cmp eax, -1; cmovne eax, esi; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000a7b11: and al, 0x24; div edi; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x00126d33: and al, 0x24; mov dword ptr [esi + 0xc], eax; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000e013c: and al, 0x24; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x000e098c: and al, 0x24; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x000faaf8: and al, 0x24; mov dword ptr [esp + 4], eax; mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call edx; 
0x00064ecb: and al, 0x24; mov dword ptr [esp + 4], ecx; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x000fbea5: and al, 0x24; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x20]; mov dword ptr [esp], edx; call eax; 
0x0006f2d1: and al, 0x24; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x40]; 
0x00064f0f: and al, 0x24; mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esi + 0x98]; mov dword ptr [esp], edx; call eax; 
0x0007250c: and al, 0x24; mov dword ptr [esp], eax; mov dword ptr [esp + 4], ecx; call dword ptr [edx + 0x20]; 
0x0007250c: and al, 0x24; mov dword ptr [esp], eax; mov dword ptr [esp + 4], ecx; call dword ptr [edx + 0x20]; add esp, 0x1c; ret; 
0x001118c5: and al, 0x24; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x00124d05: and al, 0x24; mov dword ptr [esp], edx; mov dword ptr [esp + 8], esi; mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 8]; 
0x0006f5e4: and al, 0x24; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x20]; 
0x0007b28a: and al, 0x24; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call eax; 
0x000eb111: and al, 0x24; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x00113854: and al, 0x24; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp], ebp; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x18]; 
0x0012ba7c: and al, 0x24; mov eax, esi; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000eeee6: and al, 0x24; mov ebp, 8; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x0012755b: and al, 0x24; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 4; 
0x000d9c60: and al, 0x24; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 8; 
0x00019bd1: and al, 0x24; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000eeaeb: and al, 0x24; mov ebp, dword ptr [esp + 0x28]; int 0x80; 
0x000e0e16: and al, 0x24; mov ebp, dword ptr [esp + 0x28]; mov eax, 0x110; call dword ptr gs:[0x10]; 
0x000e4f16: and al, 0x24; mov ebp, dword ptr [esp + 0x28]; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x0011f6f6: and al, 0x24; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; mov edx, eax; mov eax, edx; ret; 
0x0001986b: and al, 0x24; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0011c9e6: and al, 0x24; mov edx, dword ptr [eax + 8]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x000df7a5: and al, 0x24; mov edx, dword ptr [esp + 0x24]; xchg ebx, edx; mov eax, 0xb7; call dword ptr gs:[0x10]; 
0x000ff045: and al, 0x24; mov edx, esi; mov dword ptr [esp + 0x20], eax; xchg edi, ebx; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0002ef95: and al, 0x24; mov esi, dword ptr [esp + 0x20]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x001007ae: and al, 0x24; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret 4; 
0x000caf62: and al, 0x24; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000ef1ca: and al, 0x24; mov esi, dword ptr [esp + 0x28]; mov edi, dword ptr [esp + 0x2c]; mov ebp, dword ptr [esp + 0x30]; add esp, 0x34; ret; 
0x000b55e5: and al, 0x24; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0012becd: and al, 0x24; test eax, eax; cmove eax, edi; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000df7a9: and al, 0x24; xchg ebx, edx; mov eax, 0xb7; call dword ptr gs:[0x10]; 
0x0016eaf4: and al, 0x25; add eax, dword ptr [eax]; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; jmp eax; 
0x0002e036: and al, 0x28; add dword ptr [eax], eax; add byte ptr [ebx + 0x12c24ac], cl; add byte ptr [eax], al; add esp, 0x130; ret; 
0x0011d352: and al, 0x28; add esp, 0x10; pop esi; pop edi; pop ebp; ret; 
0x0011f6fa: and al, 0x28; add esp, 0x2c; mov edx, eax; mov eax, edx; ret; 
0x001007b2: and al, 0x28; add esp, 0x2c; ret 4; 
0x000d9c64: and al, 0x28; add esp, 0x2c; ret 8; 
0x0001986f: and al, 0x28; add esp, 0x2c; ret; 
0x0007f65b: and al, 0x28; add esp, 0x50; pop esi; pop edi; pop ebp; ret; 
0x00019f30: and al, 0x28; call 0x19b70; mov eax, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x1c]; add esp, 0x24; ret; 
0x00076e27: and al, 0x28; call dword ptr [ebp]; 
0x00076d06: and al, 0x28; call eax; 
0x0016eb90: and al, 0x28; cld; call esp; 
0x00127a0d: and al, 0x28; cmovbe eax, edx; add esp, 0x2c; ret; 
0x000eeaef: and al, 0x28; int 0x80; 
0x0011efee: and al, 0x28; lea edx, dword ptr [esp + 0x28]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x0011ef06: and al, 0x28; lea edx, dword ptr [esp + 0x28]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x0011e686: and al, 0x28; lea edx, dword ptr [esp + 0x28]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x0006946d: and al, 0x28; mov dword ptr [esi + 0xc], edx; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; ret; 
0x00076e48: and al, 0x28; mov dword ptr [esp + 0x2c], ecx; call eax; 
0x00076ce2: and al, 0x28; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x0011f025: and al, 0x28; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x0011eff2: and al, 0x28; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x0011ef3d: and al, 0x28; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x20]; 
0x0011ef0a: and al, 0x28; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x0011e68a: and al, 0x28; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x0011e6bd: and al, 0x28; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x0011625b: and al, 0x28; mov dword ptr [esp], edi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x000e0e1a: and al, 0x28; mov eax, 0x110; call dword ptr gs:[0x10]; 
0x000e4f1a: and al, 0x28; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000eebed: and al, 0x28; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x000ce8a1: and al, 0x28; mov eax, dword ptr [esp + 0x1c]; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; ret; 
0x00118cd5: and al, 0x28; mov eax, dword ptr [esp + 0x44]; call dword ptr [eax + 0x14]; 
0x000ef1ce: and al, 0x28; mov edi, dword ptr [esp + 0x2c]; mov ebp, dword ptr [esp + 0x30]; add esp, 0x34; ret; 
0x0010f944: and al, 0x28; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; ret; 
0x0006cebc: and al, 0x29; call 0x82b134c; call dword ptr [edx + 0x38]; 
0x000711e1: and al, 0x29; ret 0x5489; 
0x00056164: and al, 0x29; ret 0x838d; 
0x0005f906: and al, 0x29; ret 0x9589; 
0x00072335: and al, 0x29; ret 0xc281; 
0x0011465c: and al, 0x29; ret 0xd739; 
0x0006b8ad: and al, 0x29; ret 0xfac1; 
0x0016e444: and al, 0x2b; add eax, dword ptr [eax]; hlt; ret 0xfffb; 
0x001189e7: and al, 0x2c; add al, 0; add byte ptr [ecx - 0x7cf5740e], cl; ret 0x8d04; 
0x0011260b: and al, 0x2c; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000e019e: and al, 0x2c; add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x000ce622: and al, 0x2c; add esp, 0x30; pop esi; pop edi; pop ebp; ret; 
0x000eb49f: and al, 0x2c; add esp, 0x38; pop ebx; ret; 
0x00127cc2: and al, 0x2c; add esp, 0x40; pop esi; pop edi; pop ebp; ret; 
0x00076ce6: and al, 0x2c; call dword ptr [eax]; 
0x001127c0: and al, 0x2c; call dword ptr [edx + 0x10]; 
0x00076e4c: and al, 0x2c; call eax; 
0x0011c2ec: and al, 0x2c; mov dword ptr [eax], 0xf; mov eax, dword ptr [ebp + 4]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x0011f03c: and al, 0x2c; mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x0011ef54: and al, 0x2c; mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x20]; 
0x0011e6d3: and al, 0x2c; mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x000eec9a: and al, 0x2c; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x00123d7a: and al, 0x2c; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0xbc; call dword ptr gs:[0x10]; 
0x00123e3d: and al, 0x2c; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0xbd; call dword ptr gs:[0x10]; 
0x00118605: and al, 0x2c; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x000319d9: and al, 0x2c; mov dword ptr [esp + 4], ecx; call edi; 
0x001185e0: and al, 0x2c; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x0011b5e7: and al, 0x2c; mov dword ptr [esp + 4], edi; mov dword ptr [esp], eax; call edx; 
0x0011f009: and al, 0x2c; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x0011ef21: and al, 0x2c; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x0011e6a1: and al, 0x2c; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x0011b488: and al, 0x2c; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], 0xd; mov dword ptr [esp], eax; call dword ptr [edx + 0x14]; 
0x0009871e: and al, 0x2c; mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; call esi; 
0x000a5eb9: and al, 0x2c; mov dword ptr [esp], edx; call edi; 
0x000e88b2: and al, 0x2c; mov eax, edx; add esp, 0x3c; ret; 
0x000ef1d2: and al, 0x2c; mov ebp, dword ptr [esp + 0x30]; add esp, 0x34; ret; 
0x000e70a1: and al, 0x2c; mov ebx, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000e7601: and al, 0x2c; mov ebx, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000b3896: and al, 0x2c; mov esi, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x34]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret 4; 
0x0001bb4f: and al, 0x2c; mov esi, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x34]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret 8; 
0x0001ba2d: and al, 0x2c; mov esi, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x34]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x000dfcb6: and al, 0x2c; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000e89c3: and al, 0x2c; xchg edi, ebx; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x000e602f: and al, 0x2d; movzx eax, byte ptr [esi + 0x23]; mov byte ptr [esp + 0x2f], al; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0005366f: and al, 0x2e; add byte ptr [eax], al; add byte ptr [ecx - 0x17fbdbbc], cl; ret; 
0x000e6037: and al, 0x2f; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0011ce02: and al, 0x30; add eax, 0x74890000; and al, 4; mov dword ptr [esp], edx; call dword ptr [eax + 0xc]; 
0x000ef1d6: and al, 0x30; add esp, 0x34; ret; 
0x000ed8b9: and al, 0x30; add esp, 0x3c; ret; 
0x0010e58d: and al, 0x30; call 0x10cc60; add esp, 0x28; pop ebx; ret; 
0x001216f3: and al, 0x30; call 0x120d70; sub esp, 0x14; add esp, 0x2c; ret; 
0x000b08ed: and al, 0x30; call 0xae970; add esp, 0x2c; ret; 
0x000b2dcd: and al, 0x30; call 0xb09a0; add esp, 0x2c; ret; 
0x000d82f0: and al, 0x30; call 0xd7850; sub esp, 0x14; add esp, 0x2c; ret; 
0x000d8384: and al, 0x30; call 0xd7cd0; sub esp, 0x1c; add esp, 0x2c; ret; 
0x000b5184: and al, 0x30; mov dword ptr [esp + 0xc], eax; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call edi; 
0x0011d946: and al, 0x30; mov dword ptr [esp + 4], 0; call dword ptr [eax + 0x14]; 
0x00028e80: and al, 0x30; mov dword ptr [esp + 4], eax; call 0x28dc0; add esp, 0x28; pop ebx; ret; 
0x000b3dc4: and al, 0x30; mov dword ptr [esp + 4], eax; call 0xb46f0; add esp, 0x2c; ret; 
0x000b4344: and al, 0x30; mov dword ptr [esp + 4], eax; call 0xb48f0; add esp, 0x2c; ret; 
0x00111992: and al, 0x30; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x18], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x0012b1c5: and al, 0x30; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x48]; 
0x000988a9: and al, 0x30; mov dword ptr [esp + 4], edx; mov eax, dword ptr [eax + 8]; mov dword ptr [esp], eax; call esi; 
0x000a5eb1: and al, 0x30; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x2c]; mov dword ptr [esp], edx; call edi; 
0x00101a85: and al, 0x30; mov dword ptr [esp], eax; call 0x101ab0; add esp, 0x2c; ret; 
0x00101bdd: and al, 0x30; mov dword ptr [esp], eax; call 0x101bf0; add esp, 0x2c; ret; 
0x00104a6d: and al, 0x30; mov dword ptr [esp], eax; call 0x104a80; add esp, 0x2c; ret; 
0x0010a54b: and al, 0x30; mov dword ptr [esp], eax; call 0x109f30; add esp, 0x28; pop ebx; ret; 
0x0010e3d5: and al, 0x30; mov dword ptr [esp], eax; call 0x10e2e0; add esp, 0x2c; ret; 
0x0010e515: and al, 0x30; mov dword ptr [esp], eax; call 0x10e3f0; add esp, 0x2c; ret; 
0x0010ec15: and al, 0x30; mov dword ptr [esp], eax; call 0x10e5a0; add esp, 0x2c; ret; 
0x00028df9: and al, 0x30; mov dword ptr [esp], eax; call 0x28580; add esp, 0x28; pop ebx; ret; 
0x00028e41: and al, 0x30; mov dword ptr [esp], eax; call 0x28dc0; add esp, 0x28; pop ebx; ret; 
0x00032145: and al, 0x30; mov dword ptr [esp], eax; call 0x31e40; add esp, 0x2c; ret; 
0x00033e96: and al, 0x30; mov dword ptr [esp], eax; call 0x340e0; add esp, 0x28; pop ebx; ret; 
0x000345e5: and al, 0x30; mov dword ptr [esp], eax; call 0x340e0; add esp, 0x2c; ret; 
0x00033f36: and al, 0x30; mov dword ptr [esp], eax; call 0x34600; add esp, 0x28; pop ebx; ret; 
0x00034b15: and al, 0x30; mov dword ptr [esp], eax; call 0x34600; add esp, 0x2c; ret; 
0x00033fd6: and al, 0x30; mov dword ptr [esp], eax; call 0x34b30; add esp, 0x28; pop ebx; ret; 
0x000352b5: and al, 0x30; mov dword ptr [esp], eax; call 0x34b30; add esp, 0x2c; ret; 
0x00034076: and al, 0x30; mov dword ptr [esp], eax; call 0x352d0; add esp, 0x28; pop ebx; ret; 
0x000359f5: and al, 0x30; mov dword ptr [esp], eax; call 0x352d0; add esp, 0x2c; ret; 
0x0003fa56: and al, 0x30; mov dword ptr [esp], eax; call 0x3fa70; add esp, 0x28; pop ebx; ret; 
0x00065c69: and al, 0x30; mov dword ptr [esp], eax; call 0x65c80; add esp, 0x28; pop ebx; ret; 
0x0006ec39: and al, 0x30; mov dword ptr [esp], eax; call 0x6ea10; add esp, 0x28; pop ebx; ret; 
0x00040ca9: and al, 0x30; mov dword ptr [esp], eax; call 0x98e00; add esp, 0x28; pop ebx; ret; 
0x00040dc9: and al, 0x30; mov dword ptr [esp], eax; call 0x98e50; add esp, 0x28; pop ebx; ret; 
0x00104c37: and al, 0x30; mov dword ptr [esp], eax; call 0x991e0; add esp, 0x28; pop ebx; ret; 
0x00104c87: and al, 0x30; mov dword ptr [esp], eax; call 0x99570; add esp, 0x28; pop ebx; ret; 
0x000999f6: and al, 0x30; mov dword ptr [esp], eax; call 0x99dc0; add esp, 0x28; pop ebx; ret; 
0x00099a96: and al, 0x30; mov dword ptr [esp], eax; call 0x9a250; add esp, 0x28; pop ebx; ret; 
0x00099b36: and al, 0x30; mov dword ptr [esp], eax; call 0x9a6d0; add esp, 0x28; pop ebx; ret; 
0x00099bd6: and al, 0x30; mov dword ptr [esp], eax; call 0x9ad90; add esp, 0x28; pop ebx; ret; 
0x00098e41: and al, 0x30; mov dword ptr [esp], eax; call 0xa5b70; add esp, 0x28; pop ebx; ret; 
0x000b0936: and al, 0x30; mov dword ptr [esp], eax; call 0xb2da0; add esp, 0x28; pop ebx; ret; 
0x000c52e9: and al, 0x30; mov dword ptr [esp], eax; call 0xc4000; add esp, 0x28; pop ebx; ret; 
0x000c51f1: and al, 0x30; mov dword ptr [esp], eax; call 0xc5110; add esp, 0x28; pop ebx; ret; 
0x0012dfc4: and al, 0x30; mov dword ptr [esp], eax; call 0xd81a0; add esp, 0x28; pop ebx; ret; 
0x000d8aa1: and al, 0x30; mov dword ptr [esp], eax; call 0xd8b90; add esp, 0x28; pop ebx; ret; 
0x0012e571: and al, 0x30; mov dword ptr [esp], eax; call 0xe1090; add esp, 0x28; pop ebx; ret; 
0x0012eaad: and al, 0x30; mov dword ptr [esp], eax; call 0xffe30; add esp, 0x2c; ret; 
0x0003162f: and al, 0x30; mov dword ptr [esp], ecx; call edi; 
0x0001985e: and al, 0x30; mov dword ptr [esp], edx; call eax; 
0x0006febe: and al, 0x30; mov eax, dword ptr [ebp + eax + 0x94]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x48]; 
0x0012af12: and al, 0x30; mov eax, dword ptr [esi + 0x4c]; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; mov dword ptr [esp + 8], edx; call dword ptr [eax + 0x3c]; 
0x0006fa4d: and al, 0x30; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp + 8], edx; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; call dword ptr [eax + 0x3c]; 
0x0014a46f: and al, 0x30; mov eax, esi; add eax, dword ptr [edx + 8]; mov dword ptr [esp], eax; call edi; 
0x000e5b79: and al, 0x30; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x000e0138: and al, 0x30; mov ecx, dword ptr [esp + 0x24]; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x000e0988: and al, 0x30; mov ecx, dword ptr [esp + 0x24]; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x000b389a: and al, 0x30; mov edi, dword ptr [esp + 0x34]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret 4; 
0x0001bb53: and al, 0x30; mov edi, dword ptr [esp + 0x34]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret 8; 
0x0001ba31: and al, 0x30; mov edi, dword ptr [esp + 0x34]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x0011c996: and al, 0x30; mov edx, dword ptr [eax + 8]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x00019e38: and al, 0x30; mov edx, dword ptr [esp + 0x34]; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x40]; add esp, 0x44; ret; 
0x0006cbcc: and al, 0x30; mov esi, dword ptr [esp + 0x34]; mov edi, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x000e6253: and al, 0x30; mov esi, dword ptr [esp + 0x34]; mov edi, dword ptr [esp + 0x38]; mov ebp, dword ptr [esp + 0x3c]; add esp, 0x40; ret; 
0x000d827c: and al, 0x30; setne al; mov edi, dword ptr [esp + 0x34]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x00169adc: and al, 0x31; add dword ptr [eax], eax; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x0012eac5: and al, 0x31; leave; call 0x100770; sub esp, 4; add esp, 0x1c; ret; 
0x0012eae5: and al, 0x31; leave; call 0x100810; sub esp, 4; add esp, 0x1c; ret; 
0x0012eb05: and al, 0x31; leave; call 0x1008b0; sub esp, 4; add esp, 0x1c; ret; 
0x0012eb25: and al, 0x31; leave; call 0x100950; sub esp, 4; add esp, 0x1c; ret; 
0x0012eb45: and al, 0x31; leave; call 0x1009f0; sub esp, 4; add esp, 0x1c; ret; 
0x0012eb85: and al, 0x31; leave; call 0x100bd0; sub esp, 4; add esp, 0x1c; ret; 
0x0012ebc5: and al, 0x31; leave; call 0x100d10; sub esp, 4; add esp, 0x1c; ret; 
0x0012ec05: and al, 0x31; leave; call 0x100e50; sub esp, 4; add esp, 0x1c; ret; 
0x00127846: and al, 0x31; rol byte ptr [eax + 0x747a097e], 9; add esp, 0x24; pop esi; pop edi; ret; 
0x00054af9: and al, 0x34; adc byte ptr [eax], al; add byte ptr [ebx + 0x103824ac], cl; add byte ptr [eax], al; add esp, 0x103c; ret; 
0x000547dd: and al, 0x34; add al, 0; add byte ptr [ebx + 0x43824ac], cl; add byte ptr [eax], al; add esp, 0x43c; ret; 
0x001198f9: and al, 0x34; add al, 0; add byte ptr [ebx + 0x43824bc], cl; add byte ptr [eax], al; add esp, 0x43c; ret; 
0x001187e8: and al, 0x34; add dword ptr [eax], eax; add byte ptr [ebx + 0x13824ac], cl; add byte ptr [eax], al; add esp, 0x13c; ret; 
0x0002ddcd: and al, 0x34; add dword ptr [eax], eax; add byte ptr [ebx + 0x13824bc], cl; add byte ptr [eax], al; add esp, 0x13c; ret; 
0x0006cbc0: and al, 0x34; add esp, 0x3c; ret; 
0x00033153: and al, 0x34; mov dword ptr [ecx + 8], eax; mov eax, ecx; mov dword ptr [ecx + 0xc], edx; add esp, 0x3c; ret 4; 
0x0007b122: and al, 0x34; mov dword ptr [esp + 4], edx; lea edx, dword ptr [edi + 0x19]; mov dword ptr [esp], edx; call eax; 
0x00019856: and al, 0x34; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x30]; mov dword ptr [esp], edx; call eax; 
0x00067047: and al, 0x34; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x2c]; 
0x000b389e: and al, 0x34; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret 4; 
0x0001bb57: and al, 0x34; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret 8; 
0x0001ba35: and al, 0x34; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x0006cbd0: and al, 0x34; mov edi, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x000e6257: and al, 0x34; mov edi, dword ptr [esp + 0x38]; mov ebp, dword ptr [esp + 0x3c]; add esp, 0x40; ret; 
0x000ba6b2: and al, 0x34; mov edx, 1; xchg ebx, edx; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0006b18c: and al, 0x34; mov esi, dword ptr [esp + 0x20]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000e5b75: and al, 0x34; mov esi, dword ptr [esp + 0x30]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x00019e3c: and al, 0x34; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x40]; add esp, 0x44; ret; 
0x00158788: and al, 0x36; adc eax, 0x42d35a1d; cmp al, 0xe; push esp; jmp dword ptr [ebx - 0x40]; 
0x000e5327: and al, 0x38; add al, 0; add byte ptr [ecx], cl; ret 0x850f; 
0x000b38a2: and al, 0x38; add esp, 0x3c; ret 4; 
0x0001bb5b: and al, 0x38; add esp, 0x3c; ret 8; 
0x0001ba39: and al, 0x38; add esp, 0x3c; ret; 
0x0010e2a5: and al, 0x38; mov dword ptr [esp + 8], edx; call 0x10d6a0; add esp, 0x2c; ret; 
0x000b08e6: and al, 0x38; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x30]; call 0xae970; add esp, 0x2c; ret; 
0x000b2dc6: and al, 0x38; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x30]; call 0xb09a0; add esp, 0x2c; ret; 
0x000dc3a5: and al, 0x38; mov eax, ebx; sub eax, dword ptr [ebx + edi*4 - 0xc6c40]; jmp eax; 
0x000e625b: and al, 0x38; mov ebp, dword ptr [esp + 0x3c]; add esp, 0x40; ret; 
0x000ef165: and al, 0x38; xchg edi, ebx; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000a81ed: and al, 0x39; aad 0xf; lahf; ret 0xe8c1; 
0x000ee8f8: and al, 0x39; or byte ptr [edi], 0x95; ret 0xcbeb; 
0x00056104: and al, 0x39; ret 0x178b; 
0x000af31f: and al, 0x39; ret 0x830f; 
0x000c44d5: and al, 0x39; ret 0x840f; 
0x000fb75f: and al, 0x39; sal byte ptr [edx - 0xc], 1; xor eax, eax; pop esi; ret; 
0x000e625f: and al, 0x3c; add esp, 0x40; ret; 
0x000478cf: and al, 0x3c; and byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd285; 
0x000e61b2: and al, 0x3c; call 0x129d73; add ebx, 0xbce3b; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000b518c: and al, 0x3c; mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call edi; 
0x0007a100: and al, 0x3c; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp], edx; call eax; 
0x00113858: and al, 0x3c; mov dword ptr [esp], ebp; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x18]; 
0x00078f04: and al, 0x3c; mov dword ptr [esp], ebp; mov dword ptr [esp + 4], edx; call eax; 
0x00079ded: and al, 0x3c; mov dword ptr [esp], ebp; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x14]; mov dword ptr [esp + 4], edx; call eax; 
0x00079b55: and al, 0x3c; mov dword ptr [esp], ebp; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x40]; mov dword ptr [esp + 4], edx; call eax; 
0x0006cf52: and al, 0x3c; mov dword ptr [esp], edi; call dword ptr [edi + 0xc]; 
0x00079856: and al, 0x3c; mov dword ptr [esp], edi; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x18]; mov dword ptr [esp + 4], edx; call eax; 
0x0007952c: and al, 0x3c; mov dword ptr [esp], esi; mov dword ptr [esp + 4], ebp; mov dword ptr [esp + 8], edx; call eax; 
0x00116490: and al, 0x3c; mov eax, dword ptr [edx]; mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x000ef161: and al, 0x3c; mov edi, dword ptr [esp + 0x38]; xchg edi, ebx; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x00019e40: and al, 0x3c; mov edi, dword ptr [esp + 0x40]; add esp, 0x44; ret; 
0x000d7dc7: and al, 0x3c; mov esi, dword ptr [esp + 0x40]; mov edi, dword ptr [esp + 0x44]; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret 0x1c; 
0x0011b5bc: and al, 0x3c; mov esi, dword ptr [esp + 0x40]; mov edi, dword ptr [esp + 0x44]; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret 8; 
0x0001a32c: and al, 0x3c; mov esi, dword ptr [esp + 0x40]; mov edi, dword ptr [esp + 0x44]; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x0002d8a7: and al, 0x40; add byte ptr [eax], al; add byte ptr [eax], al; fld xword ptr [esp + 0x40]; add esp, 0x7c; ret; 
0x0011e53c: and al, 0x40; add esp, 0x3c; ret; 
0x00019e44: and al, 0x40; add esp, 0x44; ret; 
0x0002d8af: and al, 0x40; add esp, 0x7c; ret; 
0x000ddbc7: and al, 0x40; mov dword ptr [esp + 4], eax; call 0xddf70; add esp, 0x3c; ret; 
0x00079b60: and al, 0x40; mov dword ptr [esp + 4], edx; call eax; 
0x00065888: and al, 0x40; mov dword ptr [esp + 8], edi; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x0011b125: and al, 0x40; mov dword ptr [esp], eax; call 0x11ad10; add esp, 0x3c; ret; 
0x00129c52: and al, 0x40; mov edi, dword ptr [esp + 0x44]; mov dword ptr [edx], ecx; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x000d7dcb: and al, 0x40; mov edi, dword ptr [esp + 0x44]; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret 0x1c; 
0x0011b5c0: and al, 0x40; mov edi, dword ptr [esp + 0x44]; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret 8; 
0x0001a330: and al, 0x40; mov edi, dword ptr [esp + 0x44]; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x00083065: and al, 0x40; mov edx, ebx; sub edx, dword ptr [ebx + edi*4 - 0x11ff80]; jmp edx; 
0x00054c7f: and al, 0x40; mov esi, dword ptr [esp + 0x44]; mov edi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x00019eb4: and al, 0x40; neg eax; adc edx, 0; add esp, 0x44; neg edx; ret; 
0x0002ec5b: and al, 0x44; add dword ptr [eax], eax; add byte ptr [ebx + 0x14824ac], cl; add byte ptr [eax], al; add esp, 0x14c; ret; 
0x000419e4: and al, 0x44; add esp, 0x30; pop esi; pop edi; pop ebp; ret; 
0x000f2097: and al, 0x44; call 0xf1f70; add esp, 4; ret; 
0x00118cd9: and al, 0x44; call dword ptr [eax + 0x14]; 
0x00169fa0: and al, 0x44; int1; jmp esp; 
0x0006745a: and al, 0x44; mov dword ptr [eax], esi; mov dword ptr [eax + 4], edx; mov eax, dword ptr [ebp + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x00129c56: and al, 0x44; mov dword ptr [edx], ecx; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x001228a8: and al, 0x44; mov dword ptr [esp], ecx; call 0x122060; add esp, 0x38; pop ebx; ret; 
0x000d7dcf: and al, 0x44; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret 0x1c; 
0x0011b5c4: and al, 0x44; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret 8; 
0x0001a334: and al, 0x44; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x00054c83: and al, 0x44; mov edi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x00117846: and al, 0x44; mov esi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x0016cc18: and al, 0x45; stc; jmp dword ptr [eax - 0x67]; 
0x000d7dd3: and al, 0x48; add esp, 0x4c; ret 0x1c; 
0x0011b5c8: and al, 0x48; add esp, 0x4c; ret 8; 
0x0001a338: and al, 0x48; add esp, 0x4c; ret; 
0x0006d915: and al, 0x48; mov dword ptr [esp], edx; call dword ptr [edx + 0x10]; 
0x0007b012: and al, 0x48; mov dword ptr [esp], edx; mov dword ptr [esp + 8], ecx; lea ecx, dword ptr [edi + ebp + 1]; mov dword ptr [esp + 4], ecx; call eax; 
0x001194c6: and al, 0x4c; add al, 0; add al, ch; mov dword ptr [0x81000108], eax; ret; 
0x0011f919: and al, 0x4c; add esp, 0x54; pop ebx; pop esi; mov eax, edx; ret; 
0x00054a09: and al, 0x4c; mov esi, dword ptr [esp + 0x50]; mov edi, dword ptr [esp + 0x54]; mov ebp, dword ptr [esp + 0x58]; add esp, 0x5c; ret; 
0x000eeb7d: and al, 0x50; mov dword ptr [esp + 0x1c], eax; xchg ebx, ecx; mov eax, 0x95; call dword ptr gs:[0x10]; 
0x0007b934: and al, 0x50; mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp + 4], esi; mov dword ptr [esp], ecx; call eax; 
0x000e73fa: and al, 0x50; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000e791a: and al, 0x50; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000e7366: and al, 0x50; mov ecx, dword ptr [esp + 0x54]; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000e7886: and al, 0x50; mov ecx, dword ptr [esp + 0x54]; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000e7133: and al, 0x50; mov edi, dword ptr [esp + 0x14]; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000e7693: and al, 0x50; mov edi, dword ptr [esp + 0x14]; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00054a0d: and al, 0x50; mov edi, dword ptr [esp + 0x54]; mov ebp, dword ptr [esp + 0x58]; add esp, 0x5c; ret; 
0x001121a5: and al, 0x50; mov esi, dword ptr [esp + 0x54]; mov edi, dword ptr [esp + 0x58]; add esp, 0x5c; ret; 
0x00169f84: and al, 0x52; add dword ptr [eax], eax; aam 0x41; int1; call dword ptr [eax + 0x52]; 
0x00119597: and al, 0x54; add al, 0; add byte ptr [ebx + 0x45824ac], cl; add byte ptr [eax], al; add esp, 0x45c; ret; 
0x001194e9: and al, 0x54; add al, 0; add byte ptr [ecx - 0x76fbdbb4], cl; add al, 0x24; mov dword ptr [esp + 0x458], ebp; call dword ptr [edx + 8]; 
0x0002f3b6: and al, 0x54; add al, byte ptr [eax]; add byte ptr [ebx + 0x25824ac], cl; add byte ptr [eax], al; add esp, 0x25c; ret; 
0x000e736a: and al, 0x54; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000e788a: and al, 0x54; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0011c992: and al, 0x54; mov dword ptr [esp + 0x30], edx; mov edx, dword ptr [eax + 8]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x0007b83c: and al, 0x54; mov dword ptr [esp], edi; mov dword ptr [esp + 0x18], edx; mov dword ptr [esp + 8], esi; mov dword ptr [esp + 4], ecx; call eax; 
0x00054a11: and al, 0x54; mov ebp, dword ptr [esp + 0x58]; add esp, 0x5c; ret; 
0x001121a9: and al, 0x54; mov edi, dword ptr [esp + 0x58]; add esp, 0x5c; ret; 
0x000e60ab: and al, 0x54; mov esi, dword ptr [esp + 0x58]; mov edi, dword ptr [esp + 0x5c]; mov ebp, dword ptr [esp + 0x60]; add esp, 0x64; ret; 
0x00184724: and al, 0x55; add dword ptr [eax], eax; clc; adc dl, dh; jmp dword ptr [eax]; 
0x0016e060: and al, 0x55; sti; jmp dword ptr [eax + 0x16]; 
0x0016bfec: and al, 0x57; add al, byte ptr [eax]; adc al, 0x36; clc; jmp dword ptr [eax + 0x57]; 
0x0016e080: and al, 0x57; sti; jmp esp; 
0x00079074: and al, 0x58; add al, 0; add al, ch; ret 0xfffc; 
0x0010d6ad: and al, 0x58; add al, byte ptr [eax]; add al, ch; mov esp, 0x810001c6; ret; 
0x00054a15: and al, 0x58; add esp, 0x5c; ret; 
0x0011cbb2: and al, 0x58; mov dword ptr [esp + 0x30], edx; mov edx, dword ptr [eax + 8]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x000e60af: and al, 0x58; mov edi, dword ptr [esp + 0x5c]; mov ebp, dword ptr [esp + 0x60]; add esp, 0x64; ret; 
0x000c51a8: and al, 0x5b; pop esi; ret; 
0x00076f4b: and al, 0x5c; add byte ptr [esp + ecx*4 - 0x75], dh; and dword ptr [esi + edi*8 + 0x4c7ffff], 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [eax]; 
0x0006cf4a: and al, 0x5c; mov dword ptr [esp + 0x10], edi; mov edi, dword ptr [esp + 0x3c]; mov dword ptr [esp], edi; call dword ptr [edi + 0xc]; 
0x001185dc: and al, 0x5c; mov dword ptr [esp + 0x2c], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x00118622: and al, 0x5c; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x000e60b3: and al, 0x5c; mov ebp, dword ptr [esp + 0x60]; add esp, 0x64; ret; 
0x0011c31d: and al, 0x5c; mov esi, dword ptr [esp + 0x60]; mov edi, dword ptr [esp + 0x64]; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret 0xc; 
0x0002350c: and al, 0x5c; mov esi, dword ptr [esp + 0x60]; mov edi, dword ptr [esp + 0x64]; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret 8; 
0x0006633d: and al, 0x5c; mov esi, dword ptr [esp + 0x60]; mov edi, dword ptr [esp + 0x64]; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x00080613: and al, 0x5e; pop edi; pop ebp; ret; 
0x000aadc1: and al, 0x5e; pop edi; ret; 
0x00071ed5: and al, 0x5e; ret; 
0x000e60b7: and al, 0x60; add esp, 0x64; ret; 
0x000b37ea: and al, 0x60; mov dword ptr [esi + 0x10], edx; mov esi, dword ptr [esp + 0x98]; add esp, 0x9c; ret; 
0x00114b76: and al, 0x60; mov dword ptr [esp], edx; call eax; 
0x0006db8e: and al, 0x60; mov eax, dword ptr [ebp + eax + 0x94]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x48]; 
0x0011c321: and al, 0x60; mov edi, dword ptr [esp + 0x64]; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret 0xc; 
0x00023510: and al, 0x60; mov edi, dword ptr [esp + 0x64]; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret 8; 
0x00066341: and al, 0x60; mov edi, dword ptr [esp + 0x64]; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x001127d1: and al, 0x60; mov esi, dword ptr [esp + 0x64]; mov edi, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x000b9e0a: and al, 0x64; add dword ptr [eax], eax; add byte ptr [ebx + 0x16824ac], cl; add byte ptr [eax], al; add esp, 0x16c; ret; 
0x00114b6e: and al, 0x64; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x60]; mov dword ptr [esp], edx; call eax; 
0x0011c325: and al, 0x64; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret 0xc; 
0x00023514: and al, 0x64; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret 8; 
0x00066345: and al, 0x64; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x001127d5: and al, 0x64; mov edi, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x000ddf44: and al, 0x65; mov dword ptr [eax], 0x16; mov eax, 0xffffffff; add esp, 8; ret; 
0x0002e0e0: and al, 0x65; mov dword ptr [eax], 0x16; or eax, 0xffffffff; add esp, 8; ret; 
0x0011c329: and al, 0x68; add esp, 0x6c; ret 0xc; 
0x00023518: and al, 0x68; add esp, 0x6c; ret 8; 
0x00066349: and al, 0x68; add esp, 0x6c; ret; 
0x00168820: and al, 0x6c; in eax, dx; jmp dword ptr [eax]; 
0x0009860c: and al, 0x6c; mov esi, dword ptr [esp + 0x70]; mov edi, dword ptr [esp + 0x74]; mov ebp, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x001092a1: and al, 0x70; add al, 0; add byte ptr [ecx - 0x76efdbac], cl; xor al, 0x24; call eax; 
0x0002d85e: and al, 0x70; mov edi, dword ptr [esp + 0x74]; mov ebp, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x000b464f: and al, 0x70; mov esi, dword ptr [esp + 0x74]; mov edi, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x001096b1: and al, 0x74; add al, 0; add byte ptr [ecx - 0x76efdbac], cl; xor al, 0x24; call eax; 
0x000d247f: and al, 0x74; add dword ptr [eax], eax; add byte ptr [ebp - 0x1f7bf037], al; add eax, dword ptr [eax]; add dh, dh; ret 0xf08; 
0x0002d862: and al, 0x74; mov ebp, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x000b4653: and al, 0x74; mov edi, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x000cf637: and al, 0x74; out 0x8b, al; push ebp; add dh, dh; inc esp; ret 0x804; 
0x0003f569: and al, 0x75; fstp dword ptr [ebx + 0x5e]; ret; 
0x0002d8ed: and al, 0x78; add esp, 0x7c; fsubp st(1); ret; 
0x0002d866: and al, 0x78; add esp, 0x7c; ret; 
0x000194a2: and al, 0x78; mov dword ptr [esp + 4], eax; call esi; 
0x0016d870: and al, 0x79; cli; call eax; 
0x0016b988: and al, 0x7a; idiv edi; sal byte ptr [edx + eax], 0; jp 0x16b98a; call esp; 
0x001155c8: and al, 0x7c; add al, 0; add al, ch; mov eax, dword ptr [0x81000147]; ret; 
0x0016e2e8: and al, 0x7f; sti; call esp; 
0x0004b4a1: and al, 0x80; add byte ptr [eax], al; add byte ptr [ebp - 0x57c2fb0], cl; or dword ptr [edi], ecx; xchg eax, edi; ret 0xe083; 
0x00111887: and al, 0x80; add byte ptr [eax], al; add byte ptr [ebx + 0x20508b02], cl; mov dword ptr [esp + 4], edi; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x001163c3: and al, 0x80; add byte ptr [eax], al; add byte ptr [ebx + 0x20508b02], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x00021965: and al, 0x80; add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbbc], cl; adc al, 0x24; call dword ptr [ebp]; 
0x0001ec49: and al, 0x80; add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbbc], cl; or al, 0x24; call dword ptr [esi]; 
0x00038340: and al, 0x80; add byte ptr [eax], al; add byte ptr [ecx], ch; mov dword ptr [ebp - 0x5a71f001], 0x89fffffe; ret 0x18e9; 
0x0009e780: and al, 0x80; add byte ptr [eax], al; add byte ptr [edi], cl; xchg eax, esp; ret 0xed31; 
0x0002d722: and al, 0x81; ret 0; 
0x0002607c: and al, 0x81; ret 0x100; 
0x0016a2d0: and al, 0x83; int1; jmp esp; 
0x00024b29: and al, 0x83; ret 0x3b01; 
0x00109194: and al, 0x83; ret 0x8301; 
0x00025112: and al, 0x83; ret 0x8901; 
0x001100f4: and al, 0x83; ret 0x8902; 
0x001285a1: and al, 0x83; ret 0x8908; 
0x0006d6d6: and al, 0x83; shr byte ptr [ecx + ecx*4], 0x44; and al, 4; call dword ptr [ebp + 0x18]; 
0x0006dcbd: and al, 0x83; shr byte ptr [ecx + ecx*4], 0x44; and al, 4; call dword ptr [ecx + 0x18]; 
0x0006ccbd: and al, 0x83; shr byte ptr [ecx + ecx*4], 0x44; and al, 4; call dword ptr [edx + 4]; 
0x0011565a: and al, 0x84; add al, 0; add byte ptr [ebx + 0x48824ac], cl; add byte ptr [eax], al; add esp, 0x48c; ret; 
0x00020ab0: and al, 0x84; add byte ptr [eax], al; add al, ch; mov ecx, 0x81001092; ret; 
0x0001dab0: and al, 0x84; add byte ptr [eax], al; add al, ch; mov ecx, 0x810010c2; ret; 
0x000221c0: and al, 0x84; add byte ptr [eax], al; add al, ch; test eax, 0x8100107b; ret; 
0x000987ce: and al, 0x84; add byte ptr [eax], al; add byte ptr [ebx + 0x8824ac], cl; add byte ptr [eax], al; add esp, 0x8c; ret; 
0x000196d8: and al, 0x84; add byte ptr [eax], al; add byte ptr [ebx + 0x8824bc], cl; add byte ptr [eax], al; add esp, 0x8c; ret; 
0x0011186e: and al, 0x84; add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbac], cl; cmp al, 0x24; call dword ptr [eax + 4]; 
0x00037ea6: and al, 0x84; add byte ptr [eax], al; add byte ptr [edi], cl; xchg eax, edx; ret 0xd009; 
0x0013171d: and al, 0x85; test byte ptr [edi], 0x84; ret 1; 
0x000e606c: and al, 0x87; fistp qword ptr [eax + 0x36]; call dword ptr gs:[0x10]; 
0x000df7aa: and al, 0x87; sar dword ptr [eax + 0xb7], cl; call dword ptr gs:[0x10]; 
0x000d5299: and al, 0x88; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x28b; 
0x00124d06: and al, 0x89; adc al, 0x24; mov dword ptr [esp + 8], esi; mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 8]; 
0x0007c19d: and al, 0x89; add al, 0x24; call dword ptr [esi + 0x1c]; 
0x0007c2b3: and al, 0x89; add al, 0x24; call dword ptr [esi + 0x20]; 
0x0007250d: and al, 0x89; add al, 0x24; mov dword ptr [esp + 4], ecx; call dword ptr [edx + 0x20]; 
0x0007250d: and al, 0x89; add al, 0x24; mov dword ptr [esp + 4], ecx; call dword ptr [edx + 0x20]; add esp, 0x1c; ret; 
0x001118c6: and al, 0x89; cmp al, 0x24; call dword ptr [eax + 0x10]; 
0x00114ac8: and al, 0x89; dec eax; sbb byte ptr [eax + 1], bh; add esp, 8; ret; 
0x0011385c: and al, 0x89; dec esp; and al, 4; call dword ptr [eax + 0x18]; 
0x00042a1f: and al, 0x89; dec esp; and al, 4; call dword ptr [eax + 0x1c]; 
0x00126f38: and al, 0x89; dec esp; and al, 4; call dword ptr [eax + 4]; 
0x00072510: and al, 0x89; dec esp; and al, 4; call dword ptr [edx + 0x20]; 
0x00072510: and al, 0x89; dec esp; and al, 4; call dword ptr [edx + 0x20]; add esp, 0x1c; ret; 
0x0007a7af: and al, 0x89; dec esp; and al, 4; mov dword ptr [esp + 8], esi; call eax; 
0x00064ecc: and al, 0x89; dec esp; and al, 4; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x000c804f: and al, 0x89; dec esp; and al, 8; call dword ptr [ebp - 0x78]; 
0x00031686: and al, 0x89; dec esp; and al, 8; call edi; 
0x0007b016: and al, 0x89; dec esp; and al, 8; lea ecx, dword ptr [edi + ebp + 1]; mov dword ptr [esp + 4], ecx; call eax; 
0x0006f2d2: and al, 0x89; dec esp; and al, 8; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x40]; 
0x000f8312: and al, 0x89; dec esp; and al, 8; mov ecx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 4], ecx; call edx; 
0x000319d2: and al, 0x89; dec esp; and al, 8; mov ecx, dword ptr [esp + 0x2c]; mov dword ptr [esp + 4], ecx; call edi; 
0x000c3f97: and al, 0x89; inc edx; and byte ptr [ebx + 0x5f5e24c4], al; pop ebp; ret; 
0x00118cd2: and al, 0x89; inc esp; and al, 0x28; mov eax, dword ptr [esp + 0x44]; call dword ptr [eax + 0x14]; 
0x001127bd: and al, 0x89; inc esp; and al, 0x2c; call dword ptr [edx + 0x10]; 
0x00112641: and al, 0x89; inc esp; and al, 4; call dword ptr [edi + 0x14]; 
0x00112fcd: and al, 0x89; inc esp; and al, 4; call dword ptr [esi + 0x14]; 
0x0011258e: and al, 0x89; inc esp; and al, 4; call dword ptr [esi + 0xc]; 
0x0006d0b4: and al, 0x89; inc esp; and al, 4; mov dword ptr [esp + 8], edx; call dword ptr [edi + 0xc]; 
0x000faaf9: and al, 0x89; inc esp; and al, 4; mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call edx; 
0x0001e83c: and al, 0x89; inc esp; and al, 8; call dword ptr [ebp]; 
0x000f7e17: and al, 0x89; inc esp; and al, 8; call dword ptr [edi + 0x14]; 
0x00021563: and al, 0x89; inc esp; and al, 8; call dword ptr [edi]; 
0x0001949b: and al, 0x89; inc esp; and al, 8; mov eax, dword ptr [esp + 0x78]; mov dword ptr [esp + 4], eax; call esi; 
0x0001f4a0: and al, 0x89; inc esp; and al, 8; mov eax, dword ptr [esp + 0xa4]; mov dword ptr [esp + 4], eax; call dword ptr [esi]; 
0x00079530: and al, 0x89; insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp + 8], edx; call eax; 
0x0004245d: and al, 0x89; insb byte ptr es:[edi], dx; and al, 8; mov dword ptr [esp + 4], eax; call dword ptr [ecx + 0x1c]; 
0x0006a573: and al, 0x89; jns 0x6a57b; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x001141fb: and al, 0x89; jp 0x11422b; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0014ac26: and al, 0x89; mov bl, 0x54; sbb eax, dword ptr [eax]; add al, ch; push ds; ret; 
0x000ff046: and al, 0x89; mov dword ptr [esp + 0x20], eax; xchg edi, ebx; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x000e013d: and al, 0x89; pop esp; and al, 0xc; mov ebx, eax; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x000e098d: and al, 0x89; pop esp; and al, 0xc; mov ebx, eax; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00066c7c: and al, 0x89; push esp; and al, 0x10; mov dword ptr [esp + 0xc], 0; call dword ptr [eax + 0x24]; 
0x0007b840: and al, 0x89; push esp; and al, 0x18; mov dword ptr [esp + 8], esi; mov dword ptr [esp + 4], ecx; call eax; 
0x00076e24: and al, 0x89; push esp; and al, 0x28; call dword ptr [ebp]; 
0x00076cdf: and al, 0x89; push esp; and al, 0x28; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x0011d943: and al, 0x89; push esp; and al, 0x30; mov dword ptr [esp + 4], 0; call dword ptr [eax + 0x14]; 
0x0012b1f5: and al, 0x89; push esp; and al, 0xc; call dword ptr [eax + 0x40]; 
0x00042611: and al, 0x89; push esp; and al, 4; call dword ptr [eax + 0x1c]; 
0x0006f5e8: and al, 0x89; push esp; and al, 4; call dword ptr [eax + 0x20]; 
0x0006704b: and al, 0x89; push esp; and al, 4; call dword ptr [eax + 0x2c]; 
0x0006f2d9: and al, 0x89; push esp; and al, 4; call dword ptr [eax + 0x40]; 
0x0006b962: and al, 0x89; push esp; and al, 4; call dword ptr [eax + 0xc]; 
0x000b4e81: and al, 0x89; push esp; and al, 4; call dword ptr [ebp - 0x34]; 
0x00127393: and al, 0x89; push esp; and al, 4; call dword ptr [ebp - 0x7c]; 
0x00078f08: and al, 0x89; push esp; and al, 4; call eax; 
0x0012b2a1: and al, 0x89; push esp; and al, 4; mov dword ptr [esp + 8], ecx; call dword ptr [eax + 0x40]; 
0x000fbea6: and al, 0x89; push esp; and al, 4; mov edx, dword ptr [esp + 0x20]; mov dword ptr [esp], edx; call eax; 
0x0012af1d: and al, 0x89; push esp; and al, 8; call dword ptr [eax + 0x3c]; 
0x0006cb88: and al, 0x89; push esp; and al, 8; call dword ptr [edi + 0xc]; 
0x000317d2: and al, 0x89; push esp; and al, 8; call esi; 
0x00079df1: and al, 0x89; push esp; and al, 8; mov edx, dword ptr [esp + 0x14]; mov dword ptr [esp + 4], edx; call eax; 
0x0007985a: and al, 0x89; push esp; and al, 8; mov edx, dword ptr [esp + 0x18]; mov dword ptr [esp + 4], edx; call eax; 
0x00111851: and al, 0x89; push esp; and al, 8; mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x00079b59: and al, 0x89; push esp; and al, 8; mov edx, dword ptr [esp + 0x40]; mov dword ptr [esp + 4], edx; call eax; 
0x0011479a: and al, 0x89; rcr byte ptr [esi + 0x5f], 1; ret; 
0x0002ba65: and al, 0x89; ret 0x2b8; 
0x00041d2a: and al, 0x89; ret 0x2ee9; 
0x00127e9a: and al, 0x89; ret 0x4489; 
0x0003dbed: and al, 0x89; ret 0x448b; 
0x000a819c: and al, 0x89; ret 0x448d; 
0x000e3fa5: and al, 0x89; ret 0x6e73; 
0x000ac639: and al, 0x89; ret 0x848b; 
0x00117e44: and al, 0x89; ret 0xbc80; 
0x00019fd6: and al, 0x89; ret 0xc183; 
0x000ad624: and al, 0x89; ret 0xf089; 
0x00064acd: and al, 0x89; ret 0xfac1; 
0x0006f5e5: and al, 0x89; xor al, 0x24; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x20]; 
0x0007b28b: and al, 0x89; xor al, 0x24; mov dword ptr [esp + 4], edx; call eax; 
0x00126c63: and al, 0x8b; and byte ptr [eax - 0xffffff], 0xd0; add esp, 0x18; pop ebx; ret; 
0x00124ab4: and al, 0x8b; and eax, 0xe; add byte ptr [eax], al; call dword ptr [eax + 0x10]; 
0x00124dc0: and al, 0x8b; and eax, 0xe; add byte ptr [eax], al; call dword ptr [eax + 0xc]; 
0x00124a4c: and al, 0x8b; and eax, 0xe; add byte ptr [eax], al; call dword ptr [eax + 4]; 
0x000b08ea: and al, 0x8b; inc esp; and al, 0x30; call 0xae970; add esp, 0x2c; ret; 
0x000b2dca: and al, 0x8b; inc esp; and al, 0x30; call 0xb09a0; add esp, 0x2c; ret; 
0x00113855: and al, 0x8b; inc esp; and al, 0x3c; mov dword ptr [esp], ebp; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x18]; 
0x0002d4a9: and al, 0x8b; inc esp; and al, 4; add esp, 0xc; and eax, 0x80000000; ret; 
0x0012755c: and al, 0x8b; insb byte ptr es:[edi], dx; and al, 0x28; add esp, 0x2c; ret 4; 
0x000d9c61: and al, 0x8b; insb byte ptr es:[edi], dx; and al, 0x28; add esp, 0x2c; ret 8; 
0x00019bd2: and al, 0x8b; insb byte ptr es:[edi], dx; and al, 0x28; add esp, 0x2c; ret; 
0x000eeaec: and al, 0x8b; insb byte ptr es:[edi], dx; and al, 0x28; int 0x80; 
0x000e0e17: and al, 0x8b; insb byte ptr es:[edi], dx; and al, 0x28; mov eax, 0x110; call dword ptr gs:[0x10]; 
0x000e4f17: and al, 0x8b; insb byte ptr es:[edi], dx; and al, 0x28; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x00082e03: and al, 0x8b; insb byte ptr es:[edi], dx; and al, 8; add esp, 0xc; ret; 
0x0011c9e7: and al, 0x8b; push eax; or byte ptr [ecx - 0x76fbdbb4], cl; add al, 0x24; call dword ptr [edx + 0xc]; 
0x000df7a6: and al, 0x8b; push esp; and al, 0x24; xchg ebx, edx; mov eax, 0xb7; call dword ptr gs:[0x10]; 
0x00025f74: and al, 0x8b; sbb al, 0x24; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000e149f: and al, 0x8b; sbb al, 0x24; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000231c8: and al, 0x8c; add byte ptr [eax], al; add al, ch; mov eax, dword ptr [0x8100106b]; ret; 
0x000c38af: and al, 0x8c; add byte ptr [eax], al; add al, ch; mov edx, 0x81000664; ret; 
0x000e38ab: and al, 0x8c; add byte ptr [eax], al; add al, ch; mov esi, 0x81000464; ret; 
0x000dd66a: and al, 0x8c; add byte ptr [eax], al; add byte ptr [ebx - 0x17c7dbbc], cl; cwde; ret; 
0x00177f24: and al, 0x8d; add byte ptr [eax], al; dec eax; sub bh, ch; call edx; 
0x0002eeaf: and al, 0x90; add byte ptr [eax], al; add byte ptr [ecx - 0x47207839], cl; mov cl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002e13d: and al, 0x90; add byte ptr [eax], al; add byte ptr [edi + 0xafb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005ba60: and al, 0x90; add dword ptr [eax], 0x24148900; call eax; 
0x00129ada: and al, 0x90; lea esi, dword ptr [esi]; call 0x129930; add esp, 0x18; pop ebx; ret; 
0x0006b295: and al, 0x94; add al, byte ptr [eax]; add byte ptr [ebx + 0x29824ac], cl; add byte ptr [eax], al; add esp, 0x29c; ret; 
0x000e3ce4: and al, 0x94; add byte ptr [eax], al; add byte ptr [ebx + 0x9824ac], cl; add byte ptr [eax], al; add esp, 0x9c; ret 4; 
0x0002331a: and al, 0x94; add byte ptr [eax], al; add byte ptr [ebx + 0x9824ac], cl; add byte ptr [eax], al; add esp, 0x9c; ret; 
0x0002f217: and al, 0x94; add byte ptr [eax], al; add byte ptr [ebx + 0x9824bc], cl; add byte ptr [eax], al; add esp, 0x9c; ret; 
0x0016ced8: and al, 0x94; stc; inc dword ptr [eax - 0x3bfffd53]; xchg eax, esp; stc; call eax; 
0x000ac4b5: and al, 0x95; add byte ptr [eax], al; add byte ptr [ebx - 0x10e36d], cl; inc dword ptr [eax - 0x7bf0ffc6]; ret; 
0x0016cf08: and al, 0x9b; stc; call esp; 
0x000dc01c: and al, 0x9c; add byte ptr [eax], al; add cl, ch; ret 0xfffe; 
0x00112a87: and al, 0x9c; sub byte ptr [eax], al; add byte ptr [ebp + 0x28982494], cl; add byte ptr [eax], al; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x0001f668: and al, 0xa0; add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbbc], cl; adc al, 0x24; call dword ptr [esi]; 
0x0019ac5c: and al, 0xa1; clc; jmp dword ptr [edi]; 
0x0006f6f8: and al, 0xa4; add byte ptr [eax], al; add byte ptr [ebx + 0xa824ac], cl; add byte ptr [eax], al; add esp, 0xac; ret; 
0x0002e847: and al, 0xa4; add byte ptr [eax], al; add byte ptr [ebx + 0xa824bc], cl; add byte ptr [eax], al; add esp, 0xac; ret; 
0x0004a12c: and al, 0xa4; add dword ptr [eax], eax; add al, ch; cmp eax, 0x81000dfc; ret; 
0x000e7dfd: and al, 0xa4; add dword ptr [eax], eax; add byte ptr [ebx + 0x1a824bc], cl; add byte ptr [eax], al; add esp, 0x1ac; ret; 
0x0002f139: and al, 0xa8; add byte ptr [eax], al; add byte ptr [ecx - 0x78ebdbbc], cl; fistp qword ptr [eax + 0xb2]; call dword ptr gs:[0x10]; 
0x0016f81c: and al, 0xab; std; call dword ptr [edx]; 
0x0016d038: and al, 0xad; stc; call esp; 
0x00168528: and al, 0xaf; in al, dx; call dword ptr [eax]; 
0x0012b05c: and al, 0xb0; add byte ptr [eax], al; add al, ch; or eax, 0x81ffffed; ret; 
0x0012e0c0: and al, 0xb0; add byte ptr [eax], al; add al, ch; test eax, 0x81ffffbc; ret; 
0x0016d090: and al, 0xb1; stc; ljmp ptr [edi + esi*4 + 2]; add byte ptr [ecx + esi*4 - 7], ah; jmp dword ptr [eax]; 
0x000e1728: and al, 0xb4; add byte ptr [eax], al; add byte ptr [ebx + 0xb824ac], cl; add byte ptr [eax], al; add esp, 0xbc; ret 8; 
0x00054fc7: and al, 0xb4; add byte ptr [eax], al; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x75]; 
0x000e7d0e: and al, 0xb4; add dword ptr [eax], eax; add byte ptr [ebx + 0x1b824ac], cl; add byte ptr [eax], al; add esp, 0x1bc; ret; 
0x0016ac00: and al, 0xb6; hlt; call dword ptr [eax]; 
0x0002bf83: and al, 0xb8; sldt word ptr [eax]; add al, ch; ret 0xfffa; 
0x000f0b27: and al, 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00168704: and al, 0xba; add byte ptr [eax], al; hlt; ret 0xffec; 
0x0017b1d4: and al, 0xbb; add byte ptr [eax], al; lodsd eax, dword ptr [esi]; imul edi; call dword ptr [eax]; 
0x000de328: and al, 0xbc; add byte ptr [eax], al; add al, ch; inc ecx; mov edx, 0xc3810004; ret 0xc4c; 
0x000eeee7: and al, 0xbd; or byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x0018b124: and al, 0xbf; add dword ptr [eax], eax; sub byte ptr [edi - 0xb], cl; call dword ptr [ebx]; 
0x00023e5c: and al, 0xc0; add byte ptr [eax], al; add al, ch; or eax, 0x8100105f; ret; 
0x000c5fda: and al, 0xc0; add byte ptr [eax], al; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x0017b7d4: and al, 0xc1; add byte ptr [eax], al; xchg eax, ecx; out dx, eax; call dword ptr [eax]; 
0x00117a80: and al, 0xc1; ret 0x891f; 
0x000de30c: and al, 0xc4; add byte ptr [eax], al; add byte ptr [ebx + 0xc824ac], cl; add byte ptr [eax], al; add esp, 0xcc; ret; 
0x000672ce: and al, 0xc4; add byte ptr [eax], al; add byte ptr [ebx + 0xc824bc], cl; add byte ptr [eax], al; add esp, 0xcc; ret; 
0x0010d71b: and al, 0xc4; add dword ptr [eax], eax; add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ebp - 0x444216d], cl; jmp dword ptr [esi - 0x3f]; 
0x0016e468: and al, 0xc4; sti; jmp eax; 
0x0000213d: and al, 0xc7; jno 0x218a; ret 0x1dd4; 
0x00069523: and al, 0xc8; add byte ptr [eax], al; add byte ptr [ebx + 0x468b0c4e], cl; or byte ptr [ecx + 0x29cd29d5], cl; ret 0xe75; 
0x001075c9: and al, 0xc; add byte ptr [eax + eax], al; add byte ptr [ecx + 0x39e82404], cl; mov edi, edi; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x00108729: and al, 0xc; add byte ptr [eax + eax], al; add byte ptr [ecx - 0x2617dbfc], cl; jns 0x108735; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x000f3e09: and al, 0xc; add byte ptr [eax + eax], al; add byte ptr [ecx - 0x617dbfc], cl; ret 0; 
0x0010f579: and al, 0xc; add byte ptr [eax + eax], al; add byte ptr [ecx - 0x7617dbfc], cl; or edi, edi; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x00066c83: and al, 0xc; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [eax + 0x24]; 
0x000726e4: and al, 0xc; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], eax; call dword ptr [edx + 0x24]; 
0x0006ffb8: and al, 0xc; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x000e0b6a: and al, 0xc; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0x12d]; call dword ptr gs:[0x10]; 
0x000e0b34: and al, 0xc; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0011f726: and al, 0xc; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x000e10a6: and al, 0xc; add dword ptr [eax], eax; add al, ch; ret; 
0x0007ec00: and al, 0xc; add esp, 0x10; ret; 
0x00019937: and al, 0xc; add esp, 0x1c; ret; 
0x000de225: and al, 0xc; call 0x129d73; add ebx, 0xc4dc8; xchg edi, ebx; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x000ddac1: and al, 0xc; call 0x129d73; add ebx, 0xc552c; xchg edi, ebx; mov eax, 0x13e; call dword ptr gs:[0x10]; 
0x001007a5: and al, 0xc; call 0xfff40; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret 4; 
0x0012b1f8: and al, 0xc; call dword ptr [eax + 0x40]; 
0x0002d392: and al, 0xc; fld qword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0002d409: and al, 0xc; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0002d7d7: and al, 0xc; fld xword ptr [esp + 4]; ret; 
0x001298ed: and al, 0xc; mov dword ptr [eax], edx; ret; 
0x000eba26: and al, 0xc; mov dword ptr [edi + 8], eax; mov edi, dword ptr [esp + 8]; add esp, 0x10; ret; 
0x00099308: and al, 0xc; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edi; call esi; 
0x000a5cd2: and al, 0xc; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], edx; call edi; 
0x00066a34: and al, 0xc; mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x000e1dfb: and al, 0xc; mov dword ptr [esp + 4], edx; mov eax, dword ptr [ecx + 0xc]; mov dword ptr [esp], eax; call dword ptr [ecx + 0x24]; 
0x000c77db: and al, 0xc; mov dword ptr [esp + 8], eax; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [ebp - 0x50]; 
0x00104ccf: and al, 0xc; mov dword ptr [esp], eax; call 0x98e00; add esp, 0x18; pop ebx; ret; 
0x00104d7f: and al, 0xc; mov dword ptr [esp], eax; call 0x98e00; add esp, 0x28; pop ebx; ret; 
0x00104d1f: and al, 0xc; mov dword ptr [esp], eax; call 0x98e50; add esp, 0x18; pop ebx; ret; 
0x00104ddf: and al, 0xc; mov dword ptr [esp], eax; call 0x98e50; add esp, 0x28; pop ebx; ret; 
0x0010294f: and al, 0xc; mov dword ptr [esp], eax; call 0xc57a0; add esp, 0x18; pop ebx; ret; 
0x0006ff05: and al, 0xc; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x000ef68a: and al, 0xc; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000efc1a: and al, 0xc; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000efd2a: and al, 0xc; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000efdf0: and al, 0xc; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000ef340: and al, 0xc; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000eff3d: and al, 0xc; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000b7db0: and al, 0xc; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000efae0: and al, 0xc; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x000eb21d: and al, 0xc; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000e1350: and al, 0xc; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000ed530: and al, 0xc; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x000ed5c0: and al, 0xc; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x000ed410: and al, 0xc; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x000e13a0: and al, 0xc; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x000ef630: and al, 0xc; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000dec1d: and al, 0xc; mov eax, 3; call dword ptr gs:[0x10]; 
0x000dec9d: and al, 0xc; mov eax, 4; call dword ptr gs:[0x10]; 
0x000de77d: and al, 0xc; mov eax, 5; call dword ptr gs:[0x10]; 
0x000b7d2d: and al, 0xc; mov eax, 7; call dword ptr gs:[0x10]; 
0x0002da14: and al, 0xc; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000b5188: and al, 0xc; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call edi; 
0x000b7e89: and al, 0xc; mov eax, ebp; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000f0bda: and al, 0xc; mov eax, ebp; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x000c5840: and al, 0xc; mov eax, ebp; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000c5920: and al, 0xc; mov eax, ebp; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0002c81e: and al, 0xc; mov ebp, dword ptr [esp + 0x10]; add esp, 0x14; ret; 
0x000de960: and al, 0xc; mov ebp, eax; xchg edi, ebx; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000f0c9a: and al, 0xc; mov ebp, eax; xchg edi, ebx; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x000ddae7: and al, 0xc; mov ebx, dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x14]; add esp, 0x18; ret; 
0x000ef797: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x000dece7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x13; call dword ptr gs:[0x10]; 
0x000df537: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x000eff11: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000e6d07: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000e0a77: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000e6ac7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x000eea17: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x000ef897: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000aac47: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000ef237: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x000eb1a7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x000ef527: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000ef567: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000eb1f1: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000c5437: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000b8214: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xa2; call dword ptr gs:[0x10]; 
0x000ef977: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eb2a7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x000eb267: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000ed577: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x000ed607: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x000ed457: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000debf1: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 3; call dword ptr gs:[0x10]; 
0x000dec71: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 4; call dword ptr gs:[0x10]; 
0x000de751: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 5; call dword ptr gs:[0x10]; 
0x000b7d01: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 7; call dword ptr gs:[0x10]; 
0x000df624: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 8; call dword ptr gs:[0x10]; 
0x000e0140: and al, 0xc; mov ebx, eax; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x000e0990: and al, 0xc; mov ebx, eax; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x000f0fad: and al, 0xc; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000eec9e: and al, 0xc; mov ebx, eax; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x00123d7e: and al, 0xc; mov ebx, eax; mov eax, 0xbc; call dword ptr gs:[0x10]; 
0x00123e41: and al, 0xc; mov ebx, eax; mov eax, 0xbd; call dword ptr gs:[0x10]; 
0x000e0dc8: and al, 0xc; mov ebx, eax; mov eax, 0xfa; call dword ptr gs:[0x10]; 
0x000830b6: and al, 0xc; mov edi, dword ptr [esp + 0x10]; mov ebp, dword ptr [esp + 0x14]; add esp, 0x18; ret; 
0x000c5b2e: and al, 0xc; mov edi, dword ptr [esp + 8]; xchg edi, ebx; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00077f49: and al, 0xc; mov esi, dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0002e280: and al, 0xc; mov esi, eax; xchg ebx, edx; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000e6dae: and al, 0xc; mov esi, eax; xchg edi, ebx; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x000e6e6e: and al, 0xc; mov esi, eax; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000e0c5e: and al, 0xc; mov esi, eax; xchg edi, ebx; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x000b7ca3: and al, 0xc; mov esi, edx; mov ebp, eax; xchg edi, ebx; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000de837: and al, 0xc; or ch, 0x80; mov esi, eax; xchg edi, ebx; mov eax, 5; call dword ptr gs:[0x10]; 
0x000deae3: and al, 0xc; or dh, 0x80; mov ebp, eax; xchg edi, ebx; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0002d7b2: and al, 0xc; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x000949d4: and al, 0xc; pop ebx; pop esi; ret; 
0x00148f14: and al, 0xc; pop edi; ret; 
0x000dde32: and al, 0xc; xchg ebx, edx; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ddeb2: and al, 0xc; xchg ebx, edx; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000dde72: and al, 0xc; xchg ebx, edx; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x0002de8f: and al, 0xc; xchg edi, ebx; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000de6ff: and al, 0xc; xchg edi, ebx; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x000e0b6f: and al, 0xc; xchg edi, ebx; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x000e0a2f: and al, 0xc; xchg edi, ebx; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x000de62f: and al, 0xc; xchg edi, ebx; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x000b85ff: and al, 0xc; xchg edi, ebx; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x000e983f: and al, 0xc; xchg edi, ebx; mov eax, 0xc1; call dword ptr gs:[0x10]; 
0x000e989f: and al, 0xc; xchg edi, ebx; mov eax, 0xc2; call dword ptr gs:[0x10]; 
0x000e00cf: and al, 0xc; xchg edi, ebx; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x000e006f: and al, 0xc; xchg edi, ebx; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000b93ff: and al, 0xc; xchg edi, ebx; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000b945f: and al, 0xc; xchg edi, ebx; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x000e000f: and al, 0xc; xchg edi, ebx; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x000df0bf: and al, 0xc; xchg edi, ebx; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00101ac6: and al, 0xcc; add byte ptr [eax], al; add al, ch; mov dword ptr [0x81000282], eax; ret; 
0x001295ee: and al, 0xcc; add byte ptr [eax], al; add byte ptr [ebx - 0x7cebdbbc], cl; ret 0x8b04; 
0x0011cc25: and al, 0xd0; add al, 0; add byte ptr [ecx - 0x76fbdbac], cl; xor al, 0x24; call dword ptr [eax]; 
0x00165ef8: and al, 0xd1; cld; call dword ptr [ecx + edx*8 - 4]; inc dword ptr [ecx + edx*8 - 0x2e4b0004]; cld; jmp esp; 
0x0006d7c5: and al, 0xd4; add byte ptr [eax], al; add byte ptr [ebx + 0xd824ac], cl; add byte ptr [eax], al; add esp, 0xdc; ret; 
0x000d25b6: and al, 0xd4; add byte ptr [eax], al; add byte ptr [edi], cl; xchg eax, ebp; ret 0x8488; 
0x00168da0: and al, 0xd4; out dx, eax; call eax; 
0x001663e8: and al, 0xd7; cld; call dword ptr [edi + edx*8 - 4]; inc dword ptr [edi + edx*8 - 0x284b0004]; cld; jmp esp; 
0x000e513c: and al, 0xd8; add al, 0; add al, ch; sub eax, 0x8100044c; ret; 
0x000310fa: and al, 0xd9; add al, 0x24; add esp, 4; ret; 
0x0016666c: and al, 0xda; cld; call dword ptr [edx + ebx*8 - 4]; inc dword ptr [edx + ebx*8 - 0x254b0004]; cld; jmp esp; 
0x0016d338: and al, 0xda; stc; call eax; 
0x000d50c2: and al, 0xdc; add byte ptr [eax], al; add byte ptr [ebx - 0x7ccfdbbc], cl; ret 0xc740; 
0x0002d33e: and al, 0xdd; adc al, byte ptr [ebx - 0x1621f33c]; pop esi; pop edi; ret; 
0x000d25fc: and al, 0xde; add byte ptr [eax], al; add byte ptr [ebx - 0x76abdbbc], cl; ret 0xc283; 
0x000695cb: and al, 0xe0; add byte ptr [eax], al; add byte ptr [ebx + 0xe824ac], cl; add byte ptr [eax], al; add esp, 0xec; ret; 
0x00131319: and al, 0xe0; add byte ptr [eax], al; add byte ptr [ebx - 0x8f55], cl; jmp dword ptr [ebp - 0x75]; 
0x0016d774: and al, 0xe4; add al, byte ptr [eax]; aam 0x3b; cli; call dword ptr [eax - 0x1c]; 
0x00068f50: and al, 0xe4; add byte ptr [eax], al; add byte ptr [ebx + 0xe824ac], cl; add byte ptr [eax], al; add esp, 0xec; ret; 
0x0005b2bc: and al, 0xe8; aas; ret; 
0x0010f3b4: and al, 0xe8; adc bh, bh; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x0003fa5a: and al, 0xe8; adc byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x0009f316: and al, 0xe8; adc byte ptr [eax], al; add byte ptr [ebx - 0x76b3dbbc], cl; ret 0xfac1; 
0x00055b89: and al, 0xe8; adc dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003402a: and al, 0xe8; add byte ptr [ebx], cl; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x000340ca: and al, 0xe8; add byte ptr [edx], dl; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x000e3558: and al, 0xe8; add cl, 0xff; dec dword ptr [ebx - 0xbf73]; inc dword ptr [edi + 0x6b8cb]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010e5ac: and al, 0xe8; add dword ptr [eax], eax; add al, ch; mov ebp, 0x810001b7; ret; 
0x00129ff5: and al, 0xe8; add eax, 0x83fffb51; clc; push dword ptr [esp + ebp*4 - 0x77]; ret 0xe283; 
0x00101a89: and al, 0xe8; and dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000a7c87: and al, 0xe8; and ebx, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0011bbe7: and al, 0xe8; arpl word ptr [ebx + 0x5c8bffef], si; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0011d267: and al, 0xe8; arpl word ptr [edi - 1], si; inc dword ptr [ebx - 0x3fe6fe08]; add eax, 2; add esp, 0x1c; ret; 
0x00108ab8: and al, 0xe8; bnd ja 0x108abc; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x001084b8: and al, 0xe8; bnd jge 0x1084bc; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x0007bbe8: and al, 0xe8; bound ecx, qword ptr [eax]; std; jmp dword ptr [ebp - 0x7d]; 
0x000c76c8: and al, 0xe8; bound esi, qword ptr [edi + 3]; add byte ptr [ebx - 0x1375], cl; jmp dword ptr [ebp - 0x75]; 
0x000a3985: and al, 0xe8; call 0x810a41ef; ret; 
0x00049c81: and al, 0xe8; cdq; sbb al, 2; add byte ptr [ebx - 0x6bf0fe40], al; ret 0x73e9; 
0x00166880: and al, 0xe8; cld; inc dword ptr [ecx + ebp*8]; cld; call esp; 
0x0002aad5: and al, 0xe8; cmc; ret; 
0x000e8771: and al, 0xe8; cmp eax, ecx; idiv bh; add esp, 0x18; pop ebx; ret; 
0x0012a6c4: and al, 0xe8; cmpsb byte ptr [esi], byte ptr es:[edi]; inc esp; sti; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x000524e4: and al, 0xe8; cmpsb byte ptr [esi], byte ptr es:[edi]; ret 2; 
0x000fee92: and al, 0xe8; cwde; in eax, 0xff; inc dword ptr [ebx + 0x5e5b74c4]; ret; 
0x000e2302: and al, 0xe8; dec eax; dec esp; dec dword ptr [ebx - 0xb373]; dec dword ptr [ebx - 0xab6b]; jmp dword ptr [ebp - 0x77]; 
0x000e829c: and al, 0xe8; dec eax; imul edi, edi, 0x89f189ff; ret 0xcb87; 
0x0002b8cd: and al, 0xe8; dec ebp; syscall; 
0x0009f100: and al, 0xe8; dec edx; jnp 0x9f0fd; jmp dword ptr [esi - 0x70]; 
0x0011fbac: and al, 0xe8; dec esi; mov dh, ah; inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x00023cce: and al, 0xe8; dec esp; mov eax, dword ptr [0x85d23100]; ror byte ptr [edi], 0x94; ret 0xfe83; 
0x000e86d0: and al, 0xe8; fcmove st(0), st(0); idiv bh; add esp, 0x18; pop ebx; ret; 
0x000560fb: and al, 0xe8; fisttp word ptr [ebp + edi*8 + 0x24548bff]; and al, 0x39; ret 0x178b; 
0x000e87d1: and al, 0xe8; fld st(7); idiv bh; add esp, 0x18; pop ebx; ret; 
0x00108731: and al, 0xe8; fnstcw word ptr [ecx - 1]; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x0016ae78: and al, 0xe8; hlt; jmp dword ptr [eax - 0xf]; 
0x0010e88f: and al, 0xe8; imul ebx, esp, -0xd; dec dword ptr [ecx - 0x7cf57406]; ret 0x8d04; 
0x000f1be1: and al, 0xe8; imul edx, dword ptr [ebx - 0xe], 0x18c483ff; pop ebx; ret; 
0x000d8aa5: and al, 0xe8; in eax, 0; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x0004c525: and al, 0xe8; in eax, 0xac; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x0002c675: and al, 0xe8; inc ebp; sbb eax, 0x508d0005; add esi, esi; ret 0x6601; 
0x000d9a08: and al, 0xe8; inc edx; sal ah, cl; jmp dword ptr [esi - 0x70]; 
0x000fede6: and al, 0xe8; inc esp; out 0xff, al; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0011d19d: and al, 0xe8; int 0x19; cld; jmp dword ptr [esi - 0x7d]; 
0x000176ac: and al, 0xe8; into; push 6; add byte ptr [ebx - 0x1576d], cl; jmp dword ptr [ebp - 0x75]; 
0x0010d8f9: and al, 0xe8; jno 0x10d90f; std; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x00031239: and al, 0xe8; jno 0x31269; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000f2c09: and al, 0xe8; jno 0xf2c11; add byte ptr [ecx + 0xb03e5c3], al; add byte ptr [ecx - 0x8fbdb8c], cl; ret 0xff80; 
0x00033f8a: and al, 0xe8; jo 0x33f94; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x00099a4a: and al, 0xe8; jo 0x99a51; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x0005f5db: and al, 0xe8; lahf; ret; 
0x0006b10d: and al, 0xe8; lea eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00040ed1: and al, 0xe8; leave; mov word ptr [0x1cc48300], es; ret; 
0x00055250: and al, 0xe8; ljmp 0xfc0:0x85000894; mov dword ptr [esi], ecx; add dword ptr [eax], eax; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x7d]; 
0x000e359d: and al, 0xe8; lodsd eax, dword ptr [esi]; cmp ebx, esi; dec dword ptr [ebx - 0xc36b]; dec dword ptr [ebx - 0xbb7b]; jmp dword ptr [ebp - 0x77]; 
0x00099bda: and al, 0xe8; mov al, 0x11; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x00099a9a: and al, 0xe8; mov al, 7; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x00115fcd: and al, 0xe8; mov al, byte ptr [0x8100013d]; ret; 
0x000ec4c7: and al, 0xe8; mov bl, 0x24; clc; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x77]; 
0x000a5638: and al, 0xe8; mov byte ptr [0x890004db], al; ret 0x68b; 
0x0001aff2: and al, 0xe8; mov byte ptr [eax + edx + 0x24348900], bh; call edi; 
0x000625e4: and al, 0xe8; mov byte ptr [ecx], 9; add byte ptr [ebx - 0x15775], cl; dec dword ptr [ebx - 0x1336b]; dec dword ptr [ecx - 0x10f7b]; jmp dword ptr [ebp - 0x75]; 
0x00035a82: and al, 0xe8; mov byte ptr [esi], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00054745: and al, 0xe8; mov ch, 0x2b; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x001175d4: and al, 0xe8; mov ch, 0xf1; jmp dword ptr [ebp - 0x7d]; 
0x0006a9c2: and al, 0xe8; mov ch, al; cli; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x000a1d98: and al, 0xe8; mov dl, 0x4e; clc; jmp dword ptr [esi - 0x70]; 
0x001099e2: and al, 0xe8; mov eax, 0x89fff735; ret 0x408d; 
0x000d8842: and al, 0xe8; mov eax, 0x89fffffc; ret 0xcb8; 
0x00112f3d: and al, 0xe8; mov ebp, 0x890000bb; ret 0xd089; 
0x0006eccd: and al, 0xe8; mov ebp, 0x89ffffd2; ret 0x68b; 
0x000b9ded: and al, 0xe8; mov ebp, 0x89fffffa; ret 0x768d; 
0x00045361: and al, 0xe8; mov ecx, 0x89ffffca; ret 0x16eb; 
0x0012a9db: and al, 0xe8; mov edi, 0x89fff3bf; ret 0x68b; 
0x0001ba60: and al, 0xe8; mov edx, 0xeb00060d; ret; 
0x0004a03c: and al, 0xe8; mov esi, 0x89000358; ret 0xc031; 
0x000e8bee: and al, 0xe8; mov word ptr [ebp - 7], ss; jmp dword ptr [esi - 0x39]; 
0x0014aca5: and al, 0xe8; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xffec; 
0x000cb4ba: and al, 0xe8; nop; mov bh, 0xf5; call dword ptr [edi + 0x56]; 
0x00025f12: and al, 0xe8; or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00033ae1: and al, 0xe8; or dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00102fa1: and al, 0xe8; or dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00101be1: and al, 0xe8; or dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000eb4cf: and al, 0xe8; or eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0006b94b: and al, 0xe8; pop ds; ret; 
0x0014abef: and al, 0xe8; pop ebx; ret; 
0x00024df1: and al, 0xe8; pop ecx; and edi, edi; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x00040ea1: and al, 0xe8; pop ecx; mov word ptr [0x1cc48300], es; ret; 
0x0009c3f0: and al, 0xe8; pop edx; test al, 0xf8; jmp dword ptr [esi - 0x70]; 
0x001178b2: and al, 0xe8; push 0x89000003; ret 0x2b8; 
0x0006cbe2: and al, 0xe8; push 0x89000039; ret 0xffb8; 
0x00072102: and al, 0xe8; push 0x89ffff5b; ret 0xb68d; 
0x0006ba1a: and al, 0xe8; push eax; ret 0xffff; 
0x000fac89: and al, 0xe8; push ecx; ret 0xfff1; 
0x0010b2ea: and al, 0xe8; pushal; mov esp, 0xc483fff0; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0011c30a: and al, 0xe8; pushal; sub ah, bh; jmp dword ptr [esi - 0x39]; 
0x0006b898: and al, 0xe8; rcr byte ptr [edi], cl; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x001135f8: and al, 0xe8; ret 0xaf; 
0x0014b488: and al, 0xe8; ret 0xecba; 
0x000f7988: and al, 0xe8; ret 0xf2f2; 
0x000e3818: and al, 0xe8; ret 0xf336; 
0x000dc218: and al, 0xe8; ret 0xf3ac; 
0x000bd788: and al, 0xe8; ret 0xf597; 
0x00080008: and al, 0xe8; ret 0xf96e; 
0x000cf8c8: and al, 0xe8; ret 0xfaee; 
0x0005ea08: and al, 0xe8; ret 0xfb84; 
0x0011dcf8: and al, 0xe8; ret 0xfd27; 
0x000a89d8: and al, 0xe8; ret 0xfd45; 
0x000b2478: and al, 0xe8; ret 0xfe57; 
0x000985b8: and al, 0xe8; ret 0xfe5b; 
0x00038688: and al, 0xe8; ret 0xfee5; 
0x00107e68: and al, 0xe8; ret 0xff7f; 
0x000bf4a8: and al, 0xe8; ret 0xfff2; 
0x00031ac8: and al, 0xe8; ret 0xffff; 
0x000f5648: and al, 0xe8; ret 8; 
0x0003b587: and al, 0xe8; ret; 
0x0007b977: and al, 0xe8; ror dword ptr [edx], cl; std; jmp dword ptr [ebp - 0x7d]; 
0x0012e4f4: and al, 0xe8; salc; push esp; clc; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x000b8c1a: and al, 0xe8; sar cl, 0xff; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x7d]; 
0x00099d72: and al, 0xe8; sbb byte ptr [eax + eax], dh; add esp, 0x18; pop ebx; ret; 
0x001083f1: and al, 0xe8; sbb dword ptr [ebp - 1], edi; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x00055dfa: and al, 0xe8; shl ch, 0; add byte ptr [ecx - 0x7cf57416], cl; ret 0x8d04; 
0x0002c877: and al, 0xe8; shl dword ptr [esi - 0x3fce0002], cl; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000b4627: and al, 0xe8; shr dword ptr [edx - 0x77cfffe], cl; push dword ptr [ebx + ebp - 0x77]; ret 0xe283; 
0x000f3e11: and al, 0xe8; stc; ret 0; 
0x0005aaf1: and al, 0xe8; stc; ret; 
0x000c384d: and al, 0xe8; std; cmc; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x000a3972: and al, 0xe8; sub byte ptr [ebx], dl; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0010eb31: and al, 0xe8; sub dword ptr [ecx], eax; std; jmp dword ptr [esi - 0x39]; 
0x0004c3ed: and al, 0xe8; sub eax, 0x830001f5; rol byte ptr [ecx], 0xf; xchg eax, esp; ret 0x97e9; 
0x0004b4ef: and al, 0xe8; sub eax, dword ptr [edx + eax]; add byte ptr [ebx - 0x6bf0fe40], al; ret 0x25e9; 
0x000b514f: and al, 0xe8; sub ebx, dword ptr [ebx]; pop es; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp + 3]; 
0x000f731f: and al, 0xe8; sub edi, esp; int1; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00035b42: and al, 0xe8; test al, 0x63; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0009dda2: and al, 0xe8; test al, 0x8e; clc; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x0007a046: and al, 0xe8; test byte ptr [eax], al; add cl, ch; ret 0xfffe; 
0x0004b636: and al, 0xe8; test byte ptr [ecx + 2], ch; add byte ptr [ebx - 0x7cd3dbb4], cl; rol byte ptr [ecx], 0xf; xchg eax, esp; ret 0x97e9; 
0x00108c43: and al, 0xe8; xchg dword ptr [eax - 1], edi; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x00108643: and al, 0xe8; xchg dword ptr [esi - 1], edi; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x000cefa4: and al, 0xe8; xchg eax, esi; ret 0xffff; 
0x001111ca: and al, 0xe8; xor byte ptr [0x448b0000], bl; and al, 0x1c; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0002d5c9: and al, 0xeb; ret 0x748d; 
0x0001ae77: and al, 0xeb; xchg eax, esi; mov edx, dword ptr [esi + 0xc]; mov dword ptr [esp], edx; call eax; 
0x001669c4: and al, 0xec; cld; push dword ptr [esp + ebp*8 - 0x12bb0004]; cld; call dword ptr [ebx + ebp*8 - 4]; call esp; 
0x001939c0: and al, 0xf1; add dword ptr [eax], eax; in al, dx; or bh, dh; call dword ptr [esi]; 
0x0016f048: and al, 0xf3; std; jmp eax; 
0x0016e688: and al, 0xf3; sti; jmp dword ptr [eax]; 
0x000de480: and al, 0xf4; add byte ptr [eax], al; add byte ptr [ebx + 0xf824ac], cl; add byte ptr [eax], al; add esp, 0xfc; ret; 
0x00192450: and al, 0xf6; call dword ptr [edi + 2]; 
0x00193716: and al, 0xf6; jmp dword ptr [edx]; 
0x001949a9: and al, 0xf7; jmp dword ptr [ebx]; 
0x000ec4ca: and al, 0xf8; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x77]; 
0x000268c6: and al, 0xf; inc esp; ret 0x748b; 
0x000d5647: and al, 0xf; mov dh, 0x2c; xor ebx, ebp; ret; 
0x00047356: and al, 0xf; test byte ptr [eax], bh; ret 0xffff; 
0x000db3e6: and al, 0xf; test byte ptr [esi + 0x3c000014], bl; sub cl, byte ptr [edi]; xchg eax, esp; ret 0x403c; 
0x00166b00: and al, 0xfa; cld; jmp esp; 
0x0016f058: and al, 0xfa; std; call esp; 
0x0016e6d8: and al, 0xfb; sti; call dword ptr [eax]; 
0x001671b1: and al, 0xfd; call dword ptr [eax]; 
0x00098a97: and al, 0xff; aad 0x83; clc; add al, 0x89; ret 0x474; 
0x00112334: and al, 0xff; adc byte ptr [ebp - 0x74c28a40], al; inc edi; add al, 0x89; cmp al, 0x24; call dword ptr [eax + 0x10]; 
0x00112112: and al, 0xff; adc byte ptr [ebp - 0x74e88a40], al; inc edi; add al, 0x89; cmp al, 0x24; call dword ptr [eax + 0x10]; 
0x001127b5: and al, 0xff; adc byte ptr [ebx + 0x3c890457], cl; and al, 0x89; inc esp; and al, 0x2c; call dword ptr [edx + 0x10]; 
0x000720bc: and al, 0xff; push eax; adc byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00112656: and al, 0xff; push eax; adc byte ptr [ebx - 0x76e7dbb4], cl; ret 0x442b; 
0x00114134: and al, 0xff; push eax; add al, 0x89; ret 0xc031; 
0x0011ea62: and al, 0xff; push eax; or al, 0x89; ret 0xc031; 
0x00056a61: and al, 0xff; push eax; sbb al, 0x89; ret 0x478b; 
0x00072a5d: and al, 0xff; push eax; sbb byte ptr [ebx - 0x2b8a0008], al; add esp, 0x18; pop esi; ret; 
0x000bdaed: and al, 0xff; push ecx; adc al, 0x89; ret 0x76e9; 
0x00115f33: and al, 0xff; push esp; and al, 0x24; add esp, 0x1c; ret; 
0x0011e539: and al, 0xff; push esp; and al, 0x40; add esp, 0x3c; ret; 
0x0002dd65: and al, 0xff; rol byte ptr [ebx + 0x5d5b14c4], 1; ret; 
0x000eca92: and al, 0xff; rol byte ptr [ebx + 0x5e5b20c4], 1; pop edi; ret; 
0x00129e3a: and al, 0xff; ror byte ptr [ecx + 0x1ffac1c2], 1; add esp, 0x18; pop esi; ret; 
0x0012498d: and al, 0xff; xchg eax, ebx; mov al, byte ptr [0x89ffffeb]; ret 0xc483; 
0x00077bba: and al, 1; add byte ptr [eax], al; add al, ch; pushfd; fcos; jmp dword ptr [ebp - 0x7d]; 
0x000ec97a: and al, 1; add byte ptr [eax], al; add bh, bh; shr cl, 1; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x000ea670: and al, 1; add byte ptr [eax], al; add byte ptr [ecx - 0x17fbdbbc], cl; ret 0x5f; 
0x000ef79e: and al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000692f9: and al, 1; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x128]; add esp, 0x12c; ret; 
0x0011bcc5: and al, 1; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x128]; add esp, 0x12c; ret; 
0x0002e030: and al, 1; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x128]; mov ebp, dword ptr [esp + 0x12c]; add esp, 0x130; ret; 
0x0008022c: and al, 1; ret 0x442b; 
0x00040a96: and al, 1; ret 0x448b; 
0x0007f771: and al, 1; ret 0x5489; 
0x000b80ae: and al, 2; add byte ptr [eax], al; add al, ch; cmp byte ptr [eax - 9], ah; jmp dword ptr [ebp - 0x77]; 
0x00087568: and al, 2; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0016e708: and al, 2; cld; call dword ptr [eax + 0x3c]; 
0x00083e63: and al, 3; add byte ptr [eax - 0x7d], dh; ret 0x8304; 
0x000def81: and al, 3; add byte ptr [eax], al; add al, ch; adc eax, 0x89fffff1; ret 0xffb8; 
0x0019c8cc: and al, 3; add byte ptr [eax], al; ret; 
0x0013438b: and al, 3; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0011b385: and al, 4; add al, 0; add byte ptr [eax], al; mov dword ptr [esp], eax; call dword ptr [edx + 0x14]; 
0x0011232c: and al, 4; add al, 0; add byte ptr [eax], al; mov dword ptr [esp], edi; call dword ptr [eax]; 
0x00112263: and al, 4; add al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp], edi; call dword ptr [eax]; 
0x000c843e: and al, 4; add al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp], esi; mov dword ptr [esp + 8], ecx; call dword ptr [ebp - 0x78]; 
0x0011d94a: and al, 4; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [eax + 0x14]; 
0x00032eaf: and al, 4; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 0x14], eax; call ecx; 
0x0011b59a: and al, 4; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], eax; call edx; 
0x0011dc3c: and al, 4; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x14]; 
0x000416fe: and al, 4; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], ecx; call eax; 
0x00111833: and al, 4; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], edi; call dword ptr [eax + 0x14]; 
0x00113b9f: and al, 4; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x00072dcf: and al, 4; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 0x2c]; 
0x0006448d: and al, 4; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 8]; 
0x0011f712: and al, 4; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0011210a: and al, 4; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [esp], edi; call dword ptr [eax]; 
0x000637e5: and al, 4; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [esp], esi; call eax; 
0x000aae44: and al, 4; add dword ptr [eax], eax; add byte ptr [ebx + 0x10824ac], cl; add byte ptr [eax], al; add esp, 0x10c; ret; 
0x001127ad: and al, 4; add eax, 0x89000000; cmp al, 0x24; call dword ptr [eax]; 
0x0010fae2: and al, 4; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x0011c2d3: and al, 4; add eax, dword ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax]; 
0x0002dadd: and al, 4; add esp, 0x10; and eax, 0x8000; ret; 
0x0003301b: and al, 4; add esp, 0x14; ret; 
0x0002d4ac: and al, 4; add esp, 0xc; and eax, 0x80000000; ret; 
0x000d197f: and al, 4; add esp, 0xc; ret; 
0x00033068: and al, 4; add esp, 8; ret 4; 
0x00025f7a: and al, 4; add esp, 8; ret; 
0x00113465: and al, 4; and byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], edi; call dword ptr [eax + 0x18]; 
0x0006aa32: and al, 4; and dword ptr [eax], 0xffffffcf; ret; 
0x00027032: and al, 4; and eax, 0x7f; ret; 
0x0002d6f2: and al, 4; and eax, 0x80000000; ret; 
0x00105042: and al, 4; and eax, 0xffff; ror ax, 8; ret; 
0x00105032: and al, 4; bswap eax; ret; 
0x0011bf50: and al, 4; call 0x11bc20; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00027788: and al, 4; call 0x276f0; add esp, 0x1c; ret; 
0x00028e84: and al, 4; call 0x28dc0; add esp, 0x28; pop ebx; ret; 
0x0002df02: and al, 4; call 0x2e1a0; add esp, 0x18; pop ebx; ret; 
0x000327f0: and al, 4; call 0x32340; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00055c3b: and al, 4; call 0x4c590; add esp, 0xc4; pop ebx; pop esi; ret; 
0x0006b351: and al, 4; call 0x5baa0; add esp, 0x184; pop ebx; pop esi; ret; 
0x001197e6: and al, 4; call 0x63810; add esp, 0x18; pop ebx; ret; 
0x000ec6ad: and al, 4; call 0x63810; add esp, 0x418; pop ebx; ret; 
0x0006be15: and al, 4; call 0x6b640; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000723b9: and al, 4; call 0x722d0; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00098977: and al, 4; call 0x98990; add esp, 0x18; pop ebx; ret; 
0x00040e11: and al, 4; call 0x98bc0; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000b3dc8: and al, 4; call 0xb46f0; add esp, 0x2c; ret; 
0x000b4348: and al, 4; call 0xb48f0; add esp, 0x2c; ret; 
0x000b7d90: and al, 4; call 0xb7da0; add esp, 0x1c; ret; 
0x00102ead: and al, 4; call 0xb90d0; add esp, 0x18; pop ebx; ret; 
0x000ce675: and al, 4; call 0xce4d0; add esp, 0x28; pop esi; ret; 
0x000715bb: and al, 4; call 0xdde60; add esp, 0x1c; ret; 
0x000ddb83: and al, 4; call 0xddee0; add esp, 0x2c; ret; 
0x000ddbcb: and al, 4; call 0xddf70; add esp, 0x3c; ret; 
0x0014a56e: and al, 4; call 0xeb160; add esp, 0x18; pop ebx; ret; 
0x000f8e18: and al, 4; call 0xf6e00; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0011385f: and al, 4; call dword ptr [eax + 0x18]; 
0x00042614: and al, 4; call dword ptr [eax + 0x1c]; 
0x0006f5eb: and al, 4; call dword ptr [eax + 0x20]; 
0x0006f5eb: and al, 4; call dword ptr [eax + 0x20]; add esp, 0x18; pop esi; ret; 
0x0006704e: and al, 4; call dword ptr [eax + 0x2c]; 
0x0006f2dc: and al, 4; call dword ptr [eax + 0x40]; 
0x0006b965: and al, 4; call dword ptr [eax + 0xc]; 
0x00126f3b: and al, 4; call dword ptr [eax + 4]; 
0x0006d6dc: and al, 4; call dword ptr [ebp + 0x18]; 
0x000b4e84: and al, 4; call dword ptr [ebp - 0x34]; 
0x00127396: and al, 4; call dword ptr [ebp - 0x7c]; 
0x0006dcc3: and al, 4; call dword ptr [ecx + 0x18]; 
0x00042464: and al, 4; call dword ptr [ecx + 0x1c]; 
0x00112644: and al, 4; call dword ptr [edi + 0x14]; 
0x00072513: and al, 4; call dword ptr [edx + 0x20]; 
0x00072513: and al, 4; call dword ptr [edx + 0x20]; add esp, 0x1c; ret; 
0x0006ccc3: and al, 4; call dword ptr [edx + 4]; 
0x00111d48: and al, 4; call dword ptr [edx]; 
0x00112fd0: and al, 4; call dword ptr [esi + 0x14]; 
0x00112591: and al, 4; call dword ptr [esi + 0xc]; 
0x0001f4ae: and al, 4; call dword ptr [esi]; 
0x001117d6: and al, 4; call dword ptr [esp + 0x24]; add esp, 0x18; pop ebx; ret; 
0x000f0098: and al, 4; call dword ptr gs:[0x10]; 
0x00032aee: and al, 4; call eax; 
0x000319dd: and al, 4; call edi; 
0x000f831d: and al, 4; call edx; 
0x000194a6: and al, 4; call esi; 
0x001275d7: and al, 4; cmovbe eax, esi; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x0007e2e8: and al, 4; cmove eax, edx; add eax, 1; ret; 
0x000a7bb2: and al, 4; fild dword ptr [esp + 8]; fsubp st(1); ret; 
0x0002d547: and al, 4; fld dword ptr [esp + 4]; ret; 
0x0002d593: and al, 4; fld dword ptr [esp]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0002d30f: and al, 4; fld qword ptr [esp]; add esp, 0xc; pop esi; pop edi; ret; 
0x0003116a: and al, 4; fld qword ptr [esp]; add esp, 0xc; ret; 
0x000311c4: and al, 4; fld xword ptr [esp]; add esp, 0x10; ret; 
0x0002d396: and al, 4; fscale; fstp st(1); ret; 
0x0010383a: and al, 4; lea eax, dword ptr [ebx - 0x9f8b4]; mov dword ptr [esp], eax; call edx; 
0x0001a665: and al, 4; lea edx, dword ptr [ebp - 0x1c]; mov dword ptr [esp], edx; call eax; 
0x0005d6f7: and al, 4; lea edx, dword ptr [ebp - 0x34]; mov dword ptr [esp + 8], edi; mov dword ptr [esp], edx; call eax; 
0x0005670c: and al, 4; lea edx, dword ptr [ebp - 0x5c]; mov dword ptr [esp], edx; call eax; 
0x0004e38c: and al, 4; lea edx, dword ptr [ebp - 0x64]; mov dword ptr [esp], edx; call eax; 
0x000428b4: and al, 4; lea edx, dword ptr [ebp - 0x70]; mov dword ptr [esp], edx; call eax; 
0x0007d6a6: and al, 4; lea edx, dword ptr [ebx + 0x19ac]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0010a56e: and al, 4; lea edx, dword ptr [ebx + 0x31b8]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0007b126: and al, 4; lea edx, dword ptr [edi + 0x19]; mov dword ptr [esp], edx; call eax; 
0x000479a4: and al, 4; lea edx, dword ptr [esp + 0x20d0]; mov dword ptr [esp], edx; call eax; 
0x0005ba5c: and al, 4; lea edx, dword ptr [esp + 0x8190]; mov dword ptr [esp], edx; call eax; 
0x000d9368: and al, 4; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x000d9352: and al, 4; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00129916: and al, 4; mov dword ptr [eax + 0x4c], edx; ret; 
0x000d8429: and al, 4; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; add esp, 8; ret; 
0x0002d40d: and al, 4; mov dword ptr [eax], ecx; ret; 
0x000570d8: and al, 4; mov dword ptr [ebp - 0x1120], edx; mov dword ptr [ebp - 0x1124], ecx; mov dword ptr [esp + 8], edi; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0011b686: and al, 4; mov dword ptr [esp + 0x10], ecx; mov dword ptr [esp], eax; call dword ptr [edx]; 
0x00111996: and al, 4; mov dword ptr [esp + 0x18], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x00114252: and al, 4; mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x00070002: and al, 4; mov dword ptr [esp + 8], eax; mov dword ptr [esp], ebp; call ecx; 
0x0006fad8: and al, 4; mov dword ptr [esp + 8], eax; mov dword ptr [esp], esi; call dword ptr [ecx + 0x40]; 
0x0001d2db: and al, 4; mov dword ptr [esp + 8], eax; mov eax, dword ptr [ebp + 0xc]; mov dword ptr [esp], eax; call dword ptr [ebp + 4]; 
0x0001e1f6: and al, 4; mov dword ptr [esp + 8], eax; mov eax, dword ptr [edi + 0xc]; mov dword ptr [esp], eax; call dword ptr [edi + 4]; 
0x000e1908: and al, 4; mov dword ptr [esp + 8], eax; mov eax, dword ptr [esi + 0xc]; mov dword ptr [esp], eax; call dword ptr [esi + 0x24]; 
0x0001cdcb: and al, 4; mov dword ptr [esp + 8], eax; mov eax, dword ptr [esi + 0xc]; mov dword ptr [esp], eax; call dword ptr [esi + 4]; 
0x0012b2a4: and al, 4; mov dword ptr [esp + 8], ecx; call dword ptr [eax + 0x40]; 
0x0006d8fd: and al, 4; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x00031662: and al, 4; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], edx; call edi; 
0x00066a38: and al, 4; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x00070282: and al, 4; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; call dword ptr [edx + 0x40]; 
0x00031627: and al, 4; mov dword ptr [esp + 8], ecx; mov ecx, dword ptr [esp + 0x30]; mov dword ptr [esp], ecx; call edi; 
0x0006fefd: and al, 4; mov dword ptr [esp + 8], edi; mov dword ptr [esp + 0xc], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x00070454: and al, 4; mov dword ptr [esp + 8], edi; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x0012b1ed: and al, 4; mov dword ptr [esp + 8], edi; mov dword ptr [esp], ebp; mov dword ptr [esp + 0xc], edx; call dword ptr [eax + 0x40]; 
0x00043c81: and al, 4; mov dword ptr [esp + 8], edi; mov dword ptr [esp], esi; mov dword ptr [ebp - 0x57c], edx; mov dword ptr [ebp - 0x580], ecx; call dword ptr [eax + 0x1c]; 
0x0006d0b7: and al, 4; mov dword ptr [esp + 8], edx; call dword ptr [edi + 0xc]; 
0x00079533: and al, 4; mov dword ptr [esp + 8], edx; call eax; 
0x0006f9e8: and al, 4; mov dword ptr [esp + 8], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x0006d63e: and al, 4; mov dword ptr [esp + 8], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x40]; 
0x0007a7b2: and al, 4; mov dword ptr [esp + 8], esi; call eax; 
0x000562fd: and al, 4; mov dword ptr [esp + 8], esi; mov dword ptr [esp], ecx; call dword ptr [eax + 0x1c]; 
0x00129e2c: and al, 4; mov dword ptr [esp + 8], esi; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x00109299: and al, 4; mov dword ptr [esp + 8], esi; mov esi, dword ptr [esp + 0x470]; mov dword ptr [esp + 0x10], edx; mov dword ptr [esp], esi; call eax; 
0x001096a9: and al, 4; mov dword ptr [esp + 8], esi; mov esi, dword ptr [esp + 0x474]; mov dword ptr [esp + 0x10], edx; mov dword ptr [esp], esi; call eax; 
0x0011949d: and al, 4; mov dword ptr [esp], eax; call 0x276f0; add esp, 0x18; pop ebx; ret; 
0x000a7b99: and al, 4; mov dword ptr [esp], eax; call 0xa7a60; add esp, 0x48; pop ebx; ret; 
0x000aad4c: and al, 4; mov dword ptr [esp], eax; call 0xa7e90; add esp, 0x18; pop ebx; ret; 
0x0014a3f6: and al, 4; mov dword ptr [esp], eax; call 0xec0d0; add esp, 0x18; pop ebx; ret; 
0x000e22a0: and al, 4; mov dword ptr [esp], eax; call dword ptr [ebp - 0x28]; 
0x0011f0bd: and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0x20]; 
0x0011f0bd: and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0x20]; add esp, 0x1c; ret; 
0x0011f0a5: and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0x24]; 
0x0011f0a5: and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0x24]; add esp, 0x1c; ret; 
0x0011f158: and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0x24]; add esp, 0x28; pop esi; ret; 
0x0011c99d: and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x0011c99d: and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; add esp, 0x4c; ret; 
0x00111893: and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x001140c5: and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 4]; add esp, 0x1c; ret; 
0x0011e5ed: and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 4]; add esp, 0x28; pop esi; ret; 
0x00116499: and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x001140dd: and al, 4; mov dword ptr [esp], eax; call dword ptr [edx]; 
0x001140dd: and al, 4; mov dword ptr [esp], eax; call dword ptr [edx]; add esp, 0x1c; ret; 
0x00126ece: and al, 4; mov dword ptr [esp], eax; call dword ptr [esi]; 
0x00115f2f: and al, 4; mov dword ptr [esp], eax; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x000b5190: and al, 4; mov dword ptr [esp], eax; call edi; 
0x0011b5eb: and al, 4; mov dword ptr [esp], eax; call edx; 
0x000c8bbe: and al, 4; mov dword ptr [esp], eax; call esi; 
0x001194f0: and al, 4; mov dword ptr [esp], eax; mov dword ptr [esp + 0x458], ebp; call dword ptr [edx + 8]; 
0x00118a9d: and al, 4; mov dword ptr [esp], eax; mov dword ptr [esp + 8], esi; call dword ptr [ecx + 0xc]; 
0x0006ad78: and al, 4; mov dword ptr [esp], ebp; call dword ptr [eax + 0x1c]; 
0x0006db99: and al, 4; mov dword ptr [esp], ebp; call dword ptr [eax + 0x48]; 
0x0011c34e: and al, 4; mov dword ptr [esp], ebp; call dword ptr [eax + 8]; 
0x0007bb59: and al, 4; mov dword ptr [esp], ebp; call eax; 
0x000679c3: and al, 4; mov dword ptr [esp], ebp; call edi; 
0x000f7e13: and al, 4; mov dword ptr [esp], ebp; mov dword ptr [esp + 8], eax; call dword ptr [edi + 0x14]; 
0x0006c322: and al, 4; mov dword ptr [esp], ecx; call 0x6b6d0; add esp, 0x18; pop ebx; ret; 
0x00073e8e: and al, 4; mov dword ptr [esp], ecx; call 0x73270; add esp, 0x18; pop ebx; ret; 
0x0011a752: and al, 4; mov dword ptr [esp], ecx; call dword ptr [eax + 4]; 
0x0011e58d: and al, 4; mov dword ptr [esp], ecx; call dword ptr [eax + 4]; add esp, 0x18; pop esi; ret; 
0x0011e5a5: and al, 4; mov dword ptr [esp], ecx; call dword ptr [eax]; 
0x0007b93c: and al, 4; mov dword ptr [esp], ecx; call eax; 
0x0002155f: and al, 4; mov dword ptr [esp], ecx; mov dword ptr [esp + 8], eax; call dword ptr [edi]; 
0x001110dd: and al, 4; mov dword ptr [esp], ecx; mov dword ptr [esp + 8], esi; call dword ptr [eax + 0xc]; 
0x001134e8: and al, 4; mov dword ptr [esp], edi; call dword ptr [eax + 0x18]; 
0x0011f029: and al, 4; mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x001185c5: and al, 4; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x000724a9: and al, 4; mov dword ptr [esp], edi; call dword ptr [eax + 0xc]; 
0x00111875: and al, 4; mov dword ptr [esp], edi; call dword ptr [eax + 4]; 
0x00113364: and al, 4; mov dword ptr [esp], edi; call dword ptr [edx + 0x18]; 
0x00098f6a: and al, 4; mov dword ptr [esp], edi; call esi; 
0x0006cb84: and al, 4; mov dword ptr [esp], edi; mov dword ptr [esp + 8], edx; call dword ptr [edi + 0xc]; 
0x000317ce: and al, 4; mov dword ptr [esp], edi; mov dword ptr [esp + 8], edx; call esi; 
0x0011ce09: and al, 4; mov dword ptr [esp], edx; call dword ptr [eax + 0xc]; 
0x000ebc52: and al, 4; mov dword ptr [esp], edx; call dword ptr [ebp + 0x10]; 
0x000a5cd6: and al, 4; mov dword ptr [esp], edx; call edi; 
0x0001e838: and al, 4; mov dword ptr [esp], edx; mov dword ptr [esp + 8], eax; call dword ptr [ebp]; 
0x001111c6: and al, 4; mov dword ptr [esp], esi; call 0x112f00; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0011cd36: and al, 4; mov dword ptr [esp], esi; call 0x11cb70; mov eax, dword ptr [esi + 8]; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x00112673: and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x000729f9: and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x18]; 
0x00043cd6: and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0011ef41: and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x20]; 
0x0011ef0e: and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x00066e74: and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x2c]; 
0x0006fa5c: and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x3c]; 
0x00064296: and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x48]; 
0x0011cdee: and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0xc]; 
0x00114130: and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x0011eab1: and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 8]; 
0x00114160: and al, 4; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x000c77e3: and al, 4; mov dword ptr [esp], esi; call dword ptr [ebp - 0x50]; 
0x000478ef: and al, 4; mov dword ptr [esp], esi; call dword ptr [ecx + 0x1c]; 
0x000bba25: and al, 4; mov dword ptr [esp], esi; call dword ptr [ecx + 0x20]; 
0x0012b763: and al, 4; mov dword ptr [esp], esi; call dword ptr [ecx + 0x38]; 
0x0006bfb8: and al, 4; mov dword ptr [esp], esi; call dword ptr [edx + 0x18]; 
0x0007167c: and al, 4; mov dword ptr [esp], esi; call dword ptr [edx + 0x38]; 
0x00048e75: and al, 4; mov dword ptr [esp], esi; call eax; 
0x00042cb0: and al, 4; mov dword ptr [esp], esi; mov dword ptr [ebp - 0x57c], edx; call dword ptr [eax + 0x1c]; 
0x0001f9cb: and al, 4; mov dword ptr [esp], esi; mov dword ptr [esp + 8], eax; call dword ptr [ebp]; 
0x00031682: and al, 4; mov dword ptr [esp], esi; mov dword ptr [esp + 8], ecx; call edi; 
0x0012af19: and al, 4; mov dword ptr [esp], esi; mov dword ptr [esp + 8], edx; call dword ptr [eax + 0x3c]; 
0x0006ceb8: and al, 4; mov dword ptr [esp], esi; sub eax, ebp; mov dword ptr [esp + 8], eax; call dword ptr [edx + 0x38]; 
0x000711dd: and al, 4; mov dword ptr [esp], esi; sub edx, eax; mov dword ptr [esp + 8], edx; call dword ptr [ecx + 0x38]; 
0x00077334: and al, 4; mov dword ptr gs:[eax], 0xc; xor eax, eax; add esp, 0xc; ret; 
0x000ef858: and al, 4; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x000efc94: and al, 4; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x000efda8: and al, 4; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x000efe38: and al, 4; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000ef5e4: and al, 4; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x000df5b8: and al, 4; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x000ef814: and al, 4; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x000efe78: and al, 4; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x000ef4e8: and al, 4; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x000e81b4: and al, 4; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x000eff88: and al, 4; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x000eed04: and al, 4; mov eax, 0x16; call dword ptr gs:[0x10]; 
0x000aac84: and al, 4; mov eax, 0x19; call dword ptr gs:[0x10]; 
0x000b7ed4: and al, 4; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x000ddb18: and al, 4; mov eax, 0x1e; call dword ptr gs:[0x10]; 
0x000ded28: and al, 4; mov eax, 0x21; call dword ptr gs:[0x10]; 
0x0002e1a8: and al, 4; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00055508: and al, 4; mov eax, 0x26; call dword ptr gs:[0x10]; 
0x000de6a8: and al, 4; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000e0bb4: and al, 4; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x000df4b4: and al, 4; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x000df574: and al, 4; mov eax, 0x2a; call dword ptr gs:[0x10]; 
0x000e8014: and al, 4; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x000eed48: and al, 4; mov eax, 0x34; call dword ptr gs:[0x10]; 
0x000b92e8: and al, 4; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x000de564: and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x000de564: and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000e8054: and al, 4; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x000df4f8: and al, 4; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x000e7d48: and al, 4; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x000ef2f8: and al, 4; mov eax, 0x4b; call dword ptr gs:[0x10]; 
0x000ef2b8: and al, 4; mov eax, 0x4c; call dword ptr gs:[0x10]; 
0x000e67c8: and al, 4; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000a8468: and al, 4; mov eax, 0x4e; call dword ptr gs:[0x10]; 
0x000a84a8: and al, 4; mov eax, 0x4f; call dword ptr gs:[0x10]; 
0x000e09d8: and al, 4; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x000efcd4: and al, 4; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x000e84b8: and al, 4; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x000eb168: and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x000e97a8: and al, 4; mov eax, 0x5c; call dword ptr gs:[0x10]; 
0x000e97e8: and al, 4; mov eax, 0x5d; call dword ptr gs:[0x10]; 
0x000de5c8: and al, 4; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x000de138: and al, 4; mov eax, 0x63; call dword ptr gs:[0x10]; 
0x000de178: and al, 4; mov eax, 0x64; call dword ptr gs:[0x10]; 
0x000aac08: and al, 4; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x000eea54: and al, 4; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x000e8474: and al, 4; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x000ef274: and al, 4; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x000e84f4: and al, 4; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x000efbc4: and al, 4; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x000e809e: and al, 4; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x000e7e18: and al, 4; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000b7ba4: and al, 4; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x000ef3e4: and al, 4; mov eax, 0x7c; call dword ptr gs:[0x10]; 
0x0002d4f2: and al, 4; mov eax, 0x7f800000; and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x000ef704: and al, 4; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000b92a4: and al, 4; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x000df6e4: and al, 4; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x000ef428: and al, 4; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x000ef9b4: and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000df1c8: and al, 4; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000b9364: and al, 4; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x000e814e: and al, 4; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000eb338: and al, 4; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x000eb378: and al, 4; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000eb3b4: and al, 4; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000c53b8: and al, 4; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000c53f8: and al, 4; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000c5474: and al, 4; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000c54f4: and al, 4; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000c5534: and al, 4; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x000c5578: and al, 4; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000b81f2: and al, 4; mov eax, 0xa2; call dword ptr gs:[0x10]; 
0x000eea98: and al, 4; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x000e0b14: and al, 4; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x000ef468: and al, 4; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x000ef4a8: and al, 4; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0002e778: and al, 4; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000df6a4: and al, 4; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000ef9f8: and al, 4; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x000ed6d8: and al, 4; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x000ed648: and al, 4; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x000ed498: and al, 4; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000de588: and al, 4; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x000b85c6: and al, 4; mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x000ef5a4: and al, 4; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x000dda74: and al, 4; mov eax, 1; call dword ptr gs:[0x10]; 
0x000deb7e: and al, 4; mov eax, 6; call dword ptr gs:[0x10]; 
0x000df602: and al, 4; mov eax, 8; call dword ptr gs:[0x10]; 
0x000e0928: and al, 4; mov eax, 9; call dword ptr gs:[0x10]; 
0x000b3d92: and al, 4; mov eax, dword ptr [eax + 0x14]; ret; 
0x00067922: and al, 4; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + 0x28]; ret; 
0x00073462: and al, 4; mov eax, dword ptr [eax + 0x34]; ret; 
0x000271d6: and al, 4; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000271e6: and al, 4; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x001298d2: and al, 4; mov eax, dword ptr [eax + 0x48]; ret; 
0x00129902: and al, 4; mov eax, dword ptr [eax + 0x4c]; ret; 
0x00129922: and al, 4; mov eax, dword ptr [eax + 0x50]; ret; 
0x00129992: and al, 4; mov eax, dword ptr [eax + 0x54]; ret; 
0x00129982: and al, 4; mov eax, dword ptr [eax + 0x58]; ret; 
0x00129932: and al, 4; mov eax, dword ptr [eax + 0x5c]; ret; 
0x000e5db2: and al, 4; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x00098caa: and al, 4; mov eax, dword ptr [eax + 8]; mov dword ptr [esp], eax; call edi; 
0x000988ad: and al, 4; mov eax, dword ptr [eax + 8]; mov dword ptr [esp], eax; call esi; 
0x001298c6: and al, 4; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x001298e6: and al, 4; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0006a012: and al, 4; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00069fe2: and al, 4; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000b40c2: and al, 4; mov eax, dword ptr [eax]; ret; 
0x000bd41e: and al, 4; mov eax, dword ptr [ebp - 0x134]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x000c019e: and al, 4; mov eax, dword ptr [ebp - 0x144]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x0001777a: and al, 4; mov eax, dword ptr [ebp - 0x7c]; mov dword ptr [esp], eax; mov eax, dword ptr [ebp + 0xc]; call dword ptr [eax]; 
0x00098673: and al, 4; mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; call edi; 
0x00098726: and al, 4; mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; call esi; 
0x00124d10: and al, 4; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 8]; 
0x000d95b1: and al, 4; mov eax, dword ptr [ebx + 0xee0]; mov dword ptr [esp], ebp; call dword ptr [eax + 0xc]; 
0x000e1dff: and al, 4; mov eax, dword ptr [ecx + 0xc]; mov dword ptr [esp], eax; call dword ptr [ecx + 0x24]; 
0x00026f2d: and al, 4; mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x00026efd: and al, 4; mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x00026ecd: and al, 4; mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x00026e1d: and al, 4; mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00026e7d: and al, 4; mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00026d9d: and al, 4; mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00026e4d: and al, 4; mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00026ded: and al, 4; mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x00026fbd: and al, 4; mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00026dcd: and al, 4; mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x00026ead: and al, 4; mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00026d7d: and al, 4; mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x00026a8d: and al, 4; mov eax, dword ptr [ecx - 0x158]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0011f332: and al, 4; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00073c12: and al, 4; mov eax, dword ptr [edx + 8]; cmp dword ptr [edx + 0x14], eax; cmovae eax, dword ptr [edx + 0x14]; sub eax, dword ptr [edx + 0xc]; ret; 
0x0007c199: and al, 4; mov eax, dword ptr [esi + 0x24]; mov dword ptr [esp], eax; call dword ptr [esi + 0x1c]; 
0x0007c2af: and al, 4; mov eax, dword ptr [esi + 0x24]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x000bd173: and al, 4; mov eax, dword ptr [esi + 4]; mov eax, dword ptr [eax + edi]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x001144ea: and al, 4; mov eax, dword ptr [esi]; mov dword ptr [esp + 8], edi; mov dword ptr [esp], eax; call dword ptr [esi + 8]; 
0x00114967: and al, 4; mov eax, dword ptr [esi]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x000faafc: and al, 4; mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call edx; 
0x00124db8: and al, 4; mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 0xc]; 
0x00124a44: and al, 4; mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 4]; 
0x0002d65d: and al, 4; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0002692b: and al, 4; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00025f88: and al, 4; mov ebx, dword ptr [esp]; add esp, 8; ret; 
0x000ddf40: and al, 4; mov ebx, dword ptr [esp]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; add esp, 8; ret; 
0x0002e0dc: and al, 4; mov ebx, dword ptr [esp]; mov dword ptr gs:[eax], 0x16; or eax, 0xffffffff; add esp, 8; ret; 
0x0002d512: and al, 4; mov ecx, 0xff7fffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0001ec45: and al, 4; mov ecx, dword ptr [esp + 0x80]; mov dword ptr [esp + 8], eax; mov dword ptr [esp], ecx; call dword ptr [esi]; 
0x000a8444: and al, 4; mov ecx, eax; xchg ebx, ecx; mov eax, 0xd; call dword ptr gs:[0x10]; 
0x000b7be2: and al, 4; mov ecx, edx; xchg ebx, ecx; mov eax, 0x2b; call dword ptr gs:[0x10]; 
0x000eede2: and al, 4; mov ecx, edx; xchg ebx, ecx; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x000eee02: and al, 4; mov ecx, edx; xchg ebx, ecx; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x000268cc: and al, 4; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0007ebf8: and al, 4; mov edi, dword ptr [esp + 8]; mov ebp, dword ptr [esp + 0xc]; add esp, 0x10; ret; 
0x0010bab2: and al, 4; mov edx, dword ptr [eax]; mov ecx, edx; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0011a730: and al, 4; mov edx, dword ptr [ebp - 0xbc]; mov dword ptr [esp], edx; call dword ptr [eax + 0x14]; 
0x00032afd: and al, 4; mov edx, dword ptr [ecx + 8]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x00064ecf: and al, 4; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x000fab66: and al, 4; mov edx, dword ptr [esi + 0x30]; mov dword ptr [esp], edx; call eax; 
0x00064f17: and al, 4; mov edx, dword ptr [esi + 0x98]; mov dword ptr [esp], edx; call eax; 
0x0007a104: and al, 4; mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp], edx; call eax; 
0x00126cab: and al, 4; mov edx, dword ptr [esp + 0x1c]; mov eax, dword ptr [eax + 0x1a0]; mov dword ptr [esp], edx; call eax; 
0x000fb894: and al, 4; mov edx, dword ptr [esp + 0x20]; mov dword ptr [esp], edx; call eax; 
0x00113e51: and al, 4; mov edx, dword ptr [esp + 0x22a4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x00113cfc: and al, 4; mov edx, dword ptr [esp + 0x22a4]; mov dword ptr [esp], edx; call dword ptr [eax + 8]; 
0x000a5eb5: and al, 4; mov edx, dword ptr [esp + 0x2c]; mov dword ptr [esp], edx; call edi; 
0x0001985a: and al, 4; mov edx, dword ptr [esp + 0x30]; mov dword ptr [esp], edx; call eax; 
0x00114b72: and al, 4; mov edx, dword ptr [esp + 0x60]; mov dword ptr [esp], edx; call eax; 
0x0011f722: and al, 4; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x00033017: and al, 4; mov edx, dword ptr [esp + 4]; add esp, 0x14; ret; 
0x000d8a52: and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00073152: and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00025202: and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x00032fc2: and al, 4; mov edx, eax; sar edx, 0x1f; xor eax, edx; sub eax, edx; ret; 
0x0006db20: and al, 4; mov esi, 0xffffffff; mov dword ptr [esp + 8], edi; mov edi, 0xffffffff; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x0007a6fc: and al, 4; mov esi, dword ptr [esp + 8]; add esp, 0xc; ret 4; 
0x00041894: and al, 4; mov esi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0002c816: and al, 4; mov esi, dword ptr [esp + 8]; mov edi, dword ptr [esp + 0xc]; mov ebp, dword ptr [esp + 0x10]; add esp, 0x14; ret; 
0x00082f1b: and al, 4; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x000d8a2a: and al, 4; mov word ptr [eax], dx; xor eax, eax; ret; 
0x000d89f2: and al, 4; movzx edx, word ptr [eax]; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x000c8047: and al, 4; or al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp], esi; mov dword ptr [esp + 8], ecx; call dword ptr [ebp - 0x78]; 
0x00113513: and al, 4; or byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], edi; call dword ptr [eax + 0x18]; 
0x0011b490: and al, 4; or eax, 0x89000000; add al, 0x24; call dword ptr [edx + 0x14]; 
0x0002d28b: and al, 4; ret; 
0x000413b0: and al, 4; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], 1; call eax; 
0x0002dd57: and al, 4; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x00033013: and al, 4; sbb dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 4]; add esp, 0x14; ret; 
0x000fb84e: and al, 4; setae al; movzx eax, al; ret; 
0x000f36fd: and al, 4; setbe al; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00031606: and al, 4; shr eax, 1; imul eax, dword ptr [esp + 0x158]; add esi, eax; mov dword ptr [esp], esi; call edi; 
0x0002e892: and al, 4; shr edx, 5; test dword ptr [ecx + edx*4], eax; setne al; movzx eax, al; ret; 
0x00082dfd: and al, 4; sub eax, ebp; mov esi, dword ptr [esp]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00082e4d: and al, 4; sub eax, edx; mov esi, dword ptr [esp]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00042fd2: and al, 4; sub edx, ecx; mov dword ptr [esp + 8], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x00056a54: and al, 4; sub edx, ecx; sar edx, 2; mov dword ptr [esp + 8], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0006aa42: and al, 4; test byte ptr [eax], 0x10; setne al; movzx eax, al; ret; 
0x0006aa52: and al, 4; test byte ptr [eax], 0x20; setne al; movzx eax, al; ret; 
0x00069ff2: and al, 4; test byte ptr [eax], 4; sete al; movzx eax, al; ret; 
0x0006a002: and al, 4; test byte ptr [eax], 8; sete al; movzx eax, al; ret; 
0x000eee70: and al, 4; xor al, al; or eax, esi; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x000d9436: and al, 5; add byte ptr [eax], al; mov eax, esi; pop ebx; pop esi; ret; 
0x0007cb46: and al, 7; xor byte ptr [ebp - 0x6bf080c4], cl; ret 0xed83; 
0x00066061: and al, 8; adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x00067a93: and al, 8; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 4], eax; mov dword ptr [esp], ebp; call edi; 
0x00067e38: and al, 8; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x00066268: and al, 8; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], edx; call eax; 
0x00070b0d: and al, 8; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x000c8bb6: and al, 8; add byte ptr [ecx], al; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call esi; 
0x000d9a00: and al, 8; add dword ptr [eax], 0x4890000; and al, 0xe8; inc edx; sal ah, cl; jmp dword ptr [esi - 0x70]; 
0x00083993: and al, 8; add eax, 0x89000000; ret 0x838d; 
0x0006c05e: and al, 8; add eax, esi; pop esi; ret; 
0x0002db5d: and al, 8; add esp, 0x10; pop ebx; ret; 
0x000eba2d: and al, 8; add esp, 0x10; ret; 
0x000f1278: and al, 8; add esp, 0x1c; ret; 
0x0007a700: and al, 8; add esp, 0xc; ret 4; 
0x000268d0: and al, 8; add esp, 0xc; ret; 
0x0010e2a9: and al, 8; call 0x10d6a0; add esp, 0x2c; ret; 
0x0002e2d8: and al, 8; call 0x129d73; add ebx, 0x174d15; xchg ebx, edx; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0002e1e8: and al, 8; call 0x129d73; add ebx, 0x174e05; xchg ebx, edx; mov eax, 0xb0; call dword ptr gs:[0x10]; 
0x000eeff4: and al, 8; call 0x129d73; add ebx, 0xb3ff9; xchg ebx, edx; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0002dc44: and al, 8; call 0x2dbb0; pop ecx; pop edx; ret; 
0x00033bc4: and al, 8; call 0x33be0; add esp, 0x18; pop ebx; ret; 
0x00033c64: and al, 8; call 0x33c80; add esp, 0x18; pop ebx; ret; 
0x0012af20: and al, 8; call dword ptr [eax + 0x3c]; 
0x0012b2a8: and al, 8; call dword ptr [eax + 0x40]; 
0x001110e4: and al, 8; call dword ptr [eax + 0xc]; 
0x001110e4: and al, 8; call dword ptr [eax + 0xc]; add esp, 0x18; pop esi; ret; 
0x0011ba81: and al, 8; call dword ptr [eax]; 
0x0011ba81: and al, 8; call dword ptr [eax]; mov edi, eax; mov eax, dword ptr [esi + 4]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000c8052: and al, 8; call dword ptr [ebp - 0x78]; 
0x0001e83f: and al, 8; call dword ptr [ebp]; 
0x000711e6: and al, 8; call dword ptr [ecx + 0x38]; 
0x00118aa4: and al, 8; call dword ptr [ecx + 0xc]; 
0x00118aa4: and al, 8; call dword ptr [ecx + 0xc]; add esp, 0x18; pop esi; ret; 
0x000f7e1a: and al, 8; call dword ptr [edi + 0x14]; 
0x0006cb8b: and al, 8; call dword ptr [edi + 0xc]; 
0x00021566: and al, 8; call dword ptr [edi]; 
0x0006cec1: and al, 8; call dword ptr [edx + 0x38]; 
0x000f00bf: and al, 8; call dword ptr gs:[0x10]; 
0x00079537: and al, 8; call eax; 
0x00031689: and al, 8; call edi; 
0x000317d5: and al, 8; call esi; 
0x0007e063: and al, 8; cld; pop edi; ret; 
0x0002d5f2: and al, 8; fld dword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0002d661: and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0002d287: and al, 8; fld qword ptr [esp + 4]; ret; 
0x000a7bb6: and al, 8; fsubp st(1); ret; 
0x0009f0f8: and al, 8; in eax, dx; add al, 0; add byte ptr [ecx + 0x4ae82404], cl; jnp 0x9f0fd; jmp dword ptr [esi - 0x70]; 
0x0009c3e8: and al, 8; in eax, dx; add al, 0; add byte ptr [ecx + 0x5ae82404], cl; test al, 0xf8; jmp dword ptr [esi - 0x70]; 
0x000cb4b2: and al, 8; iretd; add byte ptr [eax], al; add byte ptr [ecx - 0x6f17dbfc], cl; mov bh, 0xf5; call dword ptr [edi + 0x56]; 
0x0012738c: and al, 8; lea eax, dword ptr [ebp - 0x44]; mov dword ptr [esp], eax; mov dword ptr [esp + 4], edx; call dword ptr [ebp - 0x7c]; 
0x000679bc: and al, 8; lea eax, dword ptr [esi + 0x28]; mov dword ptr [esp + 4], eax; mov dword ptr [esp], ebp; call edi; 
0x00067b6c: and al, 8; lea eax, dword ptr [esi + 0x54]; mov dword ptr [esp + 4], eax; mov dword ptr [esp], ebp; call edi; 
0x000b4e7a: and al, 8; lea ecx, dword ptr [ebp - 0x28]; mov dword ptr [esp], ecx; mov dword ptr [esp + 4], edx; call dword ptr [ebp - 0x34]; 
0x0007b3c3: and al, 8; lea ecx, dword ptr [edi + 0x19]; mov dword ptr [esp + 4], ecx; call eax; 
0x0007b019: and al, 8; lea ecx, dword ptr [edi + ebp + 1]; mov dword ptr [esp + 4], ecx; call eax; 
0x00064f67: and al, 8; lea ecx, dword ptr [esp + 0x18]; mov dword ptr [esp + 4], ecx; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x00098d2a: and al, 8; lea edx, dword ptr [ebp - 0x44]; mov dword ptr [esp + 4], edx; mov eax, dword ptr [eax + 8]; mov dword ptr [esp], eax; call edi; 
0x000988a5: and al, 8; lea edx, dword ptr [esp + 0x30]; mov dword ptr [esp + 4], edx; mov eax, dword ptr [eax + 8]; mov dword ptr [esp], eax; call esi; 
0x0011fc17: and al, 8; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0xc], edx; ret; 
0x000d8a56: and al, 8; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x000d8a49: and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000568c3: and al, 8; mov dword ptr [ebp - 0x1120], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x000478e7: and al, 8; mov dword ptr [esp + 0x14], edx; mov dword ptr [esp + 4], eax; mov dword ptr [esp], esi; call dword ptr [ecx + 0x1c]; 
0x0005b99a: and al, 8; mov dword ptr [esp + 0x18], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0006ad70: and al, 8; mov dword ptr [esp + 0x1c], ecx; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x1c]; 
0x0006ff01: and al, 8; mov dword ptr [esp + 0xc], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x0011b48c: and al, 8; mov dword ptr [esp + 4], 0xd; mov dword ptr [esp], eax; call dword ptr [edx + 0x14]; 
0x001127a9: and al, 8; mov dword ptr [esp + 4], 5; mov dword ptr [esp], edi; call dword ptr [eax]; 
0x0011b39f: and al, 8; mov dword ptr [esp + 4], 6; mov dword ptr [esp], eax; call dword ptr [edx + 0x14]; 
0x00042460: and al, 8; mov dword ptr [esp + 4], eax; call dword ptr [ecx + 0x1c]; 
0x0012b75f: and al, 8; mov dword ptr [esp + 4], eax; mov dword ptr [esp], esi; call dword ptr [ecx + 0x38]; 
0x00098722: and al, 8; mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; call esi; 
0x00124d0c: and al, 8; mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 8]; 
0x00065269: and al, 8; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x00066e70: and al, 8; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; call dword ptr [eax + 0x2c]; 
0x00071678: and al, 8; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; call dword ptr [edx + 0x38]; 
0x00114963: and al, 8; mov dword ptr [esp + 4], ebp; mov eax, dword ptr [esi]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x0007b847: and al, 8; mov dword ptr [esp + 4], ecx; call eax; 
0x0011ea5a: and al, 8; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0xc]; 
0x0011eaad: and al, 8; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 8]; 
0x000c77df: and al, 8; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [ebp - 0x50]; 
0x00048e71: and al, 8; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call eax; 
0x00042cac: and al, 8; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; mov dword ptr [ebp - 0x57c], edx; call dword ptr [eax + 0x1c]; 
0x0007bb55: and al, 8; mov dword ptr [esp + 4], edi; mov dword ptr [esp], ebp; call eax; 
0x0006aed8: and al, 8; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0006fa58: and al, 8; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; call dword ptr [eax + 0x3c]; 
0x0004411a: and al, 8; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; mov dword ptr [ebp - 0x57c], edx; call dword ptr [eax + 0x1c]; 
0x0002dad9: and al, 8; mov dword ptr [esp + 4], edx; add esp, 0x10; and eax, 0x8000; ret; 
0x00043cd2: and al, 8; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0011eaeb: and al, 8; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0xc]; 
0x0011ead2: and al, 8; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 8]; 
0x00064f13: and al, 8; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esi + 0x98]; mov dword ptr [esp], edx; call eax; 
0x0011b682: and al, 8; mov dword ptr [esp + 4], esi; mov dword ptr [esp + 0x10], ecx; mov dword ptr [esp], eax; call dword ptr [edx]; 
0x00033add: and al, 8; mov dword ptr [esp], eax; call 0x33af0; add esp, 0x18; pop ebx; ret; 
0x000e87cd: and al, 8; mov dword ptr [esp], eax; call 0x54fb0; add esp, 0x18; pop ebx; ret; 
0x000e8a97: and al, 8; mov dword ptr [esp], eax; call 0xe8c60; add esp, 0x18; pop ebx; ret; 
0x001144f0: and al, 8; mov dword ptr [esp], eax; call dword ptr [esi + 8]; 
0x0006d901: and al, 8; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x00070006: and al, 8; mov dword ptr [esp], ebp; call ecx; 
0x0012b1f1: and al, 8; mov dword ptr [esp], ebp; mov dword ptr [esp + 0xc], edx; call dword ptr [eax + 0x40]; 
0x00056301: and al, 8; mov dword ptr [esp], ecx; call dword ptr [eax + 0x1c]; 
0x0001ec50: and al, 8; mov dword ptr [esp], ecx; call dword ptr [esi]; 
0x0006f9ec: and al, 8; mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x000990fa: and al, 8; mov dword ptr [esp], edi; call esi; 
0x0002196c: and al, 8; mov dword ptr [esp], edx; call dword ptr [ebp]; 
0x0001f66f: and al, 8; mov dword ptr [esp], edx; call dword ptr [esi]; 
0x0003ec22: and al, 8; mov dword ptr [esp], edx; call eax; 
0x00031666: and al, 8; mov dword ptr [esp], edx; call edi; 
0x00066881: and al, 8; mov dword ptr [esp], edx; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x1c]; 
0x00042fd8: and al, 8; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x00066a3c: and al, 8; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x0006d642: and al, 8; mov dword ptr [esp], esi; call dword ptr [eax + 0x40]; 
0x0006fadc: and al, 8; mov dword ptr [esp], esi; call dword ptr [ecx + 0x40]; 
0x00070286: and al, 8; mov dword ptr [esp], esi; call dword ptr [edx + 0x40]; 
0x00043c85: and al, 8; mov dword ptr [esp], esi; mov dword ptr [ebp - 0x57c], edx; mov dword ptr [ebp - 0x580], ecx; call dword ptr [eax + 0x1c]; 
0x00066c78: and al, 8; mov dword ptr [esp], esi; mov dword ptr [esp + 0x10], edx; mov dword ptr [esp + 0xc], 0; call dword ptr [eax + 0x24]; 
0x0006588c: and al, 8; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x0006f2d5: and al, 8; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x40]; 
0x000ddfdf: and al, 8; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x000ef79b: and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x000deceb: and al, 8; mov eax, 0x13; call dword ptr gs:[0x10]; 
0x000df53b: and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x000eff15: and al, 8; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000e6d0b: and al, 8; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000e0a7b: and al, 8; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000e6acb: and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x000eea1b: and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x000ef89b: and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000aac4b: and al, 8; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000ef23b: and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x000eb1ab: and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x000ef52b: and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000ef56b: and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000eb1f5: and al, 8; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000c543b: and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000b8218: and al, 8; mov eax, 0xa2; call dword ptr gs:[0x10]; 
0x000ef97b: and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eb2ab: and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x000eb26b: and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000ed57b: and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x000ed60b: and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x000ed45b: and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0001cbd3: and al, 8; mov eax, 0xffffffff; movzx ecx, dl; test dl, dl; cmovns eax, ecx; ret; 
0x000debf5: and al, 8; mov eax, 3; call dword ptr gs:[0x10]; 
0x000dec75: and al, 8; mov eax, 4; call dword ptr gs:[0x10]; 
0x000de755: and al, 8; mov eax, 5; call dword ptr gs:[0x10]; 
0x000b7d05: and al, 8; mov eax, 7; call dword ptr gs:[0x10]; 
0x000df628: and al, 8; mov eax, 8; call dword ptr gs:[0x10]; 
0x00073156: and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00025206: and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0006dcb6: and al, 8; mov eax, dword ptr [ebp + 0x58]; mov dword ptr [esp], ecx; add eax, 0x2c; mov dword ptr [esp + 4], eax; call dword ptr [ecx + 0x18]; 
0x0001d2df: and al, 8; mov eax, dword ptr [ebp + 0xc]; mov dword ptr [esp], eax; call dword ptr [ebp + 4]; 
0x0001e1fa: and al, 8; mov eax, dword ptr [edi + 0xc]; mov dword ptr [esp], eax; call dword ptr [edi + 4]; 
0x0006d6cf: and al, 8; mov eax, dword ptr [esi + 0x58]; mov dword ptr [esp], ebp; add eax, 0x2c; mov dword ptr [esp + 4], eax; call dword ptr [ebp + 0x18]; 
0x000e190c: and al, 8; mov eax, dword ptr [esi + 0xc]; mov dword ptr [esp], eax; call dword ptr [esi + 0x24]; 
0x0001cdcf: and al, 8; mov eax, dword ptr [esi + 0xc]; mov dword ptr [esp], eax; call dword ptr [esi + 4]; 
0x000b7d88: and al, 8; mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp + 4], eax; call 0xb7da0; add esp, 0x1c; ret; 
0x000df681: and al, 8; mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call 0xde7c0; add esp, 0x1c; ret; 
0x000eacc9: and al, 8; mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call 0xea6f0; add esp, 0x1c; ret; 
0x000b3dc0: and al, 8; mov eax, dword ptr [esp + 0x30]; mov dword ptr [esp + 4], eax; call 0xb46f0; add esp, 0x2c; ret; 
0x000b4340: and al, 8; mov eax, dword ptr [esp + 0x30]; mov dword ptr [esp + 4], eax; call 0xb48f0; add esp, 0x2c; ret; 
0x000ddbc3: and al, 8; mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 4], eax; call 0xddf70; add esp, 0x3c; ret; 
0x0001949e: and al, 8; mov eax, dword ptr [esp + 0x78]; mov dword ptr [esp + 4], eax; call esi; 
0x0001f4a3: and al, 8; mov eax, dword ptr [esp + 0xa4]; mov dword ptr [esp + 4], eax; call dword ptr [esi]; 
0x0002d405: and al, 8; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00129912: and al, 8; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x4c], edx; ret; 
0x001298c2: and al, 8; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x001298e2: and al, 8; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0007ebfc: and al, 8; mov ebp, dword ptr [esp + 0xc]; add esp, 0x10; ret; 
0x00077330: and al, 8; mov ebx, dword ptr [esp + 4]; mov dword ptr gs:[eax], 0xc; xor eax, eax; add esp, 0xc; ret; 
0x000ef854: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x000efda4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x000efe34: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000df5b4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x000efe74: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x000ef4e4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x000eff84: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x000ddb14: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1e; call dword ptr gs:[0x10]; 
0x000ded24: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x21; call dword ptr gs:[0x10]; 
0x0002e1a4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00055504: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x26; call dword ptr gs:[0x10]; 
0x000de6a4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000eed44: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x34; call dword ptr gs:[0x10]; 
0x000b92e4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x000df4f4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x000e7d44: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x000ef2f4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4b; call dword ptr gs:[0x10]; 
0x000ef2b4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4c; call dword ptr gs:[0x10]; 
0x000e67c4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000a8464: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4e; call dword ptr gs:[0x10]; 
0x000a84a4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4f; call dword ptr gs:[0x10]; 
0x000e09d4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x000e84b4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x000eb164: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x000e97a4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5c; call dword ptr gs:[0x10]; 
0x000e97e4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5d; call dword ptr gs:[0x10]; 
0x000de5c4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x000de134: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x63; call dword ptr gs:[0x10]; 
0x000de174: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x64; call dword ptr gs:[0x10]; 
0x000aac04: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x000e7e14: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000ef424: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x000df1c4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000eb334: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x000eb374: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000c53b4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000c53f4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000c5574: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000b81ee: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xa2; call dword ptr gs:[0x10]; 
0x000eea94: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x000ef464: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x000ef4a4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0002e774: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000ef9f4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x000ed6d4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x000ed644: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x000ed494: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000de584: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x000df5fe: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 8; call dword ptr gs:[0x10]; 
0x000e0924: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 9; call dword ptr gs:[0x10]; 
0x0002d252: and al, 8; mov ecx, 0xffefffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x00111d41: and al, 8; mov ecx, dword ptr [ebp + 0x14]; mov dword ptr [esp + 4], ecx; call dword ptr [edx]; 
0x00042a15: and al, 8; mov ecx, dword ptr [ebp - 0x49c]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x1c]; 
0x00136908: and al, 8; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x000f8315: and al, 8; mov ecx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 4], ecx; call edx; 
0x00064ec7: and al, 8; mov ecx, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], ecx; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x00072508: and al, 8; mov ecx, dword ptr [esp + 0x24]; mov dword ptr [esp], eax; mov dword ptr [esp + 4], ecx; call dword ptr [edx + 0x20]; 
0x000319d5: and al, 8; mov ecx, dword ptr [esp + 0x2c]; mov dword ptr [esp + 4], ecx; call edi; 
0x0003162b: and al, 8; mov ecx, dword ptr [esp + 0x30]; mov dword ptr [esp], ecx; call edi; 
0x000de95c: and al, 8; mov ecx, dword ptr [esp + 0xc]; mov ebp, eax; xchg edi, ebx; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000f0c96: and al, 8; mov ecx, dword ptr [esp + 0xc]; mov ebp, eax; xchg edi, ebx; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x000e6daa: and al, 8; mov ecx, dword ptr [esp + 0xc]; mov esi, eax; xchg edi, ebx; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x000e6e6a: and al, 8; mov ecx, dword ptr [esp + 0xc]; mov esi, eax; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000e0c5a: and al, 8; mov ecx, dword ptr [esp + 0xc]; mov esi, eax; xchg edi, ebx; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x0006db29: and al, 8; mov edi, 0xffffffff; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x0002c81a: and al, 8; mov edi, dword ptr [esp + 0xc]; mov ebp, dword ptr [esp + 0x10]; add esp, 0x14; ret; 
0x0004260a: and al, 8; mov edx, dword ptr [ebp + 0xc]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x00042b38: and al, 8; mov edx, dword ptr [ebp - 0x4ac]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x000e2293: and al, 8; mov edx, dword ptr [ebp - 0xbc]; mov eax, dword ptr [ebp - 0x40]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call dword ptr [ebp - 0x28]; 
0x000e3413: and al, 8; mov edx, dword ptr [ebp - 0xcc]; mov eax, dword ptr [ebp - 0x40]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call dword ptr [ebp - 0x28]; 
0x00129e30: and al, 8; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x00079df4: and al, 8; mov edx, dword ptr [esp + 0x14]; mov dword ptr [esp + 4], edx; call eax; 
0x0007985d: and al, 8; mov edx, dword ptr [esp + 0x18]; mov dword ptr [esp + 4], edx; call eax; 
0x00111854: and al, 8; mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x000fbea1: and al, 8; mov edx, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x20]; mov dword ptr [esp], edx; call eax; 
0x0006f5e0: and al, 8; mov edx, dword ptr [esp + 0x24]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x20]; 
0x00116257: and al, 8; mov edx, dword ptr [esp + 0x28]; mov dword ptr [esp], edi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x000a5ead: and al, 8; mov edx, dword ptr [esp + 0x30]; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x2c]; mov dword ptr [esp], edx; call edi; 
0x00067043: and al, 8; mov edx, dword ptr [esp + 0x34]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x2c]; 
0x00079b5c: and al, 8; mov edx, dword ptr [esp + 0x40]; mov dword ptr [esp + 4], edx; call eax; 
0x00114b6a: and al, 8; mov edx, dword ptr [esp + 0x64]; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x60]; mov dword ptr [esp], edx; call eax; 
0x000271d2: and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000271e2: and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0010929d: and al, 8; mov esi, dword ptr [esp + 0x470]; mov dword ptr [esp + 0x10], edx; mov dword ptr [esp], esi; call eax; 
0x001096ad: and al, 8; mov esi, dword ptr [esp + 0x474]; mov dword ptr [esp + 0x10], edx; mov dword ptr [esp], esi; call eax; 
0x000830b2: and al, 8; mov esi, dword ptr [esp + 0xc]; mov edi, dword ptr [esp + 0x10]; mov ebp, dword ptr [esp + 0x14]; add esp, 0x18; ret; 
0x000df178: and al, 8; mov esi, eax; xchg edi, ebx; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0002dd1b: and al, 8; mov esp, ecx; jmp edx; 
0x000d89f9: and al, 8; mov word ptr [eax], dx; xor eax, eax; ret; 
0x000e4d76: and al, 8; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x000f3b5c: and al, 8; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x1000; ret; 
0x000f3abc: and al, 8; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x100; ret; 
0x000f3a1c: and al, 8; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x2000; ret; 
0x000f379c: and al, 8; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x200; ret; 
0x000f38dc: and al, 8; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x4000; ret; 
0x000f351c: and al, 8; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x400; ret; 
0x000f383c: and al, 8; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x8000; ret; 
0x000f35bc: and al, 8; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 1; ret; 
0x000f365c: and al, 8; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 2; ret; 
0x000f397c: and al, 8; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 4; ret; 
0x000f347c: and al, 8; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 8; ret; 
0x001331a7: and al, 8; pop ebx; ret; 
0x0007c5b6: and al, 8; pop edi; ret; 
0x000915b4: and al, 8; pop esi; ret; 
0x00027217: and al, 8; ret; 
0x000e9572: and al, 8; xchg ebx, edx; mov eax, 0x10f; call dword ptr gs:[0x10]; 
0x000e65c2: and al, 8; xchg ebx, edx; mov eax, 0x4b; call dword ptr gs:[0x10]; 
0x000e6a82: and al, 8; xchg ebx, edx; mov eax, 0x60; call dword ptr gs:[0x10]; 
0x000e6582: and al, 8; xchg ebx, edx; mov eax, 0xbf; call dword ptr gs:[0x10]; 
0x000b90e2: and al, 8; xchg ebx, edx; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x000c5b32: and al, 8; xchg edi, ebx; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000ec8b2: and al, bh; dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x00177311: and al, byte ptr [eax]; add byte ptr [eax + eax], bl; add byte ptr [edx + ebp], bh; add byte ptr [edi + ecx - 0x11], ah; call dword ptr [esi + 3]; 
0x0017a2b9: and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; adc byte ptr [eax + eax - 0x106c8200], ch; call dword ptr [eax]; 
0x00179fb9: and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; adc byte ptr [ecx - 0x6a5e0000], ch; out dx, eax; call dword ptr [eax]; 
0x0017a1c9: and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; and byte ptr [ebx - 0x6bd60000], ch; out dx, eax; call dword ptr [eax]; 
0x0019b4c9: and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; and byte ptr [esi - 0x2597fffe], bh; clc; call dword ptr [eax]; 
0x0019b529: and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; cmp byte ptr [esi - 0x25d7fffe], 0xf8; call dword ptr [eax]; 
0x0017ba9d: and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; hlt; ret; 
0x00192cf9: and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; in al, 1; add byte ptr [ecx + esi*8 - 0xa], bh; call dword ptr [esi]; 
0x0017b8ed: and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; inc esp; ret 0; 
0x0017745d: and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; mov ah, 0x7d; add byte ptr [eax], al; ret 0xef13; 
0x00195249: and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; mov al, byte ptr [0x3f00025b]; xor al, 0xf7; call dword ptr [eax]; 
0x00191e49: and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; mov al, byte ptr [0x4a000227]; sal esi, 1; call dword ptr [eax]; 
0x0017b40d: and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; mov ebp, 0xf62d0000; out dx, eax; call dword ptr [eax]; 
0x00188535: and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; mov word ptr [esi + 0x1a850001], cs; hlt; call dword ptr [eax]; 
0x0017b94d: and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; ret 0; 
0x00194d11: and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; push 0x77000256; sub esi, edi; call dword ptr [eax]; 
0x00173111: and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; push 0xb500003a; add ch, ah; call dword ptr [eax]; 
0x0019b469: and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; sar byte ptr [ebp - 0x2557fffe], 0xf8; call dword ptr [eax]; 
0x0017a079: and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; shr byte ptr [ecx - 0x6ae60000], 1; out dx, eax; call dword ptr [eax]; 
0x0017a229: and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; sub byte ptr [ebx - 0x6c1a0000], 0xef; call dword ptr [eax]; 
0x001888d1: and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; sub byte ptr [edx - 0x401ffff], dl; hlt; call dword ptr [eax]; 
0x0017b22d: and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; test byte ptr [ebx - 0x8930000], bh; out dx, eax; call dword ptr [eax]; 
0x0019a92d: and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; test byte ptr [edx - 0x5dabfffe], dh; clc; call dword ptr [eax]; 
0x0017b52d: and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; test byte ptr [esi - 0xa9f0000], bh; out dx, eax; call dword ptr [eax]; 
0x0017ba3d: and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; xchg eax, esp; ret; 
0x00195681: and al, byte ptr [eax]; add byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [eax - 0x4bfffd9c], cl; xor esi, edi; jmp dword ptr [edi]; 
0x0002d491: and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x00113c3f: and al, byte ptr [eax]; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00113e18: and al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00006100: and al, byte ptr [eax]; or al, 0; ret 3; 
0x00005840: and al, byte ptr [eax]; or al, 0; ret; 
0x0000ccd0: and al, byte ptr [eax]; or al, 0; xor byte ptr [ebx], bl; add byte ptr [eax], al; nop; call dword ptr [eax]; 
0x00098550: and al, byte ptr [ebp + 0x5eeb75c9]; pop edi; pop ebp; ret; 
0x001380bc: and al, byte ptr [ebx - 0x167cfb12]; add al, 0x83; ljmp 0xf702:0x89068b04; ret 0xf; 
0x00134593: and al, byte ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00186cad: and al, byte ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x000eefa5: and al, byte ptr [edi + 0x141b8df]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00019651: and al, byte ptr [edi]; adc dword ptr [eax], eax; add ecx, 0x18999f; lea eax, dword ptr [ecx - 0x43dee]; ret; 
0x0019e47c: and al, byte ptr [edi]; add byte ptr [eax], al; syscall; 
0x00019b51: and al, byte ptr [edx]; adc dword ptr [eax], eax; add ecx, 0x18949f; mov eax, dword ptr [ecx - 0xf8]; add eax, dword ptr gs:[0]; ret; 
0x0006b848: and al, ch; and eax, 0x81000be5; ret; 
0x0006efca: and al, ch; mov dword ptr [0x81000bad], eax; ret; 
0x0012e5d1: and al, ch; sbb dword ptr [ebx + edi*8 - 1], ecx; sub esp, 8; add esp, 0x1c; ret; 
0x00072938: and al, ch; xor eax, 0x81000b74; ret; 
0x00072038: and al, ch; xor eax, 0x81000b7d; ret; 
0x0017e081: and al, dh; call dword ptr [edx]; 
0x00165fe4: and al, dl; cld; call dword ptr [eax - 0x30]; 
0x0016e8f1: and bh, ah; call dword ptr [eax + 0x34]; 
0x0016e9d1: and bh, ah; call dword ptr [eax + 0x47]; 
0x0016ea99: and bh, ah; call dword ptr [eax - 0x34]; 
0x0016ea99: and bh, ah; call dword ptr [eax - 0x34]; add al, byte ptr [eax]; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; call eax; 
0x0016e931: and bh, ah; call dword ptr [eax - 0x58fffe49]; and bh, ah; call eax; 
0x0016e879: and bh, ah; call eax; 
0x0016e861: and bh, ah; call esp; 
0x0016e9a9: and bh, ah; dec dword ptr [eax + 0x37]; add al, byte ptr [eax]; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; jmp eax; 
0x0016e951: and bh, ah; dec dword ptr [eax + esi*8 + 0x22a70001]; cld; jmp esp; 
0x0016ead1: and bh, ah; jmp dword ptr [eax]; 
0x0016e9b1: and bh, ah; jmp eax; 
0x0016e959: and bh, ah; jmp esp; 
0x0016eac9: and bh, ah; ljmp ptr [eax - 0x58fffd24]; and bh, ah; jmp dword ptr [eax]; 
0x0016ea89: and bh, ah; push dword ptr [eax + ecx*8]; add al, byte ptr [eax]; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; call eax; 
0x0016e9c9: and bh, ah; push eax; cmp eax, 0x22a70002; cld; call dword ptr [eax + 0x47]; 
0x00002fb8: and bh, byte ptr [eax - 0x52]; sub ebx, dword ptr [esp + eax*2]; nop; ret 0x5bdb; 
0x00158d29: and bh, byte ptr [esi - 0x5e0466e]; xchg dword ptr [esp + eax + 0x6fa9ce9d], esp; ret; 
0x00177c91: and bh, ch; call dword ptr [esi]; 
0x001671a5: and bh, ch; jmp dword ptr [eax + 0x23]; 
0x00179a02: and bh, ch; jmp dword ptr [edx]; 
0x0006aa35: and bh, cl; ret; 
0x0016d594: and bh, dl; add al, byte ptr [eax]; mov bh, 0xb; cli; call dword ptr [eax - 0x29]; 
0x00178485: and bl, ah; cli; jmp dword ptr [edx]; 
0x00166b98: and bl, bh; cld; call eax; 
0x00166b98: and bl, bh; cld; call eax; sti; cld; jmp eax; 
0x00167bd1: and bl, ch; ljmp ptr [eax + 0x74000079]; and ch, bl; call eax; 
0x0017c520: and bl, dl; add byte ptr [eax], al; lodsb al, byte ptr [esi]; ret; 
0x0008d332: and bl, dl; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0002d27d: and byte ptr [0x7fffffff], 9; ror byte ptr [ecx - 0x22f7dbbc], 1; inc esp; and al, 4; ret; 
0x0002d53d: and byte ptr [0x7fffffff], 9; ror byte ptr [ecx - 0x26fbdbbc], 1; inc esp; and al, 4; ret; 
0x0011cb09: and byte ptr [0x89000000], al; dec esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x0011e50a: and byte ptr [eax + 1], bh; pop esi; pop edi; pop ebp; ret; 
0x00177620: and byte ptr [eax + eax - 0x10eae400], al; jmp dword ptr [eax]; 
0x0017c413: and byte ptr [eax - 0x7a], cl; add al, byte ptr [ebx + eax*4 + 3]; add bh, byte ptr [eax + 0xa]; push cs; add al, 0xc6; ret; 
0x00174277: and byte ptr [eax - 0x7d], cl; add edx, dword ptr [ebx - 0x7a]; add ah, byte ptr [ebp + 0xa]; push cs; add al, 0xc6; ret; 
0x0018bfc7: and byte ptr [eax - 0x7d], cl; add edx, dword ptr [ebx - 0x7a]; add dh, byte ptr [edi + 0xa]; push cs; add al, 0xc6; ret; 
0x0017346f: and byte ptr [eax - 0x7d], cl; add edx, dword ptr [ebx - 0x7a]; add dh, byte ptr [esi + 0xa]; push cs; add al, 0xc6; ret; 
0x00126c65: and byte ptr [eax - 0xffffff], 0xd0; add esp, 0x18; pop ebx; ret; 
0x000fffd8: and byte ptr [eax - 1], bh; pop esi; pop edi; pop ebp; ret; 
0x0017691c: and byte ptr [eax], 0; add al, al; add edi, ebp; call dword ptr [ebx]; 
0x0017691d: and byte ptr [eax], al; add al, al; add edi, ebp; call dword ptr [ebx]; 
0x000477a9: and byte ptr [eax], al; add al, ch; ret 0xe25; 
0x0018a10c: and byte ptr [eax], al; add byte ptr [eax], al; adc byte ptr [edi + 0x3ecc0001], ch; cli; call dword ptr [eax]; 
0x0019497c: and byte ptr [eax], al; add byte ptr [eax], al; adc byte ptr [edi + 2], 0; lodsb al, byte ptr [esi]; and esi, edi; jmp dword ptr [edi]; 
0x00079265: and byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x16a4e73c], al; in eax, dx; ret 0xffff; 
0x0019acfc: and byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x5ac3fffe], bh; clc; jmp dword ptr [edi]; 
0x0018b120: and byte ptr [eax], al; add byte ptr [eax], al; and al, 0xbf; add dword ptr [eax], eax; sub byte ptr [edi - 0xb], cl; call dword ptr [ebx]; 
0x0019ab1c: and byte ptr [eax], al; add byte ptr [eax], al; and byte ptr [ecx - 0x5f63fffe], bh; clc; jmp dword ptr [edx]; 
0x001870e4: and byte ptr [eax], al; add byte ptr [eax], al; call 0x1418726b; push edx; jmp dword ptr [ebx]; 
0x00171be4: and byte ptr [eax], al; add byte ptr [eax], al; call 0xf4171c16; ret 0xffeb; 
0x000b9a77: and byte ptr [eax], al; add byte ptr [eax], al; cmp dword ptr gs:[edx], 0x26; mov edx, 0xffffffff; cmovne eax, edx; ret; 
0x0018b144: and byte ptr [eax], al; add byte ptr [eax], al; dec eax; mov edi, 0x4f640001; cmc; call dword ptr [ebx]; 
0x0018b544: and byte ptr [eax], al; add byte ptr [eax], al; dec eax; ret; 
0x0019ab40: and byte ptr [eax], al; add byte ptr [eax], al; inc esp; mov ecx, 0xa0e80002; clc; jmp dword ptr [edx]; 
0x0018b568: and byte ptr [eax], al; add byte ptr [eax], al; insb byte ptr es:[edi], dx; ret; 
0x000566c5: and byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x00113467: and byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], edi; call dword ptr [eax + 0x18]; 
0x001881b8: and byte ptr [eax], al; add byte ptr [eax], al; mov esp, 0x4000018f; sal ebx, 1; call dword ptr [eax]; 
0x001977b8: and byte ptr [eax], al; add byte ptr [eax], al; mov esp, 0xf0000285; int 0xf7; jmp dword ptr [esi]; 
0x00184e88: and byte ptr [eax], al; add byte ptr [eax], al; mov word ptr [ecx + eax], ds; mov al, 0x49; cld; call ebx; 
0x0019aa8c: and byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x9f1c0002; clc; call dword ptr [ebx]; 
0x0019ac54: and byte ptr [eax], al; add byte ptr [eax], al; pop eax; mov edx, 0xa1240002; clc; jmp dword ptr [edi]; 
0x0018ac64: and byte ptr [eax], al; add byte ptr [eax], al; push 0x740001ba; cmp dh, ch; call dword ptr [ebx]; 
0x000b9a39: and byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0018a8bc: and byte ptr [eax], al; add byte ptr [eax], al; sal byte ptr [esi + 0x31ec0001], 0xf5; call dword ptr [ebp]; 
0x00190528: and byte ptr [eax], al; add byte ptr [eax], al; sub al, 0x13; add al, byte ptr [eax]; add byte ptr [eax - 0xa], bl; jmp dword ptr [ebx]; 
0x00186428: and byte ptr [eax], al; add byte ptr [eax], al; sub al, 0x72; add dword ptr [eax], eax; shl dh, 0xf2; jmp dword ptr [edx]; 
0x00188128: and byte ptr [eax], al; add byte ptr [eax], al; sub al, 0x8f; add dword ptr [eax], eax; adc al, 0xf3; call dword ptr [eax]; 
0x0018b32c: and byte ptr [eax], al; add byte ptr [eax], al; xor cl, al; add dword ptr [eax], eax; fcom qword ptr [esi - 0xb]; call dword ptr [ebx]; 
0x000f1d7c: and byte ptr [eax], al; add byte ptr [ebp - 0x7c99afec], cl; add al, byte ptr [ecx]; add esp, 8; pop ebx; ret; 
0x000ecc5a: and byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000478d1: and byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd285; 
0x00009542: and byte ptr [eax], al; ret; 
0x00182890: and byte ptr [eax], ch; int1; jmp esi; 
0x000003c8: and byte ptr [eax], cl; bound eax, qword ptr [eax]; ret 0x224; 
0x00054df1: and byte ptr [eax], dl; add byte ptr [eax], al; mov esi, dword ptr [esp + 0x1024]; mov edi, dword ptr [esp + 0x1028]; add esp, 0x102c; ret; 
0x00166f04: and byte ptr [eax], dl; std; push dword ptr [eax + 0x40fffd10]; adc ebp, edi; call dword ptr [eax + 0xf]; 
0x00167604: and byte ptr [ebp + edi*8 - 1], al; mov al, 0x44; std; inc dword ptr [eax + 0x45]; std; call eax; 
0x0017b289: and byte ptr [ebp - 0x11], ch; jmp dword ptr [edx]; 
0x000c55da: and byte ptr [ebp - 0x31b6f00a], al; xchg edi, ebx; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000b8582: and byte ptr [ebp - 0x5d], 0x6c; add byte ptr [eax], al; add byte ptr [eax + 0xbe], bh; int 0x80; 
0x00119444: and byte ptr [ebp - 0x6bc6ff8a], cl; ret; 
0x0016ce34: and byte ptr [ebp - 0x79fafffe], ah; stc; call dword ptr [eax - 0x5b]; 
0x0008ef77: and byte ptr [ebp - 0x7af0df81], cl; das; add eax, 0x5e5f0000; pop ebx; ret; 
0x0008d8d4: and byte ptr [ebp - 0x7af0df81], cl; rol byte ptr [eax + eax], cl; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0015a768: and byte ptr [ebp - 0xd], al; call dword ptr [eax + 0x45]; 
0x00183bd0: and byte ptr [ebp - 0xf], bl; call dword ptr [eax]; 
0x00174bd0: and byte ptr [ebp], dl; add ah, bl; outsd dx, dword ptr [esi]; in eax, dx; call dword ptr [eax]; 
0x0001aeac: and byte ptr [ebx + 0x24048900], cl; call 0x7c820; add esp, 0x18; pop ebx; ret; 
0x0002ae06: and byte ptr [ebx + 0x24048900], cl; call 0x95d60; add esp, 0x18; pop ebx; ret; 
0x0012b745: and byte ptr [ebx + 0x46894c4e], cl; add al, 0x29; ret 0x4689; 
0x0011caca: and byte ptr [ebx + 0x4c890850], cl; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x0011caca: and byte ptr [ebx + 0x4c890850], cl; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; add esp, 0x4c; ret; 
0x00199520: and byte ptr [ebx + 0x4ffc0002], ah; clc; jmp dword ptr [edx]; 
0x0011c9e0: and byte ptr [ebx + 0x54892850], cl; and al, 0x24; mov edx, dword ptr [eax + 8]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x000e1902: and byte ptr [ebx + 0x54898804], cl; and al, 4; mov dword ptr [esp + 8], eax; mov eax, dword ptr [esi + 0xc]; mov dword ptr [esp], eax; call dword ptr [esi + 0x24]; 
0x000cc89a: and byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x000b31cf: and byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x000da6a6: and byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret 0x18; 
0x000cb3d5: and byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x0006d0f8: and byte ptr [ebx + 0x5e5b6cc4], al; pop edi; pop ebp; ret; 
0x000410ab: and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00101843: and byte ptr [ebx + 0x5f5e10c4], al; pop ebp; ret; 
0x000c3f9a: and byte ptr [ebx + 0x5f5e24c4], al; pop ebp; ret; 
0x0016cd9c: and byte ptr [ebx + 0x74c20002], ah; stc; call dword ptr [eax - 0x5d]; 
0x0002dea7: and byte ptr [ebx + 0x7c8b241c], cl; and al, 4; add esp, 8; ret; 
0x0006428c: and byte ptr [ebx + 0x940684], cl; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x48]; 
0x00064fa8: and byte ptr [ebx + 0xa891], cl; add byte ptr [ebp - 0x74f48b2e], al; sbb dword ptr [eax - 0x77000000], 0xd2ff2404; add esp, 0x1c; ret; 
0x00198bcb: and byte ptr [ebx + eax*4 + 3], al; dec edi; xchg byte ptr [edx], al; add al, byte ptr [edx + 0xe]; add al, 0xc6; ret; 
0x00197523: and byte ptr [ebx + eax*4 + 3], al; dec edi; xchg byte ptr [edx], al; add bl, byte ptr [eax + 0xe]; add al, 0xc6; ret; 
0x00197033: and byte ptr [ebx + eax*4 + 3], al; dec edi; xchg byte ptr [edx], al; jno 0x19704a; add al, 0xc6; ret; 
0x001907d7: and byte ptr [ebx + eax*4 + 3], al; push ebx; xchg byte ptr [edx], al; add cl, byte ptr [esi + 0xe]; add al, 0xc6; ret; 
0x0017520f: and byte ptr [ebx + eax*4 + 3], al; push ebx; xchg byte ptr [edx], al; jnp 0x175226; add al, 0xc6; ret; 
0x00178ebb: and byte ptr [ebx + eax*4 + 3], al; push ebx; xchg byte ptr [edx], al; jo 0x178ed2; add al, 0xc6; ret; 
0x001715b7: and byte ptr [ebx + eax*4 + 3], al; push ebx; xchg byte ptr [edx], al; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00198c3f: and byte ptr [ebx + eax*4 + 3], al; push ebx; xchg byte ptr [edx], al; push 0xc6040e0a; ret; 
0x00195b3f: and byte ptr [ebx + eax*4 + 3], al; push ecx; xchg byte ptr [edx], al; jo 0x195b56; add al, 0xc6; ret; 
0x00188b17: and byte ptr [ebx + eax*4 + 3], al; push ecx; xchg byte ptr [edx], al; push 0xe; add al, 0xc6; ret; 
0x0019770f: and byte ptr [ebx + eax*4 + 3], cl; xchg byte ptr [edx], al; insb byte ptr es:[edi], dx; push cs; add al, 0xc6; ret; 
0x000f9387: and byte ptr [ebx - 0x12f75], cl; jmp dword ptr [ebp - 0x75]; 
0x000d646a: and byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x00025be1: and byte ptr [ebx - 0x1d373], cl; inc dword ptr [edi + 0x6b8cb]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009488e: and byte ptr [ebx - 0x1f17df40], al; push esp; or dword ptr [eax], eax; add ecx, 0xc606d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009158e: and byte ptr [ebx - 0x1f17df40], al; xchg dword ptr [ecx], ecx; add byte ptr [ecx + 0xc92edc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00094866: and byte ptr [ebx - 0x3f7cef3a], al; adc al, ch; add eax, 0x81000955; rcl dword ptr [edx + 0x3000c60], 0xc; xchg eax, ecx; jmp ecx; 
0x000eeee3: and byte ptr [ebx - 0x42dbdb84], cl; or byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x0016cfd4: and byte ptr [ebx - 0x5899fffe], dh; stc; call dword ptr [eax - 0x4d]; 
0x0017a1d0: and byte ptr [ebx - 0x6bd60000], ch; out dx, eax; call dword ptr [eax]; 
0x00127558: and byte ptr [ebx - 0x74dbdb84], cl; insb byte ptr es:[edi], dx; and al, 0x28; add esp, 0x2c; ret 4; 
0x000d9c5d: and byte ptr [ebx - 0x74dbdb84], cl; insb byte ptr es:[edi], dx; and al, 0x28; add esp, 0x2c; ret 8; 
0x00019bce: and byte ptr [ebx - 0x74dbdb84], cl; insb byte ptr es:[edi], dx; and al, 0x28; add esp, 0x2c; ret; 
0x000eeae8: and byte ptr [ebx - 0x74dbdb84], cl; insb byte ptr es:[edi], dx; and al, 0x28; int 0x80; 
0x000e0e13: and byte ptr [ebx - 0x74dbdb84], cl; insb byte ptr es:[edi], dx; and al, 0x28; mov eax, 0x110; call dword ptr gs:[0x10]; 
0x000e4f13: and byte ptr [ebx - 0x74dbdb84], cl; insb byte ptr es:[edi], dx; and al, 0x28; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000efb39: and byte ptr [ebx - 0x74e3dbac], cl; dec esp; and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000eeb0f: and byte ptr [ebx - 0x74e3dbac], cl; dec esp; and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000ef38f: and byte ptr [ebx - 0x74e3dbac], cl; dec esp; and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x153; call dword ptr gs:[0x10]; 
0x000effcf: and byte ptr [ebx - 0x74e3dbac], cl; dec esp; and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x15b; call dword ptr gs:[0x10]; 
0x000f002f: and byte ptr [ebx - 0x74e3dbac], cl; dec esp; and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x15c; call dword ptr gs:[0x10]; 
0x000e7e98: and byte ptr [ebx - 0x74e3dbac], cl; dec esp; and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000efb77: and byte ptr [ebx - 0x74e3dbb4], cl; pop esp; and al, 0x18; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000eaea3: and byte ptr [ebx - 0x74e3dbb4], cl; pop esp; and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000ecb37: and byte ptr [ebx - 0x78efdbb4], cl; sar dword ptr [eax + 0x3e], cl; call dword ptr gs:[0x10]; 
0x0006f761: and byte ptr [ebx - 0x7cdfdbac], cl; sar bh, 0x21; ret 0x468b; 
0x0011425d: and byte ptr [ebx - 0x7ce3dbac], cl; clc; push dword ptr [ecx + eax*2 - 0x77]; push esi; sub al, 1; ret 0x5689; 
0x001090d5: and byte ptr [ebx - 0x8f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x000f6748: and byte ptr [ebx - 0xf76eb3c], al; pop ebx; pop esi; ret; 
0x001675c0: and byte ptr [ebx - 3], cl; call eax; 
0x001677a4: and byte ptr [ebx - 3], dl; push dword ptr [eax + 0x40fffd53]; push esp; std; call eax; 
0x0007042a: and byte ptr [ebx], ch; inc ebp; sbb al, 0x89; ret 0xfac1; 
0x000f0fa8: and byte ptr [ebx], cl; add byte ptr [ecx - 0x76f3dba4], cl; ret; 
0x0007c877: and byte ptr [ecx + 0x10e82404], cl; dec ebx; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0003175f: and byte ptr [ecx + 0x140c4], al; add byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x0007c01a: and byte ptr [ecx + 0x187e8906], cl; mov dword ptr [esp], eax; call edx; 
0x000e868a: and byte ptr [ecx + 0x1de82404], cl; leave; idiv bh; add esp, 0x18; pop ebx; ret; 
0x000df5f9: and byte ptr [ecx + 0x244c8bda], cl; or byte ptr [ebx - 0x47fbdba4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00199320: and byte ptr [ecx + 0x446c0002], ah; clc; jmp dword ptr [eax]; 
0x0006b5f8: and byte ptr [ecx + 0x488b0448], cl; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x000319cf: and byte ptr [ecx + 0x4c892434], cl; and al, 8; mov ecx, dword ptr [esp + 0x2c]; mov dword ptr [esp + 4], ecx; call edi; 
0x00040e9e: and byte ptr [ecx + 0x59e82404], cl; mov word ptr [0x1cc48300], es; ret; 
0x000b098b: and byte ptr [ecx + 0x5d5f5ef0], cl; ret; 
0x000d62e2: and byte ptr [ecx + 0x5d5f5ef8], cl; ret; 
0x00042171: and byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00047af8: and byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x00097c25: and byte ptr [ecx + 0x62e82404], cl; imul edi, esi, -1; add esp, 0x18; pop ebx; ret; 
0x0003466d: and byte ptr [ecx + 0x74402474], cl; sbb byte ptr [ebx - 0x7cbfdbac], cl; ret 0xf01; 
0x00099d2f: and byte ptr [ecx + 0x8e82404], cl; dec ecx; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00115acc: and byte ptr [ecx + 0xf502444], cl; xchg eax, esi; ret 0x4439; 
0x0016c56c: and byte ptr [ecx + 2], dh; add byte ptr [eax + edx*4 - 8], dh; call dword ptr [eax + 0x71]; 
0x0006896a: and byte ptr [ecx - 0x17ebdba4], cl; call dword ptr [ebx]; 
0x00077b6a: and byte ptr [ecx - 0x17ebdba4], cl; jmp dword ptr [ecx]; 
0x000709aa: and byte ptr [ecx - 0x17ebdba4], cl; mov edi, 0x81000b93; ret; 
0x000327aa: and byte ptr [ecx - 0x17ebdba4], cl; mov edi, 0x81000f75; ret; 
0x00040ba6: and byte ptr [ecx - 0x17ebdba4], cl; ret; 
0x0012adaa: and byte ptr [ecx - 0x17efdba4], cl; mov edi, 0x81ffffef; ret; 
0x00098974: and byte ptr [ecx - 0x17fbdbbc], cl; adc al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000b7d8d: and byte ptr [ecx - 0x17fbdbbc], cl; or dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0004c522: and byte ptr [ecx - 0x1a17dbfc], cl; lodsb al, byte ptr [esi]; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x00120cb7: and byte ptr [ecx - 0x1f17dbcc], cl; ret 0xfff5; 
0x000197ec: and byte ptr [ecx - 0x2f00dbec], cl; add esp, 0x18; pop ebx; ret; 
0x001047ab: and byte ptr [ecx - 0x3317dbfc], cl; cdq; idiv edi; add esp, 0x18; pop ebx; ret; 
0x00040ece: and byte ptr [ecx - 0x3617dbfc], cl; mov word ptr [0x1cc48300], es; ret; 
0x00035a3f: and byte ptr [ecx - 0x3717dbfc], cl; push es; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0007ad76: and byte ptr [ecx - 0x4e17dbfc], cl; mov esi, 0xba0006; add byte ptr [eax], al; add byte ptr [ebx + 0x440ffff8], al; ret 0xc483; 
0x0019ab20: and byte ptr [ecx - 0x5f63fffe], bh; clc; jmp dword ptr [edx]; 
0x0012498a: and byte ptr [ecx - 0x6c00dbfc], cl; mov al, byte ptr [0x89ffffeb]; ret 0xc483; 
0x00111890: and byte ptr [ecx - 0x76fbdb84], cl; add al, 0x24; call dword ptr [edx + 4]; 
0x0011acb1: and byte ptr [ecx - 0x76fbdb84], cl; add al, 0x24; call dword ptr [edx + 8]; 
0x0003165f: and byte ptr [ecx - 0x76fbdb8c], cl; dec esp; and al, 8; mov dword ptr [esp], edx; call edi; 
0x00116496: and byte ptr [ecx - 0x76fbdb94], cl; add al, 0x24; call dword ptr [edx + 8]; 
0x0006ceb5: and byte ptr [ecx - 0x76fbdb94], cl; xor al, 0x24; sub eax, ebp; mov dword ptr [esp + 8], eax; call dword ptr [edx + 0x38]; 
0x0011a76f: and byte ptr [ecx - 0x76fbdbb4], cl; add al, 0x24; call dword ptr [edx + 4]; 
0x001119b5: and byte ptr [ecx - 0x76fbdbb4], cl; dec esp; and al, 0x18; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x000711da: and byte ptr [ecx - 0x76fbdbbc], cl; xor al, 0x24; sub edx, eax; mov dword ptr [esp + 8], edx; call dword ptr [ecx + 0x38]; 
0x00035a7f: and byte ptr [ecx - 0x7717dbfc], cl; push es; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000d1457: and byte ptr [ecx - 0x7cdfdb8c], cl; ret 0x3b01; 
0x000692f2: and byte ptr [ecx], al; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x124]; mov ebp, dword ptr [esp + 0x128]; add esp, 0x12c; ret; 
0x0011bcbe: and byte ptr [ecx], al; add byte ptr [eax], al; mov esi, dword ptr [esp + 0x124]; mov edi, dword ptr [esp + 0x128]; add esp, 0x12c; ret; 
0x0016975d: and byte ptr [ecx], al; add byte ptr [edi + edi*2 - 0x10], al; call dword ptr [eax + 0x20]; 
0x00095885: and byte ptr [ecx], al; ret 0x167c; 
0x0008098c: and byte ptr [ecx], al; ret 0x448b; 
0x00166e28: and byte ptr [ecx], al; std; push dword ptr [eax + 0x40fffd01]; add bh, ch; call eax; 
0x000a715d: and byte ptr [ecx], bh; dec edi; and byte ptr [edi], cl; test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x00025bb9: and byte ptr [ecx], bh; ret 0x4d0f; 
0x0006f77c: and byte ptr [ecx], bh; ret 0x820f; 
0x000060f8: and byte ptr [ecx], bl; lldt word ptr [ebx + 0x22000000]; add byte ptr [eax + eax], cl; ret 3; 
0x000a565b: and byte ptr [ecx], ch; ret 0x895e; 
0x00096b38: and byte ptr [ecx], ch; ret 0xc083; 
0x00071637: and byte ptr [ecx], ch; ret 0xd739; 
0x0006fffd: and byte ptr [ecx], ch; ror byte ptr [ecx - 0x76fbdbac], 1; inc esp; and al, 8; mov dword ptr [esp], ebp; call ecx; 
0x0018ffd0: and byte ptr [ecx], cl; add al, byte ptr [eax]; sbb dword ptr [ebp - 0xa], edx; call dword ptr [eax]; 
0x000e3d0d: and byte ptr [ecx], cl; ret 0x6674; 
0x00041091: and byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000a561c: and byte ptr [ecx], dh; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x0011efbf: and byte ptr [ecx], dh; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xd089; 
0x000e960b: and byte ptr [edi + 0x140b8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000fab73: and byte ptr [edi + 0x31], dh; ror byte ptr [ebx - 0x74ebdba4], 0x74; and al, 0x18; add esp, 0x1c; ret; 
0x0008dc77: and byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00083fb7: and byte ptr [edi + 0x5e], bl; ret; 
0x000ff04c: and byte ptr [edi + 0xb2b8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00111956: and byte ptr [edi + esi - 0x77], dh; add al, 0x24; call dword ptr [edx + 0xc]; 
0x0016d1fc: and byte ptr [edi - 0x354efffe], bh; stc; call dword ptr [eax - 0x41]; 
0x0016cf1c: and byte ptr [edi - 0x63ebfffe], ch; stc; call dword ptr [eax - 0x51]; 
0x0017317b: and byte ptr [edi - 0x7a], cl; add al, byte ptr [ebx + 0xe750203]; add al, 0xc6; ret; 
0x0018b0d0: and byte ptr [edi - 0xb], cl; call dword ptr [ebx]; 
0x001676c8: and byte ptr [edi - 3], cl; push dword ptr [eax - 0x1f0002b1]; dec ebp; std; jmp dword ptr [eax + 0x4e]; 
0x00166e00: and byte ptr [edi*8 - 0x2f2ff01], cl; call eax; 
0x00166e00: and byte ptr [edi*8 - 0x2f2ff01], cl; call eax; or eax, 0xea0fffd; std; call dword ptr [eax]; 
0x000b7d4f: and byte ptr [edi], al; add byte ptr [ecx + 0xeb2a2c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00173dd0: and byte ptr [edi], al; add cl, ch; mov cl, 0xec; call dword ptr [eax]; 
0x000955c2: and byte ptr [edi], cl; mov esp, 0x76c229c0; push ss; lea eax, dword ptr [edi + eax + 0x20]; pop edi; ret; 
0x00147851: and byte ptr [edi], cl; test dword ptr [eax - 0x73000000], ecx; inc edi; hlt; pop edi; ret; 
0x00148601: and byte ptr [edi], cl; test dword ptr [eax - 0x7d000000], ebp; ret 0xf04; 
0x001478a4: and byte ptr [edi], cl; test dword ptr [ebp - 0x73000000], edx; inc edi; cld; pop edi; ret; 
0x00148664: and byte ptr [edi], cl; test dword ptr [ebp - 0x7d000000], esp; ret 0xf0c; 
0x000a7160: and byte ptr [edi], cl; test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x0008ef7a: and byte ptr [edi], cl; test dword ptr [edi], ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x00148e4b: and byte ptr [edi], cl; test dword ptr [edx - 0x9fffffd], esi; ret 0xf40; 
0x00148f6b: and byte ptr [edi], cl; test dword ptr [esi - 0xa000000], ebp; ret 0xf40; 
0x0014724c: and byte ptr [edi], cl; test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x0008d8d7: and byte ptr [edi], cl; test edx, edx; add al, 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000774a2: and byte ptr [edi], cl; xchg eax, ebp; ret 0xc883; 
0x000f71f0: and byte ptr [edi], cl; xchg eax, esp; ret 0xd3eb; 
0x000ad6c9: and byte ptr [edi], cl; xchg eax, esp; ret 0xd789; 
0x0016e68c: and byte ptr [edi], dh; add eax, dword ptr [eax]; movsb byte ptr es:[edi], byte ptr [esi]; sti; jmp eax; 
0x000fe0eb: and byte ptr [edx + 0x5b], dh; pop esi; ret; 
0x0016ee04: and byte ptr [edx + 0x6fb40002], bl; cld; jmp eax; 
0x0016d17c: and byte ptr [edx + eax - 0x63acb00], bh; call dword ptr [eax - 0x44]; 
0x00068123: and byte ptr [edx + ecx - 0x75], dh; inc eax; cmp byte ptr [ebp - 0xcfc8740], al; ret; 
0x000dfcaf: and byte ptr [edx + edx*8 + 0x4c8b1474], al; and al, 0x2c; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000ad91a: and byte ptr [edx + esi*8 - 0x73], dh; push eax; rol byte ptr [eax - 0x78f0f606], 1; ret; 
0x0017b769: and byte ptr [edx - 0x11], bh; jmp dword ptr [edx]; 
0x00171ae3: and byte ptr [edx - 0x7d], cl; add edx, dword ptr [ebx - 0x7a]; add dh, byte ptr [edi + 0xe]; add al, 0xc6; ret; 
0x0018f117: and byte ptr [edx], al; cwde; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017acfd: and byte ptr [edx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001916ec: and byte ptr [edx], al; ret 0xe0a; 
0x00031546: and byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x0013087c: and byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x00095812: and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], -0x40; ret; 
0x001482f2: and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x71850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x001944d0: and byte ptr [esi + 2], cl; add al, bl; and edi, esi; call dword ptr [eax]; 
0x00005838: and byte ptr [esi + 6], dl; add byte ptr [eax + 0x22000001], bl; add byte ptr [eax + eax], cl; ret; 
0x0019b4d0: and byte ptr [esi - 0x2597fffe], bh; clc; call dword ptr [eax]; 
0x0016798c: and byte ptr [esi - 0x692f0004], dl; cld; jmp dword ptr [eax - 0x69]; 
0x0015a780: and byte ptr [esi - 0xd], al; call dword ptr [eax + 0x46]; 
0x00199d40: and byte ptr [esi - 8], bl; jmp dword ptr [ebx]; 
0x00167388: and byte ptr [esi], dh; std; push dword ptr [eax + 0x40fffd36]; aaa; std; call eax; 
0x000e9971: and byte ptr [esp + ebp*2 - 0x7d], dh; cli; or dword ptr [edi - 0x7d], esi; cli; or dh, byte ptr [edx - 0x77]; ret 0xb60f; 
0x00148fb6: and ch, 0; add byte ptr [eax], al; lea eax, dword ptr [eax + 0xb]; pop edi; ret; 
0x0017c950: and ch, 0xef; call dword ptr [eax]; 
0x001670a5: and ch, bh; call dword ptr [edx + 0x20]; 
0x0016704d: and ch, bh; call eax; 
0x001671a1: and ch, bh; call eax; and bh, ch; jmp dword ptr [eax + 0x23]; 
0x0016704d: and ch, bh; call eax; pop ds; std; jmp dword ptr [eax]; 
0x00167029: and ch, bh; call edx; 
0x0016703d: and ch, bh; call esi; 
0x0016703d: and ch, bh; call esi; pop ds; std; jmp dword ptr [esi]; 
0x00167039: and ch, bh; dec esp; and ch, bh; call esi; 
0x00167049: and ch, bh; inc esi; and ch, bh; call eax; 
0x0017a136: and ch, bh; jmp dword ptr [edx]; 
0x00177d95: and ch, bh; jmp dword ptr [esi]; 
0x0016709d: and ch, bh; push dword ptr [edx + 0x2fffd1f]; and ch, bh; call dword ptr [edx + 0x20]; 
0x00167045: and ch, bh; push dword ptr [esi + 0x20]; std; inc esi; and ch, bh; call eax; 
0x00167bd9: and ch, bl; call eax; 
0x000c6bec: and ch, byte ptr [eax + 0x33850f01]; add al, byte ptr [eax]; add dh, dh; ret 0xf01; 
0x00168824: and cl, al; add byte ptr [eax], al; in al, 0x6c; in eax, dx; jmp dword ptr [eax - 0x3f]; 
0x000c733d: and cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000f717d: and cl, byte ptr [ebx - 0x12f55]; jmp dword ptr [ebp - 0x75]; 
0x000c6be8: and cl, byte ptr [edi]; mov dh, 0x55; and ch, byte ptr [eax + 0x33850f01]; add al, byte ptr [eax]; add dh, dh; ret 0xf01; 
0x00182219: and cl, dh; jmp dword ptr [ebx]; 
0x00168e1c: and dh, 0; add byte ptr [ebx + ebx*8], bh; out dx, eax; push dword ptr [eax + 0x480000e6]; fucomi st(7); jmp eax; 
0x00037f69: and dh, 0xff; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00168e0c: and dh, ah; add byte ptr [eax], al; aam 0xd9; out dx, eax; call dword ptr [eax]; 
0x00194445: and dh, bh; call dword ptr [eax]; 
0x000e4ce2: and dh, bl; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x00187a45: and dh, bl; jmp dword ptr [eax + 3]; 
0x0008e951: and dh, byte ptr [ecx + ecx + 0x5bc18100]; mov esi, 0xc03000c; cdq; jmp ecx; 
0x0017a1c5: and dh, byte ptr [ecx]; out dx, eax; jmp dword ptr [edx]; 
0x00097bad: and dh, byte ptr [ecx]; ror byte ptr [ebx - 0x74fbdba4], 0x74; and al, 8; add esp, 0xc; ret; 
0x0018cfa2: and dh, ch; jmp dword ptr [edx]; 
0x00165e18: and dh, cl; cld; inc dword ptr [eax - 0x32]; cld; call dword ptr [ebx]; 
0x0018ecd1: and dh, dh; call ebx; 
0x0018eca1: and dh, dh; jmp dword ptr [edi]; 
0x00166290: and dh, dl; cld; jmp dword ptr [eax - 0x2a]; 
0x00133149: and dl, 0xf2; cld; jmp dword ptr [esi - 0x70]; 
0x0016694c: and dl, ah; cld; push dword ptr [eax + 0x40fffce2]; jecxz 0x166953; call eax; 
0x00169174: and dl, bh; add byte ptr [eax], al; or byte ptr [esi], 0xf0; call dword ptr [eax - 6]; 
0x0016691c: and dl, ch; cld; call eax; 
0x00177725: and dl, dl; out dx, al; jmp dword ptr [edx]; 
0x000734c1: and dword ptr [eax + 0x1000018], 0x5b; ret; 
0x0014ac37: and dword ptr [eax + 0x1b], 0; add byte ptr [ecx + 0xce82404], cl; ret; 
0x000023fb: and dword ptr [eax + 0x63], ecx; xchg eax, esp; or dword ptr [eax + 0x41001835], 0xffffffdd; out 0xa9, al; ret 0xbd07; 
0x000fbcf0: and dword ptr [eax + edi - 0x373f0000], 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000fbcb0: and dword ptr [eax - 0x3effffc8], 0xffffffc8; or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr [esp], edx; call eax; 
0x00026a53: and dword ptr [eax - 0x76000001], 0x10; pop ebx; pop esi; pop edi; ret; 
0x0006aa34: and dword ptr [eax], 0xffffffcf; ret; 
0x00101a8b: and dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000ded2b: and dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014331e: and dword ptr [eax], eax; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00003697: and dword ptr [ebp + 0x7a8c9b32], ecx; mov dh, 0x1b; add eax, 0x572808a8; call dword ptr [esi + 0x6f]; 
0x0011e57e: and dword ptr [ebx - 0x3ca1e73c], eax; lea esi, dword ptr [esi]; mov eax, dword ptr [ecx + 4]; mov dword ptr [esp + 4], esi; mov dword ptr [esp], ecx; call dword ptr [eax + 4]; 
0x0016e2e5: and dword ptr [ebx], eax; add byte ptr [edi + edi*2], ah; sti; call esp; 
0x0007e332: and dword ptr [ecx + 0x24348bf0], ecx; add esp, 8; ret; 
0x000f6ceb: and dword ptr [ecx + 0x290c2444], ecx; ret 0x838d; 
0x0007b5f0: and dword ptr [ecx + ebx], 0; add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00106587: and dword ptr [ecx], eax; add byte ptr [eax], al; mov dword ptr gs:[edx], ecx; add esp, 0x28; pop ebx; ret; 
0x0016ff7e: and dword ptr [ecx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017e0e4: and dword ptr [ecx], eax; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x000b3dcb: and dword ptr [ecx], ecx; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000038bd: and dword ptr [ecx], edi; push cs; pop esp; ret; 
0x0011c4ce: and dword ptr [edi + edi*8 - 0x3b7c0001], 8; pop ebx; ret; 
0x000b7bbe: and dword ptr [edi], eax; add byte ptr [ecx + 0xeb433c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eca2e: and dword ptr [edx + 0xffffbc7], 0x44; ret 0x7c89; 
0x0002e9fa: and dword ptr [edx + 4], 0xfffffffe; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0002eb0b: and dword ptr [edx + esi*4], eax; xor eax, eax; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0002e8ea: and dword ptr [edx + esi*4], eax; xor eax, eax; pop esi; ret; 
0x00146b9b: and dword ptr [edx], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0004979e: and dword ptr [edx], eax; add byte ptr [ebx - 0x6bf0fe40], al; ret 0xc5eb; 
0x0016b5e5: and dword ptr [edx], eax; add byte ptr [esp + edi*8 - 0xa], dh; jmp eax; 
0x0016b5dd: and dword ptr [edx], eax; add byte ptr [esp + edi*8 - 0xa], dl; inc esp; and dword ptr [edx], eax; add byte ptr [esp + edi*8 - 0xa], dh; jmp eax; 
0x0006b690: and dword ptr [esi + 0x3c], 0xfffffff7; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00158921: and dword ptr [esi + ebp*2 - 0x7a], edi; lahf; ret 0x871e; 
0x00076cd8: and dword ptr [esi + edi*8 + 0x1489ffff], 0x24; mov dword ptr [esp + 0x28], edx; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x00076f51: and dword ptr [esi + edi*8 + 0x4c7ffff], 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [eax]; 
0x000fe23f: and dword ptr [esi], 0xffffffca; sti; dec dword ptr [ecx - 0x17fbdbbc]; ret; 
0x0006bfc5: and dword ptr [esi], 0xffffffef; add esp, 0x18; pop esi; ret; 
0x00072320: and dword ptr [esi], 0xfffffffe; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00026f3c: and eax, 0x1000; ret; 
0x00026f0c: and eax, 0x100; ret; 
0x000e5db7: and eax, 0x100f; ret; 
0x00026edc: and eax, 0x2000; ret; 
0x00026e2c: and eax, 0x200; ret; 
0x0016eaf5: and eax, 0x22a70003; cld; jmp eax; 
0x001671b9: and eax, 0x2630fffd; std; inc eax; std; call dword ptr [eax + 0x27]; 
0x000e7ab6: and eax, 0x34245c8b; mov edi, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x00026e8c: and eax, 0x4000; ret; 
0x00026dac: and eax, 0x400; ret; 
0x000b819c: and eax, 0x405de8c3; add al, 0; mov ecx, eax; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000eb511: and eax, 0x5b1cc483; pop esi; pop edi; pop ebp; ret; 
0x000e0ad2: and eax, 0x7c8b000c; and al, 0x10; xchg edi, ebx; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x000e0a2a: and eax, 0x7c8b000c; and al, 0xc; xchg edi, ebx; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00027034: and eax, 0x7f; ret; 
0x0002d7ce: and eax, 0x7fff; or eax, edx; mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x0002d53e: and eax, 0x7fffffff; or eax, edx; mov dword ptr [esp + 4], eax; fld dword ptr [esp + 4]; ret; 
0x0002d27e: and eax, 0x7fffffff; or eax, edx; mov dword ptr [esp + 8], eax; fld qword ptr [esp + 4]; ret; 
0x0002d4b1: and eax, 0x80000000; ret; 
0x00026e5c: and eax, 0x8000; ret; 
0x00026dfc: and eax, 0x800; ret; 
0x00069fe6: and eax, 0x804; ret; 
0x0011764a: and eax, 0x81000127; ret; 
0x0006b84a: and eax, 0x81000be5; ret; 
0x0003224a: and eax, 0x81000f7b; ret; 
0x0013af4a: and eax, 0x81fffeee; ret; 
0x0012ec4a: and eax, 0x81ffffb1; ret; 
0x000a4cc7: and eax, 0x89fff722; ret 0x458b; 
0x000716c0: and eax, 0x8b04468b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x000ca61c: and eax, 0xc; add esp, 0x1c; ret; 
0x000fc3c8: and eax, 0xc; pop ebx; ret; 
0x000cf114: and eax, 0xc; ret 8; 
0x001799fc: and eax, 0xd1cffef; out dx, eax; and bh, ch; jmp dword ptr [edx]; 
0x00193710: and eax, 0xd1cfff6; and al, 0xf6; jmp dword ptr [edx]; 
0x001937d0: and eax, 0xd1cfff6; out dx, al; and al, 0xf6; jmp dword ptr [edx]; 
0x0008c0d7: and eax, 0xe9fffff5; pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00087be7: and eax, 0xe9fffff6; pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x00124ab6: and eax, 0xe; add byte ptr [eax], al; call dword ptr [eax + 0x10]; 
0x00124b0f: and eax, 0xe; add byte ptr [eax], al; call dword ptr [eax + 0x14]; 
0x00124dc2: and eax, 0xe; add byte ptr [eax], al; call dword ptr [eax + 0xc]; 
0x00124a4e: and eax, 0xe; add byte ptr [eax], al; call dword ptr [eax + 4]; 
0x00124d13: and eax, 0xe; add byte ptr [eax], al; call dword ptr [eax + 8]; 
0x000d9596: and eax, 0xe; add byte ptr [eax], al; call dword ptr [eax]; 
0x000d95c6: and eax, 0xe; add byte ptr [eax], al; mov dword ptr [esp + 0x1c], edx; call dword ptr [eax + 0x14]; 
0x000d95b4: and eax, 0xe; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0xc]; 
0x0012628e: and eax, 0xe; add byte ptr [eax], al; xor ebp, ebp; call dword ptr [eax + 0x14]; 
0x0016b121: and eax, 0xffa0fff5; add dword ptr [eax], eax; xor al, 0x26; cmc; call eax; 
0x000fd41b: and eax, 0xffff; ret; 
0x00105044: and eax, 0xffff; ror ax, 8; ret; 
0x000e5e0d: and eax, 0xffffeff0; or eax, edx; mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x00031161: and eax, 0xfffff; or edx, eax; mov dword ptr [esp + 4], edx; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0010505c: and eax, 0xffffff; ret; 
0x0010fae7: and eax, 0xfffffff8; add eax, 0xc; ret; 
0x0007a48a: and eax, 0xfffffff8; sub eax, 8; pop esi; ret; 
0x0011335b: and eax, 0xfffffffc; lea eax, dword ptr [eax + ecx + 0x28]; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edi; call dword ptr [edx + 0x18]; 
0x000ca2fc: and eax, 1; neg eax; ret 8; 
0x00026fcc: and eax, 1; ret; 
0x00026ddc: and eax, 2; ret; 
0x0002f84e: and eax, 2; sub eax, 1; pop esi; pop edi; ret; 
0x00026ebc: and eax, 4; ret; 
0x00026d8c: and eax, 8; ret; 
0x0016f450: and eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e6102], al; ret; 
0x001430ce: and eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00113b43: and eax, dword ptr [eax]; add byte ptr [esi - 0x43], ah; add dword ptr [eax], eax; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x00120c6b: and eax, dword ptr [ebx + 0x5589f0e2]; mov ah, 1; ret 0xd639; 
0x0013448c: and eax, dword ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0016e345: and eax, dword ptr [ebx]; add byte ptr [esp + eax*4], al; sti; call dword ptr [eax + 0x4000323]; test ebx, edi; jmp esp; 
0x000ef7d1: and eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e9754: and eax, dword ptr [edi + 0x12bb8df]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b94cb: and eax, dword ptr [edi + 0xd0b8df]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b955b: and eax, dword ptr [edi + 0xd2b8df]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0016b63d: and eax, dword ptr [edx]; add ah, dl; or bh, dh; jmp eax; 
0x00027215: and eax, dword ptr [esp + 8]; ret; 
0x0002d212: and eax, ecx; ret; 
0x00074f6c: and eax, ecx; sub esi, eax; mov dword ptr [esp], esi; call dword ptr [edx]; 
0x0002d755: and eax, edx; ret; 
0x001692a1: and eax, esi; jmp dword ptr [eax + 0x4000100]; 
0x00169299: and eax, esi; push dword ptr [eax]; add dword ptr [eax], eax; and eax, esi; jmp dword ptr [eax + 0x4000100]; 
0x001134e3: and ebp, 0xfffffffc; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], edi; call dword ptr [eax + 0x18]; 
0x0017b349: and ebp, dword ptr [ebp - 0x11]; jmp dword ptr [edx]; 
0x0017b598: and ebp, esi; out dx, eax; call dword ptr [eax]; 
0x000a7c89: and ebx, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0014970c: and ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x0016633c: and ebx, eax; cld; jmp dword ptr [ebx - 0x28]; 
0x001665c0: and ebx, ebx; cld; call dword ptr [ebx - 0x25]; 
0x00176d1d: and ebx, ecx; out dx, al; jmp dword ptr [edx]; 
0x0016a7c1: and ebx, esi; lcall ptr [eax]; ret 1; 
0x001665d4: and ebx, esp; cld; call dword ptr [ebx - 0x24]; 
0x00025eb3: and ecx, 0x10; add byte ptr [eax], al; lea eax, dword ptr [ebx + 0x10ac]; pop ebx; ret; 
0x0010506d: and ecx, 0xc0000000; and edx, 0xff; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x000e5e73: and ecx, 0xffffeff0; or ecx, edx; mov dword ptr [eax + 8], ecx; xor eax, eax; pop ebx; ret; 
0x0007a473: and ecx, 0xfffffff8; test byte ptr [edx + ecx - 4], 1; lea esi, dword ptr [ecx - 4]; cmovne eax, esi; pop esi; ret; 
0x00113358: and ecx, 0xfffffffc; and eax, 0xfffffffc; lea eax, dword ptr [eax + ecx + 0x28]; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edi; call dword ptr [edx + 0x18]; 
0x0007c905: and ecx, 3; call 0x7c90d; pop edx; lea ecx, dword ptr [edx + ecx*8 + 0xb]; jmp ecx; 
0x0007e3d5: and ecx, 3; call 0x7e3dd; pop edx; lea ecx, dword ptr [edx + ecx*8 + 0xb]; jmp ecx; 
0x001200ee: and ecx, 7; mov eax, ebx; sub eax, dword ptr [ebx + ecx*4 - 0x82ef4]; shr edx, 3; jmp eax; 
0x000e6034: and ecx, dword ptr [eax - 0x78d0dbbc]; fistp qword ptr [eax + 0x36]; call dword ptr gs:[0x10]; 
0x000634cb: and ecx, dword ptr [ebp - 0x7cffd98c]; ret 0xf01; 
0x000e1423: and ecx, dword ptr [ebx + 0x748b241c]; and al, 4; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00112d18: and ecx, dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x7d]; 
0x000e682c: and ecx, dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x0010b97b: and ecx, dword ptr [edi]; xchg esi, esp; add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x00165e08: and ecx, esi; cld; inc dword ptr [ebx - 0x32]; cld; jmp eax; 
0x0017a076: and edi, ebp; jmp dword ptr [edx]; 
0x00024df4: and edi, edi; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x0018c1e9: and edi, edx; call dword ptr [edi]; 
0x001944a5: and edi, esi; call dword ptr [eax]; 
0x00033888: and edx, 0x3ff; xor eax, edx; mov dword ptr [ecx], esi; pop esi; ret; 
0x0002d4f9: and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x0002d538: and edx, 0x80000000; and eax, 0x7fffffff; or eax, edx; mov dword ptr [esp + 4], eax; fld dword ptr [esp + 4]; ret; 
0x0002d278: and edx, 0x80000000; and eax, 0x7fffffff; or eax, edx; mov dword ptr [esp + 8], eax; fld qword ptr [esp + 4]; ret; 
0x0002d7c8: and edx, 0x8000; and eax, 0x7fff; or eax, edx; mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x00105073: and edx, 0xff; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x000e6498: and edx, 0xfffffecf; or edx, 0x30; mov dword ptr [eax + 8], edx; mov byte ptr [eax + 0x17], 1; mov byte ptr [eax + 0x16], 0; ret; 
0x0002e764: and edx, 1; mov dword ptr [esi + 4], edx; add esp, 0x34; pop ebx; pop esi; ret; 
0x0011bb07: and edx, 2; sub edx, 1; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x0007e2cb: and edx, 3; rep stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x00094950: and edx, dword ptr [ecx + ecx]; add ecx, 0xc6030; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00165e4c: and edx, edx; cld; jmp dword ptr [ebx - 0x2e]; 
0x001660a8: and edx, esp; cld; call dword ptr [ebx - 0x2c]; 
0x000eee41: and esi, 0xfff; or eax, esi; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x0017e105: and esi, eax; jmp dword ptr [edi]; 
0x00194985: and esi, edi; jmp dword ptr [edi]; 
0x0018eebd: and esi, esi; jmp dword ptr [esi]; 
0x0018ecfd: and esi, esi; jmp edi; 
0x0000052e: and esp, dword ptr [eax]; add dh, ah; ret 0xad0; 
0x000e0bd3: and esp, dword ptr [esp + ecx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00188d31: and esp, esi; jmp dword ptr [edi]; 
0x00166340: arpl ax, bx; cld; call dword ptr [ebx - 0x2c000328]; fdivr st(4); call dword ptr [ebx]; 
0x0012fe1b: arpl ax, cx; or al, 0xf; xchg eax, edx; ret 0xb60f; 
0x00170d29: arpl bx, bp; call dword ptr [ebx]; 
0x000024c5: arpl cx, bx; mov ah, 0xc6; ret; 
0x0013163a: arpl cx, bx; or al, 0xf; xchg eax, edx; ret 0xb60f; 
0x0012fd55: arpl cx, di; or al, 0xf; xchg eax, edx; ret 0xb60f; 
0x0012f581: arpl cx, dx; or al, 0xf; xchg eax, edx; ret 0xcf89; 
0x0012f627: arpl cx, sp; or al, 0xf; xchg eax, edx; ret 0xb60f; 
0x00168c20: arpl di, bx; out dx, al; call esp; 
0x001098fa: arpl di, di; inc dword ptr [ebp - 0x76fa8b40]; xor al, 0x24; call eax; 
0x0013398a: arpl di, di; inc dword ptr [ecx + 0x32993c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0012fefe: arpl dx, cx; or al, 0x89; int 0xf; cwde; ror dword ptr [edi], -0x6e; ret 0xb60f; 
0x000de13b: arpl word ptr [eax], ax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0015a598: arpl word ptr [eax], di; bnd call edi; cmp dl, dh; call dword ptr [esi + 0x39]; 
0x0011bbe9: arpl word ptr [ebx + 0x5c8bffef], si; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0017a285: arpl word ptr [ebx], si; out dx, eax; jmp dword ptr [edx]; 
0x0016a2a5: arpl word ptr [ecx], ax; add byte ptr [eax + eax*4 - 0xf], ah; jmp esp; 
0x000a718c: arpl word ptr [edi + 0x5e], bx; ret; 
0x0011d269: arpl word ptr [edi - 1], si; inc dword ptr [ebx - 0x3fe6fe08]; add eax, 2; add esp, 0x1c; ret; 
0x000e660c: arpl word ptr [edi], si; add al, 0; add ebx, 0xbc9e4; xchg edi, ebx; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0016fe2a: arpl word ptr [edx], cx; push cs; adc al, 0x41; ret; 
0x00183a5c: arpl word ptr [edx], cx; push cs; adc al, 0x46; ret; 
0x00195e01: arpl word ptr [edx], cx; ret; 
0x00172a38: arpl word ptr [esi], cx; adc al, 0x41; ret; 
0x0015a59a: bnd call edi; cmp dl, dh; call dword ptr [esi + 0x39]; 
0x00108aba: bnd ja 0x108abc; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x000e6c08: bnd ja 0xe6c18; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000b7c01: bnd je 0xb7c0f; xor ecx, ecx; cmp eax, -1; cmovne ecx, eax; mov eax, ecx; ret; 
0x001084ba: bnd jge 0x1084bc; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x000eb181: bnd jmp 0xeb187; add byte ptr [ecx + 0xb7e6fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0015a596: bnd jmp dword ptr [ebx + 0x38]; bnd call edi; cmp dl, dh; call dword ptr [esi + 0x39]; 
0x00083357: bnd jne 0x83348; pop esi; ret; 
0x00083393: bnd jne 0x83380; pop esi; pop edi; ret; 
0x000833d7: bnd jne 0x833c0; pop esi; pop edi; pop ebp; ret; 
0x000834a3: bnd jne 0x83490; pop esi; ret; 
0x000834ff: bnd jne 0x834e8; pop esi; pop edi; ret; 
0x00186dfd: bnd jno 0x186df2; jmp dword ptr [edx]; 
0x0017b649: bnd jns 0x17b63b; jmp dword ptr [edx]; 
0x0008d84a: bound eax, qword ptr [0x5e5f0000]; pop ebx; ret; 
0x001491d3: bound eax, qword ptr [eax + 0x74000f7a]; pop esp; mov eax, 0x10; pop edi; ret; 
0x000003ca: bound eax, qword ptr [eax]; ret 0x224; 
0x0008021e: bound eax, qword ptr [ecx]; add byte ptr [ebp + 0x37840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx + 0x1242454], cl; ret 0x442b; 
0x0002e9fb: bound eax, qword ptr [esi + edi*8]; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000ef311: bound ebp, qword ptr [edx - 0x3e7efffd]; fistp qword ptr [ebx + ecx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0017b0a3: bound ebx, qword ptr [ebp + 0xd1cffef]; loope 0x17b0eb; out dx, eax; jmp dword ptr [edx]; 
0x00167760: bound ebx, qword ptr [ebp + edi*8 - 1]; ret 0xfd5c; 
0x0007bbea: bound ecx, qword ptr [eax]; std; jmp dword ptr [ebp - 0x7d]; 
0x00170a38: bound ecx, qword ptr [edx]; push cs; adc al, 0x41; ret; 
0x00179822: bound ecx, qword ptr [edx]; push cs; add al, 0xc6; ret; 
0x00185c24: bound ecx, qword ptr [esi]; add al, 0xc6; ret; 
0x00184d11: bound ecx, qword ptr [esi]; or byte ptr [ebx + 0x40e5f02], al; ret; 
0x0008e911: bound esi, qword ptr [ecx + ecx + 0x1bc18100]; mov esi, 0xc03000c; xchg eax, ecx; jmp ecx; 
0x000d1922: bound esi, qword ptr [ecx]; rol byte ptr [eax + 0x740c187e], 0xd; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000c76ca: bound esi, qword ptr [edi + 3]; add byte ptr [ebx - 0x1375], cl; jmp dword ptr [ebp - 0x75]; 
0x0007e2e5: bsf eax, dword ptr [esp + 4]; cmove eax, edx; add eax, 1; ret; 
0x00095570: bsf eax, eax; add eax, edi; pop edi; ret; 
0x00095b1a: bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x00095c80: bsf eax, eax; add eax, edx; ret; 
0x00095580: bsf eax, eax; lea eax, dword ptr [eax + edi + 0x10]; pop edi; ret; 
0x00095590: bsf eax, eax; lea eax, dword ptr [eax + edi + 0x20]; pop edi; ret; 
0x00095560: bsf eax, eax; lea eax, dword ptr [eax + edi - 0x10]; pop edi; ret; 
0x00095c90: bsf eax, eax; lea eax, dword ptr [eax + edx + 0x10]; ret; 
0x00095ca0: bsf eax, eax; lea eax, dword ptr [eax + edx + 0x20]; ret; 
0x00095c70: bsf eax, eax; lea eax, dword ptr [eax + edx - 0x10]; ret; 
0x000954ac: bsf eax, eax; lea eax, dword ptr [edi + eax + 0x30]; pop edi; ret; 
0x00095c67: bsf eax, eax; lea eax, dword ptr [edx + eax + 0x30]; ret; 
0x00095ad1: bsf ecx, ecx; add eax, ecx; ret; 
0x00083fa3: bsf edx, edx; add eax, edx; add eax, 0x10; pop edi; pop esi; ret; 
0x00083fb0: bsf edx, edx; add eax, edx; add eax, 0x20; pop edi; pop esi; ret; 
0x00083fbd: bsf edx, edx; add eax, edx; add eax, 0x30; pop edi; pop esi; ret; 
0x00083f99: bsf edx, edx; add eax, edx; pop edi; pop esi; ret; 
0x00094806: bsf edx, edx; call 0x129d77; add ecx, 0xc60f6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000947e2: bsf edx, edx; call 0x129d77; add ecx, 0xc611a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00091506: bsf edx, edx; call 0x129d77; add ecx, 0xc9376; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000914e2: bsf edx, edx; call 0x129d77; add ecx, 0xc939a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008e7f4: bsf edx, edx; call 0x129d77; add ecx, 0xcbf34; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008d1e9: bsf edx, edx; call 0x129d77; add ecx, 0xcd3df; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008d1c4: bsf edx, edx; call 0x129d77; add ecx, 0xcd404; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00095784: bsr eax, eax; add eax, ecx; ret; 
0x00095125: bsr eax, eax; add eax, edi; pop edi; ret; 
0x00095273: bsr eax, eax; add eax, edi; sub eax, 0x10; pop edi; ret; 
0x00095830: bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x10]; ret; 
0x00095840: bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x20]; ret; 
0x00095850: bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x30]; ret; 
0x000958cc: bsr ecx, edx; add eax, ecx; ret; 
0x00095924: bsr edi, edi; add eax, edi; pop edi; ret; 
0x00095961: bsr edi, edi; add eax, edi; xor ch, ch; add eax, ecx; pop edi; ret; 
0x00095970: bsr edi, edi; lea eax, dword ptr [eax + edi + 0x10]; pop edi; ret; 
0x0011f401: bswap eax; mov dword ptr [esi], eax; mov eax, 1; mov dword ptr [edx + 0xc], ecx; pop esi; ret; 
0x00105034: bswap eax; ret; 
0x001050af: bswap edx; mov dword ptr [eax], edx; pop esi; ret 4; 
0x0012eac8: call 0x100770; sub esp, 4; add esp, 0x1c; ret; 
0x0012eae8: call 0x100810; sub esp, 4; add esp, 0x1c; ret; 
0x0012eb08: call 0x1008b0; sub esp, 4; add esp, 0x1c; ret; 
0x0012eb28: call 0x100950; sub esp, 4; add esp, 0x1c; ret; 
0x0012eb48: call 0x1009f0; sub esp, 4; add esp, 0x1c; ret; 
0x0012eb88: call 0x100bd0; sub esp, 4; add esp, 0x1c; ret; 
0x0012ebc8: call 0x100d10; sub esp, 4; add esp, 0x1c; ret; 
0x0012ec08: call 0x100e50; sub esp, 4; add esp, 0x1c; ret; 
0x00101a8a: call 0x101ab0; add esp, 0x2c; ret; 
0x00101be2: call 0x101bf0; add esp, 0x2c; ret; 
0x00102fa2: call 0x102fb0; add esp, 0x1c; ret; 
0x00103172: call 0x103180; add esp, 0x1c; ret; 
0x00103482: call 0x103280; add esp, 0x1c; ret; 
0x00112f8a: call 0x1035a41a; mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00114d91: call 0x1035c221; mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00114f6a: call 0x1035c3fa; mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0011514a: call 0x1035c5da; mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00129b37: call 0x1036efc7; mov dword ptr [edx], edi; pop esi; pop edi; ret; 
0x00104a72: call 0x104a80; add esp, 0x2c; ret; 
0x0012ef92: call 0x107780; mov edx, 0xffffffff; test eax, eax; cmovne eax, edx; add esp, 0x1c; ret; 
0x0012f0f2: call 0x1085a0; mov edx, 0xffffffff; test eax, eax; cmovne eax, edx; add esp, 0x1c; ret; 
0x0012f132: call 0x108ba0; mov edx, 0xffffffff; test eax, eax; cmovne eax, edx; add esp, 0x1c; ret; 
0x001090b0: call 0x1090c0; add esp, 0x18; pop ebx; ret; 
0x00109590: call 0x1095a0; add esp, 0x18; pop ebx; ret; 
0x0010510e: call 0x109d223; add byte ptr [eax], al; or byte ptr [edi], 0x45; ret 0x90c3; 
0x0010a550: call 0x109f30; add esp, 0x28; pop ebx; ret; 
0x0010e58f: call 0x10cc60; add esp, 0x28; pop ebx; ret; 
0x0010e2d2: call 0x10d500; add esp, 0x1c; ret; 
0x0010e2ab: call 0x10d6a0; add esp, 0x2c; ret; 
0x0010e3da: call 0x10e2e0; add esp, 0x2c; ret; 
0x0010e51a: call 0x10e3f0; add esp, 0x2c; ret; 
0x0010ec1a: call 0x10e5a0; add esp, 0x2c; ret; 
0x0012f232: call 0x10f3f0; mov edx, 0xffffffff; test eax, eax; cmovne eax, edx; add esp, 0x1c; ret; 
0x00111230: call 0x111130; lea eax, dword ptr [ebx + 0x32cc]; or dword ptr [ebx + 0x32ac], 2; add esp, 0x18; pop ebx; ret; 
0x001111cb: call 0x112f00; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00116d88: call 0x1149d0; cmp eax, 1; sbb eax, eax; add eax, 2; add esp, 0x1c; ret; 
0x00116d4e: call 0x114a80; mov eax, edi; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0011b12a: call 0x11ad10; add esp, 0x3c; ret; 
0x0011bf52: call 0x11bc20; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0011bf73: call 0x11bd50; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0011c3c6: call 0x11c1e0; sub esp, 0xc; add esp, 0x1c; ret; 
0x0011fc5d: call 0x11c540; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; mov dword ptr [eax], 0; add esp, 0x1c; ret; 
0x0011cd6b: call 0x11cb20; mov eax, dword ptr [esi + 8]; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x0011cd3b: call 0x11cb70; mov eax, dword ptr [esi + 8]; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x0011cf75: call 0x11cec0; add esp, 0x98; pop edi; ret; 
0x0011e1ca: call 0x11ded0; add esp, 0x1c; ret; 
0x0011303a: call 0x11ea10; add esp, 0x1c; ret; 
0x0011ec91: call 0x11eb00; add esp, 0x1c; ret; 
0x0011eeaa: call 0x11ed40; test eax, eax; setne al; add esp, 0x1c; movzx eax, al; ret; 
0x00113c37: call 0x11f530; lea eax, dword ptr [esi + 0x2260]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012061a: call 0x1201f0; sub esp, 0x10; add esp, 0x18; pop esi; ret; 
0x00120692: call 0x1201f0; sub esp, 0x10; add esp, 0x28; pop ebx; ret; 
0x00120ce9: call 0x1206a0; sub esp, 0x10; add esp, 0x18; pop esi; ret; 
0x00120d62: call 0x1206a0; sub esp, 0x10; add esp, 0x28; pop ebx; ret; 
0x0012169e: call 0x120d70; sub esp, 0x14; add esp, 0x24; pop esi; pop edi; ret; 
0x001216f5: call 0x120d70; sub esp, 0x14; add esp, 0x2c; ret; 
0x001228ad: call 0x122060; add esp, 0x38; pop ebx; ret; 
0x00124118: call 0x124030; add esp, 0x18; pop ebx; ret; 
0x00124717: call 0x1243e0; add esp, 0x78; pop ebx; ret; 
0x00102c1c: call 0x1246e0; add esp, 0x18; pop ebx; ret; 
0x001264ff: call 0x124780; add esp, 8; pop ebx; ret; 
0x001264df: call 0x1249b0; add esp, 8; pop ebx; ret; 
0x00126586: call 0x124a80; add esp, 0x18; pop ebx; ret; 
0x000d942f: call 0x124ae0; add esp, 0x524; mov eax, esi; pop ebx; pop esi; ret; 
0x0012651f: call 0x124ae0; add esp, 8; pop ebx; ret; 
0x00126546: call 0x124bc0; add esp, 0x18; pop ebx; ret; 
0x00126566: call 0x124c30; add esp, 0x18; pop ebx; ret; 
0x001265a6: call 0x126250; add esp, 0x18; pop ebx; ret; 
0x001265ce: call 0x126370; add esp, 0x18; pop ebx; ret; 
0x000b4f5a: call 0x126c80; call dword ptr [ebp - 0x48]; 
0x000b4dfe: call 0x126c80; call esi; 
0x0009866c: call 0x126c80; mov dword ptr [esp + 4], esi; mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; call edi; 
0x0001aff3: call 0x126c80; mov dword ptr [esp], esi; call edi; 
0x0001b428: call 0x126c80; mov eax, dword ptr [ebp - 0x64]; mov dword ptr [esp], esi; call eax; 
0x0014a468: call 0x126c80; mov edx, dword ptr [esp + 0x30]; mov eax, esi; add eax, dword ptr [edx + 8]; mov dword ptr [esp], eax; call edi; 
0x0002390d: call 0x126f50; mov dword ptr [esi + 8], 0; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00127582: call 0x127000; sub esp, 8; add esp, 0x1c; ret; 
0x00128a0e: call 0x128950; add esp, 0x18; pop ebx; ret; 
0x00128a63: call 0x128950; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00128b3e: call 0x128a80; add esp, 0x18; pop ebx; ret; 
0x00128cb6: call 0x128b90; add esp, 0x18; pop ebx; ret; 
0x00128cdc: call 0x128b90; mov dword ptr [esp], eax; call 0x16f50; add esp, 0x18; pop ebx; ret; 
0x00129ae0: call 0x129930; add esp, 0x18; pop ebx; ret; 
0x00129b03: call 0x129980; add esp, 0x18; pop ebx; ret; 
0x00129af3: call 0x129990; add esp, 0x18; pop ebx; ret; 
0x000725f3: call 0x129d73; add ebx, 0x1309fc; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x30]; 
0x0002e2da: call 0x129d73; add ebx, 0x174d15; xchg ebx, edx; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0002e1ea: call 0x129d73; add ebx, 0x174e05; xchg ebx, edx; mov eax, 0xb0; call dword ptr gs:[0x10]; 
0x0013d77d: call 0x129d73; add ebx, 0x2a05e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013d589: call 0x129d73; add ebx, 0x2a152; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013caa4: call 0x129d73; add ebx, 0x2ac37; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013c99a: call 0x129d73; add ebx, 0x2ad41; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013c893: call 0x129d73; add ebx, 0x2ae48; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013c797: call 0x129d73; add ebx, 0x2af44; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013c677: call 0x129d73; add ebx, 0x2afa4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013c7e4: call 0x129d73; add ebx, 0x2afb7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0013c3ed: call 0x129d73; add ebx, 0x2b06e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013b56b: call 0x129d73; add ebx, 0x2bfb0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013b464: call 0x129d73; add ebx, 0x2bff7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013b363: call 0x129d73; add ebx, 0x2c1b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013b268: call 0x129d73; add ebx, 0x2c1f3; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013b14d: call 0x129d73; add ebx, 0x2c24e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013b2b4: call 0x129d73; add ebx, 0x2c327; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0013af49: call 0x129d73; add ebx, 0x2c352; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013a454: call 0x129d73; add ebx, 0x2ce47; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013a34a: call 0x129d73; add ebx, 0x2cf51; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013a243: call 0x129d73; add ebx, 0x2d058; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013a147: call 0x129d73; add ebx, 0x2d154; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00139f39: call 0x129d73; add ebx, 0x2d1a2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013a194: call 0x129d73; add ebx, 0x2d1c7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00139454: call 0x129d73; add ebx, 0x2dc87; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013934a: call 0x129d73; add ebx, 0x2dd91; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00139243: call 0x129d73; add ebx, 0x2de98; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013913a: call 0x129d73; add ebx, 0x2dfa1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00138f69: call 0x129d73; add ebx, 0x2dfb2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00139194: call 0x129d73; add ebx, 0x2e007; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0013914a: call 0x129d73; add ebx, 0x2e091; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00138474: call 0x129d73; add ebx, 0x2eaa7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013836a: call 0x129d73; add ebx, 0x2ebb1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00138263: call 0x129d73; add ebx, 0x2ecb8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013815a: call 0x129d73; add ebx, 0x2edc1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00138047: call 0x129d73; add ebx, 0x2ee14; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001381b4: call 0x129d73; add ebx, 0x2ee27; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0013816a: call 0x129d73; add ebx, 0x2eeb1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00137d9d: call 0x129d73; add ebx, 0x2eefe; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00136e9b: call 0x129d73; add ebx, 0x2fec0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00136d94: call 0x129d73; add ebx, 0x2ff07; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00136c93: call 0x129d73; add ebx, 0x300c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00136b98: call 0x129d73; add ebx, 0x30103; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001368bd: call 0x129d73; add ebx, 0x3015e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00136be4: call 0x129d73; add ebx, 0x30237; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00135a1b: call 0x129d73; add ebx, 0x310c0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00135914: call 0x129d73; add ebx, 0x31107; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00135813: call 0x129d73; add ebx, 0x312c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013548d: call 0x129d73; add ebx, 0x3130e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013570a: call 0x129d73; add ebx, 0x31311; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00135764: call 0x129d73; add ebx, 0x31437; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0013571a: call 0x129d73; add ebx, 0x314c1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013458b: call 0x129d73; add ebx, 0x322d0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134484: call 0x129d73; add ebx, 0x32317; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134383: call 0x129d73; add ebx, 0x324d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013427a: call 0x129d73; add ebx, 0x32521; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001342d4: call 0x129d73; add ebx, 0x32647; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00133ed8: call 0x129d73; add ebx, 0x326c3; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0013428a: call 0x129d73; add ebx, 0x326d1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00133e28: call 0x129d73; add ebx, 0x32773; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00133d64: call 0x129d73; add ebx, 0x327b7; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00133988: call 0x129d73; add ebx, 0x32993; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001338d8: call 0x129d73; add ebx, 0x32a43; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001337f0: call 0x129d73; add ebx, 0x32aab; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00133372: call 0x129d73; add ebx, 0x32d29; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00133258: call 0x129d73; add ebx, 0x32e43; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00133170: call 0x129d73; add ebx, 0x32eab; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00132dfe: call 0x129d73; add ebx, 0x3301d; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00132d42: call 0x129d73; add ebx, 0x330d9; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00132ce6: call 0x129d73; add ebx, 0x33135; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00132b64: call 0x129d73; add ebx, 0x33237; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0013289b: call 0x129d73; add ebx, 0x35104; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001327d6: call 0x129d73; add ebx, 0x351c9; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001308ab: call 0x129d73; add ebx, 0x36ff0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013079c: call 0x129d73; add ebx, 0x370ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0012e792: call 0x129d73; add ebx, 0x7485d; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0012e71c: call 0x129d73; add ebx, 0x748d3; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0012e6a2: call 0x129d73; add ebx, 0x7494d; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000f1322: call 0x129d73; add ebx, 0xb1ccd; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000f12ae: call 0x129d73; add ebx, 0xb1d41; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000f0fa0: call 0x129d73; add ebx, 0xb204f; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000eeff6: call 0x129d73; add ebx, 0xb3ff9; xchg ebx, edx; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x000e8208: call 0x129d73; add ebx, 0xbade7; xchg edi, ebx; mov eax, 0x58; call dword ptr gs:[0x10]; 
0x000e66fb: call 0x129d73; add ebx, 0xbc8f4; xchg edi, ebx; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000e660b: call 0x129d73; add ebx, 0xbc9e4; xchg edi, ebx; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000e61b4: call 0x129d73; add ebx, 0xbce3b; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000dea0e: call 0x129d73; add ebx, 0xc45e1; or dh, 0x80; xchg edi, ebx; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000de227: call 0x129d73; add ebx, 0xc4dc8; xchg edi, ebx; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x000de1c7: call 0x129d73; add ebx, 0xc4e28; xchg edi, ebx; mov eax, 0x10c; call dword ptr gs:[0x10]; 
0x000de038: call 0x129d73; add ebx, 0xc4fb7; xchg edi, ebx; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000dde65: call 0x129d73; add ebx, 0xc518a; mov edx, dword ptr [esp + 0xc]; xchg ebx, edx; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x000dde25: call 0x129d73; add ebx, 0xc51ca; mov edx, dword ptr [esp + 0xc]; xchg ebx, edx; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ddac3: call 0x129d73; add ebx, 0xc552c; xchg edi, ebx; mov eax, 0x13e; call dword ptr gs:[0x10]; 
0x0007df5c: call 0x129d73; add ebx, 0xdc5c3; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x000b9452: call 0x129d73; add ebx, 0xe9b9d; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x000b93f2: call 0x129d73; add ebx, 0xe9bfd; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000b90d5: call 0x129d73; add ebx, 0xe9f1a; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x000b85f2: call 0x129d73; add ebx, 0xea9fd; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x000b3ee6: call 0x129d73; add ebx, 0xef109; xchg edi, ebx; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x00073430: call 0x129d77; add ecx, 0x12fbbf; mov eax, dword ptr [ecx + 0x96c]; ret; 
0x0002ee00: call 0x129d77; add ecx, 0x1741ef; mov eax, dword ptr [ecx + 0x58]; ret; 
0x0002ede0: call 0x129d77; add ecx, 0x17420f; mov eax, dword ptr [ecx + 0x54]; ret; 
0x0002ebb0: call 0x129d77; add ecx, 0x17443f; mov eax, dword ptr [ecx - 0xf8]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00027260: call 0x129d77; add ecx, 0x17bd8f; mov eax, dword ptr [ecx - 0x90]; add eax, dword ptr gs:[0]; ret; 
0x00027240: call 0x129d77; add ecx, 0x17bdaf; mov eax, dword ptr [ecx - 0xc0]; add eax, dword ptr gs:[0]; ret; 
0x00027220: call 0x129d77; add ecx, 0x17bdcf; mov eax, dword ptr [ecx - 0x130]; add eax, dword ptr gs:[0]; ret; 
0x000231a0: call 0x129d77; add ecx, 0x17fe4f; mov eax, dword ptr [ecx + 0xfe4]; ret; 
0x0001af90: call 0x129d77; add ecx, 0x18805f; mov eax, dword ptr [ecx + 0x36c0]; ret; 
0x0001af70: call 0x129d77; add ecx, 0x18807f; mov eax, dword ptr [ecx + 0x36c8]; ret; 
0x00019b50: call 0x129d77; add ecx, 0x18949f; mov eax, dword ptr [ecx - 0xf8]; add eax, dword ptr gs:[0]; ret; 
0x00019650: call 0x129d77; add ecx, 0x18999f; lea eax, dword ptr [ecx - 0x43dee]; ret; 
0x00019630: call 0x129d77; add ecx, 0x1899bf; lea eax, dword ptr [ecx - 0x46116]; ret; 
0x00127590: call 0x129d77; add ecx, 0x7ba5f; mov eax, dword ptr [ecx - 0x174]; add eax, dword ptr gs:[0]; ret; 
0x0011c3e0: call 0x129d77; add ecx, 0x86c0f; mov eax, dword ptr [ecx - 0x58]; lea edx, dword ptr [ecx + 0x33ac]; mov dword ptr gs:[eax], edx; ret; 
0x000fefc0: call 0x129d77; add ecx, 0xa402f; mov eax, dword ptr [ecx - 0x14]; mov eax, dword ptr gs:[eax]; ret; 
0x000f2750: call 0x129d77; add ecx, 0xb089f; mov eax, dword ptr [ecx - 0xfc]; mov eax, dword ptr [eax + 0x1c]; ret; 
0x00094ebc: call 0x129d77; add ecx, 0xc5ac3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949b1: call 0x129d77; add ecx, 0xc5fce; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009498c: call 0x129d77; add ecx, 0xc5ff3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009496c: call 0x129d77; add ecx, 0xc6013; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009494f: call 0x129d77; add ecx, 0xc6030; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000948b0: call 0x129d77; add ecx, 0xc604f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00094922: call 0x129d77; add ecx, 0xc605d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094892: call 0x129d77; add ecx, 0xc606d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009490b: call 0x129d77; add ecx, 0xc6074; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000948f0: call 0x129d77; add ecx, 0xc608f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009486d: call 0x129d77; add ecx, 0xc6092; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000948ce: call 0x129d77; add ecx, 0xc60b1; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094843: call 0x129d77; add ecx, 0xc60bc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009482a: call 0x129d77; add ecx, 0xc60d5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00094809: call 0x129d77; add ecx, 0xc60f6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000947e5: call 0x129d77; add ecx, 0xc611a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000947c7: call 0x129d77; add ecx, 0xc6138; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00094744: call 0x129d77; add ecx, 0xc61bb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00091592: call 0x129d77; add ecx, 0xc92ed; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009156d: call 0x129d77; add ecx, 0xc9312; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00091543: call 0x129d77; add ecx, 0xc933c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009152a: call 0x129d77; add ecx, 0xc9355; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00091509: call 0x129d77; add ecx, 0xc9376; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000914e5: call 0x129d77; add ecx, 0xc939a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000914c7: call 0x129d77; add ecx, 0xc93b8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000914ab: call 0x129d77; add ecx, 0xc93d4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008f61c: call 0x129d77; add ecx, 0xcb18f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008f537: call 0x129d77; add ecx, 0xcb304; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008f524: call 0x129d77; add ecx, 0xcb317; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008f508: call 0x129d77; add ecx, 0xcb333; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008ea11: call 0x129d77; add ecx, 0xcbd9a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e9ec: call 0x129d77; add ecx, 0xcbdbf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e9cc: call 0x129d77; add ecx, 0xcbddf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e9af: call 0x129d77; add ecx, 0xcbdfc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e910: call 0x129d77; add ecx, 0xcbe1b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008e982: call 0x129d77; add ecx, 0xcbe29; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e96b: call 0x129d77; add ecx, 0xcbe40; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e950: call 0x129d77; add ecx, 0xcbe5b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e92e: call 0x129d77; add ecx, 0xcbe7d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e83c: call 0x129d77; add ecx, 0xcbeef; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008e81c: call 0x129d77; add ecx, 0xcbf0f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008e7f7: call 0x129d77; add ecx, 0xcbf34; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008df1c: call 0x129d77; add ecx, 0xcc72f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008de37: call 0x129d77; add ecx, 0xcc8a4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008de24: call 0x129d77; add ecx, 0xcc8b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008de08: call 0x129d77; add ecx, 0xcc8d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d3d1: call 0x129d77; add ecx, 0xcd27a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d3ac: call 0x129d77; add ecx, 0xcd29f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d38c: call 0x129d77; add ecx, 0xcd2bf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d36f: call 0x129d77; add ecx, 0xcd2dc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d2d0: call 0x129d77; add ecx, 0xcd2fb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008d342: call 0x129d77; add ecx, 0xcd309; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d32b: call 0x129d77; add ecx, 0xcd320; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d310: call 0x129d77; add ecx, 0xcd33b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d2ee: call 0x129d77; add ecx, 0xcd35d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d20c: call 0x129d77; add ecx, 0xcd3bf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008d1ec: call 0x129d77; add ecx, 0xcd3df; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008d1c7: call 0x129d77; add ecx, 0xcd404; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0012a876: call 0x12a150; add esp, 0x18; pop ebx; ret; 
0x001870e8: call 0x1418726b; push edx; jmp dword ptr [ebx]; 
0x000c5c9f: call 0x16ee0; add esp, 0x18; pop ebx; ret; 
0x000e8a36: call 0x16ee0; mov dword ptr [ebx + 0xf2c], eax; add esp, 0x18; pop ebx; ret; 
0x0010a4e6: call 0x16ee0; mov dword ptr [ebx + 0xf94], eax; add esp, 0x18; pop ebx; ret; 
0x000f7320: call 0x16f50; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000251d2: call 0x16f50; add esp, 0x14; pop ebx; pop esi; ret; 
0x0002387c: call 0x16f50; add esp, 0x18; pop ebx; ret; 
0x0011f7b2: call 0x16f50; mov dword ptr [esi + 0xc], 0; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00126e5a: call 0x16f50; mov eax, dword ptr [esp + 0x1c]; add esp, 0x34; pop ebx; pop esi; ret; 
0x000eb912: call 0x16f50; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000d802a: call 0x16f50; mov ebx, dword ptr [esp + 0x14]; mov dword ptr [esi + 0x14], 0; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0002b970: call 0x16f50; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0002c878: call 0x16f50; xor eax, eax; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000710c7: call 0x18cb93cd; pop esi; ret; 
0x0012bad7: call 0x18d73ddd; pop esi; ret; 
0x00019b36: call 0x19890; lea eax, dword ptr [ebx + 0x368c]; pop ebx; ret; 
0x00019f32: call 0x19b70; mov eax, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x1c]; add esp, 0x24; ret; 
0x000b7e2a: call 0x1c2fdab8; mov ebx, eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000b7e8c: call 0x1c2fdb1a; mov ebx, eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000c5843: call 0x1c30b4d1; mov ebx, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000c5923: call 0x1c30b5b1; mov ebx, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000c599d: call 0x1c30b62b; mov ebx, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000c59fd: call 0x1c30b68b; mov ebx, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000c5a7d: call 0x1c30b70b; mov ebx, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000c5add: call 0x1c30b76b; mov ebx, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000f0b7d: call 0x1c33680b; mov ebx, eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x000f0bdd: call 0x1c33686b; mov ebx, eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x000e8442: call 0x24d30748; pop ebx; pop esi; ret; 
0x00025f13: call 0x25f20; add esp, 0x18; pop ebx; ret; 
0x000276af: call 0x272d0; mov eax, dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x000ca027: call 0x276f0; add esp, 0x18; pop ebx; ret; 
0x0002775a: call 0x276f0; add esp, 0x1c; ret; 
0x0002772e: call 0x28580; add esp, 0x28; pop ebx; ret; 
0x00028e46: call 0x28dc0; add esp, 0x28; pop ebx; ret; 
0x0002ba6d: call 0x2b9b0; add esp, 0x2c; ret; 
0x0002dc46: call 0x2dbb0; pop ecx; pop edx; ret; 
0x0002df04: call 0x2e1a0; add esp, 0x18; pop ebx; ret; 
0x0002ebe6: call 0x2e3f0; add esp, 0x18; pop ebx; ret; 
0x0002e5d2: call 0x2e560; add esp, 0x1c; ret; 
0x000c5c97: call 0x2ed1da1; mov dword ptr [esp], eax; call 0x16ee0; add esp, 0x18; pop ebx; ret; 
0x0002f772: call 0x2f730; jmp eax; 
0x001125ca: call 0x30359a5a; mov edi, dword ptr [esp + 0x34]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x00129bdd: call 0x31280; lea esi, dword ptr [esi]; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0x79400]; jmp ecx; 
0x0003214a: call 0x31e40; add esp, 0x2c; ret; 
0x000327f2: call 0x32340; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00032de0: call 0x32d50; add esp, 0x18; pop ebx; ret; 
0x00129dae: call 0x32db0; add esp, 0x18; pop ebx; ret; 
0x0003382f: call 0x33300; add esp, 8; pop ebx; ret; 
0x00033ae2: call 0x33af0; add esp, 0x18; pop ebx; ret; 
0x00033bc6: call 0x33be0; add esp, 0x18; pop ebx; ret; 
0x00033944: call 0x33be0; mov eax, dword ptr [esp + 0x1c]; add esp, 0x28; pop ebx; ret; 
0x00033c66: call 0x33c80; add esp, 0x18; pop ebx; ret; 
0x000339c4: call 0x33c80; mov eax, dword ptr [esp + 0x1c]; add esp, 0x28; pop ebx; ret; 
0x00033a40: call 0x33ce0; add esp, 0x18; pop ebx; ret; 
0x00033ab0: call 0x33d70; add esp, 0x18; pop ebx; ret; 
0x0003120a: call 0x33eb0; add esp, 0x1c; ret; 
0x0003f7d2: call 0x33fa0; add esp, 0x1c; ret; 
0x0003126a: call 0x33ff0; add esp, 0x1c; ret; 
0x0003f802: call 0x34040; add esp, 0x1c; ret; 
0x00033e9b: call 0x340e0; add esp, 0x28; pop ebx; ret; 
0x000345ea: call 0x340e0; add esp, 0x2c; ret; 
0x0016c5e4: call 0x3416c85c; cwde; clc; call dword ptr [eax]; 
0x00033f3b: call 0x34600; add esp, 0x28; pop ebx; ret; 
0x00034b1a: call 0x34600; add esp, 0x2c; ret; 
0x00033fdb: call 0x34b30; add esp, 0x28; pop ebx; ret; 
0x000352ba: call 0x34b30; add esp, 0x2c; ret; 
0x0003407b: call 0x352d0; add esp, 0x28; pop ebx; ret; 
0x000359fa: call 0x352d0; add esp, 0x2c; ret; 
0x000311e2: call 0x35ad0; add esp, 0x1c; ret; 
0x00035a43: call 0x36110; add esp, 0x18; pop ebx; ret; 
0x000388d2: call 0x36110; add esp, 0x1c; ret; 
0x00035ac3: call 0x38f30; add esp, 0x18; pop ebx; ret; 
0x0003b852: call 0x38f30; add esp, 0x1c; ret; 
0x00035b43: call 0x3bef0; add esp, 0x18; pop ebx; ret; 
0x0003e6e2: call 0x3bef0; add esp, 0x1c; ret; 
0x00102577: call 0x3cd4a87d; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003f51e: call 0x3efe0; add esp, 0x18; pop ebx; ret; 
0x0003f93c: call 0x3f941; pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x0003fa5b: call 0x3fa70; add esp, 0x28; pop ebx; ret; 
0x00135083: call 0x4091607b; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00136503: call 0x409174fb; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x00137993: call 0x4091898b; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013c053: call 0x4091d04b; clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00190ee8: call 0x4191109; cdq; idiv bh; ret; 
0x00047a3a: call 0x424d0; add esp, 0x18; pop ebx; ret; 
0x0004c46a: call 0x424d0; add esp, 0x1c; ret; 
0x0013c04e: call 0x4292cfb9; call 0x4091d04b; clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00132fb2: call 0x42e93f1d; clc; pop ebx; ret; 
0x001335f2: call 0x42e9455d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00133b82: call 0x42e94aed; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001340c2: call 0x42e9502d; clc; pop ebx; ret; 
0x0016f16c: call 0x4416f40d; xor edi, esi; jmp eax; 
0x00049fe6: call 0x49ee0; add esp, 0x18; pop ebx; ret; 
0x00105180: call 0x4c4c0; mov eax, esi; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000eddc2: call 0x4c500; mov eax, esi; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0005468e: call 0x4c590; add esp, 0x18; pop ebx; ret; 
0x00055c3d: call 0x4c590; add esp, 0xc4; pop ebx; pop esi; ret; 
0x000546ca: call 0x54660; add esp, 0x1c; ret; 
0x000e85ae: call 0x54fb0; add esp, 0x18; pop ebx; ret; 
0x000fa593: call 0x55690; mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x00055b8a: call 0x55ba0; add esp, 0x1c; ret; 
0x0006f046: call 0x56370; add esp, 0x18; pop ebx; ret; 
0x000724e5: call 0x5b33e96d; pop esi; pop edi; pop ebp; ret; 
0x0002fe27: call 0x5b5b05b5; pop esi; pop edi; ret; 
0x0006b353: call 0x5baa0; add esp, 0x184; pop ebx; pop esi; ret; 
0x00062eae: call 0x5baa0; add esp, 0x18; pop ebx; ret; 
0x00023d54: call 0x5d619bb4; ret; 
0x0002b46a: call 0x5d6212ca; ret; 
0x0002b47c: call 0x5d6212dc; ret; 
0x0002e522: call 0x5d624382; ret; 
0x000347db: call 0x5d62a63b; ret; 
0x0006607c: call 0x5d65bedc; ret; 
0x0006b0a4: call 0x5d660f04; ret; 
0x000801e0: call 0x5d676040; ret; 
0x0008030a: call 0x5d67616a; ret; 
0x0009650c: call 0x5d68c36c; ret; 
0x00098fff: call 0x5d68ee5f; ret; 
0x00099377: call 0x5d68f1d7; ret; 
0x000996ff: call 0x5d68f55f; ret; 
0x000b774a: call 0x5d6ad5aa; ret; 
0x000e032f: call 0x5d6d618f; ret; 
0x000e465f: call 0x5d6da4bf; ret; 
0x000e46b3: call 0x5d6da513; ret; 
0x000e46eb: call 0x5d6da54b; ret; 
0x000f4c17: call 0x5d6eaa77; ret; 
0x000ffbfc: call 0x5d6f5a5c; ret; 
0x000ffc6a: call 0x5d6f5aca; ret; 
0x001030cd: call 0x5d6f8f2d; ret; 
0x0010d54d: call 0x5d7033ad; ret; 
0x0011196b: call 0x5d7077cb; ret; 
0x0011a23b: call 0x5d71009b; ret; 
0x0011a31b: call 0x5d71017b; ret; 
0x00120352: call 0x5d7161b2; ret 0x10; 
0x001204df: call 0x5d71633f; ret 0x10; 
0x00121961: call 0x5d7177c1; ret; 
0x00121a74: call 0x5d7178d4; ret; 
0x0012581f: call 0x5d71b67f; ret; 
0x0012986d: call 0x5d71f6cd; ret; 
0x000a56bf: call 0x5e1b1b47; pop edi; pop ebp; ret; 
0x0002f816: call 0x5f615576; ret; 
0x00030243: call 0x5f615fa3; ret; 
0x00030e86: call 0x5f616be6; ret; 
0x00097fe7: call 0x5f687015; pop ebp; ret; 
0x00118c96: call 0x60360126; mov edi, dword ptr [esp + 0x64]; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x0006f136: call 0x62e80; add esp, 0x18; pop ebx; ret; 
0x001197e8: call 0x63810; add esp, 0x18; pop ebx; ret; 
0x000ec6af: call 0x63810; add esp, 0x418; pop ebx; ret; 
0x000e8c4a: call 0x643c0; add esp, 0x18; mov eax, 1; pop ebx; ret; 
0x00068b56: call 0x643c0; add esp, 0x18; pop ebx; ret; 
0x0011fb79: call 0x64880; add esp, 0x18; pop ebx; ret; 
0x00064ea6: call 0x64db0; add esp, 0x18; pop ebx; ret; 
0x0011fbd9: call 0x65620; add esp, 0x18; pop ebx; ret; 
0x0005548e: call 0x657e0; cmp eax, 1; sbb eax, eax; add esp, 0x18; pop ebx; ret; 
0x000553fe: call 0x65980; add esp, 0x18; pop ebx; ret; 
0x00065c6e: call 0x65c80; add esp, 0x28; pop ebx; ret; 
0x000954a4: call 0x660954a9; pmovmskb eax, mm1; bsf eax, eax; lea eax, dword ptr [edi + eax + 0x30]; pop edi; ret; 
0x00068dd6: call 0x66df0; add esp, 0x18; pop ebx; ret; 
0x00068e0e: call 0x66f50; add esp, 0x18; pop ebx; ret; 
0x0004c526: call 0x67210; add esp, 0x18; pop ebx; ret; 
0x00054746: call 0x67300; add esp, 0x18; pop ebx; ret; 
0x0011fbad: call 0x68600; add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x000e9a3c: call 0x68c90; mov eax, 1; add esp, 0x18; pop ebx; ret; 
0x0004c556: call 0x68e20; add esp, 0x18; pop ebx; ret; 
0x0004c586: call 0x68ff0; add esp, 0x18; pop ebx; ret; 
0x0004c4ee: call 0x69210; add esp, 0x18; pop ebx; ret; 
0x000696a6: call 0x694b0; add esp, 0x18; pop ebx; ret; 
0x00074e6d: call 0x6a110; mov ebx, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x44]; mov edi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x0006b10e: call 0x6b1a0; add esp, 0x18; pop ebx; ret; 
0x0006b38a: call 0x6b2b0; add esp, 0x1c; ret; 
0x0006be95: call 0x6b640; mov eax, 1; add esp, 0x28; pop ebx; ret; 
0x0006be17: call 0x6b640; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0006c327: call 0x6b6d0; add esp, 0x18; pop ebx; ret; 
0x0006c2d8: call 0x6b840; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0006c20b: call 0x6bf30; add esp, 0x18; pop ebx; ret; 
0x0006bbda: call 0x6bf30; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0006baa2: call 0x6bf30; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x0006e000: call 0x6c290; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0006ec3e: call 0x6ea10; add esp, 0x28; pop ebx; ret; 
0x0006f60a: call 0x6f3b0; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0006b899: call 0x71870; add esp, 0x14; pop ebx; pop esi; ret; 
0x0007325b: call 0x71f60; add esp, 0x18; pop ebx; ret; 
0x00072765: call 0x722d0; mov eax, 1; add esp, 0x28; pop ebx; ret; 
0x000723bb: call 0x722d0; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00072916: call 0x72820; add esp, 0x28; pop ebx; ret; 
0x000709f5: call 0x72930; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00072ea6: call 0x72ab0; add esp, 0x18; pop ebx; ret; 
0x000696bf: call 0x72d20; add esp, 8; pop ebx; ret; 
0x0006ab28: call 0x72e90; add esp, 0x18; pop ebx; ret; 
0x00073e93: call 0x73270; add esp, 0x18; pop ebx; ret; 
0x00073988: call 0x73890; add esp, 0x18; pop ebx; ret; 
0x000739df: call 0x73890; mov ebx, dword ptr [esp + 0x14]; or dword ptr [esi], 8; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00074f37: call 0x74da0; mov edx, dword ptr [ebx - 0x15c]; mov dword ptr [esp], 0; call dword ptr [edx]; 
0x0001aeb2: call 0x7c820; add esp, 0x18; pop ebx; ret; 
0x0001af53: call 0x7c820; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0007c908: call 0x7c90d; pop edx; lea ecx, dword ptr [edx + ecx*8 + 0xb]; jmp ecx; 
0x000c5d90: call 0x7dcd0; add esp, 0x1c; ret; 
0x000985b9: call 0x7e180; add esp, 0x18; pop ebx; ret; 
0x0007e3d8: call 0x7e3dd; pop edx; lea ecx, dword ptr [edx + ecx*8 + 0xb]; jmp ecx; 
0x00097c29: call 0x7e790; add esp, 0x18; pop ebx; ret; 
0x0007cc14: call 0x7e790; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0007fb1c: call 0x7fa60; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0001c687: call 0x8101d762; ret; 
0x0002ba87: call 0x8102ca6e; ret; 
0x000a3987: call 0x810a41ef; ret; 
0x000d9687: call 0x810d9b92; ret; 
0x000e1987: call 0x810e1e0f; ret; 
0x000ea387: call 0x810ea785; ret; 
0x000ecb87: call 0x810ecf5d; ret; 
0x000ffc87: call 0x810fff2c; ret; 
0x00109387: call 0x81109595; ret; 
0x0011fc87: call 0x8111fd2c; ret; 
0x0007c87b: call 0x81390; add esp, 0x18; pop ebx; ret; 
0x0007da83: call 0x81be0; add esp, 0x18; pop ebx; ret; 
0x00083736: call 0x82760; add esp, 0x18; pop ebx; ret; 
0x0006cebe: call 0x82b134c; call dword ptr [edx + 0x38]; 
0x0017dee8: call 0x8417dfd9; sbb al, 0xf0; jmp dword ptr [edx]; 
0x000dbd55: call 0x850dbd5a; test byte ptr [edi], 0x94; ret 0xc984; 
0x0001c759: call 0x8901c75e; ret 0x8b; 
0x000a3143: call 0x890a3148; ret 0xabe9; 
0x000e88f0: call 0x890e88f8; dec esp; and al, 0x1c; call 0xb81e0; add esp, 0x2c; ret; 
0x000a771b: call 0x892a6fe1; ret 0xeac1; 
0x000c57db: call 0x892c57a1; pop esp; and al, 0x1c; mov ebx, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000c58bb: call 0x892c5881; pop esp; and al, 0x1c; mov ebx, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00047ae4: call 0x89c4ffea; ret 0xec75; 
0x0002cd95: call 0x8a02cd95; ret 0xcae9; 
0x00082e00: call 0x8b2c6290; insb byte ptr es:[edi], dx; and al, 8; add esp, 0xc; ret; 
0x00082e90: call 0x8b2c6320; insb byte ptr es:[edi], dx; and al, 8; add esp, 0xc; ret; 
0x00082ee0: call 0x8b2c6370; insb byte ptr es:[edi], dx; and al, 8; add esp, 0xc; ret; 
0x00128a64: call 0x8c128a67; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0002ae0c: call 0x95d60; add esp, 0x18; pop ebx; ret; 
0x0010482c: call 0x97ff0; add esp, 0x18; pop ebx; ret; 
0x00104a2c: call 0x984e0; add esp, 0x18; pop ebx; ret; 
0x00098979: call 0x98990; add esp, 0x18; pop ebx; ret; 
0x001046ac: call 0x98bc0; add esp, 0x18; pop ebx; ret; 
0x00040e13: call 0x98bc0; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00104cd4: call 0x98e00; add esp, 0x18; pop ebx; ret; 
0x00040cae: call 0x98e00; add esp, 0x28; pop ebx; ret; 
0x00104d24: call 0x98e50; add esp, 0x18; pop ebx; ret; 
0x00040dce: call 0x98e50; add esp, 0x28; pop ebx; ret; 
0x00104c3c: call 0x991e0; add esp, 0x28; pop ebx; ret; 
0x00104c8c: call 0x99570; add esp, 0x28; pop ebx; ret; 
0x00040ea2: call 0x99b00; add esp, 0x1c; ret; 
0x00040ed2: call 0x99ba0; add esp, 0x1c; ret; 
0x000999fb: call 0x99dc0; add esp, 0x28; pop ebx; ret; 
0x00099a9b: call 0x9a250; add esp, 0x28; pop ebx; ret; 
0x00099b3b: call 0x9a6d0; add esp, 0x28; pop ebx; ret; 
0x00099bdb: call 0x9ad90; add esp, 0x28; pop ebx; ret; 
0x00099c73: call 0x9b9e0; add esp, 0x18; pop ebx; ret; 
0x0004b2bd: call 0x9d8cc1c3; add byte ptr [eax], al; add byte ptr [ebx + 0x1682454], cl; ret 0x5489; 
0x00099cf3: call 0x9e640; add esp, 0x18; pop ebx; ret; 
0x00099d73: call 0xa1190; add esp, 0x18; pop ebx; ret; 
0x000a392b: call 0xa44c0; add esp, 0x18; pop ebx; ret; 
0x000a3973: call 0xa4ca0; add esp, 0x18; pop ebx; ret; 
0x00098e46: call 0xa5b70; add esp, 0x28; pop ebx; ret; 
0x000a5fda: call 0xa5ff0; add esp, 0x1c; ret; 
0x000a7b9e: call 0xa7a60; add esp, 0x48; pop ebx; ret; 
0x000a842f: call 0xa7e90; add esp, 0x18; pop ebx; ret; 
0x000a7be6: call 0xa94b0; add esp, 0x18; pop ebx; ret; 
0x000ab38f: call 0xab4b0; sub esp, 8; add esp, 0x18; pop ebx; ret; 
0x000b08ef: call 0xae970; add esp, 0x2c; ret; 
0x000ae95b: call 0xb08c0; add esp, 0x28; pop ebx; ret; 
0x000b2dcf: call 0xb09a0; add esp, 0x2c; ret; 
0x000b093b: call 0xb2da0; add esp, 0x28; pop ebx; ret; 
0x000b3972: call 0xb3800; sub esp, 4; add esp, 0x18; pop ebx; ret; 
0x000b39b8: call 0xb3930; add esp, 8; pop ebx; ret; 
0x000b3dca: call 0xb46f0; add esp, 0x2c; ret; 
0x000b434a: call 0xb48f0; add esp, 0x2c; ret; 
0x0012c192: call 0xb5d00; mov edx, 0xffffffff; test eax, eax; cmovne eax, edx; add esp, 0x1c; ret; 
0x0012c292: call 0xb70b0; mov edx, 0xffffffff; test eax, eax; cmovne eax, edx; add esp, 0x1c; ret; 
0x0019ae98: call 0xb719b154; mov ah, 0xf8; call dword ptr [eax]; 
0x000b7d92: call 0xb7da0; add esp, 0x1c; ret; 
0x000e88f8: call 0xb81e0; add esp, 0x2c; ret; 
0x000b876a: call 0xb85e0; add esp, 0x18; pop ebx; ret; 
0x000b8a6a: call 0xb8bd0; add esp, 0x18; pop ebx; ret; 
0x000fd413: call 0xb9030; add esp, 0xc; and eax, 0xffff; ret; 
0x0011b5e0: call 0xb90a0; mov edx, dword ptr [esp + 0x2c]; mov dword ptr [esp + 4], edi; mov dword ptr [esp], eax; call edx; 
0x000d90c2: call 0xb90b0; mov edx, edi; mov ecx, eax; xchg edi, ebx; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00102eaf: call 0xb90d0; add esp, 0x18; pop ebx; ret; 
0x000b9352: call 0xb92e0; add esp, 0x1c; ret; 
0x000e6897: call 0xba100; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000bd622: call 0xbb1b0; cmp eax, 1; sete al; add esp, 8; movzx eax, al; ret; 
0x000a85e4: call 0xc12a7eaa; cli; adc ch, byte ptr [ecx]; ret 0x83b8; 
0x000e0dc5: call 0xc326a53; mov ebx, eax; mov eax, 0xfa; call dword ptr gs:[0x10]; 
0x0013b56d: call 0xc395b570; mov al, 0xbf; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c52ee: call 0xc4000; add esp, 0x28; pop ebx; ret; 
0x000c51f6: call 0xc5110; add esp, 0x28; pop ebx; ret; 
0x0012df56: call 0xc55b0; add esp, 0x18; pop ebx; ret; 
0x0012df86: call 0xc5640; add esp, 0x18; pop ebx; ret; 
0x00102954: call 0xc57a0; add esp, 0x18; pop ebx; ret; 
0x001029b7: call 0xc5960; mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000c5e9c: call 0xc5da0; add esp, 4; pop ebx; ret; 
0x000ca98a: call 0xca930; xor eax, eax; add esp, 0xc; ret; 
0x0016ad3d: call 0xcafaad43; hlt; call dword ptr [eax - 0x18]; 
0x0010359f: call 0xcd4b8a9; ret; 
0x000ce677: call 0xce4d0; add esp, 0x28; pop esi; ret; 
0x00172fe8: call 0xd342fd8; popal; out 0xeb, al; jmp dword ptr [edx]; 
0x00173018: call 0xd343008; dec ebx; out 0xeb, al; jmp dword ptr [edx]; 
0x0018bde8: call 0xd418bfb8; lahf; cmc; call dword ptr [esi]; 
0x000d82f2: call 0xd7850; sub esp, 0x14; add esp, 0x2c; ret; 
0x000d8386: call 0xd7cd0; sub esp, 0x1c; add esp, 0x2c; ret; 
0x0014ace8: call 0xd7fe0; add esp, 0x18; pop ebx; ret; 
0x0012dfc9: call 0xd81a0; add esp, 0x28; pop ebx; ret; 
0x000d8aa6: call 0xd8b90; add esp, 0x28; pop ebx; ret; 
0x000715bd: call 0xdde60; add esp, 0x1c; ret; 
0x000ddb85: call 0xddee0; add esp, 0x2c; ret; 
0x000ddbcd: call 0xddf70; add esp, 0x3c; ret; 
0x000df68a: call 0xde7c0; add esp, 0x1c; ret; 
0x00112b7b: call 0xdeb70; mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00168e5d: call 0xdeb78e62; out dx, eax; push dword ptr [eax]; call 0xdec08e6a; out dx, eax; jmp dword ptr [eax - 0x18]; 
0x000ed33a: call 0xdebea; mov ecx, edi; mov edx, eax; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000e829d: call 0xdebea; mov ecx, esi; mov edx, eax; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x00168e65: call 0xdec08e6a; out dx, eax; jmp dword ptr [eax - 0x18]; 
0x00019618: call 0xdec60; add esp, 0x18; pop ebx; ret; 
0x000e8420: call 0xdec6a; mov ecx, esi; mov edx, eax; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x00168e6d: call 0xdeca8e72; out dx, eax; call dword ptr [eax - 0x17]; 
0x00123d42: call 0xdf100; add esp, 0x1c; sar eax, 0x1f; ret; 
0x000e23d9: call 0xdf6e0; mov ecx, dword ptr [ebp - 0xb0]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000e3559: call 0xdf6e0; mov ecx, dword ptr [ebp - 0xc0]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x00102b94: call 0xdf720; add esp, 0x18; pop ebx; ret; 
0x000dff88: call 0xdf720; add esp, 0xd4; pop ebx; pop esi; ret; 
0x0012e0a6: call 0xe00b0; add esp, 0x18; pop ebx; ret; 
0x00102efc: call 0xe0500; add esp, 0x18; pop ebx; ret; 
0x0012e576: call 0xe1090; add esp, 0x28; pop ebx; ret; 
0x00168e85: call 0xe16d8e8a; out dx, eax; jmp dword ptr [eax]; 
0x000e2602: call 0xe2070; sub esp, 8; add esp, 0x18; pop ebx; ret; 
0x000e25bc: call 0xe2070; sub esp, 8; add esp, 0x1c; ret; 
0x000e3782: call 0xe31f0; sub esp, 8; add esp, 0x18; pop ebx; ret; 
0x000e373c: call 0xe31f0; sub esp, 8; add esp, 0x1c; ret; 
0x000dde03: call 0xe5030; mov ebx, dword ptr [esp + 0x70]; mov esi, dword ptr [esp + 0x74]; mov edi, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x000e6777: call 0xe65b0; mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0016684d: call 0xe687684e; cld; call dword ptr [eax]; 
0x000e6a62: call 0xe6980; sar eax, 0x1f; add esp, 0xc; ret; 
0x000e6b75: call 0xe6a70; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x001667ad: call 0xe6b967ae; cld; push eax; out 0xfc, al; call edx; 
0x0016683d: call 0xe6c7683e; cld; jmp dword ptr [eax - 0x19]; 
0x000e62e6: call 0xe6d00; add esp, 0x18; pop ebx; ret; 
0x000e6445: call 0xe6d00; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0010b636: call 0xe6d00; mov ecx, esi; mov edx, eax; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x00111e59: call 0xe7c40; mov dword ptr [ebx + 0x331c], eax; add esp, 8; pop ebx; ret; 
0x00102f34: call 0xe7c80; add esp, 0x18; pop ebx; ret; 
0x0010e5ad: call 0xe810e5b3; mov ebp, 0x810001b7; ret; 
0x000e8a9c: call 0xe8c60; add esp, 0x18; pop ebx; ret; 
0x0011594e: call 0xe8d329dc; adc bh, dh; ret 0x8080; 
0x00166881: call 0xe91b6882; cld; call esp; 
0x00166915: call 0xe9676916; cld; jmp dword ptr [eax]; 
0x001668f5: call 0xe9a768f6; cld; jmp dword ptr [eax - 0x16]; 
0x000ea0ef: call 0xe9e20; mov dword ptr [ebx + 0x1eec], eax; add esp, 8; pop ebx; ret; 
0x000eadde: call 0xea460; add esp, 0x28; pop ebx; ret; 
0x000eaca2: call 0xea6f0; add esp, 0x1c; ret; 
0x0014a570: call 0xeb160; add esp, 0x18; pop ebx; ret; 
0x00075507: call 0xeb160; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000eb4d0: call 0xeb4e0; add esp, 0x18; pop ebx; ret; 
0x000eb448: call 0xeb5e0; add esp, 0x18; pop ebx; ret; 
0x000eb498: call 0xeb640; mov eax, dword ptr [esp + 0x2c]; add esp, 0x38; pop ebx; ret; 
0x000eb903: call 0xeb8d0; mov eax, dword ptr [esi]; mov dword ptr [esp], eax; call edi; 
0x00023998: call 0xec0b0; add esp, 0x18; pop ebx; ret; 
0x0014a3fb: call 0xec0d0; add esp, 0x18; pop ebx; ret; 
0x000ec5c2: call 0xec330; add esp, 0x1c; ret; 
0x000ec5a2: call 0xec440; add esp, 0x1c; ret; 
0x000ed9e8: call 0xed930; test eax, eax; setne al; add esp, 0xc; movzx eax, al; ret; 
0x000edd67: call 0xee130; mov eax, esi; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000ee417: call 0xee7c0; mov eax, esi; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x00071591: call 0xeec70; add esp, 0x18; pop ebx; ret; 
0x000f1b8a: call 0xf13e0; mov dword ptr [ebx + 0x1cc], esi; mov ebx, dword ptr [esp + 4]; mov esi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000f1aab: call 0xf1920; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000f277a: call 0xf1bf0; pop edx; pop ecx; pop eax; ret; 
0x000f2099: call 0xf1f70; add esp, 4; ret; 
0x00002bde: call 0xf3f8f45c; ret; 
0x00171be8: call 0xf4171c16; ret 0xffeb; 
0x001987e8: call 0xf4198a82; sbb edi, eax; jmp dword ptr [edi]; 
0x0012e802: call 0xf4860; mov edx, 0xffffffff; test eax, eax; cmovne eax, edx; add esp, 0x1c; ret; 
0x000f8e1a: call 0xf6e00; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0018da05: call 0xf810da0b; cmc; call dword ptr [esi]; 
0x0018da55: call 0xf8b0da5b; cmc; jmp esi; 
0x000fb79a: call 0xfa420; add esp, 0x18; pop ebx; ret; 
0x000f7e0c: call 0xfb730; mov dword ptr [esp + 4], esi; mov dword ptr [esp], ebp; mov dword ptr [esp + 8], eax; call dword ptr [edi + 0x14]; 
0x000b819e: call 0xfc200; mov ecx, eax; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x0002e3d9: call 0xfc260; mov eax, esi; mov edi, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x000fede7: call 0xfd430; add esp, 0x14; pop ebx; pop esi; ret; 
0x000fdf9e: call 0xfd430; add esp, 0x18; pop ebx; ret; 
0x000fee93: call 0xfd430; add esp, 0x74; pop ebx; pop esi; ret; 
0x000fef63: call 0xfdf80; add esp, 0x74; pop ebx; pop esi; ret; 
0x000fe0a2: call 0xfdfb0; add esp, 0x1c; ret; 
0x000fe878: call 0xfe4b0; or dword ptr [ebx + 0x2c6c], 2; add esp, 0x18; pop ebx; ret; 
0x0012eab2: call 0xffe30; add esp, 0x2c; ret; 
0x000a093d: call 0xfff3f7b7; idiv edi; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x001097f8: call 0xfff40; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x001007a7: call 0xfff40; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret 4; 
0x000e4b40: call 0xfffba62d; jmp dword ptr [esi - 0x7d]; 
0x000b85ce: call dword ptr [0x10]; mov eax, 1; int 0x80; 
0x000de56c: call dword ptr [0x10]; mov ebx, edx; ret; 
0x000fc1eb: call dword ptr [0x10]; pop edx; pop ecx; pop ebx; ret; 
0x000b9086: call dword ptr [0x10]; ret; 
0x000eedee: call dword ptr [0x10]; xchg ebx, ecx; ret; 
0x000c5b3c: call dword ptr [0x10]; xchg ebx, edi; neg eax; pop edi; ret; 
0x00165da3: call dword ptr [0x35fffcce]; into; cld; call dword ptr [ebp - 0x32]; 
0x00064a70: call dword ptr [eax + 0x10]; 
0x000720bd: call dword ptr [eax + 0x10]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0006f61d: call dword ptr [eax + 0x10]; add esp, 0x18; pop esi; ret; 
0x0016df93: call dword ptr [eax + 0x12]; 
0x0006bab5: call dword ptr [eax + 0x14]; 
0x0007220d: call dword ptr [eax + 0x14]; add esp, 0x14; pop ebx; pop esi; ret; 
0x00169563: call dword ptr [eax + 0x15]; 
0x0006c01e: call dword ptr [eax + 0x18]; 
0x0016961b: call dword ptr [eax + 0x19]; 
0x0016700b: call dword ptr [eax + 0x1a]; 
0x0016700b: call dword ptr [eax + 0x1a]; std; jmp eax; 
0x00126d2b: call dword ptr [eax + 0x1ac]; mov ebx, dword ptr [esp + 0x24]; mov dword ptr [esi + 0xc], eax; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x00126ddc: call dword ptr [eax + 0x1b0]; add esp, 0x18; pop ebx; ret; 
0x0016e163: call dword ptr [eax + 0x1b]; 
0x00042616: call dword ptr [eax + 0x1c]; 
0x00166fd3: call dword ptr [eax + 0x1e]; 
0x0006f5ed: call dword ptr [eax + 0x20]; 
0x0006f5ed: call dword ptr [eax + 0x20]; add esp, 0x18; pop esi; ret; 
0x00166e23: call dword ptr [eax + 0x20fffd00]; add ebp, edi; push dword ptr [eax + 0x40fffd01]; add bh, ch; call eax; 
0x00066a41: call dword ptr [eax + 0x24]; 
0x00169a13: call dword ptr [eax + 0x25]; 
0x0011cdfa: call dword ptr [eax + 0x26748d]; lea edx, dword ptr [esp + 0x530]; mov dword ptr [esp + 4], esi; mov dword ptr [esp], edx; call dword ptr [eax + 0xc]; 
0x000733ca: call dword ptr [eax + 0x26748d]; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x000ba2aa: call dword ptr [eax + 0x26748d]; mov eax, ebx; sub eax, dword ptr [ebx + esi*4 - 0xe8d38]; jmp eax; 
0x000eb01a: call dword ptr [eax + 0x26748d]; mov ecx, edi; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x00083b4a: call dword ptr [eax + 0x26748d]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00026c47: call dword ptr [eax + 0x26b48d]; add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81001031; ret; 
0x001671c3: call dword ptr [eax + 0x27]; 
0x001671c3: call dword ptr [eax + 0x27]; std; jmp eax; 
0x00169a93: call dword ptr [eax + 0x28]; 
0x00073df6: call dword ptr [eax + 0x2b04468b]; inc esi; or al, 0x89; ret 0xfac1; 
0x001698c3: call dword ptr [eax + 0x2b]; 
0x00066e79: call dword ptr [eax + 0x2c]; 
0x0016e4b3: call dword ptr [eax + 0x2d]; 
0x0015a5d3: call dword ptr [eax + 0x2e]; 
0x0016735f: call dword ptr [eax + 0x2e]; std; call dword ptr [eax]; 
0x0015a5f3: call dword ptr [eax + 0x2f]; 
0x000648ef: call dword ptr [eax + 0x30]; 
0x0001cafd: call dword ptr [eax + 0x31575590]; call dword ptr [esi - 0x77]; 
0x00169ae3: call dword ptr [eax + 0x31]; 
0x00167373: call dword ptr [eax + 0x33]; 
0x00167373: call dword ptr [eax + 0x33]; std; jmp eax; 
0x000670bb: call dword ptr [eax + 0x34]; 
0x0015a69b: call dword ptr [eax + 0x34]; push dword ptr [eax + 0x34]; call dword ptr [eax - 0x4f000ccc]; xor al, 0xf3; call eax; 
0x0015a6bb: call dword ptr [eax + 0x35]; 
0x0015a70b: call dword ptr [eax + 0x36]; 
0x0015a533: call dword ptr [eax + 0x38]; 
0x0016735b: call dword ptr [eax + 0x3b]; 
0x0016735b: call dword ptr [eax + 0x3b]; std; call dword ptr [eax + 0x2e]; std; call dword ptr [eax]; 
0x0006fa61: call dword ptr [eax + 0x3c]; 
0x001672b3: call dword ptr [eax + 0x3cfffd3a]; cmp edi, ebp; dec dword ptr [ebx + edi + 0x3a76fffd]; std; jmp esi; 
0x0016e34b: call dword ptr [eax + 0x4000323]; test ebx, edi; jmp esp; 
0x00067e41: call dword ptr [eax + 0x40]; 
0x001675ef: call dword ptr [eax + 0x41]; 
0x001675ef: call dword ptr [eax + 0x41]; std; jmp eax; 
0x0015a737: call dword ptr [eax + 0x43]; 
0x00070936: call dword ptr [eax + 0x44]; 
0x0015a76b: call dword ptr [eax + 0x45]; 
0x0015a783: call dword ptr [eax + 0x46]; 
0x000d6e16: call dword ptr [eax + 0x46ab60f]; mov ecx, ebx; sub ecx, dword ptr [ebx + ebp*4 - 0xcc1cc]; jmp ecx; 
0x0016e9d3: call dword ptr [eax + 0x47]; 
0x0006429b: call dword ptr [eax + 0x48]; 
0x0015a80b: call dword ptr [eax + 0x4a]; 
0x0015a847: call dword ptr [eax + 0x4b]; 
0x001675b7: call dword ptr [eax + 0x4c]; 
0x001675b7: call dword ptr [eax + 0x4c]; std; call dword ptr [eax]; 
0x00169f8b: call dword ptr [eax + 0x52]; 
0x001677cf: call dword ptr [eax + 0x59]; 
0x001677cf: call dword ptr [eax + 0x59]; std; jmp eax; 
0x0016a103: call dword ptr [eax + 0x5a]; 
0x0016778f: call dword ptr [eax + 0x5c]; 
0x0016779b: call dword ptr [eax + 0x5d]; 
0x0016779b: call dword ptr [eax + 0x5d]; std; jmp dword ptr [eax + 0x50]; 
0x00166e13: call dword ptr [eax + 0x60fffd0c]; or eax, 0xe30fffd; std; jmp eax; 
0x0016a30b: call dword ptr [eax + 0x66]; 
0x0016a423: call dword ptr [eax + 0x6b]; 
0x0016c4cb: call dword ptr [eax + 0x6e]; 
0x0016c54b: call dword ptr [eax + 0x70]; 
0x0016c573: call dword ptr [eax + 0x71]; 
0x00105286: call dword ptr [eax + 0x7510ff83]; ret; 
0x000787c3: call dword ptr [eax + 0x77]; 
0x0002d38e: call dword ptr [eax + 0xc2444db]; fld qword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0006b967: call dword ptr [eax + 0xc]; 
0x001110e6: call dword ptr [eax + 0xc]; add esp, 0x18; pop esi; ret; 
0x00166ddf: call dword ptr [eax + 0xc]; std; push dword ptr [eax]; or eax, 0xe00fffd; std; jmp eax; 
0x00166f0f: call dword ptr [eax + 0xf]; 
0x00166f0f: call dword ptr [eax + 0xf]; std; call eax; 
0x0016b163: call dword ptr [eax + 1]; 
0x001832f3: call dword ptr [eax + 3]; 
0x0011187a: call dword ptr [eax + 4]; 
0x0011e592: call dword ptr [eax + 4]; add esp, 0x18; pop esi; ret; 
0x0018a1df: call dword ptr [eax + 6]; 
0x0016f5f3: call dword ptr [eax + 7]; 
0x00166e53: call dword ptr [eax + 7]; std; jmp eax; 
0x00064496: call dword ptr [eax + 8]; 
0x00126f7f: call dword ptr [eax + 8]; add esp, 0x18; pop ebx; ret; 
0x00166a17: call dword ptr [eax - 0x14]; 
0x00166a17: call dword ptr [eax - 0x14]; cld; jmp eax; 
0x0016adc3: call dword ptr [eax - 0x15]; 
0x00166917: call dword ptr [eax - 0x17]; 
0x00166917: call dword ptr [eax - 0x17]; cld; jmp dword ptr [eax]; 
0x00104bac: call dword ptr [eax - 0x17ac6f70]; mov ebp, 0x81000251; ret; 
0x00126c3c: call dword ptr [eax - 0x17ac6f70]; sub eax, 0x81000031; ret; 
0x000ec9ae: call dword ptr [eax - 0x17aca9a9]; mov ebx, 0x810003d3; ret; 
0x0016ad43: call dword ptr [eax - 0x18]; 
0x00168df3: call dword ptr [eax - 0x1a]; 
0x0016cec3: call dword ptr [eax - 0x1bfffd54]; xchg eax, edx; stc; jmp eax; 
0x0016acc3: call dword ptr [eax - 0x1c]; 
0x0016ac0b: call dword ptr [eax - 0x20]; 
0x00166937: call dword ptr [eax - 0x21]; 
0x00166937: call dword ptr [eax - 0x21]; cld; jmp eax; 
0x00168ba3: call dword ptr [eax - 0x29]; 
0x0016eecb: call dword ptr [eax - 0x2a]; 
0x00168ad3: call dword ptr [eax - 0x2d]; 
0x00165fe7: call dword ptr [eax - 0x30]; 
0x00165fe7: call dword ptr [eax - 0x30]; cld; inc dword ptr [eax - 0x4f000330]; sar ah, 1; jmp eax; 
0x0016a98b: call dword ptr [eax - 0x32]; 
0x00125a66: call dword ptr [eax - 0x34780e77]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0016ea9b: call dword ptr [eax - 0x34]; 
0x0016ea9b: call dword ptr [eax - 0x34]; add al, byte ptr [eax]; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; call eax; 
0x0016a803: call dword ptr [eax - 0x3d]; 
0x0016d203: call dword ptr [eax - 0x41]; 
0x0016d203: call dword ptr [eax - 0x41]; add al, byte ptr [eax]; mov ebp, 0x80fff9ca; mov edi, 0xcad40002; stc; jmp eax; 
0x0016a71b: call dword ptr [eax - 0x42]; 
0x0016879b: call dword ptr [eax - 0x43]; 
0x0016a6b3: call dword ptr [eax - 0x44]; 
0x0016d0bb: call dword ptr [eax - 0x48]; 
0x0016cfdb: call dword ptr [eax - 0x4d]; 
0x00166313: call dword ptr [eax - 0x4f00032b]; aad 0xfc; call eax; 
0x00166093: call dword ptr [eax - 0x4f00032f]; sar esp, 1; call eax; 
0x0015a6a3: call dword ptr [eax - 0x4f000ccc]; xor al, 0xf3; call eax; 
0x0016f06b: call dword ptr [eax - 0x50]; 
0x0016cf23: call dword ptr [eax - 0x51]; 
0x0016ee33: call dword ptr [eax - 0x55]; 
0x0016e933: call dword ptr [eax - 0x58fffe49]; and bh, ah; call eax; 
0x0016ce3b: call dword ptr [eax - 0x5b]; 
0x001682f3: call dword ptr [eax - 0x5c]; 
0x001682b3: call dword ptr [eax - 0x5d]; 
0x0016cd3b: call dword ptr [eax - 0x5f]; 
0x001680db: call dword ptr [eax - 0x65]; 
0x0016806b: call dword ptr [eax - 0x68]; 
0x0016796f: call dword ptr [eax - 0x6e]; 
0x0016750b: call dword ptr [eax - 0x6f0002b5]; dec ecx; std; jmp dword ptr [eax]; 
0x00167ec3: call dword ptr [eax - 0x6f]; 
0x0012fb7e: call dword ptr [eax - 0x7cef397d]; ret 0x8910; 
0x00166d4b: call dword ptr [eax - 0x7f0002f4]; or bh, ch; jmp dword ptr [eax]; 
0x00167cfb: call dword ptr [eax - 0x7f]; 
0x00129a46: call dword ptr [eax - 0x98a3f7b]; mov eax, 4; add esp, 0xc; ret; 
0x00166bd3: call dword ptr [eax - 0xb]; 
0x00166bd3: call dword ptr [eax - 0xb]; cld; jmp eax; 
0x0016dc23: call dword ptr [eax - 1]; 
0x0016dbab: call dword ptr [eax - 4]; 
0x00166b77: call dword ptr [eax - 5]; 
0x00166b77: call dword ptr [eax - 5]; cld; call dword ptr [eax]; 
0x0016917b: call dword ptr [eax - 6]; 
0x00002293: call dword ptr [eax]; 
0x000fc2f4: call dword ptr [eax]; add esp, 0x1c; ret; 
0x0016719f: call dword ptr [eax]; and ch, bh; call eax; 
0x0016719f: call dword ptr [eax]; and ch, bh; call eax; and bh, ch; jmp dword ptr [eax + 0x23]; 
0x00166b7f: call dword ptr [eax]; cli; cld; call eax; 
0x001675bb: call dword ptr [eax]; dec ebp; std; jmp dword ptr [eax]; 
0x00167473: call dword ptr [eax]; dec edx; std; jmp edx; 
0x00168bd3: call dword ptr [eax]; fadd dword ptr [eax]; add byte ptr [esp + ebx*8], al; out dx, al; jmp esp; 
0x0011226c: call dword ptr [eax]; mov eax, dword ptr [edi + 4]; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x0011ba83: call dword ptr [eax]; mov edi, eax; mov eax, dword ptr [esi + 4]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x001127b6: call dword ptr [eax]; mov edx, dword ptr [edi + 4]; mov dword ptr [esp], edi; mov dword ptr [esp + 0x2c], eax; call dword ptr [edx + 0x10]; 
0x0016cd93: call dword ptr [eax]; movsb byte ptr es:[edi], byte ptr [esi]; add al, byte ptr [eax]; mov dl, 0x74; stc; jmp dword ptr [eax]; 
0x00166e0f: call dword ptr [eax]; paddw mm7, mm7; nop; or al, 0xfd; jmp dword ptr [eax + 0xd]; 
0x0016885b: call dword ptr [eax]; ret 0; 
0x0016ee13: call dword ptr [eax]; stosb byte ptr es:[edi], al; add al, byte ptr [eax]; adc al, 0x70; cld; jmp dword ptr [eax - 0x56]; 
0x0015a693: call dword ptr [eax]; xor al, 0xf3; push dword ptr [eax]; xor al, 0xf3; call dword ptr [eax + 0x34]; 
0x0015a66f: call dword ptr [eax]; xor esi, ebx; jmp dword ptr [eax]; 
0x0006d616: call dword ptr [ebp + 0x10]; 
0x0006d6de: call dword ptr [ebp + 0x18]; 
0x00001fcb: call dword ptr [ebp + 0x41]; 
0x0001abaf: call dword ptr [ebp + 0x57]; 
0x0018760b: call dword ptr [ebp + 1]; 
0x0018b197: call dword ptr [ebp + 2]; 
0x0001d2e7: call dword ptr [ebp + 4]; 
0x00166c53: call dword ptr [ebp + edi*8 - 0x1cb0004]; cld; call esp; 
0x00166c3f: call dword ptr [ebp + edi*8 - 4]; jmp esp; 
0x0016da73: call dword ptr [ebp + esi*8 - 0x5b7bfffe]; cli; call eax; 
0x000e22a5: call dword ptr [ebp - 0x28]; 
0x0015a087: call dword ptr [ebp - 0x2d]; 
0x00165fa7: call dword ptr [ebp - 0x30]; 
0x00165dab: call dword ptr [ebp - 0x32]; 
0x00165dab: call dword ptr [ebp - 0x32]; cld; push edx; int 0xfc; call dword ptr [edx]; 
0x000b4e86: call dword ptr [ebp - 0x34]; 
0x000b4f5f: call dword ptr [ebp - 0x48]; 
0x000c77e8: call dword ptr [ebp - 0x50]; 
0x0001c22f: call dword ptr [ebp - 0x77]; 
0x000c8054: call dword ptr [ebp - 0x78]; 
0x00127398: call dword ptr [ebp - 0x7c]; 
0x0001e841: call dword ptr [ebp]; 
0x0007af19: call dword ptr [ebx + 0x196c]; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [ebx + 0x1968], 1; add esp, 0x28; pop ebx; ret; 
0x0004bbbf: call dword ptr [ebx + 0x31]; 
0x00043b9b: call dword ptr [ebx + 0xf]; 
0x0017496f: call dword ptr [ebx + 1]; 
0x00176fff: call dword ptr [ebx + 2]; 
0x0017c783: call dword ptr [ebx + 3]; 
0x001669bf: call dword ptr [ebx + ebp*8 - 0x13db0004]; cld; push dword ptr [esp + ebp*8 - 0x12bb0004]; cld; call dword ptr [ebx + ebp*8 - 4]; call esp; 
0x001669cf: call dword ptr [ebx + ebp*8 - 4]; call esp; 
0x0012498e: call dword ptr [ebx - 0x1460]; mov edx, eax; add esp, 0x18; mov eax, edx; pop ebx; ret; 
0x00124933: call dword ptr [ebx - 0x1464]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x001248c3: call dword ptr [ebx - 0x1468]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0012484b: call dword ptr [ebx - 0x146c]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0001931f: call dword ptr [ebx - 0x18]; 
0x0011c4af: call dword ptr [ebx - 0x18]; mov ebp, 0x810000d8; ret; 
0x000ea6af: call dword ptr [ebx - 0x18]; mov ebp, 0x810003f6; ret; 
0x0007bf5f: call dword ptr [ebx - 0x18]; or eax, 0x81000ade; ret; 
0x001665d7: call dword ptr [ebx - 0x24]; 
0x001665c3: call dword ptr [ebx - 0x25]; 
0x0016634f: call dword ptr [ebx - 0x27]; 
0x0016634f: call dword ptr [ebx - 0x27]; cld; call dword ptr [ebx - 0x2c000327]; frndint; call dword ptr [ebx]; 
0x001660bf: call dword ptr [ebx - 0x2b]; 
0x00166353: call dword ptr [ebx - 0x2c000327]; frndint; call dword ptr [ebx]; 
0x00166343: call dword ptr [ebx - 0x2c000328]; fdivr st(4); call dword ptr [ebx]; 
0x001660ab: call dword ptr [ebx - 0x2c]; 
0x001660ab: call dword ptr [ebx - 0x2c]; cld; inc dword ptr [ebx - 0x4c00032c]; aam 0xfc; jmp ebx; 
0x00166303: call dword ptr [ebx - 0x4c00032b]; aad 0xfc; call ebx; 
0x00166083: call dword ptr [ebx - 0x4c00032f]; sar esp, 1; call ebx; 
0x00097bff: call dword ptr [ebx - 0x7d]; 
0x000035ea: call dword ptr [ebx]; 
0x001660bb: call dword ptr [ebx]; aad 0xfc; call dword ptr [ebx - 0x2b]; 
0x00063345: call dword ptr [ebx]; add ah, cl; cli; adc eax, dword ptr [eax]; ret 0x13ff; 
0x00063305: call dword ptr [ebx]; add byte ptr [esp + edi*8], cl; adc eax, dword ptr [eax]; ret 0x13ff; 
0x0016634b: call dword ptr [ebx]; frndint; call dword ptr [ebx - 0x27]; 
0x000bb9db: call dword ptr [ecx + 0x10]; 
0x000bb500: call dword ptr [ecx + 0x14]; 
0x0006dcc5: call dword ptr [ecx + 0x18]; 
0x00042466: call dword ptr [ecx + 0x1c]; 
0x000bba2a: call dword ptr [ecx + 0x20]; 
0x000e1e07: call dword ptr [ecx + 0x24]; 
0x0015a077: call dword ptr [ecx + 0x34ffffc3]; aad 0xff; call dword ptr [ecx - 0x2a]; 
0x000711e8: call dword ptr [ecx + 0x38]; 
0x0006fae1: call dword ptr [ecx + 0x40]; 
0x00001bdb: call dword ptr [ecx + 0x77]; 
0x00118aa6: call dword ptr [ecx + 0xc]; 
0x00118aa6: call dword ptr [ecx + 0xc]; add esp, 0x18; pop esi; ret; 
0x0017d1a7: call dword ptr [ecx + 1]; 
0x00192157: call dword ptr [ecx + 2]; 
0x00184d0b: call dword ptr [ecx + 3]; 
0x00184d0b: call dword ptr [ecx + 3]; bound ecx, qword ptr [esi]; or byte ptr [ebx + 0x40e5f02], al; ret; 
0x00195cef: call dword ptr [ecx + 4]; 
0x0019078f: call dword ptr [ecx + 5]; 
0x00168093: call dword ptr [ecx + ebx*4 + 0x347e0000]; in al, dx; call esp; 
0x00165efb: call dword ptr [ecx + edx*8 - 4]; inc dword ptr [ecx + edx*8 - 0x2e4b0004]; cld; jmp esp; 
0x000599f7: call dword ptr [ecx - 0x17]; 
0x0015a07f: call dword ptr [ecx - 0x2a]; 
0x0015afb1: call dword ptr [ecx - 0x56000a00]; add bl, bh; inc ebx; add dh, bh; jmp edi; 
0x0000308f: call dword ptr [ecx]; 
0x000f7e1c: call dword ptr [edi + 0x14]; 
0x00016f6f: call dword ptr [edi + 0x56]; 
0x0006cb8d: call dword ptr [edi + 0xc]; 
0x0018efcb: call dword ptr [edi + 1]; 
0x0017c757: call dword ptr [edi + 2]; 
0x00173e37: call dword ptr [edi + 4]; 
0x00173723: call dword ptr [edi + 7]; 
0x001663eb: call dword ptr [edi + edx*8 - 4]; inc dword ptr [edi + edx*8 - 0x284b0004]; cld; jmp esp; 
0x000d91df: call dword ptr [edi - 0x48]; 
0x0015a3c3: call dword ptr [edi - 0x4c]; 
0x00018ccc: call dword ptr [edi - 0x75]; 
0x00045935: call dword ptr [edi - 0x77]; 
0x00021568: call dword ptr [edi]; 
0x0006d91a: call dword ptr [edx + 0x10]; 
0x0011b38e: call dword ptr [edx + 0x14]; 
0x0006bfbd: call dword ptr [edx + 0x18]; 
0x00072515: call dword ptr [edx + 0x20]; 
0x00072515: call dword ptr [edx + 0x20]; add esp, 0x1c; ret; 
0x000726ed: call dword ptr [edx + 0x24]; 
0x0011f0aa: call dword ptr [edx + 0x24]; add esp, 0x1c; ret; 
0x0011f15d: call dword ptr [edx + 0x24]; add esp, 0x28; pop esi; ret; 
0x000726ed: call dword ptr [edx + 0x24]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0006ab15: call dword ptr [edx + 0x30]; 
0x0006cec3: call dword ptr [edx + 0x38]; 
0x0016731f: call dword ptr [edx + 0x3a]; 
0x0016731f: call dword ptr [edx + 0x3a]; std; inc edx; cmp bh, ch; call dword ptr [edx]; 
0x0007028b: call dword ptr [edx + 0x40]; 
0x00167627: call dword ptr [edx + 0x4f]; 
0x00167627: call dword ptr [edx + 0x4f]; std; jmp edx; 
0x00167863: call dword ptr [edx + 0x5e]; 
0x001708b3: call dword ptr [edx + 0xb]; 
0x0011195c: call dword ptr [edx + 0xc]; 
0x0011c9a2: call dword ptr [edx + 0xc]; add esp, 0x4c; ret; 
0x001940a7: call dword ptr [edx + 3]; 
0x0006ccc5: call dword ptr [edx + 4]; 
0x001140ca: call dword ptr [edx + 4]; add esp, 0x1c; ret; 
0x0011e5f2: call dword ptr [edx + 4]; add esp, 0x28; pop esi; ret; 
0x001709b3: call dword ptr [edx + 6]; 
0x0011199f: call dword ptr [edx + 8]; 
0x0016666f: call dword ptr [edx + ebx*8 - 4]; inc dword ptr [edx + ebx*8 - 0x254b0004]; cld; jmp esp; 
0x001678ab: call dword ptr [edx + edx*4]; cld; lcall ptr [edx - 0x70]; cld; call esi; 
0x00059a9d: call dword ptr [edx - 0x17]; 
0x00002b4b: call dword ptr [edx - 0x19]; 
0x00165dbb: call dword ptr [edx - 0x32]; 
0x00166533: call dword ptr [edx - 0x4d000328]; fdivr st(4); call edx; 
0x00166beb: call dword ptr [edx - 1]; 
0x00166beb: call dword ptr [edx - 1]; cld; jmp dword ptr [edx]; 
0x00166bf7: call dword ptr [edx - 2]; 
0x0004db2c: call dword ptr [edx]; 
0x001140e2: call dword ptr [edx]; add esp, 0x1c; ret; 
0x0016741f: call dword ptr [edx]; cmp al, 0xfd; jmp dword ptr [edx + 0x3c]; 
0x00167327: call dword ptr [edx]; cmp edi, ebp; jmp dword ptr [edx + 0x3b]; 
0x00167767: call dword ptr [edx]; pop ebp; std; jmp dword ptr [edx + 0x5d]; 
0x00167263: call dword ptr [edx]; std; push dword ptr [edx + 0x2e]; std; call edx; 
0x00112fd2: call dword ptr [esi + 0x14]; 
0x0007c1a1: call dword ptr [esi + 0x1c]; 
0x00166fc3: call dword ptr [esi + 0x1e]; 
0x0007c288: call dword ptr [esi + 0x20]; 
0x000e1914: call dword ptr [esi + 0x24]; 
0x000d85c3: call dword ptr [esi + 0x31]; 
0x0015a59f: call dword ptr [esi + 0x39]; 
0x0016734b: call dword ptr [esi + 0x3b]; 
0x00167443: call dword ptr [esi + 0x3c]; 
0x00017817: call dword ptr [esi + 0x53]; 
0x0016777f: call dword ptr [esi + 0x5c]; 
0x0016778b: call dword ptr [esi + 0x5d]; 
0x000036a4: call dword ptr [esi + 0x6f]; 
0x00112593: call dword ptr [esi + 0xc]; 
0x0019a47b: call dword ptr [esi + 1]; 
0x00186a87: call dword ptr [esi + 2]; 
0x0017731f: call dword ptr [esi + 3]; 
0x0001cdd7: call dword ptr [esi + 4]; 
0x001928a7: call dword ptr [esi + 5]; 
0x001144f5: call dword ptr [esi + 8]; 
0x001684d3: call dword ptr [esi + ebp*4 - 0x5c8c0000]; in al, dx; call esp; 
0x0016800b: call dword ptr [esi + edx*4 + 0xab40000]; in al, dx; call esp; 
0x00096843: call dword ptr [esi - 0x42]; 
0x001662f3: call dword ptr [esi - 0x4900032b]; aad 0xfc; call esi; 
0x00166073: call dword ptr [esi - 0x4900032f]; sar esp, 1; call esi; 
0x0001cb03: call dword ptr [esi - 0x77]; 
0x00095d63: call dword ptr [esi - 0x7d]; 
0x00167207: call dword ptr [esi - 0x90002d2]; std; jmp eax; 
0x0001ec55: call dword ptr [esi]; 
0x0016780b: call dword ptr [esi]; pop edi; std; jmp dword ptr [eax]; 
0x001117d8: call dword ptr [esp + 0x24]; add esp, 0x18; pop ebx; ret; 
0x00115f34: call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x0011e53a: call dword ptr [esp + 0x40]; add esp, 0x3c; ret; 
0x000232ae: call dword ptr gs:[0x10]; 
0x000b85cd: call dword ptr gs:[0x10]; mov eax, 1; int 0x80; 
0x000de56b: call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000fc1ea: call dword ptr gs:[0x10]; pop edx; pop ecx; pop ebx; ret; 
0x000b9085: call dword ptr gs:[0x10]; ret; 
0x000eeded: call dword ptr gs:[0x10]; xchg ebx, ecx; ret; 
0x000c5b3b: call dword ptr gs:[0x10]; xchg ebx, edi; neg eax; pop edi; ret; 
0x00019532: call eax; 
0x00167393: call eax; aaa; std; jmp dword ptr [eax + 0x38]; 
0x00166e33: call eax; add bh, ch; jmp dword ptr [eax + 3]; 
0x0002dd66: call eax; add esp, 0x14; pop ebx; pop ebp; ret; 
0x0011126b: call eax; add esp, 0x18; lea eax, dword ptr [ebx + 0x32cc]; pop ebx; ret; 
0x000197f0: call eax; add esp, 0x18; pop ebx; ret; 
0x00064eda: call eax; add esp, 0x1c; ret; 
0x000eca93: call eax; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000ec954: call eax; add esp, 0x28; pop ebx; ret; 
0x000fc0eb: call eax; add esp, 8; pop ebx; ret; 
0x001671a3: call eax; and bh, ch; jmp dword ptr [eax + 0x23]; 
0x001673d7: call eax; cmp al, 0xfd; jmp dword ptr [eax]; 
0x0016b0fb: call eax; inc byte ptr [ecx]; add byte ptr [edi + ebx], dl; cmc; jmp dword ptr [eax]; 
0x0016760f: call eax; inc ebp; std; jmp dword ptr [eax + 0x46]; 
0x00166957: call eax; jecxz 0x166957; jmp dword ptr [eax - 0x1c]; 
0x00109904: call eax; mov dword ptr [esi + 0x28], 0; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00019863: call eax; mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x001111ee: call eax; mov ebx, dword ptr [esp + 0x30]; mov esi, dword ptr [esp + 0x34]; mov edi, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x00129e3b: call eax; mov edx, eax; sar edx, 0x1f; add esp, 0x18; pop esi; ret; 
0x000792b9: call eax; nop; lea esi, dword ptr [esi]; add esp, 0x18; pop ebx; ret; 
0x00166e07: call eax; or eax, 0xea0fffd; std; call dword ptr [eax]; 
0x0016704f: call eax; pop ds; std; jmp dword ptr [eax]; 
0x00166f57: call eax; push ds; std; jmp dword ptr [eax]; 
0x001677af: call eax; push esp; std; jmp dword ptr [eax + 0x55]; 
0x0016887b: call eax; ret 0; 
0x00166c83: call eax; std; cld; push dword ptr [eax - 2]; cld; jmp dword ptr [eax]; 
0x00166b9b: call eax; sti; cld; jmp eax; 
0x0016798f: call eax; xchg eax, esi; cld; jmp dword ptr [eax - 0x69]; 
0x0015a6ab: call eax; xor al, 0xf3; push eax; xor al, 0xf3; call dword ptr [eax]; 
0x0015a65f: call eax; xor dh, bl; jmp eax; 
0x000eb88f: call ebp; mov esi, dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00166223: call ebp; sar esp, cl; inc dword ptr [0x35fffcd4]; aam 0xfc; jmp dword ptr [ebp - 0x2c]; 
0x0001f1c2: call ebx; 
0x00166347: call ebx; fdivr st(4); call dword ptr [ebx]; 
0x00166347: call ebx; fdivr st(4); call dword ptr [ebx]; frndint; call dword ptr [ebx - 0x27]; 
0x00166357: call ebx; frndint; call dword ptr [ebx]; 
0x000ce074: call ebx; ret 0x5021; 
0x0002b2a2: call ecx; 
0x0001affb: call edi; 
0x0015a59b: call edi; cmp dl, dh; call dword ptr [esi + 0x39]; 
0x000251a9: call edx; 
0x00064fbc: call edx; add esp, 0x1c; ret; 
0x00166967: call edx; in al, dx; cld; jmp dword ptr [edx - 0x13]; 
0x001667b7: call edx; out 0xfc, eax; jmp dword ptr [edx - 0x18]; 
0x001677e7: call edx; pop esi; std; jmp dword ptr [edx]; 
0x00166a37: call edx; stc; cld; jmp dword ptr [edx - 6]; 
0x000194a8: call esi; 
0x001673c7: call esi; cmp al, 0xfd; jmp dword ptr [esi]; 
0x001678b3: call esi; nop; cld; jmp dword ptr [esi - 0x6f]; 
0x0016703f: call esi; pop ds; std; jmp dword ptr [esi]; 
0x00166f47: call esi; push ds; std; jmp dword ptr [esi]; 
0x00150a40: call esp; 
0x00167cdb: call esp; add byte ptr [eax], 0; adc dl, byte ptr [eax - 0x15]; jmp dword ptr [eax + 0x7f]; 
0x0016cc15: cdq; add al, byte ptr [eax]; and al, 0x45; stc; jmp dword ptr [eax - 0x67]; 
0x0016cc05: cdq; add al, byte ptr [eax]; xchg eax, esp; inc esp; stc; jmp dword ptr [eax]; 
0x0016cc35: cdq; add al, byte ptr [eax]; xor al, 0x46; stc; jmp eax; 
0x0000943c: cdq; add byte ptr [eax], al; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0x38; 
0x001680a5: cdq; add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; xor al, 0xec; call esp; 
0x00188b29: cdq; add dword ptr [eax], eax; add al, 0x1b; hlt; jmp dword ptr [ebx]; 
0x00188bb9: cdq; add dword ptr [eax], eax; inc esp; sbb al, 0xf4; jmp dword ptr [ebp]; 
0x00173929: cdq; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00190cf7: cdq; add dword ptr [edx], ecx; ret; 
0x00187008: cdq; add ebx, esi; call dword ptr [eax]; 
0x00190eed: cdq; idiv bh; ret; 
0x001047b1: cdq; idiv edi; add esp, 0x18; pop ebx; ret; 
0x00158beb: cdq; inc esp; push ds; mov ah, 0x13; ret; 
0x00158cb2: cdq; iretd; dec ebx; ret 0xde9e; 
0x0008d2fb: cdq; jmp ecx; 
0x000b90d6: cdq; or al, 7; add byte ptr [ecx + 0xe9f1ac3], al; add byte ptr [ebx - 0x78f7dbac], cl; sar dword ptr [eax + 0xcd], cl; call dword ptr gs:[0x10]; 
0x0008d513: cdq; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00049c83: cdq; sbb al, 2; add byte ptr [ebx - 0x6bf0fe40], al; ret 0x73e9; 
0x00019658: cdq; sbb byte ptr [eax], al; lea eax, dword ptr [ecx - 0x43dee]; ret; 
0x00019638: cdq; sbb byte ptr [eax], al; lea eax, dword ptr [ecx - 0x46116]; ret; 
0x001255d3: cdq; xchg eax, esi; cld; jmp dword ptr [ecx]; 
0x00001a62: cdq; xchg eax, esp; pop edx; int 0x4f; jmp edx; 
0x00198960: cdq; xor bh, al; call dword ptr [eax]; 
0x00184728: clc; adc dl, dh; jmp dword ptr [eax]; 
0x00007969: clc; adc dword ptr [eax], eax; ret; 
0x0016b43c: clc; adc eax, dword ptr [edx]; add ah, dl; cmp al, 0xf6; call dword ptr [eax + 0x14]; 
0x000e6824: clc; add al, 0x74; push 0x7401f883; and ecx, dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x000fc2d6: clc; add al, 0x75; ret 0xdeeb; 
0x0001f066: clc; add al, 0x89; ret 0x4574; 
0x00098a9b: clc; add al, 0x89; ret 0x474; 
0x0001fdae: clc; add al, 0x89; ret 0x5574; 
0x000c8209: clc; add al, 0xf; xchg eax, esp; ret 0x5589; 
0x0006eb11: clc; add al, byte ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00056a6e: clc; add bh, byte ptr [ecx]; ret 0x1974; 
0x000b5149: clc; add byte ptr [eax], al; add byte ptr [ecx + 0x2be82404], cl; sbb eax, dword ptr [edi]; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp + 3]; 
0x000b1649: clc; add ch, byte ptr [ecx]; ret 0xd285; 
0x000709da: clc; add cl, byte ptr [ecx - 0x17f7dbbc]; pop ebx; ret 0xffff; 
0x00071436: clc; add cl, byte ptr [ecx - 0x17f7dbbc]; push dword ptr [edi - 0x77c0001]; dec dword ptr [edi]; xchg eax, esp; ret 0xd284; 
0x000a7714: clc; add cl, byte ptr [ecx - 0x76fbdbbc]; call 0x892a6fe1; ret 0xeac1; 
0x0006d0dc: clc; add cl, byte ptr [edi]; test ebx, ecx; add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x0011eedf: clc; add cl, byte ptr [edi]; xchg eax, esp; ret 0xd089; 
0x0011e65c: clc; add cl, byte ptr [edi]; xchg eax, esp; ret 0xf883; 
0x00097baa: clc; add dh, byte ptr [edx + 0x31]; ror byte ptr [ebx - 0x74fbdba4], 0x74; and al, 8; add esp, 0xc; ret; 
0x001775f8: clc; add dword ptr [eax], 0; adc al, 0xef; call esp; 
0x0016af9d: clc; add dword ptr [eax], eax; aam 0; cmc; jmp eax; 
0x000ca611: clc; add dword ptr [ecx - 0x3fe6f7ba], ecx; mov esi, dword ptr [esp + 0x18]; and eax, 0xc; add esp, 0x1c; ret; 
0x0006ab19: clc; add dword ptr [ecx], ebx; rol byte ptr [ebx - 0x2f08e73c], 0x5b; ret; 
0x00116d8e: clc; add dword ptr [ecx], ebx; rol byte ptr [ebx - 0x3b7cfd40], 0x1c; ret; 
0x0001a3fe: clc; add dword ptr [ecx], ebx; sal bh, 0xd0; add esp, 8; pop ebx; ret; 
0x0011f983: clc; add dword ptr [edi], ecx; xchg eax, esp; rol byte ptr [ebx - 0x49f0d73c], 0xc0; pop ebx; ret; 
0x0011f9dc: clc; add dword ptr [edi], ecx; xchg eax, esp; rol byte ptr [ebx - 0x49f0e73c], 0xc0; pop ebx; ret; 
0x000bd628: clc; add dword ptr [edi], ecx; xchg eax, esp; rol byte ptr [ebx - 0x49f0f73c], 0xc0; ret; 
0x0011efba: clc; add dword ptr [edx + 0x72], esi; and byte ptr [ecx], dh; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xd089; 
0x0011eed6: clc; add dword ptr [esi + ebx*2 + 0x72], esi; sbb al, 0x31; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xd089; 
0x0010fae9: clc; add eax, 0xc; ret; 
0x00094ff5: clc; add eax, ecx; pop edi; ret; 
0x000a55f3: clc; add esp, 0x10; pop esi; pop edi; pop ebp; ret; 
0x00193a15: clc; and al, 0xf6; jmp dword ptr [edx]; 
0x0010b97a: clc; and ecx, dword ptr [edi]; xchg esi, esp; add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x0018c1e8: clc; and edi, edx; call dword ptr [edi]; 
0x001944a4: clc; and edi, esi; call dword ptr [eax]; 
0x00083f98: clc; bsf edx, edx; add eax, edx; pop edi; pop esi; ret; 
0x0013d588: clc; call 0x129d73; add ebx, 0x2a152; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013c3ec: clc; call 0x129d73; add ebx, 0x2b06e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013af48: clc; call 0x129d73; add ebx, 0x2c352; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00139f38: clc; call 0x129d73; add ebx, 0x2d1a2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00138f68: clc; call 0x129d73; add ebx, 0x2dfb2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00137d9c: clc; call 0x129d73; add ebx, 0x2eefe; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001368bc: clc; call 0x129d73; add ebx, 0x3015e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013548c: clc; call 0x129d73; add ebx, 0x3130e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00132dfd: clc; call 0x129d73; add ebx, 0x3301d; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0016c4ca: clc; call dword ptr [eax + 0x6e]; 
0x0016c54a: clc; call dword ptr [eax + 0x70]; 
0x0016c572: clc; call dword ptr [eax + 0x71]; 
0x0016c012: clc; call dword ptr [eax]; 
0x00199cce: clc; call dword ptr [ebp]; 
0x001988f2: clc; call dword ptr [ebx]; 
0x001992fe: clc; call dword ptr [ecx]; 
0x00199f0e: clc; call dword ptr [edi]; 
0x0019a3f2: clc; call dword ptr [edx]; 
0x0019a47a: clc; call dword ptr [esi + 1]; 
0x0019ac96: clc; call dword ptr [esi + 2]; 
0x001986c2: clc; call dword ptr [esi]; 
0x0016bd9a: clc; call eax; 
0x001983c6: clc; call edx; 
0x0016be1a: clc; call esp; 
0x00166ad1: clc; cld; call dword ptr [eax]; 
0x00166a31: clc; cld; inc dword ptr [eax]; stc; cld; call edx; 
0x00166ac1: clc; cld; jmp dword ptr [eax - 7]; 
0x0018ecf8: clc; cli; add dword ptr [eax], eax; xchg eax, esp; and esi, esi; jmp edi; 
0x0018da59: clc; cmc; jmp esi; 
0x00003baa: clc; cmp eax, ecx; mov bl, 0xf7; adc bh, byte ptr [eax]; cwde; ret; 
0x0016c532: clc; dec dword ptr [eax]; jo 0x16c539; add byte ptr [ebx + ecx*4], dh; clc; jmp dword ptr [eax]; 
0x000ec318: clc; dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x00096824: clc; dec dword ptr [ebp - 0x10cbb36d]; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x001280ce: clc; dec dword ptr [ebp - 0x7b6837d]; dec dword ptr [edi]; inc esp; ret 0x4489; 
0x0012d805: clc; dec dword ptr [ebx - 0xf775]; dec dword ptr [ecx - 0x13f73]; jmp dword ptr [ebp - 0x75]; 
0x0012d121: clc; dec dword ptr [ebx - 0xf775]; jmp dword ptr [ebp - 0x75]; 
0x0009dda6: clc; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x000ec4cb: clc; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x77]; 
0x00105566: clc; dec dword ptr [ecx + 0xf382444]; xchg eax, esp; ret 0xd285; 
0x00105d36: clc; dec dword ptr [ecx + 0xf442444]; xchg eax, esp; ret 0xd285; 
0x0016c39a: clc; dec dword ptr [ecx + ebp*2 + 2]; add byte ptr [edx + edi*2], dl; clc; jmp dword ptr [eax + 0x69]; 
0x00052eac: clc; dec dword ptr [ecx - 0x18b7b]; dec dword ptr [edi]; test ebp, esp; ret; 
0x0004299b: clc; dec dword ptr [ecx - 0x757bf039]; add byte ptr [eax], al; add byte ptr [ebx - 0x4af6b], cl; ljmp ptr [ecx]; ret 0xbd83; 
0x0011da91: clc; dec dword ptr [ecx - 0x7af0f3aa]; pop ebx; add dword ptr [eax], eax; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x75]; 
0x001280d4: clc; dec dword ptr [edi]; inc esp; ret 0x4489; 
0x001242fa: clc; dec dword ptr [edi]; inc esp; ret 0x508d; 
0x0007ad85: clc; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x0005e45d: clc; dec dword ptr [edi]; test byte ptr [edx], dh; sub al, 0; add byte ptr [ebx - 0x15775], cl; jmp dword ptr [ebp - 0x75]; 
0x0012b33b: clc; dec dword ptr [edi]; test byte ptr [esi - 0x76000002], dl; ret 0xfac1; 
0x00051fee: clc; dec dword ptr [edi]; test dword ptr [ebx], ebx; test al, 0xff; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x00050f30: clc; dec dword ptr [edi]; test dword ptr [edi - 0x7600001c], ecx; test dword ptr [esi + edi*8 - 1], esi; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x75]; 
0x000d9f85: clc; dec dword ptr [edi]; test dword ptr [edx], ebx; add eax, dword ptr [eax]; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x7d]; 
0x000714e6: clc; dec dword ptr [edi]; xchg eax, esp; ret 0x57e9; 
0x00071442: clc; dec dword ptr [edi]; xchg eax, esp; ret 0xd284; 
0x0018da08: clc; div ebp; call dword ptr [esi]; 
0x0018d198: clc; fdivr st(5), st(0); call dword ptr [eax]; 
0x0005d32c: clc; imul ecx, dword ptr [edi], 0x19b884; add byte ptr [ebx - 0x7af0cf02], al; ret 0x18; 
0x000a1f9a: clc; inc dword ptr [ebp + 0x34850fc0]; or al, byte ptr [eax]; add byte ptr [ebx - 0x76bfdbbc], cl; ret 0xfac1; 
0x0012d237: clc; inc dword ptr [ebp - 0x147bf040]; add al, byte ptr [eax]; add byte ptr [ebx - 0x13f73], cl; jmp dword ptr [ebp - 0x7d]; 
0x0016c1ea: clc; inc dword ptr [ecx + 0x5d740002]; clc; call eax; 
0x0016c3c2: clc; inc eax; imul eax, dword ptr [edx], 0xf87b5400; call esp; 
0x00168ffc: clc; int1; add byte ptr [eax], al; ret 0xeffa; 
0x0016bff2: clc; jmp dword ptr [eax + 0x57]; 
0x0016c3a2: clc; jmp dword ptr [eax + 0x69]; 
0x0016c45a: clc; jmp dword ptr [eax + 0x6c]; 
0x0016c49a: clc; jmp dword ptr [eax + 0x6d]; 
0x0016c722: clc; jmp dword ptr [eax + 0x7b]; 
0x0016c8ca: clc; jmp dword ptr [eax - 0x7b]; 
0x0016c81a: clc; jmp dword ptr [eax - 0x7e]; 
0x0016c0ca: clc; jmp dword ptr [eax]; 
0x0019946e: clc; jmp dword ptr [ebx]; 
0x00199a1e: clc; jmp dword ptr [ecx]; 
0x00198646: clc; jmp dword ptr [edi]; 
0x00199526: clc; jmp dword ptr [edx]; 
0x00198316: clc; jmp dword ptr [esi + 2]; 
0x0009756c: clc; jmp dword ptr [esi - 0x70]; 
0x0019b682: clc; jmp dword ptr [esi]; 
0x0016bef2: clc; jmp eax; 
0x0019b096: clc; jmp edx; 
0x0016be62: clc; jmp esp; 
0x0016beaa: clc; lcall ptr [eax + 0x4f]; add al, byte ptr [eax]; xchg eax, esp; sbb bh, al; call eax; 
0x0016c78a: clc; lcall ptr [eax - 0x1bfffd83]; ret 0xfff8; 
0x0016c7a2: clc; lcall ptr [esi + edi*2]; add al, byte ptr [eax]; xchg eax, esp; ret; 
0x00187ff8: clc; lea eax, dword ptr [ecx]; add ah, dh; mov ah, 0xf3; jmp dword ptr [esi + 3]; 
0x0016c3ba: clc; ljmp ptr [ecx + ebp*2 + 0x7b140002]; clc; inc eax; imul eax, dword ptr [edx], 0xf87b5400; call esp; 
0x001992f8: clc; mov al, byte ptr [0x44640002]; clc; call dword ptr [ecx]; 
0x001894f8: clc; mov byte ptr [0x5e840001], al; hlt; call dword ptr [edx]; 
0x001682dc: clc; mov dword ptr [0x6db40000], eax; in al, dx; jmp dword ptr [eax]; 
0x001331a1: clc; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132b91: clc; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0013d368: clc; mov dword ptr [edx - 8], ecx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x001335f7: clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00136311: clc; mov eax, edx; pop ebx; ret; 
0x000f1cf4: clc; mov ebx, dword ptr [ebp - 0xc]; mov edi, dword ptr [ebp - 4]; mov esp, ebp; pop ebp; ret; 
0x0006b9f9: clc; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00064e56: clc; mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x00054c7c: clc; mov ebx, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x44]; mov edi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x000e633b: clc; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0016d114: clc; mov ecx, 0xb9c40002; stc; call dword ptr [eax]; 
0x00138d3b: clc; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00139d1b: clc; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x0013d36b: clc; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x001687fc: clc; mov edi, 0x3d940000; in eax, dx; call dword ptr [eax]; 
0x000e0cfe: clc; mov edi, 8; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x00030d2f: clc; mov edi, dword ptr [ebp - 4]; mov esp, ebp; pop ebp; ret; 
0x00116d54: clc; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000d9c59: clc; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 8; 
0x0008282b: clc; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000e154e: clc; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00177ef8: clc; mov word ptr [eax], es; add byte ptr [edi], dl; out dx, eax; call dword ptr [edi + 1]; 
0x0008286b: clc; mov word ptr [edi], cx; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x00134e7c: clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013630c: clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0013be5c: clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x0008d4b4: clc; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ef0e0: clc; or byte ptr [edi], cl; xchg eax, esp; rol byte ptr [ebx - 0x49f0d33c], 0xc0; sub eax, 1; ret; 
0x000ef0a0: clc; or byte ptr [edi], cl; xchg eax, esp; rol byte ptr [ebx - 0x49f0e33c], 0xc0; sub eax, 1; ret; 
0x000ad9a2: clc; or dword ptr [eax], eax; add dh, dh; ret 0x7518; 
0x000adde7: clc; or ecx, dword ptr [edi]; xchg byte ptr [ecx + 0x31ffffdd], cl; shr cl, 0x76; fdivr st(7); jmp dword ptr [esi - 0x70]; 
0x0017b089: clc; out dx, eax; call dword ptr [eax]; 
0x0017d1a5: clc; out dx, eax; call dword ptr [ecx + 1]; 
0x0017d03d: clc; out dx, eax; call dword ptr [edx]; 
0x000e6a68: clc; pop ds; add esp, 0xc; ret; 
0x000cf112: clc; pop ds; and eax, 0xc; ret 8; 
0x0002d20b: clc; pop ds; not eax; sar ecx, 0x1e; and eax, ecx; ret; 
0x00123d4b: clc; pop ds; ret; 
0x0002d4d9: clc; pop ds; sar ecx, 0x1e; not eax; and eax, ecx; ret; 
0x0002d74f: clc; pop ds; sub edx, ecx; not eax; and eax, edx; ret; 
0x00093d3a: clc; pop ebx; pop edi; ret; 
0x000b6a93: clc; pop ebx; pop esi; pop ebp; ret; 
0x00017e75: clc; pop ebx; pop esi; pop edi; pop ebp; ret 0x10; 
0x00120ea7: clc; pop ebx; pop esi; pop edi; pop ebp; ret 0x14; 
0x00028f46: clc; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00023ec7: clc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00047afa: clc; pop ebx; pop esi; pop edi; ret; 
0x00132fb7: clc; pop ebx; ret; 
0x0013b361: clc; pop edi; call 0x129d73; add ebx, 0x2c1b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00136c91: clc; pop edi; call 0x129d73; add ebx, 0x300c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00135811: clc; pop edi; call 0x129d73; add ebx, 0x312c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134381: clc; pop edi; call 0x129d73; add ebx, 0x324d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00023eff: clc; pop edi; pop ebp; ret; 
0x00087382: clc; pop edi; pop ebx; ret; 
0x0008df31: clc; pop edi; pop esi; pop ebx; ret; 
0x00085585: clc; pop edi; ret; 
0x00126690: clc; pop es; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0005ea5c: clc; pop esi; pop edi; pop ebp; ret; 
0x00095d4e: clc; pop esi; pop edi; ret; 
0x0016c122: clc; push dword ptr [eax - 0x1bfffda3]; dec esi; clc; call esp; 
0x0016be12: clc; push dword ptr [ebp + ecx*2 + 0xc140002]; clc; call esp; 
0x00072a62: clc; push dword ptr [ebp - 0x2c]; add esp, 0x18; pop esi; ret; 
0x0006bfc1: clc; push dword ptr [ebx + eax - 0x7d]; out dx, eax; add esp, 0x18; pop esi; ret; 
0x000b462e: clc; push dword ptr [ebx + ebp - 0x77]; ret 0xe283; 
0x0016c71a: clc; push dword ptr [ebx + edi*2]; add al, byte ptr [eax]; add al, 0xbb; clc; jmp dword ptr [eax + 0x7b]; 
0x00114263: clc; push dword ptr [ecx + eax*2 - 0x77]; push esi; sub al, 1; ret 0x5689; 
0x00064697: clc; push dword ptr [edi - 0x77]; ret 0xe283; 
0x00129ffc: clc; push dword ptr [esp + ebp*4 - 0x77]; ret 0xe283; 
0x0016f9f8: clc; ret 0xffea; 
0x0016a7fc: clc; ret 1; 
0x000d7bf5: clc; ret; 
0x0016a7bc: clc; rol dword ptr [ecx], 0; and al, 0x21; lcall ptr [eax]; ret 1; 
0x0016d489: clc; stc; jmp esp; 
0x00095277: clc; sub eax, 0x10; pop edi; ret; 
0x0007a48c: clc; sub eax, 8; pop esi; ret; 
0x00067c5c: clc; sub eax, esi; pop esi; pop edi; pop ebp; ret; 
0x0018efc8: clc; sub esi, esi; call dword ptr [edi + 1]; 
0x0007a475: clc; test byte ptr [edx + ecx - 4], 1; lea esi, dword ptr [ecx - 4]; cmovne eax, esi; pop esi; ret; 
0x0016f054: clc; test eax, 0xfa240001; std; call esp; 
0x00095965: clc; xor ch, ch; add eax, ecx; pop edi; ret; 
0x001729fc: cld; aaa; add byte ptr [eax], al; pushal; imul ebx; call ebx; 
0x0015a594: cld; aaa; bnd jmp dword ptr [ebx + 0x38]; bnd call edi; cmp dl, dh; call dword ptr [esi + 0x39]; 
0x0003c454: cld; adc byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0016e04c: cld; adc eax, 0x54c40003; sti; jmp dword ptr [eax]; 
0x00063309: cld; adc eax, dword ptr [eax]; ret 0x13ff; 
0x0016dba5: cld; add al, byte ptr [eax]; in al, 0xc8; cli; call dword ptr [eax - 4]; 
0x0016930c: cld; add al, byte ptr [ecx]; add byte ptr [ebp - 0x10], al; call dword ptr [eax]; 
0x000b85c9: cld; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; mov eax, 1; int 0x80; 
0x000a15c2: cld; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00124a6c: cld; add byte ptr [eax], al; add byte ptr [ebx - 0x2f76e73c], al; pop ebx; ret; 
0x00029195: cld; add byte ptr [eax], al; add byte ptr [ecx - 0x8f6b], cl; jmp dword ptr [ebp - 0x75]; 
0x001691d5: cld; add byte ptr [eax], al; into; adc dh, al; jmp dword ptr [eax - 4]; 
0x001691cd: cld; add byte ptr [eax], al; ret 0xf012; 
0x00047adb: cld; add byte ptr [edi], cl; test dword ptr [ebp - 0x7d000000], esi; call 0x89c4ffea; ret 0xec75; 
0x000394b4: cld; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00149a74: cld; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x00147260: cld; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x0011335a: cld; and eax, 0xfffffffc; lea eax, dword ptr [eax + ecx + 0x28]; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edi; call dword ptr [edx + 0x18]; 
0x00165da2: cld; call dword ptr [0x35fffcce]; into; cld; call dword ptr [ebp - 0x32]; 
0x00166e22: cld; call dword ptr [eax + 0x20fffd00]; add ebp, edi; push dword ptr [eax + 0x40fffd01]; add bh, ch; call eax; 
0x0016e8f2: cld; call dword ptr [eax + 0x34]; 
0x0016e70a: cld; call dword ptr [eax + 0x3c]; 
0x0016e80a: cld; call dword ptr [eax + 0x40]; 
0x0016e9d2: cld; call dword ptr [eax + 0x47]; 
0x00166a16: cld; call dword ptr [eax - 0x14]; 
0x00166a16: cld; call dword ptr [eax - 0x14]; cld; jmp eax; 
0x00166916: cld; call dword ptr [eax - 0x17]; 
0x00166916: cld; call dword ptr [eax - 0x17]; cld; jmp dword ptr [eax]; 
0x00166936: cld; call dword ptr [eax - 0x21]; 
0x00166936: cld; call dword ptr [eax - 0x21]; cld; jmp eax; 
0x0016eeca: cld; call dword ptr [eax - 0x2a]; 
0x00165fe6: cld; call dword ptr [eax - 0x30]; 
0x00165fe6: cld; call dword ptr [eax - 0x30]; cld; inc dword ptr [eax - 0x4f000330]; sar ah, 1; jmp eax; 
0x0016ea9a: cld; call dword ptr [eax - 0x34]; 
0x0016ea9a: cld; call dword ptr [eax - 0x34]; add al, byte ptr [eax]; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; call eax; 
0x00166312: cld; call dword ptr [eax - 0x4f00032b]; aad 0xfc; call eax; 
0x00166092: cld; call dword ptr [eax - 0x4f00032f]; sar esp, 1; call eax; 
0x0016ee32: cld; call dword ptr [eax - 0x55]; 
0x0016e932: cld; call dword ptr [eax - 0x58fffe49]; and bh, ah; call eax; 
0x0016796e: cld; call dword ptr [eax - 0x6e]; 
0x00166bd2: cld; call dword ptr [eax - 0xb]; 
0x00166bd2: cld; call dword ptr [eax - 0xb]; cld; jmp eax; 
0x00166b76: cld; call dword ptr [eax - 5]; 
0x00166b76: cld; call dword ptr [eax - 5]; cld; call dword ptr [eax]; 
0x00165ff6: cld; call dword ptr [eax]; 
0x00166b7e: cld; call dword ptr [eax]; cli; cld; call eax; 
0x00166c52: cld; call dword ptr [ebp + edi*8 - 0x1cb0004]; cld; call esp; 
0x00166c3e: cld; call dword ptr [ebp + edi*8 - 4]; jmp esp; 
0x00165fa6: cld; call dword ptr [ebp - 0x30]; 
0x00165daa: cld; call dword ptr [ebp - 0x32]; 
0x00165daa: cld; call dword ptr [ebp - 0x32]; cld; push edx; int 0xfc; call dword ptr [edx]; 
0x001669ce: cld; call dword ptr [ebx + ebp*8 - 4]; call esp; 
0x001665d6: cld; call dword ptr [ebx - 0x24]; 
0x001665c2: cld; call dword ptr [ebx - 0x25]; 
0x0016634e: cld; call dword ptr [ebx - 0x27]; 
0x0016634e: cld; call dword ptr [ebx - 0x27]; cld; call dword ptr [ebx - 0x2c000327]; frndint; call dword ptr [ebx]; 
0x001660be: cld; call dword ptr [ebx - 0x2b]; 
0x00166352: cld; call dword ptr [ebx - 0x2c000327]; frndint; call dword ptr [ebx]; 
0x00166342: cld; call dword ptr [ebx - 0x2c000328]; fdivr st(4); call dword ptr [ebx]; 
0x001660aa: cld; call dword ptr [ebx - 0x2c]; 
0x001660aa: cld; call dword ptr [ebx - 0x2c]; cld; inc dword ptr [ebx - 0x4c00032c]; aam 0xfc; jmp ebx; 
0x00166302: cld; call dword ptr [ebx - 0x4c00032b]; aad 0xfc; call ebx; 
0x00166082: cld; call dword ptr [ebx - 0x4c00032f]; sar esp, 1; call ebx; 
0x00165e1e: cld; call dword ptr [ebx]; 
0x001660ba: cld; call dword ptr [ebx]; aad 0xfc; call dword ptr [ebx - 0x2b]; 
0x0016634a: cld; call dword ptr [ebx]; frndint; call dword ptr [ebx - 0x27]; 
0x00165efa: cld; call dword ptr [ecx + edx*8 - 4]; inc dword ptr [ecx + edx*8 - 0x2e4b0004]; cld; jmp esp; 
0x001663ea: cld; call dword ptr [edi + edx*8 - 4]; inc dword ptr [edi + edx*8 - 0x284b0004]; cld; jmp esp; 
0x0016666e: cld; call dword ptr [edx + ebx*8 - 4]; inc dword ptr [edx + ebx*8 - 0x254b0004]; cld; jmp esp; 
0x001678aa: cld; call dword ptr [edx + edx*4]; cld; lcall ptr [edx - 0x70]; cld; call esi; 
0x00165dba: cld; call dword ptr [edx - 0x32]; 
0x00166532: cld; call dword ptr [edx - 0x4d000328]; fdivr st(4); call edx; 
0x00166bea: cld; call dword ptr [edx - 1]; 
0x00166bea: cld; call dword ptr [edx - 1]; cld; jmp dword ptr [edx]; 
0x00166bf6: cld; call dword ptr [edx - 2]; 
0x00165db2: cld; call dword ptr [edx]; 
0x001662f2: cld; call dword ptr [esi - 0x4900032b]; aad 0xfc; call esi; 
0x00166072: cld; call dword ptr [esi - 0x4900032f]; sar esp, 1; call esi; 
0x00166006: cld; call eax; 
0x00166956: cld; call eax; jecxz 0x166957; jmp dword ptr [eax - 0x1c]; 
0x00166b9a: cld; call eax; sti; cld; jmp eax; 
0x0016798e: cld; call eax; xchg eax, esi; cld; jmp dword ptr [eax - 0x69]; 
0x00166222: cld; call ebp; sar esp, cl; inc dword ptr [0x35fffcd4]; aam 0xfc; jmp dword ptr [ebp - 0x2c]; 
0x00165e2e: cld; call ebx; 
0x00166346: cld; call ebx; fdivr st(4); call dword ptr [ebx]; 
0x00166346: cld; call ebx; fdivr st(4); call dword ptr [ebx]; frndint; call dword ptr [ebx - 0x27]; 
0x00166356: cld; call ebx; frndint; call dword ptr [ebx]; 
0x0016653a: cld; call edx; 
0x00166966: cld; call edx; in al, dx; cld; jmp dword ptr [edx - 0x13]; 
0x001667b6: cld; call edx; out 0xfc, eax; jmp dword ptr [edx - 0x18]; 
0x00166a36: cld; call edx; stc; cld; jmp dword ptr [edx - 6]; 
0x0016607a: cld; call esi; 
0x001678b2: cld; call esi; nop; cld; jmp dword ptr [esi - 0x6f]; 
0x00166176: cld; call esp; 
0x00166b7d: cld; cld; call dword ptr [eax]; 
0x00166b7d: cld; cld; call dword ptr [eax]; cli; cld; call eax; 
0x00166aed: cld; cld; dec esi; cld; cld; jmp dword ptr [eax - 6]; 
0x00166b11: cld; cld; inc dword ptr [edx + edi*8 - 0x4cb0004]; cld; jmp esp; 
0x00166af1: cld; cld; jmp dword ptr [eax - 6]; 
0x00166b6d: cld; cld; jmp eax; 
0x00166b8d: cld; cld; push dword ptr [eax + 0x70fffcfc]; cli; cld; jmp dword ptr [eax]; 
0x00166b91: cld; cld; push dword ptr [eax - 6]; cld; jmp dword ptr [eax]; 
0x0007a47d: cld; cmovne eax, esi; pop esi; ret; 
0x0016743c: cld; cmp al, 0xfd; inc dword ptr [esi]; cmp al, 0xfd; call dword ptr [esi + 0x3c]; 
0x0016eb8a: cld; dec dword ptr [eax + 0x24000105]; sub ah, bh; call esp; 
0x0016e9aa: cld; dec dword ptr [eax + 0x37]; add al, byte ptr [eax]; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; jmp eax; 
0x0016e952: cld; dec dword ptr [eax + esi*8 + 0x22a70001]; cld; jmp esp; 
0x00066a7b: cld; dec dword ptr [ebp + 0x468b0076]; or byte ptr [ebx], ch; inc esi; add al, 0x89; ret 0xfac1; 
0x000bb133: cld; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x0004fe97: cld; dec dword ptr [ebx - 0x20b6b]; inc dword ptr [ebp + 0x6840fc0]; sub al, 0; add byte ptr [ebx - 0x1cb73], cl; call ecx; 
0x00165dea: cld; dec dword ptr [ecx - 0x32]; cld; jmp esi; 
0x000ec4c3: cld; dec dword ptr [ecx - 0x4c17dbfc]; and al, 0xf8; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x77]; 
0x00166562: cld; dec dword ptr [ecx - 0x56000328]; fdivr st(4); dec ecx; fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x0016edc2: cld; dec dword ptr [edx + eax*4 + 0x6d540002]; cld; jmp esp; 
0x00166a7a: cld; dec dword ptr [esi - 6]; cld; call esp; 
0x0016656a: cld; dec ecx; fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x00199524: cld; dec edi; clc; jmp dword ptr [edx]; 
0x00166aee: cld; dec esi; cld; cld; jmp dword ptr [eax - 6]; 
0x0018887d: cld; hlt; call dword ptr [eax]; 
0x00166226: cld; inc dword ptr [0x35fffcd4]; aam 0xfc; jmp dword ptr [ebp - 0x2c]; 
0x00167986: cld; inc dword ptr [eax + 0x20fffc95]; xchg eax, esi; cld; call eax; 
0x0016684a: cld; inc dword ptr [eax + 0x70fffce8]; out 0xfc, al; call dword ptr [eax]; 
0x00166bae: cld; inc dword ptr [eax - 0x10]; cld; call eax; 
0x001668de: cld; inc dword ptr [eax - 0x18]; cld; jmp dword ptr [eax]; 
0x00166952: cld; inc dword ptr [eax - 0x1d]; cld; call eax; 
0x00166952: cld; inc dword ptr [eax - 0x1d]; cld; call eax; jecxz 0x166957; jmp dword ptr [eax - 0x1c]; 
0x00165e1a: cld; inc dword ptr [eax - 0x32]; cld; call dword ptr [ebx]; 
0x0016675e: cld; inc dword ptr [eax - 0x4f000327]; frndint; jmp eax; 
0x00165fea: cld; inc dword ptr [eax - 0x4f000330]; sar ah, 1; jmp eax; 
0x00167976: cld; inc dword ptr [eax - 0x6d]; cld; call eax; 
0x00166aca: cld; inc dword ptr [eax - 0x7f000306]; clc; cld; call dword ptr [eax]; 
0x00166c7e: cld; inc dword ptr [eax - 3]; cld; call eax; 
0x00166266: cld; inc dword ptr [eax]; aam 0xfc; push dword ptr [eax]; aam 0xfc; jmp dword ptr [eax - 0x2c]; 
0x00165e12: cld; inc dword ptr [eax]; into; cld; jmp dword ptr [eax]; 
0x00166a32: cld; inc dword ptr [eax]; stc; cld; call edx; 
0x001669ca: cld; inc dword ptr [ebp + ebp*8 - 4]; call dword ptr [ebx + ebp*8 - 4]; call esp; 
0x0016ee8a: cld; inc dword ptr [ebx + ecx*8]; add al, byte ptr [eax]; adc al, 0x73; cld; jmp dword ptr [eax]; 
0x00165e0a: cld; inc dword ptr [ebx - 0x32]; cld; jmp eax; 
0x001660ae: cld; inc dword ptr [ebx - 0x4c00032c]; aam 0xfc; jmp ebx; 
0x00166582: cld; inc dword ptr [ebx - 0x5c000328]; fdivr st(4); inc ebx; fdivr st(4); jmp dword ptr [eax - 0x28]; 
0x00165e02: cld; inc dword ptr [ebx]; into; cld; jmp dword ptr [ebx]; 
0x00165e32: cld; inc dword ptr [ebx]; sar esp, 1; push dword ptr [ebx]; sar esp, 1; jmp dword ptr [ebx - 0x2f]; 
0x00166882: cld; inc dword ptr [ecx + ebp*8]; cld; call esp; 
0x00165efe: cld; inc dword ptr [ecx + edx*8 - 0x2e4b0004]; cld; jmp esp; 
0x001663ee: cld; inc dword ptr [edi + edx*8 - 0x284b0004]; cld; jmp esp; 
0x00166c4e: cld; inc dword ptr [edi*8 - 0x26b0004]; cld; push dword ptr [esi + edi*8]; cld; call esp; 
0x00167a1e: cld; inc dword ptr [edi]; scasd eax, dword ptr es:[edi]; cld; call dword ptr [eax]; 
0x00166672: cld; inc dword ptr [edx + ebx*8 - 0x254b0004]; cld; jmp esp; 
0x00166b12: cld; inc dword ptr [edx + edi*8 - 0x4cb0004]; cld; jmp esp; 
0x001662ae: cld; inc dword ptr [edx - 0x5d00032b]; aad 0xfc; inc edx; aad 0xfc; jmp edx; 
0x0016602e: cld; inc dword ptr [edx - 0x5d00032f]; sar esp, 1; inc edx; sar esp, 1; jmp edx; 
0x00165dfa: cld; inc dword ptr [esi - 0x32]; cld; jmp ebx; 
0x00166572: cld; inc dword ptr [esi - 0x59000328]; fdivr st(4); inc esi; fdivr st(4); jmp dword ptr [ebx - 0x28]; 
0x00165df2: cld; inc dword ptr [esi]; into; cld; jmp dword ptr [esi]; 
0x001668f2: cld; inc eax; call 0xe9a768f6; cld; jmp dword ptr [eax - 0x16]; 
0x00166abe: cld; inc eax; clc; cld; jmp dword ptr [eax - 7]; 
0x0016e7ca: cld; inc eax; cmp al, byte ptr [ebx]; add ah, al; adc al, 0xfc; jmp dword ptr [eax + 0x3f]; 
0x00166932: cld; inc eax; fdivp st(4); call dword ptr [eax - 0x21]; 
0x00166932: cld; inc eax; fdivp st(4); call dword ptr [eax - 0x21]; cld; jmp eax; 
0x00166bce: cld; inc eax; hlt; cld; call dword ptr [eax - 0xb]; 
0x0016658a: cld; inc ebx; fdivr st(4); jmp dword ptr [eax - 0x28]; 
0x00165e42: cld; inc ebx; sar esp, 1; push ebx; sar esp, 1; jmp dword ptr [ebx]; 
0x0016609e: cld; inc ebx; sar esp, cl; push ebx; sar esp, cl; jmp dword ptr [ebx]; 
0x001662b6: cld; inc edx; aad 0xfc; jmp edx; 
0x00166036: cld; inc edx; sar esp, 1; jmp edx; 
0x0016657a: cld; inc esi; fdivr st(4); jmp dword ptr [ebx - 0x28]; 
0x000f7322: cld; int1; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0016e7ba: cld; jmp dword ptr [eax + 0x3a]; 
0x0016e7d2: cld; jmp dword ptr [eax + 0x3f]; 
0x0016ed3a: cld; jmp dword ptr [eax + 3]; 
0x0016ebfa: cld; jmp dword ptr [eax + 9]; 
0x001668fa: cld; jmp dword ptr [eax - 0x16]; 
0x00166872: cld; jmp dword ptr [eax - 0x18]; 
0x00166842: cld; jmp dword ptr [eax - 0x19]; 
0x0016695a: cld; jmp dword ptr [eax - 0x1c]; 
0x00166786: cld; jmp dword ptr [eax - 0x25]; 
0x0016658e: cld; jmp dword ptr [eax - 0x28]; 
0x00166292: cld; jmp dword ptr [eax - 0x2a]; 
0x00166282: cld; jmp dword ptr [eax - 0x2b]; 
0x0016626e: cld; jmp dword ptr [eax - 0x2c]; 
0x0016ee1a: cld; jmp dword ptr [eax - 0x56]; 
0x00167992: cld; jmp dword ptr [eax - 0x69]; 
0x00166bb6: cld; jmp dword ptr [eax - 0xf]; 
0x00166af2: cld; jmp dword ptr [eax - 6]; 
0x00166ac2: cld; jmp dword ptr [eax - 7]; 
0x00165e16: cld; jmp dword ptr [eax]; 
0x00166746: cld; jmp dword ptr [ebp - 0x25]; 
0x00166252: cld; jmp dword ptr [ebp - 0x2a]; 
0x00166242: cld; jmp dword ptr [ebp - 0x2b]; 
0x0016622e: cld; jmp dword ptr [ebp - 0x2c]; 
0x00038782: cld; jmp dword ptr [ebp - 0x39]; 
0x001665ae: cld; jmp dword ptr [ebx - 0x26]; 
0x0016633e: cld; jmp dword ptr [ebx - 0x28]; 
0x0016632a: cld; jmp dword ptr [ebx - 0x29]; 
0x00165e4e: cld; jmp dword ptr [ebx - 0x2e]; 
0x00165e3a: cld; jmp dword ptr [ebx - 0x2f]; 
0x00165e06: cld; jmp dword ptr [ebx]; 
0x001255d5: cld; jmp dword ptr [ecx]; 
0x0016696a: cld; jmp dword ptr [edx - 0x13]; 
0x001667ba: cld; jmp dword ptr [edx - 0x18]; 
0x00166a3a: cld; jmp dword ptr [edx - 6]; 
0x001667a6: cld; jmp dword ptr [edx]; 
0x0012f9cf: cld; jmp dword ptr [esi + 0xf]; 
0x0016656e: cld; jmp dword ptr [esi - 0x28]; 
0x0007b764: cld; jmp dword ptr [esi - 0x39]; 
0x001678b6: cld; jmp dword ptr [esi - 0x6f]; 
0x0013314c: cld; jmp dword ptr [esi - 0x70]; 
0x00116cc1: cld; jmp dword ptr [esi - 0x7d]; 
0x00165df6: cld; jmp dword ptr [esi]; 
0x00165e0e: cld; jmp eax; 
0x00165dfe: cld; jmp ebx; 
0x0016603a: cld; jmp edx; 
0x00165dee: cld; jmp esi; 
0x00165f06: cld; jmp esp; 
0x0018fa0d: cld; jns 0x18fa05; jmp dword ptr [edx]; 
0x0016edfa: cld; lcall ptr [eax + ebx*4 + 0x6f640002]; cld; jmp dword ptr [eax]; 
0x0016e702: cld; lcall ptr [eax]; cmp al, 3; add byte ptr [edx + eax], ah; cld; call dword ptr [eax + 0x3c]; 
0x001678ae: cld; lcall ptr [edx - 0x70]; cld; call esi; 
0x0016ed62: cld; lcall ptr [esi + 0x65b40002]; cld; jmp dword ptr [eax]; 
0x0011335d: cld; lea eax, dword ptr [eax + ecx + 0x28]; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edi; call dword ptr [edx + 0x18]; 
0x0016e85a: cld; ljmp ptr [eax + 0x44000341]; and bh, ah; call esp; 
0x0016ebf2: cld; ljmp ptr [eax + ecx + 1]; add byte ptr [eax + esi], dl; cld; jmp dword ptr [eax + 9]; 
0x0016eaca: cld; ljmp ptr [eax - 0x58fffd24]; and bh, ah; jmp dword ptr [eax]; 
0x0017ffee: cld; ljmp ptr [ebx + 0x16]; push edi; push cs; or byte ptr [ebx + 0x40e4902], al; ret; 
0x00166566: cld; ljmp ptr [ecx - 0x36000328]; fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x00166836: cld; ljmp ptr [edx + 0x3afffce7]; call 0xe6c7683e; cld; jmp dword ptr [eax - 0x19]; 
0x0016efaa: cld; ljmp ptr [edx + esi*2 - 0x23ebffff]; cld; jmp eax; 
0x0016cd84: cld; mov al, byte ptr [0x72640002]; stc; jmp eax; 
0x00173fc4: cld; mov ch, 0xec; jmp dword ptr [ebx]; 
0x00134e44: cld; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001362d4: cld; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x0013be24: cld; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x00134e95: cld; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00136325: cld; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x0013be75: cld; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x001134e5: cld; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], edi; call dword ptr [eax + 0x18]; 
0x001331a4: cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001362d7: cld; mov eax, edx; pop ebx; ret; 
0x0008e9b6: cld; mov ebp, 0xc03000c; cdq; jmp ecx; 
0x00173d95: cld; mov ebp, esp; jmp dword ptr [edx]; 
0x00103576: cld; mov ebx, dword ptr [ecx]; mov esi, dword ptr [ecx + 4]; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x0003325b: cld; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x001686f4: cld; mov ecx, 0xc2540000; in al, dx; call dword ptr [eax]; 
0x00030d32: cld; mov esp, ebp; pop ebp; ret; 
0x00168354: cld; movsd dword ptr es:[edi], dword ptr [esi]; add byte ptr [eax], al; xor al, 0x73; in al, dx; call dword ptr [eax]; 
0x000725fa: cld; or dword ptr [ebx], edx; add byte ptr [ebx + 0x940684], cl; add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 0x30]; 
0x0017d8fc: cld; out 0, al; add byte ptr [eax], al; or eax, esi; call dword ptr [eax]; 
0x00158846: cld; out 0x95, eax; push es; cld; ret; 
0x00174ba4: cld; outsd dx, dword ptr [esi]; in eax, dx; call dword ptr [eax]; 
0x00132b94: cld; pop ebx; ret; 
0x0007e065: cld; pop edi; ret; 
0x0016c0f4: cld; pop esp; add al, byte ptr [eax]; xor al, 0x4b; clc; call dword ptr [eax]; 
0x0016a38c: cld; push 0xae840001; int1; jmp dword ptr [eax]; 
0x00166fbc: cld; push ds; std; jmp esi; 
0x00166756: cld; push dword ptr [0x75fffcdc]; fdiv st(4), st(0); inc dword ptr [eax - 0x4f000327]; frndint; jmp eax; 
0x0016694e: cld; push dword ptr [eax + 0x40fffce2]; jecxz 0x166953; call eax; 
0x00166b8e: cld; push dword ptr [eax + 0x70fffcfc]; cli; cld; jmp dword ptr [eax]; 
0x0016ea8a: cld; push dword ptr [eax + ecx*8]; add al, byte ptr [eax]; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; call eax; 
0x0016684e: cld; push dword ptr [eax - 0x1a]; cld; call dword ptr [eax]; 
0x00166762: cld; push dword ptr [eax - 0x1f000327]; frndint; call dword ptr [eax]; 
0x001664de: cld; push dword ptr [eax - 0x1f00032a]; salc; cld; call dword ptr [eax]; 
0x00165fee: cld; push dword ptr [eax - 0x1f000330]; sar ah, 1; call dword ptr [eax]; 
0x0016679a: cld; push dword ptr [eax - 0x24]; cld; jmp edx; 
0x0016630e: cld; push dword ptr [eax - 0x2b]; cld; call dword ptr [eax - 0x4f00032b]; aad 0xfc; call eax; 
0x0016608e: cld; push dword ptr [eax - 0x2f]; cld; call dword ptr [eax - 0x4f00032f]; sar esp, 1; call eax; 
0x00166b66: cld; push dword ptr [eax - 0x7f000305]; cld; cld; jmp eax; 
0x00166bda: cld; push dword ptr [eax - 0xa]; cld; jmp dword ptr [esi]; 
0x00166c86: cld; push dword ptr [eax - 2]; cld; jmp dword ptr [eax]; 
0x00166b92: cld; push dword ptr [eax - 6]; cld; jmp dword ptr [eax]; 
0x0016627e: cld; push dword ptr [eax]; aad 0xfc; jmp dword ptr [eax - 0x2b]; 
0x0016626a: cld; push dword ptr [eax]; aam 0xfc; jmp dword ptr [eax - 0x2c]; 
0x00166796: cld; push dword ptr [eax]; fdiv st(4), st(0); push dword ptr [eax - 0x24]; cld; jmp edx; 
0x0016692e: cld; push dword ptr [eax]; fdivp st(4); inc eax; fdivp st(4); call dword ptr [eax - 0x21]; 
0x0016675a: cld; push dword ptr [ebp - 0x24]; cld; inc dword ptr [eax - 0x4f000327]; frndint; jmp eax; 
0x00166b16: cld; push dword ptr [ebx + edi*8]; cld; jmp esp; 
0x001660b2: cld; push dword ptr [ebx - 0x1c00032c]; aam 0xfc; call dword ptr [ebx]; 
0x001660b2: cld; push dword ptr [ebx - 0x1c00032c]; aam 0xfc; call dword ptr [ebx]; aad 0xfc; call dword ptr [ebx - 0x2b]; 
0x001662fe: cld; push dword ptr [ebx - 0x2b]; cld; call dword ptr [ebx - 0x4c00032b]; aad 0xfc; call ebx; 
0x0016607e: cld; push dword ptr [ebx - 0x2f]; cld; call dword ptr [ebx - 0x4c00032f]; sar esp, 1; call ebx; 
0x00165e36: cld; push dword ptr [ebx]; sar esp, 1; jmp dword ptr [ebx - 0x2f]; 
0x00166326: cld; push dword ptr [ebx]; xlatb; cld; jmp dword ptr [ebx - 0x29]; 
0x00166a2e: cld; push dword ptr [edx + 0xfffcf8]; stc; cld; call edx; 
0x0016652e: cld; push dword ptr [edx - 0x28]; cld; call dword ptr [edx - 0x4d000328]; fdivr st(4); call edx; 
0x001667aa: cld; push dword ptr [edx - 0x5d000318]; out 0xfc, al; push eax; out 0xfc, al; call edx; 
0x00165db6: cld; push dword ptr [edx]; into; cld; call dword ptr [edx - 0x32]; 
0x0016e76a: cld; push dword ptr [esi + edi + 0x11f40003]; cld; call esp; 
0x00166c56: cld; push dword ptr [esi + edi*8]; cld; call esp; 
0x001662ee: cld; push dword ptr [esi - 0x2b]; cld; call dword ptr [esi - 0x4900032b]; aad 0xfc; call esi; 
0x0016606e: cld; push dword ptr [esi - 0x2f]; cld; call dword ptr [esi - 0x4900032f]; sar esp, 1; call esi; 
0x001669c6: cld; push dword ptr [esp + ebp*8 - 0x12bb0004]; cld; call dword ptr [ebx + ebp*8 - 4]; call esp; 
0x0016627a: cld; push eax; aam 0xfc; push dword ptr [eax]; aad 0xfc; jmp dword ptr [eax - 0x2b]; 
0x0016e9ca: cld; push eax; cmp eax, 0x22a70002; cld; call dword ptr [eax + 0x47]; 
0x00165fde: cld; push eax; iretd; cld; jmp dword ptr [eax]; 
0x001667b2: cld; push eax; out 0xfc, al; call edx; 
0x001667b2: cld; push eax; out 0xfc, al; call edx; out 0xfc, eax; jmp dword ptr [edx - 0x18]; 
0x00166846: cld; push eax; out 0xfc, eax; inc dword ptr [eax + 0x70fffce8]; out 0xfc, al; call dword ptr [eax]; 
0x00165e46: cld; push ebx; sar esp, 1; jmp dword ptr [ebx]; 
0x001660a2: cld; push ebx; sar esp, cl; jmp dword ptr [ebx]; 
0x00166336: cld; push ebx; xlatb; cld; jmp dword ptr [ebx]; 
0x00184d6a: cld; push ecx; add eax, 0x59000000; push cs; or byte ptr [ebx + 0x40e4902], al; ret; 
0x001844fc: cld; push edx; add dword ptr [eax], eax; sar dl, 1; int1; jmp esi; 
0x00165dae: cld; push edx; int 0xfc; call dword ptr [edx]; 
0x0010f56b: cld; ret; 
0x00168a84: cld; rol dword ptr [eax], 1; add ah, dl; inc eax; out dx, al; call eax; 
0x0018c5fc: cld; rol dword ptr [ecx], cl; add byte ptr [eax - 0x48], dl; cmc; call dword ptr [edx]; 
0x001878e4: cld; sbb dh, bl; call dword ptr [ebx]; 
0x0016b0cc: cld; std; add dword ptr [eax], eax; adc al, 0x19; cmc; call dword ptr [eax]; 
0x001671fc: cld; std; jmp esi; 
0x001591d6: cld; test al, 0x97; xchg eax, esp; ret; 
0x0017a894: cld; test edi, ebp; jmp dword ptr [eax]; 
0x00073528: cli; adc al, byte ptr [eax]; mov dword ptr [ecx + 0x189c], 0; mov dword ptr [ecx + 0x18a0], 0; mov dword ptr [ecx + 0x18a4], 0; ret; 
0x00033637: cli; adc byte ptr [ecx], ch; ret 0xc269; 
0x000a8535: cli; adc ch, byte ptr [ecx]; ret 0x18b; 
0x000a85e9: cli; adc ch, byte ptr [ecx]; ret 0x83b8; 
0x000a859c: cli; adc ch, byte ptr [ecx]; ret 0xc269; 
0x000eddac: cli; adc dword ptr [edi], ecx; dec esi; ret 0x4489; 
0x000632d1: cli; adc eax, dword ptr [eax]; ret 0x13ff; 
0x000a8873: cli; add al, byte ptr [ecx]; ret 0x3c8d; 
0x00169175: cli; add byte ptr [eax], al; or byte ptr [esi], 0xf0; call dword ptr [eax - 6]; 
0x000af6b7: cli; add ch, byte ptr [ecx]; ret 0x448b; 
0x000a76b1: cli; add ch, byte ptr [ecx]; ret 0x48d; 
0x000b194a: cli; add ch, byte ptr [ecx]; ret 0x858b; 
0x000afb9c: cli; add ch, byte ptr [ecx]; ret 0xc8d; 
0x000afebd: cli; add ch, byte ptr [ecx]; ret 0xd089; 
0x0003a0a6: cli; add cl, byte ptr [ecx + 0x31d089c1]; sar byte ptr [ecx], cl; ret 0x820f; 
0x0003d044: cli; add cl, byte ptr [ecx + 0x31d089c1]; sar byte ptr [ecx], cl; ret 0x830f; 
0x00056a59: cli; add cl, byte ptr [ecx - 0x76f7dbac]; xor al, 0x24; call dword ptr [eax + 0x1c]; 
0x0006d932: cli; add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0xc289; 
0x0019c04d: cli; add dword ptr [0xffff0000], eax; add dword ptr [edx], ebx; sbb eax, 0x73000005; ret 0x8d01; 
0x0018ec9d: cli; add dword ptr [eax], eax; nop; and dh, dh; jmp dword ptr [edi]; 
0x0018ecf9: cli; add dword ptr [eax], eax; xchg eax, esp; and esi, esi; jmp edi; 
0x000fc3c1: cli; add dword ptr [ecx], ebx; rol byte ptr [ebx - 0x1f7ce73c], 0xc; pop ebx; ret; 
0x001140ae: cli; add dword ptr [esi + 0x72], esi; or al, 0x31; rol byte ptr [ebx - 0x6bf0fd06], 0xc0; add esp, 0x1c; ret; 
0x000a7f32: cli; add eax, 0x291ff8c1; ret 0x1b8; 
0x000b041f: cli; add eax, 0x291ff8c1; ret 0xd26b; 
0x000a7da7: cli; add ebp, dword ptr [ecx]; ret 0x48d; 
0x000eb902: cli; call 0xeb8d0; mov eax, dword ptr [esi]; mov dword ptr [esp], eax; call edi; 
0x0016d77a: cli; call dword ptr [eax - 0x1c]; 
0x0016d59a: cli; call dword ptr [eax - 0x29]; 
0x0016dc22: cli; call dword ptr [eax - 1]; 
0x0016dbaa: cli; call dword ptr [eax - 4]; 
0x0016d55a: cli; call dword ptr [eax]; 
0x0018b196: cli; call dword ptr [ebp + 2]; 
0x0016da72: cli; call dword ptr [ebp + esi*8 - 0x5b7bfffe]; cli; call eax; 
0x0019b276: cli; call dword ptr [ebx + 1]; 
0x00184d0a: cli; call dword ptr [ecx + 3]; 
0x00184d0a: cli; call dword ptr [ecx + 3]; bound ecx, qword ptr [esi]; or byte ptr [ebx + 0x40e5f02], al; ret; 
0x0015afb0: cli; call dword ptr [ecx - 0x56000a00]; add bl, bh; inc ebx; add dh, bh; jmp edi; 
0x0018c1ea: cli; call dword ptr [edi]; 
0x0016d542: cli; call eax; 
0x0016dd3a: cli; call esp; 
0x00166b75: cli; cld; call dword ptr [eax - 5]; 
0x00166b75: cli; cld; call dword ptr [eax - 5]; cld; call dword ptr [eax]; 
0x00166b81: cli; cld; call eax; 
0x00166a7d: cli; cld; call esp; 
0x00166abd: cli; cld; inc eax; clc; cld; jmp dword ptr [eax - 7]; 
0x00166b95: cli; cld; jmp dword ptr [eax]; 
0x00166b01: cli; cld; jmp esp; 
0x00166b15: cli; cld; push dword ptr [ebx + edi*8]; cld; jmp esp; 
0x00166a2d: cli; cld; push dword ptr [edx + 0xfffcf8]; stc; cld; call edx; 
0x00191bf2: cli; cmc; jmp dword ptr [edx]; 
0x0016d792: cli; dec dword ptr [0x40040002]; cli; jmp dword ptr [eax]; 
0x0016d58a: cli; dec dword ptr [eax - 0x58fffd28]; or edi, edx; jmp dword ptr [eax]; 
0x0006a9c6: cli; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x000d8dd0: cli; dec dword ptr [ecx + 0x788d2434]; add eax, ebp; ret; 
0x0016d9d2: cli; dec dword ptr [edx + esi*8 - 0x6a0bfffe]; cli; jmp esp; 
0x0002bd5a: cli; div byte ptr [edx + ebp*8 - 0x7d]; ret 0x8301; 
0x00177c21: cli; fldz; jmp dword ptr [edx]; 
0x0016dd32: cli; inc dword ptr [eax + 0x14000304]; cmc; cli; call esp; 
0x0016dc52: cli; inc dword ptr [eax]; add byte ptr [ebx], al; add byte ptr [ebp + edx*8 - 6], al; jmp dword ptr [eax]; 
0x000d8740: cli; inc dword ptr [ebp + 0x74c289c0]; ret; 
0x0008398f: cli; inc edi; inc esp; and al, 8; add eax, 0x89000000; ret 0x838d; 
0x00184501: cli; int1; jmp esi; 
0x0016d6aa: cli; jmp dword ptr [eax - 0x20]; 
0x0016daea: cli; jmp dword ptr [eax - 8]; 
0x0016daba: cli; jmp dword ptr [eax - 9]; 
0x0016d592: cli; jmp dword ptr [eax]; 
0x00183176: cli; jmp dword ptr [ebx + 1]; 
0x0018327a: cli; jmp dword ptr [ebx]; 
0x0017801f: cli; jmp dword ptr [edx]; 
0x000838b4: cli; jmp dword ptr [esi - 0x70]; 
0x0016d5b2: cli; jmp eax; 
0x0016d722: cli; jmp esp; 
0x00134b2c: cli; lea eax, dword ptr [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134bbc: cli; lea eax, dword ptr [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134c4c: cli; lea eax, dword ptr [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134cdc: cli; lea eax, dword ptr [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134d6c: cli; lea eax, dword ptr [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134dfc: cli; lea eax, dword ptr [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013461c: cli; lea eax, dword ptr [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001346ac: cli; lea eax, dword ptr [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013473c: cli; lea eax, dword ptr [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001347cc: cli; lea eax, dword ptr [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013485c: cli; lea eax, dword ptr [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001348ec: cli; lea eax, dword ptr [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013497c: cli; lea eax, dword ptr [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134a0c: cli; lea eax, dword ptr [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134a9c: cli; lea eax, dword ptr [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0016dc1a: cli; ljmp ptr [eax]; inc dword ptr [edx]; add byte ptr [ebx + edx*8], dh; cli; call dword ptr [eax - 1]; 
0x0016d86a: cli; ljmp ptr [ebx + ebp*8 + 0x79240002]; cli; call eax; 
0x0013bf44: cli; mov dword ptr [edx - 6], ecx; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x00044117: cli; mov dword ptr [esp + 8], edx; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; mov dword ptr [ebp - 0x57c], edx; call dword ptr [eax + 0x1c]; 
0x000d909c: cli; mov ecx, eax; xchg edi, ebx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000d90c8: cli; mov ecx, eax; xchg edi, ebx; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0017cad9: cli; mov edi, ebp; jmp dword ptr [edx]; 
0x00082b73: cli; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x001331e4: cli; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132bd4: cli; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00134f77: cli; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001363f7: cli; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x0013bf47: cli; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x0002b2c8: cli; or byte ptr [ecx], al; ret 0x48d; 
0x000a76e9: cli; or byte ptr [ecx], ch; ret 0xc889; 
0x00081b9e: cli; or byte ptr [ecx], dl; pop esi; pop edi; ret; 
0x000e997a: cli; or dh, byte ptr [edx - 0x77]; ret 0xb60f; 
0x000e9975: cli; or dword ptr [edi - 0x7d], esi; cli; or dh, byte ptr [edx - 0x77]; ret 0xb60f; 
0x0004b2a4: cli; or dword ptr [edi], ecx; xchg eax, edi; ret 0xe083; 
0x000e29df: cli; or eax, 0xffffffb8; dec dword ptr [edi]; test dword ptr [esi + edi*8 + 0x568bffff], ecx; sbb al, 0xf6; ret 0x7501; 
0x000e1867: cli; or eax, 0xffffffb8; dec dword ptr [edi]; test dword ptr [esi + edi*8 + 0x568bffff], esp; sbb al, 0xf6; ret 0x7501; 
0x000a766e: cli; or ebp, dword ptr [ecx]; ret 0x5589; 
0x0011aac5: cli; or ecx, dword ptr [edi]; xchg byte ptr [0x83fffffe], bl; ret 0x8303; 
0x0017d221: cli; out dx, eax; jmp dword ptr [edi]; 
0x00129e40: cli; pop ds; add esp, 0x18; pop esi; ret; 
0x000eecf1: cli; pop ds; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00032fc7: cli; pop ds; xor eax, edx; sub eax, edx; ret; 
0x00147922: cli; pop edi; ret; 
0x000354e7: cli; pop esi; pop edi; pop ebp; ret; 
0x0016d762: cli; push dword ptr [eax + 0x340002e3]; cmp dl, bh; jmp esp; 
0x0016d5aa: cli; push dword ptr [eax - 0x18fffd29]; or edi, edx; jmp eax; 
0x000716a6: cli; push dword ptr [ebx + edx - 0x77]; ret 0xfac1; 
0x000f200e: cli; push dword ptr [ebx - 0x7d]; ret 0x8901; 
0x0006a5f1: cli; push dword ptr [ecx]; ror byte ptr [ebx - 0x74ebdba4], 0x74; and al, 0x18; add esp, 0x1c; ret; 
0x0016d71a: cli; push dword ptr [edi + ebx*8 + 0x29e50002]; cli; jmp esp; 
0x000711fe: cli; push dword ptr [edi + ecx - 0x77]; ret 0xfac1; 
0x0016d74a: cli; push dword ptr [edx + 0x370b0002]; cli; jmp esp; 
0x001219da: cli; push dword ptr [edx + edx - 0x77]; rol dword ptr [edi + 0x6b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f204b: cli; push dword ptr [esi - 0x7d]; ret 0x6601; 
0x001786c5: cli; salc; out dx, al; jmp dword ptr [edx]; 
0x00138475: cli; sbb bh, bh; inc dword ptr [ecx + 0x2eaa7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000a3dc0: cli; sbb byte ptr [ebx - 0x77e7dbb4], cl; push esp; cmp eax, 0x83fa8900; ret 0x8901; 
0x0016f059: cli; std; call esp; 
0x000d8b79: cli; std; dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x0016e6c1: cli; sti; jmp esp; 
0x00158d2e: cli; xchg dword ptr [esp + eax + 0x6fa9ce9d], esp; ret; 
0x0008b8e7: cmc; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; lcall ptr [edi + 0x5b]; ret; 
0x0016da7d: cmc; add al, byte ptr [eax]; inc esp; movsd dword ptr es:[edi], dword ptr [esi]; cli; call dword ptr [eax]; 
0x00095757: cmc; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000f2f01: cmc; add byte ptr [ebx], cl; add byte ptr [ecx - 0x8fbdb8c], cl; ret 0xff80; 
0x001730bc: cmc; add ch, ah; call dword ptr [eax]; 
0x0017e25b: cmc; add cl, byte ptr [edx]; ret; 
0x000c6f0e: cmc; add dword ptr [eax], eax; add byte ptr [ebx - 0x76d3db94], cl; imul ebp, dword ptr [eax], 0xfffe8ae9; jmp dword ptr [esi - 0x70]; 
0x0016b162: cmc; call dword ptr [eax + 1]; 
0x0016b0d2: cmc; call dword ptr [eax]; 
0x0018a8c6: cmc; call dword ptr [ebp]; 
0x00140704: cmc; call dword ptr [ebx - 0x18]; 
0x0018c3ae: cmc; call dword ptr [ebx]; 
0x0018aa56: cmc; call dword ptr [ecx]; 
0x000cb4be: cmc; call dword ptr [edi + 0x56]; 
0x0018d522: cmc; call dword ptr [edi]; 
0x0018d6f6: cmc; call dword ptr [edx]; 
0x0018bdee: cmc; call dword ptr [esi]; 
0x0016af92: cmc; call eax; 
0x0016b0fa: cmc; call eax; inc byte ptr [ecx]; add byte ptr [edi + ebx], dl; cmc; jmp dword ptr [eax]; 
0x0018de5a: cmc; call ecx; 
0x0018cf22: cmc; call edi; 
0x0016b03a: cmc; call esp; 
0x00166bd5: cmc; cld; jmp eax; 
0x00166bd9: cmc; cld; push dword ptr [eax - 0xa]; cld; jmp dword ptr [esi]; 
0x0016dd39: cmc; cli; call esp; 
0x0012b6a0: cmc; dec dword ptr [ebx - 0x76bfdbb4]; inc ecx; adc al, 0xe9; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x000c3851: cmc; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x001664dc: cmc; frndint; push dword ptr [eax - 0x1f00032a]; salc; cld; call dword ptr [eax]; 
0x0018a321: cmc; hlt; call dword ptr [eax]; 
0x00125298: cmc; inc dword ptr [ebp - 0x3f6bf040]; movzx eax, al; add esp, 0x18; pop esi; ret; 
0x00165da0: cmc; int 0xfc; call dword ptr [0x35fffcce]; into; cld; call dword ptr [ebp - 0x32]; 
0x00184435: cmc; int1; call dword ptr [ebx]; 
0x0016b04a: cmc; jmp dword ptr [eax - 4]; 
0x0016b08a: cmc; jmp dword ptr [eax]; 
0x0018b00e: cmc; jmp dword ptr [ebx]; 
0x0018d186: cmc; jmp dword ptr [ecx]; 
0x0018c732: cmc; jmp dword ptr [edi + 1]; 
0x0018b7ba: cmc; jmp dword ptr [edi + 3]; 
0x0018dc5a: cmc; jmp dword ptr [edi]; 
0x0018ca1f: cmc; jmp dword ptr [edx]; 
0x0018b83e: cmc; jmp dword ptr [esi]; 
0x0016afa2: cmc; jmp eax; 
0x0018aea6: cmc; jmp ecx; 
0x0018bad6: cmc; jmp edi; 
0x0018d90a: cmc; jmp edx; 
0x0018da5a: cmc; jmp esi; 
0x0016b1ca: cmc; jmp esp; 
0x0016b31a: cmc; lcall ptr [esp + ecx - 0x81bfffe]; cmc; call eax; 
0x0016b15a: cmc; ljmp ptr [ecx + eax]; add al, byte ptr [eax]; aaa; cmc; call dword ptr [eax + 1]; 
0x00132bf1: cmc; mov dword ptr [edx - 7], eax; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00101942: cmc; mov eax, dword ptr [esp + 0x10]; pop esi; pop edi; pop ebp; ret; 
0x0008405a: cmc; mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x00082c1e: cmc; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x001336a7: cmc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00133047: cmc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0016a960: cmc; out 0xf3, al; jmp dword ptr [eax - 0x33]; 
0x0017b4d9: cmc; out dx, eax; call dword ptr [eax]; 
0x0015891f: cmc; pop ebx; and dword ptr [esi + ebp*2 - 0x7a], edi; lahf; ret 0x871e; 
0x001478e2: cmc; pop edi; ret; 
0x000833fa: cmc; pop esi; ret; 
0x00184915: cmc; popfd; int1; jmp dword ptr [edx]; 
0x0016b032: cmc; push dword ptr [ebx + edi*8 + 0xfb40001]; cmc; call esp; 
0x0016b02a: cmc; push dword ptr [ebx + edi*8 + 1]; add byte ptr [edi + ecx - 0xb], dh; push dword ptr [ebx + edi*8 + 0xfb40001]; cmc; call esp; 
0x0002aad7: cmc; ret; 
0x001468e7: cmc; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0016ce30: cmc; test ecx, edi; jmp dword ptr [eax]; 
0x00169e98: cmc; xor ecx, esi; push dword ptr [ecx + eax*2 + 0x32010001]; int1; jmp esp; 
0x000e0df6: cmova eax, edx; add esp, 0x1c; ret; 
0x00095d4a: cmova eax, esi; sub eax, edi; pop esi; pop edi; ret; 
0x000e89c0: cmova esi, dword ptr [esp + 0x2c]; xchg edi, ebx; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x0006c81d: cmovae eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x00073c1a: cmovae eax, dword ptr [edx + 0x14]; sub eax, dword ptr [edx + 0xc]; ret; 
0x0007c841: cmovb eax, ecx; ret; 
0x000f0d18: cmovb eax, edx; pop esi; ret; 
0x000f1275: cmovbe eax, dword ptr [esp + 8]; add esp, 0x1c; ret; 
0x0007fd42: cmovbe eax, edx; add esp, 0x18; pop esi; ret; 
0x00127a0f: cmovbe eax, edx; add esp, 0x2c; ret; 
0x001285c5: cmovbe eax, edx; add esp, 0x30; pop esi; pop edi; pop ebp; ret; 
0x0014572a: cmovbe eax, edx; pop esi; pop ebp; pop ebx; ret; 
0x000c5d29: cmovbe eax, esi; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x0011c4cc: cmove eax, dword ptr [ebx - 0x5c]; add esp, 8; pop ebx; ret; 
0x00098422: cmove eax, ecx; ret; 
0x0012bed1: cmove eax, edi; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0007e2ea: cmove eax, edx; add eax, 1; ret; 
0x0007ad87: cmove eax, edx; add esp, 0x1c; ret; 
0x0009682c: cmove eax, edx; add esp, 8; pop ebx; ret; 
0x000fb849: cmove eax, edx; cmp eax, dword ptr [esp + 4]; setae al; movzx eax, al; ret; 
0x00041d57: cmove eax, edx; mov dword ptr [eax], 0x7665642f; mov dword ptr [eax + 4], 0x7974742f; mov byte ptr [eax + 8], 0; ret; 
0x000268c7: cmove eax, edx; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000ed3fb: cmove eax, edx; ret; 
0x000d94aa: cmove eax, esi; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000ca0e6: cmove eax, esi; pop esi; pop edi; ret; 
0x0012476c: cmove edx, esi; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; mov eax, edx; ret; 
0x0007e32d: cmove esi, eax; add esi, 0x21; mov eax, esi; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x0007e34c: cmove esi, eax; add esi, 1; mov eax, esi; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x000a7e5f: cmovge eax, edx; add esp, 0xc; pop esi; pop edi; pop ebp; ret; 
0x000a7e80: cmovle eax, edx; add esp, 0xc; pop esi; pop edi; pop ebp; ret; 
0x000e6888: cmovne eax, ecx; add esp, 0x2c; ret; 
0x00083af4: cmovne eax, ecx; add esp, 0xc; ret; 
0x000ca433: cmovne eax, edx; add esp, 0x14; pop esi; pop edi; pop ebp; ret; 
0x0007fd52: cmovne eax, edx; add esp, 0x18; pop esi; ret; 
0x0012c19e: cmovne eax, edx; add esp, 0x1c; ret; 
0x0012edcb: cmovne eax, edx; add esp, 0x28; pop ebx; ret; 
0x000b9945: cmovne eax, edx; ret; 
0x000e68dc: cmovne eax, esi; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0007a47e: cmovne eax, esi; pop esi; ret; 
0x000b7c09: cmovne ecx, eax; mov eax, ecx; ret; 
0x000fc8fe: cmovne edx, dword ptr [esp + 0x1c]; add esp, 0x2c; mov eax, edx; ret; 
0x0011b77a: cmovne edx, eax; add esp, 0x84; mov eax, edx; pop ebx; pop edi; ret; 
0x0002dfcb: cmovne edx, eax; xchg edi, ebx; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x0007d93e: cmovne edx, ecx; mov dword ptr [ebx + 0x1a30], edx; add esp, 0x100; pop ebx; ret; 
0x0007da25: cmovne edx, ecx; mov ecx, dword ptr [esp + 0x10c]; mov dword ptr [ecx], edx; add esp, 0x100; ret; 
0x000e8645: cmovne esi, eax; mov eax, esi; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0012ba96: cmovne esi, eax; mov eax, esi; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0008046d: cmovne esi, edx; add esp, 0x18; mov eax, esi; pop esi; ret; 
0x000f7108: cmovns eax, dword ptr [esi + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0001cbdf: cmovns eax, ecx; ret; 
0x000c55dd: cmovns ecx, esi; xchg edi, ebx; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00040d2d: cmovs eax, edx; add esp, 0x1c; ret; 
0x00040c02: cmovs eax, edx; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00166b6c: cmp ah, 0xfc; jmp eax; 
0x0012f626: cmp ah, byte ptr [ebx - 0x1f]; or al, 0xf; xchg eax, edx; ret 0xb60f; 
0x00131639: cmp ah, byte ptr [ebx - 0x27]; or al, 0xf; xchg eax, edx; ret 0xb60f; 
0x0012f580: cmp ah, byte ptr [ebx - 0x2f]; or al, 0xf; xchg eax, edx; ret 0xcf89; 
0x0012fefd: cmp ah, byte ptr [ebx - 0x36]; or al, 0x89; int 0xf; cwde; ror dword ptr [edi], -0x6e; ret 0xb60f; 
0x0012fe1a: cmp ah, byte ptr [ebx - 0x38]; or al, 0xf; xchg eax, edx; ret 0xb60f; 
0x0012fd54: cmp ah, byte ptr [ebx - 7]; or al, 0xf; xchg eax, edx; ret 0xb60f; 
0x00186645: cmp ah, byte ptr [edi - 0xe]; jmp dword ptr [edx]; 
0x000b993e: cmp ah, byte ptr [esi]; mov edx, 0xffffffff; cmovne eax, edx; ret; 
0x0017cab8: cmp ah, dh; out dx, eax; call dword ptr [eax]; 
0x00190ff0: cmp al, 0; add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e7a02], al; ret; 
0x0018e950: cmp al, 0; add byte ptr [eax], al; add byte ptr [edx + 9], al; add eax, dword ptr [edx]; push edi; ret; 
0x00190ee4: cmp al, 0; add byte ptr [eax], al; call 0x4191109; cdq; idiv bh; ret; 
0x0017dee4: cmp al, 0; add byte ptr [eax], al; call 0x8417dfd9; sbb al, 0xf0; jmp dword ptr [edx]; 
0x000de567: cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000de567: cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x001894f4: cmp al, 0; add byte ptr [eax], al; clc; mov byte ptr [0x5e840001], al; hlt; call dword ptr [edx]; 
0x00184538: cmp al, 0; add byte ptr [eax], al; cmp al, 0x53; add dword ptr [eax], eax; cmp bh, 0xf1; call edi; 
0x0018fa44: cmp al, 0; add byte ptr [eax], al; dec eax; or byte ptr [edx], al; add byte ptr [ebp + eax*2 - 0xa], dh; call dword ptr [ebx + 1]; 
0x001896d8: cmp al, 0; add byte ptr [eax], al; fsub qword ptr [ecx + eax - 0xb932000]; jmp dword ptr [edi + 2]; 
0x00188c88: cmp al, 0; add byte ptr [eax], al; mov word ptr [edx + 0x1d100001], ds; hlt; jmp dword ptr [ecx + 1]; 
0x0019b08c: cmp al, 0; add byte ptr [eax], al; nop; mov esi, 0xb60c0002; clc; jmp edx; 
0x00191a64: cmp al, 0; add byte ptr [eax], al; push 0x74000228; mov bh, 0xf6; jmp dword ptr [edi]; 
0x0018da50: cmp al, 0; add byte ptr [eax], al; push esp; call 0xf8b0da5b; cmc; jmp esi; 
0x00178b14: cmp al, 0; add byte ptr [eax], al; sbb byte ptr [ecx + 0x31c40000], bl; out dx, eax; call eax; 
0x00054b07: cmp al, 0x10; add byte ptr [eax], al; ret; 
0x0006f3e4: cmp al, 0x13; add byte ptr [ebx + 0x940684], cl; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x48]; 
0x00170f3c: cmp al, 0x1d; add byte ptr [eax], al; add byte ptr [eax - 0x15], ch; jmp dword ptr [ebx]; 
0x0017dc14: cmp al, 0x1d; sti; call dword ptr [eax + 8]; 
0x0009866a: cmp al, 0x24; call 0x126c80; mov dword ptr [esp + 4], esi; mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; call edi; 
0x0001aff1: cmp al, 0x24; call 0x126c80; mov dword ptr [esp], esi; call edi; 
0x00112b79: cmp al, 0x24; call 0xdeb70; mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x001118c8: cmp al, 0x24; call dword ptr [eax + 0x10]; 
0x0011183a: cmp al, 0x24; call dword ptr [eax + 0x14]; 
0x0011346c: cmp al, 0x24; call dword ptr [eax + 0x18]; 
0x0006f9ef: cmp al, 0x24; call dword ptr [eax + 0x20]; 
0x001185c8: cmp al, 0x24; call dword ptr [eax + 0x24]; 
0x000724ac: cmp al, 0x24; call dword ptr [eax + 0xc]; 
0x00111878: cmp al, 0x24; call dword ptr [eax + 4]; 
0x00112111: cmp al, 0x24; call dword ptr [eax]; 
0x0011226a: cmp al, 0x24; call dword ptr [eax]; mov eax, dword ptr [edi + 4]; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x001127b4: cmp al, 0x24; call dword ptr [eax]; mov edx, dword ptr [edi + 4]; mov dword ptr [esp], edi; mov dword ptr [esp + 0x2c], eax; call dword ptr [edx + 0x10]; 
0x0006cf55: cmp al, 0x24; call dword ptr [edi + 0xc]; 
0x00113367: cmp al, 0x24; call dword ptr [edx + 0x18]; 
0x00113d14: cmp al, 0x24; call dword ptr [esi]; 
0x00111aa8: cmp al, 0x24; call eax; 
0x00098f6d: cmp al, 0x24; call esi; 
0x0007b83f: cmp al, 0x24; mov dword ptr [esp + 0x18], edx; mov dword ptr [esp + 8], esi; mov dword ptr [esp + 4], ecx; call eax; 
0x00118cd1: cmp al, 0x24; mov dword ptr [esp + 0x28], eax; mov eax, dword ptr [esp + 0x44]; call dword ptr [eax + 0x14]; 
0x001127bc: cmp al, 0x24; mov dword ptr [esp + 0x2c], eax; call dword ptr [edx + 0x10]; 
0x00112fcc: cmp al, 0x24; mov dword ptr [esp + 4], eax; call dword ptr [esi + 0x14]; 
0x0011258d: cmp al, 0x24; mov dword ptr [esp + 4], eax; call dword ptr [esi + 0xc]; 
0x0006d0b3: cmp al, 0x24; mov dword ptr [esp + 4], eax; mov dword ptr [esp + 8], edx; call dword ptr [edi + 0xc]; 
0x0011625e: cmp al, 0x24; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x0006cb87: cmp al, 0x24; mov dword ptr [esp + 8], edx; call dword ptr [edi + 0xc]; 
0x000317d1: cmp al, 0x24; mov dword ptr [esp + 8], edx; call esi; 
0x00079859: cmp al, 0x24; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x18]; mov dword ptr [esp + 4], edx; call eax; 
0x00111850: cmp al, 0x24; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x000283df: cmp al, 0x24; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00032ae0: cmp al, 0x24; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp + 4], edx; call eax; 
0x00120677: cmp al, 0x29; ret 0x4c89; 
0x00030591: cmp al, 0x29; ret 0x5489; 
0x001670f0: cmp al, 0x2c; std; call dword ptr [eax + 0x2c]; 
0x001671f4: cmp al, 0x2e; std; lcall ptr [esi + ebp + 0x2efcfffd]; std; jmp esi; 
0x000230a4: cmp al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0014adfb: cmp al, 0x39; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000a71e2: cmp al, 0x39; dec edi; cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x00178df4: cmp al, 0x3a; out dx, eax; jmp dword ptr [esi + 2]; 
0x001672b8: cmp al, 0x3b; std; dec dword ptr [ebx + edi + 0x3a76fffd]; std; jmp esi; 
0x0016e804: cmp al, 0x40; add eax, dword ptr [eax]; push esp; push ds; cld; call dword ptr [eax + 0x40]; 
0x0018343c: cmp al, 0x42; add dword ptr [eax], eax; push eax; cmp esi, ecx; jmp edx; 
0x0016bc1c: cmp al, 0x44; add al, byte ptr [eax]; hlt; out 0xf7, eax; jmp dword ptr [eax + 0x44]; 
0x0018453c: cmp al, 0x53; add dword ptr [eax], eax; cmp bh, 0xf1; call edi; 
0x0009a3ff: cmp al, 0x5b; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0009a03c: cmp al, 0x5b; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00023e02: cmp al, 0x5b; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x0006627e: cmp al, 0x5b; pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x0001ace8: cmp al, 0x5b; pop esi; pop edi; pop ebp; ret 0xc; 
0x000d06c4: cmp al, 0x5b; pop esi; pop edi; pop ebp; ret 4; 
0x00024e08: cmp al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x001676f8: cmp al, 0x5d; std; dec dword ptr [ebp + ebx*2 + 0x5c86fffd]; std; jmp esi; 
0x0017b439: cmp al, 0x6e; out dx, eax; jmp dword ptr [edx]; 
0x000cd6be: cmp al, 0x73; sbb byte ptr [ecx], al; sar byte ptr [edi + 4], 1; ret 0xc083; 
0x000a71e5: cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x00186a3c: cmp al, 0x78; add dword ptr [eax], eax; sal dl, 0xf2; call ecx; 
0x0016c814: cmp al, 0x82; add al, byte ptr [eax]; xchg eax, esp; int 0xf8; jmp dword ptr [eax - 0x7e]; 
0x000eddaa: cmp al, 0x83; cli; adc dword ptr [edi], ecx; dec esi; ret 0x4489; 
0x000c2719: cmp al, 0x83; ljmp 0x8964:0x24548902; ret 0xfac1; 
0x000d147f: cmp al, 0x83; ret 0x3b01; 
0x001110d4: cmp al, 0x83; ret 0x8b28; 
0x00127c76: cmp al, 0x85; ret 0x1574; 
0x00023d52: cmp al, 0x89; call 0x5d619bb4; ret; 
0x0006607a: cmp al, 0x89; call 0x5d65bedc; ret; 
0x000b7748: cmp al, 0x89; call 0x5d6ad5aa; ret; 
0x000f4c15: cmp al, 0x89; call 0x5d6eaa77; ret; 
0x0006cf53: cmp al, 0x89; cmp al, 0x24; call dword ptr [edi + 0xc]; 
0x00079857: cmp al, 0x89; cmp al, 0x24; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x18]; mov dword ptr [esp + 4], edx; call eax; 
0x000b518d: cmp al, 0x89; push esp; and al, 4; mov dword ptr [esp], eax; call edi; 
0x0011a74f: cmp al, 0x89; push esp; and al, 4; mov dword ptr [esp], ecx; call dword ptr [eax + 4]; 
0x0011a72d: cmp al, 0x89; push esp; and al, 4; mov edx, dword ptr [ebp - 0xbc]; mov dword ptr [esp], edx; call dword ptr [eax + 0x14]; 
0x0007a101: cmp al, 0x89; push esp; and al, 4; mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp], edx; call eax; 
0x0002aee3: cmp al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000962f8: cmp al, 0x89; ret 0x7489; 
0x000c26ea: cmp al, 0x89; ret 0xfac1; 
0x0011aeb9: cmp al, 0x89; sub al, 0x24; call dword ptr [eax + 0x10]; 
0x00113859: cmp al, 0x89; sub al, 0x24; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x18]; 
0x00078f05: cmp al, 0x89; sub al, 0x24; mov dword ptr [esp + 4], edx; call eax; 
0x00079dee: cmp al, 0x89; sub al, 0x24; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x14]; mov dword ptr [esp + 4], edx; call eax; 
0x00079b56: cmp al, 0x89; sub al, 0x24; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x40]; mov dword ptr [esp + 4], edx; call eax; 
0x0007952d: cmp al, 0x89; xor al, 0x24; mov dword ptr [esp + 4], ebp; mov dword ptr [esp + 8], edx; call eax; 
0x000271ea: cmp al, 0x8b; add al, 0x90; ret; 
0x00116491: cmp al, 0x8b; add cl, byte ptr [ebx + 0x6c892050]; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x0003f8d9: cmp al, 0x8b; inc eax; inc eax; ret; 
0x000de647: cmp al, 0x8b; sbb al, 0x24; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000b9d64: cmp al, 0x91; push cs; add byte ptr [ecx - 0x4c7bd428], cl; sub byte ptr [ebp - 0xf], 0xff; jmp eax; 
0x0009154a: cmp al, 0x93; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0019ad04: cmp al, 0xa5; clc; jmp dword ptr [edi]; 
0x00199d3c: cmp al, 0xab; add al, byte ptr [eax]; and byte ptr [esi - 8], bl; jmp dword ptr [ebx]; 
0x0017c374: cmp al, 0xb2; out dx, eax; jmp dword ptr [edi]; 
0x00168584: cmp al, 0xb3; add byte ptr [eax], al; in al, 0xb2; in al, dx; jmp dword ptr [eax - 0x4d]; 
0x0016a604: cmp al, 0xb4; add dword ptr [eax], eax; in al, 0xf2; jmp esp; 
0x000ef318: cmp al, 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0017c464: cmp al, 0xba; out dx, eax; jmp dword ptr [ebx]; 
0x0017ad3c: cmp al, 0xbb; add byte ptr [eax], al; rol byte ptr [edi], 1; sti; jmp edx; 
0x0007c063: cmp al, 0xc3; lea esi, dword ptr [esi]; mov edx, dword ptr [ebx - 0x78]; mov dword ptr [esp + 0x1c], eax; call dword ptr [edx]; 
0x0006d60e: cmp al, 0xc3; mov ebp, dword ptr [esi + 0x54]; mov dword ptr [esp], ebp; call dword ptr [ebp + 0x10]; 
0x00055247: cmp al, 0xc; ret 0x4489; 
0x0018d054: cmp al, 0xd4; cmc; jmp dword ptr [eax]; 
0x00168e20: cmp al, 0xdb; out dx, eax; push dword ptr [eax + 0x480000e6]; fucomi st(7); jmp eax; 
0x0016d6a4: cmp al, 0xe0; add al, byte ptr [eax]; add al, 0x1e; cli; jmp dword ptr [eax - 0x20]; 
0x0016ac34: cmp al, 0xe1; add dword ptr [eax], eax; xor al, 0xbd; hlt; jmp dword ptr [eax - 0x1f]; 
0x0016acbc: cmp al, 0xe4; add dword ptr [eax], eax; aam 0xc2; hlt; call dword ptr [eax - 0x1c]; 
0x000e7458: cmp al, 0xe8; adc eax, 0x81000429; ret; 
0x0006c358: cmp al, 0xe8; adc eax, 0x81000bda; ret; 
0x0006e5ae: cmp al, 0xe8; mov edi, 0x81000bb7; ret; 
0x00064bae: cmp al, 0xe8; mov edi, 0x81000c51; ret; 
0x000e61b3: cmp al, 0xe8; mov edx, 0x8100043b; ret; 
0x00077360: cmp al, 0xe8; or eax, 0x81000b2a; ret; 
0x00129bab: cmp al, 0xe8; ret 1; 
0x00113eaa: cmp al, 0xe8; ret; 
0x0015878f: cmp al, 0xe; push esp; jmp dword ptr [ebx - 0x40]; 
0x00169459: cmp al, 0xf0; jmp dword ptr [eax]; 
0x00183174: cmp al, 0xf2; cli; jmp dword ptr [ebx + 1]; 
0x0018ad59: cmp al, 0xf5; jmp dword ptr [edx]; 
0x0016af2c: cmp al, 0xf6; add dword ptr [eax], eax; mov ch, 0xf6; hlt; call esp; 
0x0016b441: cmp al, 0xf6; call dword ptr [eax + 0x14]; 
0x00194f42: cmp al, 0xf6; jmp dword ptr [edx]; 
0x0006b692: cmp al, 0xf7; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0016cb21: cmp al, 0xf9; call esp; 
0x000c25d8: cmp al, 0xf; test bl, bl; add al, 0; add byte ptr [ecx], bh; ret 0x860f; 
0x00166ad0: cmp al, 0xfc; call dword ptr [eax]; 
0x00167451: cmp al, 0xfd; call dword ptr [eax + 0x3c]; 
0x00167441: cmp al, 0xfd; call dword ptr [esi + 0x3c]; 
0x001673d5: cmp al, 0xfd; call eax; 
0x001673d5: cmp al, 0xfd; call eax; cmp al, 0xfd; jmp dword ptr [eax]; 
0x001673c5: cmp al, 0xfd; call esi; 
0x001673c5: cmp al, 0xfd; call esi; cmp al, 0xfd; jmp dword ptr [esi]; 
0x00167419: cmp al, 0xfd; dec dword ptr [eax]; cmp eax, 0x3c12fffd; std; jmp dword ptr [edx + 0x3c]; 
0x001673d1: cmp al, 0xfd; inc dword ptr [eax - 0x2f0002c4]; cmp al, 0xfd; jmp dword ptr [eax]; 
0x0016744d: cmp al, 0xfd; inc dword ptr [eax]; cmp al, 0xfd; call dword ptr [eax + 0x3c]; 
0x001673c1: cmp al, 0xfd; inc dword ptr [esi - 0x290002c4]; cmp al, 0xfd; jmp dword ptr [esi]; 
0x0016743d: cmp al, 0xfd; inc dword ptr [esi]; cmp al, 0xfd; call dword ptr [esi + 0x3c]; 
0x001673d9: cmp al, 0xfd; jmp dword ptr [eax]; 
0x00167421: cmp al, 0xfd; jmp dword ptr [edx + 0x3c]; 
0x001673c9: cmp al, 0xfd; jmp dword ptr [esi]; 
0x001673a5: cmp al, 0xfd; jmp edx; 
0x00167435: cmp al, 0xfd; ljmp ptr [esp + edi + 0x3cfcfffd]; std; inc dword ptr [esi]; cmp al, 0xfd; call dword ptr [esi + 0x3c]; 
0x00167449: cmp al, 0xfd; push esi; cmp al, 0xfd; inc dword ptr [eax]; cmp al, 0xfd; call dword ptr [eax + 0x3c]; 
0x000efd2d: cmp al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002dddb: cmp al, 1; add byte ptr [eax], al; ret; 
0x00173ba2: cmp al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00114850: cmp al, 1; ret 0x4689; 
0x00076e13: cmp al, 1; ret 0x880f; 
0x0016e705: cmp al, 3; add byte ptr [edx + eax], ah; cld; call dword ptr [eax + 0x3c]; 
0x000547eb: cmp al, 4; add byte ptr [eax], al; ret; 
0x00198314: cmp al, 4; clc; jmp dword ptr [esi + 2]; 
0x0006b682: cmp al, 8; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00172cf1: cmp al, byte ptr [eax]; add byte ptr [ebp + edi*8 - 0x15], bl; jmp dword ptr [ebx]; 
0x00107d69: cmp al, byte ptr [eax]; add byte ptr [ebx - 0x71f0ff08], al; ret; 
0x000d958c: cmp al, byte ptr [eax]; add byte ptr [edi], cl; test dword ptr [edi + 3], ebx; add byte ptr [eax], al; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax]; 
0x001249d5: cmp al, byte ptr [eax]; add byte ptr [edi], cl; test dword ptr [esi + 1], ebx; add byte ptr [eax], al; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax]; 
0x00124b05: cmp al, byte ptr [eax]; add byte ptr [edi], cl; test dword ptr [esi - 0x75000000], ecx; and eax, 0xe; add byte ptr [eax], al; call dword ptr [eax + 0x14]; 
0x001730b9: cmp al, byte ptr [eax]; add ch, dh; add ch, ah; call dword ptr [eax]; 
0x001730e9: cmp al, byte ptr [eax]; add ch, dl; add ch, ah; call dword ptr [eax]; 
0x0016e7cd: cmp al, byte ptr [ebx]; add ah, al; adc al, 0xfc; jmp dword ptr [eax + 0x3f]; 
0x0016e6d5: cmp al, byte ptr [ebx]; add byte ptr [ebx + edi*8], ah; sti; call dword ptr [eax]; 
0x000e4f1d: cmp al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00182c01: cmp al, byte ptr [ecx]; add byte ptr [esp + ebx*2], ch; cld; call dword ptr [ebx]; 
0x001989e2: cmp al, byte ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x000b3915: cmp al, byte ptr [edi + 0x6b8cb]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000dd672: cmp al, ch; cwde; ret; 
0x000cf257: cmp al, ch; ret; 
0x0018a258: cmp al, dh; hlt; call dword ptr [ebx]; 
0x00095565: cmp al, dh; pop edi; ret; 
0x00176649: cmp al, dl; out dx, al; jmp dword ptr [edx]; 
0x000d8a1c: cmp bh, 0x74; or bl, dh; ret; 
0x00184540: cmp bh, 0xf1; call edi; 
0x0002d7b6: cmp bh, 0xff; inc eax; shr eax, 0x1f; ret; 
0x000a7547: cmp bh, byte ptr [ecx]; cmp dword ptr [ebp + ecx + 0xf], esi; lahf; ror byte ptr [edi], 0xb6; ror byte ptr [ebp + 0x5eff0044], 0x5f; ret; 
0x001672b1: cmp bh, ch; call dword ptr [eax + 0x3cfffd3a]; cmp edi, ebp; dec dword ptr [ebx + edi + 0x3a76fffd]; std; jmp esi; 
0x00167325: cmp bh, ch; call dword ptr [edx]; 
0x00167325: cmp bh, ch; call dword ptr [edx]; cmp edi, ebp; jmp dword ptr [edx + 0x3b]; 
0x001672f1: cmp bh, ch; call esp; 
0x00167355: cmp bh, ch; inc dword ptr [eax]; cmp edi, ebp; call dword ptr [eax + 0x3b]; 
0x00167345: cmp bh, ch; inc dword ptr [esi]; cmp edi, ebp; call dword ptr [esi + 0x3b]; 
0x00167321: cmp bh, ch; inc edx; cmp bh, ch; call dword ptr [edx]; 
0x00167321: cmp bh, ch; inc edx; cmp bh, ch; call dword ptr [edx]; cmp edi, ebp; jmp dword ptr [edx + 0x3b]; 
0x001672d1: cmp bh, ch; jmp eax; 
0x001672c1: cmp bh, ch; jmp esi; 
0x00167315: cmp bh, ch; lcall ptr [eax]; cmp edi, ebp; ljmp ptr [eax + 0x3b]; std; call dword ptr [edx + 0x3a]; 
0x00167351: cmp bh, ch; push dword ptr [eax + 0xfffd3a]; cmp edi, ebp; call dword ptr [eax + 0x3b]; 
0x00167341: cmp bh, ch; push dword ptr [esi + 0x6fffd3a]; cmp edi, ebp; call dword ptr [esi + 0x3b]; 
0x001672c5: cmp bh, ch; push dword ptr [esi]; cmp edi, ebp; inc dword ptr [esi + 0x70fffd3b]; cmp bh, ch; jmp eax; 
0x0016dab4: cmp bh, dh; add al, byte ptr [eax]; in al, 0xab; cli; jmp dword ptr [eax - 9]; 
0x0016ed34: cmp bh, dh; add dword ptr [eax], eax; movsb byte ptr es:[edi], byte ptr [esi]; dec eax; cld; jmp dword ptr [eax + 3]; 
0x00166abc: cmp bh, dl; cld; inc eax; clc; cld; jmp dword ptr [eax - 7]; 
0x000426a6: cmp bl, 0xff; dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x0016d2dc: cmp bl, al; add al, byte ptr [eax]; aad 0xf9; dec dword ptr [esp + eax*8 + 2]; add byte ptr [ebp + edx*8 - 7], dh; jmp dword ptr [eax - 0x3c]; 
0x00129b3d: cmp bl, byte ptr [esi + 0x5f]; ret; 
0x0018cf71: cmp bl, byte ptr [esi]; cmc; jmp dword ptr [edx]; 
0x0017064d: cmp bl, ch; jmp dword ptr [edx]; 
0x000627a5: cmp bl, ch; ret; 
0x0003877a: cmp byte ptr [0x83d9fffc], ch; xor al, 0x2d; cld; jmp dword ptr [ebp - 0x39]; 
0x000e5e0c: cmp byte ptr [0xffffeff0], ah; or eax, edx; mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x000e5328: cmp byte ptr [eax + eax], al; add byte ptr [ecx], cl; ret 0x850f; 
0x00066ed8: cmp byte ptr [eax - 0x77000000], 0x7c; and al, 8; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; call dword ptr [eax + 0x2c]; 
0x001991b8: cmp byte ptr [eax - 8], al; call dword ptr [ecx]; 
0x000b80b4: cmp byte ptr [eax - 9], ah; jmp dword ptr [ebp - 0x77]; 
0x0010fc1c: cmp byte ptr [eax*4 - 0x7cb98b2e], cl; ror byte ptr [esi], 0x39; ret 0x2c72; 
0x0008bc82: cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x0008b513: cmp byte ptr [eax], 1; sbb eax, -1; pop edi; pop ebx; ret; 
0x00095595: cmp byte ptr [eax], ah; pop edi; ret; 
0x00188bb4: cmp byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x44000199; sbb al, 0xf4; jmp dword ptr [ebp]; 
0x001745b4: cmp byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xb4000053; xlatb; in al, dx; jmp dword ptr [edx]; 
0x0018b450: cmp byte ptr [eax], al; add byte ptr [eax], al; push esp; ret 1; 
0x000fc5ae: cmp byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x000fc439: cmp byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xe075; 
0x00130007: cmp byte ptr [eax], al; ret 0xf66; 
0x00198908: cmp byte ptr [eax], ch; clc; call dword ptr [ebx]; 
0x0001f5eb: cmp byte ptr [eax], cl; add ch, cl; ret 0xfffc; 
0x00054b01: cmp byte ptr [eax], dl; add byte ptr [eax], al; add esp, 0x103c; ret; 
0x00095585: cmp byte ptr [eax], dl; pop edi; ret; 
0x000a71da: cmp byte ptr [ebp + 0x13], dh; pop edi; pop esi; ret; 
0x00017f22: cmp byte ptr [ebp + 0xf], bl; xchg eax, esp; ret 0x348d; 
0x00114d15: cmp byte ptr [ebp - 0x42b2875], cl; jmp dword ptr [ebp - 0x75]; 
0x00114bed: cmp byte ptr [ebp - 0x42b3575], cl; jmp dword ptr [ebp - 0x75]; 
0x00068128: cmp byte ptr [ebp - 0xcfc8740], al; ret; 
0x0003f8d6: cmp byte ptr [ebx + 0x408b3c48], cl; inc eax; ret; 
0x00119be7: cmp byte ptr [ebx + 0x408b5046], cl; sbb al, 0x85; sal byte ptr [eax + ecx - 0x73], 0x56; dec esp; mov dword ptr [esp], edx; call eax; 
0x000949d1: cmp byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x00116656: cmp byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0007a35c: cmp byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x000214a9: cmp byte ptr [ebx + 0x5e5b6cc4], al; pop edi; pop ebp; ret; 
0x000d78cf: cmp byte ptr [ebx + 0xf74247c], cl; mov dh, 0x41; sbb al, 0x89; ret 0xeac1; 
0x001186b1: cmp byte ptr [ebx - 0x2f76cb3c], al; pop esi; pop edi; ret; 
0x0011d405: cmp byte ptr [ebx - 0x723cc33c], al; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x7d]; 
0x0012abb3: cmp byte ptr [ebx - 0x743cc33c], al; inc ebp; sub al, 0x2b; inc ebp; and al, 0x89; ret 0xfac1; 
0x0006d60b: cmp byte ptr [ebx - 0x743cc33c], al; outsb dx, byte ptr [esi]; push esp; mov dword ptr [esp], ebp; call dword ptr [ebp + 0x10]; 
0x000ef126: cmp byte ptr [ebx - 0x74bfdbac], cl; add al, byte ptr [ebx - 0x7bf00008]; ret 0; 
0x0007b287: cmp byte ptr [ebx - 0x76dbdbac], cl; xor al, 0x24; mov dword ptr [esp + 4], edx; call eax; 
0x000d503f: cmp byte ptr [ebx - 0x7ccbdb8c], cl; ret 0x8b01; 
0x000d019f: cmp byte ptr [ebx - 0x7cd3dbb4], cl; ret 0x8901; 
0x000268a7: cmp byte ptr [ebx - 0x8f4d], cl; jmp dword ptr [ebp - 0x77]; 
0x000b6959: cmp byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x75]; 
0x000ef724: cmp byte ptr [ebx], cl; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00199338: cmp byte ptr [ecx + 0x44740002], ah; clc; jmp dword ptr [edi]; 
0x000b08e7: cmp byte ptr [ecx + 0x448b2404], cl; and al, 0x30; call 0xae970; add esp, 0x2c; ret; 
0x000b2dc7: cmp byte ptr [ecx + 0x448b2404], cl; and al, 0x30; call 0xb09a0; add esp, 0x2c; ret; 
0x000947ce: cmp byte ptr [ecx + 0xc], ah; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0011a3f7: cmp byte ptr [ecx - 0x76fbdbac], cl; add al, 0x24; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x0002ddd5: cmp byte ptr [ecx], al; add byte ptr [eax], al; add esp, 0x13c; ret; 
0x00169d1d: cmp byte ptr [ecx], al; add byte ptr [ecx + 0x2f], bl; int1; jmp esp; 
0x00189132: cmp byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0008bc83: cmp byte ptr [ecx], al; sbb eax, -1; pop ebx; ret; 
0x0008b514: cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x000a71d7: cmp byte ptr [ecx], bh; dec edi; cmp byte ptr [ebp + 0x13], dh; pop edi; pop esi; ret; 
0x000cdc3e: cmp byte ptr [ecx], bh; ret 0x840f; 
0x00175741: cmp byte ptr [ecx], dh; out dx, al; jmp dword ptr [edx]; 
0x000ca66f: cmp byte ptr [ecx], dh; ror byte ptr [ebx - 0x74efdba4], 0x74; and al, 0x14; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000ef166: cmp byte ptr [edi + 0x154b8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001496f7: cmp byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0016a32c: cmp byte ptr [edi + 1], ah; add byte ptr [ecx], dl; int1; jmp dword ptr [eax + 0x67]; 
0x001949a8: cmp byte ptr [edi + esi*8], ah; jmp dword ptr [ebx]; 
0x00001fac: cmp byte ptr [edi - 0x19ade7f3], dl; ret; 
0x0016d20c: cmp byte ptr [edi - 0x352bfffe], 0xf9; jmp eax; 
0x00182d88: cmp byte ptr [edi], ch; int1; call dword ptr [esi]; 
0x00009439: cmp byte ptr [edi], cl; add byte ptr [ecx + 0x12000000], bl; add byte ptr [eax + eax], cl; ret 0x38; 
0x000c3490: cmp byte ptr [edi], cl; mov dh, 0x4a; add al, 0x83; ret 0x8305; 
0x00002256: cmp byte ptr [edi], cl; xchg byte ptr [eax - 0x7f78efd8], al; sub byte ptr [eax], dl; salc; ret; 
0x0007646b: cmp byte ptr [edi], cl; xchg eax, ebp; ret 0xb60f; 
0x00036f3d: cmp byte ptr [edi], cl; xchg eax, edx; ret 0xd789; 
0x0010556b: cmp byte ptr [edi], cl; xchg eax, esp; ret 0xd285; 
0x00130898: cmp byte ptr [edi], dl; ret 0x2c73; 
0x00131259: cmp byte ptr [edi], dl; ret 0x3273; 
0x00130883: cmp byte ptr [edi], dl; ret 0x3e73; 
0x0013123f: cmp byte ptr [edi], dl; ret 0x4c73; 
0x0013086e: cmp byte ptr [edi], dl; ret 0x5073; 
0x00130859: cmp byte ptr [edi], dl; ret 0x6273; 
0x00131225: cmp byte ptr [edi], dl; ret 0x6673; 
0x001301f4: cmp byte ptr [edi], dl; ret 0x830f; 
0x00170c38: cmp byte ptr [edx - 0x15], ah; jmp dword ptr [edx]; 
0x00192aa5: cmp byte ptr [edx], al; add byte ptr [eax], cl; out dx, al; idiv bh; ret 0; 
0x0016ba2d: cmp byte ptr [edx], al; add byte ptr [edi + ecx*4 - 9], al; jmp dword ptr [eax + 0x38]; 
0x001730e8: cmp byte ptr [edx], bh; add byte ptr [eax], al; aad 2; in al, dx; call dword ptr [eax]; 
0x00173bba: cmp byte ptr [edx], dl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0016836c: cmp byte ptr [esi + 0x74640000], ah; in al, dx; jmp dword ptr [eax - 0x5a]; 
0x00183838: cmp byte ptr [esi + 1], al; add byte ptr [ecx + ecx*2], al; int1; call dword ptr [edx]; 
0x0019b530: cmp byte ptr [esi - 0x25d7fffe], 0xf8; call dword ptr [eax]; 
0x000b9b68: cmp byte ptr [esi], ah; sete al; movzx eax, al; lea eax, dword ptr [eax + eax - 1]; ret; 
0x00166c94: cmp ch, 0xfc; jmp dword ptr [eax]; 
0x00178df5: cmp ch, bh; jmp dword ptr [esi + 2]; 
0x00127ee0: cmp ch, bl; or eax, 0x26748d90; add byte ptr [ecx], bh; ret 0xc789; 
0x000419b5: cmp cl, byte ptr [ebp + 0x3900054c]; ret 0x4f0f; 
0x000826f1: cmp cl, byte ptr [ebp + 0x754e0452]; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0007e901: cmp cl, byte ptr [ebx + 0x748b241c]; and al, 4; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x001090de: cmp cl, byte ptr [ebx - 0x12f6d]; jmp dword ptr [ebp - 0x75]; 
0x000fd98c: cmp cl, byte ptr [ebx - 0x12f75]; jmp dword ptr [ebp - 0x75]; 
0x0010b89d: cmp cl, byte ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x7d]; 
0x001104d7: cmp cl, byte ptr [ebx - 0xf775]; jmp dword ptr [ebp - 0x7d]; 
0x000ef508: cmp cl, byte ptr [ebx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0004ab72: cmp cl, byte ptr [edi]; xchg eax, esp; ret 0xd589; 
0x00166ddc: cmp cl, byte ptr [esi]; std; call dword ptr [eax + 0xc]; 
0x0017c338: cmp cl, dl; add byte ptr [eax], al; adc al, 0xb0; out dx, eax; jmp dword ptr [eax + 2]; 
0x000e65bc: cmp cl, dl; or eax, dword ptr [eax]; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0x4b; call dword ptr gs:[0x10]; 
0x0018b838: cmp dh, al; add dword ptr [eax], eax; mov ah, 0x79; cmc; jmp dword ptr [esi]; 
0x001958d9: cmp dh, bh; jmp edx; 
0x0017d038: cmp dh, bl; add byte ptr [eax], al; push esp; clc; out dx, eax; call dword ptr [edx]; 
0x000e3485: cmp dh, bl; dec dword ptr [ebx - 0xc373]; dec dword ptr [ebx - 0xbb6b]; jmp dword ptr [ebp - 0x77]; 
0x0018ac6d: cmp dh, ch; call dword ptr [ebx]; 
0x0016b431: cmp dh, dh; call eax; 
0x00194976: cmp dh, dh; jmp dword ptr [edx]; 
0x00146867: cmp dh, dh; ret 0x7504; 
0x0016d769: cmp dl, bh; jmp esp; 
0x00002b7e: cmp dl, byte ptr [edi]; ret; 
0x0015a59d: cmp dl, dh; call dword ptr [esi + 0x39]; 
0x0015a599: cmp dl, dh; call edi; 
0x0015a599: cmp dl, dh; call edi; cmp dl, dh; call dword ptr [esi + 0x39]; 
0x0007c326: cmp dword ptr [eax + 0x4244489], edx; mov eax, dword ptr [esi + 0x24]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x00098417: cmp dword ptr [eax + 8], edx; lea ecx, dword ptr [eax + 8]; mov eax, 0; cmove eax, ecx; ret; 
0x00129a43: cmp dword ptr [eax - 0x10], edi; call dword ptr [eax - 0x98a3f7b]; mov eax, 4; add esp, 0xc; ret; 
0x0007963a: cmp dword ptr [eax - 2], -1; jmp dword ptr [ebp - 0x75]; 
0x00074c5a: cmp dword ptr [eax - 2], -1; jmp dword ptr [ebp - 0x77]; 
0x00078f5b: cmp dword ptr [eax - 2], -1; jmp dword ptr [ebp - 0x7d]; 
0x000b9b67: cmp dword ptr [eax], 0x26; sete al; movzx eax, al; lea eax, dword ptr [eax + eax - 1]; ret; 
0x000b92eb: cmp dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00172ff9: cmp dword ptr [eax], eax; add byte ptr [ebp + 3], dh; in al, dx; call dword ptr [eax]; 
0x00173029: cmp dword ptr [eax], eax; add byte ptr [ebp + 3], dl; in al, dx; call dword ptr [eax]; 
0x000b9126: cmp dword ptr [eax], eax; add byte ptr [ebp - 0x76e18a40], al; rol dword ptr [edi + 0xd5b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b91a6: cmp dword ptr [eax], eax; add byte ptr [ebp - 0x76e18a40], al; rol dword ptr [edi + 0xd6b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b94c5: cmp dword ptr [eax], eax; add byte ptr [ebp - 0x78dc8a40], al; fistp qword ptr [eax + 0xd0]; call dword ptr gs:[0x10]; 
0x000b9555: cmp dword ptr [eax], eax; add byte ptr [ebp - 0x78dc8a40], al; fistp qword ptr [eax + 0xd2]; call dword ptr gs:[0x10]; 
0x000e798a: cmp dword ptr [eax], eax; add byte ptr [ebp - 0x78e38a40], al; sar dword ptr [eax + 0xcb], cl; call dword ptr gs:[0x10]; 
0x000e7a0a: cmp dword ptr [eax], eax; add byte ptr [ebp - 0x78e38a40], al; sar dword ptr [eax + 0xcc], cl; call dword ptr gs:[0x10]; 
0x000b55aa: cmp dword ptr [eax], eax; add byte ptr [ebp - 0x78e38a40], al; sar dword ptr [eax + 0xce], cl; call dword ptr gs:[0x10]; 
0x0012ea66: cmp dword ptr [eax], eax; add byte ptr [ecx + 0x9cac1f0], cl; xor edx, dword ptr gs:[0x18]; call edx; 
0x00028d09: cmp dword ptr [eax], eax; add byte ptr [ecx - 0x373e77ab], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr [esp], ecx; call eax; 
0x000283db: cmp dword ptr [eax], eax; add byte ptr [ecx - 0x373edbc4], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x00023ed9: cmp dword ptr [eax], eax; add byte ptr [ecx - 0x373edbec], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x000f7e0e: cmp dword ptr [eax], eax; add byte ptr [ecx - 0x76fbdb8c], cl; sub al, 0x24; mov dword ptr [esp + 8], eax; call dword ptr [edi + 0x14]; 
0x000a7549: cmp dword ptr [ebp + ecx + 0xf], esi; lahf; ror byte ptr [edi], 0xb6; ror byte ptr [ebp + 0x5eff0044], 0x5f; ret; 
0x00104888: cmp dword ptr [ebp - 0x13], esi; add esp, 4; pop esi; pop edi; ret; 
0x0018ffa4: cmp dword ptr [ebp - 0xa], edx; call dword ptr [eax]; 
0x0011e23f: cmp dword ptr [ebx - 0x2e], -5; dec dword ptr [ecx - 0x17fbdbbc]; ret; 
0x0016e79d: cmp dword ptr [ebx], eax; add byte ptr [eax + 0x14], ah; cld; call eax; 
0x0019f3e0: cmp dword ptr [ebx], eax; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000c9412: cmp dword ptr [ebx], eax; add cl, ch; xchg eax, esi; loope 0xc9418; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x7d]; 
0x000ef604: cmp dword ptr [ebx], ecx; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0006f664: cmp dword ptr [ebx], edx; add byte ptr [ebx + 0x940684], cl; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x48]; 
0x001275d2: cmp dword ptr [ecx + 8], edi; mov edi, dword ptr [esp + 4]; cmovbe eax, esi; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x000efb47: cmp dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000955a6: cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x0018cd8c: cmp dword ptr [ecx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000ca0e0: cmp dword ptr [edi + ecx*4], edx; lea esi, dword ptr [ecx + 1]; cmove eax, esi; pop esi; pop edi; ret; 
0x00079bce: cmp dword ptr [edi + edi*8], -1; dec dword ptr [ebx + 0xfc08500]; test dword ptr [esi], ecx; add al, byte ptr [eax]; add byte ptr [ebx - 0x1876d], cl; jmp dword ptr [ebp - 0x75]; 
0x0007bee4: cmp dword ptr [edi + edi*8], -1; dec dword ptr [ecx + 0x18c48310]; pop ebx; ret; 
0x0007dcbf: cmp dword ptr [edi + edx*8 - 8], -1; pop ebx; ret; 
0x0006c81a: cmp dword ptr [edx + 0x10], eax; cmovae eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x00073c17: cmp dword ptr [edx + 0x14], eax; cmovae eax, dword ptr [edx + 0x14]; sub eax, dword ptr [edx + 0xc]; ret; 
0x00097e6d: cmp dword ptr [edx + eax*2 - 0x10], -1; pop ebx; ret; 
0x00002b71: cmp dword ptr [edx - 0x254e376e], ecx; fnsave dword ptr [edx - 0x6b]; test word ptr [ebx - 0x2e], bp; cmp dl, byte ptr [edi]; ret; 
0x00195a58: cmp dword ptr [edx - 9], ecx; call dword ptr [eax]; 
0x0012ba93: cmp dword ptr [edx], 0x1d; cmovne esi, eax; mov eax, esi; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000b993d: cmp dword ptr [edx], 0x26; mov edx, 0xffffffff; cmovne eax, edx; ret; 
0x000eb913: cmp dword ptr [esi + 0x5c8bfff2], esi; and al, 0x10; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x001489a6: cmp dword ptr [esi + 0xf], esp; xlatb; ret 0x498d; 
0x00103707: cmp dword ptr [esi + ebp - 0x3f7b0000], 0x74; or byte ptr [ebx + 0x5d5b14c4], al; ret; 
0x0007e763: cmp dword ptr [esi + esi + 0x10000], 0; add byte ptr [esi + eax - 0x73], dh; or dword ptr [ecx + edx*2 - 7], 0xffffffff; pop ebx; ret; 
0x0007e283: cmp dword ptr [esi + esi + 0x10000], 0; add byte ptr [esi + eax - 0x73], dh; sbb dword ptr [ebp + ecx - 7], -1; pop ebx; ret; 
0x0007e1e3: cmp dword ptr [esi + esi + 0x10000], 0; add byte ptr [esi + eax - 0x73], dh; sub dword ptr [edi + edx*4 - 7], -1; pop ebx; ret; 
0x000038be: cmp dword ptr [esi], ecx; pop esp; ret; 
0x00127a07: cmp dword ptr [esp + 0x18], ecx; mov ebp, dword ptr [esp + 0x28]; cmovbe eax, edx; add esp, 0x2c; ret; 
0x000b9b66: cmp dword ptr gs:[eax], 0x26; sete al; movzx eax, al; lea eax, dword ptr [eax + eax - 1]; ret; 
0x0012ba92: cmp dword ptr gs:[edx], 0x1d; cmovne esi, eax; mov eax, esi; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000b993c: cmp dword ptr gs:[edx], 0x26; mov edx, 0xffffffff; cmovne eax, edx; ret; 
0x0007ad84: cmp eax, -1; cmove eax, edx; add esp, 0x1c; ret; 
0x000e68d9: cmp eax, -1; cmovne eax, esi; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000b7c06: cmp eax, -1; cmovne ecx, eax; mov eax, ecx; ret; 
0x00087ab9: cmp eax, -1; inc dword ptr [ebp + 0x2b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000e9dc0: cmp eax, -1; setne al; movzx eax, al; add esp, 0x18; pop ebx; ret; 
0x00003c5f: cmp eax, 0x12c401fe; mov cl, 0x22; xchg eax, ebp; ret; 
0x0017bfbd: cmp eax, 0x140e0a01; inc ebx; ret; 
0x0001afeb: cmp eax, 0x18; mov dword ptr [esp], edi; call 0x126c80; mov dword ptr [esp], esi; call edi; 
0x0016e9cd: cmp eax, 0x22a70002; cld; call dword ptr [eax + 0x47]; 
0x000966ea: cmp eax, 0x29ca8900; ret 0x4403; 
0x000fc0dc: cmp eax, 0x38; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0016741d: cmp eax, 0x3c12fffd; std; jmp dword ptr [edx + 0x3c]; 
0x001673cd: cmp eax, 0x3c30fffd; std; inc dword ptr [eax - 0x2f0002c4]; cmp al, 0xfd; jmp dword ptr [eax]; 
0x001673bd: cmp eax, 0x3c36fffd; std; inc dword ptr [esi - 0x290002c4]; cmp al, 0xfd; jmp dword ptr [esi]; 
0x00054e3c: cmp eax, 0x4000; sete dl; mov eax, edx; add esp, 0x7c; ret; 
0x00087850: cmp eax, 0x5bffffff; ret; 
0x0019d5a0: cmp eax, 0x76000007; push es; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0018adf1: cmp eax, 0x7afff5; add byte ptr [eax], al; add byte ptr [ebx + 0xe], cl; or byte ptr [ebx + 0x40e5902], al; ret; 
0x0010fc17: cmp eax, 0x7c8d118b; cmp byte ptr [eax*4 - 0x7cb98b2e], cl; ror byte ptr [esi], 0x39; ret 0x2c72; 
0x00126532: cmp eax, 0x81000038; ret; 
0x00124c32: cmp eax, 0x81000051; ret; 
0x0011b932: cmp eax, 0x810000e4; ret; 
0x00113a32: cmp eax, 0x81000163; ret; 
0x0010e532: cmp eax, 0x810001b8; ret; 
0x00102432: cmp eax, 0x81000279; ret; 
0x000f5d32: cmp eax, 0x81000340; ret; 
0x000eb432: cmp eax, 0x810003e9; ret; 
0x000d1b32: cmp eax, 0x81000582; ret; 
0x000cf132: cmp eax, 0x810005ac; ret; 
0x0007e732: cmp eax, 0x81000ab6; ret; 
0x0006be32: cmp eax, 0x81000bdf; ret; 
0x0004a132: cmp eax, 0x81000dfc; ret; 
0x0002b732: cmp eax, 0x81000fe6; ret; 
0x000a3dc8: cmp eax, 0x83fa8900; ret 0x8901; 
0x0011233a: cmp eax, 0x8904478b; cmp al, 0x24; call dword ptr [eax + 0x10]; 
0x00169ec0: cmp eax, 0xa4fff132; inc edx; add dword ptr [eax], eax; dec ecx; xor dh, cl; call esp; 
0x0011e992: cmp eax, 0xc0311372; cmp edx, 2; sete al; add esp, 0x28; pop esi; ret; 
0x00095c62: cmp eax, 0xc1d70f66; bsf eax, eax; lea eax, dword ptr [edx + eax + 0x30]; ret; 
0x000e5f9a: cmp eax, 0xc3810004; push edi; ror byte ptr [ebx], 1; add byte ptr [edi + 0x36b8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b8182: cmp eax, 0xc; add byte ptr [ebp + 0x14], dh; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x00179fb0: cmp eax, 0xd1cffef; inc ebx; and bh, ch; jmp dword ptr [edx]; 
0x00179fe0: cmp eax, 0xd1cffef; jo 0x17a007; out dx, eax; jmp dword ptr [edx]; 
0x00179f80: cmp eax, 0xd1cffef; push edx; and bh, ch; jmp dword ptr [edx]; 
0x00194f3c: cmp eax, 0xd1cfff6; sar byte ptr [esi + esi*8], 1; jmp dword ptr [edx]; 
0x00116d8d: cmp eax, 1; sbb eax, eax; add eax, 2; add esp, 0x1c; ret; 
0x0006ab18: cmp eax, 1; sbb eax, eax; add esp, 0x18; not eax; pop ebx; ret; 
0x00055493: cmp eax, 1; sbb eax, eax; add esp, 0x18; pop ebx; ret; 
0x0001a3fd: cmp eax, 1; sbb eax, eax; not eax; add esp, 8; pop ebx; ret; 
0x0011f9db: cmp eax, 1; sete al; add esp, 0x18; movzx eax, al; pop ebx; ret; 
0x0011f982: cmp eax, 1; sete al; add esp, 0x28; movzx eax, al; pop ebx; ret; 
0x000bd627: cmp eax, 1; sete al; add esp, 8; movzx eax, al; ret; 
0x000e89bd: cmp eax, 2; cmova esi, dword ptr [esp + 0x2c]; xchg edi, ebx; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x000ef09f: cmp eax, 8; sete al; add esp, 0x1c; movzx eax, al; sub eax, 1; ret; 
0x000ef0df: cmp eax, 8; sete al; add esp, 0x2c; movzx eax, al; sub eax, 1; ret; 
0x000e61b6: cmp eax, dword ptr [eax + eax]; add ebx, 0xbce3b; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0016e6f5: cmp eax, dword ptr [ebx]; add byte ptr [edi + edi*8 - 5], dl; call eax; 
0x000efc1d: cmp eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00182d85: cmp eax, dword ptr [ecx]; add byte ptr [eax], bh; das; int1; call dword ptr [esi]; 
0x00169d9d: cmp eax, dword ptr [ecx]; add byte ptr [ecx + 0x30], al; int1; jmp esp; 
0x00169d95: cmp eax, dword ptr [ecx]; add byte ptr [ecx], dh; xor cl, dh; push dword ptr [ebx + edi + 0x30410001]; int1; jmp esp; 
0x0016fcdf: cmp eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001955ed: cmp eax, dword ptr [edx - 0xa]; jmp dword ptr [edx]; 
0x001328f1: cmp eax, dword ptr [edx]; add byte ptr [eax], al; pop ebx; ret; 
0x000fb84c: cmp eax, dword ptr [esp + 4]; setae al; movzx eax, al; ret; 
0x000e8773: cmp eax, ecx; idiv bh; add esp, 0x18; pop ebx; ret; 
0x00003bab: cmp eax, ecx; mov bl, 0xf7; adc bh, byte ptr [eax]; cwde; ret; 
0x0007df99: cmp eax, ecx; sbb eax, eax; sbb eax, -1; pop esi; pop ebx; ret; 
0x0016c051: cmp eax, edi; jmp esp; 
0x0011c4ca: cmp eax, edx; cmove eax, dword ptr [ebx - 0x5c]; add esp, 8; pop ebx; ret; 
0x0017e20d: cmp eax, esi; call dword ptr [edi]; 
0x00095d48: cmp eax, esi; cmova eax, esi; sub eax, edi; pop esi; pop edi; ret; 
0x0017e235: cmp eax, esi; jmp edi; 
0x000d3c51: cmp ebp, 0x6b9ffff; add byte ptr [eax], al; add byte ptr [ecx - 0x3444722a], cl; ret; 
0x000e0dec: cmp ebp, 0xfffff000; mov ebp, dword ptr [esp + 0x18]; cmova eax, edx; add esp, 0x1c; ret; 
0x0008f538: cmp ebp, dword ptr [eax - 0x3e7efff7]; add al, 0xb3; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0017b01a: cmp ebp, edi; jmp dword ptr [edx]; 
0x000ef0db: cmp ebx, 0xf883fffe; or byte ptr [edi], cl; xchg eax, esp; rol byte ptr [ebx - 0x49f0d33c], 0xc0; sub eax, 1; ret; 
0x000e35a0: cmp ebx, esi; dec dword ptr [ebx - 0xc36b]; dec dword ptr [ebx - 0xbb7b]; jmp dword ptr [ebp - 0x77]; 
0x00105079: cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x000c0a0b: cmp ecx, 0x958bffff; push 0x39ffffd7; sal byte ptr [edi + eax*8 - 0x77], 1; ret 0x3a8b; 
0x000ef404: cmp ecx, dword ptr [ebx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0008ea71: cmp ecx, dword ptr [edx]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000e61bb: cmp ecx, esi; or eax, dword ptr [eax]; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000cc386: cmp edi, 0x83ffffff; rol byte ptr [ecx], 0x39; ret 0xf275; 
0x000ef3bb: cmp edi, dword ptr [ebx + ecx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eb0bb: cmp edi, dword ptr [edi + 0xb]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0016735d: cmp edi, ebp; call dword ptr [eax + 0x2e]; 
0x0016735d: cmp edi, ebp; call dword ptr [eax + 0x2e]; std; call dword ptr [eax]; 
0x00167359: cmp edi, ebp; call dword ptr [eax + 0x3b]; 
0x00167359: cmp edi, ebp; call dword ptr [eax + 0x3b]; std; call dword ptr [eax + 0x2e]; std; call dword ptr [eax]; 
0x0016731d: cmp edi, ebp; call dword ptr [edx + 0x3a]; 
0x0016731d: cmp edi, ebp; call dword ptr [edx + 0x3a]; std; inc edx; cmp bh, ch; call dword ptr [edx]; 
0x00167349: cmp edi, ebp; call dword ptr [esi + 0x3b]; 
0x001672b9: cmp edi, ebp; dec dword ptr [ebx + edi + 0x3a76fffd]; std; jmp esi; 
0x0016734d: cmp edi, ebp; inc dword ptr [eax + 0x3a]; std; push dword ptr [eax + 0xfffd3a]; cmp edi, ebp; call dword ptr [eax + 0x3b]; 
0x0016733d: cmp edi, ebp; inc dword ptr [esi + 0x3a]; std; push dword ptr [esi + 0x6fffd3a]; cmp edi, ebp; call dword ptr [esi + 0x3b]; 
0x001672c9: cmp edi, ebp; inc dword ptr [esi + 0x70fffd3b]; cmp bh, ch; jmp eax; 
0x00167329: cmp edi, ebp; jmp dword ptr [edx + 0x3b]; 
0x00167319: cmp edi, ebp; ljmp ptr [eax + 0x3b]; std; call dword ptr [edx + 0x3a]; 
0x001672cd: cmp edi, ebp; push dword ptr [eax + 0x3a]; std; jmp eax; 
0x001672bd: cmp edi, ebp; push dword ptr [esi + 0x3a]; std; jmp esi; 
0x0016d779: cmp edi, edx; call dword ptr [eax - 0x1c]; 
0x000e6885: cmp edx, -1; cmovne eax, ecx; add esp, 0x2c; ret; 
0x000fc3c0: cmp edx, 1; sbb eax, eax; add esp, 0x18; and eax, 0xc; pop ebx; ret; 
0x001140b6: cmp edx, 2; sete al; add esp, 0x1c; ret; 
0x0011e5d7: cmp edx, 2; sete al; add esp, 0x28; pop esi; ret; 
0x000f36f8: cmp edx, 9; mov edi, dword ptr [esp + 4]; setbe al; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00045932: cmp edx, dword ptr [edi]; std; call dword ptr [edi - 0x77]; 
0x0008d317: cmp edx, ebx; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000f0d11: cmp edx, ecx; mov edx, 0; cmovb eax, edx; pop esi; ret; 
0x0015a531: cmp edx, esi; call dword ptr [eax + 0x38]; 
0x0015a561: cmp edx, esi; jmp dword ptr [esi]; 
0x00110f06: cmp esi, 0x950f0308; ret 0xd021; 
0x0007fd40: cmp esi, eax; cmovbe eax, edx; add esp, 0x18; pop esi; ret; 
0x000f126d: cmp esi, eax; mov eax, esi; mov esi, dword ptr [esp + 0x14]; cmovbe eax, dword ptr [esp + 8]; add esp, 0x1c; ret; 
0x00169f51: cmp esi, ecx; call eax; 
0x00183441: cmp esi, ecx; jmp edx; 
0x00169f49: cmp esi, ecx; push dword ptr [eax + 0x3400014f]; cmp esi, ecx; call eax; 
0x00194ada: cmp esi, esi; jmp dword ptr [edx]; 
0x0002f546: cmp esp, 0x3901c083; sal byte ptr [ebp - 0xf], 1; xor eax, eax; pop esi; pop edi; ret; 
0x00095c44: cmp esp, dword ptr [esi + 0xf]; xlatb; ret 0xc085; 
0x00147236: cmpsb byte ptr [esi], byte ptr es:[edi]; add al, byte ptr [eax]; add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x0007c42f: cmpsb byte ptr [esi], byte ptr es:[edi]; add byte ptr [eax], al; add byte ptr [edx - 9], al; ret 3; 
0x0017980d: cmpsb byte ptr [esi], byte ptr es:[edi]; add byte ptr [eax], al; mov al, 0x57; out dx, eax; call dword ptr [ecx]; 
0x0010cd03: cmpsb byte ptr [esi], byte ptr es:[edi]; add eax, dword ptr [eax]; add byte ptr [ecx - 0x76d3db94], cl; ret 0xcd89; 
0x0016c651: cmpsb byte ptr [esi], byte ptr es:[edi]; clc; call esp; 
0x0018c095: cmpsb byte ptr [esi], byte ptr es:[edi]; cmc; jmp eax; 
0x00166578: cmpsb byte ptr [esi], byte ptr es:[edi]; fdivr st(4); inc esi; fdivr st(4); jmp dword ptr [ebx - 0x28]; 
0x00189a59: cmpsb byte ptr [esi], byte ptr es:[edi]; hlt; jmp dword ptr [edi]; 
0x0012a6c6: cmpsb byte ptr [esi], byte ptr es:[edi]; inc esp; sti; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x0016f44d: cmpsb byte ptr [esi], byte ptr es:[edi]; ljmp 0:0x23ff; inc ecx; push cs; or byte ptr [ebx + 0x40e6102], al; ret; 
0x0008e9cd: cmpsb byte ptr [esi], byte ptr es:[edi]; mov bl, 9; add byte ptr [ecx + 0xcbddfc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0011416e: cmpsb byte ptr [esi], byte ptr es:[edi]; mov eax, dword ptr [esi + 4]; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x00177be2: cmpsb byte ptr [esi], byte ptr es:[edi]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x000524e6: cmpsb byte ptr [esi], byte ptr es:[edi]; ret 2; 
0x0016cfb1: cmpsb byte ptr [esi], byte ptr es:[edi]; stc; jmp dword ptr [eax - 0x4e]; 
0x001946f5: cmpsb byte ptr [esi], byte ptr es:[edi]; stc; jmp dword ptr [edi]; 
0x0016cfc9: cmpsb byte ptr [esi], byte ptr es:[edi]; stc; push dword ptr [eax + 0x5a0002b3]; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; jmp dword ptr [eax]; 
0x0016ee0d: cmpsd dword ptr [esi], dword ptr es:[edi]; add al, byte ptr [eax]; hlt; outsd dx, dword ptr [esi]; cld; call dword ptr [eax]; 
0x000773d1: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ecx - 0x72270810], cl; dec esp; aaa; jmp dword ptr [ecx]; 
0x00148f65: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add dh, dh; ret 0xf20; 
0x001729c1: cmpsd dword ptr [esi], dword ptr es:[edi]; add dword ptr [edx], ecx; ret; 
0x0016e8f0: cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; call dword ptr [eax + 0x34]; 
0x0016e9d0: cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; call dword ptr [eax + 0x47]; 
0x0016ea98: cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; call dword ptr [eax - 0x34]; 
0x0016e930: cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; call dword ptr [eax - 0x58fffe49]; and bh, ah; call eax; 
0x0016e878: cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; call eax; 
0x0016e8c8: cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; call esp; 
0x0016e950: cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; dec dword ptr [eax + esi*8 + 0x22a70001]; cld; jmp esp; 
0x0016ead0: cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; jmp dword ptr [eax]; 
0x0016e9b0: cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; jmp eax; 
0x0016e958: cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; jmp esp; 
0x0016eac8: cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; ljmp ptr [eax - 0x58fffd24]; and bh, ah; jmp dword ptr [eax]; 
0x0016e9c8: cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; push eax; cmp eax, 0x22a70002; cld; call dword ptr [eax + 0x47]; 
0x000ef64f: cmpsd dword ptr [esi], dword ptr es:[edi]; cmp dword ptr [ebx], ecx; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00174336: cmpsd dword ptr [esi], dword ptr es:[edi]; in al, dx; jmp dword ptr [edx]; 
0x000de1c8: cmpsd dword ptr [esi], dword ptr es:[edi]; mov ebx, 0xc3810004; sub byte ptr [esi + 0xc], cl; add byte ptr [edi + 0x10cb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008f61e: cmpsd dword ptr [esi], dword ptr es:[edi]; or dword ptr [eax], eax; add ecx, 0xcb18f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0016d590: cmpsd dword ptr [esi], dword ptr es:[edi]; or edi, edx; jmp dword ptr [eax]; 
0x00003986: cmpsd dword ptr [esi], dword ptr es:[edi]; ret 0x49ec; 
0x000d393c: cmpsd dword ptr [esi], dword ptr es:[edi]; ret; 
0x0005094c: cmpsd dword ptr [esi], dword ptr es:[edi]; sar edi, 1; dec dword ptr [ebx - 0xf77d]; dec dword ptr [ecx - 0x19b73]; dec dword ptr [ebx - 0x21f73]; jmp dword ptr [ebp - 0x75]; 
0x0016cfd9: cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x4d]; 
0x001945d9: cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [ebx]; 
0x0016cfd1: cmpsd dword ptr [esi], dword ptr es:[edi]; stc; jmp dword ptr [eax]; 
0x0016cfd8: cmpsw word ptr [esi], word ptr es:[edi]; stc; call dword ptr [eax - 0x4d]; 
0x001989b1: cvttps2pi mm6, xmm7; jmp dword ptr [edx]; 
0x000874f4: cwde; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00198a41: cwde; add al, byte ptr [eax]; mov word ptr [eax + edi*8], gs; call dword ptr [eax]; 
0x0016edfd: cwde; add al, byte ptr [eax]; outsd dx, dword ptr fs:[esi]; cld; jmp dword ptr [eax]; 
0x0018f948: cwde; add al, byte ptr [edx]; add byte ptr [esi + eax*2 - 0xa], cl; call dword ptr [eax]; 
0x0019289c: cwde; add byte ptr [eax], al; add byte ptr [eax - 0x13fffdca], ah; out 0xf6, al; call dword ptr [esi + 5]; 
0x00064fb5: cwde; add byte ptr [eax], al; add byte ptr [ecx - 0x2d00dbfc], cl; add esp, 0x1c; ret; 
0x00064ed3: cwde; add byte ptr [eax], al; add byte ptr [ecx - 0x2f00dbec], cl; add esp, 0x1c; ret; 
0x00178a6d: cwde; add byte ptr [eax], al; mov al, 0x2e; out dx, eax; call dword ptr [esi]; 
0x0000583c: cwde; add dword ptr [eax], eax; add byte ptr [edx], ah; add byte ptr [eax + eax], cl; ret; 
0x00149ad4: cwde; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x00188a69: cwde; add dword ptr [eax], eax; hlt; sbb esp, esi; call eax; 
0x00188aa1: cwde; add dword ptr [eax], eax; mov word ptr [edx], ds; hlt; call dword ptr [edi]; 
0x00024439: cwde; add eax, 0x24548b00; sbb byte ptr [ebx - 0x7ae3dbb4], cl; sal byte ptr [ebp - 0x50], 0x83; ret 0x8901; 
0x0016b1e4: cwde; add eax, 0xc5340002; cmc; call eax; 
0x00182218: cwde; and cl, dh; jmp dword ptr [ebx]; 
0x00113b42: cwde; and eax, dword ptr [eax]; add byte ptr [esi - 0x43], ah; add dword ptr [eax], eax; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x0016c5e9: cwde; clc; call dword ptr [eax]; 
0x0018da58: cwde; clc; cmc; jmp esi; 
0x0018ad58: cwde; cmp al, 0xf5; jmp dword ptr [edx]; 
0x00167624: cwde; dec esi; std; call dword ptr [edx + 0x4f]; 
0x00167624: cwde; dec esi; std; call dword ptr [edx + 0x4f]; std; jmp edx; 
0x0013924a: cwde; fiadd word ptr [edx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000fee94: cwde; in eax, 0xff; inc dword ptr [ebx + 0x5e5b74c4]; ret; 
0x0016ac8c: cwde; jecxz 0x16ac90; add byte ptr [eax], ah; ret 0xfff4; 
0x0016b384: cwde; lar eax, word ptr [eax]; sub dh, dh; call eax; 
0x0017c5a8: cwde; leave; out dx, eax; call edi; 
0x00189e98: cwde; lodsb al, byte ptr [esi]; add dword ptr [eax], eax; movsb byte ptr es:[edi], byte ptr [esi]; in al, 0xf4; call dword ptr [edx]; 
0x0018f119: cwde; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017cba8: cwde; out dx, eax; call dword ptr [eax]; 
0x0004a1ff: cwde; ret 0x4489; 
0x0004a5f6: cwde; ret 0x44f6; 
0x00131435: cwde; ret 0xb60f; 
0x001313ba: cwde; ret 0xfa85; 
0x0016a7e4: cwde; ret 1; 
0x00003bb1: cwde; ret; 
0x0012ff04: cwde; ror dword ptr [edi], -0x6e; ret 0xb60f; 
0x0012f33a: cwde; sar dword ptr [edx], 0xf; xchg eax, edx; ret 0xcf89; 
0x0014ac81: cwde; sbb eax, 0x4890000; and al, 0xe8; ret; 
0x0016e1dc: cwde; sbb eax, 0x74d40003; sti; ljmp ptr [ebp + ebx + 0x75a40003]; sti; call esp; 
0x00179b98: cwde; test eax, 0x60440000; out dx, eax; call dword ptr [ebx]; 
0x0016ec84: cwde; xor al, byte ptr [ecx]; add byte ptr [ebp + edi - 4], dl; call esp; 
0x00191e51: daa; add al, byte ptr [eax]; dec edx; sal esi, 1; call dword ptr [eax]; 
0x0016b72d: daa; add al, byte ptr [eax]; xchg eax, esp; sbb bh, dh; call esp; 
0x001470cb: daa; add byte ptr [eax], al; add byte ptr [eax], al; add eax, 1; ret; 
0x00095c8b: daa; add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, dword ptr [eax + edx + 0x10]; ret; 
0x0009582b: daa; add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x10]; ret; 
0x001499bb: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [ecx + 8]; ret; 
0x0014748b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xa]; pop edi; ret; 
0x0014749b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xb]; pop edi; ret; 
0x001474ab: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xc]; pop edi; ret; 
0x001474bb: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xd]; pop edi; ret; 
0x001474cb: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xe]; pop edi; ret; 
0x0014741b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 2]; pop edi; ret; 
0x0014742b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 3]; pop edi; ret; 
0x0014743b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 4]; pop edi; ret; 
0x0014744b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 5]; pop edi; ret; 
0x0014745b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 6]; pop edi; ret; 
0x0014746b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 8]; pop edi; ret; 
0x0014747b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 9]; pop edi; ret; 
0x001478eb: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 0xa]; pop edi; ret; 
0x001478db: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 0xb]; pop edi; ret; 
0x001478cb: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 0xd]; pop edi; ret; 
0x001478bb: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 0xe]; pop edi; ret; 
0x0014795b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 1]; pop edi; ret; 
0x0014794b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 2]; pop edi; ret; 
0x0014793b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 3]; pop edi; ret; 
0x00149c4b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 4]; pop edi; ret; 
0x0014792b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 5]; pop edi; ret; 
0x0014791b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 6]; pop edi; ret; 
0x0014790b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 7]; pop edi; ret; 
0x001478fb: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 9]; pop edi; ret; 
0x00148a8b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edx + 1]; ret; 
0x0008760b: daa; add byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x000733eb: daa; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x000a73fb: daa; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; ret; 
0x000a740b: daa; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 2; ret; 
0x000a741b: daa; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 3; ret; 
0x000a742b: daa; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 4; ret; 
0x000a743b: daa; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 5; ret; 
0x000a744b: daa; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 6; ret; 
0x000a745b: daa; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 7; ret; 
0x0002702b: daa; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0007345b: daa; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x001298fb: daa; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0014998b: daa; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0008767b: daa; add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x000875fb: daa; add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x001327eb: daa; add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; xor eax, eax; ret; 
0x001474db: daa; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0006790b: daa; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00127592: daa; add byte ptr [eax], al; add ecx, 0x7ba5f; mov eax, dword ptr [ecx - 0x174]; add eax, dword ptr gs:[0]; ret; 
0x0016f989: daa; add dword ptr [edx], ecx; ret; 
0x0008b8b5: daa; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; lcall ptr [edi + 0x5b]; ret; 
0x00133d6c: daa; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0016e3c5: daa; add eax, dword ptr [eax]; xchg eax, esp; movsd dword ptr es:[edi], dword ptr [esi]; sti; call eax; 
0x001988f1: daa; clc; call dword ptr [ebx]; 
0x00001a23: daa; das; add esi, dword ptr [ecx]; sbb al, 0x30; mov eax, dword ptr [0x3a6d4813]; ret; 
0x000b7dcf: daa; mov dl, 0xe; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0007c972: daa; mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x0007e448: daa; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x001381bb: daa; out dx, al; add al, byte ptr [eax]; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00177efd: daa; out dx, eax; call dword ptr [edi + 1]; 
0x000021cc: daa; push edi; xor ebp, esp; adc dword ptr [si], eax; ret; 
0x0013b2bb: daa; ret; 
0x00138048: daa; sbb eax, 0xc381ffff; adc al, 0xee; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001671c5: daa; std; jmp eax; 
0x001780b9: daa; sti; call dword ptr [eax]; 
0x001921bd: das; add al, byte ptr [eax]; sbb cl, 0xf6; call dword ptr [ebp]; 
0x0008ef7d: das; add eax, 0x5e5f0000; pop ebx; ret; 
0x0016e4ed: das; add eax, dword ptr [eax]; inc esp; iretd; sti; jmp esp; 
0x00001a24: das; add esi, dword ptr [ecx]; sbb al, 0x30; mov eax, dword ptr [0x3a6d4813]; ret; 
0x0014331d: das; and dword ptr [eax], eax; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0018b195: das; cli; call dword ptr [ebp + 2]; 
0x000ef4c7: das; cmp ecx, dword ptr [ebx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000fefc7: das; inc eax; or al, byte ptr [eax]; mov eax, dword ptr [ecx - 0x14]; mov eax, dword ptr gs:[eax]; ret; 
0x001952ff: das; inc edx; idiv bh; sbb al, 0xd; ret; 
0x00182d89: das; int1; call dword ptr [esi]; 
0x00169d49: das; int1; call esp; 
0x00169d21: das; int1; jmp esp; 
0x00169d19: das; int1; push dword ptr [eax + edi + 0x2f590001]; int1; jmp esp; 
0x00091544: das; mov byte ptr [ecx], cl; add byte ptr [ecx + 0xc933cc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000e96ec: das; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000ddf08: das; mov ecx, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0xe; call dword ptr gs:[0x10]; 
0x000e00ca: das; or al, 0; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x000e006a: das; or al, 0; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000e000a: das; or al, 0; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x00094844: das; push ebp; or dword ptr [eax], eax; add ecx, 0xc60bc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00026dc7: das; ret 0x17; 
0x000a84c7: das; stosd dword ptr es:[edi], eax; str word ptr [ebx - 0xf777]; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000de91d: das; xchg edi, ebx; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000f0c57: das; xchg edi, ebx; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x000e6038: das; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000efdc7: das; xor cl, byte ptr [ebx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x001841b5: dec byte ptr [0x41140e0a]; ret; 
0x00110f07: dec byte ptr [eax]; add ecx, dword ptr [edi]; xchg eax, ebp; ret 0xd021; 
0x0013fc7b: dec byte ptr [ebp - 0x7af00487]; ret 6; 
0x0014442b: dec byte ptr [ebp - 0x7af00587]; ret; 
0x0013e3eb: dec byte ptr [ebp - 0x7af00687]; ret 7; 
0x00141b2b: dec byte ptr [ebp - 0x7af00687]; ret; 
0x0013f17b: dec byte ptr [ebp - 0x7af00c87]; ret 0x11; 
0x0013dbeb: dec byte ptr [ebp - 0x7af00d87]; ret 0xf; 
0x00140c2b: dec byte ptr [ebp - 0x7af00d87]; ret; 
0x001331e8: dec byte ptr [ebx + 0x5b082444]; ret; 
0x0002e9fd: dec byte ptr [ebx + 0x748b241c]; and al, 4; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000aa06e: dec byte ptr [ecx + 0x1be0bb]; add byte ptr [edi], cl; xchg eax, ebp; ret 0x10e9; 
0x00053c3b: dec byte ptr [ecx + 0x29c629fe]; ret 0xce01; 
0x0002c672: dec byte ptr [ecx + 0x45e82404]; sbb eax, 0x508d0005; add esi, esi; ret 0x6601; 
0x0007c014: dec byte ptr [ecx + 0x4e891c56]; and byte ptr [ecx + 0x187e8906], cl; mov dword ptr [esp], eax; call edx; 
0x000f3132: dec byte ptr [edx]; add byte ptr [ecx - 0x8fbdb8c], cl; ret 0xff80; 
0x00197011: dec byte ptr [edx]; ret; 
0x0016d793: dec dword ptr [0x40040002]; cli; jmp dword ptr [eax]; 
0x0016eb8b: dec dword ptr [eax + 0x24000105]; sub ah, bh; call esp; 
0x0016e9ab: dec dword ptr [eax + 0x37]; add al, byte ptr [eax]; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; jmp eax; 
0x0016843b: dec dword ptr [eax + 0x40000ab]; xchg eax, edx; in al, dx; jmp eax; 
0x00094e32: dec dword ptr [eax + 0x448b4078]; and al, 0xc; pop ebx; pop esi; ret; 
0x00134eeb: dec dword ptr [eax + 0x448bff4a]; and al, 8; pop ebx; ret; 
0x00094202: dec dword ptr [eax + 0x5bf88938]; pop edi; ret; 
0x0016a21b: dec dword ptr [eax + 1]; add ah, al; insb byte ptr es:[edi], dx; int1; jmp dword ptr [eax + 0x60]; 
0x0016ba2b: dec dword ptr [eax + edi + 2]; add byte ptr [edi + ecx*4 - 9], al; jmp dword ptr [eax + 0x38]; 
0x0016e953: dec dword ptr [eax + esi*8 + 0x22a70001]; cld; jmp esp; 
0x0004cac5: dec dword ptr [eax - 0x1a36b]; dec dword ptr [ebx - 0x18b7b]; dec dword ptr [ebx - 0x1bb6b]; jmp dword ptr [ebp - 0x75]; 
0x0016cf2b: dec dword ptr [eax - 0x1bfffd51]; popfd; stc; call esp; 
0x0013636b: dec dword ptr [eax - 0x2f7600b6]; pop ebx; ret; 
0x0016d58b: dec dword ptr [eax - 0x58fffd28]; or edi, edx; jmp dword ptr [eax]; 
0x00166e63: dec dword ptr [eax]; adc ch, bh; jmp edx; 
0x0016741b: dec dword ptr [eax]; cmp eax, 0x3c12fffd; std; jmp dword ptr [edx + 0x3c]; 
0x0016c533: dec dword ptr [eax]; jo 0x16c539; add byte ptr [ebx + ecx*4], dh; clc; jmp dword ptr [eax]; 
0x0016d2d3: dec dword ptr [eax]; ret; 
0x0016881b: dec dword ptr [eax]; rol dword ptr [eax], 0; and al, 0x6c; in eax, dx; jmp dword ptr [eax]; 
0x0016e11b: dec dword ptr [eax]; sbb al, byte ptr [ebx]; add byte ptr [edx + ebp*2 - 5], dl; call dword ptr [eax + 0x1a]; 
0x001139f1: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; lea edi, dword ptr [edi]; mov eax, 2; ret; 
0x0007b620: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x00042a64: dec dword ptr [ebp + 0x2b9b855]; add byte ptr [eax], al; add byte ptr [ecx - 0x4a75b], cl; jmp dword ptr [ebp - 0x75]; 
0x00042932: dec dword ptr [ebp + 0x2b9cc55]; add byte ptr [eax], al; add byte ptr [ecx - 0x4a75b], cl; jmp dword ptr [ebp - 0x75]; 
0x0016717b: dec dword ptr [ebp + 0x2c06fffd]; std; jmp dword ptr [esi + 0x2c]; 
0x00111234: dec dword ptr [ebp + 0x32cc83]; add byte ptr [ebx + 0x32ac8b], al; add byte ptr [edx], al; add esp, 0x18; pop ebx; ret; 
0x0012b39b: dec dword ptr [ebp + 0x39002674]; ret 0x850f; 
0x0007aa04: dec dword ptr [ebp + 0x44c83]; add al, ch; rcl byte ptr [edi], 8; add cl, ch; ret 0xffd2; 
0x00066a7c: dec dword ptr [ebp + 0x468b0076]; or byte ptr [ebx], ch; inc esi; add al, 0x89; ret 0xfac1; 
0x001185bc: dec dword ptr [ebp + 0x478b0076]; add al, 0x89; insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x0010ffcb: dec dword ptr [ebp + 0x5c8b3704]; and al, 0x10; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000cfd89: dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret 8; 
0x000260a2: dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000a62fc: dec dword ptr [ebp + 0x5ecce802]; add eax, 0x8d99eb00; add ch, al; ret; 
0x00095972: dec dword ptr [ebp + 0x5f103844]; ret; 
0x00079a71: dec dword ptr [ebp + 0xb6]; add al, ch; ret; 
0x00038a39: dec dword ptr [ebp + 0xb6]; add byte ptr [ebp + 0x75168bd2], al; sbb dh, dh; ret 0x7501; 
0x00119959: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x18], dl; or eax, 0x81000104; ret; 
0x00035cc9: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x74abdbbc], cl; push ebp; add byte ptr [ebp - 0x9ea8a40], al; ret 0x7501; 
0x0005dec1: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x000da2b9: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x7d]; 
0x00129be1: dec dword ptr [ebp + 0xb6]; add byte ptr [ecx - 0x7c73d427], cl; add byte ptr [eax + edi*8 - 1], ch; jmp ecx; 
0x0007213b: dec dword ptr [ebp + 0xf002674]; mov dh, 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x001676fb: dec dword ptr [ebp + ebx*2 + 0x5c86fffd]; std; jmp esi; 
0x00096825: dec dword ptr [ebp - 0x10cbb36d]; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x00063d34: dec dword ptr [ebp - 0x2776ff8a]; sub eax, dword ptr [ebx + ecx*4 - 0x13f2b0]; jmp eax; 
0x0016e4a3: dec dword ptr [ebp - 0x339bfffd]; sti; push dword ptr [eax]; sub eax, 0xccb40003; sti; call dword ptr [eax + 0x2d]; 
0x000bb134: dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x000eca2c: dec dword ptr [ebp - 0x4385d7d]; dec dword ptr [edi]; inc esp; ret 0x7c89; 
0x000ba01f: dec dword ptr [ebp - 0x43f737d]; jmp dword ptr [ebp - 0x75]; 
0x000e32fa: dec dword ptr [ebp - 0x47bbb7d]; dec dword ptr [edi]; inc esp; ret 0x45f6; 
0x000e217a: dec dword ptr [ebp - 0x47bf37d]; dec dword ptr [edi]; inc esp; ret 0x45f6; 
0x00022f8b: dec dword ptr [ebp - 0x47ffd98c]; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x0004bcd3: dec dword ptr [ebp - 0x4943b6d]; jmp dword ptr [ebp - 0x75]; 
0x0004b29f: dec dword ptr [ebp - 0x57c2fb0]; or dword ptr [edi], ecx; xchg eax, edi; ret 0xe083; 
0x000ea044: dec dword ptr [ebp - 0x72ffd98c]; mov esp, 0x27; add byte ptr [ebx - 0x18], dl; sbb eax, 0x810003fd; ret; 
0x00049723: dec dword ptr [ebp - 0x7400efac]; inc ebp; mov byte ptr [edi], cl; inc esp; ret 0x4589; 
0x000c069b: dec dword ptr [ebp - 0x76ffd98c]; fldcw word ptr [ebx]; mov word ptr [ebx - 0xe2948], es; jmp ecx; 
0x000fcbd3: dec dword ptr [ebp - 0x76ffd98c]; ret 0xf989; 
0x0007c25b: dec dword ptr [ebp - 0x76ffd98c]; sub al, 0x24; call dword ptr [esi + 0x1c]; 
0x000cc20c: dec dword ptr [ebp - 0x776ff8a]; pop esi; pop edi; pop ebp; ret; 
0x001280cf: dec dword ptr [ebp - 0x7b6837d]; dec dword ptr [edi]; inc esp; ret 0x4489; 
0x00058907: dec dword ptr [ebp - 0x7c2ffebc]; ret 0x8b04; 
0x000822c3: dec dword ptr [ebp - 0x7cffd98c]; ret 0xe901; 
0x000c5c65: dec dword ptr [ebp - 0xdd4636d]; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x000305d8: dec dword ptr [ebx + 0x12c2454]; ret 0x1f74; 
0x0005aaeb: dec dword ptr [ebx + 0x14890c55]; and al, 0xe8; stc; ret; 
0x0011abd0: dec dword ptr [ebx + 0x18b084d]; mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x0011acac: dec dword ptr [ebx + 0x20508b01]; mov dword ptr [esp + 4], edi; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x0014b37a: dec dword ptr [ebx + 0x24048900]; call 0x16f50; add esp, 0x18; pop ebx; ret; 
0x00047a34: dec dword ptr [ebx + 0x24048900]; call 0x424d0; add esp, 0x18; pop ebx; ret; 
0x0005470c: dec dword ptr [ebx + 0x24048900]; call 0x4c590; add esp, 0x18; pop ebx; ret; 
0x0006f074: dec dword ptr [ebx + 0x24048900]; call 0x56370; add esp, 0x18; pop ebx; ret; 
0x0006f0fc: dec dword ptr [ebx + 0x24048900]; call 0x5baa0; add esp, 0x18; pop ebx; ret; 
0x000eb907: dec dword ptr [ebx + 0x24048906]; call edi; 
0x0007925f: dec dword ptr [ebx + 0x2444c700]; and byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x16a4e73c], al; in eax, dx; ret 0xffff; 
0x00082dfa: dec dword ptr [ebx + 0x2904247c]; call 0x8b2c6290; insb byte ptr es:[edi], dx; and al, 8; add esp, 0xc; ret; 
0x00082e8a: dec dword ptr [ebx + 0x2904247c]; call 0x8b2c6320; insb byte ptr es:[edi], dx; and al, 8; add esp, 0xc; ret; 
0x00082eda: dec dword ptr [ebx + 0x2904247c]; call 0x8b2c6370; insb byte ptr es:[edi], dx; and al, 8; add esp, 0xc; ret; 
0x00082e4a: dec dword ptr [ebx + 0x2904247c]; ror byte ptr [ebx + 0x6c8b2434], 1; and al, 8; add esp, 0xc; ret; 
0x00103d88: dec dword ptr [ebx + 0x29282454]; ret 0x4489; 
0x00112650: dec dword ptr [ebx + 0x34890446]; and al, 0xff; push eax; adc byte ptr [ebx - 0x76e7dbb4], cl; ret 0x442b; 
0x0005f5d5: dec dword ptr [ebx + 0x34890875]; and al, 0xe8; lahf; ret; 
0x000a5415: dec dword ptr [ebx + 0x348de445]; mov esi, 0x8bdc552b; dec ebp; shr byte ptr [ecx], 1; ret 0x48b; 
0x000c6c40: dec dword ptr [ebx + 0x39142454]; ret 0x850f; 
0x00056100: dec dword ptr [ebx + 0x39242454]; ret 0x178b; 
0x000268c3: dec dword ptr [ebx + 0x440f241c]; ret 0x748b; 
0x00049727: dec dword ptr [ebx + 0x440f8845]; ret 0x4589; 
0x000bba1f: dec dword ptr [ebx + 0x4489104d]; and al, 4; mov dword ptr [esp], esi; call dword ptr [ecx + 0x20]; 
0x000f6ce1: dec dword ptr [ebx + 0x468b1c56]; sbb byte ptr [ecx], bh; ret 0x2176; 
0x000bdae7: dec dword ptr [ebx + 0x489104d]; and al, 0xff; push ecx; adc al, 0x89; ret 0x76e9; 
0x000c3847: dec dword ptr [ebx + 0x489d045]; and al, 0xe8; std; cmc; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x0011a76c: dec dword ptr [ebx + 0x4c892050]; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x000c8216: dec dword ptr [ebx + 0x4d8b0441]; mov al, 0x85; ror byte ptr [edi], 0x94; ret 0x8d89; 
0x000e229a: dec dword ptr [ebx + 0x5489c045]; and al, 4; mov dword ptr [esp], eax; call dword ptr [ebp - 0x28]; 
0x0012b73f: dec dword ptr [ebx + 0x568b1c46]; and byte ptr [ebx + 0x46894c4e], cl; add al, 0x29; ret 0x4689; 
0x001331c7: dec dword ptr [ebx + 0x5b082444]; ret; 
0x000d7735: dec dword ptr [ebx + 0x5b0a8902]; ret; 
0x000de0fb: dec dword ptr [ebx + 0x748b241c]; and al, 4; mov edi, dword ptr [esp + 8]; mov ebp, dword ptr [esp + 0xc]; add esp, 0x10; ret; 
0x00076e3f: dec dword ptr [ebx + 0x74c08500]; adc cl, byte ptr [ecx - 0x76d7dbac]; dec esp; and al, 0x2c; call eax; 
0x0006a584: dec dword ptr [ebx + 0x7c8b2434]; and al, 4; add esp, 8; ret; 
0x0002bfe5: dec dword ptr [ebx + 0xf142454]; mov esi, 0x831f244c; ret 0x8001; 
0x000e0df1: dec dword ptr [ebx + 0xf18246c]; inc edi; ret 0xc483; 
0x000a1b03: dec dword ptr [ebx + 0xf68246c]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00079bd2: dec dword ptr [ebx + 0xfc08500]; test dword ptr [esi], ecx; add al, byte ptr [eax]; add byte ptr [ebx - 0x1876d], cl; jmp dword ptr [ebp - 0x75]; 
0x001672bb: dec dword ptr [ebx + edi + 0x3a76fffd]; std; jmp esi; 
0x00056cd8: dec dword ptr [ebx - 0x109b73]; inc dword ptr [ecx]; ret 0xc031; 
0x0006141b: dec dword ptr [ebx - 0x10f4b]; dec dword ptr [ecx - 0xc743]; jmp dword ptr [ebp - 0x75]; 
0x000613fb: dec dword ptr [ebx - 0x10f4b]; dec dword ptr [ecx - 0xc743]; jmp dword ptr [ebp - 0x77]; 
0x001093a5: dec dword ptr [ebx - 0x12f45]; jmp dword ptr [ebp - 0x75]; 
0x000bcfba: dec dword ptr [ebx - 0x12f4b]; jmp dword ptr [ebp - 0x77]; 
0x00027291: dec dword ptr [ebx - 0x12f6d]; jmp dword ptr [ebp - 0x75]; 
0x000bc8e5: dec dword ptr [ebx - 0x12f73]; jmp dword ptr [ebp - 0x77]; 
0x000625ef: dec dword ptr [ebx - 0x1336b]; dec dword ptr [ecx - 0x10f7b]; jmp dword ptr [ebp - 0x75]; 
0x0005f917: dec dword ptr [ebx - 0x1336b]; inc dword ptr [ebp + 0x1c840fc0]; or eax, dword ptr [eax]; add byte ptr [ebx - 0xeb73], cl; inc dword ptr [ecx]; ret 0x9589; 
0x000c9054: dec dword ptr [ebx - 0x134d]; dec dword ptr [ebx - 0x9f6b]; jmp dword ptr [ebp - 0x39]; 
0x000c8157: dec dword ptr [ebx - 0x134d]; dec dword ptr [ebx - 0x9f6b]; jmp dword ptr [ebp - 0x75]; 
0x00101416: dec dword ptr [ebx - 0x1375]; jmp dword ptr [ebp - 0x75]; 
0x000bfd3a: dec dword ptr [ebx - 0x13f4b]; jmp dword ptr [ebp - 0x77]; 
0x000bf665: dec dword ptr [ebx - 0x13f73]; jmp dword ptr [ebp - 0x77]; 
0x00031759: dec dword ptr [ebx - 0x14e7db8c]; and byte ptr [ecx + 0x140c4], al; add byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x0003087b: dec dword ptr [ebx - 0x14e7dbac]; ret 0x4c7; 
0x0005f992: dec dword ptr [ebx - 0x15745]; dec dword ptr [ebx - 0xeb73]; jmp dword ptr [ebp - 0x75]; 
0x0004711e: dec dword ptr [ebx - 0x15745]; jmp dword ptr [ebp - 0x75]; 
0x000c05be: dec dword ptr [ebx - 0x1574d]; jmp dword ptr [ebp - 0x75]; 
0x000c2b6f: dec dword ptr [ebx - 0x15755]; jmp dword ptr [ebp - 0x75]; 
0x00022da9: dec dword ptr [ebx - 0x15775]; jmp dword ptr [ebp - 0x75]; 
0x00042a5e: dec dword ptr [ebx - 0x1577d]; dec dword ptr [ebp + 0x2b9b855]; add byte ptr [eax], al; add byte ptr [ecx - 0x4a75b], cl; jmp dword ptr [ebp - 0x75]; 
0x0004292c: dec dword ptr [ebx - 0x1577d]; dec dword ptr [ebp + 0x2b9cc55]; add byte ptr [eax], al; add byte ptr [ecx - 0x4a75b], cl; jmp dword ptr [ebp - 0x75]; 
0x0001a745: dec dword ptr [ebx - 0x1577d]; jmp dword ptr [ebp - 0x75]; 
0x00074f3b: dec dword ptr [ebx - 0x15b6d]; inc edi; add al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [edx]; 
0x00076a98: dec dword ptr [ebx - 0x177cefbb]; add dword ptr [ecx], eax; ret 0xd0f7; 
0x0004cacb: dec dword ptr [ebx - 0x18b7b]; dec dword ptr [ebx - 0x1bb6b]; jmp dword ptr [ebp - 0x75]; 
0x00052a2d: dec dword ptr [ebx - 0x19343]; jmp dword ptr [ebp - 0x75]; 
0x00053d2c: dec dword ptr [ebx - 0x19373]; dec dword ptr [ebx - 0x1a34b]; jmp dword ptr [ebp - 0x77]; 
0x00053f42: dec dword ptr [ebx - 0x19373]; dec dword ptr [ecx - 0x19b43]; dec dword ptr [ebx - 0x1a34b]; jmp dword ptr [ebp - 0x75]; 
0x0005269b: dec dword ptr [ebx - 0x19743]; jmp dword ptr [ebp - 0x75]; 
0x00052e19: dec dword ptr [ebx - 0x19b73]; dec dword ptr [ebx - 0x1df4b]; jmp dword ptr [ebp - 0x75]; 
0x00052e13: dec dword ptr [ebx - 0x19f6b]; dec dword ptr [ebx - 0x19b73]; dec dword ptr [ebx - 0x1df4b]; jmp dword ptr [ebp - 0x75]; 
0x00051f6c: dec dword ptr [ebx - 0x19f6b]; inc dword ptr [ecx]; ret 0x8d3b; 
0x000509f5: dec dword ptr [ebx - 0x19f6b]; inc dword ptr [ecx]; ret 0x9589; 
0x00053f4e: dec dword ptr [ebx - 0x1a34b]; jmp dword ptr [ebp - 0x75]; 
0x00053d32: dec dword ptr [ebx - 0x1a34b]; jmp dword ptr [ebp - 0x77]; 
0x0004e3af: dec dword ptr [ebx - 0x1af43]; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x77]; 
0x00053d20: dec dword ptr [ebx - 0x1af43]; dec dword ptr [ecx - 0x19f4b]; dec dword ptr [ebx - 0x19373]; dec dword ptr [ebx - 0x1a34b]; jmp dword ptr [ebp - 0x77]; 
0x0004e93a: dec dword ptr [ebx - 0x1af43]; jmp dword ptr [ebp - 0x77]; 
0x0004fd35: dec dword ptr [ebx - 0x1af6b]; inc edi; test dword ptr [esi + edi*8 - 1], ebx; call dword ptr [eax]; 
0x0004cccd: dec dword ptr [ebx - 0x1af6b]; jmp dword ptr [ebp - 0x77]; 
0x0004f55e: dec dword ptr [ebx - 0x1af73]; jmp dword ptr [ebp - 0x77]; 
0x0004cad1: dec dword ptr [ebx - 0x1bb6b]; jmp dword ptr [ebp - 0x75]; 
0x0004f18d: dec dword ptr [ebx - 0x1bf6b]; call ecx; 
0x0004f14a: dec dword ptr [ebx - 0x1bf73]; dec dword ptr [ecx - 0x18b6b]; inc dword ptr [ecx]; ret 0x9539; 
0x00052ffe: dec dword ptr [ebx - 0x1c743]; jmp dword ptr [ebp - 0x75]; 
0x0002585f: dec dword ptr [ebx - 0x1d373]; inc dword ptr [edi + 0x6b8cb]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a5587: dec dword ptr [ebx - 0x1d3e57ab]; add al, byte ptr [ebp + 0xfc789c0]; test byte ptr [esi + 0x1fffff7], dh; ret 0x5589; 
0x00052ebf: dec dword ptr [ebx - 0x1df43]; jmp dword ptr [ebp - 0x75]; 
0x00052e1f: dec dword ptr [ebx - 0x1df4b]; jmp dword ptr [ebp - 0x75]; 
0x0002560c: dec dword ptr [ebx - 0x1eb4b]; dec dword ptr [edi]; test cl, ah; add eax, dword ptr [eax]; add byte ptr [ebx - 0x1bf73], cl; jmp dword ptr [ebx]; 
0x000bdae1: dec dword ptr [ebx - 0x1ef7b]; dec dword ptr [ebx + 0x489104d]; and al, 0xff; push ecx; adc al, 0x89; ret 0x76e9; 
0x0004fe98: dec dword ptr [ebx - 0x20b6b]; inc dword ptr [ebp + 0x6840fc0]; sub al, 0; add byte ptr [ebx - 0x1cb73], cl; call ecx; 
0x0005095b: dec dword ptr [ebx - 0x21f73]; jmp dword ptr [ebp - 0x75]; 
0x000bdc3c: dec dword ptr [ebx - 0x2236b]; jmp dword ptr [ebp - 0x77]; 
0x000644cd: dec dword ptr [ebx - 0x2517afbb]; push -5; jmp dword ptr [ebp - 0x7d]; 
0x000c1e33: dec dword ptr [ebx - 0x28834b]; dec dword ptr [ebx - 0x288743]; ljmp ptr [ecx]; ret 0x48b; 
0x000c1e39: dec dword ptr [ebx - 0x288743]; ljmp ptr [ecx]; ret 0x48b; 
0x000bb6ac: dec dword ptr [ebx - 0x3336b]; jmp dword ptr [ebp - 0x77]; 
0x000ed3f5: dec dword ptr [ebx - 0x3f7ae3c0]; cmove eax, edx; ret; 
0x0003f241: dec dword ptr [ebx - 0x3f7c7fbb]; add dword ptr [ecx], edi; ret 0xd476; 
0x000f1615: dec dword ptr [ebx - 0x3fb73]; inc dword ptr [edi + 0x92b8df]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f17ae: dec dword ptr [ebx - 0x40b73]; inc dword ptr [edi + 0x6b8cb]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00112692: dec dword ptr [ebx - 0x4299fbba]; add dword ptr [eax], eax; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x00045711: dec dword ptr [ebx - 0x49b73]; jmp dword ptr [esi - 0x41]; 
0x0009a7d4: dec dword ptr [ebx - 0x6b743df4]; ret; 
0x000ed983: dec dword ptr [ebx - 0x74e3dbbc]; pop esp; and al, 0x24; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000703c4: dec dword ptr [ebx - 0x74e7db8c]; pop esp; and al, 0x14; mov dword ptr [edx + 0xb8], ecx; add esp, 0x1c; ret; 
0x000eb625: dec dword ptr [ebx - 0x74e7db8c]; pop esp; and al, 0x14; mov dword ptr gs:[eax], 0x16; add esp, 0x1c; ret; 
0x00019f36: dec dword ptr [ebx - 0x74e7dbbc]; push esp; and al, 0x1c; add esp, 0x24; ret; 
0x000ddf3d: dec dword ptr [ebx - 0x74fbdb84]; sbb al, 0x24; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; add esp, 8; ret; 
0x00025f85: dec dword ptr [ebx - 0x74fbdb8c]; sbb al, 0x24; add esp, 8; ret; 
0x0002e0d9: dec dword ptr [ebx - 0x74fbdb8c]; sbb al, 0x24; mov dword ptr gs:[eax], 0x16; or eax, 0xffffffff; add esp, 8; ret; 
0x001219c5: dec dword ptr [ebx - 0x76a7dbbc]; add dword ptr [ebx - 0xf775], ecx; jmp dword ptr [ebp - 0x39]; 
0x0012b6a1: dec dword ptr [ebx - 0x76bfdbb4]; inc ecx; adc al, 0xe9; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x0007a0fd: dec dword ptr [ebx - 0x76c3dbac]; push esp; and al, 4; mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp], edx; call eax; 
0x00078f01: dec dword ptr [ebx - 0x76c3dbac]; sub al, 0x24; mov dword ptr [esp + 4], edx; call eax; 
0x00079529: dec dword ptr [ebx - 0x76c3dbac]; xor al, 0x24; mov dword ptr [esp + 4], ebp; mov dword ptr [esp + 8], edx; call eax; 
0x000e12e4: dec dword ptr [ebx - 0x76c3dbbc]; ret 0xfac1; 
0x000dc3a2: dec dword ptr [ebx - 0x76c7db84]; fsubr dword ptr [ebx]; test byte ptr [ebx - 0xc6c40], bh; jmp eax; 
0x00103d17: dec dword ptr [ebx - 0x76dfdbb4]; ret 0x448b; 
0x000792ad: dec dword ptr [ebx - 0x76e3dbac]; or al, 0x24; mov dword ptr [esp + 4], edx; call eax; 
0x0006ada7: dec dword ptr [ebx - 0x76e3dbb4]; ret 0x84eb; 
0x0007b29a: dec dword ptr [ebx - 0x76ebdb8c]; pop es; mov ebx, dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000e9607: dec dword ptr [ebx - 0x78dfdbb4]; fistp qword ptr [eax + 0x140]; call dword ptr gs:[0x10]; 
0x00083b99: dec dword ptr [ebx - 0x7aa3dbbc]; ror byte ptr [edi], 0x84; ret 0; 
0x0009a066: dec dword ptr [ebx - 0x7aa7dbbc]; ror byte ptr [edi], 0x94; ret 0x7c83; 
0x0006951d: dec dword ptr [ebx - 0x7b76efaa]; and al, 0xc8; add byte ptr [eax], al; add byte ptr [ebx + 0x468b0c4e], cl; or byte ptr [ecx + 0x29cd29d5], cl; ret 0xe75; 
0x0004b27c: dec dword ptr [ebx - 0x7c9bdbac]; ret 0x3901; 
0x00127bd6: dec dword ptr [ebx - 0x7ce3dbac]; ret 0x8904; 
0x0011ce69: dec dword ptr [ebx - 0x7ce7dbac]; ret 0x3901; 
0x000294ef: dec dword ptr [ebx - 0x8b73]; dec dword ptr [ebx - 0x936b]; jmp dword ptr [esi - 0x7d]; 
0x0009687a: dec dword ptr [ebx - 0x8f6d]; jmp dword ptr [ebp - 0x75]; 
0x000294f5: dec dword ptr [ebx - 0x936b]; jmp dword ptr [esi - 0x7d]; 
0x000496c6: dec dword ptr [ebx - 0x977b]; dec dword ptr [ebx - 0x9b6b]; inc dword ptr [eax - 0xb443]; jmp dword ptr [edi - 0x73]; 
0x000496cc: dec dword ptr [ebx - 0x9b6b]; inc dword ptr [eax - 0xb443]; jmp dword ptr [edi - 0x73]; 
0x000c905a: dec dword ptr [ebx - 0x9f6b]; jmp dword ptr [ebp - 0x39]; 
0x000c815d: dec dword ptr [ebx - 0x9f6b]; jmp dword ptr [ebp - 0x75]; 
0x000e24d9: dec dword ptr [ebx - 0xab6b]; jmp dword ptr [ebp - 0x75]; 
0x000e230d: dec dword ptr [ebx - 0xab6b]; jmp dword ptr [ebp - 0x77]; 
0x000e2496: dec dword ptr [ebx - 0xab73]; jmp dword ptr [ebp - 0x75]; 
0x000e257a: dec dword ptr [ebx - 0xab7b]; jmp dword ptr [ebp - 0x75]; 
0x000e23f9: dec dword ptr [ebx - 0xab7b]; jmp dword ptr [ebp - 0x77]; 
0x000e23dd: dec dword ptr [ebx - 0xaf73]; inc dword ptr [edi + 0x6b8cb]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b2970: dec dword ptr [ebx - 0xaf73]; inc ecx; cli; add eax, 0x291ff8c1; ret 0xd26b; 
0x000e2422: dec dword ptr [ebx - 0xb36b]; dec dword ptr [ebx - 0xab7b]; jmp dword ptr [ebp - 0x77]; 
0x000e2307: dec dword ptr [ebx - 0xb373]; dec dword ptr [ebx - 0xab6b]; jmp dword ptr [ebp - 0x77]; 
0x000e22f9: dec dword ptr [ebx - 0xb77b]; dec dword ptr [ecx + 0x48e82404]; dec esp; dec dword ptr [ebx - 0xb373]; dec dword ptr [ebx - 0xab6b]; jmp dword ptr [ebp - 0x77]; 
0x000e3659: dec dword ptr [ebx - 0xbb6b]; jmp dword ptr [ebp - 0x75]; 
0x000e348d: dec dword ptr [ebx - 0xbb6b]; jmp dword ptr [ebp - 0x77]; 
0x000e3616: dec dword ptr [ebx - 0xbb73]; jmp dword ptr [ebp - 0x75]; 
0x000e36f7: dec dword ptr [ebx - 0xbb7b]; jmp dword ptr [ebp - 0x75]; 
0x000e3579: dec dword ptr [ebx - 0xbb7b]; jmp dword ptr [ebp - 0x77]; 
0x000e355d: dec dword ptr [ebx - 0xbf73]; inc dword ptr [edi + 0x6b8cb]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e35a2: dec dword ptr [ebx - 0xc36b]; dec dword ptr [ebx - 0xbb7b]; jmp dword ptr [ebp - 0x77]; 
0x000e3487: dec dword ptr [ebx - 0xc373]; dec dword ptr [ebx - 0xbb6b]; jmp dword ptr [ebp - 0x77]; 
0x000e3479: dec dword ptr [ebx - 0xc77b]; dec dword ptr [ecx - 0x3717dbfc]; cmp dh, bl; dec dword ptr [ebx - 0xc373]; dec dword ptr [ebx - 0xbb6b]; jmp dword ptr [ebp - 0x77]; 
0x0005d678: dec dword ptr [ebx - 0xd743]; jmp dword ptr [ebp - 0x77]; 
0x00123881: dec dword ptr [ebx - 0xdf7b]; dec dword ptr [ebx - 0xf775]; jmp dword ptr [ebp - 0x77]; 
0x0005ee86: dec dword ptr [ebx - 0xe343]; jmp dword ptr [ebp - 0x77]; 
0x0005fb3a: dec dword ptr [ebx - 0xe34b]; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x77]; 
0x0005cc95: dec dword ptr [ebx - 0xe34b]; jmp dword ptr [ebp - 0x77]; 
0x000613ef: dec dword ptr [ebx - 0xe373]; dec dword ptr [ecx - 0xcf4b]; dec dword ptr [ebx - 0x10f4b]; dec dword ptr [ecx - 0xc743]; jmp dword ptr [ebp - 0x77]; 
0x0005c64e: dec dword ptr [ebx - 0xe373]; jmp dword ptr [ebp - 0x77]; 
0x0005bf16: dec dword ptr [ebx - 0xe773]; jmp dword ptr [ebp - 0x77]; 
0x0012387b: dec dword ptr [ebx - 0xeb6b]; dec dword ptr [ebx - 0xdf7b]; dec dword ptr [ebx - 0xf775]; jmp dword ptr [ebp - 0x77]; 
0x0005f998: dec dword ptr [ebx - 0xeb73]; jmp dword ptr [ebp - 0x75]; 
0x00052e07: dec dword ptr [ebx - 0xf745]; dec dword ptr [ecx - 0x1936b]; dec dword ptr [ebx - 0x19f6b]; dec dword ptr [ebx - 0x19b73]; dec dword ptr [ebx - 0x1df4b]; jmp dword ptr [ebp - 0x75]; 
0x000c6522: dec dword ptr [ebx - 0xf745]; jmp dword ptr [ebp - 0x39]; 
0x0001cab5: dec dword ptr [ebx - 0xf745]; jmp dword ptr [ebp - 0x77]; 
0x0010aa3d: dec dword ptr [ebx - 0xf74d]; jmp dword ptr [ebp - 0x77]; 
0x0010ada9: dec dword ptr [ebx - 0xf74d]; jmp dword ptr [ebp - 0x7d]; 
0x000ea727: dec dword ptr [ebx - 0xf755]; jmp dword ptr [ebp - 0x75]; 
0x0005e6b9: dec dword ptr [ebx - 0xf76b]; inc dword ptr [ecx]; ret 0x9539; 
0x0005bf10: dec dword ptr [ebx - 0xf76d]; dec dword ptr [ebx - 0xe773]; jmp dword ptr [ebp - 0x77]; 
0x0005be8c: dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x39]; 
0x00051ff5: dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x000ea696: dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x7d]; 
0x000bcee6: dec dword ptr [ebx - 0xf775]; dec dword ptr [ecx - 0x12f73]; jmp dword ptr [ebp - 0x75]; 
0x000bfc66: dec dword ptr [ebx - 0xf775]; dec dword ptr [ecx - 0x13f73]; jmp dword ptr [ebp - 0x75]; 
0x0005ff2a: dec dword ptr [ebx - 0xf775]; jmp dword ptr [ebp - 0x75]; 
0x0010d9e7: dec dword ptr [ebx - 0xf775]; jmp dword ptr [ebp - 0x77]; 
0x00052a27: dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0x19343]; jmp dword ptr [ebp - 0x75]; 
0x00052695: dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0x19743]; jmp dword ptr [ebp - 0x75]; 
0x00053d1a: dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0x1af43]; dec dword ptr [ecx - 0x19f4b]; dec dword ptr [ebx - 0x19373]; dec dword ptr [ebx - 0x1a34b]; jmp dword ptr [ebp - 0x77]; 
0x0004e934: dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0x1af43]; jmp dword ptr [ebp - 0x77]; 
0x0004cea3: dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0x1af6b]; jmp dword ptr [ebp - 0x77]; 
0x0004f558: dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0x1af73]; jmp dword ptr [ebp - 0x77]; 
0x00052ff8: dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0x1c743]; jmp dword ptr [ebp - 0x75]; 
0x00052eb9: dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0x1df43]; jmp dword ptr [ebp - 0x75]; 
0x0005ee80: dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0xe343]; jmp dword ptr [ebp - 0x77]; 
0x0005f489: dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0xe34b]; jmp dword ptr [ebp - 0x77]; 
0x000613e9: dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0xe373]; dec dword ptr [ecx - 0xcf4b]; dec dword ptr [ebx - 0x10f4b]; dec dword ptr [ecx - 0xc743]; jmp dword ptr [ebp - 0x77]; 
0x0005c648: dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0xe373]; jmp dword ptr [ebp - 0x77]; 
0x0005e633: dec dword ptr [ebx - 0xf77d]; dec dword ptr [ecx - 0x10343]; jmp dword ptr [ebp - 0x75]; 
0x0005094f: dec dword ptr [ebx - 0xf77d]; dec dword ptr [ecx - 0x19b73]; dec dword ptr [ebx - 0x21f73]; jmp dword ptr [ebp - 0x75]; 
0x00053f36: dec dword ptr [ebx - 0xf77d]; dec dword ptr [ecx - 0x19f4b]; dec dword ptr [ebx - 0x19373]; dec dword ptr [ecx - 0x19b43]; dec dword ptr [ebx - 0x1a34b]; jmp dword ptr [ebp - 0x75]; 
0x0006140f: dec dword ptr [ebx - 0xf77d]; dec dword ptr [ecx - 0xcf4b]; dec dword ptr [ebx - 0x10f4b]; dec dword ptr [ecx - 0xc743]; jmp dword ptr [ebp - 0x75]; 
0x0005e254: dec dword ptr [ebx - 0xf77d]; dec dword ptr [ecx - 0xef43]; jmp dword ptr [ebp - 0x75]; 
0x00052e67: dec dword ptr [ebx - 0xf77d]; inc edi; test dword ptr [esi + edi*8 - 1], ebx; call dword ptr [eax]; 
0x00024632: dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x0004e2e6: dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x75]; 
0x0004e3b5: dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x77]; 
0x000665c8: dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x7d]; 
0x000e4322: dec dword ptr [ebx - 0xf77d]; jmp dword ptr [esi - 0x39]; 
0x00024398: dec dword ptr [ebx - 0xf77d]; push dword ptr [ecx]; jmp dword ptr [ebp - 0x39]; 
0x000c904e: dec dword ptr [ebx - 0xff7d]; dec dword ptr [ebx - 0x134d]; dec dword ptr [ebx - 0x9f6b]; jmp dword ptr [ebp - 0x39]; 
0x0010b0cd: dec dword ptr [ebx - 0xff7d]; jmp dword ptr [ebp - 0x39]; 
0x00167777: dec dword ptr [ebx*2 + 0x5d5cfffd]; std; call dword ptr [esi + 0x5c]; 
0x0007bee8: dec dword ptr [ecx + 0x18c48310]; pop ebx; ret; 
0x00124993: dec dword ptr [ecx + 0x18c483c2]; mov eax, edx; pop ebx; ret; 
0x000c51a3: dec dword ptr [ecx + 0x24c4830a]; pop ebx; pop esi; ret; 
0x000e3471: dec dword ptr [ecx + 0x26e82404]; ret 0xffff; 
0x0010b285: dec dword ptr [ecx + 0x2a8b65f1]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000fc77a: dec dword ptr [ecx + 0x2bf0847]; add byte ptr [eax], al; add byte ptr [edi + 0x92b8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e23d5: dec dword ptr [ecx + 0x2e82414]; sar edi, cl; dec dword ptr [ebx - 0xaf73]; inc dword ptr [edi + 0x6b8cb]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e6c02: dec dword ptr [ecx + 0x39c03130]; bnd ja 0xe6c18; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0010f48e: dec dword ptr [ecx + 0x39e82404]; adc bh, bh; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x000b3910: dec dword ptr [ecx + 0x3a8b65f1]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000e22ff: dec dword ptr [ecx + 0x48e82404]; dec esp; dec dword ptr [ebx - 0xb373]; dec dword ptr [ebx - 0xab6b]; jmp dword ptr [ebp - 0x77]; 
0x00042a1c: dec dword ptr [ecx + 0x4c892434]; and al, 4; call dword ptr [eax + 0x1c]; 
0x0011f559: dec dword ptr [ecx + 0x50890448]; adc al, 0x5b; ret; 
0x00072a5a: dec dword ptr [ecx + 0x50ff2434]; sbb byte ptr [ebx - 0x2b8a0008], al; add esp, 0x18; pop esi; ret; 
0x000fac86: dec dword ptr [ecx + 0x51e82404]; ret 0xfff1; 
0x00076e21: dec dword ptr [ecx + 0x54892414]; and al, 0x28; call dword ptr [ebp]; 
0x00076cdc: dec dword ptr [ecx + 0x54892414]; and al, 0x28; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x00042b3f: dec dword ptr [ecx + 0x54892434]; and al, 4; call dword ptr [eax + 0x1c]; 
0x00064196: dec dword ptr [ecx + 0x558b2056]; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x4589; 
0x00026a57: dec dword ptr [ecx + 0x5f5e5b10]; ret; 
0x0014b144: dec dword ptr [ecx + 0x5f5e5bf8]; ret; 
0x0011b435: dec dword ptr [ecx + 0x68b0846]; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x000b3904: dec dword ptr [ecx + 0x74c984e9]; test dword ptr [ebx - 0xf76d], ecx; dec dword ptr [ecx + 0x3a8b65f1]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000d8dd1: dec dword ptr [ecx + 0x788d2434]; add eax, ebp; ret; 
0x000251ce: dec dword ptr [ecx + 0x79e82434]; sbb eax, 0xc483ffff; adc al, 0x5b; pop esi; ret; 
0x00064d77: dec dword ptr [ecx + 0x9490]; add byte ptr [ebx - 0x6e76a7b8], cl; mov eax, 0x5b000000; ret; 
0x00105567: dec dword ptr [ecx + 0xf382444]; xchg eax, esp; ret 0xd285; 
0x00105d37: dec dword ptr [ecx + 0xf442444]; xchg eax, esp; ret 0xd285; 
0x0016c39b: dec dword ptr [ecx + ebp*2 + 2]; add byte ptr [edx + edi*2], dl; clc; jmp dword ptr [eax + 0x69]; 
0x0005f6dc: dec dword ptr [ecx - 0x10343]; dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0xe343]; jmp dword ptr [ebp - 0x77]; 
0x0005e639: dec dword ptr [ecx - 0x10343]; jmp dword ptr [ebp - 0x75]; 
0x000599f1: dec dword ptr [ecx - 0x10537b]; call dword ptr [ecx - 0x17]; 
0x00059a97: dec dword ptr [ecx - 0x10537b]; call dword ptr [edx - 0x17]; 
0x0005a789: dec dword ptr [ecx - 0x106b7b]; call dword ptr [ecx - 0x17]; 
0x0005b332: dec dword ptr [ecx - 0x106b7b]; call dword ptr [edx - 0x17]; 
0x000625f5: dec dword ptr [ecx - 0x10f7b]; jmp dword ptr [ebp - 0x75]; 
0x00056cd2: dec dword ptr [ecx - 0x111b73]; dec dword ptr [ebx - 0x109b73]; inc dword ptr [ecx]; ret 0xc031; 
0x000570df: dec dword ptr [ecx - 0x112373]; dec dword ptr [ecx - 0x76f7db84]; xor al, 0x24; call dword ptr [eax + 0x1c]; 
0x000bceec: dec dword ptr [ecx - 0x12f73]; jmp dword ptr [ebp - 0x75]; 
0x000bfc6c: dec dword ptr [ecx - 0x13f73]; jmp dword ptr [ebp - 0x75]; 
0x000d72df: dec dword ptr [ecx - 0x16f4b]; jmp dword ptr [esi - 0x70]; 
0x000560f7: dec dword ptr [ecx - 0x17dbdbac]; fisttp word ptr [ebp + edi*8 + 0x24548bff]; and al, 0x39; ret 0x178b; 
0x000fe243: dec dword ptr [ecx - 0x17fbdbbc]; ret; 
0x0004e81b: dec dword ptr [ecx - 0x18b6b]; inc dword ptr [ecx]; ret 0x9539; 
0x00052a21: dec dword ptr [ecx - 0x18b7b]; dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0x19343]; jmp dword ptr [ebp - 0x75]; 
0x0005268f: dec dword ptr [ecx - 0x18b7b]; dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0x19743]; jmp dword ptr [ebp - 0x75]; 
0x00052ff2: dec dword ptr [ecx - 0x18b7b]; dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0x1c743]; jmp dword ptr [ebp - 0x75]; 
0x00050f37: dec dword ptr [ecx - 0x18b7b]; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x75]; 
0x00052ead: dec dword ptr [ecx - 0x18b7b]; dec dword ptr [edi]; test ebp, esp; ret; 
0x00052e0d: dec dword ptr [ecx - 0x1936b]; dec dword ptr [ebx - 0x19f6b]; dec dword ptr [ebx - 0x19b73]; dec dword ptr [ebx - 0x1df4b]; jmp dword ptr [ebp - 0x75]; 
0x00053f48: dec dword ptr [ecx - 0x19b43]; dec dword ptr [ebx - 0x1a34b]; jmp dword ptr [ebp - 0x75]; 
0x00050955: dec dword ptr [ecx - 0x19b73]; dec dword ptr [ebx - 0x21f73]; jmp dword ptr [ebp - 0x75]; 
0x00053d26: dec dword ptr [ecx - 0x19f4b]; dec dword ptr [ebx - 0x19373]; dec dword ptr [ebx - 0x1a34b]; jmp dword ptr [ebp - 0x77]; 
0x00053f3c: dec dword ptr [ecx - 0x19f4b]; dec dword ptr [ebx - 0x19373]; dec dword ptr [ecx - 0x19b43]; dec dword ptr [ebx - 0x1a34b]; jmp dword ptr [ebp - 0x75]; 
0x0004fe42: dec dword ptr [ecx - 0x19f6b]; jmp dword ptr [ebp - 0x77]; 
0x0002a9b9: dec dword ptr [ecx - 0x1b37b]; jmp dword ptr [ebp - 0x75]; 
0x00053666: dec dword ptr [ecx - 0x20f73]; inc edi; add al, 0x24; add byte ptr cs:[eax], al; add byte ptr [ecx - 0x17fbdbbc], cl; ret; 
0x0012e4f1: dec dword ptr [ecx - 0x2917dbfc]; push esp; clc; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x0005f6a7: dec dword ptr [ecx - 0x2f17dbcc]; ret 0; 
0x00165deb: dec dword ptr [ecx - 0x32]; cld; jmp esi; 
0x000e347f: dec dword ptr [ecx - 0x3717dbfc]; cmp dh, bl; dec dword ptr [ebx - 0xc373]; dec dword ptr [ebx - 0xbb6b]; jmp dword ptr [ebp - 0x77]; 
0x000bc910: dec dword ptr [ecx - 0x3817dbf4]; test al, 0xff; inc dword ptr [ebp - 0x147bf040]; add al, byte ptr [eax]; add byte ptr [ebx - 0x12f73], cl; jmp dword ptr [ebp - 0x7d]; 
0x000625e1: dec dword ptr [ecx - 0x3917dbfc]; add dword ptr [ecx], ecx; add byte ptr [ebx - 0x15775], cl; dec dword ptr [ebx - 0x1336b]; dec dword ptr [ecx - 0x10f7b]; jmp dword ptr [ebp - 0x75]; 
0x00055df7: dec dword ptr [ecx - 0x3f17dbcc]; in eax, 0; add byte ptr [ecx - 0x7cf57416], cl; ret 0x8d04; 
0x000e7a9d: dec dword ptr [ecx - 0x47207829]; rol byte ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e7b5d: dec dword ptr [ecx - 0x47207829]; rol byte ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ec4c4: dec dword ptr [ecx - 0x4c17dbfc]; and al, 0xf8; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x77]; 
0x00166563: dec dword ptr [ecx - 0x56000328]; fdivr st(4); dec ecx; fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x000fdbb6: dec dword ptr [ecx - 0x5e17dbfc]; inc ebp; inc dword ptr [ebp - 0x76eb8b40]; ret 0x848b; 
0x00109975: dec dword ptr [ecx - 0x72cbdbac]; xchg eax, ebx; call eax; 
0x0010f484: dec dword ptr [ecx - 0x72fbdbbc]; xor dword ptr [ebp - 0x2d], 0xfffffffb; dec dword ptr [ecx + 0x39e82404]; adc bh, bh; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x0007c2ac: dec dword ptr [ecx - 0x74fbdbac]; inc esi; and al, 0x89; add al, 0x24; call dword ptr [esi + 0x20]; 
0x00126ca8: dec dword ptr [ecx - 0x74fbdbac]; push esp; and al, 0x1c; mov eax, dword ptr [eax + 0x1a0]; mov dword ptr [esp], edx; call eax; 
0x0007bbdb: dec dword ptr [ecx - 0x74fbdbbc]; add dword ptr [eax - 0x76ffffe7], 4; and al, 0xe8; bound ecx, qword ptr [eax]; std; jmp dword ptr [ebp - 0x7d]; 
0x000bd170: dec dword ptr [ecx - 0x74fbdbbc]; inc esi; add al, 0x8b; add al, 0x38; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x0004299c: dec dword ptr [ecx - 0x757bf039]; add byte ptr [eax], al; add byte ptr [ebx - 0x4af6b], cl; ljmp ptr [ecx]; ret 0xbd83; 
0x001127a2: dec dword ptr [ecx - 0x76e3dbb4]; push esp; and al, 8; mov dword ptr [esp + 4], 5; mov dword ptr [esp], edi; call dword ptr [eax]; 
0x0011eae8: dec dword ptr [ecx - 0x76f7db84]; push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0xc]; 
0x000570e5: dec dword ptr [ecx - 0x76f7db84]; xor al, 0x24; call dword ptr [eax + 0x1c]; 
0x0011a78a: dec dword ptr [ecx - 0x76fbdbb4]; adc al, 0x24; call dword ptr [ebp + 0x10]; 
0x000568ca: dec dword ptr [ecx - 0x76fbdbb4]; xor al, 0x24; call dword ptr [eax + 0x1c]; 
0x000bb809: dec dword ptr [ecx - 0x76fbdbbc]; adc al, 0x24; call edi; 
0x000d909a: dec dword ptr [ecx - 0x783e7606]; fistp qword ptr [eax + 0xd0]; call dword ptr gs:[0x10]; 
0x000d90c6: dec dword ptr [ecx - 0x783e7606]; fistp qword ptr [eax + 0xd2]; call dword ptr gs:[0x10]; 
0x000db4ad: dec dword ptr [ecx - 0x7a2dcefa]; ror byte ptr [edi], 0x94; ret 0xc481; 
0x0011da92: dec dword ptr [ecx - 0x7af0f3aa]; pop ebx; add dword ptr [eax], eax; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x75]; 
0x000488d1: dec dword ptr [ecx - 0x7bf07fb3]; ret; 
0x0006296a: dec dword ptr [ecx - 0x7c7b6e8c]; ret 0x8301; 
0x000aab4b: dec dword ptr [ecx - 0x7ce3dbac]; ret 0x8008; 
0x0010e894: dec dword ptr [ecx - 0x7cf57406]; ret 0x8d04; 
0x0010dbc8: dec dword ptr [ecx - 0x7cf5740e]; ret 0x8d04; 
0x000e3555: dec dword ptr [ecx - 0x7d17dbec]; sar edi, -1; mov ecx, dword ptr [ebp - 0xc0]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000b296a: dec dword ptr [ecx - 0xab73]; dec dword ptr [ebx - 0xaf73]; inc ecx; cli; add eax, 0x291ff8c1; ret 0xd26b; 
0x001230a3: dec dword ptr [ecx - 0xbb6b]; jmp dword ptr [esi - 0x39]; 
0x00061421: dec dword ptr [ecx - 0xc743]; jmp dword ptr [ebp - 0x75]; 
0x00061401: dec dword ptr [ecx - 0xc743]; jmp dword ptr [ebp - 0x77]; 
0x000fac80: dec dword ptr [ecx - 0xcb73]; dec dword ptr [ecx + 0x51e82404]; ret 0xfff1; 
0x00061415: dec dword ptr [ecx - 0xcf4b]; dec dword ptr [ebx - 0x10f4b]; dec dword ptr [ecx - 0xc743]; jmp dword ptr [ebp - 0x75]; 
0x000613f5: dec dword ptr [ecx - 0xcf4b]; dec dword ptr [ebx - 0x10f4b]; dec dword ptr [ecx - 0xc743]; jmp dword ptr [ebp - 0x77]; 
0x0005be7d: dec dword ptr [ecx - 0xe773]; jmp dword ptr [ebp - 0x75]; 
0x0005f631: dec dword ptr [ecx - 0xef43]; dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0xe343]; jmp dword ptr [ebp - 0x77]; 
0x0005e25a: dec dword ptr [ecx - 0xef43]; jmp dword ptr [ebp - 0x75]; 
0x000b9831: dec dword ptr [ecx]; ret 0x850f; 
0x00053710: dec dword ptr [ecx]; ret 0x9588; 
0x000e5e11: dec dword ptr [ecx]; ror byte ptr [ecx - 0x3fcef7bf], 1; pop ebx; ret; 
0x000e5e78: dec dword ptr [ecx]; ror dword ptr [ecx - 0x3fcef7b8], 1; pop ebx; ret; 
0x000eee43: dec dword ptr [edi]; add byte ptr [eax], al; or eax, esi; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x00031163: dec dword ptr [edi]; add byte ptr [ecx], cl; ret 0x5489; 
0x0015afa9: dec dword ptr [edi]; cld; jmp dword ptr [esi]; 
0x00056f18: dec dword ptr [edi]; dec ebp; ret 0xc701; 
0x00073971: dec dword ptr [edi]; dec ecx; ret 0x4489; 
0x00043426: dec dword ptr [edi]; dec esp; ret 0x8503; 
0x00097b70: dec dword ptr [edi]; inc ebp; ret 0x748d; 
0x000b9a83: dec dword ptr [edi]; inc ebp; ret 0x81c3; 
0x000b9944: dec dword ptr [edi]; inc ebp; ret 0x8dc3; 
0x0010ac9a: dec dword ptr [edi]; inc ebp; ret 0x95e9; 
0x000a7925: dec dword ptr [edi]; inc ebp; ret 0xa5eb; 
0x00046629: dec dword ptr [edi]; inc ebp; ret 0xbd89; 
0x000ca432: dec dword ptr [edi]; inc ebp; ret 0xc483; 
0x00145729: dec dword ptr [edi]; inc esi; ret 0x5d5e; 
0x0007cbbb: dec dword ptr [edi]; inc esi; ret 0xbfeb; 
0x001280d5: dec dword ptr [edi]; inc esp; ret 0x4489; 
0x000e2180: dec dword ptr [edi]; inc esp; ret 0x45f6; 
0x001242fb: dec dword ptr [edi]; inc esp; ret 0x508d; 
0x000eca32: dec dword ptr [edi]; inc esp; ret 0x7c89; 
0x0007b511: dec dword ptr [edi]; inc esp; ret 0x8389; 
0x0005072f: dec dword ptr [edi]; inc esp; ret 0x8b; 
0x0007ad86: dec dword ptr [edi]; inc esp; ret 0xc483; 
0x00051f7a: dec dword ptr [edi]; inc esp; ret 0xc985; 
0x0005d393: dec dword ptr [edi]; lahf; sar byte ptr [ecx + 1], 0x29; mov edi, 0xfffef885; jmp dword ptr [ebp]; 
0x0011aa8b: dec dword ptr [edi]; mov bh, 0x56; or ah, byte ptr [esi + 0x39]; push ebp; ret 0x850f; 
0x0001cbd9: dec dword ptr [edi]; mov dh, 0xca; test dl, dl; cmovns eax, ecx; ret; 
0x0004cb68: dec dword ptr [edi]; mov dh, 0xd2; mov eax, ebx; sub eax, dword ptr [ebx + edx*4 - 0x15647c]; jmp eax; 
0x0005a70d: dec dword ptr [edi]; mov es, word ptr [ebx]; ret; 
0x0004661b: dec dword ptr [edi]; mov esi, 0x89c78901; ret 0xefc1; 
0x0007e2e4: dec dword ptr [edi]; mov esp, 0xf042444; inc esp; ret 0xc083; 
0x00038348: dec dword ptr [edi]; mov fs, word ptr [ebp - 0x76000002]; ret 0x18e9; 
0x000376b3: dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0012299e: dec dword ptr [edi]; test al, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0xf775], cl; push dword ptr [ecx]; jmp dword ptr [ebp - 0x39]; 
0x0007c43e: dec dword ptr [edi]; test byte ptr [eax + eax - 0x8be0000], dl; ret 3; 
0x0007c41b: dec dword ptr [edi]; test byte ptr [edx - 0x8ffffff], dl; ret 3; 
0x0005e45e: dec dword ptr [edi]; test byte ptr [edx], dh; sub al, 0; add byte ptr [ebx - 0x15775], cl; jmp dword ptr [ebp - 0x75]; 
0x0012b33c: dec dword ptr [edi]; test byte ptr [esi - 0x76000002], dl; ret 0xfac1; 
0x00025612: dec dword ptr [edi]; test cl, ah; add eax, dword ptr [eax]; add byte ptr [ebx - 0x1bf73], cl; jmp dword ptr [ebx]; 
0x00122dd7: dec dword ptr [edi]; test dl, bl; add byte ptr [eax], al; add byte ptr [ebx - 0xf76d], cl; push dword ptr [ecx]; jmp dword ptr [ebp - 0x39]; 
0x0012fa89: dec dword ptr [edi]; test dword ptr [eax], esi; add eax, dword ptr [eax]; add byte ptr [ebp - 0x48a4f45], cl; jmp dword ptr [esi + 0xf]; 
0x0007ddef: dec dword ptr [edi]; test dword ptr [ebp + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x00051fef: dec dword ptr [edi]; test dword ptr [ebx], ebx; test al, 0xff; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x00050f31: dec dword ptr [edi]; test dword ptr [edi - 0x7600001c], ecx; test dword ptr [esi + edi*8 - 1], esi; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x75]; 
0x0007defa: dec dword ptr [edi]; test dword ptr [edx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x000d9f86: dec dword ptr [edi]; test dword ptr [edx], ebx; add eax, dword ptr [eax]; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x7d]; 
0x000e29e5: dec dword ptr [edi]; test dword ptr [esi + edi*8 + 0x568bffff], ecx; sbb al, 0xf6; ret 0x7501; 
0x000e186d: dec dword ptr [edi]; test dword ptr [esi + edi*8 + 0x568bffff], esp; sbb al, 0xf6; ret 0x7501; 
0x000b7a05: dec dword ptr [edi]; test dword ptr [esi], ecx; add dword ptr [eax], eax; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x000f5065: dec dword ptr [edi]; test dword ptr [esi], edx; add dword ptr [eax], eax; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x00052eb3: dec dword ptr [edi]; test ebp, esp; ret; 
0x0004a981: dec dword ptr [edi]; xchg eax, ebp; ret 0xb60f; 
0x000db47d: dec dword ptr [edi]; xchg eax, esp; ret 0x34eb; 
0x000714e7: dec dword ptr [edi]; xchg eax, esp; ret 0x57e9; 
0x00073a28: dec dword ptr [edi]; xchg eax, esp; ret 0x6c89; 
0x0006c369: dec dword ptr [edi]; xchg eax, esp; ret 0x7c89; 
0x00050c04: dec dword ptr [edi]; xchg eax, esp; ret 0xb60f; 
0x00047cce: dec dword ptr [edi]; xchg eax, esp; ret 0xd284; 
0x000484d2: dec dword ptr [edi]; xchg eax, esp; ret 0xf7e9; 
0x001674fb: dec dword ptr [edx + 0x4b]; std; call eax; 
0x0016edc3: dec dword ptr [edx + eax*4 + 0x6d540002]; cld; jmp esp; 
0x001689ab: dec dword ptr [edx + ecx*8 - 0x5d8c0000]; in eax, dx; call esp; 
0x00169f9b: dec dword ptr [edx + edx*2 + 0x44240001]; int1; jmp esp; 
0x0016d9d3: dec dword ptr [edx + esi*8 - 0x6a0bfffe]; cli; jmp esp; 
0x00167227: dec dword ptr [edx - 0x150002d2]; std; call esp; 
0x00059873: dec dword ptr [edx]; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x8589; 
0x000f3082: dec dword ptr [edx]; add byte ptr [ecx - 0x8fbdb8c], cl; ret 0xff80; 
0x00167c4b: dec dword ptr [esi + edi*2]; add ah, al; xor al, 0xeb; jmp dword ptr [eax + 0x7e]; 
0x00168b7b: dec dword ptr [esi + edx*8 - 0x26fc0000]; out dx, al; call eax; 
0x00166a7b: dec dword ptr [esi - 6]; cld; call esp; 
0x0016d2e3: dec dword ptr [esp + eax*8 + 2]; add byte ptr [ebp + edx*8 - 7], dh; jmp dword ptr [eax - 0x3c]; 
0x0016905b: dec dword ptr [esp + esi*8]; add byte ptr [esi + edi*8 - 0x11], al; jmp dword ptr [eax - 0xc]; 
0x0016e9ac: dec eax; aaa; add al, byte ptr [eax]; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; jmp eax; 
0x00173148: dec eax; aas; add byte ptr [eax], al; and al, 0; in al, dx; jmp dword ptr [ecx]; 
0x000b84a5: dec eax; adc al, 0xf; xchg eax, esp; ret 0xd284; 
0x00187598: dec eax; adc bl, dh; call dword ptr [ebx]; 
0x00094c42: dec eax; adc byte ptr [eax + 0x448b1470], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000917bc: dec eax; adc byte ptr [eax + 0x448b1470], cl; and al, 8; pop esi; ret; 
0x00094be1: dec eax; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x0009175e: dec eax; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x0011f55b: dec eax; add al, 0x89; push eax; adc al, 0x5b; ret; 
0x0006b5fa: dec eax; add al, 0x8b; dec eax; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x000311e4: dec eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00183ab9: dec eax; add dword ptr [eax], eax; inc esp; push ebx; int1; call dword ptr [eax]; 
0x00174278: dec eax; add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; or cl, byte ptr gs:[esi]; add al, 0xc6; ret; 
0x0018c0e4: dec eax; add dword ptr [ebx], 0x58; xchg byte ptr [edx], al; or cl, byte ptr [0xffffc604]; ret; 
0x001908c7: dec eax; add dword ptr [ebx], 0x69; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0019b2c0: dec eax; add dword ptr [ebx], 0x69; xchg byte ptr [edx], al; or cl, byte ptr [0xffffc604]; ret; 
0x00183ef6: dec eax; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0014046b: dec eax; add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x0013ec62: dec eax; add eax, 0x542b60f; sub eax, ecx; ret; 
0x000916d0: dec eax; add eax, 0x824448b; pop esi; ret; 
0x00094b43: dec eax; add eax, 0xc24448b; pop ebx; pop esi; ret; 
0x000d7dd4: dec eax; add esp, 0x4c; ret 0x1c; 
0x0011b5c9: dec eax; add esp, 0x4c; ret 8; 
0x0001a339: dec eax; add esp, 0x4c; ret; 
0x00071ed4: dec eax; and al, 0x5e; ret; 
0x0016b63b: dec eax; and eax, dword ptr [edx]; add ah, dl; or bh, dh; jmp eax; 
0x0016ed39: dec eax; cld; jmp dword ptr [eax + 3]; 
0x00134e43: dec eax; cld; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001362d3: dec eax; cld; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x0013be23: dec eax; cld; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x0003f8d8: dec eax; cmp al, 0x8b; inc eax; inc eax; ret; 
0x00172ff8: dec eax; cmp dword ptr [eax], eax; add byte ptr [ebp + 3], dh; in al, dx; call dword ptr [eax]; 
0x00194ad9: dec eax; cmp esi, esi; jmp dword ptr [edx]; 
0x00134eea: dec eax; dec dword ptr [eax + 0x448bff4a]; and al, 8; pop ebx; ret; 
0x0013636a: dec eax; dec dword ptr [eax - 0x2f7600b6]; pop ebx; ret; 
0x00099cf4: dec eax; dec ecx; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x001945f8: dec eax; dec edi; add al, byte ptr [eax]; pop edx; and dh, bh; call dword ptr [eax]; 
0x000e2304: dec eax; dec esp; dec dword ptr [ebx - 0xb373]; dec dword ptr [ebx - 0xab6b]; jmp dword ptr [ebp - 0x77]; 
0x00177b35: dec eax; fsubr st(6); jmp dword ptr [edx]; 
0x00168e28: dec eax; fucomi st(7); jmp eax; 
0x000e829e: dec eax; imul edi, edi, 0x89f189ff; ret 0xcb87; 
0x00195447: dec eax; inc edx; idiv bh; sbb al, 0xd; xor byte ptr [ecx - 0xa], al; jmp dword ptr [edx]; 
0x0003f898: dec eax; insb byte ptr es:[edi], dx; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00124cbc: dec eax; jmp dword ptr [esi - 0x7d]; 
0x00094bff: dec eax; jnp 0x5b15704a; pop esi; ret; 
0x0009177c: dec eax; jnp 0x5e113bc7; ret; 
0x00168973: dec eax; leave; add byte ptr [eax], al; popfd; in eax, dx; jmp dword ptr [eax]; 
0x0018e248: dec eax; lock add dword ptr [eax], eax; test byte ptr [esi + esi*8], cl; call dword ptr [edx]; 
0x001918c8: dec eax; mov al, 0xf6; call dword ptr [ecx]; 
0x0009152b: dec eax; mov byte ptr [ecx], cl; add byte ptr [ecx + 0xc9355c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00197138: dec eax; mov cl, 0xf7; jmp dword ptr [esi]; 
0x0017a448: dec eax; mov dl, 0; add byte ptr [edx + edi*2], dh; out dx, eax; jmp dword ptr [esi]; 
0x0006d916: dec eax; mov dword ptr [esp], edx; call dword ptr [edx + 0x10]; 
0x0007b013: dec eax; mov dword ptr [esp], edx; mov dword ptr [esp + 8], ecx; lea ecx, dword ptr [edi + ebp + 1]; mov dword ptr [esp + 4], ecx; call eax; 
0x0017aa48: dec eax; mov eax, 0x89e40000; out dx, eax; call dword ptr [edx]; 
0x0018b148: dec eax; mov edi, 0x4f640001; cmc; call dword ptr [ebx]; 
0x000de6fa: dec eax; or al, 0; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0016f18c: dec eax; or al, byte ptr [ebx]; add ah, al; xor al, 0xfe; jmp dword ptr [eax + 0x24]; 
0x00126bff: dec eax; or bl, ch; ret; 
0x0009841b: dec eax; or byte ptr [eax], bh; cmove eax, ecx; ret; 
0x0008060f: dec eax; or byte ptr [ebx + 0x5f5e24c4], al; pop ebp; ret; 
0x0006b5fd: dec eax; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x0018fa48: dec eax; or byte ptr [edx], al; add byte ptr [ebp + eax*2 - 0xa], dh; call dword ptr [ebx + 1]; 
0x001946d4: dec eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017908f: dec eax; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00183241: dec eax; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x00196fab: dec eax; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x001842c7: dec eax; or eax, dword ptr [ebx]; adc al, 0x10; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017569b: dec eax; or eax, dword ptr [ebx]; or dword ptr [edx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00192486: dec eax; or eax, dword ptr [ebx]; or eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00173757: dec eax; or eax, dword ptr [ebx]; sub byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00190ab7: dec eax; or eax, dword ptr [edx]; inc ecx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x001986f7: dec eax; or eax, dword ptr [edx]; mov byte ptr [0x41140e0a], al; ret; 
0x0018ebad: dec eax; or eax, dword ptr [edx]; mov byte ptr [edx], cl; push cs; adc al, 0x46; ret; 
0x00185706: dec eax; or eax, dword ptr [edx]; mov word ptr [edx], cs; push cs; adc al, 0x41; ret; 
0x0018996f: dec eax; or eax, dword ptr [edx]; pop ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001942b6: dec eax; or eax, dword ptr [edx]; pop esi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00192fc6: dec eax; or eax, dword ptr [edx]; push 0xa; push cs; adc al, 0x46; ret; 
0x001987b6: dec eax; or eax, dword ptr [edx]; ror byte ptr [edx], cl; push cs; adc al, 0x43; ret; 
0x0016fae9: dec eax; or eax, dword ptr [edx]; test byte ptr [esi], cl; adc al, 0x41; ret; 
0x00183e02: dec eax; or eax, dword ptr [edx]; xchg eax, ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018c20b: dec eax; or ebp, dword ptr [ecx + 0xa]; push cs; or al, 0x41; ret; 
0x00199c04: dec eax; or ebp, dword ptr [edi + 0xa]; ret; 
0x00197e37: dec eax; or ebp, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x0018bab1: dec eax; or ebp, dword ptr [edx + 0xa]; push cs; adc al, 0x43; ret; 
0x0018d68d: dec eax; or ebp, dword ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x00199c95: dec eax; or ebp, dword ptr [esi + ecx + 8]; inc esp; ret; 
0x0017c32d: dec eax; or ebx, dword ptr [edx + 0xe]; add al, 0xc6; ret; 
0x00179ded: dec eax; or ecx, dword ptr [esi + 0xa]; ret; 
0x0019944a: dec eax; or edi, dword ptr [ecx + 0xa]; push cs; adc al, 0x43; ret; 
0x00178fa9: dec eax; or edi, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x001973b8: dec eax; or edi, dword ptr [esi + 0xa]; ret; 
0x0019409a: dec eax; or edx, dword ptr [eax + eax]; add byte ptr [eax + 0x4c00024e], ah; adc al, 0xf7; call dword ptr [edx + 3]; 
0x0019b96f: dec eax; or edx, dword ptr [edi + 0xa]; push cs; or al, 0x43; ret; 
0x00197819: dec eax; or edx, dword ptr [edi + 0xe]; adc al, 0x43; ret; 
0x0018571d: dec eax; or edx, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x0018770d: dec eax; or edx, dword ptr [esi + 0xa]; ret; 
0x001741dd: dec eax; or esi, dword ptr [esi + 0xa]; ret; 
0x0019a5c1: dec eax; or esp, dword ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x00197f8b: dec eax; or esp, dword ptr [ecx + 0xe]; adc al, 0x41; ret; 
0x0019903f: dec eax; or esp, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x001973a0: dec eax; or esp, dword ptr [esi + 0xa]; ret; 
0x0016d953: dec eax; out dx, eax; add al, byte ptr [eax]; inc esp; xchg dl, bh; jmp dword ptr [eax]; 
0x00064d7f: dec eax; pop eax; mov dword ptr [ecx + 0xb8], edx; pop ebx; ret; 
0x00199ca8: dec eax; pop ebp; clc; call dword ptr [eax]; 
0x000a7ba5: dec eax; pop ebx; ret; 
0x0012e724: dec eax; pop es; add byte ptr [ecx - 0x76f3dba4], cl; ret; 
0x00094b83: dec eax; pop es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091710: dec eax; pop es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001403af: dec eax; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x0013ec02: dec eax; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x00199d78: dec eax; pop esi; clc; jmp dword ptr [ebx]; 
0x0002e798: dec eax; pop ss; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00094d29: dec eax; pop ss; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091886: dec eax; pop ss; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000e5023: dec eax; push eax; mov dword ptr [eax + 0x54], edx; xor eax, eax; pop ebx; ret; 
0x0009482b: dec eax; push ebp; or dword ptr [eax], eax; add ecx, 0xc60d5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0016c003: dec eax; push edi; add al, byte ptr [eax]; adc al, 0x37; clc; jmp esp; 
0x0016a093: dec eax; push edi; add dword ptr [eax], eax; aam 0x54; int1; jmp esp; 
0x00094b63: dec eax; push es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000916f0: dec eax; push es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0014048b: dec eax; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x0013ec72: dec eax; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x00179b88: dec eax; pushal; out dx, eax; call dword ptr [eax]; 
0x00040c03: dec eax; ret 0x5c8b; 
0x00040d2e: dec eax; ret 0xc483; 
0x0001d70b: dec eax; ret 0xe083; 
0x000ecdaf: dec eax; ret 0xf8c1; 
0x001310a3: dec eax; ret 0xff3; 
0x001298d6: dec eax; ret; 
0x0016d273: dec eax; rol dword ptr [edx], 0; mov ah, 0xcf; stc; jmp eax; 
0x00170c48: dec eax; sbb al, byte ptr [eax]; add byte ptr [edx - 0x15], dl; jmp dword ptr [eax]; 
0x00114aca: dec eax; sbb byte ptr [eax + 1], bh; add esp, 8; ret; 
0x00094cfb: dec eax; sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x00091868: dec eax; sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x000ca10a: dec eax; sbb cl, byte ptr [eax]; xor eax, eax; ret; 
0x0013c89a: dec eax; scasb al, byte ptr es:[edi]; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001722d8: dec eax; shr ebx, cl; jmp dword ptr [esi]; 
0x0016df91: dec eax; sti; call dword ptr [eax + 0x12]; 
0x00177f28: dec eax; sub bh, ch; call edx; 
0x000da727: dec eax; test byte ptr [eax + eax], 0x81; ret; 
0x0019018d: dec eax; test ebp, esi; jmp dword ptr [edx]; 
0x0001b324: dec ebp; aam 0x6b; ret 0x8d3c; 
0x00031ec6: dec ebp; adc al, 0x83; jmp dword ptr [eax]; 
0x00111d44: dec ebp; adc al, 0x89; dec esp; and al, 4; call dword ptr [edx]; 
0x0004c5ab: dec ebp; adc byte ptr [ebx + 0x7e800c7d], cl; inc esi; add byte ptr [ecx - 0x1cf73], cl; dec dword ptr [ebx - 0x1577d]; jmp dword ptr [ebp - 0x75]; 
0x000bdae9: dec ebp; adc byte ptr [ecx + 0x51ff2404], cl; adc al, 0x89; ret 0x76e9; 
0x000bba21: dec ebp; adc byte ptr [ecx - 0x76fbdbbc], cl; xor al, 0x24; call dword ptr [ecx + 0x20]; 
0x0016be15: dec ebp; add al, byte ptr [eax]; adc al, 0xc; clc; call esp; 
0x001944a1: dec ebp; add al, byte ptr [eax]; clc; and edi, esi; call dword ptr [eax]; 
0x00173fc1: dec ebp; add byte ptr [eax], al; cld; mov ch, 0xec; jmp dword ptr [ebx]; 
0x000aa8d7: dec ebp; add byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x00083662: dec ebp; add byte ptr [ebx - 0x776fb3c], al; pop esi; pop edi; pop ebp; ret; 
0x00169c65: dec ebp; add dword ptr [eax], eax; hlt; sub al, 0xf1; jmp esp; 
0x00183f35: dec ebp; add dword ptr [eax], eax; pop eax; outsb dx, byte ptr [esi]; int1; jmp dword ptr [edi]; 
0x0018df88: dec ebp; add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; jno 0x18df9e; add al, 0xc6; ret; 
0x0009c039: dec ebp; add eax, dword ptr [eax]; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x0005548f: dec ebp; add eax, dword ptr [ecx]; add byte ptr [ebx - 0x3fe6fe08], al; add esp, 0x18; pop ebx; ret; 
0x00101742: dec ebp; add esi, dword ptr [ebx + ecx*8 - 0x7d]; out dx, al; add al, 0x83; ret 0x8304; 
0x0019946d: dec ebp; clc; jmp dword ptr [ebx]; 
0x00003985: dec ebp; cmpsd dword ptr [esi], dword ptr es:[edi]; ret 0x49ec; 
0x00003984: dec ebp; dec ebp; cmpsd dword ptr [esi], dword ptr es:[edi]; ret 0x49ec; 
0x0012e6a9: dec ebp; dec ecx; pop es; add byte ptr [ecx - 0x76f3dba4], cl; ret; 
0x000b4e7d: dec ebp; fmul dword ptr [ecx + 0x5489240c]; and al, 4; call dword ptr [ebp - 0x34]; 
0x0017b3e8: dec ebp; imul bh; call dword ptr [eax]; 
0x0017b268: dec ebp; imul edi; call dword ptr [eax]; 
0x001242f7: dec ebp; in al, 0x83; clc; dec dword ptr [edi]; inc esp; ret 0x508d; 
0x000f9304: dec ebp; mov ah, 0x8b; inc ecx; or al, 0x89; ret 0xe283; 
0x0001a446: dec ebp; mov ah, 0xe8; ret; 
0x000c821b: dec ebp; mov al, 0x85; ror byte ptr [edi], 0x94; ret 0x8d89; 
0x00175b1d: dec ebp; mov bh, 0xee; jmp dword ptr [edx]; 
0x000752f0: dec ebp; mov bh, 0xfb; inc edi; add al, 0x24; ret 0x10; 
0x00083062: dec ebp; mov edi, dword ptr [esp + 0x40]; mov edx, ebx; sub edx, dword ptr [ebx + edi*4 - 0x11ff80]; jmp edx; 
0x000a5165: dec ebp; mov esp, 0x8301c083; ret 0x3901; 
0x00120f88: dec ebp; nop; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000de22f: dec ebp; or al, 0; xchg edi, ebx; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x000b4f1d: dec ebp; or al, 0x83; ret 0x8901; 
0x000c568b: dec ebp; or al, 0x87; fistp qword ptr [eax + 0xf1]; call dword ptr gs:[0x10]; 
0x0011aca5: dec ebp; or byte ptr [ebp - 0xa743], cl; dec dword ptr [ebx + 0x20508b01]; mov dword ptr [esp + 4], edi; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x0011abd2: dec ebp; or byte ptr [ebx + 0x20508b01], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x0012b450: dec ebp; or byte ptr [ecx + 0x9cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000488d3: dec ebp; or byte ptr [edi], 0x84; ret; 
0x0017d66c: dec ebp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00190f5e: dec ebp; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0017b0da: dec ebp; out dx, eax; jmp dword ptr [edx]; 
0x0002e2e2: dec ebp; pop ss; add byte ptr [edi + 0xb3b8d3], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001856b4: dec ebp; push cs; adc al, 0x41; ret; 
0x0017c5d3: dec ebp; push cs; add al, 0xc6; ret; 
0x0002772f: dec ebp; push cs; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x001745e2: dec ebp; push cs; or al, 0x43; ret; 
0x00025bbd: dec ebp; ret 0x518b; 
0x000a7e60: dec ebp; ret 0xc483; 
0x00056f1a: dec ebp; ret 0xc701; 
0x000ecfb1: dec ebp; rol byte ptr [edi + 0x6b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00191bd0: dec ebp; sal esi, 1; call dword ptr [eax]; 
0x000a5420: dec ebp; shr byte ptr [ecx], 1; ret 0x48b; 
0x001675ad: dec ebp; std; call eax; 
0x00167551: dec ebp; std; inc dword ptr [ebx + ecx*2 + 0x4c34fffd]; std; jmp esp; 
0x00167531: dec ebp; std; jmp dword ptr [eax + 0x4b]; 
0x001676d1: dec ebp; std; jmp dword ptr [eax + 0x4e]; 
0x001675bd: dec ebp; std; jmp dword ptr [eax]; 
0x001675d1: dec ebp; std; push dword ptr [eax + 0x4b]; std; jmp dword ptr [eax]; 
0x0002b8cf: dec ebp; syscall; 
0x0003c3dc: dec ebx; add al, 0; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x001941dd: dec ebx; add al, byte ptr [eax]; push ebp; sbb dh, bh; call dword ptr [eax]; 
0x000a7a2b: dec ebx; add byte ptr [eax], al; add bl, ch; ret 0xb48d; 
0x0007c87d: dec ebx; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00007965: dec ebx; add byte ptr [eax], al; pushal; clc; adc dword ptr [eax], eax; ret; 
0x000a70a1: dec ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x00171fe4: dec ebx; add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; imul ecx, dword ptr [edx], 0xe; add al, 0xc6; ret; 
0x00171f9c: dec ebx; add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; or cl, byte ptr [0xffffc604]; ret; 
0x0018cc24: dec ebx; add dword ptr [ebx], 0x53; xchg dword ptr [edx], eax; or cl, byte ptr gs:[esi]; add al, 0xc7; ret; 
0x00185c1d: dec ebx; add dword ptr [ebx], 0x59; xchg byte ptr [edx], al; add ah, byte ptr [edx + 0xe]; add al, 0xc6; ret; 
0x0016c0f9: dec ebx; clc; call dword ptr [eax]; 
0x000e2420: dec ebx; dec dword ptr [ebx - 0xb36b]; dec dword ptr [ebx - 0xab7b]; jmp dword ptr [ebp - 0x77]; 
0x00186211: dec ebx; fdivr st(1); jmp dword ptr [edx]; 
0x00087aa1: dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00183911: dec ebx; int1; jmp dword ptr [esi]; 
0x00149054: dec ebx; lea eax, dword ptr [eax + 9]; pop edi; ret; 
0x001486f4: dec ebx; lea eax, dword ptr [ecx + 0xa]; ret; 
0x00148034: dec ebx; lea eax, dword ptr [edi + 9]; pop edi; ret; 
0x00168e80: dec ebx; loope 0x168e72; push eax; call 0xe16d8e8a; out dx, eax; jmp dword ptr [eax]; 
0x0017150c: dec ebx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0017c89e: dec ebx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00183594: dec ebx; or edx, dword ptr [ebx + 0xe]; add al, 0xc6; ret; 
0x0017c429: dec ebx; or esi, dword ptr [ebx + 0xe]; add al, 0xc6; ret; 
0x0017301d: dec ebx; out 0xeb, al; jmp dword ptr [edx]; 
0x00178bdf: dec ebx; push cs; add al, 0xc6; ret; 
0x0018740d: dec ebx; push cs; or byte ptr [ebx + 0x40e5902], al; ret; 
0x00158cb4: dec ebx; ret 0xde9e; 
0x00171b6e: dec ebx; ret; 
0x001675b5: dec ebx; std; call dword ptr [eax + 0x4c]; 
0x001675b5: dec ebx; std; call dword ptr [eax + 0x4c]; std; call dword ptr [eax]; 
0x00167509: dec ebx; std; call dword ptr [eax - 0x6f0002b5]; dec ecx; std; jmp dword ptr [eax]; 
0x001674fd: dec ebx; std; call eax; 
0x0016746d: dec ebx; std; inc edx; dec ecx; std; call dword ptr [eax]; 
0x001675d5: dec ebx; std; jmp dword ptr [eax]; 
0x001674bd: dec ebx; std; jmp esp; 
0x00167555: dec ebx; std; push dword ptr [esp + ecx*2]; std; jmp esp; 
0x0017be29: dec ebx; xchg bh, ch; jmp dword ptr [edx]; 
0x0018c244: dec ebx; xchg byte ptr [edx], al; add dword ptr [ebx], 0x77; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00147bd9: dec ecx; adc byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x00147bf1: dec ecx; adc byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000d03cc: dec ecx; add al, 0xe8; mov al, byte ptr [0x81000599]; ret; 
0x00193bdd: dec ecx; add al, byte ptr [eax]; pushal; or al, 0xf7; call dword ptr [esi]; 
0x00009f7c: dec ecx; add byte ptr [eax], al; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0x11; 
0x00099cf5: dec ecx; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0000b125: dec ecx; add byte ptr [eax], al; jo 0xb112; add eax, dword ptr [eax]; ret; 
0x001759b9: dec ecx; add dword ptr [0x3870486], 2; mov cs, word ptr [edx]; ret; 
0x00190f89: dec ecx; add dword ptr [0x3870486], 3; fld dword ptr [edx + ecx]; ret; 
0x0018cb31: dec ecx; add dword ptr [0x3870486], 3; rol byte ptr [edx], 0xa; ret; 
0x00183bcd: dec ecx; add dword ptr [eax], eax; and byte ptr [ebp - 0xf], bl; call dword ptr [eax]; 
0x00089ae7: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; pop edi; ret; 
0x00089c47: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x00085707: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x00085867: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x00095811: dec ecx; and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], -0x40; ret; 
0x001280d3: dec ecx; clc; dec dword ptr [edi]; inc esp; ret 0x4489; 
0x00184e91: dec ecx; cld; call ebx; 
0x00169d18: dec ecx; das; int1; push dword ptr [eax + edi + 0x2f590001]; int1; jmp esp; 
0x0016656b: dec ecx; fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x00191661: dec ecx; fprem1; jmp dword ptr [edx]; 
0x00084a17: dec ecx; imul byte ptr [ecx]; ret 0x280f; 
0x0008640b: dec ecx; imul byte ptr [ecx]; ret 0xc301; 
0x00084b47: dec ecx; imul dword ptr [ecx]; ret 0x280f; 
0x0008656b: dec ecx; imul dword ptr [ecx]; ret 0xc301; 
0x0003f9b6: dec ecx; insb byte ptr es:[edi], dx; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x001838a5: dec ecx; int1; call dword ptr [ebx + 1]; 
0x0018383d: dec ecx; int1; call dword ptr [edx]; 
0x00165dec: dec ecx; into; cld; jmp esi; 
0x000c55de: dec ecx; into; xchg edi, ebx; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00158b91: dec ecx; jns 0x158b26; ret 0xf869; 
0x000854c7: dec ecx; ljmp ptr [ecx]; ret 0x280f; 
0x0008706b: dec ecx; ljmp ptr [ecx]; ret 0xc301; 
0x00173d44: dec ecx; mov dl, 0xec; call dword ptr [eax]; 
0x0016fcb2: dec ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001831c1: dec ecx; or cl, byte ptr [esi]; adc al, 0x44; ret; 
0x0017aeab: dec ecx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00185cbc: dec ecx; or ebx, dword ptr [ebp + 0xe]; add al, 0xc6; ret; 
0x001831bf: dec ecx; or ecx, dword ptr [ecx + 0xa]; push cs; adc al, 0x44; ret; 
0x0018968e: dec ecx; or edi, dword ptr [edx + ecx + 0xe]; adc al, 0x43; ret; 
0x0018c46a: dec ecx; or edx, dword ptr [esi + 0xa]; ret; 
0x00168ad1: dec ecx; out dx, al; call dword ptr [eax - 0x2d]; 
0x0012e6aa: dec ecx; pop es; add byte ptr [ecx - 0x76f3dba4], cl; ret; 
0x00089c87: dec ecx; pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, dword ptr [edx + 0xe]; ret; 
0x000858a7: dec ecx; pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x00178d23: dec ecx; push cs; add al, 0xc6; ret; 
0x0018da42: dec ecx; push cs; or al, 0x43; ret; 
0x00182e6f: dec ecx; push cs; or byte ptr [ebx + 0x40e5902], al; ret; 
0x00089c67: dec ecx; push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x00085887: dec ecx; push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x00056bcc: dec ecx; ret 0x189; 
0x00002140: dec ecx; ret 0x1dd4; 
0x000aeb23: dec ecx; ret 0x4403; 
0x00073973: dec ecx; ret 0x4489; 
0x0005894f: dec ecx; ret 0x8589; 
0x000af4dd: dec ecx; ret 0xc801; 
0x000afc36: dec ecx; ret 0xed85; 
0x000b1beb: dec ecx; ret 0xf685; 
0x000320c4: dec ecx; ret 0xf8c1; 
0x00187840: dec ecx; ret; 
0x00167471: dec ecx; std; call dword ptr [eax]; 
0x00167471: dec ecx; std; call dword ptr [eax]; dec edx; std; jmp edx; 
0x00167511: dec ecx; std; jmp dword ptr [eax]; 
0x00169ec8: dec ecx; xor dh, cl; call esp; 
0x000a7114: dec edi; adc al, 0xf; test esp, edx; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000e401d: dec edi; adc al, 1; ret 0xf889; 
0x0008daef: dec edi; adc byte ptr [eax + 0x5e5f1457], cl; pop ebx; ret; 
0x0008f14c: dec edi; adc byte ptr [ebp + 0x5e5f1147], cl; pop ebx; ret; 
0x0008f16e: dec edi; adc byte ptr [ebp + 0x5e5f1247], cl; pop ebx; ret; 
0x0008f1ac: dec edi; adc byte ptr [ebp + 0x5e5f1447], cl; pop ebx; ret; 
0x0008da6c: dec edi; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a70ff: dec edi; adc byte ptr [edi], cl; test ecx, ebp; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x0009554c: dec edi; adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], -0x40; pop edi; ret; 
0x001440fd: dec edi; adc eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00118207: dec edi; adc eax, dword ptr [ecx + 0xecc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0015afaa: dec edi; add ah, bh; jmp dword ptr [esi]; 
0x0014728d: dec edi; add al, byte ptr [eax]; add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x001945f9: dec edi; add al, byte ptr [eax]; pop edx; and dh, bh; call dword ptr [eax]; 
0x0016bead: dec edi; add al, byte ptr [eax]; xchg eax, esp; sbb bh, al; call eax; 
0x0005209f: dec edi; add cl, byte ptr [edi]; xchg eax, esp; ret 0xb60f; 
0x0018f1f9: dec edi; add dword ptr [0x3870486], 3; wait; add cl, byte ptr [edx]; ret; 
0x00169f4d: dec edi; add dword ptr [eax], eax; xor al, 0x3b; int1; call eax; 
0x00172c1d: dec edi; add dword ptr [edx], ecx; ret; 
0x0008f0e0: dec edi; add eax, 0x5f0d478d; pop esi; pop ebx; ret; 
0x000f0fa7: dec edi; and byte ptr [ebx], cl; add byte ptr [ecx - 0x76f3dba4], cl; ret; 
0x0008dc76: dec edi; and byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a715f: dec edi; and byte ptr [edi], cl; test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x00199525: dec edi; clc; jmp dword ptr [edx]; 
0x0018b0d1: dec edi; cmc; call dword ptr [ebx]; 
0x000a71e4: dec edi; cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x000a71d9: dec edi; cmp byte ptr [ebp + 0x13], dh; pop edi; pop esi; ret; 
0x001891bd: dec edi; hlt; call dword ptr [ebx + 1]; 
0x000e9a3d: dec edi; idiv edi; mov eax, 1; add esp, 0x18; pop ebx; ret; 
0x0016a069: dec edi; int1; call eax; 
0x00001a66: dec edi; jmp edx; 
0x0008daac: dec edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x000de040: dec edi; or al, 0; xchg edi, ebx; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0004bccc: dec edi; or byte ptr [ebx - 0x12f7d], cl; dec dword ptr [ebp - 0x4943b6d]; jmp dword ptr [ebp - 0x75]; 
0x000cb3a8: dec edi; or byte ptr [ecx + 0x568db114], cl; add dword ptr [ecx], edi; ret 0xd689; 
0x000a70c9: dec edi; or byte ptr [edi], cl; test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x00189988: dec edi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0017b19a: dec edi; out dx, eax; jmp dword ptr [edx]; 
0x0008da40: dec edi; pop es; pop edi; pop esi; pop ebx; ret; 
0x0008dbb6: dec edi; pop ss; pop edi; pop esi; pop ebx; ret; 
0x00190c9e: dec edi; push cs; adc al, 0x41; ret; 
0x00199e9b: dec edi; push cs; adc al, 0x43; ret; 
0x0008da20: dec edi; push es; pop edi; pop esi; pop ebx; ret; 
0x000948b7: dec edi; pushal; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000e20a9: dec edi; ret 0x148d; 
0x0000078a: dec edi; ret; 
0x000cd353: dec edi; sbb al, 0x83; ret 0x3901; 
0x000a7144: dec edi; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x0008f256: dec edi; sbb byte ptr [ebp + 0x5e5f1947], cl; pop ebx; ret; 
0x0008f278: dec edi; sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x0008f2c6: dec edi; sbb byte ptr [ebp + 0x5e5f1c47], cl; pop ebx; ret; 
0x0008d816: dec edi; sbb byte ptr [ebx + 0x7f8d1ceb], al; sbb al, 0xf; test dword ptr [ebp + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x000b3427: dec edi; sbb byte ptr [ecx], bh; ret 0x4e89; 
0x0008db76: dec edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a7129: dec edi; sbb byte ptr [edi], cl; test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x0016762d: dec edi; std; call dword ptr [edx]; 
0x001676bd: dec edi; std; jmp dword ptr [eax]; 
0x001676cd: dec edi; std; jmp eax; 
0x00167629: dec edi; std; jmp edx; 
0x001676c9: dec edi; std; push dword ptr [eax - 0x1f0002b1]; dec ebp; std; jmp dword ptr [eax + 0x4e]; 
0x0016e011: dec edi; sti; call esp; 
0x000a7194: dec edi; sub al, 0x75; pop eax; pop edi; pop esi; ret; 
0x000a7189: dec edi; sub byte ptr [ebp + 0x63], dh; pop edi; pop esi; ret; 
0x00103521: dec edi; sub esp, 0xc; xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x00198bcf: dec edi; xchg byte ptr [edx], al; add al, byte ptr [edx + 0xe]; add al, 0xc6; ret; 
0x00197527: dec edi; xchg byte ptr [edx], al; add bl, byte ptr [eax + 0xe]; add al, 0xc6; ret; 
0x00199dbb: dec edi; xchg byte ptr [edx], al; insd dword ptr es:[edi], dx; push cs; add al, 0xc6; ret; 
0x00197037: dec edi; xchg byte ptr [edx], al; jno 0x19704a; add al, 0xc6; ret; 
0x001875a4: dec edi; xchg dword ptr [edx], eax; add dword ptr [ebx], 0x70; or cl, byte ptr [esi]; add al, 0xc7; ret; 
0x000a71c4: dec edi; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x000a71af: dec edi; xor byte ptr [ebp + 0x3d], dh; pop edi; pop esi; ret; 
0x000effa7: dec edi; xor byte ptr [ebx], cl; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0009549a: dec edi; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00175585: dec edx; aad 0xed; jmp dword ptr [edx]; 
0x0006ee74: dec edx; adc al, 0x73; or cl, byte ptr [ecx + 0x4c18301]; mov dword ptr [edx + 0x10], ecx; pop esi; ret; 
0x0002dc7d: dec edx; adc al, 0x89; push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x0011f36f: dec edx; adc al, 0x8b; xor al, 0x24; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x001141b6: dec edx; adc byte ptr [ebx + 0x7c8b2434], cl; and al, 4; add esp, 8; ret; 
0x000871fe: dec edx; adc byte ptr [edi], cl; test dword ptr [edx + 0x5f000005], ecx; pop ebx; ret; 
0x0008b5ef: dec edx; adc byte ptr [edi], cl; test ecx, ebp; add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x0006e41e: dec edx; add al, 0x73; or byte ptr [ebx + 0x4c18301], cl; mov dword ptr [edx], ecx; ret; 
0x00097c8e: dec edx; add al, 0x75; add ecx, dword ptr [ecx + 0x5f5e084a]; ret; 
0x0001ed5f: dec edx; add al, 0x83; ret 0x3901; 
0x000c3493: dec edx; add al, 0x83; ret 0x8305; 
0x00073125: dec edx; add al, 0x8b; inc ecx; xor byte ptr [ebp - 0x7ce98b40], al; sal dword ptr [eax], 0x39; ret 0x775; 
0x001131ec: dec edx; add al, 0x8b; sbb al, 0x24; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x00105332: dec edx; add al, byte ptr [eax]; add ecx, 0x9dcbf; mov eax, dword ptr [ecx - 0x100]; add eax, dword ptr gs:[0]; ret; 
0x0013c536: dec edx; add cl, byte ptr [edi]; mov bh, 8; mov word ptr [edx], cx; pop ebx; ret; 
0x0008784c: dec edx; add cl, byte ptr [edi]; test dword ptr [0x5bffffff], edi; ret; 
0x00169bcd: dec edx; add dword ptr [eax], eax; add al, 0xe; int1; call dword ptr [eax + 0x4a]; 
0x000e02ca: dec edx; add dword ptr [eax], eax; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x77]; 
0x0013c5be: dec edx; add dword ptr [edi], ecx; mov dh, 0; mov byte ptr [edx], al; pop ebx; ret; 
0x0013c4b6: dec edx; add dword ptr [edi], ecx; mov dh, 8; mov byte ptr [edx], cl; pop ebx; ret; 
0x0008744a: dec edx; add dword ptr [edi], ecx; test dword ptr [esi], edi; add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000874b0: dec edx; add eax, 0x2d8850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00089af0: dec edx; add eax, 0x5f0c428d; ret; 
0x00087492: dec edx; add ecx, dword ptr [edi]; test esi, esi; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000c3f96: dec edx; and al, 0x89; inc edx; and byte ptr [ebx + 0x5f5e24c4], al; pop ebp; ret; 
0x00199415: dec edx; clc; call edx; 
0x0016c0e9: dec edx; clc; jmp esp; 
0x0013d36a: dec edx; clc; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x00134e46: dec edx; cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001362d6: dec edx; cld; mov eax, edx; pop ebx; ret; 
0x0013be26: dec edx; cld; pop ebx; ret; 
0x0013bf46: dec edx; cli; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x00134f7e: dec edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00134eed: dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x001674fc: dec edx; dec ebx; std; call eax; 
0x000b9b34: dec edx; inc ecx; add byte ptr [ebp + 0x1e], dh; lea esi, dword ptr [esi]; xor eax, eax; ret; 
0x000024c0: dec edx; jecxz 0x2492; mov ebx, edi; arpl cx, bx; mov ah, 0xc6; ret; 
0x0018fadd: dec edx; jnp 0x18fad5; jmp dword ptr [edx]; 
0x0009f102: dec edx; jnp 0x9f0fd; jmp dword ptr [esi - 0x70]; 
0x00082d55: dec edx; mov eax, edx; ret; 
0x0011f39d: dec edx; or al, 0x5e; ret; 
0x00097c64: dec edx; or al, 0x83; ret 0x8310; 
0x0011f3da: dec edx; or al, 0xf3; ret; 
0x000871c4: dec edx; or al, 0xf; test esp, eax; add eax, 0x5b5f0000; ret; 
0x0009415f: dec edx; or byte ptr [eax - 0x776ef86], cl; pop ebx; pop edi; ret; 
0x0008b81b: dec edx; or byte ptr [ebp + 0x5b5f1042], cl; ret; 
0x0006aa98: dec edx; or byte ptr [ebx + 0xa], dh; movzx eax, byte ptr [ecx]; add ecx, 1; mov dword ptr [edx + 4], ecx; ret; 
0x000eb7b4: dec edx; or byte ptr [ebx - 0x7ca3dbb4], cl; ret 0x8904; 
0x00097c93: dec edx; or byte ptr [esi + 0x5f], bl; ret; 
0x0018ba9d: dec edx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00087514: dec edx; or dword ptr [edi], ecx; test dword ptr [edx + eax], esi; add byte ptr [edi + 0x5b], bl; ret; 
0x00087588: dec edx; or eax, 0x200850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00087974: dec edx; or ecx, dword ptr [edi]; test dword ptr [0x5bfffffe], edx; ret; 
0x0003de34: dec edx; out 0xff, eax; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00089b30: dec edx; pop es; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x00089c90: dec edx; pop es; lea eax, dword ptr [edx + 0xe]; ret; 
0x00085750: dec edx; pop es; mov eax, edi; pop edi; ret; 
0x00088313: dec edx; pop es; mov eax, edx; pop ebx; ret; 
0x000858b0: dec edx; pop es; mov eax, edx; ret; 
0x0000308d: dec edx; popal; call dword ptr [ecx]; 
0x00191dab: dec edx; push cs; adc al, 0x41; ret; 
0x001830cc: dec edx; push cs; add bh, al; inc ecx; adc eax, dword ptr [ecx]; ret; 
0x00180263: dec edx; push cs; or byte ptr [ebx + 0x40e4702], al; ret; 
0x00089b10: dec edx; push es; lea eax, dword ptr [edx + 0xd]; pop edi; ret; 
0x00089c70: dec edx; push es; lea eax, dword ptr [edx + 0xd]; ret; 
0x00085730: dec edx; push es; mov eax, edi; pop edi; ret; 
0x00085890: dec edx; push es; mov eax, edx; ret; 
0x00191e54: dec edx; sal esi, 1; call dword ptr [eax]; 
0x001674f9: dec edx; std; dec dword ptr [edx + 0x4b]; std; call eax; 
0x00167475: dec edx; std; jmp edx; 
0x001674b9: dec edx; std; lcall ptr [esi + 0x4b]; std; jmp esp; 
0x00135012: dec edx; std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00136492: dec edx; std; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x0013bfe2: dec edx; std; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0016dfb1: dec edx; sti; jmp esp; 
0x00134e97: dec edx; sti; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00136327: dec edx; sti; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x0013be77: dec edx; sti; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0013beb6: dec edx; sti; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x00095c59: dec edx; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000291da: dec esi; add al, 0x89; ret 0xc985; 
0x000d9a69: dec esi; add al, 1; ret 0x689; 
0x001940a1: dec esi; add al, byte ptr [eax]; dec esp; adc al, 0xf7; call dword ptr [edx + 3]; 
0x00169f05: dec esi; add dword ptr [eax], eax; adc al, 0x33; int1; jmp dword ptr [eax + 0x4e]; 
0x00173a92: dec esi; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x000916c7: dec esi; add eax, 0x130f66; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001470a5: dec esi; add eax, 0xb; ret; 
0x0007c019: dec esi; and byte ptr [ecx + 0x187e8906], cl; mov dword ptr [esp], eax; call edx; 
0x0016c129: dec esi; clc; call esp; 
0x000a1d9b: dec esi; clc; jmp dword ptr [esi - 0x70]; 
0x0016c121: dec esi; clc; push dword ptr [eax - 0x1bfffda3]; dec esi; clc; call esp; 
0x00166aef: dec esi; cld; cld; jmp dword ptr [eax - 6]; 
0x00166a7c: dec esi; cli; cld; call esp; 
0x000a71e1: dec esi; cmp al, 0x39; dec edi; cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x0006b681: dec esi; cmp al, 8; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x001674b7: dec esi; dec edx; std; lcall ptr [esi + 0x4b]; std; jmp esp; 
0x00055c3e: dec esi; imul edi, edi, 0xc4c481ff; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0016ae90: dec esi; in eax, dx; hlt; call eax; 
0x0018fb4d: dec esi; jnp 0x18fb45; jmp dword ptr [edx]; 
0x000024fc: dec esi; jp 0x24df; jmp dword ptr [ebx]; 
0x0011fbae: dec esi; mov dh, ah; inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x000b9921: dec esi; mov eax, 0x7f; pop ebx; ret; 
0x0008de25: dec esi; mov edi, 0xc1810009; mov bh, 0xc8; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000de1cf: dec esi; or al, 0; xchg edi, ebx; mov eax, 0x10c; call dword ptr gs:[0x10]; 
0x000ccf59: dec esi; or al, 0x83; ret 0x301; 
0x00069529: dec esi; or al, 0x8b; inc esi; or byte ptr [ecx + 0x29cd29d5], cl; ret 0xe75; 
0x000631cc: dec esi; or al, 0xeb; mov al, 0x89; fsubr dword ptr [ebx]; test byte ptr [ebx - 0x13fe18], cl; jmp eax; 
0x0012bbe0: dec esi; or bh, dh; ret 0x202; 
0x001928f2: dec esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00195afb: dec esi; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0018cc32: dec esi; or cl, byte ptr [esi]; add al, 0xc7; ret; 
0x00094ebe: dec esi; or dword ptr [eax], eax; add ecx, 0xc5ac3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00166cf7: dec esi; or edi, ebp; lcall ptr [esi + 0xc]; std; call esp; 
0x0017b10a: dec esi; out dx, eax; jmp dword ptr [edx]; 
0x0002e1c8: dec esi; pop ss; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0002e1f2: dec esi; pop ss; add byte ptr [edi + 0xb0b8d3], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001907df: dec esi; push cs; add al, 0xc6; ret; 
0x001988b5: dec esi; push cs; nop; add dword ptr [edx], eax; ret; 
0x00189f02: dec esi; push cs; xor byte ptr [esi + 0xe], dh; or byte ptr [esi + ecx + 4], al; ret; 
0x00002831: dec esi; push ecx; mov edi, 0xa9011612; ret; 
0x000eddaf: dec esi; ret 0x4489; 
0x00003d9d: dec esi; ret 0x6bba; 
0x0001d703: dec esi; ret 0xc085; 
0x000a7e81: dec esi; ret 0xc483; 
0x0013b154: dec esi; ret 2; 
0x00196237: dec esi; ret; 
0x0006974e: dec esi; sar bh, cl; jmp dword ptr [ecx]; 
0x000a7141: dec esi; sbb al, 0x39; dec edi; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x00177695: dec esi; shr dh, cl; jmp dword ptr [edx]; 
0x0016ccd9: dec esi; stc; jmp dword ptr [eax]; 
0x00167625: dec esi; std; call dword ptr [edx + 0x4f]; 
0x00167625: dec esi; std; call dword ptr [edx + 0x4f]; std; jmp edx; 
0x00167635: dec esi; std; call dword ptr [edx]; 
0x001676d9: dec esi; std; jmp dword ptr [eax + 0x4f]; 
0x001676c5: dec esi; std; jmp dword ptr [eax]; 
0x001676d5: dec esi; std; jmp eax; 
0x00167621: dec esi; std; lcall ptr [eax + 0x52fffd4e]; dec edi; std; jmp edx; 
0x001676b9: dec esi; std; ljmp ptr [edx + 0x4f]; std; jmp dword ptr [eax]; 
0x000e5a62: dec esi; sub al, 0x89; push esi; xor byte ptr [ebx + 0x4e894050], cl; xor al, 0xf6; ret 0x7420; 
0x0008f525: dec esi; test al, 9; add byte ptr [ecx + 0xcb317c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000a71c1: dec esi; xor al, 0x39; dec edi; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x000efba8: dec esi; xor al, 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e5a6b: dec esi; xor al, 0xf6; ret 0x7420; 
0x000773da: dec esp; aaa; jmp dword ptr [ecx]; 
0x001940a4: dec esp; adc al, 0xf7; call dword ptr [edx + 3]; 
0x0016b45b: dec esp; adc al, 2; add byte ptr [ebp + ecx*2 - 0xa], dl; call dword ptr [eax]; 
0x000740ae: dec esp; adc eax, 0x5ee88900; pop edi; pop ebp; ret; 
0x001194c7: dec esp; add al, 0; add al, ch; mov dword ptr [0x81000108], eax; ret; 
0x0007aa07: dec esp; add al, 0; add al, ch; rcl byte ptr [edi], 8; add cl, ch; ret 0xffd2; 
0x00074c55: dec esp; add al, 0; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x77]; 
0x000780bb: dec esp; add al, 0; add byte ptr [ecx], bh; ret 0x840f; 
0x00174311: dec esp; add byte ptr [eax], al; mov dl, ch; in al, dx; call dword ptr [eax]; 
0x00173e31: dec esp; add byte ptr [eax], al; or al, 0xab; in al, dx; call dword ptr [edi + 4]; 
0x00174341: dec esp; add byte ptr [eax], al; push -0x2b; in al, dx; call dword ptr [eax]; 
0x0018d601: dec esp; add dword ptr [0x3870486], 2; xchg byte ptr [edx], cl; ret; 
0x0017e1dd: dec esp; add dword ptr [0x3870486], 3; add al, 0xa; ret; 
0x001729b9: dec esp; add dword ptr [0x3870486], 3; cmpsd dword ptr [esi], dword ptr es:[edi]; add dword ptr [edx], ecx; ret; 
0x00171179: dec esp; add dword ptr [0x3870486], 3; inc esp; add dword ptr [edx], ecx; ret; 
0x00173eed: dec esp; add dword ptr [0x3870486], 3; lar ecx, word ptr [edx]; ret; 
0x00174a49: dec esp; add dword ptr [0x3870486], 3; pop ecx; add al, 0xa; ret; 
0x00198879: dec esp; add dword ptr [0x3870486], 3; salc; add cl, byte ptr [edx]; ret; 
0x0003fd34: dec esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00171421: dec esp; add ecx, dword ptr [edx]; ret; 
0x0011f91a: dec esp; add esp, 0x54; pop ebx; pop esi; mov eax, edx; ret; 
0x001731b4: dec esp; add esp, ebp; jmp dword ptr [ecx]; 
0x0013690b: dec esp; and al, 0x10; add eax, ecx; pop ebx; ret; 
0x0011b689: dec esp; and al, 0x10; mov dword ptr [esp], eax; call dword ptr [edx]; 
0x000ef685: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000efc15: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000efd25: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000efdeb: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000ef33b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000eff38: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000b7dab: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000efadb: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x000eb218: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000e134b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000ed52b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x000ed5bb: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x000ed40b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x000e139b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x000ef62b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000dec18: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 3; call dword ptr gs:[0x10]; 
0x000dec98: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 4; call dword ptr gs:[0x10]; 
0x000de778: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 5; call dword ptr gs:[0x10]; 
0x000b7d28: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 7; call dword ptr gs:[0x10]; 
0x000de62a: dec esp; and al, 0x10; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x000ecb39: dec esp; and al, 0x10; xchg ebx, edx; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x000ddc15: dec esp; and al, 0x10; xchg ebx, edx; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ddd95: dec esp; and al, 0x10; xchg ebx, edx; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000ddcd5: dec esp; and al, 0x10; xchg ebx, edx; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x0007bb50: dec esp; and al, 0x14; mov dword ptr [esp + 8], esi; mov dword ptr [esp + 4], edi; mov dword ptr [esp], ebp; call eax; 
0x000ef6b3: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000eb2f0: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x000efc43: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000efd53: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000efec0: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x000ef8e0: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x000ef750: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x000e7e6a: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000ef930: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x000efa90: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x000efa40: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x00123dd0: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xbc; call dword ptr gs:[0x10]; 
0x00123e90: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xbd; call dword ptr gs:[0x10]; 
0x000ed720: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x000ed690: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x000ed4e0: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012e520: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xfa; call dword ptr gs:[0x10]; 
0x00102aa1: dec esp; and al, 0x14; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000ddf0a: dec esp; and al, 0x14; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0xe; call dword ptr gs:[0x10]; 
0x001028e1: dec esp; and al, 0x14; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 3; call dword ptr gs:[0x10]; 
0x00026775: dec esp; and al, 0x14; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000195a2: dec esp; and al, 0x18; lea edx, dword ptr [ecx + ebp*8 + 0x258]; mov dword ptr [esp], edx; call eax; 
0x0003167d: dec esp; and al, 0x18; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; mov dword ptr [esp + 8], ecx; call edi; 
0x00064f6a: dec esp; and al, 0x18; mov dword ptr [esp + 4], ecx; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x00111999: dec esp; and al, 0x18; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x00127a08: dec esp; and al, 0x18; mov ebp, dword ptr [esp + 0x28]; cmovbe eax, edx; add esp, 0x2c; ret; 
0x000efb3f: dec esp; and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000eeb15: dec esp; and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000ef395: dec esp; and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x153; call dword ptr gs:[0x10]; 
0x000effd5: dec esp; and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x15b; call dword ptr gs:[0x10]; 
0x000f0035: dec esp; and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x15c; call dword ptr gs:[0x10]; 
0x000e7e9e: dec esp; and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000ddfa2: dec esp; and al, 0x18; mov edi, dword ptr [esp + 0x14]; xchg edi, ebx; mov eax, 0x129; call dword ptr gs:[0x10]; 
0x000e88f5: dec esp; and al, 0x1c; call 0xb81e0; add esp, 0x2c; ret; 
0x000f8318: dec esp; and al, 0x1c; mov dword ptr [esp + 4], ecx; call edx; 
0x0011f16c: dec esp; and al, 0x1c; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0x20]; 
0x0011e9b9: dec esp; and al, 0x1c; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x0011e604: dec esp; and al, 0x1c; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx]; 
0x0006ad73: dec esp; and al, 0x1c; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x1c]; 
0x001127a4: dec esp; and al, 0x1c; mov dword ptr [esp + 8], edx; mov dword ptr [esp + 4], 5; mov dword ptr [esp], edi; call dword ptr [eax]; 
0x000efb79: dec esp; and al, 0x1c; mov ebx, dword ptr [esp + 0x18]; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000eaea5: dec esp; and al, 0x1c; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000de0cd: dec esp; and al, 0x1c; mov edi, dword ptr [esp + 0x18]; xchg edi, ebx; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00110057: dec esp; and al, 0x20; mov dword ptr [ecx], edx; pop esi; pop edi; ret; 
0x000e9609: dec esp; and al, 0x20; xchg edi, ebx; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x000e013b: dec esp; and al, 0x24; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x000e098b: dec esp; and al, 0x24; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00064eca: dec esp; and al, 0x24; mov dword ptr [esp + 4], ecx; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x0007250b: dec esp; and al, 0x24; mov dword ptr [esp], eax; mov dword ptr [esp + 4], ecx; call dword ptr [edx + 0x20]; 
0x00113853: dec esp; and al, 0x24; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp], ebp; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x18]; 
0x000b55e4: dec esp; and al, 0x24; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x00076e4b: dec esp; and al, 0x2c; call eax; 
0x0011f03b: dec esp; and al, 0x2c; mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x0011ef53: dec esp; and al, 0x2c; mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x20]; 
0x0011e6d2: dec esp; and al, 0x2c; mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x000319d8: dec esp; and al, 0x2c; mov dword ptr [esp + 4], ecx; call edi; 
0x0011b487: dec esp; and al, 0x2c; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], 0xd; mov dword ptr [esp], eax; call dword ptr [edx + 0x14]; 
0x000dfcb5: dec esp; and al, 0x2c; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x00111991: dec esp; and al, 0x30; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x18], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x0003162e: dec esp; and al, 0x30; mov dword ptr [esp], ecx; call edi; 
0x000ba6b1: dec esp; and al, 0x34; mov edx, 1; xchg ebx, edx; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000ef160: dec esp; and al, 0x3c; mov edi, dword ptr [esp + 0x38]; xchg edi, ebx; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0007b933: dec esp; and al, 0x50; mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp + 4], esi; mov dword ptr [esp], ecx; call eax; 
0x000e7369: dec esp; and al, 0x54; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000e7889: dec esp; and al, 0x54; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x001185db: dec esp; and al, 0x5c; mov dword ptr [esp + 0x2c], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x00118621: dec esp; and al, 0x5c; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x00099307: dec esp; and al, 0xc; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edi; call esi; 
0x000de95f: dec esp; and al, 0xc; mov ebp, eax; xchg edi, ebx; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000f0c99: dec esp; and al, 0xc; mov ebp, eax; xchg edi, ebx; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x000ef796: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x000dece6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x13; call dword ptr gs:[0x10]; 
0x000df536: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x000eff10: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000e6d06: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000e0a76: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000e6ac6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x000eea16: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x000ef896: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000aac46: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000ef236: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x000eb1a6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x000ef526: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000ef566: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000eb1f0: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000c5436: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000b8213: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xa2; call dword ptr gs:[0x10]; 
0x000ef976: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eb2a6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x000eb266: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000ed576: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x000ed606: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x000ed456: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000debf0: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 3; call dword ptr gs:[0x10]; 
0x000dec70: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 4; call dword ptr gs:[0x10]; 
0x000de750: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 5; call dword ptr gs:[0x10]; 
0x000b7d00: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 7; call dword ptr gs:[0x10]; 
0x000df623: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 8; call dword ptr gs:[0x10]; 
0x000c5b2d: dec esp; and al, 0xc; mov edi, dword ptr [esp + 8]; xchg edi, ebx; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000e6dad: dec esp; and al, 0xc; mov esi, eax; xchg edi, ebx; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x000e6e6d: dec esp; and al, 0xc; mov esi, eax; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000e0c5d: dec esp; and al, 0xc; mov esi, eax; xchg edi, ebx; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x0011385e: dec esp; and al, 4; call dword ptr [eax + 0x18]; 
0x00042a21: dec esp; and al, 4; call dword ptr [eax + 0x1c]; 
0x00126f3a: dec esp; and al, 4; call dword ptr [eax + 4]; 
0x00072512: dec esp; and al, 4; call dword ptr [edx + 0x20]; 
0x00072512: dec esp; and al, 4; call dword ptr [edx + 0x20]; add esp, 0x1c; ret; 
0x00111d47: dec esp; and al, 4; call dword ptr [edx]; 
0x000f0097: dec esp; and al, 4; call dword ptr gs:[0x10]; 
0x0007b020: dec esp; and al, 4; call eax; 
0x000319dc: dec esp; and al, 4; call edi; 
0x000f831c: dec esp; and al, 4; call edx; 
0x00111995: dec esp; and al, 4; mov dword ptr [esp + 0x18], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x0006f9e7: dec esp; and al, 4; mov dword ptr [esp + 8], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x0007a7b1: dec esp; and al, 4; mov dword ptr [esp + 8], esi; call eax; 
0x00129e2b: dec esp; and al, 4; mov dword ptr [esp + 8], esi; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x0011f0bc: dec esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0x20]; 
0x0011f0bc: dec esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0x20]; add esp, 0x1c; ret; 
0x0011f0a4: dec esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0x24]; 
0x0011f0a4: dec esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0x24]; add esp, 0x1c; ret; 
0x0011c99c: dec esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x0011c99c: dec esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; add esp, 0x4c; ret; 
0x001140c4: dec esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x001140c4: dec esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 4]; add esp, 0x1c; ret; 
0x001140dc: dec esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx]; 
0x001140dc: dec esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx]; add esp, 0x1c; ret; 
0x001194ef: dec esp; and al, 4; mov dword ptr [esp], eax; mov dword ptr [esp + 0x458], ebp; call dword ptr [edx + 8]; 
0x0011f043: dec esp; and al, 4; mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x001185e3: dec esp; and al, 4; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x0011a78c: dec esp; and al, 4; mov dword ptr [esp], edx; call dword ptr [ebp + 0x10]; 
0x0001e837: dec esp; and al, 4; mov dword ptr [esp], edx; mov dword ptr [esp + 8], eax; call dword ptr [ebp]; 
0x00112672: dec esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x000729f8: dec esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x18]; 
0x000568cc: dec esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0011ef5b: dec esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x20]; 
0x0011ea5d: dec esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0xc]; 
0x0011eab0: dec esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 8]; 
0x0011e6da: dec esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x000c77e2: dec esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [ebp - 0x50]; 
0x00048e74: dec esp; and al, 4; mov dword ptr [esp], esi; call eax; 
0x00042caf: dec esp; and al, 4; mov dword ptr [esp], esi; mov dword ptr [ebp - 0x57c], edx; call dword ptr [eax + 0x1c]; 
0x0001ec44: dec esp; and al, 4; mov ecx, dword ptr [esp + 0x80]; mov dword ptr [esp + 8], eax; mov dword ptr [esp], ecx; call dword ptr [esi]; 
0x00064ece: dec esp; and al, 4; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x00033012: dec esp; and al, 4; sbb dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 4]; add esp, 0x14; ret; 
0x00042fd1: dec esp; and al, 4; sub edx, ecx; mov dword ptr [esp + 8], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0012b2a7: dec esp; and al, 8; call dword ptr [eax + 0x40]; 
0x000c8051: dec esp; and al, 8; call dword ptr [ebp - 0x78]; 
0x000f00be: dec esp; and al, 8; call dword ptr gs:[0x10]; 
0x00031688: dec esp; and al, 8; call edi; 
0x000b4e79: dec esp; and al, 8; lea ecx, dword ptr [ebp - 0x28]; mov dword ptr [esp], ecx; mov dword ptr [esp + 4], edx; call dword ptr [ebp - 0x34]; 
0x0007b3c2: dec esp; and al, 8; lea ecx, dword ptr [edi + 0x19]; mov dword ptr [esp + 4], ecx; call eax; 
0x0007b018: dec esp; and al, 8; lea ecx, dword ptr [edi + ebp + 1]; mov dword ptr [esp + 4], ecx; call eax; 
0x0006ad6f: dec esp; and al, 8; mov dword ptr [esp + 0x1c], ecx; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x1c]; 
0x0011b48b: dec esp; and al, 8; mov dword ptr [esp + 4], 0xd; mov dword ptr [esp], eax; call dword ptr [edx + 0x14]; 
0x0011b39e: dec esp; and al, 8; mov dword ptr [esp + 4], 6; mov dword ptr [esp], eax; call dword ptr [edx + 0x14]; 
0x0006d900: dec esp; and al, 8; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x00067c4f: dec esp; and al, 8; mov dword ptr [esp], edx; call eax; 
0x00031665: dec esp; and al, 8; mov dword ptr [esp], edx; call edi; 
0x00066a3b: dec esp; and al, 8; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x00070285: dec esp; and al, 8; mov dword ptr [esp], esi; call dword ptr [edx + 0x40]; 
0x0006f2d4: dec esp; and al, 8; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x40]; 
0x000ef853: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x000efda3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x000efe33: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000df5b3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x000efe73: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x000ef4e3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x000eff83: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x000ddb13: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1e; call dword ptr gs:[0x10]; 
0x000ded23: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x21; call dword ptr gs:[0x10]; 
0x0002e1a3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00055503: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x26; call dword ptr gs:[0x10]; 
0x000de6a3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000eed43: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x34; call dword ptr gs:[0x10]; 
0x000b92e3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x000df4f3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x000e7d43: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x000ef2f3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4b; call dword ptr gs:[0x10]; 
0x000ef2b3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4c; call dword ptr gs:[0x10]; 
0x000e67c3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000a8463: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4e; call dword ptr gs:[0x10]; 
0x000a84a3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4f; call dword ptr gs:[0x10]; 
0x000e09d3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x000e84b3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x000eb163: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x000e97a3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5c; call dword ptr gs:[0x10]; 
0x000e97e3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5d; call dword ptr gs:[0x10]; 
0x000de5c3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x000de133: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x63; call dword ptr gs:[0x10]; 
0x000de173: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x64; call dword ptr gs:[0x10]; 
0x000aac03: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x000e7e13: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000ef423: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x000df1c3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000eb333: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x000eb373: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000c53b3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000c53f3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000c5573: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000b81ed: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xa2; call dword ptr gs:[0x10]; 
0x000eea93: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x000ef463: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x000ef4a3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0002e773: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000ef9f3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x000ed6d3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x000ed643: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x000ed493: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000de583: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x000df5fd: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 8; call dword ptr gs:[0x10]; 
0x000e0923: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 9; call dword ptr gs:[0x10]; 
0x00111d40: dec esp; and al, 8; mov ecx, dword ptr [ebp + 0x14]; mov dword ptr [esp + 4], ecx; call dword ptr [edx]; 
0x000f8314: dec esp; and al, 8; mov ecx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 4], ecx; call edx; 
0x00072507: dec esp; and al, 8; mov ecx, dword ptr [esp + 0x24]; mov dword ptr [esp], eax; mov dword ptr [esp + 4], ecx; call dword ptr [edx + 0x20]; 
0x000319d4: dec esp; and al, 8; mov ecx, dword ptr [esp + 0x2c]; mov dword ptr [esp + 4], ecx; call edi; 
0x0003162a: dec esp; and al, 8; mov ecx, dword ptr [esp + 0x30]; mov dword ptr [esp], ecx; call edi; 
0x000df177: dec esp; and al, 8; mov esi, eax; xchg edi, ebx; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0016703b: dec esp; and ch, bh; call esi; 
0x0016703b: dec esp; and ch, bh; call esi; pop ds; std; jmp dword ptr [esi]; 
0x0017e104: dec esp; and esi, eax; jmp dword ptr [edi]; 
0x00170d64: dec esp; arpl bx, bp; call dword ptr [ebx]; 
0x001824cd: dec esp; cld; call esp; 
0x0016ba2c: dec esp; cmp byte ptr [edx], al; add byte ptr [edi + ecx*4 - 9], al; jmp dword ptr [eax + 0x38]; 
0x000966e9: dec esp; cmp eax, 0x29ca8900; ret 0x4403; 
0x0018c094: dec esp; cmpsb byte ptr [esi], byte ptr es:[edi]; cmc; jmp eax; 
0x000e2305: dec esp; dec dword ptr [ebx - 0xb373]; dec dword ptr [ebx - 0xab6b]; jmp dword ptr [ebp - 0x77]; 
0x0016c39c: dec esp; imul eax, dword ptr [edx], 0xf87a1400; jmp dword ptr [eax + 0x69]; 
0x0003ae07: dec esp; in eax, 0xff; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0016c4b3: dec esp; insd dword ptr es:[edi], dx; add al, byte ptr [eax]; hlt; test al, bh; jmp eax; 
0x00183981: dec esp; int1; jmp dword ptr [edx + 1]; 
0x0012b1c2: dec esp; lea edx, dword ptr [esp + 0x30]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x48]; 
0x0006f2e7: dec esp; mov dword ptr [esi + 0x50], edx; add esp, 0x18; pop esi; ret; 
0x0012a1d8: dec esp; mov dword ptr [esp + 4], 0; mov dword ptr [esp], esi; call dword ptr [eax + 8]; 
0x0012af16: dec esp; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; mov dword ptr [esp + 8], edx; call dword ptr [eax + 0x3c]; 
0x001199d7: dec esp; mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x00119bf4: dec esp; mov dword ptr [esp], edx; call eax; 
0x0012bd72: dec esp; mov dword ptr [esp], esi; call dword ptr [eax + 0x44]; 
0x00023cd0: dec esp; mov eax, dword ptr [0x85d23100]; ror byte ptr [edi], 0x94; ret 0xfe83; 
0x0002e261: dec esp; mov eax, edx; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00054a0a: dec esp; mov esi, dword ptr [esp + 0x50]; mov edi, dword ptr [esp + 0x54]; mov ebp, dword ptr [esp + 0x58]; add esp, 0x5c; ret; 
0x00024b27: dec esp; nop; and al, 0x83; ret 0x3b01; 
0x00179f45: dec esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00189a90: dec esp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0017c5c1: dec esp; or esp, dword ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x000da6a9: dec esp; pop ebx; pop esi; pop edi; pop ebp; ret 0x18; 
0x000cf714: dec esp; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00030412: dec esp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0010383e: dec esp; pop es; idiv bh; mov dword ptr [esp], eax; call edx; 
0x001677f7: dec esp; pop esi; std; lcall ptr [edi + ebx*2]; std; jmp dword ptr [esi]; 
0x0016c0e3: dec esp; pop esp; add al, byte ptr [eax]; in al, 0x4a; clc; jmp esp; 
0x00097cc4: dec esp; pop ss; add al, 0x83; ret 0x8504; 
0x00188f4c: dec esp; popfd; add dword ptr [eax], eax; adc byte ptr [edx], dh; hlt; jmp dword ptr [esi]; 
0x0001ced6: dec esp; push ss; add al, 0x83; ret 0x3b01; 
0x0016e05c: dec esp; push ss; add eax, dword ptr [eax]; and al, 0x55; sti; jmp dword ptr [eax + 0x16]; 
0x000d7dd7: dec esp; ret 0x1c; 
0x00043428: dec esp; ret 0x8503; 
0x000e71d1: dec esp; ret 0xbf04; 
0x000d344a: dec esp; ret 0xf289; 
0x0011b5cc: dec esp; ret 8; 
0x000008ee: dec esp; ret; 
0x001675b9: dec esp; std; call dword ptr [eax]; 
0x001675b9: dec esp; std; call dword ptr [eax]; dec ebp; std; jmp dword ptr [eax]; 
0x001675d9: dec esp; std; call eax; 
0x00167559: dec esp; std; jmp esp; 
0x001675a9: dec esp; std; push dword ptr [eax + 0x4d]; std; call eax; 
0x001675a5: dec esp; std; push dword ptr [eax + 0x70fffd4c]; dec ebp; std; call eax; 
0x0016753d: dec esp; std; push dword ptr [ebx + ecx*2]; std; jmp esp; 
0x0016727b: dec esp; std; push dword ptr [esi + 0x6fffd2d]; std; jmp dword ptr [esi + 0x2e]; 
0x0016f854: dec esp; stosd dword ptr es:[edi], eax; std; jmp dword ptr [ebp]; 
0x00174a9d: dec esp; sub al, 0xed; jmp dword ptr [edx]; 
0x0016e463: dec esp; sub eax, dword ptr [ebx]; add byte ptr [esp + eax*8], ah; sti; jmp eax; 
0x0017afe9: dec esp; test al, 0xfc; jmp dword ptr [edx]; 
0x0011975a: dec esp; wait; sti; inc dword ptr [ebx]; xchg eax, esp; ret; 
0x001046e8: dec esp; xchg eax, ebp; add al, 0x83; ret 0x8501; 
0x00096b32: dec esp; xchg eax, ebp; add byte ptr [ebx + 0x29202454], cl; ret 0xc083; 
0x00167f5b: dec esp; xchg eax, edx; add byte ptr [eax], al; imul bl; jmp eax; 
0x0017c94c: dec esp; xlatb; add byte ptr [eax], al; and ch, 0xef; call dword ptr [eax]; 
0x00096828: dec esp; xor al, 0xef; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x000e510e: dec esp; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0016af31: div ah; call esp; 
0x000eefa3: div byte ptr [ebp + 0x22]; xchg edi, ebx; mov eax, 0x141; call dword ptr gs:[0x10]; 
0x000c5d66: div byte ptr [ebp - 0x11]; add esp, 0x14; pop ebx; pop esi; ret; 
0x00101a0b: div byte ptr [ebp - 0x16]; pop esi; pop edi; pop ebp; ret; 
0x000a74c1: div byte ptr [ebp - 0x2c]; pop esi; ret; 
0x0009818b: div byte ptr [ebp - 0x2e]; pop esi; pop edi; pop ebp; ret; 
0x000cb762: div byte ptr [ebx + ecx*8 - 0xa]; ret 0x7408; 
0x0009852a: div byte ptr [ebx + esi - 0x7d]; ret 0x8310; 
0x000a74b4: div byte ptr [ecx + ebx - 0x77]; ret 0x748b; 
0x000354f7: div byte ptr [ecx]; jmp dword ptr [ebp - 0x39]; 
0x00098094: div byte ptr [edi + ebx*8 - 0x7d]; ret 0x8304; 
0x0002bd5b: div byte ptr [edx + ebp*8 - 0x7d]; ret 0x8301; 
0x0012c1f7: div byte ptr [esi + ecx - 0x75]; pop esp; and al, 0x24; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000301f7: div byte ptr [esi - 0x77]; inc ebp; fsub st(1), st(0); ret 0xfffe; 
0x00186c35: div dl; call dword ptr [eax]; 
0x000efaff: div dword ptr [ebx + ecx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0018d9f5: div ebp; call dword ptr [esi]; 
0x0016b321: div ebp; call eax; 
0x0016b319: div ebp; lcall ptr [esp + ecx - 0x81bfffe]; cmc; call eax; 
0x0016a9e1: div ebx; call eax; 
0x000a7b13: div edi; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x001930d5: div esi; jmp dword ptr [eax]; 
0x0018a489: div esp; call dword ptr [esi]; 
0x000e513d: fadd dword ptr [eax + eax]; add al, ch; sub eax, 0x8100044c; ret; 
0x0006d7cd: fadd dword ptr [eax]; add byte ptr [eax], al; add esp, 0xdc; ret; 
0x000eee09: fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000eee09: fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; xchg ebx, ecx; ret; 
0x00168bd5: fadd dword ptr [eax]; add byte ptr [esp + ebx*8], al; out dx, al; jmp esp; 
0x00168bcd: fadd dword ptr [eax]; add cl, dh; fucomi st(6); call dword ptr [eax]; 
0x00145448: fadd dword ptr [ebx + 0x5b5d04c4]; ret; 
0x000edf21: fadd dword ptr [ebx + 0x5e5b5cc4]; pop edi; pop ebp; ret; 
0x00019eb7: fadd dword ptr [ebx - 0x3b7cff2e]; inc esp; neg edx; ret; 
0x0018fa88: fadd dword ptr [ebx]; add al, byte ptr [eax]; xor dword ptr [eax - 0xa], ecx; call dword ptr [eax]; 
0x0018cf4d: fadd dword ptr [ecx]; add cl, ah; fdivrp st(5); call dword ptr [eax]; 
0x0018cf7d: fadd dword ptr [ecx]; add cl, al; fdivrp st(5); call dword ptr [eax]; 
0x0002fe03: fadd dword ptr [edx + 0x74]; sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x0016d585: fadd dword ptr [edx]; add ah, dl; or bh, dl; dec dword ptr [eax - 0x58fffd28]; or edi, edx; jmp dword ptr [eax]; 
0x000874b4: fadd dword ptr [edx]; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00173418: fadd dword ptr [esi]; in al, dx; jmp dword ptr [edi]; 
0x0016d584: fadd dword ptr fs:[edx]; add ah, dl; or bh, dl; dec dword ptr [eax - 0x58fffd28]; or edi, edx; jmp dword ptr [eax]; 
0x0001c69d: fadd qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0xf74d], cl; jmp dword ptr [ebp - 0x75]; 
0x000b3ef4: fadd qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0006d7d3: fadd qword ptr [eax]; add byte ptr [eax], al; ret; 
0x000ef03b: fadd qword ptr [ebp - 0x76d78a37]; rol dword ptr [edi + 0x143b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b2e53: fadd qword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00095da3: fadd qword ptr [ebx - 0x776fb3c]; pop esi; pop edi; pop ebp; ret; 
0x0016ab65: fadd qword ptr [ecx]; add ah, dh; xor esp, esi; push dword ptr [eax + 0x540001dc]; xor dh, ah; call eax; 
0x0016ab7d: fadd qword ptr [ecx]; add byte ptr [ebx + esi], dl; hlt; jmp dword ptr [eax]; 
0x0016ab6d: fadd qword ptr [ecx]; add byte ptr [edx + esi - 0xc], dl; call eax; 
0x0013945c: fadd qword ptr [edx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000038b5: fadd qword ptr [esi]; add byte ptr [edx - 0x6a8b6174], al; and dword ptr [ecx], edi; push cs; pop esp; ret; 
0x0003960c: fchs; pop esi; pop edi; pop ebp; ret; 
0x000e86d2: fcmove st(0), st(0); idiv bh; add esp, 0x18; pop ebx; ret; 
0x0011198e: fcom dword ptr [eax + 0x30244c8d]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x18], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x00194c88: fcom dword ptr [ebp + 2]; add bh, dl; sub esi, edi; call dword ptr [eax]; 
0x0017cb63: fcom dword ptr [ecx + 0xd1cffef]; sbb al, 0x8d; out dx, eax; jmp dword ptr [edx]; 
0x0019898c: fcom qword ptr [edx + 0x32790002]; clc; call dword ptr [eax]; 
0x0018b334: fcom qword ptr [esi - 0xb]; call dword ptr [ebx]; 
0x0008d376: fcom st(0), st(2); or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0010fb21: fcomi st(3); ret; 
0x0016adc1: fcomi st(4); call dword ptr [eax - 0x15]; 
0x0016adb9: fcomi st(4); push dword ptr [eax - 0x2afffe15]; fcomi st(4); call dword ptr [eax - 0x15]; 
0x00138064: fcomi st(7); ret 1; 
0x00174ad8: fcomp dword ptr [eax]; add byte ptr [esp + edx*2], al; in eax, dx; call esp; 
0x0016c0c4: fcomp dword ptr [ebx + 2]; add byte ptr [edi + eax*2 - 8], al; jmp dword ptr [eax]; 
0x00131c68: fcomp dword ptr [edi + 0x5b]; ret; 
0x001321c8: fcomp dword ptr [edi + 0x5d]; pop ebx; ret; 
0x00149738: fcomp dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000a71f8: fcomp dword ptr [edi + 0x5e]; ret; 
0x001932df: fcomp dword ptr [edx]; idiv bh; sbb al, 0xd; stosd dword ptr es:[edi], eax; sbb dh, dh; jmp dword ptr [edx]; 
0x0002f7d4: fcomp dword ptr [esi + 0x5f]; ret; 
0x00187cd4: fcomp qword ptr [ecx - 0xd]; call dword ptr [esi]; 
0x00166f38: fcomp qword ptr [esi]; std; ljmp ptr [edi + ebx]; std; call dword ptr [esi]; 
0x00185fa5: fcompi st(2); call dword ptr [edi]; 
0x00189d2d: fcompi st(4); call dword ptr [edx]; 
0x0005f62f: fcos; dec dword ptr [ecx - 0xef43]; dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0xe343]; jmp dword ptr [ebp - 0x77]; 
0x00077bc1: fcos; jmp dword ptr [ebp - 0x7d]; 
0x001921c1: fdecstp; call dword ptr [ebp]; 
0x001921d9: fdecstp; call eax; 
0x000b857b: fdiv dword ptr [ebp + 5]; mov eax, 0x80000000; mov dword ptr gs:[0x6c], eax; mov eax, 0xbe; int 0x80; 
0x001711a8: fdiv dword ptr [ebx - 0x15]; call ecx; 
0x0011e4fb: fdiv qword ptr [ecx]; rol byte ptr [ebx + 0x5f5e20c4], 0x5d; ret; 
0x001769dc: fdiv qword ptr [edi]; add byte ptr [eax + 2], al; out dx, eax; call dword ptr [ecx]; 
0x0016e5bc: fdiv qword ptr [edx]; add eax, dword ptr [eax]; in al, 0xe2; sti; jmp dword ptr [eax]; 
0x0011b433: fdiv st(1), st(0); dec dword ptr [ecx + 0x68b0846]; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x00178332: fdiv st(2), st(0); jmp dword ptr [edx]; 
0x0018865d: fdiv st(3); jmp dword ptr [esi]; 
0x0017cb48: fdiv st(3); out dx, eax; call dword ptr [eax]; 
0x00166925: fdiv st(4), st(0); call dword ptr [eax]; 
0x001665d5: fdiv st(4), st(0); call dword ptr [ebx - 0x24]; 
0x0016675d: fdiv st(4), st(0); inc dword ptr [eax - 0x4f000327]; frndint; jmp eax; 
0x0016efb1: fdiv st(4), st(0); jmp eax; 
0x0016679d: fdiv st(4), st(0); jmp edx; 
0x00166755: fdiv st(4), st(0); push dword ptr [0x75fffcdc]; fdiv st(4), st(0); inc dword ptr [eax - 0x4f000327]; frndint; jmp eax; 
0x00166799: fdiv st(4), st(0); push dword ptr [eax - 0x24]; cld; jmp edx; 
0x00166795: fdiv st(4), st(0); push dword ptr [eax]; fdiv st(4), st(0); push dword ptr [eax - 0x24]; cld; jmp edx; 
0x00166759: fdiv st(4), st(0); push dword ptr [ebp - 0x24]; cld; inc dword ptr [eax - 0x4f000327]; frndint; jmp eax; 
0x0016f041: fdiv st(5), st(0); lcall ptr [eax]; test dword ptr [ecx], eax; add byte ptr [ebx + esi*8], ah; std; jmp eax; 
0x0016b221: fdiv st(5); call dword ptr [eax]; 
0x0019b274: fdiv st(6), st(0); cli; call dword ptr [ebx + 1]; 
0x0018dea4: fdiv st(6), st(0); cmc; call dword ptr [ebp]; 
0x00116d8a: fdiv st(7), st(0); inc dword ptr [ebx - 0x3fe6fe08]; add eax, 2; add esp, 0x1c; ret; 
0x000ad89b: fdiv st(7), st(0); jmp dword ptr [esi - 0x70]; 
0x0018890c: fdivp st(3); hlt; call dword ptr [eax]; 
0x00166935: fdivp st(4); call dword ptr [eax - 0x21]; 
0x00166935: fdivp st(4); call dword ptr [eax - 0x21]; cld; jmp eax; 
0x00166931: fdivp st(4); inc eax; fdivp st(4); call dword ptr [eax - 0x21]; 
0x00166931: fdivp st(4); inc eax; fdivp st(4); call dword ptr [eax - 0x21]; cld; jmp eax; 
0x00166c3c: fdivp st(6); cld; call dword ptr [ebp + edi*8 - 4]; jmp esp; 
0x0005debf: fdivp st(7); dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x000dab57: fdivr dword ptr [ecx]; ror dword ptr [edi], 1; test byte ptr [eax - 0x74ffffff], bl; inc ebp; ror byte ptr [ebx - 0x2f083b83], 1; ret 0x5489; 
0x0017aadc: fdivr qword ptr [eax - 0x74600000]; out dx, eax; call dword ptr [edx]; 
0x000fbedf: fdivr qword ptr [eax]; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0017b739: fdivr qword ptr [ecx - 0x11]; jmp dword ptr [edx]; 
0x001860a2: fdivr st(1); jmp dword ptr [edx]; 
0x0017804e: fdivr st(2); jmp dword ptr [edx]; 
0x0010e892: fdivr st(3), st(0); dec dword ptr [ecx - 0x7cf57406]; ret 0x8d04; 
0x00182e39: fdivr st(3); call edx; 
0x00166341: fdivr st(4); call dword ptr [ebx - 0x2c000328]; fdivr st(4); call dword ptr [ebx]; 
0x00166349: fdivr st(4); call dword ptr [ebx]; 
0x00166349: fdivr st(4); call dword ptr [ebx]; frndint; call dword ptr [ebx - 0x27]; 
0x00166531: fdivr st(4); call dword ptr [edx - 0x4d000328]; fdivr st(4); call edx; 
0x00166345: fdivr st(4); call ebx; 
0x00166345: fdivr st(4); call ebx; fdivr st(4); call dword ptr [ebx]; 
0x00166345: fdivr st(4); call ebx; fdivr st(4); call dword ptr [ebx]; frndint; call dword ptr [ebx - 0x27]; 
0x00166539: fdivr st(4); call edx; 
0x00166561: fdivr st(4); dec dword ptr [ecx - 0x56000328]; fdivr st(4); dec ecx; fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x00166569: fdivr st(4); dec ecx; fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x00166581: fdivr st(4); inc dword ptr [ebx - 0x5c000328]; fdivr st(4); inc ebx; fdivr st(4); jmp dword ptr [eax - 0x28]; 
0x00166571: fdivr st(4); inc dword ptr [esi - 0x59000328]; fdivr st(4); inc esi; fdivr st(4); jmp dword ptr [ebx - 0x28]; 
0x00166589: fdivr st(4); inc ebx; fdivr st(4); jmp dword ptr [eax - 0x28]; 
0x00166579: fdivr st(4); inc esi; fdivr st(4); jmp dword ptr [ebx - 0x28]; 
0x0016658d: fdivr st(4); jmp dword ptr [eax - 0x28]; 
0x0016633d: fdivr st(4); jmp dword ptr [ebx - 0x28]; 
0x0016656d: fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x00166565: fdivr st(4); ljmp ptr [ecx - 0x36000328]; fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x0016652d: fdivr st(4); push dword ptr [edx - 0x28]; cld; call dword ptr [edx - 0x4d000328]; fdivr st(4); call edx; 
0x001591d5: fdivr st(4); test al, 0x97; xchg eax, esp; ret; 
0x0018d199: fdivr st(5), st(0); call dword ptr [eax]; 
0x00184434: fdivr st(5), st(0); int1; call dword ptr [ebx]; 
0x0018d185: fdivr st(5), st(0); jmp dword ptr [ecx]; 
0x00192315: fdivr st(6), st(0); jmp dword ptr [ecx]; 
0x00104baa: fdivr st(7); call dword ptr [eax - 0x17ac6f70]; mov ebp, 0x81000251; ret; 
0x000bc800: fdivr st(7); dec dword ptr [ebx - 0xf775]; jmp dword ptr [ebp - 0x75]; 
0x0005f6da: fdivr st(7); dec dword ptr [ecx - 0x10343]; dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0xe343]; jmp dword ptr [ebp - 0x77]; 
0x000addf3: fdivr st(7); jmp dword ptr [esi - 0x70]; 
0x00094201: fdivr st(7); mov byte ptr [eax], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x0007dcf0: fdivr st(7); pop ebx; ret; 
0x0008b517: fdivr st(7); pop edi; pop ebx; ret; 
0x0007df9e: fdivr st(7); pop esi; pop ebx; ret; 
0x00185f65: fdivrp st(2); jmp dword ptr [ecx]; 
0x0018cf51: fdivrp st(5); call dword ptr [eax]; 
0x0018d1f9: fdivrp st(5); jmp dword ptr [ecx]; 
0x0017cc05: fiadd dword ptr [eax]; add byte ptr [eax - 0x21], cl; cld; jmp dword ptr [edx]; 
0x000eb2ae: fiadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00168c1d: fiadd dword ptr [eax]; add byte ptr [ebx - 0x21], ah; out dx, al; call esp; 
0x00070737: fiadd dword ptr [eax]; add byte ptr [ebx - 0x76bfdbb4], cl; inc ecx; adc al, 0xe9; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x00086bc4: fiadd dword ptr [ebx - 0x79f0ef15]; ret 0x10; 
0x00086644: fiadd dword ptr [ebx - 0x79f0ef15]; ret 0x15; 
0x000860c4: fiadd dword ptr [ebx - 0x79f0ef15]; ret 0x1a; 
0x00146853: fiadd dword ptr [ecx]; mov byte ptr [edx + edx*8 + 0xa2840f], 0; add dh, dh; ret 0x7501; 
0x00168c1c: fiadd dword ptr fs:[eax]; add byte ptr [ebx - 0x21], ah; out dx, al; call esp; 
0x0007ca61: fiadd word ptr [eax + 0x40]; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x0017d039: fiadd word ptr [eax]; add byte ptr [eax + edi*8 - 0x11], dl; call dword ptr [edx]; 
0x00168ccd: fiadd word ptr [eax]; add byte ptr [ebp + edi*4 - 0x11], al; call esp; 
0x0014a7e1: fiadd word ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0018d051: fiadd word ptr [ecx]; add byte ptr [esp + edx*8], bh; cmc; jmp dword ptr [eax]; 
0x00183f5a: fiadd word ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x45; ret; 
0x0013924b: fiadd word ptr [edx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00055562: ficom dword ptr [eax + eax]; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x12e; call dword ptr gs:[0x10]; 
0x00099a18: ficom word ptr [ebp - 0x137cfff0]; sub byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x001268c9: ficomp word ptr [esi - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; pop edi; pop ebp; ret; 
0x00001a13: fidiv dword ptr [ebx]; push edx; test dword ptr [ebx + 0x59e7c8ee], esi; pop ebx; ret 0x2a63; 
0x000948cb: fidiv dword ptr [edx - 0x1e]; call 0x129d77; add ecx, 0xc60b1; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e92b: fidiv dword ptr [edx - 0x1e]; call 0x129d77; add ecx, 0xcbe7d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d2eb: fidiv dword ptr [edx - 0x1e]; call 0x129d77; add ecx, 0xcd35d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000948ed: fidiv dword ptr [edx - 0x40]; call 0x129d77; add ecx, 0xc608f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e94d: fidiv dword ptr [edx - 0x40]; call 0x129d77; add ecx, 0xcbe5b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d30d: fidiv dword ptr [edx - 0x40]; call 0x129d77; add ecx, 0xcd33b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094908: fidiv dword ptr [edx - 0x5b]; call 0x129d77; add ecx, 0xc6074; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e968: fidiv dword ptr [edx - 0x5b]; call 0x129d77; add ecx, 0xcbe40; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d328: fidiv dword ptr [edx - 0x5b]; call 0x129d77; add ecx, 0xcd320; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e97f: fidiv dword ptr [edx - 0x72]; call 0x129d77; add ecx, 0xcbe29; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d33f: fidiv dword ptr [edx - 0x72]; call 0x129d77; add ecx, 0xcd309; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000f04cb: fidivr dword ptr [eax + 0x66]; mov ebx, 0x10; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f04f2: fidivr dword ptr [eax + 0x66]; mov ebx, 0x10; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f03cb: fidivr dword ptr [eax + 0x66]; mov ebx, 0x11; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f03f2: fidivr dword ptr [eax + 0x66]; mov ebx, 0x11; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0a6b: fidivr dword ptr [eax + 0x66]; mov ebx, 0x12; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0a92: fidivr dword ptr [eax + 0x66]; mov ebx, 0x12; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f02cb: fidivr dword ptr [eax + 0x66]; mov ebx, 0xa; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f02f2: fidivr dword ptr [eax + 0x66]; mov ebx, 0xa; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f054b: fidivr dword ptr [eax + 0x66]; mov ebx, 0xb; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0572: fidivr dword ptr [eax + 0x66]; mov ebx, 0xb; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f034b: fidivr dword ptr [eax + 0x66]; mov ebx, 0xc; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0372: fidivr dword ptr [eax + 0x66]; mov ebx, 0xc; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0601: fidivr dword ptr [eax + 0x66]; mov ebx, 0xd; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f05c1: fidivr dword ptr [eax + 0x66]; mov ebx, 0xe; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0241: fidivr dword ptr [eax + 0x66]; mov ebx, 0xf; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0641: fidivr dword ptr [eax + 0x66]; mov ebx, 1; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0101: fidivr dword ptr [eax + 0x66]; mov ebx, 2; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f014b: fidivr dword ptr [eax + 0x66]; mov ebx, 3; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0172: fidivr dword ptr [eax + 0x66]; mov ebx, 3; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0281: fidivr dword ptr [eax + 0x66]; mov ebx, 4; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f008b: fidivr dword ptr [eax + 0x66]; mov ebx, 5; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f00b2: fidivr dword ptr [eax + 0x66]; mov ebx, 5; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0201: fidivr dword ptr [eax + 0x66]; mov ebx, 6; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f01c1: fidivr dword ptr [eax + 0x66]; mov ebx, 7; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0681: fidivr dword ptr [eax + 0x66]; mov ebx, 8; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f044b: fidivr dword ptr [eax + 0x66]; mov ebx, 9; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0472: fidivr dword ptr [eax + 0x66]; mov ebx, 9; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000c25db: fild dword ptr [eax + eax]; add byte ptr [ecx], bh; ret 0x860f; 
0x0017cd35: fild dword ptr [eax]; add byte ptr [eax - 0x11], bh; out dx, eax; jmp dword ptr [edx + 1]; 
0x000c5b37: fild dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0017cd5d: fild dword ptr [eax]; add byte ptr [eax], al; int1; out dx, eax; call dword ptr [eax]; 
0x000e5e8e: fild dword ptr [ecx + 8]; xor byte ptr [ecx], 0xc0; pop ebx; ret; 
0x0002d9a0: fild dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0002d390: fild dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x000a7bb0: fild dword ptr [esp + 4]; fild dword ptr [esp + 8]; fsubp st(1); ret; 
0x0002d5f0: fild dword ptr [esp + 8]; fld dword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x000a7bb4: fild dword ptr [esp + 8]; fsubp st(1); ret; 
0x0019ca6c: fild word ptr [0x1250000]; add byte ptr [eax], al; ret; 
0x0017d1a1: fild word ptr [eax]; add ah, cl; clc; out dx, eax; call dword ptr [ecx + 1]; 
0x00129691: fild word ptr [eax]; add byte ptr [eax], al; add dword ptr [ecx], eax; ret 0x5489; 
0x0007ffa8: fild word ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000b0988: fild word ptr [ebx - 0xf76df3c]; pop esi; pop edi; pop ebp; ret; 
0x0018d195: fild word ptr [ecx]; add al, bh; fdivr st(5), st(0); call dword ptr [eax]; 
0x0018d1f5: fild word ptr [ecx]; add byte ptr [eax - 0x22], bh; cmc; jmp dword ptr [ecx]; 
0x0016abfd: fild word ptr [ecx]; add byte ptr [esi + esi*4], ah; hlt; call dword ptr [eax]; 
0x0016abf5: fild word ptr [ecx]; add byte ptr [esp + esi*4 - 0x2047000c], dh; add dword ptr [eax], eax; and al, 0xb6; hlt; call dword ptr [eax]; 
0x00138f71: fild word ptr [edx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0016d71d: fild word ptr [edx]; add ch, ah; sub edx, edi; jmp esp; 
0x0016d715: fild word ptr [edx]; add ch, dl; sub edx, edi; push dword ptr [edi + ebx*8 + 0x29e50002]; cli; jmp esp; 
0x0008edcd: fild word ptr [esi]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0008d4d2: fimul dword ptr [eax]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000dda71: fimul dword ptr [ebx - 0x47fbdba4]; add dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000de561: fimul dword ptr [ebx - 0x47fbdba4]; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000de561: fimul dword ptr [ebx - 0x47fbdba4]; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000ef5a1: fimul dword ptr [ebx - 0x47fbdba4]; inc byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ef271: fimul dword ptr [ebx - 0x47fbdba4]; jno 0xef279; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b7ba1: fimul dword ptr [ebx - 0x47fbdba4]; jp 0xb7ba9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ef9b1: fimul dword ptr [ebx - 0x47fbdba4]; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000df6a1: fimul dword ptr [ebx - 0x47fbdba4]; or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e0b11: fimul dword ptr [ebx - 0x47fbdba4]; or al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000aac81: fimul dword ptr [ebx - 0x47fbdba4]; sbb dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b7ed1: fimul dword ptr [ebx - 0x47fbdba4]; sbb eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000df571: fimul dword ptr [ebx - 0x47fbdba4]; sub al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e0bb1: fimul dword ptr [ebx - 0x47fbdba4]; sub byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000df4b1: fimul dword ptr [ebx - 0x47fbdba4]; sub dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b92a1: fimul dword ptr [ebx - 0x47fbdba4]; test byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000df6e1: fimul dword ptr [ebx - 0x47fbdba4]; test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e8011: fimul dword ptr [ebx - 0x47fbdba4]; xor eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b8211: fimul dword ptr [ebx - 0x74f3dbb4]; pop esp; and al, 8; mov eax, 0xa2; call dword ptr gs:[0x10]; 
0x000df621: fimul dword ptr [ebx - 0x74f3dbb4]; pop esp; and al, 8; mov eax, 8; call dword ptr gs:[0x10]; 
0x000ef851: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x000efda1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x000efe31: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000df5b1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x000efe71: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x000ef4e1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x000eff81: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x000ddb11: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x1e; call dword ptr gs:[0x10]; 
0x000ded21: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x21; call dword ptr gs:[0x10]; 
0x0002e1a1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00055501: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x26; call dword ptr gs:[0x10]; 
0x000de6a1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000eed41: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x34; call dword ptr gs:[0x10]; 
0x000b92e1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x000df4f1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x000e7d41: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x000ef2f1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x4b; call dword ptr gs:[0x10]; 
0x000ef2b1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x4c; call dword ptr gs:[0x10]; 
0x000e67c1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000a8461: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x4e; call dword ptr gs:[0x10]; 
0x000a84a1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x4f; call dword ptr gs:[0x10]; 
0x000e09d1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x000e84b1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x000eb161: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x000e97a1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x5c; call dword ptr gs:[0x10]; 
0x000e97e1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x5d; call dword ptr gs:[0x10]; 
0x000de5c1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x000de131: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x63; call dword ptr gs:[0x10]; 
0x000de171: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x64; call dword ptr gs:[0x10]; 
0x000aac01: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x000e7e11: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000ef421: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x000df1c1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000eb331: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x000eb371: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000c53b1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000c53f1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000c5571: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000b81eb: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xa2; call dword ptr gs:[0x10]; 
0x000eea91: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x000ef461: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x000ef4a1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0002e771: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000ef9f1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x000ed6d1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x000ed641: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x000ed491: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000de581: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x000df5fb: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 8; call dword ptr gs:[0x10]; 
0x000e0921: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 9; call dword ptr gs:[0x10]; 
0x0006c35b: fimul dword ptr [ebx]; add byte ptr [ecx + 0x136c96c3], al; add byte ptr [ebx - 0x17cffbb], cl; dec dword ptr [edi]; xchg eax, esp; ret 0x7c89; 
0x0008ead2: fimul dword ptr [ecx]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0002d793: fimul dword ptr [ecx]; ret 0xb70f; 
0x001313a2: fimul dword ptr [edi]; xchg eax, edx; ret 0xce89; 
0x0002e3db: fimul word ptr [eax + eax]; mov eax, esi; mov edi, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x000b3599: fimul word ptr [ebp + 0xb6]; add byte ptr [edx + edi*4 - 0x7d], dh; mov byte ptr [ecx], 0x83; ret 0x3b34; 
0x00077fd9: fimul word ptr [ebx - 0x1877d]; jmp dword ptr [ebp - 0x77]; 
0x000fd8d9: fimul word ptr [ecx - 0x7c36cece]; ret 0xeb04; 
0x00105133: fimul word ptr [ecx]; add byte ptr [ecx - 0x76d7db8c], cl; ret 0xeac1; 
0x00019a26: fimul word ptr [edi]; mov byte ptr [0x9389de87], al; mov al, byte ptr [0x89000036]; ret 0xc589; 
0x000ff5b4: fincstp; dec dword ptr [ebx - 0xf775]; jmp dword ptr [ebp - 0x75]; 
0x000de1d3: fistp qword ptr [eax + 0x10c]; call dword ptr gs:[0x10]; 
0x000de233: fistp qword ptr [eax + 0x10d]; call dword ptr gs:[0x10]; 
0x0002de92: fistp qword ptr [eax + 0x10e]; call dword ptr gs:[0x10]; 
0x000de8aa: fistp qword ptr [eax + 0x127]; call dword ptr gs:[0x10]; 
0x000de702: fistp qword ptr [eax + 0x128]; call dword ptr gs:[0x10]; 
0x000ddfaa: fistp qword ptr [eax + 0x129]; call dword ptr gs:[0x10]; 
0x000e9756: fistp qword ptr [eax + 0x12b]; call dword ptr gs:[0x10]; 
0x000de044: fistp qword ptr [eax + 0x12c]; call dword ptr gs:[0x10]; 
0x000e0b72: fistp qword ptr [eax + 0x12d]; call dword ptr gs:[0x10]; 
0x0005556a: fistp qword ptr [eax + 0x12e]; call dword ptr gs:[0x10]; 
0x000e0a32: fistp qword ptr [eax + 0x130]; call dword ptr gs:[0x10]; 
0x000e0ada: fistp qword ptr [eax + 0x131]; call dword ptr gs:[0x10]; 
0x000de632: fistp qword ptr [eax + 0x132]; call dword ptr gs:[0x10]; 
0x000def0c: fistp qword ptr [eax + 0x133]; call dword ptr gs:[0x10]; 
0x000ddacf: fistp qword ptr [eax + 0x13e]; call dword ptr gs:[0x10]; 
0x000e140e: fistp qword ptr [eax + 0x140]; call dword ptr gs:[0x10]; 
0x000eefa7: fistp qword ptr [eax + 0x141]; call dword ptr gs:[0x10]; 
0x000eef60: fistp qword ptr [eax + 0x147]; call dword ptr gs:[0x10]; 
0x000e6617: fistp qword ptr [eax + 0x154]; call dword ptr gs:[0x10]; 
0x000f0c59: fistp qword ptr [eax + 0x159]; call dword ptr gs:[0x10]; 
0x000e89c6: fistp qword ptr [eax + 0x1a]; call dword ptr gs:[0x10]; 
0x000e5fa4: fistp qword ptr [eax + 0x36]; call dword ptr gs:[0x10]; 
0x00102aa9: fistp qword ptr [eax + 0x55]; call dword ptr gs:[0x10]; 
0x000e8214: fistp qword ptr [eax + 0x58]; call dword ptr gs:[0x10]; 
0x000b7c65: fistp qword ptr [eax + 0x72]; call dword ptr gs:[0x10]; 
0x0003ea6a: fistp qword ptr [eax + 0x78]; call dword ptr gs:[0x10]; 
0x000b3e3b: fistp qword ptr [eax + 0x8d]; call dword ptr gs:[0x10]; 
0x000e6d71: fistp qword ptr [eax + 0x91]; call dword ptr gs:[0x10]; 
0x0006a2b9: fistp qword ptr [eax + 0x92]; call dword ptr gs:[0x10]; 
0x000e0c21: fistp qword ptr [eax + 0xa8]; call dword ptr gs:[0x10]; 
0x0002dfcf: fistp qword ptr [eax + 0xae]; call dword ptr gs:[0x10]; 
0x0002e143: fistp qword ptr [eax + 0xaf]; call dword ptr gs:[0x10]; 
0x0002e334: fistp qword ptr [eax + 0xb1]; call dword ptr gs:[0x10]; 
0x0002f143: fistp qword ptr [eax + 0xb2]; call dword ptr gs:[0x10]; 
0x000b8602: fistp qword ptr [eax + 0xb]; call dword ptr gs:[0x10]; 
0x000e9842: fistp qword ptr [eax + 0xc1]; call dword ptr gs:[0x10]; 
0x000e98a2: fistp qword ptr [eax + 0xc2]; call dword ptr gs:[0x10]; 
0x000e00d2: fistp qword ptr [eax + 0xc6]; call dword ptr gs:[0x10]; 
0x000e0072: fistp qword ptr [eax + 0xcf]; call dword ptr gs:[0x10]; 
0x000b94cd: fistp qword ptr [eax + 0xd0]; call dword ptr gs:[0x10]; 
0x000b9402: fistp qword ptr [eax + 0xd1]; call dword ptr gs:[0x10]; 
0x000b955d: fistp qword ptr [eax + 0xd2]; call dword ptr gs:[0x10]; 
0x000b9462: fistp qword ptr [eax + 0xd3]; call dword ptr gs:[0x10]; 
0x000e0012: fistp qword ptr [eax + 0xd4]; call dword ptr gs:[0x10]; 
0x000c5b35: fistp qword ptr [eax + 0xdb]; call dword ptr gs:[0x10]; 
0x000b3ef2: fistp qword ptr [eax + 0xdc]; call dword ptr gs:[0x10]; 
0x000df0c2: fistp qword ptr [eax + 0xdd]; call dword ptr gs:[0x10]; 
0x000eedaa: fistp qword ptr [eax + 0xe1]; call dword ptr gs:[0x10]; 
0x000ddf12: fistp qword ptr [eax + 0xe]; call dword ptr gs:[0x10]; 
0x000c568e: fistp qword ptr [eax + 0xf1]; call dword ptr gs:[0x10]; 
0x000c55e1: fistp qword ptr [eax + 0xf2]; call dword ptr gs:[0x10]; 
0x001028e9: fistp qword ptr [eax + 3]; call dword ptr gs:[0x10]; 
0x000de7fa: fistp qword ptr [eax + 5]; call dword ptr gs:[0x10]; 
0x0008e9d3: fistp qword ptr [ebp + 0xc03000c]; cdq; jmp ecx; 
0x000ef317: fistp qword ptr [ebx + ecx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000b4671: fisttp dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x00103526: fisttp dword ptr [ecx + 0xbab8e1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009862c: fisttp qword ptr [ebx - 0x1577d]; jmp dword ptr [ebp - 0x75]; 
0x00187a8d: fisttp qword ptr [edx]; ret; 
0x000560fd: fisttp word ptr [ebp + edi*8 + 0x24548bff]; and al, 0x39; ret 0x178b; 
0x0003f36b: fisttp word ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x000b9063: fisub dword ptr [ebp - 0x77]; or eax, 0x68; nop; lea esi, dword ptr [esi]; ret; 
0x00130c0c: fisub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x001309cc: fisub word ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00167220: fisubr dword ptr [0x2e2afffd]; std; dec dword ptr [edx - 0x150002d2]; std; call esp; 
0x00170fc1: fisubr dword ptr [eax - 0x15]; jmp dword ptr [edx]; 
0x001195b8: fisubr dword ptr [ebx]; xchg eax, esp; adc eax, 0x65; idiv edi; jmp edx; 
0x0001a2e9: fisubr dword ptr [ebx]; xchg eax, esp; add dword ptr [eax], 0x73; out 0xff, eax; jmp edx; 
0x00083068: fisubr dword ptr [ebx]; xchg eax, esp; mov ebx, 0xffee0080; jmp edx; 
0x000644d2: fisubr dword ptr [edx - 5]; jmp dword ptr [ebp - 0x7d]; 
0x000951a3: fld dword ptr [eax]; add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x000ef9fb: fld dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014a926: fld dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000a15bf: fld dword ptr [ecx + 0xfcc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0018d00d: fld dword ptr [ecx]; add byte ptr [ecx - 0x22], ah; cmc; call dword ptr [eax]; 
0x00190f91: fld dword ptr [edx + ecx]; ret; 
0x0002d5f4: fld dword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0002d663: fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0002d549: fld dword ptr [esp + 4]; ret; 
0x000310fb: fld dword ptr [esp]; add esp, 4; ret; 
0x0002d595: fld dword ptr [esp]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000df0c4: fld qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0017cf41: fld qword ptr [eax]; add byte ptr [esp + esi*8 - 0x11], ch; call dword ptr [edx]; 
0x0019e510: fld qword ptr [ebx]; add byte ptr [eax], al; ret; 
0x0018cf1d: fld qword ptr [ecx]; add byte ptr [eax - 0x2c], ah; cmc; call edi; 
0x0014824f: fld qword ptr [ecx]; add byte ptr [eax], al; mov eax, ecx; ret; 
0x001796bd: fld qword ptr [ecx]; out dx, eax; jmp dword ptr [edx]; 
0x00139352: fld qword ptr [edx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000338c9: fld qword ptr [esp + 0x18]; add esp, 0x28; pop ebx; ret; 
0x0002d394: fld qword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0002d40b: fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0002d289: fld qword ptr [esp + 4]; ret; 
0x0002d311: fld qword ptr [esp]; add esp, 0xc; pop esi; pop edi; ret; 
0x0003116c: fld qword ptr [esp]; add esp, 0xc; ret; 
0x0002d8e6: fld st(0); fstp xword ptr [ebp]; mov ebp, dword ptr [esp + 0x78]; add esp, 0x7c; fsubp st(1); ret; 
0x000e87d3: fld st(7); idiv bh; add esp, 0x18; pop ebx; ret; 
0x0002d8ad: fld xword ptr [esp + 0x40]; add esp, 0x7c; ret; 
0x0002d9a4: fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0002da1a: fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0002d7d9: fld xword ptr [esp + 4]; ret; 
0x000311c6: fld xword ptr [esp]; add esp, 0x10; ret; 
0x0007841d: fldcw word ptr [ebx]; mov word ptr [ebx - 0x12abcc], es; jmp ecx; 
0x00129be9: fldcw word ptr [ebx]; mov word ptr [ebx - 0x79400], es; jmp ecx; 
0x00116001: fldcw word ptr [ebx]; mov word ptr [ebx - 0x8cfe8], es; jmp ecx; 
0x000d6e1d: fldcw word ptr [ebx]; mov word ptr [ebx - 0xcc1cc], gs; jmp ecx; 
0x000d436c: fldcw word ptr [ebx]; mov word ptr [ebx - 0xcec7c], ss; jmp ecx; 
0x000cbb54: fldcw word ptr [ebx]; mov word ptr [ebx - 0xd7494], es; jmp ecx; 
0x000c1f7c: fldcw word ptr [ebx]; mov word ptr [ebx - 0xe106c], es; jmp ecx; 
0x000c06a1: fldcw word ptr [ebx]; mov word ptr [ebx - 0xe2948], es; jmp ecx; 
0x000ac914: fldcw word ptr [ebx]; mov word ptr [ebx - 0xf66d4], es; jmp ecx; 
0x000ac83c: fldcw word ptr [ebx]; mov word ptr [ebx - 0xf67ac], es; jmp ecx; 
0x0018892d: fldenv dword ptr [eax - 0xc]; jmp dword ptr [edx]; 
0x00130c9c: fldenv dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0009539a: fldenv dword ptr [esi + 0xf]; xlatb; ret; 
0x0016fd15: fldl2e; jmp dword ptr [eax + 4]; 
0x00172469: fldpi; call dword ptr [edi]; 
0x000a7572: fldpi; ret; 
0x00168b91: fldz; call dword ptr [eax]; 
0x00168b81: fldz; call eax; 
0x00177b66: fldz; jmp dword ptr [edx]; 
0x000e6fd1: fmul dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret 4; 
0x000e72a9: fmul dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret 8; 
0x000842dc: fmul dword ptr [ebp + 0xf664049]; xlatb; ret; 
0x00082ca2: fmul dword ptr [ebx + 0x7c8b2434]; and al, 4; add esp, 8; ret; 
0x00082cec: fmul dword ptr [ebx + 0x7c8b2434]; and al, 4; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000ee0fc: fmul dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x00175474: fmul dword ptr [ebx]; add byte ptr [eax], al; mov byte ptr [ebx], al; out dx, al; call dword ptr [ecx]; 
0x000b4e7e: fmul dword ptr [ecx + 0x5489240c]; and al, 4; call dword ptr [ebp - 0x34]; 
0x0002e5ab: fmul qword ptr [eax + eax]; mov eax, esi; mov edi, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x000b82cb: fmul qword ptr [ecx - 0x53172bbb]; mov cl, 0xfb; jmp dword ptr [ebp - 0x5f]; 
0x00105338: fmul qword ptr [ecx]; add byte ptr [ebx - 0xff7f], cl; jmp dword ptr [ebp + 3]; 
0x0018c3f1: fmul qword ptr [edx]; ret; 
0x0017c1d8: fmul st(7); add byte ptr [eax], al; aam 0x92; out dx, eax; jmp dword ptr [edi]; 
0x00002b77: fnsave dword ptr [edx - 0x6b]; test word ptr [ebx - 0x2e], bp; cmp dl, byte ptr [edi]; ret; 
0x00108733: fnstcw word ptr [ecx - 1]; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x00132d49: fnstenv dword ptr [eax]; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00191662: fprem1; jmp dword ptr [edx]; 
0x0019b595: fprem; call dword ptr [eax]; 
0x00166769: frndint; call dword ptr [eax]; 
0x0016634d: frndint; call dword ptr [ebx - 0x27]; 
0x0016634d: frndint; call dword ptr [ebx - 0x27]; cld; call dword ptr [ebx - 0x2c000327]; frndint; call dword ptr [ebx]; 
0x00166351: frndint; call dword ptr [ebx - 0x2c000327]; frndint; call dword ptr [ebx]; 
0x00166359: frndint; call dword ptr [ebx]; 
0x00166355: frndint; call ebx; 
0x00166355: frndint; call ebx; frndint; call dword ptr [ebx]; 
0x00166765: frndint; jmp eax; 
0x00166761: frndint; push dword ptr [eax - 0x1f000327]; frndint; call dword ptr [eax]; 
0x001664dd: frndint; push dword ptr [eax - 0x1f00032a]; salc; cld; call dword ptr [eax]; 
0x00130a6c: frstor dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0002d398: fscale; fstp st(1); ret; 
0x0013c3ef: fsin; inc dword ptr [ecx + 0x2b06ec3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0017816a: fsqrt; jmp dword ptr [edx]; 
0x0002d33f: fst qword ptr [edx]; add esp, 0xc; fsubp st(1); pop esi; pop edi; ret; 
0x0002d2e6: fst qword ptr [edx]; fsubp st(1); add esp, 0xc; pop esi; pop edi; ret; 
0x0003f56b: fstp dword ptr [ebx + 0x5e]; ret; 
0x0015880c: fstp dword ptr [edx]; push ds; ret; 
0x0017b3d3: fstp qword ptr [ecx + 0xd1cffef]; insd dword ptr es:[edi], dx; out dx, eax; jmp dword ptr [edx]; 
0x0002d4a7: fstp qword ptr [esp]; mov eax, dword ptr [esp + 4]; add esp, 0xc; and eax, 0x80000000; ret; 
0x0002d39a: fstp st(1); ret; 
0x0008d1f3: fstp st(3), st(0); or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0002d8e8: fstp xword ptr [ebp]; mov ebp, dword ptr [esp + 0x78]; add esp, 0x7c; fsubp st(1); ret; 
0x0000af74: fsub dword ptr [eax + eax]; add byte ptr [eax], dl; ret; 
0x0016a2fc: fsub dword ptr [ebp + 1]; add byte ptr [ecx + ecx*4 + 0x6630fff1], al; add dword ptr [eax], eax; mov ah, 0x89; int1; call dword ptr [eax + 0x66]; 
0x0016c2bc: fsub dword ptr [ebp + 2]; add byte ptr [eax + esi*2 - 8], ah; call dword ptr [eax]; 
0x0013438a: fsub dword ptr [ebx + eax]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00170be8: fsub dword ptr [ecx - 0x15]; jmp dword ptr [eax]; 
0x0006a362: fsub dword ptr [ecx]; ret 0x5489; 
0x00130d3c: fsub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0008caec: fsub dword ptr [esi + 0xf]; xlatb; ret; 
0x001896dc: fsub qword ptr [ecx + eax - 0xb932000]; jmp dword ptr [edi + 2]; 
0x000301fc: fsub st(1), st(0); ret 0xfffe; 
0x001430d7: fsub st(1), st(0); ret; 
0x001756e2: fsub st(5), st(0); jmp dword ptr [edx]; 
0x0017fef4: fsub st(5), st(0); sti; jmp ecx; 
0x00168bd9: fsub st(6), st(0); jmp esp; 
0x0017c811: fsub st(7), st(0); jmp edx; 
0x0002d2e8: fsubp st(1); add esp, 0xc; pop esi; pop edi; ret; 
0x0002d344: fsubp st(1); pop esi; pop edi; ret; 
0x0002d8f2: fsubp st(1); ret; 
0x00175712: fsubp st(5); jmp dword ptr [edx]; 
0x0017813a: fsubp st(6); jmp dword ptr [edx]; 
0x00168e71: fsubp st(7); call dword ptr [eax - 0x17]; 
0x00168e69: fsubp st(7); jmp dword ptr [eax - 0x18]; 
0x00168e61: fsubp st(7); push dword ptr [eax]; call 0xdec08e6a; out dx, eax; jmp dword ptr [eax - 0x18]; 
0x0016c37c: fsubr dword ptr [eax + 2]; add byte ptr [ecx + edi*2], dl; clc; call dword ptr [eax]; 
0x00097589: fsubr dword ptr [ebx]; test byte ptr [ebx - 0x10ba60], bh; jmp eax; 
0x00078789: fsubr dword ptr [ebx]; test byte ptr [ebx - 0x12a860], dh; jmp eax; 
0x00063d39: fsubr dword ptr [ebx]; test byte ptr [ebx - 0x13f2b0], cl; jmp eax; 
0x000631d1: fsubr dword ptr [ebx]; test byte ptr [ebx - 0x13fe18], cl; jmp eax; 
0x0005c1b9: fsubr dword ptr [ebx]; test byte ptr [ebx - 0x146e30], cl; jmp eax; 
0x0004cb6d: fsubr dword ptr [ebx]; test byte ptr [ebx - 0x15647c], dl; jmp eax; 
0x000278db: fsubr dword ptr [ebx]; test byte ptr [ebx - 0x17b70c], ch; jmp eax; 
0x001200f2: fsubr dword ptr [ebx]; test byte ptr [ebx - 0x82ef4], cl; shr edx, 3; jmp eax; 
0x000dc3a8: fsubr dword ptr [ebx]; test byte ptr [ebx - 0xc6c40], bh; jmp eax; 
0x000dbb29: fsubr dword ptr [ebx]; test byte ptr [ebx - 0xc74c0], bh; jmp eax; 
0x000cb894: fsubr dword ptr [ebx]; test byte ptr [ebx - 0xd7754], dl; jmp eax; 
0x000bad09: fsubr dword ptr [ebx]; test byte ptr [ebx - 0xe82e0], dh; jmp eax; 
0x000baca9: fsubr dword ptr [ebx]; test byte ptr [ebx - 0xe8340], dh; jmp eax; 
0x000ba2b1: fsubr dword ptr [ebx]; test byte ptr [ebx - 0xe8d38], dh; jmp eax; 
0x000b9d69: fsubr dword ptr [ebx]; test byte ptr [ebx - 0xe9280], dh; jmp eax; 
0x000b9d09: fsubr dword ptr [ebx]; test byte ptr [ebx - 0xe92e0], dh; jmp eax; 
0x000b0c79: fsubr dword ptr [ebx]; test byte ptr [ebx - 0xf2370], cl; jmp eax; 
0x0018a1d8: fsubr dword ptr [edi - 0x164bffff]; hlt; call dword ptr [eax + 6]; 
0x00175edc: fsubr qword ptr [eax + eax]; sal al, 0xee; jmp dword ptr [edx]; 
0x00174bd4: fsubr qword ptr [edi - 0x13]; call dword ptr [eax]; 
0x00174645: fsubr st(4); jmp dword ptr [edi]; 
0x001779ea: fsubr st(6); jmp dword ptr [edx]; 
0x00168df1: fsubr st(7); call dword ptr [eax - 0x1a]; 
0x00168de9: fsubr st(7); jmp dword ptr [eax - 0x1b]; 
0x00168de1: fsubr st(7); push dword ptr [eax]; in eax, 0; add byte ptr [eax - 0x28], bh; out dx, eax; jmp dword ptr [eax - 0x1b]; 
0x00168bd1: fucomi st(6); call dword ptr [eax]; 
0x00168bd1: fucomi st(6); call dword ptr [eax]; fadd dword ptr [eax]; add byte ptr [esp + ebx*8], al; out dx, al; jmp esp; 
0x00168bc9: fucomi st(6); inc dword ptr [eax - 0x28]; add byte ptr [eax], al; int1; fucomi st(6); call dword ptr [eax]; 
0x00168e31: fucomi st(7); call eax; 
0x00168e19: fucomi st(7); inc dword ptr [eax + 0x3c0000e6]; fucomi st(7); push dword ptr [eax + 0x480000e6]; fucomi st(7); jmp eax; 
0x00168e29: fucomi st(7); jmp eax; 
0x00168e21: fucomi st(7); push dword ptr [eax + 0x480000e6]; fucomi st(7); jmp eax; 
0x001725c5: fucomp st(3); call dword ptr [ebp + 4]; 
0x0017be68: fucomp st(6); out dx, eax; call dword ptr [eax]; 
0x00168799: fucompi st(4); call dword ptr [eax - 0x43]; 
0x00168791: fucompi st(4); push dword ptr [eax]; mov ebp, 0xdf840000; in al, dx; call dword ptr [eax - 0x43]; 
0x00168c21: fucompi st(6); call esp; 
0x00168c39: fucompi st(6); jmp dword ptr [eax]; 
0x001759e9: fucompi st(6); jmp dword ptr [esi]; 
0x00168c31: fucompi st(6); push dword ptr [edx + ebx*8]; add byte ptr [eax], al; test bh, bl; out dx, al; jmp dword ptr [eax]; 
0x0017c8b9: fucompi st(7); jmp dword ptr [esi]; 
0x0012d11f: fxch st(0), st(7); clc; dec dword ptr [ebx - 0xf775]; jmp dword ptr [ebp - 0x75]; 
0x0016e770: hlt; adc esp, edi; call esp; 
0x000a183a: hlt; add al, 0; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x0016d540: hlt; add al, 0xfa; call eax; 
0x000baca0: hlt; add byte ptr [eax], al; add byte ptr [ebp - 0x76ffd98c], cl; fsubr dword ptr [ebx]; test byte ptr [ebx - 0xe8340], dh; jmp eax; 
0x000de481: hlt; add byte ptr [eax], al; add byte ptr [ebx + 0xf824ac], cl; add byte ptr [eax], al; add esp, 0xfc; ret; 
0x0018733c: hlt; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0014aa75: hlt; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010c6a3: hlt; add esp, 8; pop esi; ret; 
0x0018a1de: hlt; call dword ptr [eax + 6]; 
0x0016adc2: hlt; call dword ptr [eax - 0x15]; 
0x0016ad42: hlt; call dword ptr [eax - 0x18]; 
0x0016acc2: hlt; call dword ptr [eax - 0x1c]; 
0x0016ac0a: hlt; call dword ptr [eax - 0x20]; 
0x0016aa82: hlt; call dword ptr [eax - 0x29]; 
0x0016aa9a: hlt; call dword ptr [eax]; 
0x001891be: hlt; call dword ptr [ebx + 1]; 
0x0018a246: hlt; call dword ptr [ebx]; 
0x0018a0a2: hlt; call dword ptr [ecx]; 
0x00188aa6: hlt; call dword ptr [edi]; 
0x001894fe: hlt; call dword ptr [edx]; 
0x0018a48a: hlt; call dword ptr [esi]; 
0x0016ab72: hlt; call eax; 
0x00188b82: hlt; call ecx; 
0x001890fa: hlt; call edi; 
0x00189fc6: hlt; call esi; 
0x0016af32: hlt; call esp; 
0x0016ca09: hlt; clc; jmp esp; 
0x00166bd1: hlt; cld; call dword ptr [eax - 0xb]; 
0x00166bd1: hlt; cld; call dword ptr [eax - 0xb]; cld; jmp eax; 
0x00166bcd: hlt; cld; inc eax; hlt; cld; call dword ptr [eax - 0xb]; 
0x00183279: hlt; cli; jmp dword ptr [ebx]; 
0x0012b73e: hlt; dec dword ptr [ebx + 0x568b1c46]; and byte ptr [ebx + 0x46894c4e], cl; add al, 0x29; ret 0x4689; 
0x00168ad0: hlt; dec ecx; out dx, al; call dword ptr [eax - 0x2d]; 
0x0018d1f4: hlt; fild word ptr [ecx]; add byte ptr [eax - 0x22], bh; cmc; jmp dword ptr [ecx]; 
0x00168f10: hlt; in al, dx; out dx, eax; jmp dword ptr [eax - 0x13]; 
0x000ca70f: hlt; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000caaf7: hlt; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x0011fbb0: hlt; inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x0011f980: hlt; inc dword ptr [ebx - 0x6bf0fe08]; rol byte ptr [ebx - 0x49f0d73c], 0xc0; pop ebx; ret; 
0x0011f9d9: hlt; inc dword ptr [ebx - 0x6bf0fe08]; rol byte ptr [ebx - 0x49f0e73c], 0xc0; pop ebx; ret; 
0x0018438d: hlt; int1; jmp dword ptr [edi]; 
0x0016ac3a: hlt; jmp dword ptr [eax - 0x1f]; 
0x0016ae7a: hlt; jmp dword ptr [eax - 0xf]; 
0x0016ab82: hlt; jmp dword ptr [eax]; 
0x00188bbe: hlt; jmp dword ptr [ebp]; 
0x00189422: hlt; jmp dword ptr [ebx + 1]; 
0x0018a3ae: hlt; jmp dword ptr [ebx]; 
0x00188c92: hlt; jmp dword ptr [ecx + 1]; 
0x00188c1a: hlt; jmp dword ptr [ecx]; 
0x001896e2: hlt; jmp dword ptr [edi + 2]; 
0x00189a5a: hlt; jmp dword ptr [edi]; 
0x0018889f: hlt; jmp dword ptr [edx]; 
0x001892ce: hlt; jmp dword ptr [esi + 1]; 
0x000d9a0c: hlt; jmp dword ptr [esi - 0x70]; 
0x00188f52: hlt; jmp dword ptr [esi]; 
0x001893be: hlt; jmp esi; 
0x0016ad32: hlt; jmp esp; 
0x0017b799: hlt; jns 0x17b78b; jmp dword ptr [edx]; 
0x0016ac8a: hlt; lcall ptr [eax + 0x200001e3]; ret 0xfff4; 
0x00189c9a: hlt; lcall ptr [eax + eax]; add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e5a02], al; ret; 
0x0016ad3a: hlt; ljmp ptr [eax]; call 0xcafaad43; hlt; call dword ptr [eax - 0x18]; 
0x0016ae72: hlt; ljmp ptr [eax]; lock add dword ptr [eax], eax; and al, 0xe8; hlt; jmp dword ptr [eax - 0xf]; 
0x00187ffc: hlt; mov ah, 0xf3; jmp dword ptr [esi + 3]; 
0x0016d0b8: hlt; mov dl, 0xf9; call dword ptr [eax - 0x48]; 
0x00123878: hlt; mov dl, 0xfb; dec dword ptr [ebx - 0xeb6b]; dec dword ptr [ebx - 0xdf7b]; dec dword ptr [ebx - 0xf775]; jmp dword ptr [ebp - 0x77]; 
0x001336e7: hlt; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00133087: hlt; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0013319e: hlt; mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132b8e: hlt; mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00113c38: hlt; mov eax, 0x868d0000; pushal; and al, byte ptr [eax]; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00175a87: hlt; mov eax, 0xd1cffee; push ebp; mov bh, 0xee; jmp dword ptr [edx]; 
0x0006c05b: hlt; mov eax, dword ptr [esp + 8]; add eax, esi; pop esi; ret; 
0x0017adf4: hlt; mov ebx, 0xc080000; sti; jmp dword ptr [ebx]; 
0x00134e41: hlt; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001362d1: hlt; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x0013be21: hlt; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x000f1cf7: hlt; mov edi, dword ptr [ebp - 4]; mov esp, ebp; pop ebp; ret; 
0x0017b1a4: hlt; mov edx, 0xf7cd0000; out dx, eax; call dword ptr [eax]; 
0x000fb80e: hlt; mov edx, dword ptr [edx + 0x14]; xor eax, eax; test edx, edx; sete al; ret; 
0x00030d2c: hlt; mov esi, dword ptr [ebp - 8]; mov edi, dword ptr [ebp - 4]; mov esp, ebp; pop ebp; ret; 
0x0016bc20: hlt; out 0xf7, eax; jmp dword ptr [eax + 0x44]; 
0x0017b689: hlt; out dx, eax; call dword ptr [eax]; 
0x0017cf45: hlt; out dx, eax; call dword ptr [edx]; 
0x001960f4: hlt; outsb dx, byte ptr [esi]; add al, byte ptr [eax]; sub byte ptr [eax - 9], ch; call dword ptr [ecx]; 
0x0016ee10: hlt; outsd dx, dword ptr [esi]; cld; call dword ptr [eax]; 
0x000c07e7: hlt; pop ebx; pop esi; pop edi; pop ebp; ret 0x10; 
0x0001bf54: hlt; pop ebx; pop esi; pop edi; pop ebp; ret 0xc; 
0x0001715b: hlt; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00027c21: hlt; pop ebx; pop esi; pop edi; pop ebp; ret 8; 
0x0001a120: hlt; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0014785a: hlt; pop edi; ret; 
0x0016f9f4: hlt; pop es; add byte ptr [eax], al; clc; ret 0xffea; 
0x000a75e3: hlt; pop esi; ret; 
0x00023bd8: hlt; pop ss; add byte ptr [ebx - 0x1577f], cl; jmp dword ptr [ebp - 0x75]; 
0x0016ccd4: hlt; popfd; add al, byte ptr [eax]; in al, 0x4e; stc; jmp dword ptr [eax]; 
0x001682b0: hlt; push -0x14; call dword ptr [eax - 0x5d]; 
0x0016a40c: hlt; push 1; add ah, dl; mov dl, 0xf1; call dword ptr [eax]; 
0x0016ab6a: hlt; push dword ptr [eax + 0x540001dc]; xor dh, ah; call eax; 
0x0016adba: hlt; push dword ptr [eax - 0x2afffe15]; fcomi st(4); call dword ptr [eax - 0x15]; 
0x0016ab7a: hlt; push eax; fadd qword ptr [ecx]; add byte ptr [ebx + esi], dl; hlt; jmp dword ptr [eax]; 
0x00171bec: hlt; ret 0xffeb; 
0x00168708: hlt; ret 0xffec; 
0x0016e448: hlt; ret 0xfffb; 
0x0017baa4: hlt; ret; 
0x0017b7a4: hlt; rol byte ptr [eax], 0; mov cl, 0xf3; out dx, eax; call dword ptr [eax]; 
0x001890f4: hlt; sahf; add dword ptr [eax], eax; or byte ptr [edx - 0xc], al; call edi; 
0x00169ac8: hlt; sal al, 0xff; lock xor byte ptr [ecx], al; add byte ptr [ecx + eax*8 - 0x10], al; call dword ptr [eax]; 
0x0016e548: hlt; sar bl, 1; call dword ptr [eax + 0x30]; 
0x0017df2c: hlt; sbb al, 0xf0; call esp; 
0x001987ec: hlt; sbb edi, eax; jmp dword ptr [edi]; 
0x00188a6c: hlt; sbb esp, esi; call eax; 
0x0016a3b0: hlt; scasd eax, dword ptr es:[edi]; int1; ljmp ptr [ecx + ebp*2 - 0x4f8bffff]; int1; call esp; 
0x0016d469: hlt; stc; call dword ptr [eax - 0x32]; 
0x0016d461: hlt; stc; jmp dword ptr [eax]; 
0x00169c68: hlt; sub al, 0xf1; jmp esp; 
0x001468d7: hlt; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00179af4: hlt; test al, 0; add al, ch; pop ebp; out dx, eax; jmp dword ptr [ecx]; 
0x00003d91: hlt; test al, 0x35; mov byte ptr [0x5393558d], al; inc eax; or byte ptr fs:[ebx + 0x4e], ch; ret 0x6bba; 
0x0016c4b8: hlt; test al, bh; jmp eax; 
0x0016d9d8: hlt; xchg eax, ebp; cli; jmp esp; 
0x000fb763: hlt; xor eax, eax; pop esi; ret; 
0x0007c833: hlt; xor eax, eax; ret; 
0x0016ab68: hlt; xor esp, esi; push dword ptr [eax + 0x540001dc]; xor dh, ah; call eax; 
0x00166bdd: idiv ah; jmp dword ptr [esi]; 
0x0009756b: idiv al; jmp dword ptr [esi - 0x70]; 
0x000e85b1: idiv bh; add esp, 0x18; pop ebx; ret; 
0x0016b43a: idiv bh; clc; adc eax, dword ptr [edx]; add ah, dl; cmp al, 0xf6; call dword ptr [eax + 0x14]; 
0x00190fee: idiv bh; cmp al, 0; add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e7a02], al; ret; 
0x0016b382: idiv bh; cwde; lar eax, word ptr [eax]; sub dh, dh; call eax; 
0x000c2b6d: idiv bh; dec dword ptr [ebx - 0x15755]; jmp dword ptr [ebp - 0x75]; 
0x000439e0: idiv bh; dec dword ptr [ebx - 0x1577d]; jmp dword ptr [ebp - 0x75]; 
0x0008834c: idiv bh; inc dword ptr [eax + 0xf000a79]; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000882f6: idiv bh; inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x001216a0: idiv bh; inc dword ptr [ebx - 0x3b7ceb14]; and al, 0x5e; pop edi; ret; 
0x00087aa2: idiv bh; jmp dword ptr [esi + 0xf]; 
0x000d6d64: idiv bh; jmp dword ptr [esi - 0x39]; 
0x00029fb3: idiv bh; jmp dword ptr [esi - 0x70]; 
0x0018e876: idiv bh; jp 0x18e87a; add byte ptr [eax], al; add byte ptr [ebx + 0xe], cl; or byte ptr [ebx + 0x40e5902], al; ret; 
0x0016b55a: idiv bh; mov byte ptr [edx + eax], bl; add byte ptr [esi + ecx*4 - 0xa], al; jmp eax; 
0x001127a1: idiv bh; mov dword ptr [esp + 0x1c], ecx; mov dword ptr [esp + 8], edx; mov dword ptr [esp + 4], 5; mov dword ptr [esp], edi; call dword ptr [eax]; 
0x00103840: idiv bh; mov dword ptr [esp], eax; call edx; 
0x0010ff55: idiv bh; mov eax, esi; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000b36f1: idiv bh; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00190e22: idiv bh; ret 0; 
0x00190eee: idiv bh; ret; 
0x001959e5: idiv bh; sbb al, 0xd; adc byte ptr [ebp - 0xa], cl; jmp dword ptr [edx]; 
0x00191fe1: idiv bh; sbb al, 0xd; add dh, dh; jmp dword ptr [edx]; 
0x00193711: idiv bh; sbb al, 0xd; and al, 0xf6; jmp dword ptr [edx]; 
0x00193a11: idiv bh; sbb al, 0xd; clc; and al, 0xf6; jmp dword ptr [edx]; 
0x001955e9: idiv bh; sbb al, 0xd; cmp eax, dword ptr [edx - 0xa]; jmp dword ptr [edx]; 
0x00194ad5: idiv bh; sbb al, 0xd; dec eax; cmp esi, esi; jmp dword ptr [edx]; 
0x00192cc1: idiv bh; sbb al, 0xd; imul edx, dword ptr [edi], -0xa; jmp dword ptr [edx]; 
0x00194551: idiv bh; sbb al, 0xd; in al, dx; xor al, 0xf6; jmp dword ptr [edx]; 
0x00194051: idiv bh; sbb al, 0xd; iretd; sub esi, esi; jmp dword ptr [edx]; 
0x00195a45: idiv bh; sbb al, 0xd; mov dword ptr [ebp - 0xa], ecx; jmp dword ptr [edx]; 
0x00195519: idiv bh; sbb al, 0xd; or dword ptr [edx - 0xa], eax; jmp dword ptr [edx]; 
0x00191fb1: idiv bh; sbb al, 0xd; out dx, al; add esi, esi; jmp dword ptr [edx]; 
0x001937d1: idiv bh; sbb al, 0xd; out dx, al; and al, 0xf6; jmp dword ptr [edx]; 
0x001943d5: idiv bh; sbb al, 0xd; pop edx; xor al, 0xf6; jmp dword ptr [edx]; 
0x00194cd9: idiv bh; sbb al, 0xd; pop es; cmp esi, esi; jmp dword ptr [edx]; 
0x00193281: idiv bh; sbb al, 0xd; pushal; sbb dh, dh; jmp dword ptr [edx]; 
0x00195301: idiv bh; sbb al, 0xd; ret; 
0x00194f3d: idiv bh; sbb al, 0xd; sar byte ptr [esi + esi*8], 1; jmp dword ptr [edx]; 
0x001932e1: idiv bh; sbb al, 0xd; stosd dword ptr es:[edi], eax; sbb dh, dh; jmp dword ptr [edx]; 
0x00193035: idiv bh; sbb al, 0xd; xchg eax, ecx; sbb esi, esi; jmp dword ptr [edx]; 
0x001955b9: idiv bh; sbb al, 0xd; xor al, byte ptr [edx - 0xa]; jmp dword ptr [edx]; 
0x00195449: idiv bh; sbb al, 0xd; xor byte ptr [ecx - 0xa], al; jmp dword ptr [edx]; 
0x0015afb4: idiv bh; test eax, 0xc3fffb00; add dh, bh; jmp edi; 
0x00129a4b: idiv byte ptr [eax + 4]; add esp, 0xc; ret; 
0x000f7a61: idiv byte ptr [ecx]; ret 0x1e7e; 
0x00081b9a: idiv byte ptr [edi - 0x15]; mov edx, edi; or byte ptr [ecx], dl; pop esi; pop edi; ret; 
0x0016744c: idiv byte ptr [edi*8 - 0x2c3ff01]; call dword ptr [eax + 0x3c]; 
0x000e8c4d: idiv edi; add esp, 0x18; mov eax, 1; pop ebx; ret; 
0x000ea11d: idiv edi; add esp, 0x18; pop ebx; ret; 
0x000a57f9: idiv edi; add esp, 0x24; mov eax, esi; pop ebx; pop esi; ret; 
0x000ec6b2: idiv edi; add esp, 0x418; pop ebx; ret; 
0x0019b527: idiv edi; and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; cmp byte ptr [esi - 0x25d7fffe], 0xf8; call dword ptr [eax]; 
0x0019b467: idiv edi; and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; sar byte ptr [ebp - 0x2557fffe], 0xf8; call dword ptr [eax]; 
0x0015a3c1: idiv edi; call dword ptr [edi - 0x4c]; 
0x0015a3b1: idiv edi; call dword ptr [edx]; 
0x0016bc1a: idiv edi; cmp al, 0x44; add al, byte ptr [eax]; hlt; out 0xf7, eax; jmp dword ptr [eax + 0x44]; 
0x000c111c: idiv edi; dec dword ptr [ebx - 0x1574d]; jmp dword ptr [ebp - 0x75]; 
0x000b8eaa: idiv edi; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x000a0942: idiv edi; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x0010b1ad: idiv edi; dec dword ptr [ebx - 0xff7d]; jmp dword ptr [ebp - 0x39]; 
0x0016ba2a: idiv edi; dec esp; cmp byte ptr [edx], al; add byte ptr [edi + ecx*4 - 9], al; jmp dword ptr [eax + 0x38]; 
0x000dff8a: idiv edi; inc dword ptr [ecx + 0xd4c4]; add byte ptr [ebx + 0x5e], bl; ret; 
0x000a5595: idiv edi; inc dword ptr [ecx]; ret 0x5589; 
0x00087bad: idiv edi; jmp dword ptr [esi + 0xf]; 
0x000d4f9b: idiv edi; jmp dword ptr [esi - 0x70]; 
0x00116007: idiv edi; jmp ecx; 
0x001195be: idiv edi; jmp edx; 
0x00113267: idiv edi; jmp esi; 
0x0011ba73: idiv edi; mov dword ptr [esp + 0x10], edx; lea edx, dword ptr [ebx - 0x84aa4]; mov dword ptr [esp + 8], edx; call dword ptr [eax]; 
0x0011ba7d: idiv edi; mov dword ptr [esp + 8], edx; call dword ptr [eax]; 
0x000e9a3f: idiv edi; mov eax, 1; add esp, 0x18; pop ebx; ret; 
0x000ed982: idiv edi; mov eax, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000a5796: idiv edi; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00195b56: idiv edi; ret; 
0x0016b98a: idiv edi; sal byte ptr [edx + eax], 0; jp 0x16b98a; call esp; 
0x001989ad: idiv edi; sbb al, 0xd; cvttps2pi mm6, xmm7; jmp dword ptr [edx]; 
0x001200f8: idiv edi; shr edx, 3; jmp eax; 
0x0017b2f9: imul bh; call dword ptr [eax]; 
0x00167f59: imul bl; dec esp; xchg eax, edx; add byte ptr [eax], al; imul bl; jmp eax; 
0x00167f61: imul bl; jmp eax; 
0x000726a1: imul bl; ret; 
0x00070200: imul byte ptr [0x568b0013]; adc al, 0x8b; inc esi; adc byte ptr [ecx], bh; ret 0x3776; 
0x001468f7: imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x00084a18: imul byte ptr [ecx]; ret 0x280f; 
0x0008640c: imul byte ptr [ecx]; ret 0xc301; 
0x0016720c: imul byte ptr [esi]; std; jmp eax; 
0x00088292: imul cl; mov eax, 0x90fffff0; lea esi, dword ptr [esi]; mov eax, edx; pop ebx; ret; 
0x000d5cf6: imul cl; pop edx; out 0xff, al; inc dword ptr [ecx]; ret 0x13e9; 
0x00146888: imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x00084b48: imul dword ptr [ecx]; ret 0x280f; 
0x0008656c: imul dword ptr [ecx]; ret 0xc301; 
0x000e3200: imul eax, dword ptr [eax + eax], -0x7f; ret; 
0x000c74c2: imul eax, dword ptr [eax], 0x450f0000; ret 0x70e9; 
0x000c91da: imul eax, dword ptr [eax], 0x450f0000; ret 0x8ae9; 
0x0016a41d: imul eax, dword ptr [ecx], 0; inc esp; mov bl, 0xf1; call dword ptr [eax + 0x6b]; 
0x00184741: imul eax, dword ptr [ecx], 0xa; ret; 
0x0016a3b5: imul eax, dword ptr [ecx], 0xf1b07400; call esp; 
0x00185ba9: imul eax, dword ptr [ecx], 0xf2da9400; call dword ptr [edx]; 
0x0008d643: imul eax, dword ptr [edi], 0x5e5f0000; pop ebx; ret; 
0x0001f2ce: imul eax, dword ptr [edx], 0; add byte ptr [ebx - 0x76bfdb8c], cl; ret 0x542b; 
0x00195d41: imul eax, dword ptr [edx], 0; mov word ptr [edi - 9], es; jmp dword ptr [esi]; 
0x0004b639: imul eax, dword ptr [edx], 0x244c8b00; sub al, 0x83; rol byte ptr [ecx], 0xf; xchg eax, esp; ret 0x97e9; 
0x00195ba9: imul eax, dword ptr [edx], 0xf73f4400; call dword ptr [ecx]; 
0x00195bdd: imul eax, dword ptr [edx], 0xf73f7000; call dword ptr [eax]; 
0x0016c39d: imul eax, dword ptr [edx], 0xf87a1400; jmp dword ptr [eax + 0x69]; 
0x0016c3bd: imul eax, dword ptr [edx], 0xf87b1400; inc eax; imul eax, dword ptr [edx], 0xf87b5400; call esp; 
0x0016c3c5: imul eax, dword ptr [edx], 0xf87b5400; call esp; 
0x0003160a: imul eax, dword ptr [esp + 0x158]; add esi, eax; mov dword ptr [esp], esi; call edi; 
0x000a7b43: imul eax, edx; ret; 
0x000b3654: imul eax, esi, 0x34; add eax, dword ptr [ecx]; add esp, 0x18; pop esi; ret; 
0x0010dbc5: imul eax; dec dword ptr [ecx - 0x7cf5740e]; ret 0x8d04; 
0x000c6f17: imul ebp, dword ptr [eax], 0xfffe8ae9; jmp dword ptr [esi - 0x70]; 
0x00168819: imul ebp, ebp, -1; or cl, al; add byte ptr [eax], al; and al, 0x6c; in eax, dx; jmp dword ptr [eax]; 
0x00174f55: imul ebp; jmp dword ptr [ebx]; 
0x00080ac6: imul ebx, dword ptr [ebx + eax*4], 0x5f5e44c4; pop ebp; ret; 
0x00184a8b: imul ebx, dword ptr [esi + 0xd1cfff1], -0x52; popfd; int1; jmp dword ptr [edx]; 
0x0017804d: imul ebx, eax, -6; jmp dword ptr [edx]; 
0x00166560: imul ebx, eax, 0xd889fffc; cld; ljmp ptr [ecx - 0x36000328]; fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x0010e891: imul ebx, esp, -0xd; dec dword ptr [ecx - 0x7cf57406]; ret 0x8d04; 
0x00172a01: imul ebx; call ebx; 
0x0009150a: imul ecx, dword ptr [eax - 0x3e7efff7], 0xc9376; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00074c4c: imul ecx, dword ptr [ebx + 0x194093], 0x4c8b8d00; add al, 0; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x77]; 
0x00065526: imul ecx, dword ptr [ebx - 0x3f7a97ba], 0x468b5a7e; push esp; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x00073432: imul ecx, dword ptr [ebx], 0xbfc18100; sti; adc al, byte ptr [eax]; mov eax, dword ptr [ecx + 0x96c]; ret; 
0x0006ac01: imul ecx, dword ptr [ecx + 0x245c8bc8], 0x10; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0005d32d: imul ecx, dword ptr [edi], 0x19b884; add byte ptr [ebx - 0x7af0cf02], al; ret 0x18; 
0x0018c1d1: imul ecx, dword ptr [edx], 0xc6c7040e; ret; 
0x00171fea: imul ecx, dword ptr [edx], 0xe; add al, 0xc6; ret; 
0x00197687: imul ecx, dword ptr [esi], 0x14; inc ebx; ret; 
0x00172e45: imul ecx, dword ptr [esi], 0x40e4108; ret; 
0x00172487: imul ecx, dword ptr [esi], 0xc0e4110; ret; 
0x0017ec15: imul ecx, dword ptr [esi], 4; ret; 
0x0016e119: imul edi, ebx, 0x31a08ff; add byte ptr [edx + ebp*2 - 5], dl; call dword ptr [eax + 0x1a]; 
0x0013325a: imul edi, edi, -1; add ebx, 0x32e43; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00133172: imul edi, edi, -1; add ebx, 0x32eab; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00070742: imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x00133430: imul edi, edi, 0x6dc381ff; sub al, 3; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x000e829f: imul edi, edi, 0x89f189ff; ret 0xcb87; 
0x00055c3f: imul edi, edi, 0xc4c481ff; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00097c2b: imul edi, esi, -1; add esp, 0x18; pop ebx; ret; 
0x0017b1a9: imul edi; call dword ptr [eax]; 
0x000231a2: imul edx, dword ptr [eax], 0; add ecx, 0x17fe4f; mov eax, dword ptr [ecx + 0xfe4]; ret; 
0x0009480a: imul edx, dword ptr [ebp + 9], 0xf6c18100; pushal; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000f1be3: imul edx, dword ptr [ebx - 0xe], 0x18c483ff; pop ebx; ret; 
0x00192cc5: imul edx, dword ptr [edi], -0xa; jmp dword ptr [edx]; 
0x0010916d: imul edx, eax, 0x8357e983; std; or dword ptr [edi], ecx; inc esi; int 0x80; 
0x00177575: imul edx, ecx, -0x12; jmp dword ptr [edx]; 
0x00002b7c: imul edx, edx, 0x3a; adc al, 0xe7; ret; 
0x000a8667: imul edx, edx, 0xe10; pop esi; add eax, edx; ret; 
0x00186df7: imul esi, dword ptr [edx - 0xe], 0xf20d1cff; jno 0x186df2; jmp dword ptr [edx]; 
0x0012bd5a: imul esi, esp, -1; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000afc30: imul esp, dword ptr [ebx + eax*4], 0x490f01ea; ret 0xed85; 
0x000e4ce1: imul esp, dword ptr [edx], -0xd; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x000ed4e8: in al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00068f51: in al, 0; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xe8]; add esp, 0xec; ret; 
0x000695c5: in al, 0; add byte ptr [eax], al; mov esi, dword ptr [esp + 0xe0]; mov ebp, dword ptr [esp + 0xe8]; add esp, 0xec; ret; 
0x00184980: in al, 0; add dword ptr [eax], eax; pop esp; sbb dl, dh; call dword ptr [ecx]; 
0x00170be4: in al, 0x19; add byte ptr [eax], al; fsub dword ptr [ecx - 0x15]; jmp dword ptr [eax]; 
0x0016b0f8: in al, 0x1d; cmc; call eax; 
0x0017496c: in al, 0x30; in eax, dx; call dword ptr [ebx + 1]; 
0x0016d760: in al, 0x37; cli; push dword ptr [eax + 0x340002e3]; cmp dl, bh; jmp esp; 
0x00124b30: in al, 0x3a; add byte ptr [eax], al; add dword ptr [ebp + 0x75], esi; add esp, 8; pop ebx; ret; 
0x0016d790: in al, 0x3f; cli; dec dword ptr [0x40040002]; cli; jmp dword ptr [eax]; 
0x0016c098: in al, 0x40; clc; jmp esp; 
0x0016c0e8: in al, 0x4a; clc; jmp esp; 
0x0016c128: in al, 0x4e; clc; call esp; 
0x0016ccd8: in al, 0x4e; stc; jmp dword ptr [eax]; 
0x0016c00c: in al, 0x57; add al, byte ptr [eax]; xchg eax, esp; aaa; clc; call dword ptr [eax]; 
0x0016a100: in al, 0x5c; int1; call dword ptr [eax + 0x5a]; 
0x00199d1c: in al, 0x5d; clc; call dword ptr [ebp]; 
0x0016a188: in al, 0x66; int1; call dword ptr [eax]; 
0x001759e4: in al, 0x67; add byte ptr [eax], al; sub bh, bl; out dx, al; jmp dword ptr [esi]; 
0x0016e118: in al, 0x69; sti; dec dword ptr [eax]; sbb al, byte ptr [ebx]; add byte ptr [edx + ebp*2 - 5], dl; call dword ptr [eax + 0x1a]; 
0x00168828: in al, 0x6c; in eax, dx; jmp dword ptr [eax - 0x3f]; 
0x0017bac9: in al, 0x80; out dx, eax; jmp dword ptr [edx]; 
0x001242f8: in al, 0x83; clc; dec dword ptr [edi]; inc esp; ret 0x508d; 
0x0016ce60: in al, 0x87; stc; call esp; 
0x0001a669: in al, 0x89; adc al, 0x24; call eax; 
0x0017aa4c: in al, 0x89; out dx, eax; call dword ptr [edx]; 
0x0003f783: in al, 0x89; ret 0x9066; 
0x000b830d: in al, 0x89; ret; 
0x000ff5ac: in al, 0x8b; add byte ptr [ecx - 0x1617dbfc], cl; fincstp; dec dword ptr [ebx - 0xf775]; jmp dword ptr [ebp - 0x75]; 
0x00031ec4: in al, 0x8b; dec ebp; adc al, 0x83; jmp dword ptr [eax]; 
0x0016cec8: in al, 0x92; stc; jmp eax; 
0x00168460: in al, 0x94; in al, dx; ljmp ptr [eax + 0x40000ac]; xchg eax, esi; in al, dx; call eax; 
0x0016cf30: in al, 0x9d; stc; call esp; 
0x001689a8: in al, 0xa0; in eax, dx; dec dword ptr [edx + ecx*8 - 0x5d8c0000]; in eax, dx; call esp; 
0x0017c2f4: in al, 0xa; push cs; adc al, 0x43; ret; 
0x0016dab8: in al, 0xab; cli; jmp dword ptr [eax - 9]; 
0x0019a994: in al, 0xb2; add al, byte ptr [eax]; adc al, 0xa2; clc; call dword ptr [eax]; 
0x00168588: in al, 0xb2; in al, dx; jmp dword ptr [eax - 0x4d]; 
0x001685e0: in al, 0xb5; in al, dx; call eax; 
0x0018c70c: in al, 0xba; cmc; call dword ptr [ebp]; 
0x0016c738: in al, 0xbc; clc; jmp esp; 
0x0017b594: in al, 0xbe; add byte ptr [eax], al; and ebp, esi; out dx, eax; call dword ptr [eax]; 
0x0017bb94: in al, 0xc4; add byte ptr [eax], al; loope 0x17bb8a; out dx, eax; call dword ptr [eax]; 
0x0016d1d0: in al, 0xc7; stc; push eax; mov esi, 0xc8fa0002; stc; jmp dword ptr [eax - 0x42]; 
0x0016dba8: in al, 0xc8; cli; call dword ptr [eax - 4]; 
0x000e6612: in al, 0xc9; or eax, dword ptr [eax]; xchg edi, ebx; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0016ad40: in al, 0xca; hlt; call dword ptr [eax - 0x18]; 
0x0018c1e4: in al, 0xcf; add dword ptr [eax], eax; clc; and edi, edx; call dword ptr [edi]; 
0x00168d98: in al, 0xd3; out dx, eax; push dword ptr [ebx - 0x2bdc0000]; out dx, eax; call eax; 
0x0016dc50: in al, 0xd4; cli; inc dword ptr [eax]; add byte ptr [ebx], al; add byte ptr [ebp + edx*8 - 6], al; jmp dword ptr [eax]; 
0x00168b78: in al, 0xd4; out dx, al; dec dword ptr [esi + edx*8 - 0x26fc0000]; out dx, al; call eax; 
0x000a1f98: in al, 0xdd; clc; inc dword ptr [ebp + 0x34850fc0]; or al, byte ptr [eax]; add byte ptr [ebx - 0x76bfdbbc], cl; ret 0xfac1; 
0x0016e5c0: in al, 0xe2; sti; jmp dword ptr [eax]; 
0x0016a958: in al, 0xe5; push eax; int 1; add ch, dh; out 0xf3, al; jmp dword ptr [eax - 0x33]; 
0x00168f0c: in al, 0xeb; add byte ptr [eax], al; hlt; in al, dx; out dx, eax; jmp dword ptr [eax - 0x13]; 
0x00172b66: in al, 0xeb; jmp dword ptr [edx]; 
0x00168ea9: in al, 0xef; call dword ptr [eax]; 
0x0017c935: in al, 0xef; jmp ebx; 
0x0016a609: in al, 0xf2; jmp esp; 
0x00189e9d: in al, 0xf4; call dword ptr [edx]; 
0x0016b320: in al, 0xf7; cmc; call eax; 
0x0016bc09: in al, 0xf7; jmp esp; 
0x000231ad: in al, 0xf; add byte ptr [eax], al; ret; 
0x00148229: in al, 0xf; test dword ptr [eax - 0x77ffffff], esi; ret 0xe280; 
0x00148354: in al, 0xf; test dword ptr [ebp - 0x78000000], eax; ret 0xe280; 
0x0016dcb1: in al, 0xfa; call eax; 
0x0016dcb9: in al, 0xfa; jmp esp; 
0x000c9d89: in al, 0xfe; neg eax; pop ebp; ret; 
0x00050f35: in al, 0xff; dec dword ptr [ecx - 0x18b7b]; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x75]; 
0x000fef72: in al, 0xff; jmp dword ptr [esi - 0x77]; 
0x0016acbd: in al, 1; add ah, dl; ret 0xfff4; 
0x0018d6f1: in al, 1; add byte ptr [ebx + ebp*8], bl; cmc; call dword ptr [edx]; 
0x00192d01: in al, 1; add byte ptr [ecx + esi*8 - 0xa], bh; call dword ptr [esi]; 
0x0016acdd: in al, 1; add byte ptr [esp + eax*8], al; hlt; call eax; 
0x0016d775: in al, 2; add ah, dl; cmp edi, edx; call dword ptr [eax - 0x1c]; 
0x00170062: in al, 3; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0016d53c: in al, dx; aam 2; add ah, dh; add al, 0xfa; call eax; 
0x000740c9: in al, dx; adc al, 0xe8; mov dword ptr [0x81000b5c], eax; ret; 
0x000e37b3: in al, dx; adc al, 0xe8; mov ecx, 0x81000465; ret; 
0x000021cf: in al, dx; adc dword ptr [si], eax; ret; 
0x000dac43: in al, dx; add al, 0x89; ret 0x789; 
0x000dae08: in al, dx; add al, 0x89; ret 0xd285; 
0x0013826b: in al, dx; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0011800b: in al, dx; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000b09a8: in al, dx; add byte ptr [eax], al; add byte ptr [ebx + 0x758b144d], cl; or al, 0xe8; mov esp, 0x81000793; ret; 
0x0004c6f4: in al, dx; add byte ptr [eax], al; add dh, dh; ret 0xf80; 
0x001758ec: in al, dx; add byte ptr [eax], al; mov al, 0x61; out dx, al; call edx; 
0x0017dee9: in al, dx; add byte ptr [eax], al; test byte ptr [eax + esi*8], bl; jmp dword ptr [edx]; 
0x00172d9c: in al, dx; add byte ptr ss:[eax], al; pop edx; add ah, ch; call dword ptr [eax]; 
0x0016ff66: in al, dx; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0009be05: in al, dx; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0018dea1: in al, dx; add dword ptr [eax], eax; fdiv st(6), st(0); cmc; call dword ptr [ebp]; 
0x0018a725: in al, dx; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x001016cb: in al, dx; add esp, 4; mov eax, edi; pop esi; pop edi; ret; 
0x000477a8: in al, dx; and byte ptr [eax], al; add al, ch; ret 0xe25; 
0x0016879a: in al, dx; call dword ptr [eax - 0x43]; 
0x001682f2: in al, dx; call dword ptr [eax - 0x5c]; 
0x001682b2: in al, dx; call dword ptr [eax - 0x5d]; 
0x001680da: in al, dx; call dword ptr [eax - 0x65]; 
0x0016806a: in al, dx; call dword ptr [eax - 0x68]; 
0x00168172: in al, dx; call dword ptr [eax]; 
0x00168092: in al, dx; call dword ptr [ecx + ebx*4 + 0x347e0000]; in al, dx; call esp; 
0x00173272: in al, dx; call dword ptr [edi + 1]; 
0x00173e36: in al, dx; call dword ptr [edi + 4]; 
0x00173722: in al, dx; call dword ptr [edi + 7]; 
0x001734ae: in al, dx; call dword ptr [edi]; 
0x001684d2: in al, dx; call dword ptr [esi + ebp*4 - 0x5c8c0000]; in al, dx; call esp; 
0x0016800a: in al, dx; call dword ptr [esi + edx*4 + 0xab40000]; in al, dx; call esp; 
0x0017351a: in al, dx; call dword ptr [esi]; 
0x0016815a: in al, dx; call eax; 
0x00168012: in al, dx; call esp; 
0x00029194: in al, dx; cld; add byte ptr [eax], al; add byte ptr [ecx - 0x8f6b], cl; jmp dword ptr [ebp - 0x75]; 
0x00166979: in al, dx; cld; call dword ptr [edx]; 
0x001669c9: in al, dx; cld; inc dword ptr [ebp + ebp*8 - 4]; call dword ptr [ebx + ebp*8 - 4]; call esp; 
0x00166969: in al, dx; cld; jmp dword ptr [edx - 0x13]; 
0x001337cb: in al, dx; cld; jmp dword ptr [esi - 0x70]; 
0x00166a19: in al, dx; cld; jmp eax; 
0x001669c5: in al, dx; cld; push dword ptr [esp + ebp*8 - 0x12bb0004]; cld; call dword ptr [ebx + ebp*8 - 4]; call esp; 
0x000e7457: in al, dx; cmp al, 0xe8; adc eax, 0x81000429; ret; 
0x001946f4: in al, dx; cmpsb byte ptr [esi], byte ptr es:[edi]; stc; jmp dword ptr [edi]; 
0x000021cb: in al, dx; daa; push edi; xor ebp, esp; adc dword ptr [si], eax; ret; 
0x0016843a: in al, dx; dec dword ptr [eax + 0x40000ab]; xchg eax, edx; in al, dx; jmp eax; 
0x0014b379: in al, dx; dec dword ptr [ebx + 0x24048900]; call 0x16f50; add esp, 0x18; pop ebx; ret; 
0x0018d9f4: in al, dx; div ebp; call dword ptr [esi]; 
0x001930d4: in al, dx; div esi; jmp dword ptr [eax]; 
0x00168ea8: in al, dx; in al, 0xef; call dword ptr [eax]; 
0x00189eb4: in al, dx; in al, 0xf4; call dword ptr [edx]; 
0x000477a7: in al, dx; in al, dx; and byte ptr [eax], al; add al, ch; ret 0xe25; 
0x0014ac30: in al, dx; inc dword ptr [ebp - 0x74158a0a]; and dword ptr [eax + 0x1b], 0; add byte ptr [ecx + 0xce82404], cl; ret; 
0x0014aae7: in al, dx; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0014a4d0: in al, dx; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0014a9de: in al, dx; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x001680a2: in al, dx; inc dword ptr [ecx + ebx*4]; add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; xor al, 0xec; call esp; 
0x001686aa: in al, dx; inc esp; mov eax, 0xbf840000; in al, dx; jmp esp; 
0x0016acb4: in al, dx; jecxz 0x16acb8; add ah, al; ret 0xfff4; 
0x0016858a: in al, dx; jmp dword ptr [eax - 0x4d]; 
0x00168502: in al, dx; jmp dword ptr [eax - 0x4f]; 
0x0016849a: in al, dx; jmp dword ptr [eax - 0x53]; 
0x001683d2: in al, dx; jmp dword ptr [eax - 0x58]; 
0x00168372: in al, dx; jmp dword ptr [eax - 0x5a]; 
0x001681d2: in al, dx; jmp dword ptr [eax - 0x61]; 
0x0016807a: in al, dx; jmp dword ptr [eax]; 
0x0014b48c: in al, dx; jmp dword ptr [ebp - 0x39]; 
0x00173fc6: in al, dx; jmp dword ptr [ebx]; 
0x0017314e: in al, dx; jmp dword ptr [ecx]; 
0x00174646: in al, dx; jmp dword ptr [edi]; 
0x00173cd7: in al, dx; jmp dword ptr [edx]; 
0x00168312: in al, dx; jmp eax; 
0x001682d2: in al, dx; jmp esp; 
0x0017b709: in al, dx; jns 0x17b6fb; jmp dword ptr [edx]; 
0x001681ca: in al, dx; lcall ptr [edi + ebx*4]; add byte ptr [eax], al; aam 0x5e; in al, dx; jmp dword ptr [eax - 0x61]; 
0x00168462: in al, dx; ljmp ptr [eax + 0x40000ac]; xchg eax, esi; in al, dx; call eax; 
0x001682aa: in al, dx; ljmp ptr [eax]; mov dword ptr [0x6af40000], eax; in al, dx; call dword ptr [eax - 0x5d]; 
0x00168712: in al, dx; ljmp ptr [edx + edi*4]; add ah, ah; ret; 
0x0019a3ec: in al, dx; mov cl, 2; add al, ah; mov bh, al; call dword ptr [edx]; 
0x00133522: in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132ef2: in al, dx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x000b9051: in al, dx; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x0019afec: in al, dx; mov ebp, 0xb5800002; clc; jmp dword ptr [eax]; 
0x001353a3: in al, dx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001367d3: in al, dx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x0013c303: in al, dx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x0013c2fe: in al, dx; movdqa xmmword ptr [edx - 0x14], xmm0; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x00103523: in al, dx; or al, 0x31; fisttp dword ptr [ecx + 0xbab8e1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0001bbb2: in al, dx; or al, 0x89; ret 0x8365; 
0x000fd411: in al, dx; or al, 0xe8; sbb byte ptr [ebx + edi*8 + 0xcc483ff], bh; and eax, 0xffff; ret; 
0x001939c4: in al, dx; or bh, dh; call dword ptr [esi]; 
0x000749f7: in al, dx; or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000ea05d: in al, dx; or byte ptr [ebx + 0x1eec93], cl; add byte ptr [ebp - 0x74e88b2e], al; add al, byte ptr [ebp - 0x7cf68b40]; ret 0x8904; 
0x00176fd4: in al, dx; or ebp, edi; jmp dword ptr [ebx]; 
0x001928a4: in al, dx; out 0xf6, al; call dword ptr [esi + 5]; 
0x00168f11: in al, dx; out dx, eax; jmp dword ptr [eax - 0x13]; 
0x00168f09: in al, dx; out dx, eax; jmp esp; 
0x00168f01: in al, dx; out dx, eax; push dword ptr [ebx + ebp*8 - 0x131d0000]; out dx, eax; jmp esp; 
0x00030d34: in al, dx; pop ebp; ret; 
0x000fc1c8: in al, dx; pop esi; pop ebx; pop edx; ret; 
0x000ea074: in al, dx; push ds; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0016851a: in al, dx; push dword ptr [eax + 0x140000af]; scasd eax, dword ptr es:[edi]; in al, dx; jmp eax; 
0x001685da: in al, dx; push dword ptr [eax - 0x1bffff4c]; mov ch, 0xec; call eax; 
0x00168792: in al, dx; push dword ptr [eax]; mov ebp, 0xdf840000; in al, dx; call dword ptr [eax - 0x43]; 
0x001682ea: in al, dx; push dword ptr [esp]; add byte ptr [eax], al; add al, 0x6e; in al, dx; call dword ptr [eax - 0x5c]; 
0x0016b21c: in al, dx; push es; add al, byte ptr [eax]; test al, bl; cmc; call dword ptr [eax]; 
0x00185367: in al, dx; ret 0xfff1; 
0x00102bb2: in al, dx; sbb al, ch; mov edx, 0x81000271; ret; 
0x0014ad0d: in al, dx; sbb byte ptr [ebx + 0x1fd083], cl; add byte ptr [ecx + 0x33e82404], cl; ret 0xffec; 
0x00025efd: in al, dx; sbb byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x0004b9a5: in al, dx; sbb byte ptr [ebx - 0x17d3dbbc], cl; ret; 
0x00166fb0: in al, dx; sbb eax, 0x1e5cfffd; std; ljmp ptr [esi + ebx + 0x1efcfffd]; std; jmp esi; 
0x0018a0ec: in al, dx; scasb al, byte ptr es:[edi]; add dword ptr [eax], eax; jo 0x18a0db; hlt; call dword ptr [eax]; 
0x0016d3d9: in al, dx; stc; jmp dword ptr [eax - 0x36]; 
0x000638c3: in al, dx; std; dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000ca9a7: in al, dx; sub al, 0x8b; add al, ch; ret; 
0x00033e6d: in al, dx; sub byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x0012ed8d: in al, dx; sub byte ptr [ebx - 0xff7d], cl; jmp dword ptr [ebp + 3]; 
0x00169884: in al, dx; sub dword ptr [ecx], eax; add byte ptr [ebp - 0x10], ah; call dword ptr [eax]; 
0x001671f0: in al, dx; sub eax, 0x2e3cfffd; std; lcall ptr [esi + ebp + 0x2efcfffd]; std; jmp esi; 
0x0018fff5: in al, dx; test ebp, esi; jmp dword ptr [edx]; 
0x001884ec: in al, dx; xchg eax, edx; add dword ptr [eax], eax; rcl bh, 0xf3; jmp dword ptr [eax]; 
0x00194555: in al, dx; xor al, 0xf6; jmp dword ptr [edx]; 
0x0018a8c4: in al, dx; xor ebp, esi; call dword ptr [ebp]; 
0x00168de5: in eax, 0; add byte ptr [eax - 0x28], bh; out dx, eax; jmp dword ptr [eax - 0x1b]; 
0x000d8aa7: in eax, 0; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x000ed533: in eax, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00148fb7: in eax, 0; add byte ptr [eax], al; lea eax, dword ptr [eax + 0xb]; pop edi; ret; 
0x00055dfd: in eax, 0; add byte ptr [ecx - 0x7cf57416], cl; ret 0x8d04; 
0x0016d720: in eax, 0x29; cli; jmp esp; 
0x00158fd9: in eax, 0x6a; mov eax, 0x45155e93; ret 0x591c; 
0x0017b7f9: in eax, 0x7b; out dx, eax; jmp dword ptr [edx]; 
0x000877d6: in eax, 0x83; ret; 
0x001917a3: in eax, 0xa; ret; 
0x0004c527: in eax, 0xac; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x0017477d: in eax, 0xb6; in al, dx; jmp dword ptr [edx]; 
0x0018536d: in eax, 0xbf; int1; jmp dword ptr [edx]; 
0x00165fdc: in eax, 0xd2; cld; push eax; iretd; cld; jmp dword ptr [eax]; 
0x00172dc2: in eax, 0xeb; jmp dword ptr [edx]; 
0x0017c951: in eax, 0xef; call dword ptr [eax]; 
0x00168ec1: in eax, 0xef; call eax; 
0x00168eb9: in eax, 0xef; push dword ptr [eax - 0x16]; add byte ptr [eax], al; adc al, 0xe5; out dx, eax; call eax; 
0x0016a959: in eax, 0xf3; push eax; int 1; add ch, dh; out 0xf3, al; jmp dword ptr [eax - 0x33]; 
0x0016ae71: in eax, 0xf4; ljmp ptr [eax]; lock add dword ptr [eax], eax; and al, 0xe8; hlt; jmp dword ptr [eax - 0xf]; 
0x001134e4: in eax, 0xfc; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], edi; call dword ptr [eax + 0x18]; 
0x0003ae08: in eax, 0xff; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000fee95: in eax, 0xff; inc dword ptr [ebx + 0x5e5b74c4]; ret; 
0x0009d125: in eax, 0xff; inc dword ptr [ecx + 0x1ecc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0018d7cd: in eax, 1; add byte ptr [eax], al; out dx, al; cmc; jmp dword ptr [ebx]; 
0x0018d7e1: in eax, 1; add byte ptr [esi + ebp*8], bl; cmc; jmp dword ptr [ebx]; 
0x0016d795: in eax, 2; add byte ptr [eax + eax*2], al; cli; jmp dword ptr [eax]; 
0x000a935b: in eax, 2; add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x3818]; add esp, 8; pop ebx; ret; 
0x0001af92: in eax, dx; adc byte ptr [eax], al; add ecx, 0x18805f; mov eax, dword ptr [ecx + 0x36c0]; ret; 
0x00131f22: in eax, dx; adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cfffffe], al; ret 0x8310; 
0x0013049b: in eax, dx; adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cffffff], cl; ret 0x8310; 
0x0009f0fa: in eax, dx; add al, 0; add byte ptr [ecx + 0x4ae82404], cl; jnp 0x9f0fd; jmp dword ptr [esi - 0x70]; 
0x0009c3ea: in eax, dx; add al, 0; add byte ptr [ecx + 0x5ae82404], cl; test al, 0xf8; jmp dword ptr [esi - 0x70]; 
0x000a1d92: in eax, dx; add al, 0; add byte ptr [ecx - 0x4d17dbfc], cl; dec esi; clc; jmp dword ptr [esi - 0x70]; 
0x000c6c49: in eax, dx; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret 0x840f; 
0x00138162: in eax, dx; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00168f2d: in eax, dx; add byte ptr [eax], al; aam 0xee; out dx, eax; jmp dword ptr [eax]; 
0x001065cb: in eax, dx; add byte ptr [eax], al; add byte ptr [ebx - 0xff7d], cl; jmp dword ptr [ebp + 3]; 
0x0017df29: in eax, dx; add byte ptr [eax], al; hlt; sbb al, 0xf0; call esp; 
0x00168f15: in eax, dx; add byte ptr [eax], al; mov al, 0xee; out dx, eax; call eax; 
0x00095967: in eax, dx; add eax, ecx; pop edi; ret; 
0x0010488a: in eax, dx; add esp, 4; pop esi; pop edi; ret; 
0x001047f2: in eax, dx; add esp, 8; pop esi; ret; 
0x00126294: in eax, dx; call dword ptr [eax + 0x14]; 
0x00168802: in eax, dx; call dword ptr [eax]; 
0x0016885a: in eax, dx; call dword ptr [eax]; ret 0; 
0x0017496e: in eax, dx; call dword ptr [ebx + 1]; 
0x0016887a: in eax, dx; call eax; 
0x0016887a: in eax, dx; call eax; ret 0; 
0x001688aa: in eax, dx; call esp; 
0x001669cd: in eax, dx; cld; call dword ptr [ebx + ebp*8 - 4]; call esp; 
0x0016881a: in eax, dx; dec dword ptr [eax]; rol dword ptr [eax], 0; and al, 0x6c; in eax, dx; jmp dword ptr [eax]; 
0x0007b510: in eax, dx; dec dword ptr [edi]; inc esp; ret 0x8389; 
0x001689aa: in eax, dx; dec dword ptr [edx + ecx*8 - 0x5d8c0000]; in eax, dx; call esp; 
0x0016ae91: in eax, dx; hlt; call eax; 
0x0017b2f8: in eax, dx; imul bh; call dword ptr [eax]; 
0x00168882: in eax, dx; inc dword ptr [eax]; ret; 
0x00175122: in eax, dx; jmp dword ptr [eax + 1]; 
0x0016883a: in eax, dx; jmp dword ptr [eax - 0x3d]; 
0x0016882a: in eax, dx; jmp dword ptr [eax - 0x3f]; 
0x00168822: in eax, dx; jmp dword ptr [eax]; 
0x00174dee: in eax, dx; jmp dword ptr [ebx]; 
0x001747df: in eax, dx; jmp dword ptr [edx]; 
0x00168852: in eax, dx; jmp eax; 
0x00074d64: in eax, dx; mov dword ptr [esp + 0x18], edx; mov dword ptr [esp], 0; call dword ptr [ecx]; 
0x0002dfc5: in eax, dx; mov esi, 8; cmovne edx, eax; xchg edi, ebx; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x001334f2: in eax, dx; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132ec2: in eax, dx; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00130597: in eax, dx; or byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x0008345a: in eax, dx; pop esi; pop edi; pop ebp; nop; ret; 
0x001688a2: in eax, dx; push dword ptr [eax - 0x5bffff3c]; jp 0x168898; call esp; 
0x0016888a: in eax, dx; push dword ptr [eax]; ret; 
0x0018a371: in eax, dx; push esi; hlt; jmp dword ptr [edx]; 
0x0007926f: in eax, dx; ret 0xffff; 
0x0017fef5: in eax, dx; sti; jmp ecx; 
0x00027282: in eax, dx; sub dl, byte ptr [eax]; add byte ptr [ecx + 0x17bd6ec3], al; add byte ptr [ebx - 0x1577d], cl; dec dword ptr [ebx - 0x12f6d]; jmp dword ptr [ebp - 0x75]; 
0x00091599: in eax, dx; xchg eax, edx; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ef5a7: inc byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0016b0fd: inc byte ptr [ecx]; add byte ptr [edi + ebx], dl; cmc; jmp dword ptr [eax]; 
0x00136ea3: inc byte ptr [edx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00166227: inc dword ptr [0x35fffcd4]; aam 0xfc; jmp dword ptr [ebp - 0x2c]; 
0x00166f0b: inc dword ptr [eax + 0x11]; std; call dword ptr [eax + 0xf]; 
0x00166f0b: inc dword ptr [eax + 0x11]; std; call dword ptr [eax + 0xf]; std; call eax; 
0x0016dd33: inc dword ptr [eax + 0x14000304]; cmc; cli; call esp; 
0x00166fe7: inc dword ptr [eax + 0x15]; std; call eax; 
0x00167987: inc dword ptr [eax + 0x20fffc95]; xchg eax, esi; cld; call eax; 
0x0016ed5b: inc dword ptr [eax + 0x26]; add al, byte ptr [eax]; cld; lcall ptr [esi + 0x65b40002]; cld; jmp dword ptr [eax]; 
0x0016cc53: inc dword ptr [eax + 0x3400029a]; inc edi; stc; ljmp ptr [edx + ebx*4 + 0x47940002]; stc; call eax; 
0x0016738f: inc dword ptr [eax + 0x37]; std; call eax; 
0x0016734f: inc dword ptr [eax + 0x3a]; std; push dword ptr [eax + 0xfffd3a]; cmp edi, ebp; call dword ptr [eax + 0x3b]; 
0x00168e1b: inc dword ptr [eax + 0x3c0000e6]; fucomi st(7); push dword ptr [eax + 0x480000e6]; fucomi st(7); jmp eax; 
0x000e1e25: inc dword ptr [eax + 0x440f0038]; ret 0x64e9; 
0x0016760b: inc dword ptr [eax + 0x45]; std; call eax; 
0x001677ab: inc dword ptr [eax + 0x54]; std; call eax; 
0x0016a3d3: inc dword ptr [eax + 0x6a]; add dword ptr [eax], eax; movsb byte ptr es:[edi], byte ptr [esi]; mov cl, 0xf1; jmp dword ptr [eax + 0x6a]; 
0x0016684b: inc dword ptr [eax + 0x70fffce8]; out 0xfc, al; call dword ptr [eax]; 
0x0008834e: inc dword ptr [eax + 0xf000a79]; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000882f8: inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00166def: inc dword ptr [eax + 0xf]; std; call eax; 
0x00166e2f: inc dword ptr [eax + 2]; std; call eax; 
0x00166e2f: inc dword ptr [eax + 2]; std; call eax; add bh, ch; jmp dword ptr [eax + 3]; 
0x00166baf: inc dword ptr [eax - 0x10]; cld; call eax; 
0x0005a2de: inc dword ptr [eax - 0x10ff43]; jmp dword ptr [eax]; 
0x001668df: inc dword ptr [eax - 0x18]; cld; jmp dword ptr [eax]; 
0x00166953: inc dword ptr [eax - 0x1d]; cld; call eax; 
0x00166953: inc dword ptr [eax - 0x1d]; cld; call eax; jecxz 0x166957; jmp dword ptr [eax - 0x1c]; 
0x00168bcb: inc dword ptr [eax - 0x28]; add byte ptr [eax], al; int1; fucomi st(6); call dword ptr [eax]; 
0x001673d3: inc dword ptr [eax - 0x2f0002c4]; cmp al, 0xfd; jmp dword ptr [eax]; 
0x00166f53: inc dword ptr [eax - 0x2f0002e2]; push ds; std; jmp dword ptr [eax]; 
0x00165e1b: inc dword ptr [eax - 0x32]; cld; call dword ptr [ebx]; 
0x0016cedb: inc dword ptr [eax - 0x3bfffd53]; xchg eax, esp; stc; call eax; 
0x0016675f: inc dword ptr [eax - 0x4f000327]; frndint; jmp eax; 
0x00165feb: inc dword ptr [eax - 0x4f000330]; sar ah, 1; jmp eax; 
0x00045e64: inc dword ptr [eax - 0x50743]; jmp dword ptr [eax]; 
0x00044043: inc dword ptr [eax - 0x53f43]; jmp dword ptr [eax]; 
0x0015a67f: inc dword ptr [eax - 0x5f000ccd]; xor esi, ebx; inc eax; xor esi, ebx; jmp eax; 
0x0015a613: inc dword ptr [eax - 0x5f000cd0]; xor bl, dh; inc eax; xor bl, dh; jmp eax; 
0x0016cc13: inc dword ptr [eax - 0x67]; add al, byte ptr [eax]; and al, 0x45; stc; jmp dword ptr [eax - 0x67]; 
0x00167977: inc dword ptr [eax - 0x6d]; cld; call eax; 
0x000ac4bf: inc dword ptr [eax - 0x7bf0ffc6]; ret; 
0x00166acb: inc dword ptr [eax - 0x7f000306]; clc; cld; call dword ptr [eax]; 
0x00049e51: inc dword ptr [eax - 0xb443]; jmp dword ptr [edi + 0xf]; 
0x000496d2: inc dword ptr [eax - 0xb443]; jmp dword ptr [edi - 0x73]; 
0x00166c7f: inc dword ptr [eax - 3]; cld; call eax; 
0x0016e683: inc dword ptr [eax]; aaa; add eax, dword ptr [eax]; and al, 0xf3; sti; jmp dword ptr [eax]; 
0x00166267: inc dword ptr [eax]; aam 0xfc; push dword ptr [eax]; aam 0xfc; jmp dword ptr [eax - 0x2c]; 
0x000431c8: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x9589; 
0x0005b4e1: inc dword ptr [eax]; add byte ptr [eax], al; add cl, ch; outsd dx, dword ptr [esi]; ret; 
0x000ef633: inc dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00105075: inc dword ptr [eax]; add byte ptr [eax], al; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0016dc53: inc dword ptr [eax]; add byte ptr [ebx], al; add byte ptr [ebp + edx*8 - 6], al; jmp dword ptr [eax]; 
0x0014433c: inc dword ptr [eax]; add byte ptr [edi], cl; test dword ptr [ecx - 0x7cfffff2], ebp; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x0013fd38: inc dword ptr [eax]; add byte ptr [edi], cl; test ebp, edi; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0016af9b: inc dword ptr [eax]; clc; add dword ptr [eax], eax; aam 0; cmc; jmp eax; 
0x0016744f: inc dword ptr [eax]; cmp al, 0xfd; call dword ptr [eax + 0x3c]; 
0x00167357: inc dword ptr [eax]; cmp edi, ebp; call dword ptr [eax + 0x3b]; 
0x00165e13: inc dword ptr [eax]; into; cld; jmp dword ptr [eax]; 
0x0016a873: inc dword ptr [eax]; mov dword ptr [ecx], 0xf391b400; jmp dword ptr [eax]; 
0x00166d47: inc dword ptr [eax]; or al, 0xfd; call dword ptr [eax - 0x7f0002f4]; or bh, ch; jmp dword ptr [eax]; 
0x00166cb3: inc dword ptr [eax]; or edi, ebp; jmp edx; 
0x00167797: inc dword ptr [eax]; pop ebp; std; call dword ptr [eax + 0x5d]; 
0x00167797: inc dword ptr [eax]; pop ebp; std; call dword ptr [eax + 0x5d]; std; jmp dword ptr [eax + 0x50]; 
0x000e99ac: inc dword ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00166de7: inc dword ptr [eax]; push cs; std; jmp eax; 
0x0010505f: inc dword ptr [eax]; ret; 
0x00166a33: inc dword ptr [eax]; stc; cld; call edx; 
0x00167293: inc dword ptr [eax]; std; jmp dword ptr [eax + 0x2e]; 
0x0016718f: inc dword ptr [eax]; sub al, 0xfd; jmp dword ptr [eax + 0x2c]; 
0x0016719b: inc dword ptr [eax]; sub eax, 0x2010fffd; std; call eax; 
0x0016719b: inc dword ptr [eax]; sub eax, 0x2010fffd; std; call eax; and bh, ch; jmp dword ptr [eax + 0x23]; 
0x0015a68f: inc dword ptr [eax]; xor al, 0xf3; call dword ptr [eax]; 
0x0015a637: inc dword ptr [eax]; xor dh, bl; push dword ptr [eax]; xor dh, bl; jmp dword ptr [eax + 0x32]; 
0x0016737f: inc dword ptr [eax]; xor eax, 0x3590fffd; std; jmp dword ptr [eax]; 
0x0015a66b: inc dword ptr [eax]; xor esi, ebx; call dword ptr [eax]; 
0x0015a66b: inc dword ptr [eax]; xor esi, ebx; call dword ptr [eax]; xor esi, ebx; jmp dword ptr [eax]; 
0x00100537: inc dword ptr [ebp + 0x15850fc0]; add al, byte ptr [eax]; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp + 3]; 
0x000e3463: inc dword ptr [ebp + 0x17840fc0]; add dword ptr [eax], eax; add byte ptr [ebx - 0xc77b], cl; dec dword ptr [ecx + 0x26e82404]; ret 0xffff; 
0x0005f91d: inc dword ptr [ebp + 0x1c840fc0]; or eax, dword ptr [eax]; add byte ptr [ebx - 0xeb73], cl; inc dword ptr [ecx]; ret 0x9589; 
0x00087abc: inc dword ptr [ebp + 0x2b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000a1f9b: inc dword ptr [ebp + 0x34850fc0]; or al, byte ptr [eax]; add byte ptr [ebx - 0x76bfdbbc], cl; ret 0xfac1; 
0x0005a70b: inc dword ptr [ebp + 0x38e0fff]; ret; 
0x000e02c5: inc dword ptr [ebp + 0x4a840fc0]; add dword ptr [eax], eax; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x77]; 
0x00087a9c: inc dword ptr [ebp + 0x4b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000e23ab: inc dword ptr [ebp + 0x53840ff6]; add dword ptr [eax], eax; add byte ptr [ebx - 0xab7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000e352b: inc dword ptr [ebp + 0x53840ff6]; add dword ptr [eax], eax; add byte ptr [ebx - 0xbb7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000fc8fb: inc dword ptr [ebp + 0x54450fc0]; and al, 0x1c; add esp, 0x2c; mov eax, edx; ret; 
0x0004fe9e: inc dword ptr [ebp + 0x6840fc0]; sub al, 0; add byte ptr [ebx - 0x1cb73], cl; call ecx; 
0x0007b281: inc dword ptr [ebp + 0x740789c0]; cmp byte ptr [ebx - 0x76dbdbac], cl; xor al, 0x24; mov dword ptr [esp + 4], edx; call eax; 
0x000d8741: inc dword ptr [ebp + 0x74c289c0]; ret; 
0x0007bd0b: inc dword ptr [ebp + 0x74c789c0]; ret 0xf685; 
0x00109a8f: inc dword ptr [ebp + 0x74c789c0]; scasd eax, dword ptr es:[edi]; mov dword ptr [esp], eax; call 0x126c80; mov dword ptr [esp], esi; call edi; 
0x00087adc: inc dword ptr [ebp + 0xb850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000f7e96: inc dword ptr [ebp + 0xfc689c0]; test dh, dl; add byte ptr [eax], al; add byte ptr [eax - 0x7bf0ffc8], al; ret; 
0x001669cb: inc dword ptr [ebp + ebp*8 - 4]; call dword ptr [ebx + ebp*8 - 4]; call esp; 
0x00169c93: inc dword ptr [ebp + esi + 0x2e5a0001]; int1; push dword ptr [ebp + esi + 0x2e6a0001]; int1; jmp esp; 
0x000bc918: inc dword ptr [ebp - 0x147bf040]; add al, byte ptr [eax]; add byte ptr [ebx - 0x12f73], cl; jmp dword ptr [ebp - 0x7d]; 
0x000bf698: inc dword ptr [ebp - 0x147bf040]; add al, byte ptr [eax]; add byte ptr [ebx - 0x13f73], cl; jmp dword ptr [ebp - 0x7d]; 
0x0011a931: inc dword ptr [ebp - 0x2976f040]; add dword ptr [eax], eax; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x75]; 
0x00118f2c: inc dword ptr [ebp - 0x397bf040]; add byte ptr [eax], al; add byte ptr [ebx + 0x1c42484], cl; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x00040bff: inc dword ptr [ebp - 0x3db7f040]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0012c19b: inc dword ptr [ebp - 0x3dbaf040]; add esp, 0x1c; ret; 
0x0012edc8: inc dword ptr [ebp - 0x3dbaf040]; add esp, 0x28; pop ebx; ret; 
0x0011eeae: inc dword ptr [ebp - 0x3f6af040]; add esp, 0x1c; movzx eax, al; ret; 
0x000ed9ec: inc dword ptr [ebp - 0x3f6af040]; add esp, 0xc; movzx eax, al; ret; 
0x000d84ac: inc dword ptr [ebp - 0x3f6bf040]; add esp, 0x28; movzx eax, al; pop ebx; ret; 
0x00125299: inc dword ptr [ebp - 0x3f6bf040]; movzx eax, al; add esp, 0x18; pop esi; ret; 
0x001241d5: inc dword ptr [ebp - 0x725c8a40]; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0xf74d], cl; jmp dword ptr [ebp - 0x39]; 
0x0014ac31: inc dword ptr [ebp - 0x74158a0a]; and dword ptr [eax + 0x1b], 0; add byte ptr [ecx + 0xce82404], cl; ret; 
0x000ed065: inc dword ptr [ebp - 0x74418a40]; dec ebp; rol byte ptr [edi + 0x6b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00073314: inc dword ptr [ebp - 0x74618a2e]; push esi; add al, 0xeb; ret 0x9066; 
0x0007039c: inc dword ptr [ebp - 0x74f08b40]; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00129965: inc dword ptr [ebp - 0x74f18b40]; inc esp; and al, 0x1c; add esp, 0x28; pop ebx; ret; 
0x0010b24a: inc dword ptr [ebp - 0x76ce8740]; int1; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000fdbbe: inc dword ptr [ebp - 0x76eb8b40]; ret 0x848b; 
0x001098fc: inc dword ptr [ebp - 0x76fa8b40]; xor al, 0x24; call eax; 
0x00098092: inc dword ptr [ebp - 0x7c208b0a]; ret 0x8304; 
0x0010e724: inc dword ptr [ebp - 0x7c908640]; call dword ptr [eax]; 
0x001236df: inc dword ptr [ebp - 0x7f71f040]; add dword ptr [eax], eax; add byte ptr [ebx - 0xdb43], cl; jmp dword ptr [esi - 0x70]; 
0x0012423d: inc dword ptr [ebx + 0x16ba19f8]; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x8965; 
0x000fe87c: inc dword ptr [ebx + 0x2c6c8b]; add byte ptr [edx], al; add esp, 0x18; pop ebx; ret; 
0x00074cf3: inc dword ptr [ebx + 0x408b11ea]; adc bh, dh; fsub dword ptr [ecx]; ret 0x5489; 
0x001098b4: inc dword ptr [ebx + 0x468901c0]; sbb byte ptr [eax + 1], bh; add esp, 0x18; pop esi; ret; 
0x0011a749: inc dword ptr [ebx + 0x468b0100]; cmp al, 0x89; push esp; and al, 4; mov dword ptr [esp], ecx; call dword ptr [eax + 4]; 
0x0002510c: inc dword ptr [ebx + 0x48905c0]; and al, 0x83; ret 0x8901; 
0x000f7324: inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000251d6: inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0002680a: inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000f1aaf: inc dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x001052b3: inc dword ptr [ebx + 0x5e5b28c4]; pop edi; pop ebp; ret; 
0x0001bed0: inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x001004c4: inc dword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x000751a5: inc dword ptr [ebx + 0x5e5b4cc4]; pop edi; pop ebp; ret; 
0x0006cfe9: inc dword ptr [ebx + 0x5e5b6cc4]; pop edi; pop ebp; ret; 
0x000fee97: inc dword ptr [ebx + 0x5e5b74c4]; ret; 
0x000fcb99: inc dword ptr [ebx + 0x5e5b7cc4]; pop edi; pop ebp; ret; 
0x001100d0: inc dword ptr [ebx + 0x5f5e04c4]; pop ebp; ret; 
0x001277b2: inc dword ptr [ebx + 0x5f5e40c4]; pop ebp; ret; 
0x00127551: inc dword ptr [ebx + 0x748b08ec]; and al, 0x20; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 4; 
0x0006cbba: inc dword ptr [ebx + 0x748b200e]; and al, 0x34; add esp, 0x3c; ret; 
0x000eef9b: inc dword ptr [ebx + 0x7526243c]; aam 0x85; div byte ptr [ebp + 0x22]; xchg edi, ebx; mov eax, 0x141; call dword ptr gs:[0x10]; 
0x0012410a: inc dword ptr [ebx + 0x874fff8]; add esp, 0x18; pop ebx; ret; 
0x00167553: inc dword ptr [ebx + ecx*2 + 0x4c34fffd]; std; jmp esp; 
0x0016ee8b: inc dword ptr [ebx + ecx*8]; add al, byte ptr [eax]; adc al, 0x73; cld; jmp dword ptr [eax]; 
0x0005a3e1: inc dword ptr [ebx - 0x109b43]; call dword ptr [eax]; 
0x000590fb: inc dword ptr [ebx - 0x10a343]; call dword ptr [eax]; 
0x00058ff8: inc dword ptr [ebx - 0x10cf43]; jmp dword ptr [eax]; 
0x0004e209: inc dword ptr [ebx - 0x1a343]; call dword ptr [eax]; 
0x0005a2d8: inc dword ptr [ebx - 0x287cfe08]; inc dword ptr [eax - 0x10ff43]; jmp dword ptr [eax]; 
0x00058ff2: inc dword ptr [ebx - 0x287cfe08]; inc dword ptr [ebx - 0x10cf43]; jmp dword ptr [eax]; 
0x0011fbb1: inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x00165e0b: inc dword ptr [ebx - 0x32]; cld; jmp eax; 
0x001216a2: inc dword ptr [ebx - 0x3b7ceb14]; and al, 0x5e; pop edi; ret; 
0x0007a8ca: inc dword ptr [ebx - 0x3fce9f3c]; pop ebx; pop esi; pop edi; ret; 
0x000ca2e6: inc dword ptr [ebx - 0x3fcebf3c]; pop esi; pop edi; pop ebp; ret 8; 
0x000410c1: inc dword ptr [ebx - 0x3fcedf3c]; pop ebx; pop esi; pop edi; ret; 
0x000eda3f: inc dword ptr [ebx - 0x3fcee73c]; pop esi; ret; 
0x00116d8c: inc dword ptr [ebx - 0x3fe6fe08]; add eax, 2; add esp, 0x1c; ret; 
0x001660af: inc dword ptr [ebx - 0x4c00032c]; aam 0xfc; jmp ebx; 
0x000376b0: inc dword ptr [ebx - 0x5bf0002e]; ret 0xc102; 
0x00166583: inc dword ptr [ebx - 0x5c000328]; fdivr st(4); inc ebx; fdivr st(4); jmp dword ptr [eax - 0x28]; 
0x000714e4: inc dword ptr [ebx - 0x6bf00008]; ret 0x57e9; 
0x00071440: inc dword ptr [ebx - 0x6bf00008]; ret 0xd284; 
0x000ef0de: inc dword ptr [ebx - 0x6bf0f708]; rol byte ptr [ebx - 0x49f0d33c], 0xc0; sub eax, 1; ret; 
0x000ef09e: inc dword ptr [ebx - 0x6bf0f708]; rol byte ptr [ebx - 0x49f0e33c], 0xc0; sub eax, 1; ret; 
0x0011f981: inc dword ptr [ebx - 0x6bf0fe08]; rol byte ptr [ebx - 0x49f0d73c], 0xc0; pop ebx; ret; 
0x0011f9da: inc dword ptr [ebx - 0x6bf0fe08]; rol byte ptr [ebx - 0x49f0e73c], 0xc0; pop ebx; ret; 
0x000bd626: inc dword ptr [ebx - 0x6bf0fe08]; rol byte ptr [ebx - 0x49f0f73c], 0xc0; ret; 
0x00123d46: inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x00047b8d: inc dword ptr [ebx - 0x776df3c]; pop ebx; pop esi; pop edi; ret; 
0x0010e903: inc dword ptr [ebx - 0x7af00008]; xchg eax, ebx; add byte ptr [eax], al; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x7d]; 
0x0005d272: inc dword ptr [ebx - 0x7bf00002]; ret 0x17; 
0x0001896c: inc dword ptr [ebx - 0xb77b]; jmp dword ptr [eax]; 
0x0010c69e: inc dword ptr [ebx - 0xb8b0a08]; add esp, 8; pop esi; ret; 
0x0005ec54: inc dword ptr [ebx - 0xbf43]; call dword ptr [eax]; 
0x00127b71: inc dword ptr [ebx - 0xf76bf3c]; pop esi; pop edi; pop ebp; ret; 
0x000a57fa: inc dword ptr [ebx - 0xf76db3c]; pop ebx; pop esi; ret; 
0x000ed2dd: inc dword ptr [ebx - 0xf76eb3c]; pop ebx; pop esi; ret; 
0x0010fd1a: inc dword ptr [ebx - 0xf76eb3c]; pop esi; pop edi; pop ebp; ret; 
0x000e9e11: inc dword ptr [ebx - 0xf76ef3c]; pop ebx; pop esi; pop edi; ret; 
0x0003388a: inc dword ptr [ebx]; add byte ptr [eax], al; xor eax, edx; mov dword ptr [ecx], esi; pop esi; ret; 
0x00165e03: inc dword ptr [ebx]; into; cld; jmp dword ptr [ebx]; 
0x00165e33: inc dword ptr [ebx]; sar esp, 1; push dword ptr [ebx]; sar esp, 1; jmp dword ptr [ebx - 0x2f]; 
0x00119485: inc dword ptr [ebx]; xchg eax, esp; ret; 
0x0003d7d1: inc dword ptr [ecx + 0x10fcc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003fd31: inc dword ptr [ecx + 0x14cc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0006b357: inc dword ptr [ecx + 0x184c4]; add byte ptr [ebx + 0x5e], bl; ret; 
0x0009d127: inc dword ptr [ecx + 0x1ecc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00039f51: inc dword ptr [ecx + 0x1fcc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0013d781: inc dword ptr [ecx + 0x2a05ec3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013d58d: inc dword ptr [ecx + 0x2a152c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013caa8: inc dword ptr [ecx + 0x2ac37c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013c99e: inc dword ptr [ecx + 0x2ad41c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013c897: inc dword ptr [ecx + 0x2ae48c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013c79b: inc dword ptr [ecx + 0x2af44c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013c67b: inc dword ptr [ecx + 0x2afa4c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013c7e8: inc dword ptr [ecx + 0x2afb7c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0013c3f1: inc dword ptr [ecx + 0x2b06ec3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013b56f: inc dword ptr [ecx + 0x2bfb0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013b468: inc dword ptr [ecx + 0x2bff7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013b367: inc dword ptr [ecx + 0x2c1b8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013b26c: inc dword ptr [ecx + 0x2c1f3c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013b151: inc dword ptr [ecx + 0x2c24ec3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013b2b8: inc dword ptr [ecx + 0x2c327c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0013af4d: inc dword ptr [ecx + 0x2c352c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013a458: inc dword ptr [ecx + 0x2ce47c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013a34e: inc dword ptr [ecx + 0x2cf51c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013a247: inc dword ptr [ecx + 0x2d058c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013a14b: inc dword ptr [ecx + 0x2d154c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00139f3d: inc dword ptr [ecx + 0x2d1a2c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013a198: inc dword ptr [ecx + 0x2d1c7c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x00139458: inc dword ptr [ecx + 0x2dc87c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013934e: inc dword ptr [ecx + 0x2dd91c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00139247: inc dword ptr [ecx + 0x2de98c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013913e: inc dword ptr [ecx + 0x2dfa1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00138f6d: inc dword ptr [ecx + 0x2dfb2c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00139198: inc dword ptr [ecx + 0x2e007c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0013914e: inc dword ptr [ecx + 0x2e091c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00138478: inc dword ptr [ecx + 0x2eaa7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013836e: inc dword ptr [ecx + 0x2ebb1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00138267: inc dword ptr [ecx + 0x2ecb8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013815e: inc dword ptr [ecx + 0x2edc1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013804b: inc dword ptr [ecx + 0x2ee14c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001381b8: inc dword ptr [ecx + 0x2ee27c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0013816e: inc dword ptr [ecx + 0x2eeb1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00137da1: inc dword ptr [ecx + 0x2eefec3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00136e9f: inc dword ptr [ecx + 0x2fec0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00136d98: inc dword ptr [ecx + 0x2ff07c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00136c97: inc dword ptr [ecx + 0x300c8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00136b9c: inc dword ptr [ecx + 0x30103c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001368c1: inc dword ptr [ecx + 0x3015ec3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00136be8: inc dword ptr [ecx + 0x30237c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x00135a1f: inc dword ptr [ecx + 0x310c0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00135918: inc dword ptr [ecx + 0x31107c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00135817: inc dword ptr [ecx + 0x312c8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00135491: inc dword ptr [ecx + 0x3130ec3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013570e: inc dword ptr [ecx + 0x31311c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00135768: inc dword ptr [ecx + 0x31437c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0013571e: inc dword ptr [ecx + 0x314c1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013458f: inc dword ptr [ecx + 0x322d0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00134488: inc dword ptr [ecx + 0x32317c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00134387: inc dword ptr [ecx + 0x324d8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013427e: inc dword ptr [ecx + 0x32521c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001342d8: inc dword ptr [ecx + 0x32647c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x00133edc: inc dword ptr [ecx + 0x326c3c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0013428e: inc dword ptr [ecx + 0x326d1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00133e2c: inc dword ptr [ecx + 0x32773c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00133d68: inc dword ptr [ecx + 0x327b7c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0013398c: inc dword ptr [ecx + 0x32993c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x001338dc: inc dword ptr [ecx + 0x32a43c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x001337f4: inc dword ptr [ecx + 0x32aabc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00133432: inc dword ptr [ecx + 0x32c6dc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00133376: inc dword ptr [ecx + 0x32d29c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0013331a: inc dword ptr [ecx + 0x32d85c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0013325c: inc dword ptr [ecx + 0x32e43c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00133174: inc dword ptr [ecx + 0x32eabc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00132e02: inc dword ptr [ecx + 0x3301dc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00132d46: inc dword ptr [ecx + 0x330d9c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00132cea: inc dword ptr [ecx + 0x33135c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00132c2c: inc dword ptr [ecx + 0x331f3c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00132b68: inc dword ptr [ecx + 0x33237c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0013289f: inc dword ptr [ecx + 0x35104c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001327da: inc dword ptr [ecx + 0x351c9c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001308af: inc dword ptr [ecx + 0x36ff0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001307a0: inc dword ptr [ecx + 0x370ffc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0007f352: inc dword ptr [ecx + 0x450c4]; add byte ptr [ecx], dh; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x0011cd55: inc dword ptr [ecx + 0x55cc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0014b2b5: inc dword ptr [ecx + 0x57d3ec3]; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x75]; 
0x0016c1eb: inc dword ptr [ecx + 0x5d740002]; clc; call eax; 
0x00142bd5: inc dword ptr [ecx + 0x6041ec3]; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x001406c5: inc dword ptr [ecx + 0x6292ec3]; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x00131e05: inc dword ptr [ecx + 0x711eec3]; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x00131905: inc dword ptr [ecx + 0x716eec3]; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x0012baf3: inc dword ptr [ecx + 0x77500c3]; add byte ptr [ebx + 0x468b1456], cl; adc byte ptr [ecx], bh; ret 0x2477; 
0x000749f4: inc dword ptr [ecx + 0x8ecc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000ea9b2: inc dword ptr [ecx + 0xacc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00055c41: inc dword ptr [ecx + 0xc4c4]; add byte ptr [ebx + 0x5e], bl; ret; 
0x000dff8c: inc dword ptr [ecx + 0xd4c4]; add byte ptr [ebx + 0x5e], bl; ret; 
0x000a28fd: inc dword ptr [ecx + 0xfcc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00166883: inc dword ptr [ecx + ebp*8]; cld; call esp; 
0x001680a3: inc dword ptr [ecx + ebx*4]; add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; xor al, 0xec; call esp; 
0x0016d383: inc dword ptr [ecx + ecx*8 + 2]; add byte ptr [esi - 0x17], cl; stc; jmp esp; 
0x0016d0e3: inc dword ptr [ecx + edi*4]; add al, byte ptr [eax]; mov ah, 0xb4; stc; jmp dword ptr [eax]; 
0x00165eff: inc dword ptr [ecx + edx*8 - 0x2e4b0004]; cld; jmp esp; 
0x0015a073: inc dword ptr [ecx - 0x6e000030]; ret; 
0x0016b11d: inc dword ptr [ecx]; add byte ptr [0xffa0fff5], dh; add dword ptr [eax], eax; xor al, 0x26; cmc; call eax; 
0x0005a060: inc dword ptr [ecx]; add byte ptr [eax], al; add bh, al; test dword ptr [edi + ebp*8 - 1], ebx; call dword ptr [eax]; 
0x0005a1a4: inc dword ptr [ecx]; add byte ptr [eax], al; add bh, al; test dword ptr [edi + ebp*8 - 1], esp; call dword ptr [eax]; 
0x0016b125: inc dword ptr [ecx]; add byte ptr [esi], dh; cmc; call eax; 
0x00095926: inc dword ptr [ecx]; clc; pop edi; ret; 
0x00095963: inc dword ptr [ecx]; clc; xor ch, ch; add eax, ecx; pop edi; ret; 
0x0019bd21: inc dword ptr [ecx]; or bh, byte ptr [eax + 5]; ret; 
0x0019bd12: inc dword ptr [ecx]; or eax, dword ptr [esi + 0x1d50501]; add byte ptr [edx + eax - 0xfffffb], cl; inc dword ptr [ecx]; or bh, byte ptr [eax + 5]; ret; 
0x000d5cfb: inc dword ptr [ecx]; ret 0x13e9; 
0x0012091e: inc dword ptr [ecx]; ret 0x5539; 
0x000a5597: inc dword ptr [ecx]; ret 0x5589; 
0x0005a0fa: inc dword ptr [ecx]; ret 0x840f; 
0x00051f72: inc dword ptr [ecx]; ret 0x8d3b; 
0x0004e821: inc dword ptr [ecx]; ret 0x9539; 
0x000509fb: inc dword ptr [ecx]; ret 0x9589; 
0x00056cde: inc dword ptr [ecx]; ret 0xc031; 
0x000963e7: inc dword ptr [ecx]; ret 0xe989; 
0x0004365a: inc dword ptr [ecx]; rol byte ptr [ecx + 0x1000fa], cl; add byte ptr [edi], cl; xchg dword ptr [eax - 0x7cfffffc], esi; ret 0x830f; 
0x0006047d: inc dword ptr [ecx]; ror byte ptr [ecx - 0x1037b], 1; jmp dword ptr [ebp - 0x75]; 
0x0019c053: inc dword ptr [ecx]; sbb bl, byte ptr [0x73000005]; ret 0x8d01; 
0x0002576d: inc dword ptr [edi + 0x6b8cb]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f15b4: inc dword ptr [edi + 0x92b8df]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001663ef: inc dword ptr [edi + edx*8 - 0x284b0004]; cld; jmp esp; 
0x00166c4f: inc dword ptr [edi*8 - 0x26b0004]; cld; push dword ptr [esi + edi*8]; cld; call esp; 
0x00167a1f: inc dword ptr [edi]; scasd eax, dword ptr es:[edi]; cld; call dword ptr [eax]; 
0x00166673: inc dword ptr [edx + ebx*8 - 0x254b0004]; cld; jmp esp; 
0x00166b13: inc dword ptr [edx + edi*8 - 0x4cb0004]; cld; jmp esp; 
0x001677e3: inc dword ptr [edx - 0x2d0002a2]; pop esi; std; jmp dword ptr [edx]; 
0x001662af: inc dword ptr [edx - 0x5d00032b]; aad 0xfc; inc edx; aad 0xfc; jmp edx; 
0x0016602f: inc dword ptr [edx - 0x5d00032f]; sar esp, 1; inc edx; sar esp, 1; jmp edx; 
0x0016dc1d: inc dword ptr [edx]; add byte ptr [ebx + edx*8], dh; cli; call dword ptr [eax - 1]; 
0x00136d9c: inc dword ptr [edx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001670a3: inc dword ptr [edx]; and ch, bh; call dword ptr [edx + 0x20]; 
0x000590c8: inc dword ptr [edx]; mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0017012e: inc dword ptr [edx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0016785f: inc dword ptr [edx]; pop esi; std; call dword ptr [edx + 0x5e]; 
0x0016733f: inc dword ptr [esi + 0x3a]; std; push dword ptr [esi + 0x6fffd3a]; cmp edi, ebp; call dword ptr [esi + 0x3b]; 
0x001672cb: inc dword ptr [esi + 0x70fffd3b]; cmp bh, ch; jmp eax; 
0x00166e5f: inc dword ptr [esi + 0x8fffd0f]; adc ch, bh; jmp edx; 
0x00169f03: inc dword ptr [esi + ecx*2 + 1]; add byte ptr [ebx + esi], dl; int1; jmp dword ptr [eax + 0x4e]; 
0x001673c3: inc dword ptr [esi - 0x290002c4]; cmp al, 0xfd; jmp dword ptr [esi]; 
0x00166f43: inc dword ptr [esi - 0x290002e2]; push ds; std; jmp dword ptr [esi]; 
0x00165dfb: inc dword ptr [esi - 0x32]; cld; jmp ebx; 
0x00166573: inc dword ptr [esi - 0x59000328]; fdivr st(4); inc esi; fdivr st(4); jmp dword ptr [ebx - 0x28]; 
0x0016770b: inc dword ptr [esi - 0x7f0002a3]; pop esp; std; jmp eax; 
0x0016743f: inc dword ptr [esi]; cmp al, 0xfd; call dword ptr [esi + 0x3c]; 
0x00167347: inc dword ptr [esi]; cmp edi, ebp; call dword ptr [esi + 0x3b]; 
0x00165df3: inc dword ptr [esi]; into; cld; jmp dword ptr [esi]; 
0x00167787: inc dword ptr [esi]; pop ebp; std; call dword ptr [esi + 0x5d]; 
0x00167283: inc dword ptr [esi]; std; jmp dword ptr [esi + 0x2e]; 
0x0016717f: inc dword ptr [esi]; sub al, 0xfd; jmp dword ptr [esi + 0x2c]; 
0x0016718b: inc dword ptr [esi]; sub eax, 0x2c00fffd; std; jmp dword ptr [eax + 0x2c]; 
0x0016d2cb: inc dword ptr [esp + eax*8]; add al, byte ptr [eax]; inc esp; aad 0xf9; dec dword ptr [eax]; ret; 
0x00167390: inc eax; aaa; std; call eax; 
0x0001b2f1: inc eax; adc al, 0x83; ret 0x8501; 
0x0011f715: inc eax; adc al, 4; mov eax, 1; ret; 
0x00074cf8: inc eax; adc bh, dh; fsub dword ptr [ecx]; ret 0x5489; 
0x00148f0c: inc eax; adc byte ptr [ebp - 0x74f18a2e], al; inc esp; and al, 0xc; pop edi; ret; 
0x000ce0d8: inc eax; adc byte ptr [ecx - 0x3fceefbe], cl; pop esi; ret; 
0x00148cdd: inc eax; adc byte ptr [edi], cl; test dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x00166fe8: inc eax; adc eax, 0x15d0fffd; std; jmp dword ptr [eax + 0x16]; 
0x00166f0c: inc eax; adc ebp, edi; call dword ptr [eax + 0xf]; 
0x00166f0c: inc eax; adc ebp, edi; call dword ptr [eax + 0xf]; std; call eax; 
0x000b81a0: inc eax; add al, 0; mov ecx, eax; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x001295fb: inc eax; add al, 0x29; ret 0xd789; 
0x0014901a: inc eax; add al, 0x5f; ret; 
0x0007c2d9: inc eax; add al, 0x85; sal byte ptr [edi + ebx - 0x70], 0x39; ret 0x476; 
0x000f8ecc: inc eax; add al, 0xe8; mov al, byte ptr [0x8100030e]; ret; 
0x0016ed5c: inc eax; add al, byte ptr es:[eax]; cld; lcall ptr [esi + 0x65b40002]; cld; jmp dword ptr [eax]; 
0x00166e30: inc eax; add bh, ch; call eax; 
0x00166e30: inc eax; add bh, ch; call eax; add bh, ch; jmp dword ptr [eax + 3]; 
0x00188d9f: inc eax; add bl, byte ptr [ebp + 0xa]; push cs; adc al, 0x46; ret; 
0x0018b18c: inc eax; add byte ptr [eax], al; add byte ptr [eax + 0x1c0001bf], dl; das; cli; call dword ptr [ebp + 2]; 
0x001724a4: inc eax; add byte ptr [eax], al; add byte ptr [eax + 0x34000032], ch; fldpi; call dword ptr [edi]; 
0x0002d8a8: inc eax; add byte ptr [eax], al; add byte ptr [eax], al; fld xword ptr [esp + 0x40]; add esp, 0x7c; ret; 
0x000b9081: inc eax; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x000f15ab: inc eax; add byte ptr [eax], al; add byte ptr [ebx - 0x3fb73], cl; inc dword ptr [edi + 0x92b8df]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00172460: inc eax; add byte ptr [eax], al; add byte ptr [edx + esi], ah; add byte ptr [eax], bl; fldpi; call dword ptr [edi]; 
0x0017326d: inc eax; add byte ptr [eax], al; push eax; add al, 0xec; call dword ptr [edi + 1]; 
0x00026e8e: inc eax; add byte ptr [eax], al; ret; 
0x00054e3e: inc eax; add byte ptr [eax], al; sete dl; mov eax, edx; add esp, 0x7c; ret; 
0x00159483: inc eax; add byte ptr [edx], al; add byte ptr [eax], al; add dword ptr [0x73950000], ecx; ret 0x48; 
0x001769e0: inc eax; add ch, bh; call dword ptr [ecx]; 
0x001715ef: inc eax; add ch, byte ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0018f557: inc eax; add dh, byte ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x0019227b: inc eax; add dl, byte ptr [edx + 0x43140e0a]; ret; 
0x0016a33b: inc eax; add dword ptr [bx + si], eax; inc esp; lodsb al, byte ptr [esi]; int1; jmp eax; 
0x00031762: inc eax; add dword ptr [eax], eax; add byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x00183275: inc eax; add dword ptr [eax], eax; or ah, dh; cli; jmp dword ptr [ebx]; 
0x00082889: inc eax; add dword ptr [ecx + ecx*8 - 0x2fd6088b], eax; sub eax, 1; ret; 
0x0019daa0: inc eax; add eax, 0; add byte ptr [eax], al; ret 3; 
0x0016e805: inc eax; add eax, dword ptr [eax]; push esp; push ds; cld; call dword ptr [eax + 0x40]; 
0x001905df: inc eax; add ebx, dword ptr [edi + 0x140e0a02]; inc ecx; ret; 
0x00170032: inc eax; add ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0018737b: inc eax; add esi, dword ptr [edx]; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x0018ff3b: inc eax; add esi, dword ptr [esi]; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x0007ca64: inc eax; add esp, 0x100; sub eax, edx; ret; 
0x0012b035: inc eax; add esp, 0x10; pop esi; pop edi; pop ebp; ret; 
0x0011e53d: inc eax; add esp, 0x3c; ret; 
0x00019e45: inc eax; add esp, 0x44; ret; 
0x0002d8b0: inc eax; add esp, 0x7c; ret; 
0x00186cab: inc eax; add esp, dword ptr [edx]; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x00177c90: inc eax; and bh, ch; call dword ptr [esi]; 
0x001668f3: inc eax; call 0xe9a768f6; cld; jmp dword ptr [eax - 0x16]; 
0x0016cc14: inc eax; cdq; add al, byte ptr [eax]; and al, 0x45; stc; jmp dword ptr [eax - 0x67]; 
0x0016cc33: inc eax; cdq; add al, byte ptr [eax]; xor al, 0x46; stc; jmp eax; 
0x001991b9: inc eax; clc; call dword ptr [ecx]; 
0x00166abf: inc eax; clc; cld; jmp dword ptr [eax - 7]; 
0x0016c099: inc eax; clc; jmp esp; 
0x00134e7b: inc eax; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013630b: inc eax; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0013be5b: inc eax; clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x001691cb: inc eax; cld; add byte ptr [eax], al; ret 0xf012; 
0x0013be74: inc eax; cld; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0016d799: inc eax; cli; jmp dword ptr [eax]; 
0x0018d001: inc eax; cmc; jmp dword ptr [edx]; 
0x0018aea5: inc eax; cmc; jmp ecx; 
0x000f7234: inc eax; cmove eax, edx; ret; 
0x000271e9: inc eax; cmp al, 0x8b; add al, 0x90; ret; 
0x0016e7cb: inc eax; cmp al, byte ptr [ebx]; add ah, al; adc al, 0xfc; jmp dword ptr [eax + 0x3f]; 
0x00167350: inc eax; cmp bh, ch; push dword ptr [eax + 0xfffd3a]; cmp edi, ebp; call dword ptr [eax + 0x3b]; 
0x00068127: inc eax; cmp byte ptr [ebp - 0xcfc8740], al; ret; 
0x00198a40: inc eax; cwde; add al, byte ptr [eax]; mov word ptr [eax + edi*8], gs; call dword ptr [eax]; 
0x0016b72b: inc eax; daa; add al, byte ptr [eax]; xchg eax, esp; sbb bh, dh; call esp; 
0x001298d5: inc eax; dec eax; ret; 
0x00129905: inc eax; dec esp; ret; 
0x00168bcc: inc eax; fadd dword ptr [eax]; add cl, dh; fucomi st(6); call dword ptr [eax]; 
0x00166933: inc eax; fdivp st(4); call dword ptr [eax - 0x21]; 
0x00166933: inc eax; fdivp st(4); call dword ptr [eax - 0x21]; cld; jmp eax; 
0x0017cf40: inc eax; fld qword ptr [eax]; add byte ptr [esp + esi*8 - 0x11], ch; call dword ptr [edx]; 
0x00166bcf: inc eax; hlt; cld; call dword ptr [eax - 0xb]; 
0x00166bcf: inc eax; hlt; cld; call dword ptr [eax - 0xb]; cld; jmp eax; 
0x000439df: inc eax; idiv bh; dec dword ptr [ebx - 0x1577d]; jmp dword ptr [ebp - 0x75]; 
0x00087c0c: inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x00195d40: inc eax; imul eax, dword ptr [edx], 0; mov word ptr [edi - 9], es; jmp dword ptr [esi]; 
0x0016c3c3: inc eax; imul eax, dword ptr [edx], 0xf87b5400; call esp; 
0x0007ca63: inc eax; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x0007ca62: inc eax; inc eax; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x0003f8db: inc eax; inc eax; ret; 
0x001675eb: inc eax; inc eax; std; call dword ptr [eax + 0x41]; 
0x001675eb: inc eax; inc eax; std; call dword ptr [eax + 0x41]; std; jmp eax; 
0x0016760c: inc eax; inc ebp; std; call eax; 
0x000a7b21: inc eax; inc edx; str word ptr [ebx - 0x76dfdba4]; ret 0x7c8b; 
0x00165e1c: inc eax; into; cld; call dword ptr [ebx]; 
0x00166954: inc eax; jecxz 0x166953; call eax; 
0x00166954: inc eax; jecxz 0x166953; call eax; jecxz 0x166957; jmp dword ptr [eax - 0x1c]; 
0x0013500e: inc eax; jmp dword ptr [esi - 0x77]; 
0x0018a240: inc eax; mov al, 1; add byte ptr [eax + esi*8], ch; hlt; call dword ptr [ebx]; 
0x00187a40: inc eax; mov byte ptr [ecx], al; add byte ptr [edx - 0xd], bl; jmp dword ptr [eax + 3]; 
0x000ddbc8: inc eax; mov dword ptr [esp + 4], eax; call 0xddf70; add esp, 0x3c; ret; 
0x00079b61: inc eax; mov dword ptr [esp + 4], edx; call eax; 
0x00065889: inc eax; mov dword ptr [esp + 8], edi; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x0011b126: inc eax; mov dword ptr [esp], eax; call 0x11ad10; add esp, 0x3c; ret; 
0x000ca1d8: inc eax; mov eax, 0xffffffff; pop esi; pop edi; pop ebp; ret 8; 
0x00027e9e: inc eax; mov eax, dword ptr [ebx + 0x390c]; mov dword ptr [esp], edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00028194: inc eax; mov eax, dword ptr [ebx + 0x3910]; mov dword ptr [esp], edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000283d7: inc eax; mov eax, dword ptr [ebx + 0x3914]; mov dword ptr [esp], edi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00027e81: inc eax; mov eax, dword ptr [ebx + 0x3914]; mov dword ptr [esp], edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00094e35: inc eax; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000421e9: inc eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00127b74: inc eax; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00173d35: inc eax; mov ebp, esp; jmp dword ptr [edx]; 
0x00129c53: inc eax; mov edi, dword ptr [esp + 0x44]; mov dword ptr [edx], ecx; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x000d7dcc: inc eax; mov edi, dword ptr [esp + 0x44]; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret 0x1c; 
0x0011b5c1: inc eax; mov edi, dword ptr [esp + 0x44]; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret 8; 
0x0001a331: inc eax; mov edi, dword ptr [esp + 0x44]; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x00083066: inc eax; mov edx, ebx; sub edx, dword ptr [ebx + edi*4 - 0x11ff80]; jmp edx; 
0x0008e972: inc eax; mov esi, 0xc03000c; cdq; jmp ecx; 
0x00054c80: inc eax; mov esi, dword ptr [esp + 0x44]; mov edi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x00019eb5: inc eax; neg eax; adc edx, 0; add esp, 0x44; neg edx; ret; 
0x0006ddc6: inc eax; or al, 0x39; ret 0x1574; 
0x00149076: inc eax; or al, 0x5f; ret; 
0x000fefc8: inc eax; or al, byte ptr [eax]; mov eax, dword ptr [ecx - 0x14]; mov eax, dword ptr gs:[eax]; ret; 
0x000e5db5: inc eax; or byte ptr [0x100f], ah; ret; 
0x00072811: inc eax; or byte ptr [eax], al; add byte ptr [eax], al; add bl, dh; ret; 
0x00041d68: inc eax; or byte ptr [eax], al; ret; 
0x00003d99: inc eax; or byte ptr fs:[ebx + 0x4e], ch; ret 0x6bba; 
0x00171cd6: inc eax; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0008d46c: inc eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000eef5c: inc eax; or eax, dword ptr [eax]; xchg edi, ebx; mov eax, 0x147; call dword ptr gs:[0x10]; 
0x00168a89: inc eax; out dx, al; call eax; 
0x0017b0aa: inc eax; out dx, eax; jmp dword ptr [edx]; 
0x00166df0: inc eax; paddw mm7, mm7; ror byte ptr [edi*8 - 0x2f25f01], 1; push dword ptr [eax + 0xe]; std; jmp dword ptr [eax]; 
0x00023be7: inc eax; pop eax; ret; 
0x001677cb: inc eax; pop eax; std; call dword ptr [eax + 0x59]; 
0x001677cb: inc eax; pop eax; std; call dword ptr [eax + 0x59]; std; jmp eax; 
0x0007c79c: inc eax; pop ebp; pop ebx; pop esi; pop edi; ret; 
0x0011baa5: inc eax; pop ebx; pop esi; pop edi; ret; 
0x0008f593: inc eax; pop edi; pop esi; pop ebx; ret; 
0x0007dc77: inc eax; pop edi; pop esi; ret; 
0x0007f8f3: inc eax; pop edi; ret; 
0x00148f85: inc eax; pop es; pop edi; ret; 
0x000ca2c8: inc eax; pop esi; pop edi; pop ebp; ret 8; 
0x00097b7a: inc eax; pop esi; pop edi; pop ebp; ret; 
0x00167817: inc eax; pop esi; std; call dword ptr [eax]; 
0x00129935: inc eax; pop esp; ret; 
0x00033db6: inc eax; push cs; add dword ptr [eax], eax; xor eax, eax; add esp, 8; ret; 
0x00033d10: inc eax; push cs; add dword ptr [eax], eax; xor eax, eax; ret; 
0x0017408e: inc eax; push cs; or byte ptr [ebx + 0x40e5702], al; ret; 
0x00149096: inc eax; push cs; pop edi; ret; 
0x00188cd0: inc eax; push ds; hlt; call ecx; 
0x00129925: inc eax; push eax; ret; 
0x00149036: inc eax; push es; pop edi; ret; 
0x00166e4f: inc eax; push es; std; call dword ptr [eax + 7]; 
0x00166e4f: inc eax; push es; std; call dword ptr [eax + 7]; std; jmp eax; 
0x00174640: inc eax; push esp; add byte ptr [eax], al; pushfd; fsubr st(4); jmp dword ptr [edi]; 
0x00129995: inc eax; push esp; ret; 
0x001677ac: inc eax; push esp; std; call eax; 
0x00168864: inc eax; ret 0; 
0x0016d2ab: inc eax; ret 2; 
0x00026a9b: inc eax; ret; 
0x001881c0: inc eax; sal ebx, 1; call dword ptr [eax]; 
0x000c745a: inc eax; sbb al, 0; add byte ptr [eax], al; add dh, dh; ret 0xc740; 
0x000c9641: inc eax; sbb al, 0x83; ret 0x8501; 
0x000ed3f7: inc eax; sbb al, 0x85; ror byte ptr [edi], 0x44; ret 0x90c3; 
0x00119bec: inc eax; sbb al, 0x85; sal byte ptr [eax + ecx - 0x73], 0x56; dec esp; mov dword ptr [esp], edx; call eax; 
0x001144d4: inc eax; sbb byte ptr [ecx + 0x295674fa], cl; ret 0xea83; 
0x000d200f: inc eax; sbb byte ptr [ecx], al; ret 0xe889; 
0x00074c4f: inc eax; sbb dword ptr [eax], eax; add byte ptr [ebp + 0x44c8b], cl; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x77]; 
0x00167007: inc eax; sbb ebp, edi; call dword ptr [eax + 0x1a]; 
0x00167007: inc eax; sbb ebp, edi; call dword ptr [eax + 0x1a]; std; jmp eax; 
0x000fb7e3: inc eax; setne al; movzx eax, al; pop ebx; ret; 
0x0002d7b9: inc eax; shr eax, 0x1f; ret; 
0x001671bf: inc eax; std; call dword ptr [eax + 0x27]; 
0x001671bf: inc eax; std; call dword ptr [eax + 0x27]; std; jmp eax; 
0x001675ed: inc eax; std; call dword ptr [eax + 0x41]; 
0x001675ed: inc eax; std; call dword ptr [eax + 0x41]; std; jmp eax; 
0x00166c80: inc eax; std; cld; call eax; 
0x001675e9: inc eax; std; inc eax; inc eax; std; call dword ptr [eax + 0x41]; 
0x00174acd: inc eax; sub al, 0xed; jmp dword ptr [edx]; 
0x0002701b: inc eax; sub byte ptr [ebx + 0x2009084], cl; add byte ptr [eax], al; ret; 
0x0007d055: inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x00194c30: inc eax; sub edi, esi; call dword ptr [ecx]; 
0x00167978: inc eax; xchg eax, ebx; cld; call eax; 
0x00167973: inc eax; xchg eax, edx; cld; inc dword ptr [eax - 0x6d]; cld; call eax; 
0x001854e0: inc eax; xor al, 0xf2; call dword ptr [edx]; 
0x001956b0: inc eax; xor al, 0xf7; jmp dword ptr [ebx]; 
0x000271b9: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x00027199: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x100; ret; 
0x00027179: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x000270f9: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x200; ret; 
0x00027139: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x00027099: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x400; ret; 
0x00027119: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x000270d9: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x800; ret; 
0x00027059: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 1; ret; 
0x000270b9: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 2; ret; 
0x00027159: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 4; ret; 
0x00027079: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 8; ret; 
0x0016b98b: inc eax; xor al, 2; add byte ptr [edx + edi*2 - 9], ah; call esp; 
0x0016736f: inc eax; xor bh, ch; call dword ptr [eax + 0x33]; 
0x0016736f: inc eax; xor bh, ch; call dword ptr [eax + 0x33]; std; jmp eax; 
0x0015a60c: inc eax; xor bl, dh; jmp dword ptr [eax + 0x30]; 
0x0015a61b: inc eax; xor bl, dh; jmp eax; 
0x00026feb: inc eax; xor byte ptr [ebx + 0x2009084], cl; add byte ptr [eax], al; ret; 
0x0015a65b: inc eax; xor dh, bl; call eax; 
0x0015a65b: inc eax; xor dh, bl; call eax; xor dh, bl; jmp eax; 
0x000ca2e9: inc eax; xor eax, eax; pop esi; pop edi; pop ebp; ret 8; 
0x0015a678: inc eax; xor esi, ebx; jmp dword ptr [eax + 0x33]; 
0x0015a687: inc eax; xor esi, ebx; jmp eax; 
0x000ecfaa: inc ebp; aam 0; add byte ptr [eax], al; add byte ptr [ebx - 0x34782fb3], cl; mov eax, 6; call dword ptr gs:[0x10]; 
0x00081cd5: inc ebp; aam 0x83; ret 0x2501; 
0x000b82cd: inc ebp; aam 0xe8; lodsb al, byte ptr [esi]; mov cl, 0xfb; jmp dword ptr [ebp - 0x5f]; 
0x000f7a5c: inc ebp; adc al, 0x39; ret 0xf67c; 
0x00018068: inc ebp; adc al, 0x83; ret 0x108; 
0x000f7a4f: inc ebp; adc al, 0x8b; push ecx; adc al, 0x39; ret 0xa7d; 
0x000a4caa: inc ebp; adc al, 0xe8; ret 0x850; 
0x00122441: inc ebp; adc al, 3; inc ebp; sbb byte ptr [ecx], bh; ret 0x870f; 
0x000704d1: inc ebp; add al, 0x2b; inc ebp; or al, 0x89; ret 0xfac1; 
0x0011c347: inc ebp; add al, 0x83; ret 0x8904; 
0x0006d944: inc ebp; add al, 0x89; ret 0xfac1; 
0x0011c2f5: inc ebp; add al, 0x89; sub al, 0x24; call dword ptr [eax + 0x10]; 
0x000cabab: inc ebp; add al, 0x8b; insb byte ptr es:[edi], dx; and al, 0x38; add esp, 0x3c; ret 8; 
0x0017371d: inc ebp; add byte ptr [eax], al; adc byte ptr [esp + ebp*8], dl; call dword ptr [edi + 7]; 
0x001069d6: inc ebp; add byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x0006c365: inc ebp; add byte ptr [ebx - 0x6bf00002], al; ret 0x7c89; 
0x000e6068: inc ebp; add byte ptr [ecx - 0x2078dbfc], cl; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00094f89: inc ebp; add dword ptr [eax], eax; pop esi; pop edi; pop ebp; ret; 
0x00179bf6: inc ebp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x001470be: inc ebp; add eax, 0xf; ret; 
0x000c2b66: inc ebp; add ecx, dword ptr [ebp + 0x2de90475]; idiv bh; dec dword ptr [ebx - 0x15755]; jmp dword ptr [ebp - 0x75]; 
0x0008046e: inc ebp; add esp, 0x18; mov eax, esi; pop esi; ret; 
0x00064acc: inc ebp; and al, 0x89; ret 0xfac1; 
0x00070429: inc ebp; and byte ptr [ebx], ch; inc ebp; sbb al, 0x89; ret 0xfac1; 
0x001280cd: inc ebp; clc; dec dword ptr [ebp - 0x7b6837d]; dec dword ptr [edi]; inc esp; ret 0x4489; 
0x0012b1c1: inc ebp; dec esp; lea edx, dword ptr [esp + 0x30]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x48]; 
0x0001c69c: inc ebp; fadd qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0xf74d], cl; jmp dword ptr [ebp - 0x75]; 
0x000e6fd0: inc ebp; fmul dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret 4; 
0x000e72a8: inc ebp; fmul dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret 8; 
0x000301fb: inc ebp; fsub st(1), st(0); ret 0xfffe; 
0x00031ec3: inc ebp; in al, 0x8b; dec ebp; adc al, 0x83; jmp dword ptr [eax]; 
0x00174d32: inc ebp; in eax, dx; jmp dword ptr [edx]; 
0x000fdbbc: inc ebp; inc dword ptr [ebp - 0x76eb8b40]; ret 0x848b; 
0x000e8b8b: inc ebp; jmp dword ptr [eax]; 
0x0017b373: inc ebp; lcall 0x6d06:0xd1cffef; out dx, eax; jmp dword ptr [edx]; 
0x00049358: inc ebp; mov ah, 0xe9; ret; 
0x00031ef8: inc ebp; mov al, 0x39; ret 0x1a73; 
0x000f1837: inc ebp; mov al, byte ptr [0x73b345c6]; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000f183a: inc ebp; mov bl, 0x73; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00049729: inc ebp; mov byte ptr [edi], cl; inc esp; ret 0x4589; 
0x0018f217: inc ebp; mov dword ptr [ecx - 0x3b], 0x4504040c; or eax, dword ptr [edx]; mov al, 0xa; ret; 
0x0001a730: inc ebp; mov eax, 0x5bf4658d; pop esi; pop edi; pop ebp; ret 4; 
0x000ddc32: inc ebp; mov ebx, dword ptr [esp + 0x70]; mov esi, dword ptr [esp + 0x74]; mov edi, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x00048a64: inc ebp; mov esp, 0x8904c683; ret 0xfac1; 
0x0012738f: inc ebp; mov esp, 0x89240489; push esp; and al, 4; call dword ptr [ebp - 0x7c]; 
0x000b4f17: inc ebp; mov esp, 0x8b900c89; dec ebp; or al, 0x83; ret 0x8901; 
0x00028911: inc ebp; mov word ptr [ebx - 0xf775], cs; jmp dword ptr [ebp - 0x77]; 
0x000dea16: inc ebp; or al, 0; or dh, 0x80; xchg edi, ebx; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0001d2e2: inc ebp; or al, 0x89; add al, 0x24; call dword ptr [ebp + 4]; 
0x000704d4: inc ebp; or al, 0x89; ret 0xfac1; 
0x000b2d06: inc ebp; or al, 0xe8; ret; 
0x0003f1f8: inc ebp; or byte ptr [ebp + 0x5e5bf465], 0x5f; pop ebp; ret; 
0x0012b329: inc ebp; or byte ptr [ebx], ch; inc ebp; add al, 0x89; ret 0xfac1; 
0x00189957: inc ebp; or eax, dword ptr [ebx]; aam 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001988ce: inc ebp; or eax, dword ptr [ebx]; add byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0018a4e5: inc ebp; or eax, dword ptr [ebx]; add cl, byte ptr es:[edx]; push cs; adc al, 0x43; ret; 
0x00177357: inc ebp; or eax, dword ptr [ebx]; add word ptr [edx], cx; push cs; adc al, 0x43; ret; 
0x0017acfa: inc ebp; or eax, dword ptr [ebx]; and byte ptr [edx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018912f: inc ebp; or eax, dword ptr [ebx]; cmp byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0016fcdc: inc ebp; or eax, dword ptr [ebx]; cmp eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017dc4a: inc ebp; or eax, dword ptr [ebx]; mov ebx, 0x140e0a03; inc ebx; ret; 
0x0019630b: inc ebp; or eax, dword ptr [ebx]; or eax, 0x140e0a01; inc ebx; ret; 
0x001981f7: inc ebp; or eax, dword ptr [ebx]; test dword ptr [ecx], 0x41140e0a; ret; 
0x00179f42: inc ebp; or eax, dword ptr [edx]; dec esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018f21e: inc ebp; or eax, dword ptr [edx]; mov al, 0xa; ret; 
0x0019847b: inc ebp; or eax, dword ptr [edx]; pop esp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00174627: inc ebp; or eax, dword ptr [edx]; push esi; ret; 
0x0017c4d8: inc ebp; or eax, dword ptr [edx]; ror dword ptr [edx], 1; push cs; adc al, 0x41; ret; 
0x001706c8: inc ebp; or eax, dword ptr [edx]; xchg eax, esi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x001874e3: inc ebp; or eax, dword ptr [esi + 0xa]; push cs; adc al, 0x46; ret; 
0x0017ad8f: inc ebp; or eax, dword ptr [esi + 0xa]; push cs; or al, 0x41; ret; 
0x00188700: inc ebp; or ebp, dword ptr [ebx + 0xa]; ret; 
0x001993c6: inc ebp; or ebp, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0018358c: inc ebp; or ebx, dword ptr [ebp + 0xa]; push cs; add al, 0xc6; ret; 
0x0018be84: inc ebp; or ebx, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x00171c54: inc ebp; or ebx, dword ptr [edx + 0xe]; add al, 0xc6; ret; 
0x00185ac1: inc ebp; or ebx, dword ptr [esi + 0xa]; push cs; adc al, 0x43; ret; 
0x0017c5d1: inc ebp; or ecx, dword ptr [ebp + 0xe]; add al, 0xc6; ret; 
0x0018a793: inc ebp; or edi, dword ptr [edi + 0xa]; push cs; adc al, 0x43; ret; 
0x00192431: inc ebp; or edx, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x00174284: inc ebp; or esi, dword ptr [edi + 0xa]; ret; 
0x00193eb5: inc ebp; or esi, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x00174234: inc ebp; or esi, dword ptr [esi + 0xa]; ret; 
0x001879b8: inc ebp; or esp, dword ptr [eax + 0xa]; ret; 
0x0016fcc6: inc ebp; or esp, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0019b216: inc ebp; or esp, dword ptr [esi + 0xe]; or al, 0x41; ret; 
0x0006dcb9: inc ebp; pop eax; mov dword ptr [esp], ecx; add eax, 0x2c; mov dword ptr [esp + 4], eax; call dword ptr [ecx + 0x18]; 
0x0013128a: inc ebp; pop ebx; ret; 
0x000e8421: inc ebp; push 0xf189ffff; mov edx, eax; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0017a4b3: inc ebp; push cs; add al, 0xc6; ret; 
0x001916ea: inc ebp; push cs; and byte ptr [edx], al; ret 0xe0a; 
0x001825fd: inc ebp; push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4204], al; ret; 
0x0018266c: inc ebp; push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4a04], al; ret; 
0x0018265b: inc ebp; push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x00182639: inc ebp; push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7104], al; ret; 
0x0018264a: inc ebp; push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7304], al; ret; 
0x00182628: inc ebp; push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7504], al; ret; 
0x000fc8ff: inc ebp; push esp; and al, 0x1c; add esp, 0x2c; mov eax, edx; ret; 
0x00064a6b: inc ebp; push esp; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x0001b426: inc ebp; pushfd; call 0x126c80; mov eax, dword ptr [ebp - 0x64]; mov dword ptr [esp], esi; call eax; 
0x0001b42e: inc ebp; pushfd; mov dword ptr [esp], esi; call eax; 
0x00110ccc: inc ebp; ret 0x301; 
0x000c91a3: inc ebp; ret 0x45c7; 
0x0003f6b8: inc ebp; ret 0x548b; 
0x00158fdf: inc ebp; ret 0x591c; 
0x00097701: inc ebp; ret 0x6ae9; 
0x000c74c7: inc ebp; ret 0x70e9; 
0x00097b72: inc ebp; ret 0x748d; 
0x000b9a85: inc ebp; ret 0x81c3; 
0x00045081: inc ebp; ret 0x8588; 
0x000578de: inc ebp; ret 0x8589; 
0x0000254b: inc ebp; ret 0x88ad; 
0x000c91df: inc ebp; ret 0x8ae9; 
0x0005b41b: inc ebp; ret 0x8d89; 
0x000b9946: inc ebp; ret 0x8dc3; 
0x00105080: inc ebp; ret 0x90c3; 
0x0010ac9c: inc ebp; ret 0x95e9; 
0x0012f8d2: inc ebp; ret 0x99e9; 
0x001300da: inc ebp; ret 0x9be9; 
0x000a7927: inc ebp; ret 0xa5eb; 
0x0004662b: inc ebp; ret 0xbd89; 
0x000678ff: inc ebp; ret 0xc3f3; 
0x0007fd53: inc ebp; ret 0xc483; 
0x000e2aa2: inc ebp; ret 0xcfe9; 
0x000e192a: inc ebp; ret 0xe7e9; 
0x000407a5: inc ebp; ret 0xfde9; 
0x001702e2: inc ebp; ret; 
0x0002dfcc: inc ebp; rol byte ptr [edi + 0xaeb8df], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e752f: inc ebp; ror byte ptr [ebp + 0x5e5bf465], 1; pop edi; pop ebp; ret 4; 
0x00070b9f: inc ebp; ror byte ptr [ebp + 0x5e5bf465], 1; pop edi; pop ebp; ret; 
0x000e2173: inc ebp; ror byte ptr [ebp - 0x47bd76d], 1; dec dword ptr [ebp - 0x47bf37d]; dec dword ptr [edi]; inc esp; ret 0x45f6; 
0x000dab61: inc ebp; ror byte ptr [ebx - 0x2f083b83], 1; ret 0x5489; 
0x000e2419: inc ebp; ror byte ptr [ecx + 0x2de82404], 0x4b; dec dword ptr [ebx - 0xb36b]; dec dword ptr [ebx - 0xab7b]; jmp dword ptr [ebp - 0x77]; 
0x000c3849: inc ebp; ror byte ptr [ecx - 0x217dbfc], 1; cmc; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x000e3599: inc ebp; ror byte ptr [ecx - 0x5217dbfc], 0x39; dec dword ptr [ebx - 0xc36b]; dec dword ptr [ebx - 0xbb7b]; jmp dword ptr [ebp - 0x77]; 
0x0007da26: inc ebp; ror dword ptr [ebx + 0x10c248c], 1; add byte ptr [eax], al; mov dword ptr [ecx], edx; add esp, 0x100; ret; 
0x0007042c: inc ebp; sbb al, 0x89; ret 0xfac1; 
0x0010aa2e: inc ebp; sbb byte ptr [ebx + 0x44c61c75], cl; xor bh, bh; add byte ptr [ebx - 0x1e77b], cl; dec dword ptr [ebx - 0xf74d]; jmp dword ptr [ebp - 0x77]; 
0x00122444: inc ebp; sbb byte ptr [ecx], bh; ret 0x870f; 
0x0010a9de: inc ebp; sbb byte ptr [edi], cl; xchg eax, ebp; ret 0xc085; 
0x0002c677: inc ebp; sbb eax, 0x508d0005; add esi, esi; ret 0x6601; 
0x00177755: inc ebp; shr dh, cl; jmp dword ptr [edx]; 
0x0016cc19: inc ebp; stc; jmp dword ptr [eax - 0x67]; 
0x0016760d: inc ebp; std; call eax; 
0x0016760d: inc ebp; std; call eax; inc ebp; std; jmp dword ptr [eax + 0x46]; 
0x00167611: inc ebp; std; jmp dword ptr [eax + 0x46]; 
0x00064ac9: inc ebp; sub al, 0x2b; inc ebp; and al, 0x89; ret 0xfac1; 
0x000ba018: inc ebp; test byte ptr [ebx - 0xf76d], cl; dec dword ptr [ebp - 0x43f737d]; jmp dword ptr [ebp - 0x75]; 
0x0016bc05: inc ebx; add al, byte ptr [eax]; movsb byte ptr es:[edi], byte ptr [esi]; in al, 0xf7; jmp esp; 
0x00173515: inc ebx; add byte ptr [eax], al; test al, 8; in al, dx; call dword ptr [esi]; 
0x0015afb9: inc ebx; add dh, bh; jmp edi; 
0x00195df9: inc ebx; add dword ptr [0x3870486], 2; arpl word ptr [edx], cx; ret; 
0x00197009: inc ebx; add dword ptr [0x3870486], 2; dec byte ptr [edx]; ret; 
0x00187a85: inc ebx; add dword ptr [0x3870486], 2; fisttp qword ptr [edx]; ret; 
0x00195e29: inc ebx; add dword ptr [0x3870486], 2; jno 0x195e3d; ret; 
0x0019364d: inc ebx; add dword ptr [0x3870486], 2; loope 0x193661; ret; 
0x0018c741: inc ebx; add dword ptr [0x3870486], 2; mov cs, word ptr [edx]; ret; 
0x00187d81: inc ebx; add dword ptr [0x3870486], 3; add al, 0xa; ret; 
0x0016f981: inc ebx; add dword ptr [0x3870486], 3; daa; add dword ptr [edx], ecx; ret; 
0x00172c15: inc ebx; add dword ptr [0x3870486], 3; dec edi; add dword ptr [edx], ecx; ret; 
0x00171419: inc ebx; add dword ptr [0x3870486], 3; dec esp; add ecx, dword ptr [edx]; ret; 
0x00184739: inc ebx; add dword ptr [0x3870486], 3; imul eax, dword ptr [ecx], 0xa; ret; 
0x0018d985: inc ebx; add dword ptr [0x3870486], 3; insd dword ptr es:[edi], dx; add dword ptr [edx], ecx; ret; 
0x00177e6d: inc ebx; add dword ptr [0x3870486], 3; int1; add dword ptr [edx], ecx; ret; 
0x001984ad: inc ebx; add dword ptr [0x3870486], 3; push eax; add dword ptr [edx], ecx; ret; 
0x00187f69: inc ebx; add dword ptr [0x3870486], 3; push ebx; add cl, byte ptr [edx]; ret; 
0x00195fb1: inc ebx; add dword ptr [0x3870486], 3; push ebx; add dword ptr [edx], ecx; ret; 
0x0018a3bd: inc ebx; add dword ptr [0x3870486], 3; pushfd; add dword ptr [edx], ecx; ret; 
0x00187c35: inc ebx; add dword ptr [0x3870486], 3; xchg byte ptr [edx + ecx], al; ret; 
0x0016fbb9: inc ebx; add dword ptr [0x3870486], 3; xchg eax, ebx; add cl, byte ptr [edx]; ret; 
0x0019650d: inc ebx; add dword ptr [0x3870486], 3; xchg eax, esi; add dword ptr [edx], ecx; ret; 
0x0013325f: inc ebx; add eax, dword ptr cs:[eax]; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00179fb5: inc ebx; and bh, ch; jmp dword ptr [edx]; 
0x00116d89: inc ebx; fdiv st(7), st(0); inc dword ptr [ebx - 0x3fe6fe08]; add eax, 2; add esp, 0x1c; ret; 
0x0016658b: inc ebx; fdivr st(4); jmp dword ptr [eax - 0x28]; 
0x001955e8: inc ebx; idiv bh; sbb al, 0xd; cmp eax, dword ptr [edx - 0xa]; jmp dword ptr [edx]; 
0x001955b8: inc ebx; idiv bh; sbb al, 0xd; xor al, byte ptr [edx - 0xa]; jmp dword ptr [edx]; 
0x00169f99: inc ebx; int1; dec dword ptr [edx + edx*2 + 0x44240001]; int1; jmp esp; 
0x00165e0c: inc ebx; into; cld; jmp eax; 
0x0004a0fc: inc ebx; mov byte ptr [ebx + 0x5e5b5cc4], 0x5f; pop ebp; ret; 
0x00175dab: inc ebx; mov ebx, 0xd1cffee; mov ch, 0xba; out dx, al; jmp dword ptr [edx]; 
0x00183243: inc ebx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0016f658: inc ebx; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x0017403d: inc ebx; or cl, byte ptr [esi]; or al, 0x44; ret; 
0x000eec17: inc ebx; or eax, dword ptr [eax]; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0016f656: inc ebx; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x0017403b: inc ebx; or eax, dword ptr [ebx + 0xa]; push cs; or al, 0x44; ret; 
0x0019644f: inc ebx; or eax, dword ptr [ebx]; aad 1; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0017e0e1: inc ebx; or eax, dword ptr [ebx]; and dword ptr [ecx], eax; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0019a10e: inc ebx; or eax, dword ptr [ebx]; pop edi; add al, 0xa; ret; 
0x0018a7a9: inc ebx; or eax, dword ptr [ebx]; push 0x140e0a03; inc esi; ret; 
0x00173997: inc ebx; or eax, dword ptr [ebx]; ror byte ptr [ecx], 0xa; push cs; adc al, 0x41; ret; 
0x00199f8b: inc ebx; or eax, dword ptr [ebx]; test byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x001897eb: inc ebx; or eax, dword ptr [ebx]; xor al, byte ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x00170816: inc ebx; or eax, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0017d669: inc ebx; or eax, dword ptr [edx]; dec ebp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0019ae2b: inc ebx; or eax, dword ptr [edx]; insb byte ptr es:[edi], dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018883f: inc ebx; or eax, dword ptr [edx]; out 0xa, al; ret; 
0x00198075: inc ebx; or eax, dword ptr [edx]; push esi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0017a543: inc ebx; or eax, dword ptr [edx]; test byte ptr [edx], cl; push cs; or al, 0x41; ret; 
0x001923dd: inc ebx; or ebp, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x0017e1f2: inc ebx; or ebp, dword ptr [esi + 0xa]; ret; 
0x0017473a: inc ebx; or ebx, dword ptr [edi + 0xa]; push cs; adc al, 0x43; ret; 
0x001958b6: inc ebx; or ebx, dword ptr [edx + 0xa]; push cs; adc al, 0x43; ret; 
0x001759cd: inc ebx; or ebx, dword ptr [edx + 0xa]; ret; 
0x0018b267: inc ebx; or ebx, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x001745e0: inc ebx; or ecx, dword ptr [ebp + 0xe]; or al, 0x43; ret; 
0x0017ae11: inc ebx; or ecx, dword ptr [edi + 0xa]; ret; 
0x001702f2: inc ebx; or edi, dword ptr [eax + 0xa]; push cs; adc al, 0x43; ret; 
0x00198ea1: inc ebx; or edi, dword ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x001887c9: inc ebx; or edx, dword ptr [eax + 0xa]; ret; 
0x0018a7d7: inc ebx; or esi, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x001959a6: inc ebx; or esp, dword ptr [eax + 0xa]; push cs; adc al, 0x43; ret; 
0x00183a5a: inc ebx; or esp, dword ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x0018a73a: inc ebx; or esp, dword ptr [edx + ecx + 0xe]; adc al, 0x46; ret; 
0x001758b2: inc ebx; out dx, al; jmp dword ptr [edx]; 
0x0017b529: inc ebx; outsd dx, dword ptr [esi]; out dx, eax; jmp dword ptr [edx]; 
0x0018cb87: inc ebx; push cs; adc al, 0x43; ret; 
0x001971c3: inc ebx; push cs; adc al, 0x46; ret; 
0x00185aa4: inc ebx; push cs; adc al, 0x83; add eax, 0x2400e43; ret 0xe0a; 
0x0017497f: inc ebx; push cs; adc byte ptr [ebx + 0x300e4304], al; add ah, byte ptr [ecx + 0x43100e0a]; ret; 
0x00198e53: inc ebx; push cs; adc byte ptr [ebx + 0xc0e7e04], al; ret; 
0x0016fc95: inc ebx; push cs; add byte ptr [ecx], 3; ret 0xa03; 
0x00173179: inc ebx; push cs; and byte ptr [edi - 0x7a], cl; add al, byte ptr [ebx + 0xe750203]; add al, 0xc6; ret; 
0x00192279: inc ebx; push cs; inc eax; add dl, byte ptr [edx + 0x43140e0a]; ret; 
0x001905dd: inc ebx; push cs; inc eax; add ebx, dword ptr [edi + 0x140e0a02]; inc ecx; ret; 
0x001736cd: inc ebx; push cs; jo 0x1736d4; mov eax, 0x140e0a01; inc ecx; ret; 
0x00198e4e: inc ebx; push cs; or al, 0x86; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xc0e7e04], al; ret; 
0x00183e61: inc ebx; push cs; push eax; add ebp, dword ptr [ecx + 0x140e0a01]; inc ecx; ret; 
0x001940c1: inc ebx; push cs; pushal; add esp, dword ptr [ecx + 0x140e0a01]; inc ecx; ret; 
0x0018b2d6: inc ebx; push cs; pushal; push cs; or byte ptr [esi + ecx + 4], al; ret; 
0x00190bfb: inc ebx; push cs; xor byte ptr [edx + 0xa], bh; push cs; or al, 0x41; ret; 
0x00199fe2: inc ebx; push cs; xor byte ptr [edx], al; imul ecx, dword ptr [esi], 0x40e4108; ret; 
0x00174984: inc ebx; push cs; xor byte ptr [edx], al; mov eax, dword ptr [0x43100e0a]; ret; 
0x00019619: inc ebx; push esi; or al, 0; add esp, 0x18; pop ebx; ret; 
0x000034fe: inc ebx; ret 0x1bf9; 
0x000038a0: inc ebx; ret; 
0x00165e43: inc ebx; sar esp, 1; push ebx; sar esp, 1; jmp dword ptr [ebx]; 
0x0016609f: inc ebx; sar esp, cl; push ebx; sar esp, cl; jmp dword ptr [ebx]; 
0x00167601: inc ebx; std; jmp dword ptr [eax]; 
0x001338df: inc ebx; sub al, byte ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00187f39: inc ebx; xchg dword ptr [ebx], eax; inc edx; add dword ptr [0x5d030486], 6; ret; 
0x000efcb3: inc ebx; xor ecx, dword ptr [ebx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0007073f: inc ecx; adc al, 0xe9; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x001830bf: inc ecx; adc eax, dword ptr [ecx]; ret; 
0x00097f28: inc ecx; add al, 0; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x00089a56: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, dword ptr [edx + 5]; pop edi; ret; 
0x00089b96: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, dword ptr [edx + 5]; ret; 
0x00085686: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x000857b6: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000c8ffa: inc ecx; add al, 0x85; ror byte ptr [edi], 0x94; ret 0x22e9; 
0x000c8d77: inc ecx; add al, 0x85; ror byte ptr [edi], 0x94; ret 0xa5e9; 
0x000c8218: inc ecx; add al, 0x8b; dec ebp; mov al, 0x85; ror byte ptr [edi], 0x94; ret 0x8d89; 
0x000b9321: inc ecx; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x0007da85: inc ecx; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000b9b35: inc ecx; add byte ptr [ebp + 0x1e], dh; lea esi, dword ptr [esi]; xor eax, eax; ret; 
0x00085787: inc ecx; add cl, byte ptr [eax - 0x2f76fdbe]; ret; 
0x00093dca: inc ecx; add cl, byte ptr [eax - 0x776fdbe]; pop ebx; pop edi; ret; 
0x00085667: inc ecx; add cl, byte ptr [eax - 0x776fdbe]; pop edi; ret; 
0x000f7232: inc ecx; add dword ptr [eax + 0xf], eax; inc esp; ret 0x8dc3; 
0x00169e9d: inc ecx; add dword ptr [eax], eax; add dword ptr [edx], esi; int1; jmp esp; 
0x00171b8d: inc ecx; add dword ptr [ebx], 0x78; ret; 
0x0018ce39: inc ecx; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0019646a: inc ecx; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x0019b37a: inc ecx; add dword ptr [edx], ecx; ret; 
0x0008e37b: inc ecx; add eax, 0x42130f66; add eax, 0x5f0c428d; ret; 
0x00093eee: inc ecx; add eax, 0x42130f66; add eax, 0x5f5bf889; ret; 
0x0016e85d: inc ecx; add eax, dword ptr [eax]; inc esp; and bh, ah; call esp; 
0x00089a75: inc ecx; add ecx, dword ptr [ecx + 0x428d0342]; push es; pop edi; ret; 
0x00089ba5: inc ecx; add ecx, dword ptr [ecx + 0x428d0342]; push es; ret; 
0x000857c5: inc ecx; add ecx, dword ptr [ecx - 0x2f76fcbe]; ret; 
0x00093e38: inc ecx; add ecx, dword ptr [ecx - 0x776fcbe]; pop ebx; pop edi; ret; 
0x00085695: inc ecx; add ecx, dword ptr [ecx - 0x776fcbe]; pop edi; ret; 
0x00025bb8: inc ecx; and byte ptr [ecx], bh; ret 0x4d0f; 
0x000e6a66: inc ecx; clc; pop ds; add esp, 0xc; ret; 
0x000b2976: inc ecx; cli; add eax, 0x291ff8c1; ret 0xd26b; 
0x000d8dcf: inc ecx; cli; dec dword ptr [ecx + 0x788d2434]; add eax, ebp; ret; 
0x0018aed1: inc ecx; cmc; call dword ptr [ebx]; 
0x0017b568: inc ecx; cmc; out dx, eax; call dword ptr [eax]; 
0x00169f89: inc ecx; int1; call dword ptr [eax + 0x52]; 
0x00084e19: inc ecx; jmp dword ptr [esi + 0xf]; 
0x0013c9a1: inc ecx; lodsd eax, dword ptr [esi]; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018459d: inc ecx; mov dword ptr [ecx + 0xc], 0x41c50404; or eax, dword ptr [ebx]; ret; 
0x0018455f: inc ecx; mov dword ptr [ecx + 0xc], 0x41c50404; or ebp, dword ptr [esi + 0xa]; ret; 
0x00195fbf: inc ecx; mov dword ptr [ecx + 0xc], 0x41c50404; or edx, dword ptr [ebp + 0xa]; ret; 
0x00196cbf: inc ecx; mov dword ptr [ecx + 0xc], 0x41c50404; or edx, dword ptr [ecx + 0xa]; ret; 
0x0018832a: inc ecx; mov dword ptr [ecx + 0xc], 0x41c50404; or edx, dword ptr [esi + 0xa]; ret; 
0x0017e1eb: inc ecx; mov dword ptr [ecx + 0xc], 0x43c50404; or ebp, dword ptr [esi + 0xa]; ret; 
0x001759c6: inc ecx; mov dword ptr [ecx + 0xc], 0x43c50404; or ebx, dword ptr [edx + 0xa]; ret; 
0x001887c2: inc ecx; mov dword ptr [ecx + 0xc], 0x43c50404; or edx, dword ptr [eax + 0xa]; ret; 
0x0019a4fb: inc ecx; mov dword ptr [ecx + 0xc], 0x44c50404; or ebx, dword ptr [eax + 0xa]; ret; 
0x0017582f: inc ecx; mov dword ptr [ecx + 0xc], 0x44c50404; or ebx, dword ptr [edx + 0xa]; ret; 
0x001984bb: inc ecx; mov dword ptr [ecx + 0xc], 0x47c50404; or eax, dword ptr [esi + 0xa]; ret; 
0x0018c31f: inc ecx; mov dword ptr [ecx + 0xc], 0x47c50404; or ebx, dword ptr [ebx + 0xa]; ret; 
0x00179de6: inc ecx; mov dword ptr [ecx + 0xc], 0x48c50404; or ecx, dword ptr [esi + 0xa]; ret; 
0x00187706: inc ecx; mov dword ptr [ecx + 0xc], 0x48c50404; or edx, dword ptr [esi + 0xa]; ret; 
0x0018c463: inc ecx; mov dword ptr [ecx + 0xc], 0x49c50404; or edx, dword ptr [esi + 0xa]; ret; 
0x0018c75d: inc ecx; mov dword ptr [ecx - 0x3b], 0x4104040c; or eax, dword ptr [edi + 0xa]; ret; 
0x00185feb: inc ecx; mov dword ptr [ecx - 0x3b], 0x4104040c; or ecx, dword ptr [ebp + 0xa]; ret; 
0x001709ce: inc ecx; mov dword ptr [ecx - 0x3b], 0x4104040c; or esi, dword ptr [esi + 0xa]; ret; 
0x001845bd: inc ecx; mov dword ptr [ecx - 0x3b], 0x4104040c; or esp, dword ptr [edi + 0xa]; ret; 
0x001729c7: inc ecx; mov dword ptr [ecx - 0x3b], 0x4704040c; or ebp, dword ptr [eax + 0xa]; ret; 
0x0002de76: inc ecx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x000de32e: inc ecx; mov edx, 0xc3810004; ret 0xc4c; 
0x000f7a74: inc ecx; or al, 0x39; ret 0x1474; 
0x000f7a88: inc ecx; or al, 0x39; ret 0xf275; 
0x000e1e02: inc ecx; or al, 0x89; add al, 0x24; call dword ptr [ecx + 0x24]; 
0x000f9307: inc ecx; or al, 0x89; ret 0xe283; 
0x00179de8: inc ecx; or al, 4; add al, 0xc5; dec eax; or ecx, dword ptr [esi + 0xa]; ret; 
0x00187708: inc ecx; or al, 4; add al, 0xc5; dec eax; or edx, dword ptr [esi + 0xa]; ret; 
0x0018c465: inc ecx; or al, 4; add al, 0xc5; dec ecx; or edx, dword ptr [esi + 0xa]; ret; 
0x0017e1ed: inc ecx; or al, 4; add al, 0xc5; inc ebx; or ebp, dword ptr [esi + 0xa]; ret; 
0x001759c8: inc ecx; or al, 4; add al, 0xc5; inc ebx; or ebx, dword ptr [edx + 0xa]; ret; 
0x001887c4: inc ecx; or al, 4; add al, 0xc5; inc ebx; or edx, dword ptr [eax + 0xa]; ret; 
0x0018459f: inc ecx; or al, 4; add al, 0xc5; inc ecx; or eax, dword ptr [ebx]; ret; 
0x00184561: inc ecx; or al, 4; add al, 0xc5; inc ecx; or ebp, dword ptr [esi + 0xa]; ret; 
0x00195fc1: inc ecx; or al, 4; add al, 0xc5; inc ecx; or edx, dword ptr [ebp + 0xa]; ret; 
0x00196cc1: inc ecx; or al, 4; add al, 0xc5; inc ecx; or edx, dword ptr [ecx + 0xa]; ret; 
0x0018832c: inc ecx; or al, 4; add al, 0xc5; inc ecx; or edx, dword ptr [esi + 0xa]; ret; 
0x001984bd: inc ecx; or al, 4; add al, 0xc5; inc edi; or eax, dword ptr [esi + 0xa]; ret; 
0x0018c321: inc ecx; or al, 4; add al, 0xc5; inc edi; or ebx, dword ptr [ebx + 0xa]; ret; 
0x0019a4fd: inc ecx; or al, 4; add al, 0xc5; inc esp; or ebx, dword ptr [eax + 0xa]; ret; 
0x00175831: inc ecx; or al, 4; add al, 0xc5; inc esp; or ebx, dword ptr [edx + 0xa]; ret; 
0x0008ce1b: inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x00093e6c: inc ecx; or byte ptr [eax - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x0008ccbb: inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x00033156: inc ecx; or byte ptr [ecx + 0xc5189c8], cl; add esp, 0x3c; ret 4; 
0x0008ce7b: inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x00093ecc: inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x0008cd1b: inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x00120332: inc ecx; or byte ptr [ecx], bh; ret 0x2275; 
0x00121940: inc ecx; or byte ptr [ecx], bh; ret 0x850f; 
0x0008e24a: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, dword ptr [edx + 0xf]; pop edi; ret; 
0x0008e53b: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, dword ptr [edx + 0xf]; ret; 
0x0008cc2a: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x0008cefb: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x00089bc5: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, dword ptr [edx + 8]; ret; 
0x000857e5: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x00089c25: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; ret; 
0x00085845: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00089be6: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, dword ptr [edx + 9]; ret; 
0x00085806: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x00190aba: inc ecx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0017052b: inc ecx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0018b4e0: inc ecx; or eax, dword ptr [eax]; add byte ptr [eax], ch; add byte ptr [eax], al; add al, ch; ret 1; 
0x0018cb85: inc ecx; or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x0018419a: inc ecx; or eax, dword ptr [ebx]; add al, 0xa; push cs; adc al, 0x41; ret; 
0x0017c2d9: inc ecx; or eax, dword ptr [ebx]; add al, 0xa; push cs; adc al, 0x43; ret; 
0x001700bb: inc ecx; or eax, dword ptr [ebx]; add dword ptr [ecx], 0x41140e0a; ret; 
0x001701ca: inc ecx; or eax, dword ptr [ebx]; add dword ptr [edx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017015a: inc ecx; or eax, dword ptr [ebx]; add eax, 0x140e0a02; inc ecx; ret; 
0x0016ff7b: inc ecx; or eax, dword ptr [ebx]; and dword ptr [ecx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0019a262: inc ecx; or eax, dword ptr [ebx]; and dword ptr [ecx], eax; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00190cf4: inc ecx; or eax, dword ptr [ebx]; cdq; add dword ptr [edx], ecx; ret; 
0x0017e258: inc ecx; or eax, dword ptr [ebx]; cmc; add cl, byte ptr [edx]; ret; 
0x00173b9f: inc ecx; or eax, dword ptr [ebx]; cmp al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00173bb7: inc ecx; or eax, dword ptr [ebx]; cmp byte ptr [edx], dl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018cd89: inc ecx; or eax, dword ptr [ebx]; cmp dword ptr [ecx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001841b2: inc ecx; or eax, dword ptr [ebx]; dec byte ptr [0x41140e0a]; ret; 
0x0017005f: inc ecx; or eax, dword ptr [ebx]; in al, 3; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017012b: inc ecx; or eax, dword ptr [ebx]; inc dword ptr [edx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018406b: inc ecx; or eax, dword ptr [ebx]; lea eax, dword ptr [ebx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00184083: inc ecx; or eax, dword ptr [ebx]; mov cs, word ptr [edi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0016fec3: inc ecx; or eax, dword ptr [ebx]; mov edx, 0x140e0a02; inc ecx; ret; 
0x0019b7e2: inc ecx; or eax, dword ptr [ebx]; mov edx, 0x140e0a03; inc ecx; ret; 
0x00173676: inc ecx; or eax, dword ptr [ebx]; or byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00196ee2: inc ecx; or eax, dword ptr [ebx]; pop ebx; add cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00196522: inc ecx; or eax, dword ptr [ebx]; pop edx; add dword ptr [edx], ecx; ret; 
0x001835d8: inc ecx; or eax, dword ptr [ebx]; push 0x140e0a01; inc ecx; ret; 
0x00186542: inc ecx; or eax, dword ptr [ebx]; push ecx; add dword ptr [edx], ecx; ret; 
0x00173f02: inc ecx; or eax, dword ptr [ebx]; pushfd; add dword ptr [edx], ecx; ret; 
0x001845a4: inc ecx; or eax, dword ptr [ebx]; ret; 
0x001702da: inc ecx; or eax, dword ptr [ebx]; rol byte ptr [ecx], 0xa; push cs; adc al, 0x45; ret; 
0x0016ff93: inc ecx; or eax, dword ptr [ebx]; rol byte ptr [ecx], cl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017242d: inc ecx; or eax, dword ptr [ebx]; rol byte ptr [edx], 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0016fef2: inc ecx; or eax, dword ptr [ebx]; rol dword ptr [ecx], 0xa; push cs; adc al, 0x41; ret; 
0x001842af: inc ecx; or eax, dword ptr [ebx]; sbb dword ptr [ebx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001711cc: inc ecx; or eax, dword ptr [ebx]; stosd dword ptr es:[edi], eax; add al, 0xa; ret; 
0x0017c23a: inc ecx; or eax, dword ptr [ebx]; sub al, 4; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017023b: inc ecx; or eax, dword ptr [ebx]; test dword ptr [edx], 0x41140e0a; ret; 
0x0018c764: inc ecx; or eax, dword ptr [edi + 0xa]; ret; 
0x0016fe27: inc ecx; or eax, dword ptr [edx]; arpl word ptr [edx], cx; push cs; adc al, 0x41; ret; 
0x00172a35: inc ecx; or eax, dword ptr [edx]; arpl word ptr [esi], cx; adc al, 0x41; ret; 
0x00177bdf: inc ecx; or eax, dword ptr [edx]; cmpsb byte ptr [esi], byte ptr es:[edi]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x001960e1: inc ecx; or eax, dword ptr [edx]; cwde; ret; 
0x0016fcaf: inc ecx; or eax, dword ptr [edx]; dec ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017c2f1: inc ecx; or eax, dword ptr [edx]; in al, 0xa; push cs; adc al, 0x43; ret; 
0x001917a0: inc ecx; or eax, dword ptr [edx]; in eax, 0xa; ret; 
0x00183a43: inc ecx; or eax, dword ptr [edx]; inc edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00178b74: inc ecx; or eax, dword ptr [edx]; inc edi; ret; 
0x001764c1: inc ecx; or eax, dword ptr [edx]; inc esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00173ff9: inc ecx; or eax, dword ptr [edx]; inc esp; push cs; adc al, 0x43; ret; 
0x00170172: inc ecx; or eax, dword ptr [edx]; insd dword ptr es:[edi], dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001700d3: inc ecx; or eax, dword ptr [edx]; iretd; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00191c59: inc ecx; or eax, dword ptr [edx]; jnp 0x191c68; push cs; adc al, 0x43; ret; 
0x0018d4d5: inc ecx; or eax, dword ptr [edx]; jp 0x18d4e4; push cs; adc al, 0x41; ret; 
0x00195d23: inc ecx; or eax, dword ptr [edx]; mov cs, word ptr [edx]; push cs; adc al, 0x43; ret; 
0x0016fedb: inc ecx; or eax, dword ptr [edx]; mov esi, 0x41140e0a; ret; 
0x00180367: inc ecx; or eax, dword ptr [edx]; movsd dword ptr es:[edi], dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001701e2: inc ecx; or eax, dword ptr [edx]; pop edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0016fe55: inc ecx; or eax, dword ptr [edx]; popal; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018f0d7: inc ecx; or eax, dword ptr [edx]; popal; push cs; adc al, 0x41; ret; 
0x0016ffab: inc ecx; or eax, dword ptr [edx]; scasb al, byte ptr es:[edi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018d442: inc ecx; or eax, dword ptr [edx]; test dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0016fe3e: inc ecx; or eax, dword ptr [edx]; xchg eax, esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001964d9: inc ecx; or eax, dword ptr [edx]; xchg eax, esp; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x0018ef92: inc ecx; or ebp, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [eax - 0x7bfffe03], bl; sub esi, esi; call dword ptr [ebx]; 
0x00189b15: inc ecx; or ebp, dword ptr [ebp + 0xa]; push cs; adc al, 0x43; ret; 
0x00197685: inc ecx; or ebp, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x0018989e: inc ecx; or ebp, dword ptr [ecx + 0xa]; push cs; adc al, 0x43; ret; 
0x0018b9b4: inc ecx; or ebp, dword ptr [edi + 0xa]; ret; 
0x00184566: inc ecx; or ebp, dword ptr [esi + 0xa]; ret; 
0x0016fdb9: inc ecx; or ebx, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00199759: inc ecx; or ebx, dword ptr [eax + 0xa]; ret; 
0x0019585d: inc ecx; or ebx, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x00171389: inc ecx; or ebx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x0017c17a: inc ecx; or ebx, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0017d1da: inc ecx; or ebx, dword ptr [edi + 0xa]; push cs; adc al, 0x46; ret; 
0x001946d2: inc ecx; or ecx, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00185ff2: inc ecx; or ecx, dword ptr [ebp + 0xa]; ret; 
0x001856b2: inc ecx; or ecx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x0017150a: inc ecx; or ecx, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x00189986: inc ecx; or ecx, dword ptr [edi + 0xa]; push cs; adc al, 0x43; ret; 
0x001789e1: inc ecx; or ecx, dword ptr [edi + 0xa]; ret; 
0x001896d6: inc ecx; or edi, dword ptr [eax + eax]; add byte ptr [eax], al; fsub qword ptr [ecx + eax - 0xb932000]; jmp dword ptr [edi + 2]; 
0x0018a87b: inc ecx; or edi, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0018c100: inc ecx; or edi, dword ptr [esi + 0xa]; ret; 
0x0017099d: inc ecx; or edx, dword ptr [eax + 0xa]; ret; 
0x0018d459: inc ecx; or edx, dword ptr [eax + 0xe]; adc al, 0x43; ret; 
0x0018d17a: inc ecx; or edx, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [eax - 0x73fffe21], al; fdivr st(5), st(0); jmp dword ptr [ecx]; 
0x00190ace: inc ecx; or edx, dword ptr [ebp + 0xa]; push cs; adc al, 0x43; ret; 
0x00195fc6: inc ecx; or edx, dword ptr [ebp + 0xa]; ret; 
0x00196cc6: inc ecx; or edx, dword ptr [ecx + 0xa]; ret; 
0x0016ffc2: inc ecx; or edx, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x0016fdcf: inc ecx; or edx, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x00188331: inc ecx; or edx, dword ptr [esi + 0xa]; ret; 
0x00190da1: inc ecx; or edx, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x0018a5bc: inc ecx; or esi, dword ptr [eax + 0xa]; push cs; adc al, 0x43; ret; 
0x00190c86: inc ecx; or esi, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x001709d5: inc ecx; or esi, dword ptr [esi + 0xa]; ret; 
0x0016fcf4: inc ecx; or esp, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0017c421: inc ecx; or esp, dword ptr [ebp + 0xa]; push cs; add al, 0xc6; ret; 
0x0016fd8b: inc ecx; or esp, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x001845c4: inc ecx; or esp, dword ptr [edi + 0xa]; ret; 
0x00170a36: inc ecx; or esp, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x0019249e: inc ecx; or esp, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x0017b07a: inc ecx; out dx, eax; jmp dword ptr [edx]; 
0x0008e33b: inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, dword ptr [edx + 0xa]; pop edi; ret; 
0x0008e49b: inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, dword ptr [edx + 0xa]; ret; 
0x0008ccfb: inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x0008ce5b: inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0008e3bb: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x0008e51b: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, dword ptr [edx + 0xe]; ret; 
0x0008cd7b: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x0008cedb: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x00089c05: inc ecx; pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, dword ptr [edx + 0xa]; ret; 
0x00085825: inc ecx; pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000876f7: inc ecx; pop es; pop ebx; ret; 
0x00148481: inc ecx; pop es; ret; 
0x001909d8: inc ecx; push cs; adc al, 0x83; add eax, 0x100e7402; ret; 
0x0017bee0: inc ecx; push cs; adc al, 0x83; add eax, 0x100edf02; ret; 
0x0017176c: inc ecx; push cs; adc al, 0x83; add eax, 0x1c00e46; add bh, byte ptr [edx + 0x43140e0a]; ret; 
0x00189a30: inc ecx; push cs; adc al, 0x83; add eax, 0x2400e43; ret 0xe0a; 
0x0018e4ef: inc ecx; push cs; adc byte ptr [ebx + 0xc0e5d04], al; ret; 
0x0018b4a7: inc ecx; push cs; adc byte ptr [ebx + 0xc0e6104], al; ret; 
0x0017cf17: inc ecx; push cs; adc byte ptr [ebx + 0xc0e6704], al; ret; 
0x0016fc8b: inc ecx; push cs; adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x1800e43], 3; ret 0xa03; 
0x001988ab: inc ecx; push cs; adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x1900e4e], 2; ret; 
0x00171767: inc ecx; push cs; adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x1c00e46], 2; mov edx, 0x43140e0a; ret; 
0x001726d5: inc ecx; push cs; add al, 0xc5; inc edx; or ebx, dword ptr [edi + 0xa]; ret; 
0x0018e4ea: inc ecx; push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xc0e5d04], al; ret; 
0x0018b4a2: inc ecx; push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xc0e6104], al; ret; 
0x0017cf12: inc ecx; push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xc0e6704], al; ret; 
0x00171b85: inc ecx; push cs; or byte ptr [ebp + 0x50d4202], al; inc ecx; add dword ptr [ebx], 0x78; ret; 
0x00172e3d: inc ecx; push cs; or byte ptr [ebx + 0x200e4e02], al; imul ecx, dword ptr [esi], 0x40e4108; ret; 
0x00184e4b: inc ecx; push cs; or byte ptr [ebx + 0x40e4502], al; ret; 
0x0017d782: inc ecx; push cs; or byte ptr [ebx + 0x40e4602], al; ret; 
0x0017d712: inc ecx; push cs; or byte ptr [ebx + 0x40e4702], al; ret; 
0x00184d56: inc ecx; push cs; or byte ptr [ebx + 0x40e4802], al; ret; 
0x001806a2: inc ecx; push cs; or byte ptr [ebx + 0x40e4b02], al; ret; 
0x001806bd: inc ecx; push cs; or byte ptr [ebx + 0x40e4e02], al; ret; 
0x001806ea: inc ecx; push cs; or byte ptr [ebx + 0x40e4f02], al; ret; 
0x00180690: inc ecx; push cs; or byte ptr [ebx + 0x40e5002], al; ret; 
0x00180687: inc ecx; push cs; or byte ptr [ebx + 0x40e5102], al; ret; 
0x00180699: inc ecx; push cs; or byte ptr [ebx + 0x40e5202], al; ret; 
0x0017fa11: inc ecx; push cs; or byte ptr [ebx + 0x40e5502], al; ret; 
0x0017eeca: inc ecx; push cs; or byte ptr [ebx + 0x40e5702], al; ret; 
0x0017ee73: inc ecx; push cs; or byte ptr [ebx + 0x40e5902], al; ret; 
0x00189ca1: inc ecx; push cs; or byte ptr [ebx + 0x40e5a02], al; ret; 
0x0017d779: inc ecx; push cs; or byte ptr [ebx + 0x40e5b02], al; ret; 
0x00180758: inc ecx; push cs; or byte ptr [ebx + 0x40e5d02], al; ret; 
0x00180785: inc ecx; push cs; or byte ptr [ebx + 0x40e5f02], al; ret; 
0x0017ebd8: inc ecx; push cs; or byte ptr [ebx + 0x40e6002], al; ret; 
0x0016f455: inc ecx; push cs; or byte ptr [ebx + 0x40e6102], al; ret; 
0x0017ebcf: inc ecx; push cs; or byte ptr [ebx + 0x40e6202], al; ret; 
0x0018078e: inc ecx; push cs; or byte ptr [ebx + 0x40e6302], al; ret; 
0x0017eec1: inc ecx; push cs; or byte ptr [ebx + 0x40e6502], al; ret; 
0x0018031f: inc ecx; push cs; or byte ptr [ebx + 0x40e6602], al; ret; 
0x00180b03: inc ecx; push cs; or byte ptr [ebx + 0x40e6702], al; ret; 
0x00180b66: inc ecx; push cs; or byte ptr [ebx + 0x40e6902], al; ret; 
0x0017ec34: inc ecx; push cs; or byte ptr [ebx + 0x40e6a02], al; ret; 
0x0017ec10: inc ecx; push cs; or byte ptr [ebx + 0x40e6b02], al; ret; 
0x0017eeb8: inc ecx; push cs; or byte ptr [ebx + 0x40e6c02], al; ret; 
0x00180b1e: inc ecx; push cs; or byte ptr [ebx + 0x40e6d02], al; ret; 
0x0017f11b: inc ecx; push cs; or byte ptr [ebx + 0x40e6e02], al; ret; 
0x00180797: inc ecx; push cs; or byte ptr [ebx + 0x40e6f02], al; ret; 
0x0017ebfe: inc ecx; push cs; or byte ptr [ebx + 0x40e7002], al; ret; 
0x0017fce3: inc ecx; push cs; or byte ptr [ebx + 0x40e7102], al; ret; 
0x0017d099: inc ecx; push cs; or byte ptr [ebx + 0x40e7202], al; ret; 
0x0017eee5: inc ecx; push cs; or byte ptr [ebx + 0x40e7302], al; ret; 
0x0017eedc: inc ecx; push cs; or byte ptr [ebx + 0x40e7502], al; ret; 
0x0017f163: inc ecx; push cs; or byte ptr [ebx + 0x40e7602], al; ret; 
0x0017d709: inc ecx; push cs; or byte ptr [ebx + 0x40e7802], al; ret; 
0x0017ee6a: inc ecx; push cs; or byte ptr [ebx + 0x40e7902], al; ret; 
0x0017ed14: inc ecx; push cs; or byte ptr [ebx + 0x40e7a02], al; ret; 
0x0017ec58: inc ecx; push cs; or byte ptr [ebx + 0x40e7b02], al; ret; 
0x0017eed3: inc ecx; push cs; or byte ptr [ebx + 0x40e7e02], al; ret; 
0x0017c921: inc ecx; push cs; or byte ptr [ebx + 0x40e7f02], al; ret; 
0x0018b2d1: inc ecx; push cs; or byte ptr [ebx + 0x600e4302], al; push cs; or byte ptr [esi + ecx + 4], al; ret; 
0x001820ce: inc ecx; push cs; or byte ptr [ebx - 0x78f3f1fe], al; add ebx, dword ptr [esi + ecx + 8]; ret; 
0x00182068: inc ecx; push cs; or byte ptr [ebx - 0x78f3f1fe], al; add edx, dword ptr [esi + ecx + 8]; ret; 
0x001823ef: inc ecx; push cs; or byte ptr [ebx - 0x79f3f1fe], al; add ebp, dword ptr [esi + ecx + 8]; ret; 
0x0018229b: inc ecx; push cs; or byte ptr [ebx - 0x79f3f1fe], al; add ebx, dword ptr [esi + ecx + 8]; ret; 
0x00182257: inc ecx; push cs; or byte ptr [ebx - 0x79f3f1fe], al; add edx, dword ptr [esi + ecx + 8]; ret; 
0x001822bd: inc ecx; push cs; or byte ptr [ebx - 0x79f3f1fe], al; add esp, dword ptr [esi + ecx + 8]; ret; 
0x0018291d: inc ecx; push cs; or byte ptr [edi - 0x7cf3f1fe], al; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x001828fb: inc ecx; push cs; or byte ptr [edi - 0x7cf3f1fe], al; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7204], al; ret; 
0x001484d1: inc ecx; push cs; ret; 
0x0018e713: inc ecx; push cs; sbb byte ptr [ebx + 0x140e6506], al; ret; 
0x0008e39b: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; lea eax, dword ptr [edx + 0xd]; pop edi; ret; 
0x0008e4fb: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; lea eax, dword ptr [edx + 0xd]; ret; 
0x0008cd5b: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x0008cebb: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000876e7: inc ecx; push es; pop ebx; ret; 
0x00148471: inc ecx; push es; ret; 
0x0016faef: inc ecx; ret; 
0x0005ec51: inc ecx; sar bh, 1; inc dword ptr [ebx - 0xbf43]; call dword ptr [eax]; 
0x000d78d6: inc ecx; sbb al, 0x89; ret 0xeac1; 
0x000f12b5: inc ecx; sbb eax, 0x5c89000b; and al, 0xc; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00177785: inc ecx; shr dh, cl; jmp dword ptr [edx]; 
0x001675f1: inc ecx; std; jmp eax; 
0x00073128: inc ecx; xor byte ptr [ebp - 0x7ce98b40], al; sal dword ptr [eax], 0x39; ret 0x775; 
0x0001cbc3: inc ecx; xor byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x00075186: inc ecx; xor byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x00169da0: inc ecx; xor cl, dh; jmp esp; 
0x0008f1af: inc edi; adc al, 0x5f; pop esi; pop ebx; ret; 
0x0004838f: inc edi; adc al, 0x83; ret 0x8301; 
0x00056a6b: inc edi; adc al, 0xc1; clc; add bh, byte ptr [ecx]; ret 0x1974; 
0x0008f171: inc edi; adc bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0011263d: inc edi; adc byte ptr [ecx + 0x44892434], cl; and al, 4; call dword ptr [edi + 0x14]; 
0x0008f139: inc edi; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008f14f: inc edi; adc dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x0008f18f: inc edi; adc ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x00076f55: inc edi; add al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [eax]; 
0x00076ecb: inc edi; add al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [ebp]; 
0x00074d09: inc edi; add al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [edx]; 
0x0005366c: inc edi; add al, 0x24; add byte ptr cs:[eax], al; add byte ptr [ecx - 0x17fbdbbc], cl; ret; 
0x000752f3: inc edi; add al, 0x24; ret 0x10; 
0x0008efd5: inc edi; add al, 0x5f; pop esi; pop ebx; ret; 
0x00147441: inc edi; add al, 0x5f; ret; 
0x000bbf49: inc edi; add al, 0x83; ret 0x3904; 
0x0011211a: inc edi; add al, 0x89; cmp al, 0x24; call dword ptr [eax + 0x10]; 
0x001185c1: inc edi; add al, 0x89; insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x0008efa7: inc edi; add bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x00106abf: inc edi; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x00173e01: inc edi; add byte ptr [eax], al; leave; mov cl, 0xec; call dword ptr [eax]; 
0x0018397d: inc edi; add dword ptr [eax], eax; push eax; dec esp; int1; jmp dword ptr [edx + 1]; 
0x0018b9ab: inc edi; add dword ptr [ebx], 0x7f; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0008ef95: inc edi; add dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x001342db: inc edi; add eax, dword ptr es:[eax]; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0008efbd: inc edi; add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000d6469: inc edi; and byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x0008f343: inc edi; and byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0016c0c9: inc edi; clc; jmp dword ptr [eax]; 
0x00147883: inc edi; clc; pop edi; ret; 
0x001478ac: inc edi; cld; pop edi; ret; 
0x00147921: inc edi; cli; pop edi; ret; 
0x001478e1: inc edi; cmc; pop edi; ret; 
0x00147859: inc edi; hlt; pop edi; ret; 
0x0008f592: inc edi; inc eax; pop edi; pop esi; pop ebx; ret; 
0x00083990: inc edi; inc esp; and al, 8; add eax, 0x89000000; ret 0x838d; 
0x001478b1: inc edi; int1; pop edi; ret; 
0x0013a45b: inc edi; into; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bf695: inc edi; jnp 0xbf697; inc dword ptr [ebp - 0x147bf040]; add al, byte ptr [eax]; add byte ptr [ebx - 0x13f73], cl; jmp dword ptr [ebp - 0x7d]; 
0x0008dcf3: inc edi; lcall ptr [edi + 0x5e]; pop ebx; ret; 
0x00095a62: inc edi; lcall ptr [esi + 0x5f]; pop ebp; ret; 
0x0008f123: inc edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x000f0de7: inc edi; mov al, 0xb; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000b7e28: inc edi; mov eax, ebp; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000f0b7b: inc edi; mov eax, ebp; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x000c599b: inc edi; mov eax, ebp; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000c5a7b: inc edi; mov eax, ebp; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000def08: inc edi; mov edx, esi; xchg edi, ebx; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x000de8a2: inc edi; or al, 0; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0008f0bf: inc edi; or al, 0x5f; pop esi; pop ebx; ret; 
0x001474b1: inc edi; or al, 0x5f; ret; 
0x0001e1fd: inc edi; or al, 0x89; add al, 0x24; call dword ptr [edi + 4]; 
0x0011dc81: inc edi; or al, 0x89; sub al, 0x24; call dword ptr [eax + 0x10]; 
0x0008f081: inc edi; or bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x000cab71: inc edi; or byte ptr [ecx - 0x2a17dbfc], cl; ret; 
0x000d6963: inc edi; or byte ptr [ecx], bh; ret 0xd772; 
0x0008f049: inc edi; or byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000fc77c: inc edi; or byte ptr [edi + 2], bh; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00170818: inc edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017a4d3: inc edi; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0008f05f: inc edi; or dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x00195e26: inc edi; or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; jno 0x195e3d; ret; 
0x001986b4: inc edi; or eax, dword ptr [eax]; add byte ptr [eax + eax], dl; add byte ptr [esp + edx*4 + 0x15700002], bh; clc; call dword ptr [esi]; 
0x0018335d: inc edi; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x00191a0e: inc edi; or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x001971c1: inc edi; or eax, dword ptr [ebx + 0xe]; adc al, 0x46; ret; 
0x00179c0b: inc edi; or eax, dword ptr [ebx]; add byte ptr [edx], al; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0017bfba: inc edi; or eax, dword ptr [ebx]; cmp eax, 0x140e0a01; inc ebx; ret; 
0x0018b6aa: inc edi; or eax, dword ptr [ebx]; mov cl, 1; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0019ba9b: inc edi; or eax, dword ptr [ebx]; xor al, 1; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00178f7b: inc edi; or eax, dword ptr [edx]; insd dword ptr es:[edi], dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017dc62: inc edi; or eax, dword ptr [edx]; jo 0x17dc71; push cs; adc al, 0x43; ret; 
0x00197d47: inc edi; or eax, dword ptr [edx]; lodsd eax, dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00170615: inc edi; or eax, dword ptr [edx]; mov dword ptr [0x41140e0a], eax; ret; 
0x00178f92: inc edi; or eax, dword ptr [edx]; mov word ptr [edx], cs; push cs; adc al, 0x41; ret; 
0x0019220d: inc edi; or eax, dword ptr [edx]; popal; push cs; adc al, 0x43; ret; 
0x00189634: inc edi; or eax, dword ptr [edx]; push ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0019a38b: inc edi; or eax, dword ptr [edx]; ror dword ptr [edx], cl; push cs; adc al, 0x43; ret; 
0x00195b8a: inc edi; or eax, dword ptr [edx]; xchg eax, edx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x001744d3: inc edi; or eax, dword ptr [esi + 0xa]; push cs; adc al, 0x46; ret; 
0x001879e2: inc edi; or eax, dword ptr [esi + 0xa]; ret; 
0x00184469: inc edi; or eax, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x001729ce: inc edi; or ebp, dword ptr [eax + 0xa]; ret; 
0x0017062c: inc edi; or ebp, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x00172c91: inc edi; or ebp, dword ptr [eax + 0xe]; adc al, 0x46; ret; 
0x00190f64: inc edi; or ebp, dword ptr [ebx + 0xa]; ret; 
0x0017d4ad: inc edi; or ebp, dword ptr [esi + ecx + 8]; inc ecx; ret; 
0x00191941: inc edi; or ebx, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0018c326: inc edi; or ebx, dword ptr [ebx + 0xa]; ret; 
0x0018be9a: inc edi; or ebx, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x0008f09f: inc edi; or ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x00189a8e: inc edi; or ecx, dword ptr [edx + ecx + 0xe]; adc al, 0x43; ret; 
0x0018d42c: inc edi; or edx, dword ptr [eax + 0xa]; push cs; adc al, 0x43; ret; 
0x0018be38: inc edi; or edx, dword ptr [eax + 0xa]; ret; 
0x00190aa1: inc edi; or esi, dword ptr [eax + 0xa]; push cs; adc al, 0x43; ret; 
0x0017c5c9: inc edi; or esp, dword ptr [edx + ecx + 0xe]; add al, 0xc6; ret; 
0x001765d9: inc edi; or esp, dword ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x0008f323: inc edi; pop ds; pop edi; pop esi; pop ebx; ret; 
0x001496e8: inc edi; pop edi; pop esi; pop ebx; ret; 
0x001478c1: inc edi; pop edi; ret; 
0x0008f02b: inc edi; pop es; pop edi; pop esi; pop ebx; ret; 
0x0014726e: inc edi; pop es; pop edi; ret; 
0x0008f213: inc edi; pop ss; pop edi; pop esi; pop ebx; ret; 
0x00182e78: inc edi; push cs; or byte ptr [ebx + 0x40e5902], al; ret; 
0x00199c6a: inc edi; push cs; or byte ptr [esi + ecx + 4], al; ret; 
0x0008f103: inc edi; push cs; pop edi; pop esi; pop ebx; ret; 
0x001474d1: inc edi; push cs; pop edi; ret; 
0x0008f303: inc edi; push ds; pop edi; pop esi; pop ebx; ret; 
0x0019dcb4: inc edi; push es; add byte ptr [eax], al; ret; 
0x0008dd67: inc edi; push es; pop edi; pop esi; pop ebx; ret; 
0x00147461: inc edi; push es; pop edi; ret; 
0x0008f1f3: inc edi; push ss; pop edi; pop esi; pop ebx; ret; 
0x00096bc0: inc edi; ret 0x4401; 
0x0007ce52: inc edi; ret 0x4489; 
0x000ad8d3: inc edi; ret 0x548b; 
0x000e0df7: inc edi; ret 0xc483; 
0x00178b77: inc edi; ret; 
0x0008f2c9: inc edi; sbb al, 0x5f; pop esi; pop ebx; ret; 
0x0008f27b: inc edi; sbb bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0008f233: inc edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008f259: inc edi; sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x0008f2a9: inc edi; sbb ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x0016cc61: inc edi; stc; call eax; 
0x0016cc59: inc edi; stc; ljmp ptr [edx + ebx*4 + 0x47940002]; stc; call eax; 
0x00147911: inc edi; stc; pop edi; ret; 
0x0016761d: inc edi; std; call dword ptr [esi]; 
0x00147941: inc edi; std; pop edi; ret; 
0x00095a76: inc edi; std; pop esi; pop edi; pop ebp; ret; 
0x00147931: inc edi; sti; pop edi; ret; 
0x00059bea: inc edi; test dword ptr [edi + ebp*8 - 1], ebx; call dword ptr [eax]; 
0x0005afbc: inc edi; test dword ptr [edi + ebp*8 - 1], esp; call dword ptr [eax]; 
0x00146883: inc edi; test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0004d38c: inc edi; test dword ptr [esi + edi*8 - 1], ebx; call dword ptr [eax]; 
0x0019a76d: inc edi; xchg byte ptr [edi + eax*4], al; add ecx, dword ptr [ebp - 0x7d]; add eax, 0xa017803; ret; 
0x0019025d: inc edi; xchg ch, dh; jmp dword ptr [edx]; 
0x001662b7: inc edx; aad 0xfc; jmp edx; 
0x0008b81e: inc edx; adc byte ptr [edi + 0x5b], bl; ret; 
0x00182ebb: inc edx; adc eax, dword ptr [ecx]; ret; 
0x0010fb08: inc edx; add al, 0x29; add byte ptr [eax], al; add byte ptr [ecx + 0x1089084a], cl; xor eax, eax; ret; 
0x0007adcd: inc edx; add al, 0x5b; ret; 
0x0008b772: inc edx; add al, 0x5f; pop ebx; ret; 
0x00089a4b: inc edx; add al, 0x5f; ret; 
0x0008e478: inc edx; add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, dword ptr [edx + 9]; ret; 
0x0008ce38: inc edx; add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000c0464: inc edx; add al, 0x83; ret 0xeb04; 
0x00093dfb: inc edx; add al, 0x89; clc; pop ebx; pop edi; ret; 
0x00085678: inc edx; add al, 0x89; clc; pop edi; ret; 
0x0008ce18: inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x0008ccb8: inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x0008ce78: inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x0008cd18: inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x00113292: inc edx; add al, 0x8b; sbb al, 0x24; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x00089a48: inc edx; add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x0008e1f9: inc edx; add al, 0x8d; inc edx; pop es; pop edi; ret; 
0x0008e448: inc edx; add al, 0x8d; inc edx; pop es; ret; 
0x000555db: inc edx; add al, 1; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000648de: inc edx; add al, 1; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x30]; 
0x0003222d: inc edx; add bl, byte ptr [esi + 0x5f]; pop ebp; ret; 
0x001734a9: inc edx; add byte ptr [eax], al; aam 7; in al, dx; call dword ptr [edi]; 
0x00173415: inc edx; add byte ptr [eax], al; fadd dword ptr [esi]; in al, dx; jmp dword ptr [edi]; 
0x0013c570: inc edx; add cl, byte ptr [edi]; mov bh, 8; mov word ptr [edx], cx; pop ebx; ret; 
0x00187f3c: inc edx; add dword ptr [0x5d030486], 6; ret; 
0x00097282: inc edx; add dword ptr [eax], eax; add byte ptr [ebx - 0x8f75], cl; dec dword ptr [ebx - 0x12f6d]; jmp dword ptr [ebp - 0x75]; 
0x0004dccd: inc edx; add dword ptr [eax], eax; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x00169ec5: inc edx; add dword ptr [eax], eax; dec ecx; xor dh, cl; call esp; 
0x0018343d: inc edx; add dword ptr [eax], eax; push eax; cmp esi, ecx; jmp edx; 
0x00030649: inc edx; add dword ptr [ecx], edi; ret 0x189; 
0x00038a61: inc edx; add dword ptr [ecx], edi; ret 0x689; 
0x0013c4f0: inc edx; add dword ptr [edi], ecx; mov dh, 8; mov byte ptr [edx], cl; pop ebx; ret; 
0x0008e380: inc edx; add eax, 0x5f0c428d; ret; 
0x00093ef3: inc edx; add eax, 0x5f5bf889; ret; 
0x000a74be: inc edx; add eax, dword ptr [ebp + 0x5ed475f6]; ret; 
0x000320c1: inc edx; add ecx, dword ptr [edi]; dec ecx; ret 0xf8c1; 
0x00095d34: inc edx; add esi, dword ptr [eax + edx - 0x7d]; ret 0x3904; 
0x0011036a: inc edx; add esi, dword ptr [ecx]; rol byte ptr [ebx + 0x5f5e40c4], 0x5d; ret; 
0x000c3f99: inc edx; and byte ptr [ebx + 0x5f5e24c4], al; pop ebp; ret; 
0x0013c052: inc edx; call 0x4091d04b; clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00132fb1: inc edx; call 0x42e93f1d; clc; pop ebx; ret; 
0x001335f1: inc edx; call 0x42e9455d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00133b81: inc edx; call 0x42e94aed; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001340c1: inc edx; call 0x42e9502d; clc; pop ebx; ret; 
0x001331a0: inc edx; clc; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132b90: inc edx; clc; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x001335f6: inc edx; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00136310: inc edx; clc; mov eax, edx; pop ebx; ret; 
0x00132fb6: inc edx; clc; pop ebx; ret; 
0x001331a3: inc edx; cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013632a: inc edx; cld; mov eax, edx; pop ebx; ret; 
0x00132b93: inc edx; cld; pop ebx; ret; 
0x001331e3: inc edx; cli; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132bd3: inc edx; cli; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00133046: inc edx; cmc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0015878e: inc edx; cmp al, 0xe; push esp; jmp dword ptr [ebx - 0x40]; 
0x00167323: inc edx; cmp bh, ch; call dword ptr [edx]; 
0x00167323: inc edx; cmp bh, ch; call dword ptr [edx]; cmp edi, ebp; jmp dword ptr [edx + 0x3b]; 
0x001331e7: inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x001331c6: inc edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x0007ddee: inc edx; dec dword ptr [edi]; test dword ptr [ebp + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x0007def9: inc edx; dec dword ptr [edi]; test dword ptr [edx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x0016746f: inc edx; dec ecx; std; call dword ptr [eax]; 
0x00178331: inc edx; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x001890f9: inc edx; hlt; call edi; 
0x001336e6: inc edx; hlt; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00133086: inc edx; hlt; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00132b8d: inc edx; hlt; mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0013be20: inc edx; hlt; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x00195518: inc edx; idiv bh; sbb al, 0xd; or dword ptr [edx - 0xa], eax; jmp dword ptr [edx]; 
0x00195300: inc edx; idiv bh; sbb al, 0xd; ret; 
0x00195448: inc edx; idiv bh; sbb al, 0xd; xor byte ptr [ecx - 0xa], al; jmp dword ptr [edx]; 
0x00073431: inc edx; imul ecx, dword ptr [ebx], 0xbfc18100; sti; adc al, byte ptr [eax]; mov eax, dword ptr [ecx + 0x96c]; ret; 
0x00133521: inc edx; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132ef1: inc edx; in al, dx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0013c302: inc edx; in al, dx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x00132ec1: inc edx; in eax, dx; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001356ea: inc edx; int 0xfc; jmp dword ptr [esi - 0x70]; 
0x0015912f: inc edx; jmp dword ptr [edx - 0x71]; 
0x00132d32: inc edx; jo 0x132cb6; ret 0x80; 
0x00132d99: inc edx; jo 0x132d1d; ret 0x80; 
0x00132deb: inc edx; jo 0x132d6f; ret 0x80; 
0x00133362: inc edx; jo 0x1332e6; ret 0x80; 
0x001333c9: inc edx; jo 0x13334d; ret 0x80; 
0x0013341b: inc edx; jo 0x13339f; ret 0x80; 
0x00149bdd: inc edx; lea eax, dword ptr [edi - 0x10]; pop edi; ret; 
0x00133581: inc edx; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00132bcd: inc edx; mov dword ptr [edx - 0xa], eax; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00133726: inc edx; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001330b6: inc edx; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00133766: inc edx; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001330e6: inc edx; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00132bad: inc edx; mov dword ptr [edx - 9], eax; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00134e76: inc edx; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00136306: inc edx; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0013be56: inc edx; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00133666: inc edx; mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0008b7df: inc edx; or al, 0x5f; pop ebx; ret; 
0x00089af3: inc edx; or al, 0x5f; ret; 
0x00110a99: inc edx; or al, 0x83; ret 0x8510; 
0x00166cab: inc edx; or al, 0xfd; push dword ptr [edx + 0xfffd0a]; or edi, ebp; jmp edx; 
0x0013c466: inc edx; or bl, dh; movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; pop ebx; ret; 
0x0008b7dc: inc edx; or byte ptr [ebp + 0x5b5f0c42], cl; ret; 
0x00113238: inc edx; or byte ptr [ebx + 0x748b241c], cl; and al, 4; add esp, 8; ret; 
0x0008b7a4: inc edx; or byte ptr [edi + 0x5b], bl; ret; 
0x00170997: inc edx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00187f36: inc edx; or eax, 0x3874305; inc edx; add dword ptr [0x5d030486], 6; ret; 
0x00187d7e: inc edx; or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; add al, 0xa; ret; 
0x00184736: inc edx; or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; imul eax, dword ptr [ecx], 0xa; ret; 
0x00187c32: inc edx; or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; xchg byte ptr [edx + ecx], al; ret; 
0x00195df6: inc edx; or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; arpl word ptr [edx], cx; ret; 
0x00197006: inc edx; or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; dec byte ptr [edx]; ret; 
0x00187a82: inc edx; or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; fisttp qword ptr [edx]; ret; 
0x0019364a: inc edx; or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; loope 0x193661; ret; 
0x0018c73e: inc edx; or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; mov cs, word ptr [edx]; ret; 
0x0019178a: inc edx; or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add edi, dword ptr [eax + 0xa]; ret; 
0x0018c3e6: inc edx; or eax, 0x5834605; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; fmul qword ptr [edx]; ret; 
0x00190f86: inc edx; or eax, 0x5834905; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; fld dword ptr [edx + ecx]; ret; 
0x0018cb2e: inc edx; or eax, 0x5834905; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; rol byte ptr [edx], 0xa; ret; 
0x001759b6: inc edx; or eax, 0x5834905; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; mov cs, word ptr [edx]; ret; 
0x0017e242: inc edx; or eax, 0x5834905; xchg byte ptr [edi + eax*4], al; add edi, dword ptr [ebx + 0xa]; ret; 
0x0018458e: inc edx; or eax, 0x5834905; xchg byte ptr [edi + eax*4], al; add edi, dword ptr [ecx + 0xa]; ret; 
0x001711b6: inc edx; or eax, 0x5834905; xchg byte ptr [edi + eax*4], al; add esi, dword ptr [edi + 0xa]; ret; 
0x0017e1da: inc edx; or eax, 0x5834c05; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; add al, 0xa; ret; 
0x00173eea: inc edx; or eax, 0x5834c05; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; lar ecx, word ptr [edx]; ret; 
0x0018d5fe: inc edx; or eax, 0x5834c05; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; xchg byte ptr [edx], cl; ret; 
0x00190cde: inc edx; or eax, 0x5834c05; xchg byte ptr [edi + eax*4], al; add edx, dword ptr [esi + 0xa]; ret; 
0x0018b5d8: inc edx; or eax, dword ptr [eax]; add byte ptr [eax], dl; add byte ptr [eax], al; add al, ah; ret; 
0x000eeda2: inc edx; or eax, dword ptr [eax]; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0xe1; call dword ptr gs:[0x10]; 
0x00187b65: inc edx; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x0018f281: inc edx; or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x0019a20a: inc edx; or eax, dword ptr [ebx]; or eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0019590e: inc edx; or eax, dword ptr [edx]; arpl word ptr [edx], cx; push cs; adc al, 0x46; ret; 
0x0017ace3: inc edx; or eax, dword ptr [edx]; mov byte ptr [edx], cl; push cs; adc al, 0x46; ret; 
0x00197cfc: inc edx; or eax, dword ptr [edx]; mov dh, 0xa; ret; 
0x00187ead: inc edx; or eax, dword ptr [edx]; push edi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0018bbfb: inc edx; or eax, dword ptr [edx]; wait; ret; 
0x0019805e: inc edx; or eax, dword ptr [edx]; xchg eax, edi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x001879cd: inc edx; or eax, dword ptr [esi + 0xa]; ret; 
0x0018a2e0: inc edx; or ebp, dword ptr [ecx + 0xe]; or al, 0x43; ret; 
0x001726d9: inc edx; or ebx, dword ptr [edi + 0xa]; ret; 
0x001928f0: inc edx; or ecx, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x0018cc30: inc edx; or ecx, dword ptr [esi + 0xa]; push cs; add al, 0xc7; ret; 
0x00189fb0: inc edx; or edi, dword ptr [ecx + 0xa]; ret; 
0x0018c0f8: inc edx; or edx, dword ptr [edi + 0xa]; ret; 
0x0017422c: inc edx; or esi, dword ptr [ebx + 0xa]; ret; 
0x00178caf: inc edx; or esi, dword ptr [ecx + 0xa]; ret; 
0x00190ed8: inc edx; or esi, dword ptr [edx + 0xa]; ret; 
0x0017467a: inc edx; or esp, dword ptr [eax + 0xa]; push cs; adc al, 0x43; ret; 
0x0018aa6f: inc edx; or esp, dword ptr [eax + 0xa]; ret; 
0x001334c1: inc edx; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132e91: inc edx; out dx, al; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0013c1e2: inc edx; out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x00133491: inc edx; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132e61: inc edx; out dx, eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0013c132: inc edx; out dx, eax; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x00019631: inc edx; pop es; adc dword ptr [eax], eax; add ecx, 0x1899bf; lea eax, dword ptr [ecx - 0x46116]; ret; 
0x0008c8be: inc edx; pop es; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00089acc: inc edx; pop es; lea eax, dword ptr [edx + 0xa]; pop edi; ret; 
0x00089c0c: inc edx; pop es; lea eax, dword ptr [edx + 0xa]; ret; 
0x0008e3c0: inc edx; pop es; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x0008e520: inc edx; pop es; lea eax, dword ptr [edx + 0xe]; ret; 
0x00093eaf: inc edx; pop es; mov eax, edi; pop ebx; pop edi; ret; 
0x000856ec: inc edx; pop es; mov eax, edi; pop edi; ret; 
0x0008582c: inc edx; pop es; mov eax, edx; ret; 
0x00089979: inc edx; pop es; pop edi; ret; 
0x00089bb9: inc edx; pop es; ret; 
0x001403b3: inc edx; pop es; sub eax, ecx; pop ebp; ret; 
0x0013ec06: inc edx; pop es; sub eax, ecx; ret; 
0x00167763: inc edx; pop esp; std; call dword ptr [edx]; 
0x0017aaf3: inc edx; push cs; add al, 0xc6; ret; 
0x0008c7e6: inc edx; push cs; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x001826b0: inc edx; push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x001826c1: inc edx; push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4f04], al; ret; 
0x00089b33: inc edx; push cs; pop edi; ret; 
0x00089c93: inc edx; push cs; ret; 
0x0008e3a0: inc edx; push es; lea eax, dword ptr [edx + 0xd]; pop edi; ret; 
0x0008e500: inc edx; push es; lea eax, dword ptr [edx + 0xd]; ret; 
0x00093f13: inc edx; push es; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd60: inc edx; push es; mov eax, edi; pop edi; ret; 
0x0008cec0: inc edx; push es; mov eax, edx; ret; 
0x00089a7b: inc edx; push es; pop edi; ret; 
0x00089bab: inc edx; push es; ret; 
0x0014048f: inc edx; push es; sub eax, ecx; pop ebp; ret; 
0x0013ec76: inc edx; push es; sub eax, ecx; ret; 
0x0003edf7: inc edx; push ss; add byte ptr [ebx - 0x780d76d0], cl; sar dword ptr [eax + 0x25], cl; call dword ptr gs:[0x10]; 
0x000e1a1a: inc edx; ret 0x4401; 
0x00064130: inc edx; ret 0x4589; 
0x00073933: inc edx; ret 0x9beb; 
0x000f0d19: inc edx; ret 0xc35e; 
0x0002aca7: inc edx; ret 0xc801; 
0x001330d7: inc edx; ret 0xf66; 
0x000ddb31: inc edx; ret 4; 
0x001330a7: inc edx; ret; 
0x000d9a0a: inc edx; sal ah, cl; jmp dword ptr [esi - 0x70]; 
0x00166037: inc edx; sar esp, 1; jmp edx; 
0x00177665: inc edx; shr dh, cl; jmp dword ptr [edx]; 
0x00132bf3: inc edx; stc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00133207: inc edx; std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132bf7: inc edx; std; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001331c3: inc edx; sti; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132bb3: inc edx; sti; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x000a7b22: inc edx; str word ptr [ebx - 0x76dfdba4]; ret 0x7c8b; 
0x00167167: inc edx; sub al, 0xfd; call dword ptr [edx]; 
0x000cb7aa: inc edx; sub byte ptr [ecx - 0x17b3dba4], cl; mov esi, 0x810005e5; ret; 
0x000ce2ce: inc edx; sub byte ptr [ecx], dh; rol byte ptr [ebx + 0x5f5e20c4], 0x5d; ret; 
0x001670ec: inc edx; sub eax, 0x2c3cfffd; std; call dword ptr [eax + 0x2c]; 
0x0016725f: inc edx; sub eax, 0x2e12fffd; std; push dword ptr [edx + 0x2e]; std; call edx; 
0x001331e0: inc edx; test byte ptr [ecx - 0x769905be], 0x42; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00134f30: inc edx; test dword ptr [edi], 0x88ff48b6; dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x000e4d7a: inc edx; xor eax, eax; ret; 
0x000e3c00: inc esi; adc al, 0x31; ror byte ptr [ebx - 0x74ebdba4], 0x74; and al, 0x18; add esp, 0x1c; ret; 
0x0004a690: inc esi; adc al, 0x83; ret 0x8301; 
0x000b3424: inc esi; adc al, 0x8b; dec edi; sbb byte ptr [ecx], bh; ret 0x4e89; 
0x00073ba7: inc esi; adc al, 0xe9; sar esi, -1; jmp dword ptr [esi - 0x70]; 
0x0012bc23: inc esi; adc al, 0xf6; ret 0x7502; 
0x00071360: inc esi; adc al, 0xf6; ret 0xf02; 
0x0011451e: inc esi; adc byte ptr [eax + 1], bh; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x0011186a: inc esi; adc byte ptr [ebp + 0x842494], cl; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 4]; 
0x001118c1: inc esi; adc byte ptr [ebp - 0x76dbdb94], cl; cmp al, 0x24; call dword ptr [eax + 0x10]; 
0x000f688e: inc esi; adc byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x00112fc9: inc esi; adc byte ptr [ecx + 0x4489243c], cl; and al, 4; call dword ptr [esi + 0x14]; 
0x0011184d: inc esi; adc byte ptr [ecx + 0x5489243c], cl; and al, 8; mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x0006a088: inc esi; adc byte ptr [ecx + 0x748b1446], cl; and al, 0x18; add esp, 0x1c; ret; 
0x0012b75b: inc esi; adc byte ptr [ecx - 0x76f7dbac], cl; inc esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [ecx + 0x38]; 
0x0012bafe: inc esi; adc byte ptr [ecx], bh; ret 0x2477; 
0x00070208: inc esi; adc byte ptr [ecx], bh; ret 0x3776; 
0x00071f0f: inc esi; adc byte ptr [ecx], dh; ror byte ptr [ecx + 0x18c48316], 0x5e; ret; 
0x0012b74a: inc esi; add al, 0x29; ret 0x4689; 
0x00073d81: inc esi; add al, 0x2b; inc esi; or al, 0x89; ret 0xfac1; 
0x00112694: inc esi; add al, 0x66; mov ebp, 0x54890001; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x00066a84: inc esi; add al, 0x89; ret 0xfac1; 
0x00112630: inc esi; add al, 0x89; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x000bd176: inc esi; add al, 0x8b; add al, 0x38; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x000716c2: inc esi; add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x000cf5cb: inc esi; add al, 0xe8; mov eax, dword ptr [0x810005a7]; ret; 
0x00173d41: inc esi; add byte ptr [eax], al; dec ecx; mov dl, 0xec; call dword ptr [eax]; 
0x000424ec: inc esi; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x0004c5b2: inc esi; add byte ptr [ecx - 0x1cf73], cl; dec dword ptr [ebx - 0x1577d]; jmp dword ptr [ebp - 0x75]; 
0x00017f1d: inc esi; add dh, byte ptr [ecx]; rol byte ptr [eax - 0x6bf0a2c8], cl; ret 0x348d; 
0x0018c3e9: inc esi; add dword ptr [0x3870486], 2; fmul qword ptr [edx]; ret; 
0x00172529: inc esi; add dword ptr [0x3870486], 3; pop edi; add dword ptr [edx], ecx; ret; 
0x00183839: inc esi; add dword ptr [eax], eax; add al, 0x49; int1; call dword ptr [edx]; 
0x0007f50f: inc esi; add dword ptr [eax], eax; add byte ptr [ecx], ch; ret 0xea01; 
0x001838a1: inc esi; add dword ptr [eax], eax; lodsb al, byte ptr [esi]; dec ecx; int1; call dword ptr [ebx + 1]; 
0x0007d3b4: inc esi; add ebx, dword ptr [esi + 0x5f]; ret; 
0x000c44d4: inc esi; and al, 0x39; ret 0x840f; 
0x0007c19c: inc esi; and al, 0x89; add al, 0x24; call dword ptr [esi + 0x1c]; 
0x0007c2b2: inc esi; and al, 0x89; add al, 0x24; call dword ptr [esi + 0x20]; 
0x000f6747: inc esi; and byte ptr [ebx - 0xf76eb3c], al; pop ebx; pop esi; ret; 
0x0006ceb4: inc esi; and byte ptr [ecx - 0x76fbdb94], cl; xor al, 0x24; sub eax, ebp; mov dword ptr [esp + 8], eax; call dword ptr [edx + 0x38]; 
0x0016704b: inc esi; and ch, bh; call eax; 
0x0016704b: inc esi; and ch, bh; call eax; pop ds; std; jmp dword ptr [eax]; 
0x000e6033: inc esi; and ecx, dword ptr [eax - 0x78d0dbbc]; fistp qword ptr [eax + 0x36]; call dword ptr gs:[0x10]; 
0x000725f2: inc esi; call 0x129d73; add ebx, 0x1309fc; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x30]; 
0x0003325a: inc esi; cld; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0018b00d: inc esi; cmc; jmp dword ptr [ebx]; 
0x0011a74e: inc esi; cmp al, 0x89; push esp; and al, 4; mov dword ptr [esp], ecx; call dword ptr [eax + 4]; 
0x0011aeb8: inc esi; cmp al, 0x89; sub al, 0x24; call dword ptr [eax + 0x10]; 
0x00167340: inc esi; cmp bh, ch; push dword ptr [esi + 0x6fffd3a]; cmp edi, ebp; call dword ptr [esi + 0x3b]; 
0x001186b0: inc esi; cmp byte ptr [ebx - 0x2f76cb3c], al; pop esi; pop edi; ret; 
0x00053c3a: inc esi; dec byte ptr [ecx + 0x29c629fe]; ret 0xce01; 
0x00082e49: inc esi; dec dword ptr [ebx + 0x2904247c]; ror byte ptr [ebx + 0x6c8b2434], 1; and al, 8; add esp, 0xc; ret; 
0x0006f2e6: inc esi; dec esp; mov dword ptr [esi + 0x50], edx; add esp, 0x18; pop esi; ret; 
0x0012a1d7: inc esi; dec esp; mov dword ptr [esp + 4], 0; mov dword ptr [esp], esi; call dword ptr [eax + 8]; 
0x0012af15: inc esi; dec esp; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; mov dword ptr [esp + 8], edx; call dword ptr [eax + 0x3c]; 
0x0012bd71: inc esi; dec esp; mov dword ptr [esp], esi; call dword ptr [eax + 0x44]; 
0x0016657b: inc esi; fdivr st(4); jmp dword ptr [ebx - 0x28]; 
0x000e8b89: inc esi; inc ebp; jmp dword ptr [eax]; 
0x000729ee: inc esi; inc esi; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x18]; 
0x0006b8ea: inc esi; inc esi; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0006baa9: inc esi; inc esi; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x000648e3: inc esi; inc esi; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x30]; 
0x000670af: inc esi; inc esi; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x34]; 
0x0007092a: inc esi; inc esi; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x44]; 
0x000f1276: inc esi; inc esp; and al, 8; add esp, 0x1c; ret; 
0x00109176: inc esi; int 0x80; 
0x00165dfc: inc esi; into; cld; jmp ebx; 
0x00064288: inc esi; lea edx, dword ptr [esp + 0x20]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x48]; 
0x0006febb: inc esi; lea edx, dword ptr [esp + 0x30]; mov eax, dword ptr [ebp + eax + 0x94]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x48]; 
0x0006db8b: inc esi; lea edx, dword ptr [esp + 0x60]; mov eax, dword ptr [ebp + eax + 0x94]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x48]; 
0x000562f3: inc esi; mov eax, dword ptr [ecx + eax + 0x94]; mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], esi; mov dword ptr [esp], ecx; call dword ptr [eax + 0x1c]; 
0x000729ef: inc esi; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x18]; 
0x0006aece: inc esi; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp + 8], ebp; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0006b8eb: inc esi; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0006baaa: inc esi; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x000648e4: inc esi; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x30]; 
0x000670b0: inc esi; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x34]; 
0x0007092b: inc esi; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x44]; 
0x0006ab0a: inc esi; mov edx, dword ptr [eax + edx + 0x94]; mov dword ptr [esp], eax; call dword ptr [edx + 0x30]; 
0x0007249c: inc esi; movzx edx, byte ptr [esi]; mov eax, dword ptr [edi + eax + 0x94]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0xc]; 
0x0012e62d: inc esi; or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x000e190f: inc esi; or al, 0x89; add al, 0x24; call dword ptr [esi + 0x24]; 
0x0001cdd2: inc esi; or al, 0x89; add al, 0x24; call dword ptr [esi + 4]; 
0x00069573: inc esi; or al, 0x89; ret 0x562b; 
0x00073d84: inc esi; or al, 0x89; ret 0xfac1; 
0x000e1676: inc esi; or al, 1; ret 0x1489; 
0x0006d1ce: inc esi; or al, 1; ret 0x562b; 
0x00118e09: inc esi; or bl, ch; ret 0x768d; 
0x0011cc21: inc esi; or byte ptr [ebp + 0x4d02494], cl; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x00024f81: inc esi; or byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x0007055c: inc esi; or byte ptr [ebx + 8], dh; movzx eax, byte ptr [eax]; add esp, 0x18; pop esi; ret; 
0x00066a81: inc esi; or byte ptr [ebx], ch; inc esi; add al, 0x89; ret 0xfac1; 
0x0006952c: inc esi; or byte ptr [ecx + 0x29cd29d5], cl; ret 0xe75; 
0x0011258a: inc esi; or byte ptr [ecx + 0x4489243c], cl; and al, 4; call dword ptr [esi + 0xc]; 
0x000711f7: inc esi; or byte ptr [ecx - 0x7c15de06], cl; cli; push dword ptr [edi + ecx - 0x77]; ret 0xfac1; 
0x001764c4: inc esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001744d5: inc esi; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x0017ad91: inc esi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00173aaa: inc esi; or dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0018eb95: inc esi; or eax, dword ptr [ebx]; cmp al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00175a1e: inc esi; or eax, dword ptr [ebx]; mov al, 2; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018da3f: inc esi; or eax, dword ptr [edx]; dec ecx; push cs; or al, 0x43; ret; 
0x0018a949: inc esi; or eax, dword ptr [edx]; dec edi; ret; 
0x0018bb49: inc esi; or eax, dword ptr [edx]; lahf; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001993af: inc esi; or eax, dword ptr [edx]; mov ebp, 0x43140e0a; ret; 
0x00189afe: inc esi; or eax, dword ptr [edx]; movsb byte ptr es:[edi], byte ptr [esi]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0017c2c2: inc esi; or eax, dword ptr [edx]; or cl, byte ptr fs:[esi]; adc al, 0x43; ret; 
0x0017959d: inc esi; or eax, dword ptr [edx]; push esi; or cl, byte ptr [esi]; adc al, 0x44; ret; 
0x0018cd0b: inc esi; or eax, dword ptr [edx]; pushal; ret; 
0x0017035d: inc esi; or ebx, dword ptr [ebp + 0xe]; adc al, 0x43; ret; 
0x00184713: inc esi; or ecx, dword ptr [ebp + 0xe]; or al, 0x43; ret; 
0x00190c9c: inc esi; or ecx, dword ptr [edi + 0xe]; adc al, 0x41; ret; 
0x0017a574: inc esi; or ecx, dword ptr [esi + 0xa]; ret; 
0x0018c0f0: inc esi; or edi, dword ptr [esi + 0xa]; ret; 
0x00192906: inc esi; or esi, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0006d6d2: inc esi; pop eax; mov dword ptr [esp], ebp; add eax, 0x2c; mov dword ptr [esp + 4], eax; call dword ptr [ebp + 0x18]; 
0x0006ccb9: inc esi; pop eax; mov dword ptr [esp], edx; add eax, 0x2c; mov dword ptr [esp + 4], eax; call dword ptr [edx + 4]; 
0x0006cacd: inc esi; pop eax; mov eax, dword ptr [eax + 0xb8]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00167807: inc esi; pop esi; std; call dword ptr [esi]; 
0x0002e9b2: inc esi; pop ss; add byte ptr [ecx - 0x7afbdb8c], cl; ror byte ptr [ecx + 0xf08247c], cl; test byte ptr [ebx - 0xa000000], al; ret 0x8901; 
0x00072386: inc esi; push 0x167ec085; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x34]; 
0x00065528: inc esi; push 0x5a7ec085; mov eax, dword ptr [esi + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x00067657: inc esi; push 0x5b7ec085; mov eax, dword ptr [esi + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x0012b865: inc esi; push 0xffffffff; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0018446b: inc esi; push cs; adc al, 0x41; ret; 
0x00178a83: inc esi; push cs; add al, 0xc6; ret; 
0x001737b1: inc esi; push cs; mov al, byte ptr [0x2070301]; or cl, byte ptr [esi]; adc al, 0x45; ret; 
0x00171771: inc esi; push cs; rol byte ptr [ecx], 2; mov edx, 0x43140e0a; ret; 
0x00119cd8: inc esi; push eax; lea edx, dword ptr [esp + 0x84]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 4]; 
0x0011a1d3: inc esi; push eax; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x00033a7d: inc esi; push es; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00067b6f: inc esi; push esp; mov dword ptr [esp + 4], eax; mov dword ptr [esp], ebp; call edi; 
0x0006552f: inc esi; push esp; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x000ab91e: inc esi; ret 0x548b; 
0x0014572b: inc esi; ret 0x5d5e; 
0x0007cbbd: inc esi; ret 0xbfeb; 
0x0007fd43: inc esi; ret 0xc483; 
0x000467f5: inc esi; ret 0xffff; 
0x0016f65c: inc esi; ret; 
0x000ccec5: inc esi; sbb al, 0x39; ret 0x137d; 
0x000ccc15: inc esi; sbb al, 0x83; ret 0x3901; 
0x000fa033: inc esi; sbb al, 0x89; ret 0x562b; 
0x0012b741: inc esi; sbb al, 0x8b; push esi; and byte ptr [ebx + 0x46894c4e], cl; add al, 0x29; ret 0x4689; 
0x001145f8: inc esi; sbb al, 1; add byte ptr [eax], al; add al, ch; mov ebp, 0x89fffffe; ret 0xc031; 
0x00114588: inc esi; sbb al, 1; add byte ptr [eax], al; add al, ch; sub eax, 0x89ffffff; ret 0xc031; 
0x001098b9: inc esi; sbb byte ptr [eax + 1], bh; add esp, 0x18; pop esi; ret; 
0x00114518: inc esi; sbb byte ptr [ebx + 0x468904c0], al; adc byte ptr [eax + 1], bh; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x0007b42c: inc esi; sbb byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x00071f0c: inc esi; sbb byte ptr [ecx - 0x3fceefba], cl; mov dword ptr [esi], edx; add esp, 0x18; pop esi; ret; 
0x000f6ce6: inc esi; sbb byte ptr [ecx], bh; ret 0x2176; 
0x000e802d: inc esi; sbb eax, 0xc1810004; ret; 
0x0016cc39: inc esi; stc; jmp eax; 
0x0016728b: inc esi; std; push dword ptr [eax + 0xfffd2d]; std; jmp dword ptr [eax + 0x2e]; 
0x001098f3: inc esi; sub byte ptr [ecx + 0x73e82404], cl; arpl di, di; inc dword ptr [ebp - 0x76fa8b40]; xor al, 0x24; call eax; 
0x0010994c: inc esi; sub byte ptr [ecx - 0x76cfdbbc], cl; ret 0x448d; 
0x000679bf: inc esi; sub byte ptr [ecx - 0x76fbdbbc], cl; sub al, 0x24; call edi; 
0x00002545: inc esi; xchg eax, esi; add byte ptr [edx], al; xchg dh, ch; inc ebp; ret 0x88ad; 
0x000b9a31: inc esi; xor eax, dword ptr [ecx]; adc eax, 0xb8907174; and byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0016d2d0: inc esp; aad 0xf9; dec dword ptr [eax]; ret; 
0x0016dc58: inc esp; aad 0xfa; jmp dword ptr [eax]; 
0x001589e7: inc esp; aas; mov ch, 0x31; mov ah, bl; push esi; ret; 
0x0016dfab: inc esp; adc al, byte ptr [ebx]; add byte ptr [edx + ecx*2], dl; sti; jmp esp; 
0x00095c74: inc esp; adc al, dh; ret; 
0x00095ca4: inc esp; adc byte ptr [eax], ah; ret; 
0x00095c94: inc esp; adc byte ptr [eax], dl; ret; 
0x0016bc1d: inc esp; add al, byte ptr [eax]; hlt; out 0xf7, eax; jmp dword ptr [eax + 0x44]; 
0x000a726a: inc esp; add bh, bh; pop esi; pop edi; ret; 
0x000b9b71: inc esp; add bh, bh; ret; 
0x0019b69c: inc esp; add byte ptr [eax], al; add byte ptr [eax + 0x7c0002c4], ah; ret; 
0x0017c8b0: inc esp; add byte ptr [eax], al; add byte ptr [esi + edx*8 - 0x20f80000], dh; out dx, eax; jmp dword ptr [esi]; 
0x00095c6b: inc esp; add dh, byte ptr [eax]; ret; 
0x0002ec5c: inc esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x14824ac], cl; add byte ptr [eax], al; add esp, 0x14c; ret; 
0x0009587b: inc esp; add dword ptr [eax], edx; ret; 
0x0009589b: inc esp; add dword ptr [eax], esi; ret; 
0x0009588b: inc esp; add dword ptr [eax], esp; ret; 
0x00198bcc: inc esp; add dword ptr [ebx], 0x4f; xchg byte ptr [edx], al; add al, byte ptr [edx + 0xe]; add al, 0xc6; ret; 
0x00197524: inc esp; add dword ptr [ebx], 0x4f; xchg byte ptr [edx], al; add bl, byte ptr [eax + 0xe]; add al, 0xc6; ret; 
0x00197034: inc esp; add dword ptr [ebx], 0x4f; xchg byte ptr [edx], al; jno 0x19704a; add al, 0xc6; ret; 
0x00195b40: inc esp; add dword ptr [ebx], 0x51; xchg byte ptr [edx], al; jo 0x195b56; add al, 0xc6; ret; 
0x00188b18: inc esp; add dword ptr [ebx], 0x51; xchg byte ptr [edx], al; push 0xe; add al, 0xc6; ret; 
0x001907d8: inc esp; add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; add cl, byte ptr [esi + 0xe]; add al, 0xc6; ret; 
0x0019b19c: inc esp; add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; add dl, byte ptr [ebp + 0xe]; add al, 0xc6; ret; 
0x00175210: inc esp; add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; jnp 0x175226; add al, 0xc6; ret; 
0x00178ebc: inc esp; add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; jo 0x178ed2; add al, 0xc6; ret; 
0x001715b8: inc esp; add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00198c40: inc esp; add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; push 0xc6040e0a; ret; 
0x0018f00c: inc esp; add dword ptr [ebx], 0x55; xchg byte ptr [edx], al; push cs; add al, 0xc6; ret; 
0x0017a597: inc esp; add dword ptr [ebx], 0x5d; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00178b6b: inc esp; add dword ptr [ebx], 0x60; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0018d487: inc esp; add dword ptr [ebx], 0x6a; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x001704e7: inc esp; add dword ptr [ebx], 0x6d; push cs; add al, 0xc6; ret; 
0x0017ae57: inc esp; add dword ptr [ebx], 0x71; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00177eeb: inc esp; add dword ptr [ebx], 0x71; push cs; add al, 0xc6; ret; 
0x00177e07: inc esp; add dword ptr [ebx], 0x72; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x001908eb: inc esp; add dword ptr [ebx], 0x73; push cs; add al, 0xc6; ret; 
0x0019094b: inc esp; add dword ptr [ebx], 0x74; push cs; add al, 0xc6; ret; 
0x0019a4c7: inc esp; add dword ptr [ebx], 0x76; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00179d37: inc esp; add dword ptr [ebx], 0x79; push cs; add al, 0xc6; ret; 
0x00199bd7: inc esp; add dword ptr [ebx], 0x7a; push cs; add al, 0xc6; ret; 
0x0017173b: inc esp; add dword ptr [ebx], 0x7b; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x001775c3: inc esp; add dword ptr [ebx], 0x7c; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00179bab: inc esp; add dword ptr [ebx], 0x7f; push cs; add al, 0xc6; ret; 
0x0017908b: inc esp; add dword ptr [ebx], 2; dec eax; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00178bdb: inc esp; add dword ptr [ebx], 2; dec ebx; push cs; add al, 0xc6; ret; 
0x0017aea7: inc esp; add dword ptr [ebx], 2; dec ecx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00178d1f: inc esp; add dword ptr [ebx], 2; dec ecx; push cs; add al, 0xc6; ret; 
0x001789d7: inc esp; add dword ptr [ebx], 2; inc eax; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0017a4af: inc esp; add dword ptr [ebx], 2; inc ebp; push cs; add al, 0xc6; ret; 
0x0017a4cf: inc esp; add dword ptr [ebx], 2; inc edi; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0017aaef: inc esp; add dword ptr [ebx], 2; inc edx; push cs; add al, 0xc6; ret; 
0x00178a7f: inc esp; add dword ptr [ebx], 2; inc esi; push cs; add al, 0xc6; ret; 
0x0019b8df: inc esp; add dword ptr [ebx], 2; inc esp; push cs; add al, 0xc6; ret; 
0x0017c323: inc esp; add dword ptr [ebx], 2; jno 0x17c333; push cs; add al, 0xc6; ret; 
0x00174aeb: inc esp; add dword ptr [ebx], 2; jnp 0x174afb; push cs; add al, 0xc6; ret; 
0x0017ae07: inc esp; add dword ptr [ebx], 2; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00174503: inc esp; add dword ptr [ebx], 2; pop ecx; push cs; add al, 0xc6; ret; 
0x00196d1b: inc esp; add dword ptr [ebx], 2; pop edi; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00172c43: inc esp; add dword ptr [ebx], 2; push ebx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00189dbf: inc esp; add dword ptr [ebx], 2; push edx; push cs; add al, 0xc6; ret; 
0x00179d83: inc esp; add dword ptr [ebx], 2; push esi; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00171181: inc esp; add dword ptr [edx], ecx; ret; 
0x0016e543: inc esp; add eax, dword ptr cs:[eax]; hlt; sar bl, 1; call dword ptr [eax + 0x30]; 
0x00175989: inc esp; add ecx, dword ptr [edx]; push cs; adc al, 0x43; ret; 
0x000f54c5: inc esp; add esp, 0x18; mov eax, edx; pop ebx; ret; 
0x000419e5: inc esp; add esp, 0x30; pop esi; pop edi; pop ebp; ret; 
0x0011cf72: inc esp; and al, 0x10; call 0x11cec0; add esp, 0x98; pop edi; ret; 
0x0002d9a1: inc esp; and al, 0x10; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0002da17: inc esp; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00127951: inc esp; and al, 0x10; mov eax, dword ptr [eax]; add esp, 0xc; ret; 
0x0007c974: inc esp; and al, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00101944: inc esp; and al, 0x10; pop esi; pop edi; pop ebp; ret; 
0x000eaead: inc esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x00032eb6: inc esp; and al, 0x14; call ecx; 
0x0002f13f: inc esp; and al, 0x14; xchg edi, ebx; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x000338ca: inc esp; and al, 0x18; add esp, 0x28; pop ebx; ret; 
0x0011e534: inc esp; and al, 0x18; mov dword ptr [esp], eax; call dword ptr [esp + 0x40]; add esp, 0x3c; ret; 
0x00019f38: inc esp; and al, 0x18; mov edx, dword ptr [esp + 0x1c]; add esp, 0x24; ret; 
0x00064f82: inc esp; and al, 0x18; mov edx, dword ptr [esp + 0x1c]; add esp, 0x2c; ret; 
0x00097036: inc esp; and al, 0x1c; add dword ptr [ebx + 0x211c244c], ecx; ret 0xd789; 
0x00033359: inc esp; and al, 0x1c; add esp, 0x28; pop ebx; ret; 
0x00126e60: inc esp; and al, 0x1c; add esp, 0x34; pop ebx; pop esi; ret; 
0x0007c06f: inc esp; and al, 0x1c; call dword ptr [edx]; 
0x00074f86: inc esp; and al, 0x1c; call edx; 
0x0007af20: inc esp; and al, 0x1c; mov dword ptr [ebx + 0x1968], 1; add esp, 0x28; pop ebx; ret; 
0x001111d1: inc esp; and al, 0x1c; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00112639: inc esp; and al, 0x1c; mov eax, dword ptr [edi + 0x10]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], eax; call dword ptr [edi + 0x14]; 
0x000ed985: inc esp; and al, 0x1c; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000ce8a4: inc esp; and al, 0x1c; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; ret; 
0x000ce876: inc esp; and al, 0x1c; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000ed8b4: inc esp; and al, 0x1c; mov esi, dword ptr [esp + 0x30]; add esp, 0x3c; ret; 
0x000eeb80: inc esp; and al, 0x1c; xchg ebx, ecx; mov eax, 0x95; call dword ptr gs:[0x10]; 
0x000e25b9: inc esp; and al, 0x20; call 0xe2070; sub esp, 8; add esp, 0x1c; ret; 
0x000e3739: inc esp; and al, 0x20; call 0xe31f0; sub esp, 8; add esp, 0x1c; ret; 
0x0007c29f: inc esp; and al, 0x20; call dword ptr [edx]; 
0x000b7d8b: inc esp; and al, 0x20; mov dword ptr [esp + 4], eax; call 0xb7da0; add esp, 0x1c; ret; 
0x00102f9c: inc esp; and al, 0x20; mov dword ptr [esp], eax; call 0x102fb0; add esp, 0x1c; ret; 
0x0010316c: inc esp; and al, 0x20; mov dword ptr [esp], eax; call 0x103180; add esp, 0x1c; ret; 
0x0010347c: inc esp; and al, 0x20; mov dword ptr [esp], eax; call 0x103280; add esp, 0x1c; ret; 
0x00113034: inc esp; and al, 0x20; mov dword ptr [esp], eax; call 0x11ea10; add esp, 0x1c; ret; 
0x0011ec8b: inc esp; and al, 0x20; mov dword ptr [esp], eax; call 0x11eb00; add esp, 0x1c; ret; 
0x00027754: inc esp; and al, 0x20; mov dword ptr [esp], eax; call 0x276f0; add esp, 0x1c; ret; 
0x0003f7cc: inc esp; and al, 0x20; mov dword ptr [esp], eax; call 0x33fa0; add esp, 0x1c; ret; 
0x0003f7fc: inc esp; and al, 0x20; mov dword ptr [esp], eax; call 0x34040; add esp, 0x1c; ret; 
0x000388cc: inc esp; and al, 0x20; mov dword ptr [esp], eax; call 0x36110; add esp, 0x1c; ret; 
0x0003b84c: inc esp; and al, 0x20; mov dword ptr [esp], eax; call 0x38f30; add esp, 0x1c; ret; 
0x0003e6dc: inc esp; and al, 0x20; mov dword ptr [esp], eax; call 0x3bef0; add esp, 0x1c; ret; 
0x0004c464: inc esp; and al, 0x20; mov dword ptr [esp], eax; call 0x424d0; add esp, 0x1c; ret; 
0x000546c4: inc esp; and al, 0x20; mov dword ptr [esp], eax; call 0x54660; add esp, 0x1c; ret; 
0x00055b84: inc esp; and al, 0x20; mov dword ptr [esp], eax; call 0x55ba0; add esp, 0x1c; ret; 
0x0006b384: inc esp; and al, 0x20; mov dword ptr [esp], eax; call 0x6b2b0; add esp, 0x1c; ret; 
0x00040e9c: inc esp; and al, 0x20; mov dword ptr [esp], eax; call 0x99b00; add esp, 0x1c; ret; 
0x00040ecc: inc esp; and al, 0x20; mov dword ptr [esp], eax; call 0x99ba0; add esp, 0x1c; ret; 
0x000a5fd4: inc esp; and al, 0x20; mov dword ptr [esp], eax; call 0xa5ff0; add esp, 0x1c; ret; 
0x000df684: inc esp; and al, 0x20; mov dword ptr [esp], eax; call 0xde7c0; add esp, 0x1c; ret; 
0x000eac9c: inc esp; and al, 0x20; mov dword ptr [esp], eax; call 0xea6f0; add esp, 0x1c; ret; 
0x000ec5bc: inc esp; and al, 0x20; mov dword ptr [esp], eax; call 0xec330; add esp, 0x1c; ret; 
0x000ec59c: inc esp; and al, 0x20; mov dword ptr [esp], eax; call 0xec440; add esp, 0x1c; ret; 
0x000faaff: inc esp; and al, 0x20; mov dword ptr [esp], eax; call edx; 
0x00124aaf: inc esp; and al, 0x20; mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 0x10]; 
0x00124dbb: inc esp; and al, 0x20; mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 0xc]; 
0x00124a47: inc esp; and al, 0x20; mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 4]; 
0x000ff04a: inc esp; and al, 0x20; xchg edi, ebx; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x000276b5: inc esp; and al, 0x24; add esp, 0x1c; ret; 
0x000faaf7: inc esp; and al, 0x24; mov dword ptr [esp + 4], eax; mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call edx; 
0x00118cd4: inc esp; and al, 0x28; mov eax, dword ptr [esp + 0x44]; call dword ptr [eax + 0x14]; 
0x0011260a: inc esp; and al, 0x2c; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000eb49e: inc esp; and al, 0x2c; add esp, 0x38; pop ebx; ret; 
0x001127bf: inc esp; and al, 0x2c; call dword ptr [edx + 0x10]; 
0x0011c2eb: inc esp; and al, 0x2c; mov dword ptr [eax], 0xf; mov eax, dword ptr [ebp + 4]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x000e6036: inc esp; and al, 0x2f; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0010e58c: inc esp; and al, 0x30; call 0x10cc60; add esp, 0x28; pop ebx; ret; 
0x001216f2: inc esp; and al, 0x30; call 0x120d70; sub esp, 0x14; add esp, 0x2c; ret; 
0x000b08ec: inc esp; and al, 0x30; call 0xae970; add esp, 0x2c; ret; 
0x000b2dcc: inc esp; and al, 0x30; call 0xb09a0; add esp, 0x2c; ret; 
0x000d82ef: inc esp; and al, 0x30; call 0xd7850; sub esp, 0x14; add esp, 0x2c; ret; 
0x000d8383: inc esp; and al, 0x30; call 0xd7cd0; sub esp, 0x1c; add esp, 0x2c; ret; 
0x000b3dc3: inc esp; and al, 0x30; mov dword ptr [esp + 4], eax; call 0xb46f0; add esp, 0x2c; ret; 
0x000b4343: inc esp; and al, 0x30; mov dword ptr [esp + 4], eax; call 0xb48f0; add esp, 0x2c; ret; 
0x00101a84: inc esp; and al, 0x30; mov dword ptr [esp], eax; call 0x101ab0; add esp, 0x2c; ret; 
0x00101bdc: inc esp; and al, 0x30; mov dword ptr [esp], eax; call 0x101bf0; add esp, 0x2c; ret; 
0x00104a6c: inc esp; and al, 0x30; mov dword ptr [esp], eax; call 0x104a80; add esp, 0x2c; ret; 
0x0010e3d4: inc esp; and al, 0x30; mov dword ptr [esp], eax; call 0x10e2e0; add esp, 0x2c; ret; 
0x0010e514: inc esp; and al, 0x30; mov dword ptr [esp], eax; call 0x10e3f0; add esp, 0x2c; ret; 
0x0010ec14: inc esp; and al, 0x30; mov dword ptr [esp], eax; call 0x10e5a0; add esp, 0x2c; ret; 
0x00032144: inc esp; and al, 0x30; mov dword ptr [esp], eax; call 0x31e40; add esp, 0x2c; ret; 
0x000345e4: inc esp; and al, 0x30; mov dword ptr [esp], eax; call 0x340e0; add esp, 0x2c; ret; 
0x00034b14: inc esp; and al, 0x30; mov dword ptr [esp], eax; call 0x34600; add esp, 0x2c; ret; 
0x000352b4: inc esp; and al, 0x30; mov dword ptr [esp], eax; call 0x34b30; add esp, 0x2c; ret; 
0x000359f4: inc esp; and al, 0x30; mov dword ptr [esp], eax; call 0x352d0; add esp, 0x2c; ret; 
0x0012eaac: inc esp; and al, 0x30; mov dword ptr [esp], eax; call 0xffe30; add esp, 0x2c; ret; 
0x0006b18b: inc esp; and al, 0x34; mov esi, dword ptr [esp + 0x20]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000ee8f7: inc esp; and al, 0x39; or byte ptr [edi], 0x95; ret 0xcbeb; 
0x000b518b: inc esp; and al, 0x3c; mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call edi; 
0x00113857: inc esp; and al, 0x3c; mov dword ptr [esp], ebp; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x18]; 
0x000ddbc6: inc esp; and al, 0x40; mov dword ptr [esp + 4], eax; call 0xddf70; add esp, 0x3c; ret; 
0x0011b124: inc esp; and al, 0x40; mov dword ptr [esp], eax; call 0x11ad10; add esp, 0x3c; ret; 
0x000f2096: inc esp; and al, 0x44; call 0xf1f70; add esp, 4; ret; 
0x00118cd8: inc esp; and al, 0x44; call dword ptr [eax + 0x14]; 
0x000eeb7c: inc esp; and al, 0x50; mov dword ptr [esp + 0x1c], eax; xchg ebx, ecx; mov eax, 0x95; call dword ptr gs:[0x10]; 
0x000e73f9: inc esp; and al, 0x50; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000e7919: inc esp; and al, 0x50; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000194a1: inc esp; and al, 0x78; mov dword ptr [esp + 4], eax; call esi; 
0x000f3e08: inc esp; and al, 0xc; add byte ptr [eax + eax], al; add byte ptr [ecx - 0x617dbfc], cl; ret 0; 
0x00066c82: inc esp; and al, 0xc; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [eax + 0x24]; 
0x000726e3: inc esp; and al, 0xc; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], eax; call dword ptr [edx + 0x24]; 
0x0006ffb7: inc esp; and al, 0xc; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x0002d391: inc esp; and al, 0xc; fld qword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0002d408: inc esp; and al, 0xc; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0002d7d6: inc esp; and al, 0xc; fld xword ptr [esp + 4]; ret; 
0x000e1dfa: inc esp; and al, 0xc; mov dword ptr [esp + 4], edx; mov eax, dword ptr [ecx + 0xc]; mov dword ptr [esp], eax; call dword ptr [ecx + 0x24]; 
0x000b5187: inc esp; and al, 0xc; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call edi; 
0x000ddae6: inc esp; and al, 0xc; mov ebx, dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x14]; add esp, 0x18; ret; 
0x0002d7b1: inc esp; and al, 0xc; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x000949d3: inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x00148f13: inc esp; and al, 0xc; pop edi; ret; 
0x0011b384: inc esp; and al, 4; add al, 0; add byte ptr [eax], al; mov dword ptr [esp], eax; call dword ptr [edx + 0x14]; 
0x0011232b: inc esp; and al, 4; add al, 0; add byte ptr [eax], al; mov dword ptr [esp], edi; call dword ptr [eax]; 
0x00112262: inc esp; and al, 4; add al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp], edi; call dword ptr [eax]; 
0x0011d949: inc esp; and al, 4; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [eax + 0x14]; 
0x00032eae: inc esp; and al, 4; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 0x14], eax; call ecx; 
0x0011b599: inc esp; and al, 4; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], eax; call edx; 
0x0011dc3b: inc esp; and al, 4; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x14]; 
0x000416fd: inc esp; and al, 4; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], ecx; call eax; 
0x00111832: inc esp; and al, 4; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], edi; call dword ptr [eax + 0x14]; 
0x00113b9e: inc esp; and al, 4; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x00072dce: inc esp; and al, 4; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 0x2c]; 
0x0006448c: inc esp; and al, 4; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 8]; 
0x0011f711: inc esp; and al, 4; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x00112109: inc esp; and al, 4; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [esp], edi; call dword ptr [eax]; 
0x000637e4: inc esp; and al, 4; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [esp], esi; call eax; 
0x001127ac: inc esp; and al, 4; add eax, 0x89000000; cmp al, 0x24; call dword ptr [eax]; 
0x0010fae1: inc esp; and al, 4; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x0011c2d2: inc esp; and al, 4; add eax, dword ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax]; 
0x0002d4ab: inc esp; and al, 4; add esp, 0xc; and eax, 0x80000000; ret; 
0x00113464: inc esp; and al, 4; and byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], edi; call dword ptr [eax + 0x18]; 
0x0006aa31: inc esp; and al, 4; and dword ptr [eax], 0xffffffcf; ret; 
0x00027031: inc esp; and al, 4; and eax, 0x7f; ret; 
0x0002d6f1: inc esp; and al, 4; and eax, 0x80000000; ret; 
0x00105041: inc esp; and al, 4; and eax, 0xffff; ror ax, 8; ret; 
0x00105031: inc esp; and al, 4; bswap eax; ret; 
0x00027787: inc esp; and al, 4; call 0x276f0; add esp, 0x1c; ret; 
0x00028e83: inc esp; and al, 4; call 0x28dc0; add esp, 0x28; pop ebx; ret; 
0x001197e5: inc esp; and al, 4; call 0x63810; add esp, 0x18; pop ebx; ret; 
0x000ec6ac: inc esp; and al, 4; call 0x63810; add esp, 0x418; pop ebx; ret; 
0x00098976: inc esp; and al, 4; call 0x98990; add esp, 0x18; pop ebx; ret; 
0x000b3dc7: inc esp; and al, 4; call 0xb46f0; add esp, 0x2c; ret; 
0x000b4347: inc esp; and al, 4; call 0xb48f0; add esp, 0x2c; ret; 
0x000b7d8f: inc esp; and al, 4; call 0xb7da0; add esp, 0x1c; ret; 
0x000715ba: inc esp; and al, 4; call 0xdde60; add esp, 0x1c; ret; 
0x000ddb82: inc esp; and al, 4; call 0xddee0; add esp, 0x2c; ret; 
0x000ddbca: inc esp; and al, 4; call 0xddf70; add esp, 0x3c; ret; 
0x0006d6db: inc esp; and al, 4; call dword ptr [ebp + 0x18]; 
0x0006dcc2: inc esp; and al, 4; call dword ptr [ecx + 0x18]; 
0x00042463: inc esp; and al, 4; call dword ptr [ecx + 0x1c]; 
0x00112643: inc esp; and al, 4; call dword ptr [edi + 0x14]; 
0x0006ccc2: inc esp; and al, 4; call dword ptr [edx + 4]; 
0x00112fcf: inc esp; and al, 4; call dword ptr [esi + 0x14]; 
0x00112590: inc esp; and al, 4; call dword ptr [esi + 0xc]; 
0x0001f4ad: inc esp; and al, 4; call dword ptr [esi]; 
0x001117d5: inc esp; and al, 4; call dword ptr [esp + 0x24]; add esp, 0x18; pop ebx; ret; 
0x000194a5: inc esp; and al, 4; call esi; 
0x0007e2e7: inc esp; and al, 4; cmove eax, edx; add eax, 1; ret; 
0x000a7bb1: inc esp; and al, 4; fild dword ptr [esp + 8]; fsubp st(1); ret; 
0x0002d546: inc esp; and al, 4; fld dword ptr [esp + 4]; ret; 
0x000311c3: inc esp; and al, 4; fld xword ptr [esp]; add esp, 0x10; ret; 
0x0002d395: inc esp; and al, 4; fscale; fstp st(1); ret; 
0x00103839: inc esp; and al, 4; lea eax, dword ptr [ebx - 0x9f8b4]; mov dword ptr [esp], eax; call edx; 
0x000d9367: inc esp; and al, 4; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x000d9351: inc esp; and al, 4; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00129915: inc esp; and al, 4; mov dword ptr [eax + 0x4c], edx; ret; 
0x0002d40c: inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x00070281: inc esp; and al, 4; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; call dword ptr [edx + 0x40]; 
0x0006d0b6: inc esp; and al, 4; mov dword ptr [esp + 8], edx; call dword ptr [edi + 0xc]; 
0x000679c2: inc esp; and al, 4; mov dword ptr [esp], ebp; call edi; 
0x00113363: inc esp; and al, 4; mov dword ptr [esp], edi; call dword ptr [edx + 0x18]; 
0x00098f69: inc esp; and al, 4; mov dword ptr [esp], edi; call esi; 
0x0006cb83: inc esp; and al, 4; mov dword ptr [esp], edi; mov dword ptr [esp + 8], edx; call dword ptr [edi + 0xc]; 
0x00099697: inc esp; and al, 4; mov dword ptr [esp], edi; mov dword ptr [esp + 8], edx; call esi; 
0x000ebc51: inc esp; and al, 4; mov dword ptr [esp], edx; call dword ptr [ebp + 0x10]; 
0x000bb80b: inc esp; and al, 4; mov dword ptr [esp], edx; call edi; 
0x000478ee: inc esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [ecx + 0x1c]; 
0x000bba24: inc esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [ecx + 0x20]; 
0x0012b762: inc esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [ecx + 0x38]; 
0x0006bfb7: inc esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [edx + 0x18]; 
0x000711dc: inc esp; and al, 4; mov dword ptr [esp], esi; sub edx, eax; mov dword ptr [esp + 8], edx; call dword ptr [ecx + 0x38]; 
0x000b3d91: inc esp; and al, 4; mov eax, dword ptr [eax + 0x14]; ret; 
0x00067921: inc esp; and al, 4; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + 0x28]; ret; 
0x00073461: inc esp; and al, 4; mov eax, dword ptr [eax + 0x34]; ret; 
0x001298d1: inc esp; and al, 4; mov eax, dword ptr [eax + 0x48]; ret; 
0x00129901: inc esp; and al, 4; mov eax, dword ptr [eax + 0x4c]; ret; 
0x00129921: inc esp; and al, 4; mov eax, dword ptr [eax + 0x50]; ret; 
0x00129991: inc esp; and al, 4; mov eax, dword ptr [eax + 0x54]; ret; 
0x00129981: inc esp; and al, 4; mov eax, dword ptr [eax + 0x58]; ret; 
0x00129931: inc esp; and al, 4; mov eax, dword ptr [eax + 0x5c]; ret; 
0x000e5db1: inc esp; and al, 4; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x001298c5: inc esp; and al, 4; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x001298e5: inc esp; and al, 4; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0006a011: inc esp; and al, 4; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00069fe1: inc esp; and al, 4; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000b40c1: inc esp; and al, 4; mov eax, dword ptr [eax]; ret; 
0x000bd41d: inc esp; and al, 4; mov eax, dword ptr [ebp - 0x134]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x000c019d: inc esp; and al, 4; mov eax, dword ptr [ebp - 0x144]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x00017779: inc esp; and al, 4; mov eax, dword ptr [ebp - 0x7c]; mov dword ptr [esp], eax; mov eax, dword ptr [ebp + 0xc]; call dword ptr [eax]; 
0x00098725: inc esp; and al, 4; mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; call esi; 
0x00124d0f: inc esp; and al, 4; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 8]; 
0x000d95b0: inc esp; and al, 4; mov eax, dword ptr [ebx + 0xee0]; mov dword ptr [esp], ebp; call dword ptr [eax + 0xc]; 
0x0007c329: inc esp; and al, 4; mov eax, dword ptr [esi + 0x24]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x000bd172: inc esp; and al, 4; mov eax, dword ptr [esi + 4]; mov eax, dword ptr [eax + edi]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x001144e9: inc esp; and al, 4; mov eax, dword ptr [esi]; mov dword ptr [esp + 8], edi; mov dword ptr [esp], eax; call dword ptr [esi + 8]; 
0x000faafb: inc esp; and al, 4; mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call edx; 
0x00124db7: inc esp; and al, 4; mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 0xc]; 
0x00124a43: inc esp; and al, 4; mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 4]; 
0x0011f721: inc esp; and al, 4; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x000d8a51: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00073151: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00025201: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x000d8a29: inc esp; and al, 4; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00113512: inc esp; and al, 4; or byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], edi; call dword ptr [eax + 0x18]; 
0x0011b48f: inc esp; and al, 4; or eax, 0x89000000; add al, 0x24; call dword ptr [edx + 0x14]; 
0x0002d28a: inc esp; and al, 4; ret; 
0x000fb84d: inc esp; and al, 4; setae al; movzx eax, al; ret; 
0x0006aa41: inc esp; and al, 4; test byte ptr [eax], 0x10; setne al; movzx eax, al; ret; 
0x0006aa51: inc esp; and al, 4; test byte ptr [eax], 0x20; setne al; movzx eax, al; ret; 
0x00069ff1: inc esp; and al, 4; test byte ptr [eax], 4; sete al; movzx eax, al; ret; 
0x0006a001: inc esp; and al, 4; test byte ptr [eax], 8; sete al; movzx eax, al; ret; 
0x00067e37: inc esp; and al, 8; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x00066267: inc esp; and al, 8; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], edx; call eax; 
0x00070b0c: inc esp; and al, 8; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x00083992: inc esp; and al, 8; add eax, 0x89000000; ret 0x838d; 
0x0006c05d: inc esp; and al, 8; add eax, esi; pop esi; ret; 
0x000f1277: inc esp; and al, 8; add esp, 0x1c; ret; 
0x0001e83e: inc esp; and al, 8; call dword ptr [ebp]; 
0x000f7e19: inc esp; and al, 8; call dword ptr [edi + 0x14]; 
0x00021565: inc esp; and al, 8; call dword ptr [edi]; 
0x0006cec0: inc esp; and al, 8; call dword ptr [edx + 0x38]; 
0x0007e062: inc esp; and al, 8; cld; pop edi; ret; 
0x0002d5f1: inc esp; and al, 8; fld dword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0002d660: inc esp; and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0002d286: inc esp; and al, 8; fld qword ptr [esp + 4]; ret; 
0x000a7bb5: inc esp; and al, 8; fsubp st(1); ret; 
0x0012738b: inc esp; and al, 8; lea eax, dword ptr [ebp - 0x44]; mov dword ptr [esp], eax; mov dword ptr [esp + 4], edx; call dword ptr [ebp - 0x7c]; 
0x000679bb: inc esp; and al, 8; lea eax, dword ptr [esi + 0x28]; mov dword ptr [esp + 4], eax; mov dword ptr [esp], ebp; call edi; 
0x00067b6b: inc esp; and al, 8; lea eax, dword ptr [esi + 0x54]; mov dword ptr [esp + 4], eax; mov dword ptr [esp], ebp; call edi; 
0x000d8a48: inc esp; and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00071677: inc esp; and al, 8; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; call dword ptr [edx + 0x38]; 
0x00114962: inc esp; and al, 8; mov dword ptr [esp + 4], ebp; mov eax, dword ptr [esi]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x000c77de: inc esp; and al, 8; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [ebp - 0x50]; 
0x0002dad8: inc esp; and al, 8; mov dword ptr [esp + 4], edx; add esp, 0x10; and eax, 0x8000; ret; 
0x00070005: inc esp; and al, 8; mov dword ptr [esp], ebp; call ecx; 
0x0001ec4f: inc esp; and al, 8; mov dword ptr [esp], ecx; call dword ptr [esi]; 
0x000990f9: inc esp; and al, 8; mov dword ptr [esp], edi; call esi; 
0x0002196b: inc esp; and al, 8; mov dword ptr [esp], edx; call dword ptr [ebp]; 
0x0001f66e: inc esp; and al, 8; mov dword ptr [esp], edx; call dword ptr [esi]; 
0x0006fadb: inc esp; and al, 8; mov dword ptr [esp], esi; call dword ptr [ecx + 0x40]; 
0x0001d2de: inc esp; and al, 8; mov eax, dword ptr [ebp + 0xc]; mov dword ptr [esp], eax; call dword ptr [ebp + 4]; 
0x0001e1f9: inc esp; and al, 8; mov eax, dword ptr [edi + 0xc]; mov dword ptr [esp], eax; call dword ptr [edi + 4]; 
0x000e190b: inc esp; and al, 8; mov eax, dword ptr [esi + 0xc]; mov dword ptr [esp], eax; call dword ptr [esi + 0x24]; 
0x0001cdce: inc esp; and al, 8; mov eax, dword ptr [esi + 0xc]; mov dword ptr [esp], eax; call dword ptr [esi + 4]; 
0x0001949d: inc esp; and al, 8; mov eax, dword ptr [esp + 0x78]; mov dword ptr [esp + 4], eax; call esi; 
0x0001f4a2: inc esp; and al, 8; mov eax, dword ptr [esp + 0xa4]; mov dword ptr [esp + 4], eax; call dword ptr [esi]; 
0x00136907: inc esp; and al, 8; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x000271d1: inc esp; and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000271e1: inc esp; and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002dd1a: inc esp; and al, 8; mov esp, ecx; jmp edx; 
0x000d89f8: inc esp; and al, 8; mov word ptr [eax], dx; xor eax, eax; ret; 
0x001331a6: inc esp; and al, 8; pop ebx; ret; 
0x0007c5b5: inc esp; and al, 8; pop edi; ret; 
0x000915b3: inc esp; and al, 8; pop esi; ret; 
0x00027216: inc esp; and al, 8; ret; 
0x0016e860: inc esp; and bh, ah; call esp; 
0x0011c4cd: inc esp; and dword ptr [edi + edi*8 - 0x3b7c0001], 8; pop ebx; ret; 
0x0016b5e3: inc esp; and dword ptr [edx], eax; add byte ptr [esp + edi*8 - 0xa], dh; jmp eax; 
0x0016a2a3: inc esp; arpl word ptr [ecx], ax; add byte ptr [eax + eax*4 - 0xf], ah; jmp esp; 
0x000f2098: inc esp; call 0xf1f70; add esp, 4; ret; 
0x00118cda: inc esp; call dword ptr [eax + 0x14]; 
0x00083074: inc esp; call dword ptr [ecx]; 
0x001992fd: inc esp; clc; call dword ptr [ecx]; 
0x00199325: inc esp; clc; jmp dword ptr [eax]; 
0x0019933d: inc esp; clc; jmp dword ptr [edi]; 
0x00166b0f: inc esp; cld; cld; inc dword ptr [edx + edi*8 - 0x4cb0004]; cld; jmp esp; 
0x000d873f: inc esp; cli; inc dword ptr [ebp + 0x74c289c0]; ret; 
0x00095564: inc esp; cmp al, dh; pop edi; ret; 
0x00095594: inc esp; cmp byte ptr [eax], ah; pop edi; ret; 
0x00095584: inc esp; cmp byte ptr [eax], dl; pop edi; ret; 
0x000b9125: inc esp; cmp dword ptr [eax], eax; add byte ptr [ebp - 0x76e18a40], al; rol dword ptr [edi + 0xd5b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b91a5: inc esp; cmp dword ptr [eax], eax; add byte ptr [ebp - 0x76e18a40], al; rol dword ptr [edi + 0xd6b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b94c4: inc esp; cmp dword ptr [eax], eax; add byte ptr [ebp - 0x78dc8a40], al; fistp qword ptr [eax + 0xd0]; call dword ptr gs:[0x10]; 
0x000b9554: inc esp; cmp dword ptr [eax], eax; add byte ptr [ebp - 0x78dc8a40], al; fistp qword ptr [eax + 0xd2]; call dword ptr gs:[0x10]; 
0x000e7989: inc esp; cmp dword ptr [eax], eax; add byte ptr [ebp - 0x78e38a40], al; sar dword ptr [eax + 0xcb], cl; call dword ptr gs:[0x10]; 
0x000e7a09: inc esp; cmp dword ptr [eax], eax; add byte ptr [ebp - 0x78e38a40], al; sar dword ptr [eax + 0xcc], cl; call dword ptr gs:[0x10]; 
0x000b55a9: inc esp; cmp dword ptr [eax], eax; add byte ptr [ebp - 0x78e38a40], al; sar dword ptr [eax + 0xce], cl; call dword ptr gs:[0x10]; 
0x0019946c: inc esp; dec ebp; clc; jmp dword ptr [ebx]; 
0x00169f04: inc esp; dec esi; add dword ptr [eax], eax; adc al, 0x33; int1; jmp dword ptr [eax + 0x4e]; 
0x0017b109: inc esp; dec esi; out dx, eax; jmp dword ptr [edx]; 
0x001824cc: inc esp; dec esp; cld; call esp; 
0x0016adb8: inc esp; fcomi st(4); push dword ptr [eax - 0x2afffe15]; fcomi st(4); call dword ptr [eax - 0x15]; 
0x001784b5: inc esp; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x00168790: inc esp; fucompi st(4); push dword ptr [eax]; mov ebp, 0xdf840000; in al, dx; call dword ptr [eax - 0x43]; 
0x001669cc: inc esp; in eax, dx; cld; call dword ptr [ebx + ebp*8 - 4]; call esp; 
0x00174bc6: inc esp; in eax, dx; jmp dword ptr [edx]; 
0x000f7231: inc esp; inc ecx; add dword ptr [eax + 0xf], eax; inc esp; ret 0x8dc3; 
0x0016c0c8: inc esp; inc edi; clc; jmp dword ptr [eax]; 
0x00169fc9: inc esp; int1; call esp; 
0x00169fa1: inc esp; int1; jmp esp; 
0x0016e4f0: inc esp; iretd; sti; jmp esp; 
0x0016a340: inc esp; lodsb al, byte ptr [esi]; int1; jmp eax; 
0x0016d0d8: inc esp; mov ah, 0xf9; jmp eax; 
0x0008e92f: inc esp; mov ah, 9; add byte ptr [ecx + 0xcbe7dc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00025f72: inc esp; mov ah, byte ptr [ebx + ecx*4]; sbb al, 0x24; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0016a420: inc esp; mov bl, 0xf1; call dword ptr [eax + 0x6b]; 
0x0006745b: inc esp; mov dword ptr [eax], esi; mov dword ptr [eax + 4], edx; mov eax, dword ptr [ebp + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x00129c57: inc esp; mov dword ptr [edx], ecx; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x001228a9: inc esp; mov dword ptr [esp], ecx; call 0x122060; add esp, 0x38; pop ebx; ret; 
0x001686ab: inc esp; mov eax, 0xbf840000; in al, dx; jmp esp; 
0x000b5dcb: inc esp; mov eax, ecx; pop ebx; pop esi; ret; 
0x000d7dd0: inc esp; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret 0x1c; 
0x0011b5c5: inc esp; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret 8; 
0x0001a335: inc esp; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x00110bc2: inc esp; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0019ab44: inc esp; mov ecx, 0xa0e80002; clc; jmp dword ptr [edx]; 
0x00054c84: inc esp; mov edi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x00175fef: inc esp; mov esi, 0xd1cffee; xor al, 0xbd; out dx, al; jmp dword ptr [edx]; 
0x00117847: inc esp; mov esi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x0016c730: inc esp; mov esp, 0x7bb8fff8; add al, byte ptr [eax]; in al, 0xbc; clc; jmp esp; 
0x0017b2f4: inc esp; mov esp, 0xf6ed0000; out dx, eax; call dword ptr [eax]; 
0x00074a13: inc esp; mov word ptr [eax], ss; add byte ptr [eax], al; add cl, ch; ret; 
0x0016da80: inc esp; movsd dword ptr es:[edi], dword ptr [esi]; cli; call dword ptr [eax]; 
0x00019ebd: inc esp; neg edx; ret; 
0x00026a99: inc esp; nop; inc eax; ret; 
0x00002fbd: inc esp; nop; ret 0x5bdb; 
0x00095844: inc esp; or byte ptr [eax], ah; ret; 
0x0011335f: inc esp; or byte ptr [eax], ch; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edi; call dword ptr [edx + 0x18]; 
0x00095854: inc esp; or byte ptr [eax], dh; ret; 
0x00095834: inc esp; or byte ptr [eax], dl; ret; 
0x0012011c: inc esp; or byte ptr cs:[eax], al; pop ebx; pop esi; ret; 
0x0017c8ac: inc esp; or eax, dword ptr [eax]; add byte ptr [eax + eax], al; add byte ptr [esi + edx*8 - 0x20f80000], dh; out dx, eax; jmp dword ptr [esi]; 
0x00189846: inc esp; or eax, dword ptr [ebx]; add al, 3; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001706b0: inc esp; or eax, dword ptr [ebx]; lea eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001709e3: inc esp; or eax, dword ptr [ebx]; nop; add cl, byte ptr [edx]; ret; 
0x0018a4fd: inc esp; or eax, dword ptr [ebx]; or byte ptr [edx], al; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x001886b3: inc esp; or eax, dword ptr [ebx]; test dword ptr [edx + ecx], eax; push cs; adc al, 0x41; ret; 
0x0017a5a0: inc esp; or eax, dword ptr [edx]; dec ebx; ret; 
0x0018ba9a: inc esp; or eax, dword ptr [edx]; dec edx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00183b57: inc esp; or eax, dword ptr [edx]; mov cs, word ptr [edx]; push cs; adc al, 0x43; ret; 
0x0018939a: inc esp; or eax, dword ptr [edx]; pop ebx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00189b6d: inc esp; or eax, dword ptr [edx]; pop esp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0019291c: inc esp; or eax, dword ptr [edx]; push eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00183baf: inc esp; or eax, dword ptr [edx]; xchg byte ptr [edx], cl; push cs; adc al, 0x43; ret; 
0x001852a3: inc esp; or eax, dword ptr [esi + 0xa]; push cs; adc al, 0x46; ret; 
0x00196d95: inc esp; or ebp, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x00170682: inc esp; or ebp, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0018f143: inc esp; or ebx, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0019a502: inc esp; or ebx, dword ptr [eax + 0xa]; ret; 
0x00175836: inc esp; or ebx, dword ptr [edx + 0xa]; ret; 
0x0018f159: inc esp; or ebx, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x0018a310: inc esp; or ecx, dword ptr [ebx + 0xe]; add al, 0xc6; ret; 
0x00170531: inc esp; or ecx, dword ptr [edi + 0xa]; ret; 
0x00199e99: inc esp; or ecx, dword ptr [edi + 0xe]; adc al, 0x43; ret; 
0x00191da9: inc esp; or ecx, dword ptr [edx + 0xe]; adc al, 0x41; ret; 
0x0018874e: inc esp; or edi, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00178391: inc esp; or edi, dword ptr [eax + 0xa]; ret; 
0x001973b0: inc esp; or edx, dword ptr [eax + 0xa]; ret; 
0x0018d8f3: inc esp; or edx, dword ptr [ebx + 0xa]; ret; 
0x00196a35: inc esp; or edx, dword ptr [ecx + 0xa]; ret; 
0x000fede8: inc esp; out 0xff, al; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0016c04b: inc esp; pop eax; add al, byte ptr [eax]; xchg eax, esp; cmp eax, edi; jmp esp; 
0x00168170: inc esp; pop edx; in al, dx; call dword ptr [eax]; 
0x001347ce: inc esp; pop es; add al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001346ae: inc esp; pop es; add bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0013461e: inc esp; pop es; add dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x0013485e: inc esp; pop es; add eax, 0x8b1c035f; jmp ebx; 
0x0013473e: inc esp; pop es; add ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x00134dfe: inc esp; pop es; maxps xmm0, xmmword ptr [ebx]; sbb al, 0x8b; jmp ebx; 
0x00134c4e: inc esp; pop es; or al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134b2e: inc esp; pop es; or bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x00134a0e: inc esp; pop es; or byte ptr [edi + 3], bl; sbb al, 0x8b; jmp ebx; 
0x00134a9e: inc esp; pop es; or dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x00134cde: inc esp; pop es; or eax, 0x8b1c035f; jmp ebx; 
0x00134bbe: inc esp; pop es; or ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0013497e: inc esp; pop es; pop es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134d6e: inc esp; pop es; push cs; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001348ee: inc esp; pop es; push es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00080aca: inc esp; pop esi; pop edi; pop ebp; ret; 
0x0002ebb8: inc esp; pop ss; add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp - 0x39]; 
0x00173ffc: inc esp; push cs; adc al, 0x43; ret; 
0x0019b8e3: inc esp; push cs; add al, 0xc6; ret; 
0x00158bec: inc esp; push ds; mov ah, 0x13; ret; 
0x00183abc: inc esp; push ebx; int1; call dword ptr [eax]; 
0x00179b9c: inc esp; pushal; out dx, eax; call dword ptr [ebx]; 
0x0017b8f4: inc esp; ret 0; 
0x000fb84a: inc esp; ret 0x443b; 
0x00098963: inc esp; ret 0x4489; 
0x0004972c: inc esp; ret 0x4589; 
0x000e2182: inc esp; ret 0x45f6; 
0x001242fd: inc esp; ret 0x508d; 
0x000f976b: inc esp; ret 0x568d; 
0x000e1e2a: inc esp; ret 0x64e9; 
0x000e380c: inc esp; ret 0x6c89; 
0x000268c8: inc esp; ret 0x748b; 
0x00040065: inc esp; ret 0x7c83; 
0x000eca34: inc esp; ret 0x7c89; 
0x000cf63e: inc esp; ret 0x804; 
0x0007b513: inc esp; ret 0x8389; 
0x00124247: inc esp; ret 0x8965; 
0x000e45ce: inc esp; ret 0x8966; 
0x000cfbb6: inc esp; ret 0x8b08; 
0x0004ff3b: inc esp; ret 0x8b; 
0x000f7236: inc esp; ret 0x8dc3; 
0x000ed3fc: inc esp; ret 0x90c3; 
0x0005084f: inc esp; ret 0x958b; 
0x0007e2eb: inc esp; ret 0xc083; 
0x000a75b5: inc esp; ret 0xc283; 
0x0007ad88: inc esp; ret 0xc483; 
0x00041d58: inc esp; ret 0xc7; 
0x00051f7c: inc esp; ret 0xc985; 
0x000bcb3b: inc esp; ret 0xe289; 
0x00116db2: inc esp; ret 8; 
0x00019e48: inc esp; ret; 
0x0012476d: inc esp; salc; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; mov eax, edx; ret; 
0x0011c671: inc esp; sar ah, 1; ret; 
0x00188bbc: inc esp; sbb al, 0xf4; jmp dword ptr [ebp]; 
0x0013c79e: inc esp; scasd eax, dword ptr es:[edi]; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0016cc09: inc esp; stc; jmp dword ptr [eax]; 
0x00167609: inc esp; std; inc dword ptr [eax + 0x45]; std; call eax; 
0x00167605: inc esp; std; push dword ptr [eax + 0x40fffd44]; inc ebp; std; call eax; 
0x0012a6c7: inc esp; sti; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x0016df69: inc esp; sti; jmp dword ptr [eax + 0x11]; 
0x0019851c: inc esp; sub bh, bl; jmp dword ptr [edi]; 
0x0017892c: inc esp; sub ch, bh; jmp dword ptr [ebx]; 
0x000e32fd: inc esp; test bl, bh; dec dword ptr [edi]; inc esp; ret 0x45f6; 
0x0018a1bd: inc esp; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx + eax*4 + 5]; add dh, byte ptr [ebp + 0xa]; ret; 
0x00170849: inc esp; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ecx - 0x7d]; add eax, 0xa010f03; ret; 
0x0019b371: inc esp; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ecx - 0x7d]; add eax, 0xa014103; ret; 
0x0019a03d: inc esp; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ecx - 0x7d]; add eax, 0xa01a003; ret; 
0x0018b6dd: inc esp; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edi - 0x7d]; add eax, 0xa03ba03; ret; 
0x0016d958: inc esp; xchg dl, bh; jmp dword ptr [eax]; 
0x0010aa34: inc esp; xor bh, bh; add byte ptr [ebx - 0x1e77b], cl; dec dword ptr [ebx - 0xf74d]; jmp dword ptr [ebp - 0x77]; 
0x001103f1: inc esp; xor cl, byte ptr [eax]; pop esi; ret; 
0x0019535c: inc esp; xor dh, bh; call ebx; 
0x0016f170: inc esp; xor edi, esi; jmp eax; 
0x0017046c: insb byte ptr es:[edi], dx; adc al, byte ptr [eax]; add al, dh; xor ebp, ebx; jmp dword ptr [esi]; 
0x0010bf74: insb byte ptr es:[edi], dx; add al, 0; add byte ptr [ecx], al; ret 0xb70f; 
0x000b8585: insb byte ptr es:[edi], dx; add byte ptr [eax], al; add byte ptr [eax + 0xbe], bh; int 0x80; 
0x00175edd: insb byte ptr es:[edi], dx; add byte ptr [eax], al; sal al, 0xee; jmp dword ptr [edx]; 
0x0003eb8a: insb byte ptr es:[edi], dx; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00031e90: insb byte ptr es:[edi], dx; add dword ptr [eax], eax; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x75]; 
0x00179915: insb byte ptr es:[edi], dx; add edi, ebp; jmp dword ptr [edx]; 
0x0002c821: insb byte ptr es:[edi], dx; and al, 0x10; add esp, 0x14; ret; 
0x000830bd: insb byte ptr es:[edi], dx; and al, 0x14; add esp, 0x18; ret; 
0x000ca369: insb byte ptr es:[edi], dx; and al, 0x18; add esp, 0x1c; ret 0xc; 
0x00019d91: insb byte ptr es:[edi], dx; and al, 0x18; add esp, 0x1c; ret; 
0x000e0df3: insb byte ptr es:[edi], dx; and al, 0x18; cmova eax, edx; add esp, 0x1c; ret; 
0x0001992c: insb byte ptr es:[edi], dx; and al, 0x18; mov dword ptr [ebx + 0x368c], ecx; mov ebx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x0007e9ef: insb byte ptr es:[edi], dx; and al, 0x1c; add esp, 0x20; ret; 
0x000f11d5: insb byte ptr es:[edi], dx; and al, 0x1c; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0003105f: insb byte ptr es:[edi], dx; and al, 0x20; add esp, 0x24; ret; 
0x000982d1: insb byte ptr es:[edi], dx; and al, 0x24; add esp, 0x28; ret; 
0x001118c4: insb byte ptr es:[edi], dx; and al, 0x24; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x0012755e: insb byte ptr es:[edi], dx; and al, 0x28; add esp, 0x2c; ret 4; 
0x000d9c63: insb byte ptr es:[edi], dx; and al, 0x28; add esp, 0x2c; ret 8; 
0x00019bd4: insb byte ptr es:[edi], dx; and al, 0x28; add esp, 0x2c; ret; 
0x00127a0c: insb byte ptr es:[edi], dx; and al, 0x28; cmovbe eax, edx; add esp, 0x2c; ret; 
0x000eeaee: insb byte ptr es:[edi], dx; and al, 0x28; int 0x80; 
0x000e0e19: insb byte ptr es:[edi], dx; and al, 0x28; mov eax, 0x110; call dword ptr gs:[0x10]; 
0x000e4f19: insb byte ptr es:[edi], dx; and al, 0x28; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000ef1d5: insb byte ptr es:[edi], dx; and al, 0x30; add esp, 0x34; ret; 
0x000b38a1: insb byte ptr es:[edi], dx; and al, 0x38; add esp, 0x3c; ret 4; 
0x0001bb5a: insb byte ptr es:[edi], dx; and al, 0x38; add esp, 0x3c; ret 8; 
0x0001ba38: insb byte ptr es:[edi], dx; and al, 0x38; add esp, 0x3c; ret; 
0x000e625e: insb byte ptr es:[edi], dx; and al, 0x3c; add esp, 0x40; ret; 
0x0002d8ae: insb byte ptr es:[edi], dx; and al, 0x40; add esp, 0x7c; ret; 
0x000d7dd2: insb byte ptr es:[edi], dx; and al, 0x48; add esp, 0x4c; ret 0x1c; 
0x0011b5c7: insb byte ptr es:[edi], dx; and al, 0x48; add esp, 0x4c; ret 8; 
0x0001a337: insb byte ptr es:[edi], dx; and al, 0x48; add esp, 0x4c; ret; 
0x00054a14: insb byte ptr es:[edi], dx; and al, 0x58; add esp, 0x5c; ret; 
0x000e60b6: insb byte ptr es:[edi], dx; and al, 0x60; add esp, 0x64; ret; 
0x0011c328: insb byte ptr es:[edi], dx; and al, 0x68; add esp, 0x6c; ret 0xc; 
0x00023517: insb byte ptr es:[edi], dx; and al, 0x68; add esp, 0x6c; ret 8; 
0x00066348: insb byte ptr es:[edi], dx; and al, 0x68; add esp, 0x6c; ret; 
0x0002d8ec: insb byte ptr es:[edi], dx; and al, 0x78; add esp, 0x7c; fsubp st(1); ret; 
0x0002d865: insb byte ptr es:[edi], dx; and al, 0x78; add esp, 0x7c; ret; 
0x0007ebff: insb byte ptr es:[edi], dx; and al, 0xc; add esp, 0x10; ret; 
0x000eba25: insb byte ptr es:[edi], dx; and al, 0xc; mov dword ptr [edi + 8], eax; mov edi, dword ptr [esp + 8]; add esp, 0x10; ret; 
0x0002d9a5: insb byte ptr es:[edi], dx; and al, 4; fscale; fstp st(1); ret; 
0x0002da1b: insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [eax], ecx; ret; 
0x0001e1f5: insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp + 8], eax; mov eax, dword ptr [edi + 0xc]; mov dword ptr [esp], eax; call dword ptr [edi + 4]; 
0x0001cdca: insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp + 8], eax; mov eax, dword ptr [esi + 0xc]; mov dword ptr [esp], eax; call dword ptr [esi + 4]; 
0x00079532: insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp + 8], edx; call eax; 
0x00116498: insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x001134e7: insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp], edi; call dword ptr [eax + 0x18]; 
0x001185c4: insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x000317cd: insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp], edi; mov dword ptr [esp + 8], edx; call esi; 
0x000a5cd5: insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp], edx; call edi; 
0x0006526c: insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x00066e73: insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x2c]; 
0x0007167b: insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp], esi; call dword ptr [edx + 0x38]; 
0x00031681: insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp], esi; mov dword ptr [esp + 8], ecx; call edi; 
0x0006ceb7: insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp], esi; sub eax, ebp; mov dword ptr [esp + 8], eax; call dword ptr [edx + 0x38]; 
0x0007c198: insb byte ptr es:[edi], dx; and al, 4; mov eax, dword ptr [esi + 0x24]; mov dword ptr [esp], eax; call dword ptr [esi + 0x1c]; 
0x00114966: insb byte ptr es:[edi], dx; and al, 4; mov eax, dword ptr [esi]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x0002d7da: insb byte ptr es:[edi], dx; and al, 4; ret; 
0x0002dd56: insb byte ptr es:[edi], dx; and al, 4; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0002692e: insb byte ptr es:[edi], dx; and al, 8; add esp, 0xc; ret; 
0x0004245f: insb byte ptr es:[edi], dx; and al, 8; mov dword ptr [esp + 4], eax; call dword ptr [ecx + 0x1c]; 
0x0006aed7: insb byte ptr es:[edi], dx; and al, 8; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0011b681: insb byte ptr es:[edi], dx; and al, 8; mov dword ptr [esp + 4], esi; mov dword ptr [esp + 0x10], ecx; mov dword ptr [esp], eax; call dword ptr [edx]; 
0x00066880: insb byte ptr es:[edi], dx; and al, 8; mov dword ptr [esp], edx; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x1c]; 
0x00066c77: insb byte ptr es:[edi], dx; and al, 8; mov dword ptr [esp], esi; mov dword ptr [esp + 0x10], edx; mov dword ptr [esp + 0xc], 0; call dword ptr [eax + 0x24]; 
0x000f3b5b: insb byte ptr es:[edi], dx; and al, 8; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x1000; ret; 
0x000f3abb: insb byte ptr es:[edi], dx; and al, 8; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x100; ret; 
0x000f3a1b: insb byte ptr es:[edi], dx; and al, 8; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x2000; ret; 
0x000f379b: insb byte ptr es:[edi], dx; and al, 8; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x200; ret; 
0x000f38db: insb byte ptr es:[edi], dx; and al, 8; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x4000; ret; 
0x000f351b: insb byte ptr es:[edi], dx; and al, 8; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x400; ret; 
0x000f383b: insb byte ptr es:[edi], dx; and al, 8; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x8000; ret; 
0x000f35bb: insb byte ptr es:[edi], dx; and al, 8; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 1; ret; 
0x000f365b: insb byte ptr es:[edi], dx; and al, 8; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 2; ret; 
0x000f397b: insb byte ptr es:[edi], dx; and al, 8; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 4; ret; 
0x000f347b: insb byte ptr es:[edi], dx; and al, 8; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 8; ret; 
0x000fdbe6: insb byte ptr es:[edi], dx; and byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00178a6c: insb byte ptr es:[edi], dx; cwde; add byte ptr [eax], al; mov al, 0x2e; out dx, eax; call dword ptr [esi]; 
0x001896e1: insb byte ptr es:[edi], dx; hlt; jmp dword ptr [edi + 2]; 
0x0017cf44: insb byte ptr es:[edi], dx; hlt; out dx, eax; call dword ptr [edx]; 
0x001682d1: insb byte ptr es:[edi], dx; in al, dx; jmp esp; 
0x00168829: insb byte ptr es:[edi], dx; in eax, dx; jmp dword ptr [eax - 0x3f]; 
0x00168821: insb byte ptr es:[edi], dx; in eax, dx; jmp dword ptr [eax]; 
0x0017326c: insb byte ptr es:[edi], dx; inc eax; add byte ptr [eax], al; push eax; add al, 0xec; call dword ptr [edi + 1]; 
0x00199324: insb byte ptr es:[edi], dx; inc esp; clc; jmp dword ptr [eax]; 
0x0016a221: insb byte ptr es:[edi], dx; int1; jmp dword ptr [eax + 0x60]; 
0x0018fa3d: insb byte ptr es:[edi], dx; jp 0x18fa35; jmp dword ptr [edx]; 
0x0003f9b4: insb byte ptr es:[edi], dx; lea ecx, dword ptr [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0018a31c: insb byte ptr es:[edi], dx; lodsb al, byte ptr [esi]; add dword ptr [eax], eax; aam 0xf5; hlt; call dword ptr [eax]; 
0x0016d094: insb byte ptr es:[edi], dx; mov bh, 2; add byte ptr [ecx + esi*4 - 7], ah; jmp dword ptr [eax]; 
0x0003f899: insb byte ptr es:[edi], dx; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0009860d: insb byte ptr es:[edi], dx; mov esi, dword ptr [esp + 0x70]; mov edi, dword ptr [esp + 0x74]; mov ebp, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x0019ae6c: insb byte ptr es:[edi], dx; mov esp, 0xb2800002; clc; call dword ptr [esi + 1]; 
0x0011c3e8: insb byte ptr es:[edi], dx; or byte ptr [eax], al; mov eax, dword ptr [ecx - 0x58]; lea edx, dword ptr [ecx + 0x33ac]; mov dword ptr gs:[eax], edx; ret; 
0x0016ebf4: insb byte ptr es:[edi], dx; or byte ptr [ecx], al; add byte ptr [eax + esi], dl; cld; jmp dword ptr [eax + 9]; 
0x00170684: insb byte ptr es:[edi], dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018793e: insb byte ptr es:[edi], dx; or cl, byte ptr [esi]; add al, 0xc7; ret; 
0x0017b2ea: insb byte ptr es:[edi], dx; out dx, eax; jmp dword ptr [edx]; 
0x0001d438: insb byte ptr es:[edi], dx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0018d68f: insb byte ptr es:[edi], dx; push cs; adc al, 0x41; ret; 
0x00197715: insb byte ptr es:[edi], dx; push cs; add al, 0xc6; ret; 
0x0011c32d: insb byte ptr es:[edi], dx; ret 0xc; 
0x0002db03: insb byte ptr es:[edi], dx; ret 0xf; 
0x0002351c: insb byte ptr es:[edi], dx; ret 8; 
0x0006634d: insb byte ptr es:[edi], dx; ret; 
0x0018a16c: insb byte ptr es:[edi], dx; scasd eax, dword ptr es:[edi]; add dword ptr [eax], eax; sar byte ptr [esi], 0xfa; call dword ptr [eax]; 
0x000fe8a2: insb byte ptr es:[edi], dx; sub al, 0; add byte ptr [ecx - 0x373edbec], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x000fe87f: insb byte ptr es:[edi], dx; sub al, 0; add byte ptr [edx], al; add esp, 0x18; pop ebx; ret; 
0x000f0d51: insb byte ptr es:[edi], dx; xchg bl, bh; push ebx; ret; 
0x001902cd: insb byte ptr es:[edi], dx; xchg ch, dh; jmp dword ptr [edx]; 
0x0003f852: insb byte ptr es:[edi], dx; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0016c4b5: insd dword ptr es:[edi], dx; add al, byte ptr [eax]; hlt; test al, bh; jmp eax; 
0x0018d98d: insd dword ptr es:[edi], dx; add dword ptr [edx], ecx; ret; 
0x0016edc1: insd dword ptr es:[edi], dx; cld; dec dword ptr [edx + eax*4 + 0x6d540002]; cld; jmp esp; 
0x0016edc9: insd dword ptr es:[edi], dx; cld; jmp esp; 
0x000ef589: insd dword ptr es:[edi], dx; cmp cl, byte ptr [ebx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0017b3b8: insd dword ptr es:[edi], dx; imul bh; call dword ptr [eax]; 
0x0017b238: insd dword ptr es:[edi], dx; imul edi; call dword ptr [eax]; 
0x001682e1: insd dword ptr es:[edi], dx; in al, dx; jmp dword ptr [eax]; 
0x000f7a59: insd dword ptr es:[edi], dx; or al, 0x8b; inc ebp; adc al, 0x39; ret 0xf67c; 
0x00170175: insd dword ptr es:[edi], dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00189b17: insd dword ptr es:[edi], dx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0017b28a: insd dword ptr es:[edi], dx; out dx, eax; jmp dword ptr [edx]; 
0x001704ea: insd dword ptr es:[edi], dx; push cs; add al, 0xc6; ret; 
0x00094899: insd dword ptr es:[edi], dx; pushal; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00001b14: insd dword ptr es:[edi], dx; ret 0x1bb7; 
0x00191ba0: insd dword ptr es:[edi], dx; sal esi, 1; call dword ptr [eax]; 
0x0016e161: insd dword ptr es:[edi], dx; sti; call dword ptr [eax + 0x1b]; 
0x0016e179: insd dword ptr es:[edi], dx; sti; ljmp ptr [ebx + ebx + 0x6e340003]; sti; jmp eax; 
0x00133435: insd dword ptr es:[edi], dx; sub al, 3; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00131902: insd dword ptr es:[edi], dx; test bh, bh; inc dword ptr [ecx + 0x716eec3]; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x0017a2b5: insd dword ptr es:[edi], dx; xor ebp, edi; jmp dword ptr [edx]; 
0x00169e48: insd dword ptr es:[edi], dx; xor ecx, esi; call esp; 
0x0017bf35: int 0; add byte ptr [eax - 0xd], bh; cld; jmp dword ptr [ebx]; 
0x000b90e7: int 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011d19f: int 0x19; cld; jmp dword ptr [esi - 0x7d]; 
0x000f1329: int 0x1c; or eax, dword ptr [eax]; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000e0a29: int 0x25; or al, 0; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00069531: int 0x29; ret 0xe75; 
0x00001a65: int 0x4f; jmp edx; 
0x0009679d: int 0x5b; mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x0002df35: int 0x80; 
0x000de83a: int 0x80; mov esi, eax; xchg edi, ebx; mov eax, 5; call dword ptr gs:[0x10]; 
0x000eeaf1: int 0x80; pop ebp; pop edi; pop esi; pop ebx; ret; 
0x000de7f7: int 0x80; xchg edi, ebx; mov eax, 5; call dword ptr gs:[0x10]; 
0x000a15d4: int 0x89; ret 0x4aeb; 
0x001591d3: int 0xe0; fdivr st(4); test al, 0x97; xchg eax, esp; ret; 
0x001720d1: int 0xeb; call dword ptr [edx]; 
0x0017b328: int 0xf6; out dx, eax; call dword ptr [eax]; 
0x0019779d: int 0xf7; jmp dword ptr [esi]; 
0x0017b1a8: int 0xf7; out dx, eax; call dword ptr [eax]; 
0x0016c819: int 0xf8; jmp dword ptr [eax - 0x7e]; 
0x0012ff02: int 0xf; cwde; ror dword ptr [edi], -0x6e; ret 0xb60f; 
0x0012fb74: int 0xf; test dword ptr [eax + eax + 0xf660000], esp; out dx, eax; call dword ptr [eax - 0x7cef397d]; ret 0x8910; 
0x0005a787: int 0xfb; dec dword ptr [ecx - 0x106b7b]; call dword ptr [ecx - 0x17]; 
0x00165da1: int 0xfc; call dword ptr [0x35fffcce]; into; cld; call dword ptr [ebp - 0x32]; 
0x00165db1: int 0xfc; call dword ptr [edx]; 
0x00165e11: int 0xfc; inc dword ptr [eax]; into; cld; jmp dword ptr [eax]; 
0x00165e01: int 0xfc; inc dword ptr [ebx]; into; cld; jmp dword ptr [ebx]; 
0x00165df1: int 0xfc; inc dword ptr [esi]; into; cld; jmp dword ptr [esi]; 
0x001356eb: int 0xfc; jmp dword ptr [esi - 0x70]; 
0x0005eeea: int 0xff; dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0xe373]; jmp dword ptr [ebp - 0x77]; 
0x0005ef9b: int 0xff; jmp dword ptr [esi - 0x70]; 
0x0016a95d: int 1; add ch, dh; out 0xf3, al; jmp dword ptr [eax - 0x33]; 
0x0016d45d: int 2; add al, dl; hlt; stc; jmp dword ptr [eax]; 
0x0016d42d: int 2; add byte ptr [edx + esi*8 - 7], ah; push dword ptr [eax + 0x140002ce]; stc; call esp; 
0x00168ffd: int1; add byte ptr [eax], al; ret 0xeffa; 
0x001939c1: int1; add dword ptr [eax], eax; in al, dx; or bh, dh; call dword ptr [esi]; 
0x00177e75: int1; add dword ptr [edx], ecx; ret; 
0x00184d6c: int1; add eax, 0x59000000; push cs; or byte ptr [ebx + 0x40e4902], al; ret; 
0x00169bd2: int1; call dword ptr [eax + 0x4a]; 
0x00169f8a: int1; call dword ptr [eax + 0x52]; 
0x0016a102: int1; call dword ptr [eax + 0x5a]; 
0x0016a30a: int1; call dword ptr [eax + 0x66]; 
0x0016a422: int1; call dword ptr [eax + 0x6b]; 
0x001832f2: int1; call dword ptr [eax + 3]; 
0x0016a18a: int1; call dword ptr [eax]; 
0x00118ffe: int1; call dword ptr [ebp - 0x77]; 
0x001838a6: int1; call dword ptr [ebx + 1]; 
0x00182c1a: int1; call dword ptr [ebx]; 
0x0018383e: int1; call dword ptr [edx]; 
0x00182d8a: int1; call dword ptr [esi]; 
0x00169bc2: int1; call eax; 
0x00184542: int1; call edi; 
0x00169be2: int1; call esp; 
0x0016a21a: int1; dec dword ptr [eax + 1]; add ah, al; insb byte ptr es:[edi], dx; int1; jmp dword ptr [eax + 0x60]; 
0x00169f9a: int1; dec dword ptr [edx + edx*2 + 0x44240001]; int1; jmp esp; 
0x00168bd0: int1; fucomi st(6); call dword ptr [eax]; 
0x0016a3d2: int1; inc dword ptr [eax + 0x6a]; add dword ptr [eax], eax; movsb byte ptr es:[edi], byte ptr [esi]; mov cl, 0xf1; jmp dword ptr [eax + 0x6a]; 
0x00169c92: int1; inc dword ptr [ebp + esi + 0x2e5a0001]; int1; push dword ptr [ebp + esi + 0x2e6a0001]; int1; jmp esp; 
0x000f7323: int1; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00169f02: int1; inc dword ptr [esi + ecx*2 + 1]; add byte ptr [ebx + esi], dl; int1; jmp dword ptr [eax + 0x4e]; 
0x0016a2a2: int1; inc esp; arpl word ptr [ecx], ax; add byte ptr [eax + eax*4 - 0xf], ah; jmp esp; 
0x00169f0a: int1; jmp dword ptr [eax + 0x4e]; 
0x0016a222: int1; jmp dword ptr [eax + 0x60]; 
0x0016a332: int1; jmp dword ptr [eax + 0x67]; 
0x0016a3da: int1; jmp dword ptr [eax + 0x6a]; 
0x0016a392: int1; jmp dword ptr [eax]; 
0x00008852: int1; jmp dword ptr [ebp + 0x56]; 
0x001175d8: int1; jmp dword ptr [ebp - 0x7d]; 
0x0018221a: int1; jmp dword ptr [ebx]; 
0x00183f3a: int1; jmp dword ptr [edi]; 
0x00183982: int1; jmp dword ptr [edx + 1]; 
0x00008382: int1; jmp dword ptr [edx]; 
0x00183912: int1; jmp dword ptr [esi]; 
0x0016a202: int1; jmp eax; 
0x00008422: int1; jmp edi; 
0x00183442: int1; jmp edx; 
0x00182892: int1; jmp esi; 
0x00169c6a: int1; jmp esp; 
0x0016a52a: int1; ljmp ptr [eax + 0x14000170]; ret; 
0x00169bda: int1; ljmp ptr [eax + 0x7400014a]; adc al, 0xf1; call esp; 
0x0016a41a: int1; ljmp ptr [ebx + ebp*2]; add dword ptr [eax], eax; inc esp; mov bl, 0xf1; call dword ptr [eax + 0x6b]; 
0x0016a3b2: int1; ljmp ptr [ecx + ebp*2 - 0x4f8bffff]; int1; call esp; 
0x00003b53: int1; mov dl, 0x1e; ret; 
0x000dea7e: int1; mov dl, 4; add byte ptr [ecx + 0xc4572c3], al; add dh, dh; ret 0x8940; 
0x000d1952: int1; mov dword ptr [edi + edx*8 + 4], ecx; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00133127: int1; mov dword ptr [edx - 7], eax; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0010b287: int1; mov ebp, dword ptr gs:[edx]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000b3912: int1; mov edi, dword ptr gs:[edx]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0006a2b0: int1; mov edx, dword ptr [ebp - 0x51c]; nop; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000c6b26: int1; mov edx, dword ptr [edx + 8]; pop ebx; pop esi; mov eax, edx; ret; 
0x000e82a3: int1; mov edx, eax; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000ca108: int1; or byte ptr [eax + 0x1a], 8; xor eax, eax; ret; 
0x0009d702: int1; out 0xff, al; jmp dword ptr [esi - 0x70]; 
0x0016aeb0: int1; out dx, al; hlt; call dword ptr [eax]; 
0x0017b748: int1; out dx, eax; call dword ptr [eax]; 
0x0017bce8: int1; out dx, eax; out dx, eax; call dword ptr [eax]; 
0x001478b2: int1; pop edi; ret; 
0x00123eb6: int1; pop es; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00123ed8: int1; pop es; add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp - 0x39]; 
0x00083426: int1; pop esi; pop edi; ret; 
0x000c5c36: int1; pop esi; ret; 
0x000b3e37: int1; push cs; add byte ptr [edi + 0x8db8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b3eee: int1; push cs; add byte ptr [edi + 0xdcb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00158d27: int1; push ds; and bh, byte ptr [esi - 0x5e0466e]; xchg dword ptr [esp + eax + 0x6fa9ce9d], esp; ret; 
0x00169f4a: int1; push dword ptr [eax + 0x3400014f]; cmp esi, ecx; call eax; 
0x0018367a: int1; push dword ptr [eax + eax]; add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e7202], al; ret; 
0x00169d1a: int1; push dword ptr [eax + edi + 0x2f590001]; int1; jmp esp; 
0x0016a302: int1; push dword ptr [eax]; add word ptr [eax], ax; mov ah, 0x89; int1; call dword ptr [eax + 0x66]; 
0x00169c9a: int1; push dword ptr [ebp + esi + 0x2e6a0001]; int1; jmp esp; 
0x00169d9a: int1; push dword ptr [ebx + edi + 0x30410001]; int1; jmp esp; 
0x00169e9a: int1; push dword ptr [ecx + eax*2 + 0x32010001]; int1; jmp esp; 
0x0016a0fa: int1; push dword ptr [edx + ebx*2]; add dword ptr [eax], eax; in al, 0x5c; int1; call dword ptr [eax + 0x5a]; 
0x00169e1a: int1; push dword ptr [esi + edi + 0x31290001]; int1; jmp esp; 
0x0016a40a: int1; push esp; push 1; add ah, dl; mov dl, 0xf1; call dword ptr [eax]; 
0x000025a7: int1; ret; 
0x001468a7: int1; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x000232a6: int1; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0002f54e: int1; xor eax, eax; pop esi; pop edi; ret; 
0x001691d8: into; adc dh, al; jmp dword ptr [eax - 4]; 
0x0016d435: into; add al, byte ptr [eax]; adc al, 0xf3; stc; call esp; 
0x0013a45c: into; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0006a101: into; add byte ptr [eax + 0x32890000], al; pop esi; ret; 
0x00124aaa: into; add byte ptr [eax], al; add byte ptr [ebx - 0x76dfdbbc], cl; add al, 0x24; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 0x10]; 
0x0018c091: into; add dword ptr [eax], eax; dec esp; cmpsb byte ptr [esi], byte ptr es:[edi]; cmc; jmp eax; 
0x000f101e: into; add dword ptr [ecx - 0x76f3dba4], ecx; ret; 
0x00074d8b: into; add dword ptr [ecx], ebp; adc dword ptr [ecx - 0x7614fb90], ecx; call eax; 
0x000947e1: into; bsf edx, edx; call 0x129d77; add ecx, 0xc611a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000914e1: into; bsf edx, edx; call 0x129d77; add ecx, 0xc939a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008e7f3: into; bsf edx, edx; call 0x129d77; add ecx, 0xcbf34; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008d1c3: into; bsf edx, edx; call 0x129d77; add ecx, 0xcd404; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009498b: into; call 0x129d77; add ecx, 0xc5ff3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009496b: into; call 0x129d77; add ecx, 0xc6013; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009494e: into; call 0x129d77; add ecx, 0xc6030; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e9eb: into; call 0x129d77; add ecx, 0xcbdbf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e9cb: into; call 0x129d77; add ecx, 0xcbddf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e9ae: into; call 0x129d77; add ecx, 0xcbdfc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d3ab: into; call 0x129d77; add ecx, 0xcd29f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d38b: into; call 0x129d77; add ecx, 0xcd2bf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d36e: into; call 0x129d77; add ecx, 0xcd2dc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00165da9: into; cld; call dword ptr [ebp - 0x32]; 
0x00165e1d: into; cld; call dword ptr [ebx]; 
0x00165db9: into; cld; call dword ptr [edx - 0x32]; 
0x00166af0: into; cld; cld; jmp dword ptr [eax - 6]; 
0x00165de9: into; cld; dec dword ptr [ecx - 0x32]; cld; jmp esi; 
0x00165e19: into; cld; inc dword ptr [eax - 0x32]; cld; call dword ptr [ebx]; 
0x00165e09: into; cld; inc dword ptr [ebx - 0x32]; cld; jmp eax; 
0x00165df9: into; cld; inc dword ptr [esi - 0x32]; cld; jmp ebx; 
0x00165e15: into; cld; jmp dword ptr [eax]; 
0x00165e05: into; cld; jmp dword ptr [ebx]; 
0x00165df5: into; cld; jmp dword ptr [esi]; 
0x00165e0d: into; cld; jmp eax; 
0x00165dfd: into; cld; jmp ebx; 
0x00165ded: into; cld; jmp esi; 
0x00165db5: into; cld; push dword ptr [edx]; into; cld; call dword ptr [edx - 0x32]; 
0x00165dad: into; cld; push edx; int 0xfc; call dword ptr [edx]; 
0x001674b8: into; dec edx; std; lcall ptr [esi + 0x4b]; std; jmp esp; 
0x000d8dce: into; inc ecx; cli; dec dword ptr [ecx + 0x788d2434]; add eax, ebp; ret; 
0x0017724d: into; iretd; out dx, al; jmp dword ptr [edx]; 
0x00049e44: into; jmp dword ptr [ebp - 0x39]; 
0x000f0cc9: into; jmp dword ptr [ebp - 0x77]; 
0x0007dd13: into; jmp ebx; 
0x00097ee9: into; lea esi, dword ptr [esi]; pop esi; pop edi; pop ebp; ret; 
0x0011f396: into; mov dword ptr [edx + 0x14], esi; add ecx, eax; mov dword ptr [edx + 0xc], ecx; pop esi; ret; 
0x00132e88: into; movdqa xmmword ptr [edx - 0x22], xmm0; movdqa xmmword ptr [edx - 0x12], xmm0; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x000e61bc: into; or eax, dword ptr [eax]; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00166cf8: into; or edi, ebp; lcall ptr [esi + 0xc]; std; call esp; 
0x00168d29: into; out dx, eax; call dword ptr [eax]; 
0x000949b8: into; pop edi; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00184af1: into; popfd; int1; jmp dword ptr [edx]; 
0x000176ae: into; push 6; add byte ptr [ebx - 0x1576d], cl; jmp dword ptr [ebp - 0x75]; 
0x00115d16: into; sbb al, 0x89; ret 0x808b; 
0x00178178: into; sti; call dword ptr [eax]; 
0x000e1488: into; xchg edi, ebx; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x000c55df: into; xchg edi, ebx; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0013a352: iretd; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0017c1d9: iretd; add byte ptr [eax], al; aam 0x92; out dx, eax; jmp dword ptr [edi]; 
0x000cb4b4: iretd; add byte ptr [eax], al; add byte ptr [ecx - 0x6f17dbfc], cl; mov bh, 0xf5; call dword ptr [edi + 0x56]; 
0x0017d654: iretd; add cl, byte ptr [edx]; push cs; adc al, 0x43; ret; 
0x0008ba0d: iretd; add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; lcall ptr [edi + 0x5b]; ret; 
0x0018c1e5: iretd; add dword ptr [eax], eax; clc; and edi, edx; call dword ptr [edi]; 
0x00134b2a: iretd; add edx, edi; lea eax, dword ptr [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134bba: iretd; add edx, edi; lea eax, dword ptr [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134c4a: iretd; add edx, edi; lea eax, dword ptr [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134cda: iretd; add edx, edi; lea eax, dword ptr [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134d6a: iretd; add edx, edi; lea eax, dword ptr [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134dfa: iretd; add edx, edi; lea eax, dword ptr [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013461a: iretd; add edx, edi; lea eax, dword ptr [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001346aa: iretd; add edx, edi; lea eax, dword ptr [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013473a: iretd; add edx, edi; lea eax, dword ptr [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001347ca: iretd; add edx, edi; lea eax, dword ptr [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013485a: iretd; add edx, edi; lea eax, dword ptr [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001348ea: iretd; add edx, edi; lea eax, dword ptr [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013497a: iretd; add edx, edi; lea eax, dword ptr [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134a0a: iretd; add edx, edi; lea eax, dword ptr [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134a9a: iretd; add edx, edi; lea eax, dword ptr [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008e9ac: iretd; add esi, ecx; call 0x129d77; add ecx, 0xcbdfc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d36c: iretd; add esi, ecx; call 0x129d77; add ecx, 0xcd2dc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0014ab40: iretd; add esp, 0x18; pop ebx; ret; 
0x0012d120: iretd; clc; dec dword ptr [ebx - 0xf775]; jmp dword ptr [ebp - 0x75]; 
0x00165fe1: iretd; cld; jmp dword ptr [eax]; 
0x00158cb3: iretd; dec ebx; ret 0xde9e; 
0x000de869: iretd; jmp dword ptr [ebp - 0x77]; 
0x00175b4d: iretd; mov bh, 0xee; jmp dword ptr [edx]; 
0x000024c2: iretd; mov ebx, edi; arpl cx, bx; mov ah, 0xc6; ret; 
0x000f1738: iretd; mov edi, dword ptr [ebp - 0x40c]; mov ecx, dword ptr [ebp - 0x3fc]; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00132e58: iretd; movdqa xmmword ptr [edx - 0x21], xmm0; movdqa xmmword ptr [edx - 0x11], xmm0; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001700d6: iretd; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017704a: iretd; out dx, al; jmp dword ptr [edx]; 
0x000eff2d: iretd; ret 0; 
0x0006aa36: iretd; ret; 
0x0016d279: iretd; stc; jmp eax; 
0x0016e4f1: iretd; sti; jmp esp; 
0x00194055: iretd; sub esi, esi; jmp dword ptr [edx]; 
0x00130cff: jecxz 0x130d06; add byte ptr [eax], al; pop ebx; ret; 
0x00133e39: jecxz 0x133dc8; mov dh, 0; add byte ptr [eax], al; add byte ptr [edi - 0x18], dl; sub eax, 0x81ffff5f; ret; 
0x00138379: jecxz 0x138308; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x00139359: jecxz 0x1392e8; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x0013a359: jecxz 0x13a2e8; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x0013c9a9: jecxz 0x13c938; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x0014898e: jecxz 0x148913; ret 0x6640; 
0x001589ed: jecxz 0x158a45; ret; 
0x00159bb5: jecxz 0x159bb6; jmp dword ptr [eax]; 
0x00165e00: jecxz 0x165dcf; cld; inc dword ptr [ebx]; into; cld; jmp dword ptr [ebx]; 
0x001660b8: jecxz 0x16608e; cld; call dword ptr [ebx]; 
0x001660b8: jecxz 0x16608e; cld; call dword ptr [ebx]; aad 0xfc; call dword ptr [ebx - 0x2b]; 
0x00166955: jecxz 0x166953; call eax; 
0x00166955: jecxz 0x166953; call eax; jecxz 0x166957; jmp dword ptr [eax - 0x1c]; 
0x00166959: jecxz 0x166957; jmp dword ptr [eax - 0x1c]; 
0x00168d95: jecxz 0x168d97; add ah, ah; shr edi, cl; push dword ptr [ebx - 0x2bdc0000]; out dx, eax; call eax; 
0x00168d9d: jecxz 0x168d9f; add byte ptr [esp + edx*8], ah; out dx, eax; call eax; 
0x00168f08: jecxz 0x168ef6; out dx, eax; jmp esp; 
0x0016ac8d: jecxz 0x16ac90; add byte ptr [eax], ah; ret 0xfff4; 
0x0016ac95: jecxz 0x16ac98; add byte ptr [edx], ch; ret 0xfff4; 
0x0016acb5: jecxz 0x16acb8; add ah, al; ret 0xfff4; 
0x0016bbf9: jecxz 0x16bbf2; call dword ptr [eax + 0x43]; 
0x0016d745: jecxz 0x16d749; add bl, bh; cli; push dword ptr [edx + 0x370b0002]; cli; jmp esp; 
0x0016d765: jecxz 0x16d769; add byte ptr [eax + edi], dh; cli; jmp esp; 
0x00177ce1: jecxz 0x177cbc; out dx, al; jmp dword ptr [edx]; 
0x00186375: jecxz 0x186369; call dword ptr [esi]; 
0x0018d4f9: jecxz 0x18d4f0; jmp dword ptr [edx]; 
0x0018d521: jecxz 0x18d518; call dword ptr [edi]; 
0x000024c1: jecxz 0x2492; mov ebx, edi; arpl cx, bx; mov ah, 0xc6; ret; 
0x0002fdd0: jecxz 0x2fd5b; pop ds; pop ebx; pop esi; pop edi; ret; 
0x0003e3c2: jecxz 0x3e3c3; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x00041ed4: jecxz 0x41f31; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x0005e7ad: jecxz 0x5e7ae; dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0xe373]; jmp dword ptr [ebp - 0x77]; 
0x0006867f: jecxz 0x68680; jmp dword ptr [ecx]; 
0x0007df6f: jecxz 0x7def4; ret 0x8304; 
0x0008d6c9: jecxz 0x8d6d1; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000ed698: jecxz 0xed69a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00166f17: jmp dword ptr [eax + 0x10]; 
0x001694cb: jmp dword ptr [eax + 0x11]; 
0x00166fef: jmp dword ptr [eax + 0x16]; 
0x001696e3: jmp dword ptr [eax + 0x1d]; 
0x00169733: jmp dword ptr [eax + 0x1f]; 
0x001671a7: jmp dword ptr [eax + 0x23]; 
0x0016f193: jmp dword ptr [eax + 0x24]; 
0x00169a6b: jmp dword ptr [eax + 0x27]; 
0x0016f1b3: jmp dword ptr [eax + 0x28]; 
0x0016b7bb: jmp dword ptr [eax + 0x2b]; 
0x00167193: jmp dword ptr [eax + 0x2c]; 
0x00167297: jmp dword ptr [eax + 0x2e]; 
0x0015a60f: jmp dword ptr [eax + 0x30]; 
0x0016b8cb: jmp dword ptr [eax + 0x31]; 
0x0015a63f: jmp dword ptr [eax + 0x32]; 
0x0015a67b: jmp dword ptr [eax + 0x33]; 
0x0015a70f: jmp dword ptr [eax + 0x36]; 
0x00167397: jmp dword ptr [eax + 0x38]; 
0x0016ba73: jmp dword ptr [eax + 0x39]; 
0x0016e7bb: jmp dword ptr [eax + 0x3a]; 
0x0016e7d3: jmp dword ptr [eax + 0x3f]; 
0x001692a3: jmp dword ptr [eax + 0x4000100]; 
0x0015a757: jmp dword ptr [eax + 0x44]; 
0x00167613: jmp dword ptr [eax + 0x46]; 
0x0015a7eb: jmp dword ptr [eax + 0x49]; 
0x0015a82b: jmp dword ptr [eax + 0x4b]; 
0x001676d3: jmp dword ptr [eax + 0x4e]; 
0x001676db: jmp dword ptr [eax + 0x4f]; 
0x0016779f: jmp dword ptr [eax + 0x50]; 
0x001677b3: jmp dword ptr [eax + 0x55]; 
0x0016bff3: jmp dword ptr [eax + 0x57]; 
0x0016a223: jmp dword ptr [eax + 0x60]; 
0x0016a333: jmp dword ptr [eax + 0x67]; 
0x0016c3a3: jmp dword ptr [eax + 0x69]; 
0x0016a3db: jmp dword ptr [eax + 0x6a]; 
0x0016c45b: jmp dword ptr [eax + 0x6c]; 
0x0016c49b: jmp dword ptr [eax + 0x6d]; 
0x0016c723: jmp dword ptr [eax + 0x7b]; 
0x00167c53: jmp dword ptr [eax + 0x7e]; 
0x00167ce3: jmp dword ptr [eax + 0x7f]; 
0x001693bb: jmp dword ptr [eax + 0xc]; 
0x00166e17: jmp dword ptr [eax + 0xd]; 
0x0016b37b: jmp dword ptr [eax + 0xf]; 
0x00175123: jmp dword ptr [eax + 1]; 
0x0017c33f: jmp dword ptr [eax + 2]; 
0x00166e37: jmp dword ptr [eax + 3]; 
0x0016fd17: jmp dword ptr [eax + 4]; 
0x00196ca3: jmp dword ptr [eax + 5]; 
0x0016ebfb: jmp dword ptr [eax + 9]; 
0x00168f13: jmp dword ptr [eax - 0x13]; 
0x001668fb: jmp dword ptr [eax - 0x16]; 
0x00166873: jmp dword ptr [eax - 0x18]; 
0x00166843: jmp dword ptr [eax - 0x19]; 
0x00168deb: jmp dword ptr [eax - 0x1b]; 
0x0016695b: jmp dword ptr [eax - 0x1c]; 
0x0016ac3b: jmp dword ptr [eax - 0x1f]; 
0x0016d6ab: jmp dword ptr [eax - 0x20]; 
0x00166787: jmp dword ptr [eax - 0x25]; 
0x0016658f: jmp dword ptr [eax - 0x28]; 
0x00166293: jmp dword ptr [eax - 0x2a]; 
0x00166283: jmp dword ptr [eax - 0x2b]; 
0x0016626f: jmp dword ptr [eax - 0x2c]; 
0x0016a963: jmp dword ptr [eax - 0x33]; 
0x0016d3db: jmp dword ptr [eax - 0x36]; 
0x0016a8cb: jmp dword ptr [eax - 0x37]; 
0x0016a84b: jmp dword ptr [eax - 0x3b]; 
0x0016d2eb: jmp dword ptr [eax - 0x3c]; 
0x0016883b: jmp dword ptr [eax - 0x3d]; 
0x0016882b: jmp dword ptr [eax - 0x3f]; 
0x0016d22b: jmp dword ptr [eax - 0x40]; 
0x0016d1db: jmp dword ptr [eax - 0x42]; 
0x0016858b: jmp dword ptr [eax - 0x4d]; 
0x0016cfb3: jmp dword ptr [eax - 0x4e]; 
0x00168503: jmp dword ptr [eax - 0x4f]; 
0x0016849b: jmp dword ptr [eax - 0x53]; 
0x0016ee1b: jmp dword ptr [eax - 0x56]; 
0x001683d3: jmp dword ptr [eax - 0x58]; 
0x00168373: jmp dword ptr [eax - 0x5a]; 
0x001681d3: jmp dword ptr [eax - 0x61]; 
0x0016cc1b: jmp dword ptr [eax - 0x67]; 
0x00167993: jmp dword ptr [eax - 0x69]; 
0x0016c8cb: jmp dword ptr [eax - 0x7b]; 
0x0016c81b: jmp dword ptr [eax - 0x7e]; 
0x00169063: jmp dword ptr [eax - 0xc]; 
0x00166bb7: jmp dword ptr [eax - 0xf]; 
0x000bd89d: jmp dword ptr [eax - 1]; 
0x001691db: jmp dword ptr [eax - 4]; 
0x00166af3: jmp dword ptr [eax - 6]; 
0x00166ac3: jmp dword ptr [eax - 7]; 
0x0016daeb: jmp dword ptr [eax - 8]; 
0x0016dabb: jmp dword ptr [eax - 9]; 
0x00018972: jmp dword ptr [eax]; 
0x0001b44a: jmp dword ptr [ebp + 0x33]; 
0x00008853: jmp dword ptr [ebp + 0x56]; 
0x001874af: jmp dword ptr [ebp + 2]; 
0x00019b60: jmp dword ptr [ebp + 3]; 
0x0018526f: jmp dword ptr [ebp + 5]; 
0x00166747: jmp dword ptr [ebp - 0x25]; 
0x00166253: jmp dword ptr [ebp - 0x2a]; 
0x00166243: jmp dword ptr [ebp - 0x2b]; 
0x0016622f: jmp dword ptr [ebp - 0x2c]; 
0x0015a363: jmp dword ptr [ebp - 0x37]; 
0x0001a209: jmp dword ptr [ebp - 0x39]; 
0x000b8140: jmp dword ptr [ebp - 0x5f]; 
0x000176b7: jmp dword ptr [ebp - 0x75]; 
0x0001c911: jmp dword ptr [ebp - 0x77]; 
0x0004e98f: jmp dword ptr [ebp - 0x7b]; 
0x000196f0: jmp dword ptr [ebp - 0x7d]; 
0x0005d3a3: jmp dword ptr [ebp]; 
0x0015a597: jmp dword ptr [ebx + 0x38]; 
0x001230e0: jmp dword ptr [ebx + 0x6b]; 
0x00016ec0: jmp dword ptr [ebx + 0xc]; 
0x00183177: jmp dword ptr [ebx + 1]; 
0x00016eb6: jmp dword ptr [ebx + 8]; 
0x00159b97: jmp dword ptr [ebx - 0x18]; 
0x001665af: jmp dword ptr [ebx - 0x26]; 
0x0016633f: jmp dword ptr [ebx - 0x28]; 
0x0016632b: jmp dword ptr [ebx - 0x29]; 
0x00165e4f: jmp dword ptr [ebx - 0x2e]; 
0x00165e3b: jmp dword ptr [ebx - 0x2f]; 
0x00158792: jmp dword ptr [ebx - 0x40]; 
0x001147ff: jmp dword ptr [ebx - 0x46]; 
0x000024ff: jmp dword ptr [ebx]; 
0x00001f4b: jmp dword ptr [ecx + 0x7f]; 
0x0017116b: jmp dword ptr [ecx + 0xa]; 
0x0017a857: jmp dword ptr [ecx + 1]; 
0x001590e3: jmp dword ptr [ecx - 0x69]; 
0x0004e5b1: jmp dword ptr [ecx]; 
0x00049e57: jmp dword ptr [edi + 0xf]; 
0x00197b93: jmp dword ptr [edi + 1]; 
0x001896e3: jmp dword ptr [edi + 2]; 
0x0018655f: jmp dword ptr [edi + 3]; 
0x0017c4a7: jmp dword ptr [edi + 4]; 
0x000496d8: jmp dword ptr [edi - 0x73]; 
0x00170baf: jmp dword ptr [edi]; 
0x00166fa3: jmp dword ptr [edx + 0x1e]; 
0x0016732b: jmp dword ptr [edx + 0x3b]; 
0x00167423: jmp dword ptr [edx + 0x3c]; 
0x0016775f: jmp dword ptr [edx + 0x5c]; 
0x0016776b: jmp dword ptr [edx + 0x5d]; 
0x0010d909: jmp dword ptr [edx + 0xf]; 
0x0017cd3b: jmp dword ptr [edx + 1]; 
0x00179bbf: jmp dword ptr [edx + 5]; 
0x0016696b: jmp dword ptr [edx - 0x13]; 
0x001667bb: jmp dword ptr [edx - 0x18]; 
0x00159130: jmp dword ptr [edx - 0x71]; 
0x00166a3b: jmp dword ptr [edx - 6]; 
0x00008383: jmp dword ptr [edx]; 
0x00167183: jmp dword ptr [esi + 0x2c]; 
0x00167287: jmp dword ptr [esi + 0x2e]; 
0x000fb302: jmp dword ptr [esi + 0x31]; 
0x0002bd06: jmp dword ptr [esi + 0x39]; 
0x001896b3: jmp dword ptr [esi + 0xb]; 
0x00048655: jmp dword ptr [esi + 0xf]; 
0x001892cf: jmp dword ptr [esi + 1]; 
0x00178df7: jmp dword ptr [esi + 2]; 
0x00187fff: jmp dword ptr [esi + 3]; 
0x0016656f: jmp dword ptr [esi - 0x28]; 
0x0007b765: jmp dword ptr [esi - 0x39]; 
0x0010d729: jmp dword ptr [esi - 0x3f]; 
0x00045717: jmp dword ptr [esi - 0x41]; 
0x0006a650: jmp dword ptr [esi - 0x43]; 
0x000ccf7b: jmp dword ptr [esi - 0x55]; 
0x001678b7: jmp dword ptr [esi - 0x6f]; 
0x000199dd: jmp dword ptr [esi - 0x70]; 
0x00052099: jmp dword ptr [esi - 0x77]; 
0x0006faf7: jmp dword ptr [esi - 0x7b]; 
0x000294fb: jmp dword ptr [esi - 0x7d]; 
0x00111480: jmp dword ptr [esi - 0x7f]; 
0x000ef035: jmp dword ptr [esi]; 
0x000278e3: jmp eax; 
0x0007dd14: jmp ebx; 
0x0003b610: jmp ecx; 
0x00008423: jmp edi; 
0x00001a67: jmp edx; 
0x0007b101: jmp esi; 
0x00002a55: jmp esp; 
0x0010357a: jno 0x103580; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x0010d8fb: jno 0x10d90f; std; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x0011fda5: jno 0x11fd96; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00132c2a: jno 0x132c2b; inc dword ptr [ecx + 0x331f3c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00142bd3: jno 0x142bd3; inc dword ptr [ecx + 0x6041ec3]; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x001482fb: jno 0x1482ff; add byte ptr [eax], al; xor eax, eax; ret; 
0x00158845: jno 0x158843; out 0x95, eax; push es; cld; ret; 
0x0016c56d: jno 0x16c571; add byte ptr [eax + edx*4 - 8], dh; call dword ptr [eax + 0x71]; 
0x0016d851: jno 0x16d84d; call eax; 
0x0016e1b1: jno 0x16e1ae; call eax; 
0x00177eee: jno 0x177efe; add al, 0xc6; ret; 
0x00178cb1: jno 0x178cbd; ret; 
0x00179265: jno 0x179266; out dx, al; jmp dword ptr [edx]; 
0x0017ae5a: jno 0x17ae66; push cs; add al, 0xc6; ret; 
0x0017b1c9: jno 0x17b230; out dx, eax; jmp dword ptr [edx]; 
0x0017bb89: jno 0x17bb0c; out dx, eax; jmp dword ptr [edx]; 
0x0017c327: jno 0x17c333; push cs; add al, 0xc6; ret; 
0x00186dfe: jno 0x186df2; jmp dword ptr [edx]; 
0x00186e8a: jno 0x186e7e; jmp dword ptr [edx]; 
0x0018a8d5: jno 0x18a8e1; push cs; add al, 0xc7; ret; 
0x0018df8e: jno 0x18df9e; add al, 0xc6; ret; 
0x00195e31: jno 0x195e3d; ret; 
0x0019703a: jno 0x19704a; add al, 0xc6; ret; 
0x0000213f: jno 0x218a; ret 0x1dd4; 
0x0003123b: jno 0x31269; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000036cb: jno 0x36f7; xchg eax, ebp; ret; 
0x0007a47c: jno 0x7a47a; cmovne eax, esi; pop esi; ret; 
0x00009f89: jno 0x9f96; add byte ptr [esi + 2], dl; add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; ret 0x11; 
0x000b9a36: jno 0xb99c8; mov eax, 0x20; ret; 
0x000ca0e4: jno 0xca0e7; cmove eax, esi; pop esi; pop edi; ret; 
0x000ce0f2: jno 0xce104; mov eax, dword ptr [eax + 0x10]; mov dword ptr [edx + 0x10], eax; xor eax, eax; pop esi; ret; 
0x000e8c4b: jno 0xe8c04; idiv edi; add esp, 0x18; mov eax, 1; pop ebx; ret; 
0x000ef277: jno 0xef279; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f2c0c: jno 0xf2c11; add byte ptr [ecx + 0xb03e5c3], al; add byte ptr [ecx - 0x8fbdb8c], cl; ret 0xff80; 
0x0011e240: jnp 0x11e214; sti; dec dword ptr [ecx - 0x17fbdbbc]; ret; 
0x001486c4: jnp 0x148653; inc ecx; push es; ret; 
0x00167c2d: jnp 0x167c2f; add ah, al; xor ebp, ebx; jmp esp; 
0x0016b9b9: jnp 0x16b9b2; call dword ptr [eax + 0x35]; 
0x0016c3c1: jnp 0x16c3bb; inc eax; imul eax, dword ptr [edx], 0xf87b5400; call esp; 
0x0016c3c9: jnp 0x16c3c3; call esp; 
0x0016c71d: jnp 0x16c721; add byte ptr [ebx + edi*4], al; clc; jmp dword ptr [eax + 0x7b]; 
0x0017173e: jnp 0x17174a; push cs; add al, 0xc6; ret; 
0x00174aef: jnp 0x174afb; push cs; add al, 0xc6; ret; 
0x00175216: jnp 0x175226; add al, 0xc6; ret; 
0x00175d21: jnp 0x175cdd; out dx, al; jmp dword ptr [edx]; 
0x00177ad5: jnp 0x177aaf; out dx, al; jmp dword ptr [edx]; 
0x0017a56e: jnp 0x17a57a; push cs; add al, 0xc6; ret; 
0x0017b7fa: jnp 0x17b7eb; jmp dword ptr [edx]; 
0x0017e24c: jnp 0x17e258; ret; 
0x0018fade: jnp 0x18fad5; jmp dword ptr [edx]; 
0x0018fb4e: jnp 0x18fb45; jmp dword ptr [edx]; 
0x0018ff95: jnp 0x18ff1b; cmc; jmp dword ptr [edx]; 
0x00191c5c: jnp 0x191c68; push cs; adc al, 0x43; ret; 
0x00198ea3: jnp 0x198eaf; push cs; adc al, 0x41; ret; 
0x000342af: jnp 0x24b38; jmp dword ptr [ebp - 0x39]; 
0x00035926: jnp 0x358ab; ret 0x3b01; 
0x00070427: jnp 0x45322472; sbb al, 0x89; ret 0xfac1; 
0x00094c00: jnp 0x5b15704a; pop esi; ret; 
0x00094c84: jnp 0x5b1570ce; pop esi; ret; 
0x00094dc4: jnp 0x5b15720e; pop esi; ret; 
0x0009177d: jnp 0x5e113bc7; ret; 
0x00091801: jnp 0x5e113c4b; ret; 
0x00091901: jnp 0x5e113d4b; ret; 
0x000725f4: jnp 0x7266d; or eax, dword ptr [eax]; add ebx, 0x1309fc; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x30]; 
0x0005557f: jnp 0x749079a1; and al, 4; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000b3f07: jnp 0x74966329; and al, 4; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000de8bf: jnp 0x74990ce1; and al, 4; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000dea32: jnp 0x74990e54; and al, 4; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000e0aef: jnp 0x74992f11; and al, 4; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000eedbf: jnp 0x749a11e1; and al, 4; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000ef017: jnp 0x749a1439; and al, 4; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0008286e: jnp 0x7c934ca8; and al, 4; add esp, 8; ret; 
0x00064f80: jnp 0x8b1e73ca; push esp; and al, 0x1c; add esp, 0x2c; ret; 
0x0008e7f8: jnp 0x8e7af; or dword ptr [eax], eax; add ecx, 0xcbf34; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0002e440: jnp 0x9308ca; add byte ptr [eax], al; add esp, 0x118; pop ebx; ret; 
0x0002e4b0: jnp 0x93093a; add byte ptr [eax], al; add esp, 0x118; pop ebx; ret; 
0x0009f103: jnp 0x9f0fd; jmp dword ptr [esi - 0x70]; 
0x000bf696: jnp 0xbf697; inc dword ptr [ebp - 0x147bf040]; add al, byte ptr [eax]; add byte ptr [ebx - 0x13f73], cl; jmp dword ptr [ebp - 0x7d]; 
0x000eb40c: jnp 0xeb419; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef23e: jnp 0xef240; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010357d: jns 0x103587; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x00108734: jns 0x108735; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x00125261: jns 0x12528b; add byte ptr [edx + ebx - 0x80], dh; jp 0x125291; add byte ptr [esp + edx - 0x7d], dh; ret 0x8328; 
0x001275d3: jns 0x1275dd; mov edi, dword ptr [esp + 4]; cmovbe eax, esi; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x00158b92: jns 0x158b26; ret 0xf869; 
0x00167bd5: jns 0x167bd7; add byte ptr [edx - 0x15], dh; call eax; 
0x0016c381: jns 0x16c37b; call dword ptr [eax]; 
0x0016c399: jns 0x16c393; dec dword ptr [ecx + ebp*2 + 2]; add byte ptr [edx + edi*2], dl; clc; jmp dword ptr [eax + 0x69]; 
0x0016d871: jns 0x16d86d; call eax; 
0x00176025: jns 0x175fe4; out dx, al; jmp dword ptr [edx]; 
0x00179d3a: jns 0x179d4a; add al, 0xc6; ret; 
0x0017b64a: jns 0x17b63b; jmp dword ptr [edx]; 
0x0017b6aa: jns 0x17b69b; jmp dword ptr [edx]; 
0x0017b6da: jns 0x17b6cb; jmp dword ptr [edx]; 
0x0017b70a: jns 0x17b6fb; jmp dword ptr [edx]; 
0x0017b73a: jns 0x17b72b; jmp dword ptr [edx]; 
0x0017b79a: jns 0x17b78b; jmp dword ptr [edx]; 
0x00184598: jns 0x1845a4; ret; 
0x00187266: jns 0x18725a; jmp dword ptr [edx]; 
0x00189fb2: jns 0x189fbe; ret; 
0x0018a87d: jns 0x18a889; push cs; adc al, 0x41; ret; 
0x0018b83d: jns 0x18b834; jmp dword ptr [esi]; 
0x0018df6b: jns 0x18def3; add ah, byte ptr [ecx + 0xe]; add al, 0xc6; ret; 
0x0018f8e2: jns 0x18f8d9; jmp dword ptr [edx]; 
0x0018f912: jns 0x18f909; jmp dword ptr [edx]; 
0x0018f96e: jns 0x18f965; jmp dword ptr [edx]; 
0x0018f99e: jns 0x18f995; jmp dword ptr [edx]; 
0x0018fa0e: jns 0x18fa05; jmp dword ptr [edx]; 
0x00198990: jns 0x1989c4; clc; call dword ptr [eax]; 
0x001989ab: jns 0x1989de; idiv edi; sbb al, 0xd; cvttps2pi mm6, xmm7; jmp dword ptr [edx]; 
0x0019944c: jns 0x199458; push cs; adc al, 0x43; ret; 
0x00001a31: jns 0x1a3a; ret; 
0x00002bdb: jns 0x2b9d; push esi; call 0xf3f8f45c; ret; 
0x000032c7: jns 0x32a0; ret 0x5a51; 
0x00033357: jns 0x332e4; inc esp; and al, 0x1c; add esp, 0x28; pop ebx; ret; 
0x00003983: jns 0x39d2; dec ebp; cmpsd dword ptr [esi], dword ptr es:[edi]; ret 0x49ec; 
0x00041d66: jns 0x41d2e; inc eax; or byte ptr [eax], al; ret; 
0x0008f026: jns 0x4795f383; pop es; pop edi; pop esi; pop ebx; ret; 
0x0008d956: jns 0x5e67dcb3; pop ebx; ret; 
0x0006a1b6: jns 0x6a141; ret 0xf789; 
0x0006a575: jns 0x6a57b; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000882fa: jns 0x88309; add byte ptr [edi], cl; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00088350: jns 0x8835c; add byte ptr [edi], cl; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0008c7ca: jns 0x8c7d9; add byte ptr [edi], cl; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0008eb33: jns 0x8eb3e; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000bb207: jns 0xbb20a; add byte ptr [edi + eax + 0xf], dh; mov dh, 0x51; add al, byte ptr [ebx - 0x377cfe3f]; add ch, bl; ret; 
0x000e7e1b: jns 0xe7e1d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001092a2: jo 0x1092a8; add byte ptr [eax], al; mov dword ptr [esp + 0x10], edx; mov dword ptr [esp], esi; call eax; 
0x00114ac4: jo 0x114ad6; mov esi, dword ptr [esp]; mov dword ptr [eax + 0x18], ecx; mov eax, 1; add esp, 8; ret; 
0x0011c47a: jo 0x11c4b0; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x001307a4: jo 0x1307a9; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00132d33: jo 0x132cb6; ret 0x80; 
0x00132ce8: jo 0x132ce9; inc dword ptr [ecx + 0x33135c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00132d9a: jo 0x132d1d; ret 0x80; 
0x00132d44: jo 0x132d45; inc dword ptr [ecx + 0x330d9c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00132dec: jo 0x132d6f; ret 0x80; 
0x00133226: jo 0x1331e8; add bh, dh; ret 0xf; 
0x00133363: jo 0x1332e6; ret 0x80; 
0x001333ca: jo 0x13334d; ret 0x80; 
0x0013341c: jo 0x13339f; ret 0x80; 
0x001338a6: jo 0x133868; add bh, dh; ret 0xf; 
0x0013ebff: jo 0x13ec10; mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0014a9dc: jo 0x14a9a3; in al, dx; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x0015a6a0: jo 0x15a6d6; call dword ptr [eax - 0x4f000ccc]; xor al, 0xf3; call eax; 
0x00166090: jo 0x166063; cld; call dword ptr [eax - 0x4f00032f]; sar esp, 1; call eax; 
0x00166310: jo 0x1662e7; cld; call dword ptr [eax - 0x4f00032b]; aad 0xfc; call eax; 
0x0016679c: jo 0x16677a; cld; jmp edx; 
0x00166850: jo 0x166838; cld; call dword ptr [eax]; 
0x00166b94: jo 0x166b90; cld; jmp dword ptr [eax]; 
0x00166bdc: jo 0x166bd4; cld; jmp dword ptr [esi]; 
0x00166c88: jo 0x166c88; cld; jmp dword ptr [eax]; 
0x00166dfc: jo 0x166e0c; std; jmp dword ptr [eax]; 
0x00166e5c: jo 0x166e66; std; inc dword ptr [esi + 0x8fffd0f]; adc ch, bh; jmp edx; 
0x001672d0: jo 0x16730c; std; jmp eax; 
0x0016737c: jo 0x1673b2; std; inc dword ptr [eax]; xor eax, 0x3590fffd; std; jmp dword ptr [eax]; 
0x001675ac: jo 0x1675fb; std; call eax; 
0x001675d4: jo 0x167621; std; jmp dword ptr [eax]; 
0x00167814: jo 0x167874; std; inc eax; pop esi; std; call dword ptr [eax]; 
0x00168311: jo 0x1682ff; jmp eax; 
0x00168ebc: jo 0x168ea8; add byte ptr [eax], al; adc al, 0xe5; out dx, eax; call eax; 
0x0016929c: jo 0x16929e; add dword ptr [eax], eax; and eax, esi; jmp dword ptr [eax + 0x4000100]; 
0x0016aeac: jo 0x16aea0; add dword ptr [eax], eax; int1; out dx, al; hlt; call dword ptr [eax]; 
0x0016c2c1: jo 0x16c2bb; call dword ptr [eax]; 
0x0016c535: jo 0x16c539; add byte ptr [ebx + ecx*4], dh; clc; jmp dword ptr [eax]; 
0x0016d194: jo 0x16d153; add al, byte ptr [eax]; push -0x3a; stc; jmp eax; 
0x0016e1a9: jo 0x16e1a6; lcall ptr [eax - 0x5bfffce4]; jno 0x16e1ae; call eax; 
0x0016ee19: jo 0x16ee17; jmp dword ptr [eax - 0x56]; 
0x0016ee31: jo 0x16ee2f; call dword ptr [eax - 0x55]; 
0x001734be: jo 0x1734ca; push cs; add al, 0xc6; ret; 
0x001736cf: jo 0x1736d4; mov eax, 0x140e0a01; inc ecx; ret; 
0x001766b5: jo 0x1766b7; add bh, dh; add bh, ch; call dword ptr [eax]; 
0x00178ec2: jo 0x178ed2; add al, 0xc6; ret; 
0x001792a0: jo 0x1792f3; out dx, eax; jmp dword ptr [ebx]; 
0x00179bb4: jo 0x179bb6; add byte ptr [eax], al; mov eax, 0x840000a9; pushal; out dx, eax; jmp dword ptr [edx + 5]; 
0x0017a020: jo 0x179fcb; add byte ptr [eax], al; pop esi; xchg eax, ebp; out dx, eax; call dword ptr [eax]; 
0x00179fe5: jo 0x17a007; out dx, eax; jmp dword ptr [edx]; 
0x0017a320: jo 0x17a2ce; add byte ptr [eax], al; xchg eax, ebx; out dx, eax; call dword ptr [eax]; 
0x0017c370: jo 0x17c343; add byte ptr [eax], al; cmp al, 0xb2; out dx, eax; jmp dword ptr [edi]; 
0x0017dc65: jo 0x17dc71; push cs; adc al, 0x43; ret; 
0x00183170: jo 0x1831b1; add dword ptr [eax], eax; cmp al, 0xf2; cli; jmp dword ptr [ebx + 1]; 
0x00186bc6: jo 0x186bba; jmp dword ptr [edx]; 
0x00186bf6: jo 0x186bea; jmp dword ptr [edx]; 
0x00186c26: jo 0x186c1a; jmp dword ptr [edx]; 
0x00186d06: jo 0x186cfa; jmp dword ptr [edx]; 
0x00186d36: jo 0x186d2a; jmp dword ptr [edx]; 
0x00187525: jo 0x187535; or byte ptr [edx + 9], al; add eax, dword ptr [edx]; push esi; ret; 
0x001875a9: jo 0x1875b5; push cs; add al, 0xc7; ret; 
0x001878f5: jo 0x187901; push cs; add al, 0xc7; ret; 
0x00187919: jo 0x187925; push cs; add al, 0xc7; ret; 
0x0018a0f0: jo 0x18a0db; hlt; call dword ptr [eax]; 
0x0018a5be: jo 0x18a5ca; push cs; adc al, 0x43; ret; 
0x0018ac7d: jo 0x18ac89; push cs; add al, 0xc7; ret; 
0x0018aee1: jo 0x18aeed; push cs; add al, 0xc7; ret; 
0x0018aff5: jo 0x18b005; or byte ptr [edx + 9], al; add eax, dword ptr [edx]; push esi; ret; 
0x0018b0e1: jo 0x18b0ed; push cs; add al, 0xc7; ret; 
0x0018b139: jo 0x18b145; push cs; add al, 0xc7; ret; 
0x0018b15d: jo 0x18b169; push cs; add al, 0xc7; ret; 
0x0018b345: jo 0x18b351; push cs; add al, 0xc7; ret; 
0x0018b3bd: jo 0x18b3c9; push cs; add al, 0xc7; ret; 
0x0018be50: jo 0x18bdf2; cmc; jmp dword ptr [edx]; 
0x0018cc7d: jo 0x18cc89; push cs; add al, 0xc7; ret; 
0x0018cca1: jo 0x18ccad; push cs; add al, 0xc7; ret; 
0x0018de93: jo 0x18de1b; add bl, byte ptr [edx + 0xe]; add al, 0xc6; ret; 
0x00190aa3: jo 0x190aaf; push cs; adc al, 0x43; ret; 
0x00192908: jo 0x192914; push cs; adc al, 0x41; ret; 
0x00195220: jo 0x19527d; add al, byte ptr [eax]; pop edi; xor al, 0xf7; call dword ptr [eax]; 
0x00195b46: jo 0x195b56; add al, 0xc6; ret; 
0x001986c0: jo 0x1986d7; clc; call dword ptr [esi]; 
0x0019b270: jo 0x19b232; add al, byte ptr [eax]; fdiv st(6), st(0); cli; call dword ptr [ebx + 1]; 
0x0002dd11: jo 0x2dd17; mov edi, dword ptr [eax + 8]; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x00033f8c: jo 0x33f94; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x000340ea: jo 0x340d4; sbb dword ptr [edi + ecx], -0x7f; ret; 
0x00037155: jo 0x37140; ret 0xfff2; 
0x0004fe96: jo 0x4fe94; dec dword ptr [ebx - 0x20b6b]; inc dword ptr [ebp + 0x6840fc0]; sub al, 0; add byte ptr [ebx - 0x1cb73], cl; call ecx; 
0x00055664: jo 0x5566e; mov esi, dword ptr [esp]; mov dword ptr [eax + 4], 1; xor eax, eax; add esp, 0xc; ret; 
0x0006b631: jo 0x6b63b; mov dword ptr [eax], edx; mov dword ptr [eax + 0x20], ecx; pop esi; ret; 
0x00071ece: jo 0x71edc; mov dword ptr [eax + 4], edx; mov dword ptr [eax + 0x24], ecx; pop esi; ret; 
0x00074cb2: jo 0x74d10; add byte ptr [eax], al; pop ebx; ret; 
0x0000098b: jo 0x911; add byte ptr [eax], al; ret 0x1010; 
0x000915d7: jo 0x915db; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000915f3: jo 0x915f9; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00091645: jo 0x9164f; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00091739: jo 0x9174b; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000917bf: jo 0x917d5; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00091843: jo 0x9185d; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094a0d: jo 0x94a11; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00094a39: jo 0x94a3f; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00094abb: jo 0x94ac5; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00094bbf: jo 0x94bd1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00094c45: jo 0x94c5b; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00094cc9: jo 0x94ce3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00099a4c: jo 0x99a51; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x00009f78: jo 0x9f38; str word ptr [ecx]; add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; ret 0x11; 
0x0000b128: jo 0xb112; add eax, dword ptr [eax]; ret; 
0x000dbdb2: jo 0xdbd3d; ret 0x848b; 
0x000dfabc: jo 0xdfac7; ret 0x850f; 
0x000f2cbc: jo 0xf2cc1; add byte ptr [ecx + 0xb0335c3], al; add byte ptr [ecx - 0x8fbdb8c], cl; ret 0xff80; 
0x000fb911: jo 0xfb94b; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x001141fd: jp 0x11422b; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x00125267: jp 0x125291; add byte ptr [esp + edx - 0x7d], dh; ret 0x8328; 
0x0012784c: jp 0x1278c2; or dword ptr [ebx + 0x5f5e24c4], eax; ret; 
0x00142c12: jp 0x142c46; cmc; call dword ptr [ebx - 0x18]; 
0x0014913a: jp 0x149142; add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0014919d: jp 0x1491aa; add byte ptr [edi], cl; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x001491d5: jp 0x1491e6; add byte ptr [esp + ebx*2 - 0x48], dh; adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0016772c: jp 0x16778b; std; push dword ptr [esp + ebx*2 - 3]; call esp; 
0x001688a1: jp 0x168890; push dword ptr [eax - 0x5bffff3c]; jp 0x168898; call esp; 
0x001688a9: jp 0x168898; call esp; 
0x0016b989: jp 0x16b982; inc eax; xor al, 2; add byte ptr [edx + edi*2 - 9], ah; call esp; 
0x0016b991: jp 0x16b98a; call esp; 
0x0016c3a1: jp 0x16c39b; jmp dword ptr [eax + 0x69]; 
0x0016c3b9: jp 0x16c3b3; ljmp ptr [ecx + ebp*2 + 0x7b140002]; clc; inc eax; imul eax, dword ptr [edx], 0xf87b5400; call esp; 
0x00172d70: jp 0x172d72; in al, dx; call dword ptr [eax]; 
0x00179c72: jp 0x179c7e; push cs; add al, 0xc6; ret; 
0x0017a44d: jp 0x17a43e; jmp dword ptr [esi]; 
0x0017a4a1: jp 0x17a492; call dword ptr [ebp]; 
0x0017ad2e: jp 0x17ad3a; push cs; add al, 0xc6; ret; 
0x0017b61a: jp 0x17b60b; jmp dword ptr [edx]; 
0x0017b67a: jp 0x17b66b; jmp dword ptr [edx]; 
0x0017b76a: jp 0x17b75b; jmp dword ptr [edx]; 
0x0017b7ca: jp 0x17b7bb; jmp dword ptr [edx]; 
0x00187296: jp 0x18728a; jmp dword ptr [edx]; 
0x001872c6: jp 0x1872ba; jmp dword ptr [edx]; 
0x001872f6: jp 0x1872ea; jmp dword ptr [edx]; 
0x00187408: jp 0x18740a; add byte ptr [eax], al; add byte ptr [ebx + 0xe], cl; or byte ptr [ebx + 0x40e5902], al; ret; 
0x0018ac94: jp 0x18ac96; add byte ptr [eax], al; add byte ptr [ebx + 0xe], cl; or byte ptr [ebx + 0x40e5902], al; ret; 
0x0018adf4: jp 0x18adf6; add byte ptr [eax], al; add byte ptr [ebx + 0xe], cl; or byte ptr [ebx + 0x40e5902], al; ret; 
0x0018ae20: jp 0x18ae22; add byte ptr [eax], al; add byte ptr [ebx + 0xe], cl; or byte ptr [ebx + 0x40e5902], al; ret; 
0x0018d2bc: jp 0x18d2be; add byte ptr [eax], al; add byte ptr [ebx + 0xe], cl; or byte ptr [ebx + 0x40e5902], al; ret; 
0x0018d4d8: jp 0x18d4e4; push cs; adc al, 0x41; ret; 
0x0018e878: jp 0x18e87a; add byte ptr [eax], al; add byte ptr [ebx + 0xe], cl; or byte ptr [ebx + 0x40e5902], al; ret; 
0x0018fa3e: jp 0x18fa35; jmp dword ptr [edx]; 
0x0018faae: jp 0x18faa5; jmp dword ptr [edx]; 
0x00190bfe: jp 0x190c0a; push cs; or al, 0x41; ret; 
0x00190d22: jp 0x190d2e; push cs; add al, 0xc6; ret; 
0x00199bda: jp 0x199bea; add al, 0xc6; ret; 
0x0019aa22: jp 0x19aa2e; push cs; add al, 0xc6; ret; 
0x0019aa4a: jp 0x19aa56; push cs; add al, 0xc6; ret; 
0x000024fd: jp 0x24df; jmp dword ptr [ebx]; 
0x0000369c: jp 0x3654; sbb eax, dword ptr [0x572808a8]; call dword ptr [esi + 0x6f]; 
0x000555d8: jp 0x555e2; add dword ptr [edx + 4], 1; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000648db: jp 0x648e5; add dword ptr [edx + 4], 1; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x30]; 
0x00007139: jp 0x7145; add byte ptr [0x22000000], dl; add byte ptr [eax + eax], cl; ret; 
0x0008d3d8: jp 0x8d3ac; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00090ef1: jp 0x90ef4; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x00090f01: jp 0x90f05; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x00090f31: jp 0x90f37; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x00090fa1: jp 0x90fab; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00094105: jp 0x9410f; mov eax, edi; pop ebx; pop edi; ret; 
0x00094162: jp 0x94174; mov eax, edi; pop ebx; pop edi; ret; 
0x000b7ba7: jp 0xb7ba9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0000c3ec: jp 0xc3ee; add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; ret; 
0x000e657c: jp 0xe6548; or eax, dword ptr [eax]; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0xbf; call dword ptr gs:[0x10]; 
0x000e6a7c: jp 0xe6a43; or eax, dword ptr [eax]; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0x60; call dword ptr gs:[0x10]; 
0x00143ead: lahf; adc eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x001991b5: lahf; add al, byte ptr [eax]; cmp byte ptr [eax - 8], al; call dword ptr [ecx]; 
0x001681cd: lahf; add byte ptr [eax], al; aam 0x5e; in al, dx; jmp dword ptr [eax - 0x61]; 
0x001791a9: lahf; add byte ptr [eax], al; mov ah, 0x50; out dx, eax; call dword ptr [ecx]; 
0x001905e1: lahf; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0008ba3d: lahf; add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; lcall ptr [edi + 0x5b]; ret; 
0x001891b9: lahf; add dword ptr [eax], eax; push esp; dec edi; hlt; call dword ptr [ebx + 1]; 
0x00019657: lahf; cdq; sbb byte ptr [eax], al; lea eax, dword ptr [ecx - 0x43dee]; ret; 
0x0019aa95: lahf; clc; call dword ptr [ebx]; 
0x0012d236: lahf; clc; inc dword ptr [ebp - 0x147bf040]; add al, byte ptr [eax]; add byte ptr [ebx - 0x13f73], cl; jmp dword ptr [ebp - 0x7d]; 
0x0019aab9: lahf; clc; jmp dword ptr [edi]; 
0x0018bded: lahf; cmc; call dword ptr [esi]; 
0x001684d1: lahf; in al, dx; call dword ptr [esi + ebp*4 - 0x5c8c0000]; in al, dx; call esp; 
0x0007a7a8: lahf; mov esi, dword ptr [esp + 0x1c]; mov dword ptr [esp], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 8], esi; call eax; 
0x0008ec0d: lahf; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0018bb4c: lahf; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0019df80: lahf; pop es; add byte ptr [eax], al; ret 7; 
0x000b90dd: lahf; push cs; add byte ptr [ebx - 0x78f7dbac], cl; sar dword ptr [eax + 0xcd], cl; call dword ptr gs:[0x10]; 
0x00158925: lahf; ret 0x871e; 
0x000d6f3e: lahf; ret 0xe083; 
0x000a81f1: lahf; ret 0xe8c1; 
0x0005f5dd: lahf; ret; 
0x0008d3b3: lahf; ror byte ptr [eax + eax], cl; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000a752f: lahf; ror byte ptr [edi], 0xb6; ror byte ptr [ebp + 0x5eff0044], 0x5f; ret; 
0x0005d395: lahf; sar byte ptr [ecx + 1], 0x29; mov edi, 0xfffef885; jmp dword ptr [ebp]; 
0x00019b57: lahf; xchg eax, esp; sbb byte ptr [eax], al; mov eax, dword ptr [ecx - 0xf8]; add eax, dword ptr gs:[0]; ret; 
0x000efe57: lahf; xor dword ptr [ebx], ecx; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0016b385: lar eax, word ptr [eax]; sub dh, dh; call eax; 
0x0016b37d: lar eax, word ptr [eax]; xchg eax, esp; sub esi, esi; lcall ptr [eax + 0x6400020f]; sub dh, dh; call eax; 
0x00173ef5: lar ecx, word ptr [edx]; ret; 
0x0011262e: lcall 0x2434:0x8904468b; call dword ptr [eax + 0x10]; 
0x000dbd4e: lcall 0x24b4:0x8b000004; call 0x850dbd5a; test byte ptr [edi], 0x94; ret 0xc984; 
0x001342d5: lcall 0x47c3:0x81ffff5a; add eax, dword ptr es:[eax]; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0017b314: lcall 0x6ce7:0xd1cffef; out dx, eax; jmp dword ptr [edx]; 
0x0017b2e4: lcall 0x6cfb:0xd1cffef; out dx, eax; jmp dword ptr [edx]; 
0x0017b374: lcall 0x6d06:0xd1cffef; out dx, eax; jmp dword ptr [edx]; 
0x0017b3a4: lcall 0x6d20:0xd1cffef; out dx, eax; jmp dword ptr [edx]; 
0x0017b344: lcall 0x6d23:0xd1cffef; out dx, eax; jmp dword ptr [edx]; 
0x000e956d: lcall 0x824:0x548b000b; xchg ebx, edx; mov eax, 0x10f; call dword ptr gs:[0x10]; 
0x000914ec: lcall 0x910c:0x3000c93; jmp ecx; 
0x0008ea18: lcall 0x990c:0x3000cbd; jmp ecx; 
0x0007defd: lcall 0xc031:0x5e000000; pop ebx; ret; 
0x00029fab: lcall 0xe9d2:0x31000003; stc; idiv bh; jmp dword ptr [esi - 0x70]; 
0x0012f134: lcall 0xffff:0xffbafffd; inc dword ptr [ebp - 0x3dbaf040]; add esp, 0x1c; ret; 
0x0016cf01: lcall 2:0xaeb8fff9; and al, 0x9b; stc; call esp; 
0x0016ac8b: lcall ptr [eax + 0x200001e3]; ret 0xfff4; 
0x0016beab: lcall ptr [eax + 0x4f]; add al, byte ptr [eax]; xchg eax, esp; sbb bh, al; call eax; 
0x00167623: lcall ptr [eax + 0x52fffd4e]; dec edi; std; jmp edx; 
0x0016b383: lcall ptr [eax + 0x6400020f]; sub dh, dh; call eax; 
0x000ed6f7: lcall ptr [eax + 0xb]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0016eb83: lcall ptr [eax + 5]; add dword ptr [eax], eax; adc eax, 0x88fffc28; add eax, 0x28240001; cld; call esp; 
0x00189c9b: lcall ptr [eax + eax]; add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e5a02], al; ret; 
0x0016edfb: lcall ptr [eax + ebx*4 + 0x6f640002]; cld; jmp dword ptr [eax]; 
0x0016c78b: lcall ptr [eax - 0x1bfffd83]; ret 0xfff8; 
0x0016bee3: lcall ptr [eax - 0x4bfffdaf]; sbb eax, 0x51bcfff8; add al, byte ptr [eax]; adc al, 0x1e; clc; jmp eax; 
0x0016e1ab: lcall ptr [eax - 0x5bfffce4]; jno 0x16e1ae; call eax; 
0x0016e703: lcall ptr [eax]; cmp al, 3; add byte ptr [edx + eax], ah; cld; call dword ptr [eax + 0x3c]; 
0x00167317: lcall ptr [eax]; cmp edi, ebp; ljmp ptr [eax + 0x3b]; std; call dword ptr [edx + 0x3a]; 
0x0016c4c3: lcall ptr [eax]; outsb dx, byte ptr [esi]; add al, byte ptr [eax]; mov ah, 0x85; clc; call dword ptr [eax + 0x6e]; 
0x00167757: lcall ptr [eax]; pop ebp; std; ljmp ptr [eax + 0x5d]; std; jmp dword ptr [edx + 0x5c]; 
0x0016a7c3: lcall ptr [eax]; ret 1; 
0x0016f043: lcall ptr [eax]; test dword ptr [ecx], eax; add byte ptr [ebx + esi*8], ah; std; jmp eax; 
0x0016aa7b: lcall ptr [eax]; xlatb; add dword ptr [eax], eax; test byte ptr [edx], al; hlt; call dword ptr [eax - 0x29]; 
0x0016777b: lcall ptr [ebp + ebx*2 - 3]; call dword ptr [esi + 0x5c]; 
0x000e7554: lcall ptr [ebx + 0x5e]; pop edi; pop ebp; ret 4; 
0x000e77fc: lcall ptr [ebx + 0x5e]; pop edi; pop ebp; ret 8; 
0x0002307d: lcall ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000e505e: lcall ptr [ebx + 0x5e]; pop edi; ret; 
0x000f722b: lcall ptr [ebx + 0x65]; mov ecx, dword ptr [ecx]; test byte ptr [ecx + eax*2 + 1], 0x40; cmove eax, edx; ret; 
0x0005ea59: lcall ptr [ebx - 0x77]; clc; pop esi; pop edi; pop ebp; ret; 
0x0004172a: lcall ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x0002dc4a: lcall ptr [ecx + 0x5a]; ret; 
0x0017ba36: lcall ptr [ecx - 0x107f4b]; and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; xchg eax, esp; ret; 
0x0017ba96: lcall ptr [ecx - 0x107f88]; and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; hlt; ret; 
0x0017b8e6: lcall ptr [ecx - 0x108056]; and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; inc esp; ret 0; 
0x0017b946: lcall ptr [ecx - 0x108093]; and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; ret 0; 
0x0017a2b2: lcall ptr [ecx - 0x10cc93]; and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; adc byte ptr [eax + eax - 0x106c8200], ch; call dword ptr [eax]; 
0x0017a222: lcall ptr [ecx - 0x10cd2e]; and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; sub byte ptr [ebx - 0x6c1a0000], 0xef; call dword ptr [eax]; 
0x0017730a: lcall ptr [ecx - 0x112dff]; and al, byte ptr [eax]; add byte ptr [eax + eax], bl; add byte ptr [edx + ebp], bh; add byte ptr [edi + ecx - 0x11], ah; call dword ptr [esi + 3]; 
0x0008b518: lcall ptr [edi + 0x5b]; ret; 
0x0008dcb2: lcall ptr [edi + 0x5e]; pop ebx; ret; 
0x001677fb: lcall ptr [edi + ebx*2]; std; jmp dword ptr [esi]; 
0x001681cb: lcall ptr [edi + ebx*4]; add byte ptr [eax], al; aam 0x5e; in al, dx; jmp dword ptr [eax - 0x61]; 
0x000c57dd: lcall ptr [edi]; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000c58bd: lcall ptr [edi]; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000f277e: lcall ptr [edx + 0x59]; pop eax; ret; 
0x00166dd3: lcall ptr [edx + 0x6afffd0c]; or eax, 0xe3afffd; std; call dword ptr [eax + 0xc]; 
0x001678af: lcall ptr [edx - 0x70]; cld; call esi; 
0x0015a3bf: lcall ptr [edx]; idiv edi; call dword ptr [edi - 0x4c]; 
0x00166833: lcall ptr [edx]; out 0xfc, eax; ljmp ptr [edx + 0x3afffce7]; call 0xe6c7683e; cld; jmp dword ptr [eax - 0x19]; 
0x001674bb: lcall ptr [esi + 0x4b]; std; jmp esp; 
0x0007df9f: lcall ptr [esi + 0x5b]; ret; 
0x0010b6e1: lcall ptr [esi + 0x5f]; pop ebp; ret 4; 
0x000ca1dd: lcall ptr [esi + 0x5f]; pop ebp; ret 8; 
0x00095a63: lcall ptr [esi + 0x5f]; pop ebp; ret; 
0x000a726c: lcall ptr [esi + 0x5f]; ret; 
0x0016ed63: lcall ptr [esi + 0x65b40002]; cld; jmp dword ptr [eax]; 
0x00166cfb: lcall ptr [esi + 0xc]; std; call esp; 
0x001671f7: lcall ptr [esi + ebp + 0x2efcfffd]; std; jmp esi; 
0x00166fb3: lcall ptr [esi + ebx - 3]; ljmp ptr [esi + ebx + 0x1efcfffd]; std; jmp esi; 
0x0016c7a3: lcall ptr [esi + edi*2]; add al, byte ptr [eax]; xchg eax, esp; ret; 
0x0016b31b: lcall ptr [esp + ecx - 0x81bfffe]; cmc; call eax; 
0x0002db5a: ldmxcsr dword ptr [esp + 8]; add esp, 0x10; pop ebx; ret; 
0x00149065: lea eax, dword ptr [eax + 0xa]; pop edi; ret; 
0x00148fbb: lea eax, dword ptr [eax + 0xb]; pop edi; ret; 
0x00149075: lea eax, dword ptr [eax + 0xc]; pop edi; ret; 
0x00149085: lea eax, dword ptr [eax + 0xd]; pop edi; ret; 
0x00149095: lea eax, dword ptr [eax + 0xe]; pop edi; ret; 
0x00148fe4: lea eax, dword ptr [eax + 0xf]; pop edi; ret; 
0x00148ff9: lea eax, dword ptr [eax + 1]; pop edi; ret; 
0x00149009: lea eax, dword ptr [eax + 2]; pop edi; ret; 
0x00148f51: lea eax, dword ptr [eax + 3]; pop edi; ret; 
0x00149019: lea eax, dword ptr [eax + 4]; pop edi; ret; 
0x00149025: lea eax, dword ptr [eax + 5]; pop edi; ret; 
0x00149035: lea eax, dword ptr [eax + 6]; pop edi; ret; 
0x00148f84: lea eax, dword ptr [eax + 7]; pop edi; ret; 
0x00149045: lea eax, dword ptr [eax + 8]; pop edi; ret; 
0x00149055: lea eax, dword ptr [eax + 9]; pop edi; ret; 
0x000a7269: lea eax, dword ptr [eax + eax - 1]; pop esi; pop edi; ret; 
0x000b9b70: lea eax, dword ptr [eax + eax - 1]; ret; 
0x0002f76b: lea eax, dword ptr [eax + eax*8 + 6]; call 0x2f730; jmp eax; 
0x00030de0: lea eax, dword ptr [eax + eax*8]; add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x0019c05d: lea eax, dword ptr [eax + eax]; ret 0x502; 
0x00095833: lea eax, dword ptr [eax + ecx + 0x10]; ret; 
0x00095843: lea eax, dword ptr [eax + ecx + 0x20]; ret; 
0x0011335e: lea eax, dword ptr [eax + ecx + 0x28]; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edi; call dword ptr [edx + 0x18]; 
0x00095853: lea eax, dword ptr [eax + ecx + 0x30]; ret; 
0x00095583: lea eax, dword ptr [eax + edi + 0x10]; pop edi; ret; 
0x00095593: lea eax, dword ptr [eax + edi + 0x20]; pop edi; ret; 
0x00095563: lea eax, dword ptr [eax + edi - 0x10]; pop edi; ret; 
0x00095c93: lea eax, dword ptr [eax + edx + 0x10]; ret; 
0x00095ca3: lea eax, dword ptr [eax + edx + 0x20]; ret; 
0x00095c73: lea eax, dword ptr [eax + edx - 0x10]; ret; 
0x00045074: lea eax, dword ptr [eax - 0x7a000006]; sar byte ptr [eax + 1], 0xf; inc ebp; ret 0x8588; 
0x00177f25: lea eax, dword ptr [eax]; add byte ptr [eax + 0x28], cl; out dx, eax; call edx; 
0x0006b10f: lea eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000b3e3d: lea eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012738e: lea eax, dword ptr [ebp - 0x44]; mov dword ptr [esp], eax; mov dword ptr [esp + 4], edx; call dword ptr [ebp - 0x7c]; 
0x000177f0: lea eax, dword ptr [ebp - 0x78]; mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebp - 0x7c]; mov dword ptr [esp], eax; mov eax, dword ptr [ebp + 0xc]; call dword ptr [eax]; 
0x00025eb8: lea eax, dword ptr [ebx + 0x10ac]; pop ebx; ret; 
0x0003f5ae: lea eax, dword ptr [ebx + 0x1778]; mov byte ptr [eax + ecx], 0; pop ebx; ret; 
0x0007d4d9: lea eax, dword ptr [ebx + 0x19cc]; mov dword ptr [ebx + 0x19b0], eax; add esp, 0x18; pop ebx; ret; 
0x00111235: lea eax, dword ptr [ebx + 0x32cc]; or dword ptr [ebx + 0x32ac], 2; add esp, 0x18; pop ebx; ret; 
0x00111226: lea eax, dword ptr [ebx + 0x32cc]; pop ebx; ret; 
0x00019b3b: lea eax, dword ptr [ebx + 0x368c]; pop ebx; ret; 
0x0007f822: lea eax, dword ptr [ebx - 0x10d554]; pop ebx; ret; 
0x0008379a: lea eax, dword ptr [ebx - 0x10d664]; pop ebx; ret; 
0x000837a2: lea eax, dword ptr [ebx - 0x10da04]; pop ebx; ret; 
0x0007dad2: lea eax, dword ptr [ebx - 0x10dd54]; pop ebx; ret; 
0x0007d0ea: lea eax, dword ptr [ebx - 0x1116b4]; pop ebx; ret; 
0x0007c3fa: lea eax, dword ptr [ebx - 0x1139b4]; pop ebx; ret; 
0x0007e49a: lea eax, dword ptr [ebx - 0x119344]; pop ebx; ret; 
0x0007e3aa: lea eax, dword ptr [ebx - 0x11abb4]; pop ebx; ret; 
0x0007d19a: lea eax, dword ptr [ebx - 0x11d724]; pop ebx; ret; 
0x0007c8da: lea eax, dword ptr [ebx - 0x11ef74]; pop ebx; ret; 
0x0007f81a: lea eax, dword ptr [ebx - 0x1237c4]; pop ebx; ret; 
0x0007daca: lea eax, dword ptr [ebx - 0x125514]; pop ebx; ret; 
0x000b35ad: lea eax, dword ptr [ebx - 0x3fceef3c]; pop esi; pop edi; pop ebp; ret; 
0x001197de: lea eax, dword ptr [ebx - 0x435da]; mov dword ptr [esp + 4], eax; call 0x63810; add esp, 0x18; pop ebx; ret; 
0x000ec6a5: lea eax, dword ptr [ebx - 0x435dc]; mov dword ptr [esp + 4], eax; call 0x63810; add esp, 0x418; pop ebx; ret; 
0x000fc68e: lea eax, dword ptr [ebx - 0x45a5d]; mov dword ptr [esp], eax; call 0x276f0; add esp, 0x18; pop ebx; ret; 
0x00025f80: lea eax, dword ptr [ebx - 0x45a78]; mov esi, dword ptr [esp + 4]; mov ebx, dword ptr [esp]; add esp, 8; ret; 
0x00097d8c: lea eax, dword ptr [ebx - 0x59314]; pop ebx; ret; 
0x0009812c: lea eax, dword ptr [ebx - 0x595d4]; pop ebx; ret; 
0x00097d0c: lea eax, dword ptr [ebx - 0x597b4]; pop ebx; ret; 
0x0007d08c: lea eax, dword ptr [ebx - 0x5a4a4]; pop ebx; ret; 
0x0007f812: lea eax, dword ptr [ebx - 0x5a7c4]; pop ebx; ret; 
0x00083792: lea eax, dword ptr [ebx - 0x5af64]; pop ebx; ret; 
0x0007dac2: lea eax, dword ptr [ebx - 0x5b4d4]; pop ebx; ret; 
0x0007d1ee: lea eax, dword ptr [ebx - 0x5bb04]; pop ebx; ret; 
0x0007c5fe: lea eax, dword ptr [ebx - 0x5bee4]; pop ebx; ret; 
0x0007cf8e: lea eax, dword ptr [ebx - 0x5c204]; pop ebx; ret; 
0x0007e1ee: lea eax, dword ptr [ebx - 0x66894]; pop ebx; ret; 
0x0007dfee: lea eax, dword ptr [ebx - 0x68ee4]; pop ebx; ret; 
0x0010158e: lea eax, dword ptr [ebx - 0x68ef4]; pop ebx; ret; 
0x0007e15e: lea eax, dword ptr [ebx - 0x69ed4]; pop ebx; ret; 
0x001015de: lea eax, dword ptr [ebx - 0x69ee4]; pop ebx; ret; 
0x0007e76e: lea eax, dword ptr [ebx - 0x6aeb4]; pop ebx; ret; 
0x0010153e: lea eax, dword ptr [ebx - 0x6aec4]; pop ebx; ret; 
0x0007e28e: lea eax, dword ptr [ebx - 0x6f2a4]; pop ebx; ret; 
0x0007e0ae: lea eax, dword ptr [ebx - 0x6f824]; pop ebx; ret; 
0x0010162e: lea eax, dword ptr [ebx - 0x6f834]; pop ebx; ret; 
0x0009848e: lea eax, dword ptr [ebx - 0x70844]; pop ebx; ret; 
0x0007d79c: lea eax, dword ptr [ebx - 0x70974]; pop ebx; ret; 
0x0007d3ec: lea eax, dword ptr [ebx - 0x70ad4]; pop ebx; ret; 
0x0007c9ac: lea eax, dword ptr [ebx - 0x70c44]; pop ebx; ret; 
0x0007e6ae: lea eax, dword ptr [ebx - 0x711c4]; pop ebx; ret; 
0x0007e5de: lea eax, dword ptr [ebx - 0x711f4]; pop ebx; ret; 
0x0007e62e: lea eax, dword ptr [ebx - 0x716c4]; pop ebx; ret; 
0x0007e58e: lea eax, dword ptr [ebx - 0x716f4]; pop ebx; ret; 
0x0007dcbe: lea eax, dword ptr [ebx - 0x72884]; pop ebx; ret; 
0x0007d13e: lea eax, dword ptr [ebx - 0x72bc4]; pop ebx; ret; 
0x0007c80e: lea eax, dword ptr [ebx - 0x72e54]; pop ebx; ret; 
0x000974a0: lea eax, dword ptr [ebx - 0x736a4]; lea edx, dword ptr [ebx - 0x10c064]; cmove eax, edx; add esp, 8; pop ebx; ret; 
0x00096820: lea eax, dword ptr [ebx - 0x73d44]; lea edx, dword ptr [ebx - 0x10cbb4]; cmove eax, edx; add esp, 8; pop ebx; ret; 
0x0010383c: lea eax, dword ptr [ebx - 0x9f8b4]; mov dword ptr [esp], eax; call edx; 
0x000c5c60: lea eax, dword ptr [ebx - 0xdd3e4]; lea edx, dword ptr [ebx - 0xdd464]; cmove eax, edx; add esp, 8; pop ebx; ret; 
0x00097e6c: lea eax, dword ptr [ebx - 0xfbd84]; pop ebx; ret; 
0x00097d4c: lea eax, dword ptr [ebx - 0xfcaa4]; pop ebx; ret; 
0x0018406e: lea eax, dword ptr [ebx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001484a0: lea eax, dword ptr [ecx + 0xa]; ret; 
0x001484b0: lea eax, dword ptr [ecx + 0xb]; ret; 
0x0014842b: lea eax, dword ptr [ecx + 0xc]; ret; 
0x001484c0: lea eax, dword ptr [ecx + 0xd]; ret; 
0x001484d0: lea eax, dword ptr [ecx + 0xe]; ret; 
0x001484e0: lea eax, dword ptr [ecx + 0xf]; ret; 
0x00148430: lea eax, dword ptr [ecx + 1]; ret; 
0x00148440: lea eax, dword ptr [ecx + 2]; ret; 
0x00148450: lea eax, dword ptr [ecx + 3]; ret; 
0x001483d8: lea eax, dword ptr [ecx + 4]; ret; 
0x00148460: lea eax, dword ptr [ecx + 5]; ret; 
0x00148470: lea eax, dword ptr [ecx + 6]; ret; 
0x00148480: lea eax, dword ptr [ecx + 7]; ret; 
0x00148402: lea eax, dword ptr [ecx + 8]; ret; 
0x00148490: lea eax, dword ptr [ecx + 9]; ret; 
0x0009587a: lea eax, dword ptr [ecx + eax + 0x10]; ret; 
0x0009588a: lea eax, dword ptr [ecx + eax + 0x20]; ret; 
0x0009589a: lea eax, dword ptr [ecx + eax + 0x30]; ret; 
0x0006c1bf: lea eax, dword ptr [ecx + eax*4]; mov dword ptr [edx], eax; xor eax, eax; add esp, 0x1c; ret; 
0x0001965b: lea eax, dword ptr [ecx - 0x43dee]; ret; 
0x0001963b: lea eax, dword ptr [ecx - 0x46116]; ret; 
0x00187ff9: lea eax, dword ptr [ecx]; add ah, dh; mov ah, 0xf3; jmp dword ptr [esi + 3]; 
0x001706b3: lea eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0008f138: lea eax, dword ptr [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x0008f14e: lea eax, dword ptr [edi + 0x11]; pop edi; pop esi; pop ebx; ret; 
0x0008f170: lea eax, dword ptr [edi + 0x12]; pop edi; pop esi; pop ebx; ret; 
0x0008f18e: lea eax, dword ptr [edi + 0x13]; pop edi; pop esi; pop ebx; ret; 
0x0008f1ae: lea eax, dword ptr [edi + 0x14]; pop edi; pop esi; pop ebx; ret; 
0x0008f1d4: lea eax, dword ptr [edi + 0x15]; pop edi; pop esi; pop ebx; ret; 
0x0008f1f2: lea eax, dword ptr [edi + 0x16]; pop edi; pop esi; pop ebx; ret; 
0x0008f212: lea eax, dword ptr [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x0008f232: lea eax, dword ptr [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x0008f258: lea eax, dword ptr [edi + 0x19]; pop edi; pop esi; pop ebx; ret; 
0x0008f27a: lea eax, dword ptr [edi + 0x1a]; pop edi; pop esi; pop ebx; ret; 
0x0008f2a8: lea eax, dword ptr [edi + 0x1b]; pop edi; pop esi; pop ebx; ret; 
0x0008f2c8: lea eax, dword ptr [edi + 0x1c]; pop edi; pop esi; pop ebx; ret; 
0x0008f2e2: lea eax, dword ptr [edi + 0x1d]; pop edi; pop esi; pop ebx; ret; 
0x0008f302: lea eax, dword ptr [edi + 0x1e]; pop edi; pop esi; pop ebx; ret; 
0x0008f322: lea eax, dword ptr [edi + 0x1f]; pop edi; pop esi; pop ebx; ret; 
0x0008f342: lea eax, dword ptr [edi + 0x20]; pop edi; pop esi; pop ebx; ret; 
0x0008f591: lea eax, dword ptr [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x0008f080: lea eax, dword ptr [edi + 0xa]; pop edi; pop esi; pop ebx; ret; 
0x00147490: lea eax, dword ptr [edi + 0xa]; pop edi; ret; 
0x0008f09e: lea eax, dword ptr [edi + 0xb]; pop edi; pop esi; pop ebx; ret; 
0x00147356: lea eax, dword ptr [edi + 0xb]; pop edi; ret; 
0x0008f0be: lea eax, dword ptr [edi + 0xc]; pop edi; pop esi; pop ebx; ret; 
0x001474b0: lea eax, dword ptr [edi + 0xc]; pop edi; ret; 
0x0008f0e2: lea eax, dword ptr [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x001474c0: lea eax, dword ptr [edi + 0xd]; pop edi; ret; 
0x0008f102: lea eax, dword ptr [edi + 0xe]; pop edi; pop esi; pop ebx; ret; 
0x001474d0: lea eax, dword ptr [edi + 0xe]; pop edi; ret; 
0x0008f122: lea eax, dword ptr [edi + 0xf]; pop edi; pop esi; pop ebx; ret; 
0x00147310: lea eax, dword ptr [edi + 0xf]; pop edi; ret; 
0x0008ef94: lea eax, dword ptr [edi + 1]; pop edi; pop esi; pop ebx; ret; 
0x00147410: lea eax, dword ptr [edi + 1]; pop edi; ret; 
0x0008efa6: lea eax, dword ptr [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x00147420: lea eax, dword ptr [edi + 2]; pop edi; ret; 
0x0008efbc: lea eax, dword ptr [edi + 3]; pop edi; pop esi; pop ebx; ret; 
0x001472b3: lea eax, dword ptr [edi + 3]; pop edi; ret; 
0x0008efd4: lea eax, dword ptr [edi + 4]; pop edi; pop esi; pop ebx; ret; 
0x00147440: lea eax, dword ptr [edi + 4]; pop edi; ret; 
0x0008efea: lea eax, dword ptr [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x00147450: lea eax, dword ptr [edi + 5]; pop edi; ret; 
0x0008f00c: lea eax, dword ptr [edi + 6]; pop edi; pop esi; pop ebx; ret; 
0x00147460: lea eax, dword ptr [edi + 6]; pop edi; ret; 
0x0008f02a: lea eax, dword ptr [edi + 7]; pop edi; pop esi; pop ebx; ret; 
0x0014726d: lea eax, dword ptr [edi + 7]; pop edi; ret; 
0x0008f048: lea eax, dword ptr [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x00147470: lea eax, dword ptr [edi + 8]; pop edi; ret; 
0x0008f05e: lea eax, dword ptr [edi + 9]; pop edi; pop esi; pop ebx; ret; 
0x00147480: lea eax, dword ptr [edi + 9]; pop edi; ret; 
0x000955ba: lea eax, dword ptr [edi + eax + 0x10]; pop edi; ret; 
0x000955ca: lea eax, dword ptr [edi + eax + 0x20]; pop edi; ret; 
0x000954af: lea eax, dword ptr [edi + eax + 0x30]; pop edi; ret; 
0x00134b2d: lea eax, dword ptr [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134bbd: lea eax, dword ptr [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134c4d: lea eax, dword ptr [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134cdd: lea eax, dword ptr [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134d6d: lea eax, dword ptr [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134dfd: lea eax, dword ptr [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013461d: lea eax, dword ptr [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001346ad: lea eax, dword ptr [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013473d: lea eax, dword ptr [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001347cd: lea eax, dword ptr [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013485d: lea eax, dword ptr [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001348ed: lea eax, dword ptr [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013497d: lea eax, dword ptr [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134a0d: lea eax, dword ptr [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134a9d: lea eax, dword ptr [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0011a768: lea eax, dword ptr [edi + edi*8 - 1]; dec dword ptr [ebx + 0x4c892050]; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x000e342b: lea eax, dword ptr [edi + edi*8 - 1]; jmp dword ptr [ebp - 0x75]; 
0x00074f63: lea eax, dword ptr [edi + edx]; mov edx, dword ptr [ebx - 0x15c]; and eax, ecx; sub esi, eax; mov dword ptr [esp], esi; call dword ptr [edx]; 
0x0010ffcc: lea eax, dword ptr [edi + esi]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00147833: lea eax, dword ptr [edi - 0x10]; pop edi; ret; 
0x001478f0: lea eax, dword ptr [edi - 0xa]; pop edi; ret; 
0x001478e0: lea eax, dword ptr [edi - 0xb]; pop edi; ret; 
0x00147858: lea eax, dword ptr [edi - 0xc]; pop edi; ret; 
0x001478d0: lea eax, dword ptr [edi - 0xd]; pop edi; ret; 
0x001478c0: lea eax, dword ptr [edi - 0xe]; pop edi; ret; 
0x001478b0: lea eax, dword ptr [edi - 0xf]; pop edi; ret; 
0x000e89ba: lea eax, dword ptr [edi - 1]; cmp eax, 2; cmova esi, dword ptr [esp + 0x2c]; xchg edi, ebx; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x00147960: lea eax, dword ptr [edi - 1]; pop edi; ret; 
0x00095a61: lea eax, dword ptr [edi - 1]; pop esi; pop edi; pop ebp; ret; 
0x00147950: lea eax, dword ptr [edi - 2]; pop edi; ret; 
0x00095a6b: lea eax, dword ptr [edi - 2]; pop esi; pop edi; pop ebp; ret; 
0x00147940: lea eax, dword ptr [edi - 3]; pop edi; ret; 
0x00095a75: lea eax, dword ptr [edi - 3]; pop esi; pop edi; pop ebp; ret; 
0x001478ab: lea eax, dword ptr [edi - 4]; pop edi; ret; 
0x00147930: lea eax, dword ptr [edi - 5]; pop edi; ret; 
0x00147920: lea eax, dword ptr [edi - 6]; pop edi; ret; 
0x00147910: lea eax, dword ptr [edi - 7]; pop edi; ret; 
0x00147882: lea eax, dword ptr [edi - 8]; pop edi; ret; 
0x00147900: lea eax, dword ptr [edi - 9]; pop edi; ret; 
0x00109d00: lea eax, dword ptr [edi]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00147400: lea eax, dword ptr [edi]; pop edi; ret; 
0x0008b81d: lea eax, dword ptr [edx + 0x10]; pop edi; pop ebx; ret; 
0x00089ace: lea eax, dword ptr [edx + 0xa]; pop edi; ret; 
0x00089c0e: lea eax, dword ptr [edx + 0xa]; ret; 
0x0008c837: lea eax, dword ptr [edx + 0xb]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000899be: lea eax, dword ptr [edx + 0xb]; pop edi; ret; 
0x00089c2e: lea eax, dword ptr [edx + 0xb]; ret; 
0x0008b7de: lea eax, dword ptr [edx + 0xc]; pop edi; pop ebx; ret; 
0x00089af2: lea eax, dword ptr [edx + 0xc]; pop edi; ret; 
0x00089c52: lea eax, dword ptr [edx + 0xc]; ret; 
0x00089b12: lea eax, dword ptr [edx + 0xd]; pop edi; ret; 
0x00089c72: lea eax, dword ptr [edx + 0xd]; ret; 
0x0008c7e5: lea eax, dword ptr [edx + 0xe]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00089b32: lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x00089c92: lea eax, dword ptr [edx + 0xe]; ret; 
0x000899f8: lea eax, dword ptr [edx + 0xf]; pop edi; ret; 
0x00089ca8: lea eax, dword ptr [edx + 0xf]; ret; 
0x00089a16: lea eax, dword ptr [edx + 1]; pop edi; ret; 
0x00089b56: lea eax, dword ptr [edx + 1]; ret; 
0x00089a2c: lea eax, dword ptr [edx + 2]; pop edi; ret; 
0x0003222c: lea eax, dword ptr [edx + 2]; pop esi; pop edi; pop ebp; ret; 
0x00089b6c: lea eax, dword ptr [edx + 2]; ret; 
0x0008c914: lea eax, dword ptr [edx + 3]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00089944: lea eax, dword ptr [edx + 3]; pop edi; ret; 
0x00089b74: lea eax, dword ptr [edx + 3]; ret; 
0x0008b771: lea eax, dword ptr [edx + 4]; pop edi; pop ebx; ret; 
0x00089a4a: lea eax, dword ptr [edx + 4]; pop edi; ret; 
0x00089b8a: lea eax, dword ptr [edx + 4]; ret; 
0x00089a5c: lea eax, dword ptr [edx + 5]; pop edi; ret; 
0x00089b9c: lea eax, dword ptr [edx + 5]; ret; 
0x00089a7a: lea eax, dword ptr [edx + 6]; pop edi; ret; 
0x00089baa: lea eax, dword ptr [edx + 6]; ret; 
0x0008c8bd: lea eax, dword ptr [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00089978: lea eax, dword ptr [edx + 7]; pop edi; ret; 
0x00089bb8: lea eax, dword ptr [edx + 7]; ret; 
0x0008b7a3: lea eax, dword ptr [edx + 8]; pop edi; pop ebx; ret; 
0x00089a8e: lea eax, dword ptr [edx + 8]; pop edi; ret; 
0x00089bce: lea eax, dword ptr [edx + 8]; ret; 
0x00089ab0: lea eax, dword ptr [edx + 9]; pop edi; ret; 
0x00089bf0: lea eax, dword ptr [edx + 9]; ret; 
0x00095c6a: lea eax, dword ptr [edx + eax + 0x30]; ret; 
0x001103f0: lea eax, dword ptr [edx + esi + 8]; pop esi; ret; 
0x0002ee60: lea eax, dword ptr [edx - 1]; mov dword ptr [ecx + 0x58], eax; mov eax, edx; ret; 
0x00082d9b: lea eax, dword ptr [edx - 1]; pop esi; ret; 
0x00089a04: lea eax, dword ptr [edx]; pop edi; ret; 
0x00089b44: lea eax, dword ptr [edx]; ret; 
0x00113c3c: lea eax, dword ptr [esi + 0x2260]; add esp, 0x14; pop ebx; pop esi; ret; 
0x000679be: lea eax, dword ptr [esi + 0x28]; mov dword ptr [esp + 4], eax; mov dword ptr [esp], ebp; call edi; 
0x00067b6e: lea eax, dword ptr [esi + 0x54]; mov dword ptr [esp + 4], eax; mov dword ptr [esp], ebp; call edi; 
0x0007d3b3: lea eax, dword ptr [esi + 3]; pop esi; pop edi; ret; 
0x00033a7c: lea eax, dword ptr [esi + 6]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0006eb76: lea eax, dword ptr [esi + edi]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00033259: lea eax, dword ptr [esi - 4]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0011e533: lea eax, dword ptr [esp + 0x18]; mov dword ptr [esp], eax; call dword ptr [esp + 0x40]; add esp, 0x3c; ret; 
0x0010e513: lea eax, dword ptr [esp + 0x30]; mov dword ptr [esp], eax; call 0x10e3f0; add esp, 0x2c; ret; 
0x00095879: lea eax, dword ptr es:[ecx + eax + 0x10]; ret; 
0x000955b9: lea eax, dword ptr es:[edi + eax + 0x10]; pop edi; ret; 
0x000e0069: lea ebp, dword ptr [edi]; or al, 0; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x00053d2e: lea ebp, dword ptr [esi + edi*8 - 1]; dec dword ptr [ebx - 0x1a34b]; jmp dword ptr [ebp - 0x77]; 
0x00053f44: lea ebp, dword ptr [esi + edi*8 - 1]; dec dword ptr [ecx - 0x19b43]; dec dword ptr [ebx - 0x1a34b]; jmp dword ptr [ebp - 0x75]; 
0x0004f960: lea ebp, dword ptr [esi + edi*8 - 1]; jmp dword ptr [ebp - 0x75]; 
0x001118c3: lea ebp, dword ptr [esp + 0x24]; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x001591d1: lea ebx, dword ptr [esi - 0x3271f33]; test al, 0x97; xchg eax, esp; ret; 
0x0003f897: lea ecx, dword ptr [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00083aed: lea ecx, dword ptr [eax + 1]; xor eax, eax; test dl, dl; cmovne eax, ecx; add esp, 0xc; ret; 
0x0009841a: lea ecx, dword ptr [eax + 8]; mov eax, 0; cmove eax, ecx; ret; 
0x000914e6: lea ecx, dword ptr [eax - 0x3e7efff7]; lcall 0x910c:0x3000c93; jmp ecx; 
0x000b4e7c: lea ecx, dword ptr [ebp - 0x28]; mov dword ptr [esp], ecx; mov dword ptr [esp + 4], edx; call dword ptr [ebp - 0x34]; 
0x0011f554: lea ecx, dword ptr [ebx - 0x14f4]; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 0x14], edx; pop ebx; ret; 
0x000703bf: lea ecx, dword ptr [ebx - 0x754]; mov esi, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov dword ptr [edx + 0xb8], ecx; add esp, 0x1c; ret; 
0x0003f9b5: lea ecx, dword ptr [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000f3bb9: lea ecx, dword ptr [ecx + esi*4]; add eax, dword ptr [edx + ecx]; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0007b3c5: lea ecx, dword ptr [edi + 0x19]; mov dword ptr [esp + 4], ecx; call eax; 
0x0007b01b: lea ecx, dword ptr [edi + ebp + 1]; mov dword ptr [esp + 4], ecx; call eax; 
0x000e2309: lea ecx, dword ptr [edi + edi*8 - 1]; dec dword ptr [ebx - 0xab6b]; jmp dword ptr [ebp - 0x77]; 
0x0007d93b: lea ecx, dword ptr [edx + 1]; cmovne edx, ecx; mov dword ptr [ebx + 0x1a30], edx; add esp, 0x100; pop ebx; ret; 
0x0007c90e: lea ecx, dword ptr [edx + ecx*8 + 0xb]; jmp ecx; 
0x000ddc14: lea ecx, dword ptr [esp + 0x10]; xchg ebx, edx; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ddd94: lea ecx, dword ptr [esp + 0x10]; xchg ebx, edx; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000ddcd4: lea ecx, dword ptr [esp + 0x10]; xchg ebx, edx; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x00064f69: lea ecx, dword ptr [esp + 0x18]; mov dword ptr [esp + 4], ecx; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x0011f16b: lea ecx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0x20]; 
0x0011e9b8: lea ecx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x0011e603: lea ecx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx]; 
0x0011f03a: lea ecx, dword ptr [esp + 0x2c]; mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x0011ef52: lea ecx, dword ptr [esp + 0x2c]; mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x20]; 
0x0011e6d1: lea ecx, dword ptr [esp + 0x2c]; mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x0011b486: lea ecx, dword ptr [esp + 0x2c]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], 0xd; mov dword ptr [esp], eax; call dword ptr [edx + 0x14]; 
0x00111990: lea ecx, dword ptr [esp + 0x30]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x18], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x000ba6b0: lea ecx, dword ptr [esp + 0x34]; mov edx, 1; xchg ebx, edx; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x001185da: lea ecx, dword ptr [esp + 0x5c]; mov dword ptr [esp + 0x2c], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x00118620: lea ecx, dword ptr [esp + 0x5c]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x0011b3d3: lea ecx, dword ptr [esp + 0xa8]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], 6; mov dword ptr [esp], eax; call dword ptr [edx + 0x14]; 
0x000f0096: lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f00bd: lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011aca7: lea edi, dword ptr [ebp - 0xa8]; mov eax, dword ptr [ecx]; mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp + 4], edi; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x001470c9: lea edi, dword ptr [edi]; add eax, 1; ret; 
0x000a73da: lea edi, dword ptr [edi]; add eax, 3; ret; 
0x00095c89: lea edi, dword ptr [edi]; bsf eax, eax; lea eax, dword ptr [eax + edx + 0x10]; ret; 
0x00095829: lea edi, dword ptr [edi]; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x10]; ret; 
0x0014849a: lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 0xa]; ret; 
0x001484aa: lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 0xb]; ret; 
0x001484ba: lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 0xd]; ret; 
0x001484ca: lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 0xe]; ret; 
0x001484da: lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 0xf]; ret; 
0x0014843a: lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 2]; ret; 
0x0014844a: lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 3]; ret; 
0x0014845a: lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 5]; ret; 
0x0014846a: lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 6]; ret; 
0x0014847a: lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 7]; ret; 
0x001499b9: lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 8]; ret; 
0x0014848a: lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 9]; ret; 
0x00147489: lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 0xa]; pop edi; ret; 
0x00147499: lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 0xb]; pop edi; ret; 
0x001474a9: lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 0xc]; pop edi; ret; 
0x001474b9: lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 0xd]; pop edi; ret; 
0x001474c9: lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 0xe]; pop edi; ret; 
0x0014740a: lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 1]; pop edi; ret; 
0x00147419: lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 2]; pop edi; ret; 
0x00147429: lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 3]; pop edi; ret; 
0x00147439: lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 4]; pop edi; ret; 
0x00147449: lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 5]; pop edi; ret; 
0x00147459: lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 6]; pop edi; ret; 
0x00147469: lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 8]; pop edi; ret; 
0x00147479: lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 9]; pop edi; ret; 
0x001478e9: lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 0xa]; pop edi; ret; 
0x001478d9: lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 0xb]; pop edi; ret; 
0x001478c9: lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 0xd]; pop edi; ret; 
0x001478b9: lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 0xe]; pop edi; ret; 
0x00147959: lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 1]; pop edi; ret; 
0x00147949: lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 2]; pop edi; ret; 
0x00147939: lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 3]; pop edi; ret; 
0x00149c49: lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 4]; pop edi; ret; 
0x00147929: lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 5]; pop edi; ret; 
0x00147919: lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 6]; pop edi; ret; 
0x00147909: lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 7]; pop edi; ret; 
0x001478f9: lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 9]; pop edi; ret; 
0x001473fa: lea edi, dword ptr [edi]; lea eax, dword ptr [edi]; pop edi; ret; 
0x00148afa: lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 0xa]; ret; 
0x00148b0a: lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 0xc]; ret; 
0x00148b1a: lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 0xd]; ret; 
0x00148b2a: lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 0xe]; ret; 
0x00148a89: lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 1]; ret; 
0x00148a9a: lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 2]; ret; 
0x00148aaa: lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 4]; ret; 
0x00148aba: lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 5]; ret; 
0x00148aca: lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 6]; ret; 
0x00148ada: lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 8]; ret; 
0x00148aea: lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 9]; ret; 
0x00087609: lea edi, dword ptr [edi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0008764a: lea edi, dword ptr [edi]; mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x000733e9: lea edi, dword ptr [edi]; mov eax, 0xffffffff; ret; 
0x000a73f9: lea edi, dword ptr [edi]; mov eax, 1; ret; 
0x000a7409: lea edi, dword ptr [edi]; mov eax, 2; ret; 
0x000a7419: lea edi, dword ptr [edi]; mov eax, 3; ret; 
0x000a7429: lea edi, dword ptr [edi]; mov eax, 4; ret; 
0x000a7439: lea edi, dword ptr [edi]; mov eax, 5; ret; 
0x000a7449: lea edi, dword ptr [edi]; mov eax, 6; ret; 
0x000a7459: lea edi, dword ptr [edi]; mov eax, 7; ret; 
0x00027029: lea edi, dword ptr [edi]; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x00073459: lea edi, dword ptr [edi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x001298f9: lea edi, dword ptr [edi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x00149989: lea edi, dword ptr [edi]; mov eax, ecx; ret; 
0x0008761a: lea edi, dword ptr [edi]; mov word ptr [ecx], dx; pop ebx; ret; 
0x00087679: lea edi, dword ptr [edi]; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x000875f9: lea edi, dword ptr [edi]; pop ebx; ret; 
0x001327e9: lea edi, dword ptr [edi]; pop ebx; xor eax, eax; ret; 
0x001474d9: lea edi, dword ptr [edi]; xor eax, eax; pop edi; ret; 
0x00067909: lea edi, dword ptr [edi]; xor eax, eax; ret; 
0x0006cf48: lea edi, dword ptr [esp + 0x5c]; mov dword ptr [esp + 0x10], edi; mov edi, dword ptr [esp + 0x3c]; mov dword ptr [esp], edi; call dword ptr [edi + 0xc]; 
0x000ddabf: lea edi, dword ptr [esp + 0xc]; call 0x129d73; add ebx, 0xc552c; xchg edi, ebx; mov eax, 0x13e; call dword ptr gs:[0x10]; 
0x0003f9b2: lea edx, dword ptr [eax + 0x6c]; lea ecx, dword ptr [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0003f850: lea edx, dword ptr [eax + 0x6c]; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0002ee47: lea edx, dword ptr [eax + 1]; mov dword ptr [ecx + 0x54], edx; ret; 
0x000f160d: lea edx, dword ptr [eax + eax]; mov edi, dword ptr [ebp - 0x40c]; mov ecx, dword ptr [ebp - 0x3fc]; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000f1d7f: lea edx, dword ptr [eax + edx*2]; add word ptr [edx], 1; add esp, 8; pop ebx; ret; 
0x000bfd7b: lea edx, dword ptr [eax - 0x7a000002]; sal byte ptr [ecx + ebx*2 - 0x75], 0xb5; sar dh, 0xff; jmp dword ptr [ebp - 0x7d]; 
0x000947e6: lea edx, dword ptr [ebp + 9]; add byte ptr [ecx + 0xc611ac1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0001a667: lea edx, dword ptr [ebp - 0x1c]; mov dword ptr [esp], edx; call eax; 
0x0005d6f9: lea edx, dword ptr [ebp - 0x34]; mov dword ptr [esp + 8], edi; mov dword ptr [esp], edx; call eax; 
0x00098d2c: lea edx, dword ptr [ebp - 0x44]; mov dword ptr [esp + 4], edx; mov eax, dword ptr [eax + 8]; mov dword ptr [esp], eax; call edi; 
0x0005670e: lea edx, dword ptr [ebp - 0x5c]; mov dword ptr [esp], edx; call eax; 
0x0004e38e: lea edx, dword ptr [ebp - 0x64]; mov dword ptr [esp], edx; call eax; 
0x00003d95: lea edx, dword ptr [ebp - 0x6d]; push ebx; inc eax; or byte ptr fs:[ebx + 0x4e], ch; ret 0x6bba; 
0x000428b6: lea edx, dword ptr [ebp - 0x70]; mov dword ptr [esp], edx; call eax; 
0x0007d6a8: lea edx, dword ptr [ebx + 0x19ac]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0010a570: lea edx, dword ptr [ebx + 0x31b8]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0011eaca: lea edx, dword ptr [ebx + 0x3474]; mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 8]; 
0x000974a6: lea edx, dword ptr [ebx - 0x10c064]; cmove eax, edx; add esp, 8; pop ebx; ret; 
0x00096826: lea edx, dword ptr [ebx - 0x10cbb4]; cmove eax, edx; add esp, 8; pop ebx; ret; 
0x001247f9: lea edx, dword ptr [ebx - 0x1470]; mov dword ptr [ebx + 0xee0], edx; add esp, 8; pop ebx; ret; 
0x00074f31: lea edx, dword ptr [ebx - 0x44875]; call 0x74da0; mov edx, dword ptr [ebx - 0x15c]; mov dword ptr [esp], 0; call dword ptr [edx]; 
0x00064d72: lea edx, dword ptr [ebx - 0x7b4]; mov dword ptr [eax + 0x94], edx; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0xb8], edx; pop ebx; ret; 
0x0011ba79: lea edx, dword ptr [ebx - 0x84aa4]; mov dword ptr [esp + 8], edx; call dword ptr [eax]; 
0x00129ea7: lea edx, dword ptr [ebx - 0xa74]; mov dword ptr [eax + 0x94], edx; add esp, 0x28; pop ebx; ret; 
0x000c5c66: lea edx, dword ptr [ebx - 0xdd464]; cmove eax, edx; add esp, 8; pop ebx; ret; 
0x0011c3f1: lea edx, dword ptr [ecx + 0x33ac]; mov dword ptr gs:[eax], edx; ret; 
0x000195a5: lea edx, dword ptr [ecx + ebp*8 + 0x258]; mov dword ptr [esp], edx; call eax; 
0x00078211: lea edx, dword ptr [ecx - 0x12b3a4]; mov dword ptr [eax], edx; mov eax, dword ptr [ecx - 0xc4]; lea edx, dword ptr [ecx - 0x12ba44]; mov dword ptr [eax], edx; ret; 
0x0007821f: lea edx, dword ptr [ecx - 0x12ba44]; mov dword ptr [eax], edx; ret; 
0x0007b128: lea edx, dword ptr [edi + 0x19]; mov dword ptr [esp], edx; call eax; 
0x0011412b: lea edx, dword ptr [edi + 4]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x0011415b: lea edx, dword ptr [edi + 4]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x00116cd4: lea edx, dword ptr [edi + 8]; mov dword ptr [esp], edx; call eax; 
0x000b296c: lea edx, dword ptr [edi + edi*8 - 1]; dec dword ptr [ebx - 0xaf73]; inc ecx; cli; add eax, 0x291ff8c1; ret 0xd26b; 
0x000e22ab: lea edx, dword ptr [edi + edi*8 - 1]; jmp dword ptr [ebp - 0x75]; 
0x000c6af3: lea edx, dword ptr [edx + edx*8 + 5]; mov eax, edx; pop ebx; pop esi; ret; 
0x0011a642: lea edx, dword ptr [esi + 0x38]; mov dword ptr [esp], edx; call eax; 
0x00119bf2: lea edx, dword ptr [esi + 0x4c]; mov dword ptr [esp], edx; call eax; 
0x00115f85: lea edx, dword ptr [esi + 0xac]; mov dword ptr [esp], edx; call eax; 
0x00064289: lea edx, dword ptr [esp + 0x20]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x48]; 
0x000479a6: lea edx, dword ptr [esp + 0x20d0]; mov dword ptr [esp], edx; call eax; 
0x00112a8c: lea edx, dword ptr [esp + 0x2898]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x00112aab: lea edx, dword ptr [esp + 0x2898]; mov dword ptr [esp], edx; call eax; 
0x0011f023: lea edx, dword ptr [esp + 0x28]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x0011eff0: lea edx, dword ptr [esp + 0x28]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x0011ef3b: lea edx, dword ptr [esp + 0x28]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x20]; 
0x0011ef08: lea edx, dword ptr [esp + 0x28]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x0011e688: lea edx, dword ptr [esp + 0x28]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x0011e6bb: lea edx, dword ptr [esp + 0x28]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x0011f007: lea edx, dword ptr [esp + 0x2c]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x0011ef1f: lea edx, dword ptr [esp + 0x2c]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x0011e69f: lea edx, dword ptr [esp + 0x2c]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x0012b1c3: lea edx, dword ptr [esp + 0x30]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x48]; 
0x000988a7: lea edx, dword ptr [esp + 0x30]; mov dword ptr [esp + 4], edx; mov eax, dword ptr [eax + 8]; mov dword ptr [esp], eax; call esi; 
0x0006febc: lea edx, dword ptr [esp + 0x30]; mov eax, dword ptr [ebp + eax + 0x94]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x48]; 
0x0011cc23: lea edx, dword ptr [esp + 0x4d0]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x0011ce00: lea edx, dword ptr [esp + 0x530]; mov dword ptr [esp + 4], esi; mov dword ptr [esp], edx; call dword ptr [eax + 0xc]; 
0x0006db8c: lea edx, dword ptr [esp + 0x60]; mov eax, dword ptr [ebp + eax + 0x94]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x48]; 
0x0005ba5e: lea edx, dword ptr [esp + 0x8190]; mov dword ptr [esp], edx; call eax; 
0x0011186c: lea edx, dword ptr [esp + 0x84]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 4]; 
0x000bf14c: lea esi, dword ptr [eax - 0x16000002]; ret 0xfffd; 
0x00043350: lea esi, dword ptr [eax - 0x76000006]; mov ebp, 0xfffffacc; mov dword ptr [ebp - 0x4f4], eax; mov dword ptr [ebp - 0x54c], ecx; jmp edx; 
0x00169dc8: lea esi, dword ptr [eax]; int1; call esp; 
0x000ed2d8: lea esi, dword ptr [ebx - 0x43a59]; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x000ca0e3: lea esi, dword ptr [ecx + 1]; cmove eax, esi; pop esi; pop edi; ret; 
0x0007a47b: lea esi, dword ptr [ecx - 4]; cmovne eax, esi; pop esi; ret; 
0x000294f1: lea esi, dword ptr [edi + edi*8 - 1]; dec dword ptr [ebx - 0x936b]; jmp dword ptr [esi - 0x7d]; 
0x00002efa: lea esi, dword ptr [edi]; ret 0x793b; 
0x00051f76: lea esi, dword ptr [esi + edi*8 - 1]; dec dword ptr [edi]; inc esp; ret 0xc985; 
0x00098434: lea esi, dword ptr [esi]; add eax, 0xc; nop; lea esi, dword ptr [esi]; ret; 
0x000a73cc: lea esi, dword ptr [esi]; add eax, 1; ret; 
0x0009842c: lea esi, dword ptr [esi]; add eax, 8; ret; 
0x000b3574: lea esi, dword ptr [esi]; add esp, 0x10; pop esi; pop edi; pop ebp; ret; 
0x000d770c: lea esi, dword ptr [esi]; add esp, 0x14; xor eax, eax; pop ebx; pop esi; ret; 
0x000792bc: lea esi, dword ptr [esi]; add esp, 0x18; pop ebx; ret; 
0x00097b74: lea esi, dword ptr [esi]; add esp, 0x40; pop esi; pop edi; pop ebp; ret; 
0x0007231c: lea esi, dword ptr [esi]; and dword ptr [esi], 0xfffffffe; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00095c79: lea esi, dword ptr [esi]; bsf eax, eax; add eax, edx; ret; 
0x0009555a: lea esi, dword ptr [esi]; bsf eax, eax; lea eax, dword ptr [eax + edi - 0x10]; pop edi; ret; 
0x00095c99: lea esi, dword ptr [esi]; bsf eax, eax; lea eax, dword ptr [eax + edx + 0x20]; ret; 
0x00095839: lea esi, dword ptr [esi]; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x20]; ret; 
0x00095849: lea esi, dword ptr [esi]; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x30]; ret; 
0x0009596c: lea esi, dword ptr [esi]; bsr edi, edi; lea eax, dword ptr [eax + edi + 0x10]; pop edi; ret; 
0x00124115: lea esi, dword ptr [esi]; call 0x124030; add esp, 0x18; pop ebx; ret; 
0x00129adc: lea esi, dword ptr [esi]; call 0x129930; add esp, 0x18; pop ebx; ret; 
0x0002319a: lea esi, dword ptr [esi]; call 0x129d77; add ecx, 0x17fe4f; mov eax, dword ptr [ecx + 0xfe4]; ret; 
0x0006ab24: lea esi, dword ptr [esi]; call 0x72e90; add esp, 0x18; pop ebx; ret; 
0x0014abc5: lea esi, dword ptr [esi]; call dword ptr [esi]; 
0x00149c3a: lea esi, dword ptr [esi]; lea eax, dword ptr [edi - 8]; pop edi; ret; 
0x000ba6ac: lea esi, dword ptr [esi]; lea ecx, dword ptr [esp + 0x34]; mov edx, 1; xchg ebx, edx; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x001470c3: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; add eax, 1; ret; 
0x000a73d4: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; add eax, 3; ret; 
0x00095c86: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; bsf eax, eax; lea eax, dword ptr [eax + edx + 0x10]; ret; 
0x00095826: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x10]; ret; 
0x00148494: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 0xa]; ret; 
0x001484a4: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 0xb]; ret; 
0x001484b4: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 0xd]; ret; 
0x001484c4: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 0xe]; ret; 
0x001484d4: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 0xf]; ret; 
0x00148434: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 2]; ret; 
0x00148444: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 3]; ret; 
0x00148454: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 5]; ret; 
0x00148464: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 6]; ret; 
0x00148474: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 7]; ret; 
0x001499b2: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 8]; ret; 
0x00148484: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 9]; ret; 
0x00147485: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 0xa]; pop edi; ret; 
0x00147495: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 0xb]; pop edi; ret; 
0x001474a5: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 0xc]; pop edi; ret; 
0x001474b5: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 0xd]; pop edi; ret; 
0x001474c5: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 0xe]; pop edi; ret; 
0x00147404: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 1]; pop edi; ret; 
0x00147415: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 2]; pop edi; ret; 
0x00147425: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 3]; pop edi; ret; 
0x00147435: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 4]; pop edi; ret; 
0x00147445: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 5]; pop edi; ret; 
0x00147455: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 6]; pop edi; ret; 
0x00147465: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 8]; pop edi; ret; 
0x00147475: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 9]; pop edi; ret; 
0x001478e5: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 0xa]; pop edi; ret; 
0x001478d5: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 0xb]; pop edi; ret; 
0x001478c5: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 0xd]; pop edi; ret; 
0x001478b5: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 0xe]; pop edi; ret; 
0x00147955: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 1]; pop edi; ret; 
0x00147945: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 2]; pop edi; ret; 
0x00147935: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 3]; pop edi; ret; 
0x00149c45: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 4]; pop edi; ret; 
0x00147925: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 5]; pop edi; ret; 
0x00147915: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 6]; pop edi; ret; 
0x00147905: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 7]; pop edi; ret; 
0x001478f5: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 9]; pop edi; ret; 
0x001473f4: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi]; pop edi; ret; 
0x00148af4: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 0xa]; ret; 
0x00148b04: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 0xc]; ret; 
0x00148b14: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 0xd]; ret; 
0x00148b24: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 0xe]; ret; 
0x00148a83: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 1]; ret; 
0x00148a94: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 2]; ret; 
0x00148aa4: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 4]; ret; 
0x00148ab4: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 5]; ret; 
0x00148ac4: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 6]; ret; 
0x00148ad4: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 8]; ret; 
0x00148ae4: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 9]; ret; 
0x000733e6: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; mov eax, 0xffffffff; ret; 
0x000a73f3: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; mov eax, 1; ret; 
0x000a7406: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; mov eax, 2; ret; 
0x000a7416: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; mov eax, 3; ret; 
0x000a7426: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; mov eax, 4; ret; 
0x000a7436: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; mov eax, 5; ret; 
0x000a7446: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; mov eax, 6; ret; 
0x000a7456: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; mov eax, 7; ret; 
0x00027025: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x00149985: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; mov eax, ecx; ret; 
0x00087614: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; mov word ptr [ecx], dx; pop ebx; ret; 
0x000875f3: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; pop ebx; ret; 
0x001327e6: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; pop ebx; xor eax, eax; ret; 
0x001474d5: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; xor eax, eax; pop edi; ret; 
0x00067903: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; xor eax, eax; ret; 
0x0011cdfc: lea esi, dword ptr [esi]; lea edx, dword ptr [esp + 0x530]; mov dword ptr [esp + 4], esi; mov dword ptr [esp], edx; call dword ptr [eax + 0xc]; 
0x000899fd: lea esi, dword ptr [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, dword ptr [edx]; pop edi; ret; 
0x0008563c: lea esi, dword ptr [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x00087639: lea esi, dword ptr [esi]; mov dword ptr [ecx], edx; pop ebx; ret; 
0x000e98fd: lea esi, dword ptr [esi]; mov dword ptr [edx], 0; mov dword ptr [edx + 4], 0; ret; 
0x0007c25c: lea esi, dword ptr [esi]; mov dword ptr [esp], ebp; call dword ptr [esi + 0x1c]; 
0x000b483a: lea esi, dword ptr [esi]; mov dword ptr [esp], edi; call esi; 
0x00129afd: lea esi, dword ptr [esi]; mov dword ptr [esp], edx; call 0x129980; add esp, 0x18; pop ebx; ret; 
0x000b9aa2: lea esi, dword ptr [esi]; mov eax, 0x40; ret; 
0x000729bd: lea esi, dword ptr [esi]; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x000723cc: lea esi, dword ptr [esi]; mov eax, 0xffffffff; ret; 
0x00022f8c: lea esi, dword ptr [esi]; mov eax, 1; ret; 
0x00129a61: lea esi, dword ptr [esi]; mov eax, 2; add esp, 0xc; ret; 
0x00129a55: lea esi, dword ptr [esi]; mov eax, 8; add esp, 0xc; ret; 
0x0012b1bc: lea esi, dword ptr [esi]; mov eax, dword ptr [ebp + 0x4c]; lea edx, dword ptr [esp + 0x30]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x48]; 
0x000e5e1c: lea esi, dword ptr [esi]; mov eax, dword ptr [ebx - 0xf8]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x0011e584: lea esi, dword ptr [esi]; mov eax, dword ptr [ecx + 4]; mov dword ptr [esp + 4], esi; mov dword ptr [esp], ecx; call dword ptr [eax + 4]; 
0x0011e59a: lea esi, dword ptr [esi]; mov eax, dword ptr [ecx + 4]; mov dword ptr [esp + 4], esi; mov dword ptr [esp], ecx; call dword ptr [eax]; 
0x00032b14: lea esi, dword ptr [esi]; mov eax, dword ptr [ecx + 4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0011dc79: lea esi, dword ptr [esi]; mov eax, dword ptr [edi + 0xc]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x001185bd: lea esi, dword ptr [esi]; mov eax, dword ptr [edi + 4]; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x00127942: lea esi, dword ptr [esi]; mov eax, dword ptr [edx]; add esp, 0xc; ret; 
0x00113b3d: lea esi, dword ptr [esi]; mov eax, dword ptr [esi + 0x2398]; mov bp, 1; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x0012bd69: lea esi, dword ptr [esi]; mov eax, dword ptr [esi + 0x4c]; mov dword ptr [esp], esi; call dword ptr [eax + 0x44]; 
0x00118bda: lea esi, dword ptr [esi]; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0014909a: lea esi, dword ptr [esi]; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0012991c: lea esi, dword ptr [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x00129989: lea esi, dword ptr [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x0012997c: lea esi, dword ptr [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x00129929: lea esi, dword ptr [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0007314d: lea esi, dword ptr [esi]; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x000d8a22: lea esi, dword ptr [esi]; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00073469: lea esi, dword ptr [esi]; mov eax, dword ptr [esp + 4]; ret; 
0x00063d35: lea esi, dword ptr [esi]; mov eax, ebx; sub eax, dword ptr [ebx + ecx*4 - 0x13f2b0]; jmp eax; 
0x00097582: lea esi, dword ptr [esi]; mov eax, ebx; sub eax, dword ptr [ebx + edi*4 - 0x10ba60]; jmp eax; 
0x00078781: lea esi, dword ptr [esi]; mov eax, ebx; sub eax, dword ptr [ebx + esi*4 - 0x12a860]; jmp eax; 
0x000baca4: lea esi, dword ptr [esi]; mov eax, ebx; sub eax, dword ptr [ebx + esi*4 - 0xe8340]; jmp eax; 
0x000ba2ac: lea esi, dword ptr [esi]; mov eax, ebx; sub eax, dword ptr [ebx + esi*4 - 0xe8d38]; jmp eax; 
0x000b9d05: lea esi, dword ptr [esi]; mov eax, ebx; sub eax, dword ptr [ebx + esi*4 - 0xe92e0]; jmp eax; 
0x0007a484: lea esi, dword ptr [esi]; mov eax, ecx; and eax, 0xfffffff8; sub eax, 8; pop esi; ret; 
0x001499e9: lea esi, dword ptr [esi]; mov eax, ecx; ret; 
0x0008df2c: lea esi, dword ptr [esi]; mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x00147e2c: lea esi, dword ptr [esi]; mov eax, edi; pop edi; ret; 
0x000cc20d: lea esi, dword ptr [esi]; mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x00088299: lea esi, dword ptr [esi]; mov eax, edx; pop ebx; ret; 
0x000a74cc: lea esi, dword ptr [esi]; mov eax, edx; pop esi; ret; 
0x0011ea74: lea esi, dword ptr [esi]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000c98bc: lea esi, dword ptr [esi]; mov ecx, dword ptr [ebp - 0x100]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x00129be2: lea esi, dword ptr [esi]; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0x79400]; jmp ecx; 
0x000c069c: lea esi, dword ptr [esi]; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0xe2948]; jmp ecx; 
0x000eb01c: lea esi, dword ptr [esi]; mov ecx, edi; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000ddc44: lea esi, dword ptr [esi]; mov ecx, edi; xchg ebx, edx; mov eax, 0x6a; call dword ptr gs:[0x10]; 
0x000dddc4: lea esi, dword ptr [esi]; mov ecx, edi; xchg ebx, edx; mov eax, 0x6b; call dword ptr gs:[0x10]; 
0x000ddd04: lea esi, dword ptr [esi]; mov ecx, edi; xchg ebx, edx; mov eax, 0x6c; call dword ptr gs:[0x10]; 
0x00023345: lea esi, dword ptr [esi]; mov ecx, esi; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0011e5e2: lea esi, dword ptr [esi]; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], esi; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x0007c065: lea esi, dword ptr [esi]; mov edx, dword ptr [ebx - 0x78]; mov dword ptr [esp + 0x1c], eax; call dword ptr [edx]; 
0x0001a2e4: lea esi, dword ptr [esi]; mov edx, ebx; sub edx, dword ptr [ebx + eax*4 - 0x188d00]; jmp edx; 
0x00083b4c: lea esi, dword ptr [esi]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000eb9dd: lea esi, dword ptr [esi]; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; mov ebp, dword ptr [esp + 0xc]; add esp, 0x10; ret; 
0x000f288a: lea esi, dword ptr [esi]; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x00113259: lea esi, dword ptr [esi]; mov esi, ebx; sub esi, dword ptr [ebx + ecx*4 - 0x8fd88]; jmp esi; 
0x000899ec: lea esi, dword ptr [esi]; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, dword ptr [edx + 0xf]; pop edi; ret; 
0x0008562c: lea esi, dword ptr [esi]; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0008dd6d: lea esi, dword ptr [esi]; movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000876dc: lea esi, dword ptr [esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000876ec: lea esi, dword ptr [esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000876fc: lea esi, dword ptr [esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000857cd: lea esi, dword ptr [esi]; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0007213c: lea esi, dword ptr [esi]; movzx eax, byte ptr [eax]; add esp, 0x14; pop ebx; pop esi; ret; 
0x001278ec: lea esi, dword ptr [esi]; movzx eax, byte ptr [eax]; add esp, 0x24; pop esi; pop edi; ret; 
0x0012b78c: lea esi, dword ptr [esi]; movzx eax, byte ptr [edx]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0013ec2c: lea esi, dword ptr [esi]; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x0013ec3c: lea esi, dword ptr [esi]; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x0013ec4c: lea esi, dword ptr [esi]; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x0013ec5c: lea esi, dword ptr [esi]; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x0013ec6c: lea esi, dword ptr [esi]; movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0013ec0c: lea esi, dword ptr [esi]; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x000d4364: lea esi, dword ptr [esi]; movzx edx, al; mov ecx, ebx; sub ecx, dword ptr [ebx + edx*4 - 0xcec7c]; jmp ecx; 
0x0006a0fd: lea esi, dword ptr [esi]; or esi, 0x8000; mov dword ptr [edx], esi; pop esi; ret; 
0x00094ecc: lea esi, dword ptr [esi]; pop ebx; pop esi; ret; 
0x0008ba4a: lea esi, dword ptr [esi]; pop ebx; ret; 
0x0013080a: lea esi, dword ptr [esi]; pop ebx; xor eax, eax; ret; 
0x0008dc7c: lea esi, dword ptr [esi]; pop edi; pop esi; pop ebx; ret; 
0x000a71fc: lea esi, dword ptr [esi]; pop edi; pop esi; ret; 
0x00097eea: lea esi, dword ptr [esi]; pop esi; pop edi; pop ebp; ret; 
0x00091929: lea esi, dword ptr [esi]; pop esi; ret; 
0x0011433d: lea esi, dword ptr [esi]; pop esi; xor eax, eax; pop edi; pop ebp; ret; 
0x000834ac: lea esi, dword ptr [esi]; ret; 
0x0006c064: lea esi, dword ptr [esi]; sub eax, edx; sar eax, 2; sub eax, 1; pop esi; ret; 
0x00072aa4: lea esi, dword ptr [esi]; sub eax, edx; sub eax, 1; pop esi; ret; 
0x0006c124: lea esi, dword ptr [esi]; sub edx, dword ptr [eax + 4]; mov eax, dword ptr [ecx + 8]; sar edx, 2; sub eax, edx; ret; 
0x00129a71: lea esi, dword ptr [esi]; xor eax, eax; add esp, 0xc; ret; 
0x00112eac: lea esi, dword ptr [esi]; xor eax, eax; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000f7239: lea esi, dword ptr [esi]; xor eax, eax; pop ebx; ret; 
0x0009509c: lea esi, dword ptr [esi]; xor eax, eax; pop edi; ret; 
0x00083505: lea esi, dword ptr [esi]; xor eax, eax; pop esi; pop edi; lea esi, dword ptr [esi]; ret; 
0x000f0d1d: lea esi, dword ptr [esi]; xor eax, eax; pop esi; ret; 
0x00032a6c: lea esi, dword ptr [esi]; xor eax, eax; ret; 
0x000c07e5: lea esp, dword ptr [ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret 0x10; 
0x0001bf52: lea esp, dword ptr [ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret 0xc; 
0x00017159: lea esp, dword ptr [ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00027c1f: lea esp, dword ptr [ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret 8; 
0x0001a11e: lea esp, dword ptr [ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000b6a91: lea esp, dword ptr [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x00067c5a: lea esp, dword ptr [ebp - 8]; sub eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00042a18: lea esp, dword ptr [ebx + edi*8 - 1]; dec dword ptr [ecx + 0x4c892434]; and al, 4; call dword ptr [eax + 0x1c]; 
0x00045713: lea esp, dword ptr [ebx + edi*8 - 1]; jmp dword ptr [esi - 0x41]; 
0x00056cda: lea esp, dword ptr [edi + ebp*8 - 1]; inc dword ptr [ecx]; ret 0xc031; 
0x00052e1b: lea esp, dword ptr [esi + edi*8 - 1]; dec dword ptr [ebx - 0x1df4b]; jmp dword ptr [ebp - 0x75]; 
0x00050957: lea esp, dword ptr [esi + edi*8 - 1]; dec dword ptr [ebx - 0x21f73]; jmp dword ptr [ebp - 0x75]; 
0x000e0b69: lea esp, dword ptr [esp + ecx]; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0x12d]; call dword ptr gs:[0x10]; 
0x0001c914: lea esp, dword ptr ds:[ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0017a315: leave; aaa; out dx, eax; jmp dword ptr [edx]; 
0x000631c9: leave; adc byte ptr [eax - 0x4f14f3b2], cl; mov eax, ebx; sub eax, dword ptr [ebx + ecx*4 - 0x13fe18]; jmp eax; 
0x0016d3bd: leave; add al, byte ptr [eax]; shr bl, 1; stc; call eax; 
0x000b90a1: leave; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x0001a2e1: leave; add byte ptr [eax], al; lea esi, dword ptr [esi]; mov edx, ebx; sub edx, dword ptr [ebx + eax*4 - 0x188d00]; jmp edx; 
0x00168975: leave; add byte ptr [eax], al; popfd; in eax, dx; jmp dword ptr [eax]; 
0x0018bba9: leave; add dword ptr [eax], eax; push esp; xchg eax, ebx; cmc; call dword ptr [ecx]; 
0x00095ad3: leave; add eax, ecx; ret; 
0x0012eac7: leave; call 0x100770; sub esp, 4; add esp, 0x1c; ret; 
0x0012eae7: leave; call 0x100810; sub esp, 4; add esp, 0x1c; ret; 
0x0012eb07: leave; call 0x1008b0; sub esp, 4; add esp, 0x1c; ret; 
0x0012eb27: leave; call 0x100950; sub esp, 4; add esp, 0x1c; ret; 
0x0012eb47: leave; call 0x1009f0; sub esp, 4; add esp, 0x1c; ret; 
0x0012eb87: leave; call 0x100bd0; sub esp, 4; add esp, 0x1c; ret; 
0x0012ebc7: leave; call 0x100d10; sub esp, 4; add esp, 0x1c; ret; 
0x0012ec07: leave; call 0x100e50; sub esp, 4; add esp, 0x1c; ret; 
0x000b7c05: leave; cmp eax, -1; cmovne ecx, eax; mov eax, ecx; ret; 
0x0016656c: leave; fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x000e85b0: leave; idiv bh; add esp, 0x18; pop ebx; ret; 
0x000eecdf: leave; jmp dword ptr [ebp - 0x77]; 
0x00094004: leave; mov byte ptr [eax], cl; mov eax, edi; pop ebx; pop edi; ret; 
0x001904fd: leave; mov ch, dh; jmp dword ptr [edx]; 
0x00173e04: leave; mov cl, 0xec; call dword ptr [eax]; 
0x00097f26: leave; mov dword ptr [ecx + 4], 0; pop esi; pop edi; pop ebp; ret; 
0x0003f854: leave; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0003ea61: leave; mov edi, 0x100011; mov edx, esi; xchg edi, ebx; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x000e96cf: leave; mov edi, dword ptr [esp + 0x20]; mov esi, ecx; xchg edi, ebx; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x000e1482: leave; mov edx, dword ptr [esp + 0x14]; mov esi, ecx; xchg edi, ebx; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x00040ed3: leave; mov word ptr [0x1cc48300], es; ret; 
0x0008d3d3: leave; or dword ptr [eax], eax; add ecx, 0xcd27a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d3ae: leave; or dword ptr [eax], eax; add ecx, 0xcd29f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d38e: leave; or dword ptr [eax], eax; add ecx, 0xcd2bf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000e6613: leave; or eax, dword ptr [eax]; xchg edi, ebx; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x001769a2: leave; out dx, al; jmp dword ptr [edx]; 
0x0017c5a9: leave; out dx, eax; call edi; 
0x001327dd: leave; push ecx; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0016e499: leave; sti; jmp eax; 
0x0016f44e: ljmp 0:0x23ff; inc ecx; push cs; or byte ptr [ebx + 0x40e6102], al; ret; 
0x0010fd88: ljmp 0:0x2b803; sub edx, 1; mov byte ptr [ecx + 1], dl; ret; 
0x000ca35d: ljmp 0x1024:0x748b1875; mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret 0xc; 
0x00134485: ljmp 0x17c3:0x81ffff58; and eax, dword ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0017a1bf: ljmp 0x220d:0x1cffef3a; xor edi, ebp; jmp dword ptr [edx]; 
0x00133582: ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00148001: ljmp 0x547:0x8d7b7206; pop edi; ret; 
0x0008d7c2: ljmp 0x5b5e:0x5f000005; ret; 
0x0002f56d: ljmp 0x5e00:0x1b8; pop edi; ret; 
0x001339ba: ljmp 0x5f07:0x88027402; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00133f0a: ljmp 0x5f07:0x88027402; pop ebx; ret; 
0x0014a8d5: ljmp 0x5f5e:0x5b1cc483; pop ebp; ret; 
0x00082598: ljmp 0x5f5e:0xd0895b01; pop ebp; ret; 
0x00148011: ljmp 0x647:0x8d6b7207; pop edi; ret; 
0x00083458: ljmp 0x665d:0x5f5eed74; nop; ret; 
0x0014b3c2: ljmp 0x68b:0x65fffb2b; mov dword ptr [eax + 8], 0; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0009591c: ljmp 0x74ff:0x85d72101; pop esp; bsr edi, edi; add eax, edi; pop edi; ret; 
0x00019bca: ljmp 0x7c8b:0x2024748b; and al, 0x24; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0010fc15: ljmp 0x7c8d:0x118b3d72; cmp byte ptr [eax*4 - 0x7cb98b2e], cl; ror byte ptr [esi], 0x39; ret 0x2c72; 
0x00148021: ljmp 0x847:0x8d5b7209; pop edi; ret; 
0x00127b52: ljmp 0x8538:0x24448b01; ret 0x840f; 
0x00127c71: ljmp 0x853c:0x24448b01; ret 0x1574; 
0x000711fc: ljmp 0x890f:0x74fffa83; ret 0xfac1; 
0x0010513d: ljmp 0x8918:0x24548918; ret 0xeac1; 
0x000d5adf: ljmp 0x8950:0x24548902; ret 0xfac1; 
0x000d598c: ljmp 0x8960:0x24548902; ret 0xfac1; 
0x000c271b: ljmp 0x8964:0x24548902; ret 0xfac1; 
0x000c3485: ljmp 0x8b00:0x4bd; or cl, byte ptr [ecx + 0xf38244c]; mov dh, 0x4a; add al, 0x83; ret 0x8305; 
0x00095894: ljmp 0x8d06:0x7cc20110; inc esp; add dword ptr [eax], esi; ret; 
0x00095884: ljmp 0x8d16:0x7cc20120; inc esp; add dword ptr [eax], esp; ret; 
0x00095874: ljmp 0x8d26:0x7cc20130; inc esp; add dword ptr [eax], edx; ret; 
0x00148031: ljmp 0x947:0x8d4b720a; pop edi; ret; 
0x00148041: ljmp 0xa47:0x8d3b720b; pop edi; ret; 
0x000d88b6: ljmp 0xbdeb:0x2c78302; nop; nop; nop; xor eax, eax; ret; 
0x0013b365: ljmp 0xc1b8:0xc381fffe; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013b2b6: ljmp 0xc327:0xc381fffe; add al, byte ptr [eax]; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00148051: ljmp 0xc47:0x8d2b720d; pop edi; ret; 
0x0011bb0b: ljmp 0xd089:0x28c48301; pop ebx; ret; 
0x00148061: ljmp 0xd47:0x8d1b720e; pop edi; ret; 
0x00148071: ljmp 0xe47:0x8d0b720f; pop edi; ret; 
0x0004a15e: ljmp 0xe783:0x1e28302; add dword ptr [ebx - 0x15745], ecx; jmp dword ptr [ebp - 0x75]; 
0x0016f6e9: ljmp 0xeac1:0xf60d1cff; jmp dword ptr [edx]; 
0x00035c1b: ljmp 0xf4c:0x24548501; xchg eax, ebp; ret 0xb60f; 
0x00130c2a: ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x001380af: ljmp 0xf702:0x89068b04; ret 0xf; 
0x000a7f2c: ljmp 0xfac1:0x2824448b; add eax, 0x291ff8c1; ret 0x1b8; 
0x00055252: ljmp 0xfc0:0x85000894; mov dword ptr [esi], ecx; add dword ptr [eax], eax; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x7d]; 
0x001669fc: ljmp 0xfceb:0x80fffcec; call dword ptr [eax]; 
0x001676b8: ljmp 0xfd4f:0x6afffd4e; jmp dword ptr [eax]; 
0x0016687d: ljmp 0xfffc:0xe824fffc; add al, 0xe9; cld; call esp; 
0x0002d79a: ljmp 0xfffe:0xb8c2091f; add byte ptr [eax], al; sub eax, edx; sar eax, 0x10; ret; 
0x0002f56a: ljmp 1:0xb8ea7501; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000d1bbc: ljmp 3:0xffe28108; add dh, dh; ret 0x7404; 
0x0016a52b: ljmp ptr [eax + 0x14000170]; ret; 
0x0016731b: ljmp ptr [eax + 0x3b]; std; call dword ptr [edx + 0x3a]; 
0x00168463: ljmp ptr [eax + 0x40000ac]; xchg eax, esi; in al, dx; call eax; 
0x0016e85b: ljmp ptr [eax + 0x44000341]; and bh, ah; call esp; 
0x0016775b: ljmp ptr [eax + 0x5d]; std; jmp dword ptr [edx + 0x5c]; 
0x00167bd3: ljmp ptr [eax + 0x74000079]; and ch, bl; call eax; 
0x00169bdb: ljmp ptr [eax + 0x7400014a]; adc al, 0xf1; call esp; 
0x0016ebf3: ljmp ptr [eax + ecx + 1]; add byte ptr [eax + esi], dl; cld; jmp dword ptr [eax + 9]; 
0x0016709b: ljmp ptr [eax - 0x4d0002e0]; pop ds; std; inc dword ptr [edx]; and ch, bh; call dword ptr [edx + 0x20]; 
0x0016eacb: ljmp ptr [eax - 0x58fffd24]; and bh, ah; jmp dword ptr [eax]; 
0x0016ca7b: ljmp ptr [eax - 0x7bfffd70]; pop es; stc; call esp; 
0x0016ad3b: ljmp ptr [eax]; call 0xcafaad43; hlt; call dword ptr [eax - 0x18]; 
0x00169bcb: ljmp ptr [eax]; dec edx; add dword ptr [eax], eax; add al, 0xe; int1; call dword ptr [eax + 0x4a]; 
0x0016dc1b: ljmp ptr [eax]; inc dword ptr [edx]; add byte ptr [ebx + edx*8], dh; cli; call dword ptr [eax - 1]; 
0x0016ae73: ljmp ptr [eax]; lock add dword ptr [eax], eax; and al, 0xe8; hlt; jmp dword ptr [eax - 0xf]; 
0x001682ab: ljmp ptr [eax]; mov dword ptr [0x6af40000], eax; in al, dx; call dword ptr [eax - 0x5d]; 
0x0016e1e3: ljmp ptr [ebp + ebx + 0x75a40003]; sti; call esp; 
0x0017ffef: ljmp ptr [ebx + 0x16]; push edi; push cs; or byte ptr [ebx + 0x40e4902], al; ret; 
0x0016a41b: ljmp ptr [ebx + ebp*2]; add dword ptr [eax], eax; inc esp; mov bl, 0xf1; call dword ptr [eax + 0x6b]; 
0x0016d86b: ljmp ptr [ebx + ebp*8 + 0x79240002]; cli; call eax; 
0x0016e17b: ljmp ptr [ebx + ebx + 0x6e340003]; sti; jmp eax; 
0x0016e15b: ljmp ptr [ebx + ebx]; add eax, dword ptr [eax]; adc al, 0x6d; sti; call dword ptr [eax + 0x1b]; 
0x0016e6f3: ljmp ptr [ebx + edi - 0xabfffd]; sti; call eax; 
0x0016b15b: ljmp ptr [ecx + eax]; add al, byte ptr [eax]; aaa; cmc; call dword ptr [eax + 1]; 
0x0016c3bb: ljmp ptr [ecx + ebp*2 + 0x7b140002]; clc; inc eax; imul eax, dword ptr [edx], 0xf87b5400; call esp; 
0x0016a3b3: ljmp ptr [ecx + ebp*2 - 0x4f8bffff]; int1; call esp; 
0x00166567: ljmp ptr [ecx - 0x36000328]; fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x0015afb5: ljmp ptr [ecx - 0x3c000500]; add dh, bh; jmp edi; 
0x0016cd33: ljmp ptr [ecx]; add al, byte ptr [eax]; xor al, 0x66; stc; call dword ptr [eax - 0x5f]; 
0x00165de7: ljmp ptr [ecx]; into; cld; dec dword ptr [ecx - 0x32]; cld; jmp esi; 
0x000c3483: ljmp ptr [ecx]; ljmp 0x8b00:0x4bd; or cl, byte ptr [ecx + 0xf38244c]; mov dh, 0x4a; add al, 0x83; ret 0x8305; 
0x0003b8ea: ljmp ptr [ecx]; ret 0x1b8; 
0x000854c8: ljmp ptr [ecx]; ret 0x280f; 
0x000c1e3f: ljmp ptr [ecx]; ret 0x48b; 
0x0004e8d4: ljmp ptr [ecx]; ret 0x953b; 
0x0005e601: ljmp ptr [ecx]; ret 0x9589; 
0x000429aa: ljmp ptr [ecx]; ret 0xbd83; 
0x00081738: ljmp ptr [ecx]; ret 0xc031; 
0x0008706c: ljmp ptr [ecx]; ret 0xc301; 
0x000490ba: ljmp ptr [ecx]; ret 0xd701; 
0x000bbc90: ljmp ptr [ecx]; ret 0xe283; 
0x00048f00: ljmp ptr [ecx]; ret 0xfac1; 
0x0002d258: ljmp ptr [ecx]; sal dword ptr [ecx], -0x38; shr eax, 0x1f; ret; 
0x00166f3b: ljmp ptr [edi + ebx]; std; call dword ptr [esi]; 
0x0016d093: ljmp ptr [edi + esi*4 + 2]; add byte ptr [ecx + esi*4 - 7], ah; jmp dword ptr [eax]; 
0x0018add3: ljmp ptr [edi]; add byte ptr [eax], al; add byte ptr [edi + 9], ch; add eax, dword ptr [edx]; push edx; ret; 
0x00166837: ljmp ptr [edx + 0x3afffce7]; call 0xe6c7683e; cld; jmp dword ptr [eax - 0x19]; 
0x001676bb: ljmp ptr [edx + 0x4f]; std; jmp dword ptr [eax]; 
0x0016cc5b: ljmp ptr [edx + ebx*4 + 0x47940002]; stc; call eax; 
0x00168713: ljmp ptr [edx + edi*4]; add ah, ah; ret; 
0x0016efab: ljmp ptr [edx + esi*2 - 0x23ebffff]; cld; jmp eax; 
0x0015afa5: ljmp ptr [edx]; add bh, bh; dec dword ptr [edi]; cld; jmp dword ptr [esi]; 
0x00167223: ljmp ptr [edx]; std; dec dword ptr [edx - 0x150002d2]; std; call esp; 
0x00166fb7: ljmp ptr [esi + ebx + 0x1efcfffd]; std; jmp esi; 
0x00167437: ljmp ptr [esp + edi + 0x3cfcfffd]; std; inc dword ptr [esi]; cmp al, 0xfd; call dword ptr [esi + 0x3c]; 
0x000060fa: lldt word ptr [ebx + 0x22000000]; add byte ptr [eax + eax], cl; ret 3; 
0x001694ec: lock adc dword ptr [ecx], eax; add byte ptr [edi + eax*2 - 0x10], dl; call dword ptr [eax]; 
0x000de47a: lock add byte ptr [eax], al; add byte ptr [ebx + 0xf424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xf8]; add esp, 0xfc; ret; 
0x000fc564: lock add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; xor esi, esi; xchg ebx, edi; call dword ptr gs:[0x10]; 
0x000fc2b6: lock add byte ptr [eax], al; add byte ptr [ecx + 0x80b9e8], cl; add byte ptr [eax], al; xor esi, esi; xchg ebx, edi; int 0x80; 
0x00054e39: lock add byte ptr [eax], al; cmp eax, 0x4000; sete dl; mov eax, edx; add esp, 0x7c; ret; 
0x0017e231: lock add byte ptr [eax], al; lodsb al, byte ptr [esi]; cmp eax, esi; jmp edi; 
0x0016ae75: lock add dword ptr [eax], eax; and al, 0xe8; hlt; jmp dword ptr [eax - 0xf]; 
0x0016e94d: lock add dword ptr [eax], eax; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; dec dword ptr [eax + esi*8 + 0x22a70001]; cld; jmp esp; 
0x0016e955: lock add dword ptr [eax], eax; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; jmp esp; 
0x0016ae8d: lock add dword ptr [eax], eax; dec esi; in eax, dx; hlt; call eax; 
0x0018e281: lock add dword ptr [eax], eax; lodsb al, byte ptr [esi]; or al, 0xf6; jmp dword ptr [edx]; 
0x0018e249: lock add dword ptr [eax], eax; test byte ptr [esi + esi*8], cl; call dword ptr [edx]; 
0x00129be0: lock dec dword ptr [ebp + 0xb6]; add byte ptr [ecx - 0x7c73d427], cl; add byte ptr [eax + edi*8 - 1], ch; jmp ecx; 
0x0007925e: lock dec dword ptr [ebx + 0x2444c700]; and byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x16a4e73c], al; in eax, dx; ret 0xffff; 
0x0010d9e6: lock dec dword ptr [ebx - 0xf775]; jmp dword ptr [ebp - 0x77]; 
0x0010b2ee: lock inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00169acc: lock xor byte ptr [ecx], al; add byte ptr [ecx + eax*8 - 0x10], al; call dword ptr [eax]; 
0x001775b4: lodsb al, byte ptr [esi]; adc ebp, edi; jmp dword ptr [esi]; 
0x0013caac: lodsb al, byte ptr [esi]; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0016cec5: lodsb al, byte ptr [esi]; add al, byte ptr [eax]; in al, 0x92; stc; jmp eax; 
0x001956ac: lodsb al, byte ptr [esi]; add al, byte ptr fs:[eax]; inc eax; xor al, 0xf7; jmp dword ptr [ebx]; 
0x00168465: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add al, 0x96; in al, dx; call eax; 
0x000ab63e: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 8; 
0x000aee0e: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0006d3e8: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x7cf174c6], cl; ret 0x8904; 
0x00182888: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [esi + esi + 0x28200001], cl; int1; jmp esi; 
0x0017a2f1: lodsb al, byte ptr [esi]; add byte ptr [eax], al; pop esi; xchg eax, ebx; out dx, eax; call dword ptr [eax]; 
0x00175d5c: lodsb al, byte ptr [esi]; add byte ptr [eax], al; ret; 
0x0017a321: lodsb al, byte ptr [esi]; add byte ptr [eax], al; xchg eax, ebx; out dx, eax; call dword ptr [eax]; 
0x001038d2: lodsb al, byte ptr [esi]; add byte ptr cs:[eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0018a31d: lodsb al, byte ptr [esi]; add dword ptr [eax], eax; aam 0xf5; hlt; call dword ptr [eax]; 
0x0004c528: lodsb al, byte ptr [esi]; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x00189eb1: lodsb al, byte ptr [esi]; add dword ptr [eax], eax; in al, dx; in al, 0xf4; call dword ptr [edx]; 
0x0018a34d: lodsb al, byte ptr [esi]; add dword ptr [eax], eax; mov ah, 0xf5; hlt; call dword ptr [eax]; 
0x00189e99: lodsb al, byte ptr [esi]; add dword ptr [eax], eax; movsb byte ptr es:[edi], byte ptr [esi]; in al, 0xf4; call dword ptr [edx]; 
0x0012b05b: lodsb al, byte ptr [esi]; and al, 0xb0; add byte ptr [eax], al; add al, ch; or eax, 0x81ffffed; ret; 
0x00194984: lodsb al, byte ptr [esi]; and esi, edi; jmp dword ptr [edi]; 
0x0016e6f4: lodsb al, byte ptr [esi]; cmp eax, dword ptr [ebx]; add byte ptr [edi + edi*8 - 5], dl; call eax; 
0x0017e234: lodsb al, byte ptr [esi]; cmp eax, esi; jmp edi; 
0x001838a4: lodsb al, byte ptr [esi]; dec ecx; int1; call dword ptr [ebx + 1]; 
0x0016a3b4: lodsb al, byte ptr [esi]; imul eax, dword ptr [ecx], 0xf1b07400; call esp; 
0x0016c3bc: lodsb al, byte ptr [esi]; imul eax, dword ptr [edx], 0xf87b1400; inc eax; imul eax, dword ptr [edx], 0xf87b5400; call esp; 
0x0017c934: lodsb al, byte ptr [esi]; in al, 0xef; jmp ebx; 
0x00168501: lodsb al, byte ptr [esi]; in al, dx; jmp dword ptr [eax - 0x4f]; 
0x0016a341: lodsb al, byte ptr [esi]; int1; jmp eax; 
0x000b82d0: lodsb al, byte ptr [esi]; mov cl, 0xfb; jmp dword ptr [ebp - 0x5f]; 
0x0019afac: lodsb al, byte ptr [esi]; mov ebp, 0xb5800002; clc; jmp dword ptr [eax]; 
0x001896ac: lodsb al, byte ptr [esi]; movsb byte ptr es:[edi], byte ptr [esi]; add dword ptr [eax], eax; pmaxsw mm5, mm0; jmp dword ptr [esi + 0xb]; 
0x0018e284: lodsb al, byte ptr [esi]; or al, 0xf6; jmp dword ptr [edx]; 
0x00119681: lodsb al, byte ptr [esi]; ret; 
0x00188154: lodsb al, byte ptr [esi]; sal bl, 1; call dword ptr [eax]; 
0x0016e1e4: lodsb al, byte ptr [esi]; sbb eax, 0x75a40003; sti; call esp; 
0x000a9826: lodsb al, byte ptr [esi]; sbb eax, dword ptr [eax]; add byte ptr [ecx], cl; ret 0x840f; 
0x0016e17c: lodsb al, byte ptr [esi]; sbb eax, dword ptr [ebx]; add byte ptr [esi + ebp*2], dh; sti; jmp eax; 
0x00189dac: lodsb al, byte ptr [esi]; stosd dword ptr es:[edi], eax; add dword ptr [eax], eax; xor dl, ah; hlt; jmp dword ptr [edx]; 
0x0019895c: lodsb al, byte ptr [esi]; xchg eax, edx; add al, byte ptr [eax]; cdq; xor bh, al; call dword ptr [eax]; 
0x0011125a: lodsb al, byte ptr [esi]; xor al, byte ptr [eax]; add byte ptr [ecx - 0x373edbec], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x0011123d: lodsb al, byte ptr [esi]; xor al, byte ptr [eax]; add byte ptr [edx], al; add esp, 0x18; pop ebx; ret; 
0x0013c9a2: lodsd eax, dword ptr [esi]; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000fefc2: lodsd eax, dword ptr [esi]; add al, byte ptr [eax]; add ecx, 0xa402f; mov eax, dword ptr [ecx - 0x14]; mov eax, dword ptr gs:[eax]; ret; 
0x00189fc1: lodsd eax, dword ptr [esi]; add dword ptr [eax], eax; or al, 0xe7; hlt; call esi; 
0x00189f91: lodsd eax, dword ptr [esi]; add dword ptr [eax], eax; pushfd; out 0xf4, al; jmp dword ptr [eax]; 
0x000eeff8: lodsd eax, dword ptr [esi]; add eax, dword ptr [eax]; add ebx, 0xb3ff9; xchg ebx, edx; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x00158787: lodsd eax, dword ptr [esi]; and al, 0x36; adc eax, 0x42d35a1d; cmp al, 0xe; push esp; jmp dword ptr [ebx - 0x40]; 
0x000ef549: lodsd eax, dword ptr [esi]; cmp cl, byte ptr [ebx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e359f: lodsd eax, dword ptr [esi]; cmp ebx, esi; dec dword ptr [ebx - 0xc36b]; dec dword ptr [ebx - 0xbb7b]; jmp dword ptr [ebp - 0x77]; 
0x0002fe02: lodsd eax, dword ptr [esi]; fadd dword ptr [edx + 0x74]; sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x0017b358: lodsd eax, dword ptr [esi]; imul bh; call dword ptr [eax]; 
0x0017b1d8: lodsd eax, dword ptr [esi]; imul edi; call dword ptr [eax]; 
0x0017b313: lodsd eax, dword ptr [esi]; lcall 0x6ce7:0xd1cffef; out dx, eax; jmp dword ptr [edx]; 
0x00197d4a: lodsd eax, dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000e8210: lodsd eax, dword ptr [esi]; or eax, dword ptr [eax]; xchg edi, ebx; mov eax, 0x58; call dword ptr gs:[0x10]; 
0x000b8241: lodsd eax, dword ptr [esi]; push cs; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0016acb0: lodsd eax, dword ptr [esi]; ret 0xfff4; 
0x0002fe1e: lodsd eax, dword ptr [esi]; ret; 
0x0016d039: lodsd eax, dword ptr [esi]; stc; call esp; 
0x00101676: loope 0x1016d6; pop edi; pop ebp; ret; 
0x00103d15: loope 0x103d0a; dec dword ptr [ebx - 0x76dfdbb4]; ret 0x448b; 
0x0010506e: loope 0x105070; add byte ptr [eax], al; rol byte ptr [ecx + 0xffe2], 0; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x001050ab: loope 0x1050c5; or edx, ecx; bswap edx; mov dword ptr [eax], edx; pop esi; ret 4; 
0x00113359: loope 0x113357; and eax, 0xfffffffc; lea eax, dword ptr [eax + ecx + 0x28]; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edi; call dword ptr [edx + 0x18]; 
0x001200ef: loope 0x1200f8; mov eax, ebx; sub eax, dword ptr [ebx + ecx*4 - 0x82ef4]; shr edx, 3; jmp eax; 
0x0013425b: loope 0x134259; jmp dword ptr [esi - 0x70]; 
0x0013b164: loope 0x13b15d; ret 1; 
0x0013d794: loope 0x13d78d; ret 1; 
0x001473eb: loope 0x1473ed; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xf]; pop edi; ret; 
0x0015b509: loope 0x15b50b; add byte ptr [ecx], al; adc byte ptr [eax], al; add byte ptr [eax], al; ret 1; 
0x00166949: loope 0x166947; jmp dword ptr [eax]; 
0x00168878: loope 0x1688ee; in eax, dx; call eax; 
0x00168878: loope 0x1688ee; in eax, dx; call eax; ret 0; 
0x00168e81: loope 0x168e72; push eax; call 0xe16d8e8a; out dx, eax; jmp dword ptr [eax]; 
0x00168e89: loope 0x168e7a; jmp dword ptr [eax]; 
0x0016ac4d: loope 0x16ac50; add byte ptr [edi + edi*4], al; hlt; call eax; 
0x00172ad6: loope 0x172ac3; jmp dword ptr [edx]; 
0x0017488e: loope 0x174891; ret; 
0x001749f2: loope 0x1749f5; ret; 
0x0017b0a9: loope 0x17b0eb; out dx, eax; jmp dword ptr [edx]; 
0x0017bb98: loope 0x17bb8a; out dx, eax; call dword ptr [eax]; 
0x0017cbf9: loope 0x17cb88; out dx, eax; jmp dword ptr [edx]; 
0x0018cf50: loope 0x18cf30; cmc; call dword ptr [eax]; 
0x00191f65: loope 0x191f5d; call dword ptr [eax]; 
0x00191f95: loope 0x191f8d; call dword ptr [eax]; 
0x00193655: loope 0x193661; ret; 
0x00025eb4: loope 0x25ec6; add byte ptr [eax], al; lea eax, dword ptr [ebx + 0x10ac]; pop ebx; ret; 
0x0005f96b: loope 0x5f96c; dec dword ptr [ecx - 0x10343]; dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0xe343]; jmp dword ptr [ebp - 0x77]; 
0x0007a474: loope 0x7a46e; test byte ptr [edx + ecx - 4], 1; lea esi, dword ptr [ecx - 4]; cmovne eax, esi; pop esi; ret; 
0x0007c906: loope 0x7c90b; call 0x7c90d; pop edx; lea ecx, dword ptr [edx + ecx*8 + 0xb]; jmp ecx; 
0x0007e3d6: loope 0x7e3db; call 0x7e3dd; pop edx; lea ecx, dword ptr [edx + ecx*8 + 0xb]; jmp ecx; 
0x0008d2df: loope 0x8d264; ret; 
0x0008de17: loope 0x8dd9c; ret; 
0x0008de33: loope 0x8ddb8; ret; 
0x0008e91f: loope 0x8e8a4; ret; 
0x0008f517: loope 0x8f49c; ret; 
0x0008f533: loope 0x8f4b8; ret; 
0x000948bf: loope 0x94844; ret; 
0x00095b86: loope 0x95b0b; ret 0x6640; 
0x000bb1f5: loope 0xbb25d; nop; mov eax, 1; pop esi; ret; 
0x000bda51: loope 0xbd9d6; ret 0x831e; 
0x000be201: loope 0xbe186; ret 0x831e; 
0x000c9417: loope 0xc9418; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x7d]; 
0x000d3c4f: loope 0xd3c3a; cmp ebp, 0x6b9ffff; add byte ptr [eax], al; add byte ptr [ecx - 0x3444722a], cl; ret; 
0x000dea15: loope 0xdea5c; or al, 0; or dh, 0x80; xchg edi, ebx; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000e0b0e: loope 0xe0aa0; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x000e8206: loope 0xe8206; call 0x129d73; add ebx, 0xbade7; xchg edi, ebx; mov eax, 0x58; call dword ptr gs:[0x10]; 
0x000eec16: loope 0xeec5b; or eax, dword ptr [eax]; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x000eedde: loope 0xeed70; mov edx, dword ptr [esp + 4]; mov ecx, edx; xchg ebx, ecx; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x000eedac: loope 0xeedae; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0000943a: ltr word ptr [ecx + 0x12000000]; add byte ptr [eax + eax], cl; ret 0x38; 
0x00134e00: maxps xmm0, xmmword ptr [ebx]; sbb al, 0x8b; jmp ebx; 
0x0008daad: maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x001685dd: mov ah, 0; add ah, ah; mov ch, 0xec; call eax; 
0x00124ad4: mov ah, 0; add byte ptr [eax], al; add esp, 0x18; mov eax, edx; pop ebx; ret; 
0x000c57e6: mov ah, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e1729: mov ah, 0; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xb8]; add esp, 0xbc; ret 8; 
0x001685d5: mov ah, 0; add byte ptr [ebp + esi*4 - 0x4b4f0014], ah; add byte ptr [eax], al; in al, 0xb5; in al, dx; call eax; 
0x0017a679: mov ah, 0; add byte ptr [edi + edi*2 - 0x11], dl; call esp; 
0x0016af90: mov ah, 0; cmc; call eax; 
0x00158bee: mov ah, 0x13; ret; 
0x00168068: mov ah, 0x16; in al, dx; call dword ptr [eax - 0x68]; 
0x0007d502: mov ah, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0016eb40: mov ah, 0x22; cld; call esp; 
0x000dfecd: mov ah, 0x24; adc al, 0x10; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x1018]; add esp, 0x101c; ret; 
0x00054df6: mov ah, 0x24; and al, 0x10; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x1028]; add esp, 0x102c; ret; 
0x0011bcc3: mov ah, 0x24; and al, 1; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x128]; add esp, 0x12c; ret; 
0x000dbd53: mov ah, 0x24; call 0x850dbd5a; test byte ptr [edi], 0x94; ret 0xc984; 
0x001092a0: mov ah, 0x24; jo 0x1092a8; add byte ptr [eax], al; mov dword ptr [esp + 0x10], edx; mov dword ptr [esp], esi; call eax; 
0x0010d6ac: mov ah, 0x24; pop eax; add al, byte ptr [eax]; add al, ch; mov esp, 0x810001c6; ret; 
0x000dc01b: mov ah, 0x24; pushfd; add byte ptr [eax], al; add cl, ch; ret 0xfffe; 
0x00023e5b: mov ah, 0x24; rol byte ptr [eax], 0; add al, ch; or eax, 0x8100105f; ret; 
0x000c5fd9: mov ah, 0x24; rol byte ptr [eax], 0; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x000196d7: mov ah, 0x24; test byte ptr [eax], al; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x88]; add esp, 0x8c; ret; 
0x0002ddcc: mov ah, 0x24; xor al, 1; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x138]; add esp, 0x13c; ret; 
0x001198f8: mov ah, 0x24; xor al, 4; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x438]; add esp, 0x43c; ret; 
0x00095c7a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edx; ret; 
0x00095c9a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, dword ptr [eax + edx + 0x20]; ret; 
0x0009583a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x20]; ret; 
0x0009584a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x30]; ret; 
0x001499b3: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 8]; ret; 
0x001110f3: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; mov eax, 1; ret; 
0x001139f3: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; mov eax, 2; ret; 
0x00073443: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; xor eax, eax; ret; 
0x0008763a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0007b622: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x00129a62: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 2; add esp, 0xc; ret; 
0x0011dc7a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [edi + 0xc]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x0012bd6a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esi + 0x4c]; mov dword ptr [esp], esi; call dword ptr [eax + 0x44]; 
0x0012998a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x0012992a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0007346a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; ret; 
0x00078782: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, ebx; sub eax, dword ptr [ebx + esi*4 - 0x12a860]; jmp eax; 
0x001499ea: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, ecx; ret; 
0x00147fba: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x0008829a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edx; pop ebx; ret; 
0x0011325a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov esi, ebx; sub esi, dword ptr [ebx + ecx*4 - 0x8fd88]; jmp esi; 
0x0009192a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; pop esi; ret; 
0x00129a72: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x000f723a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x0009597a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x00095aea: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0016997c: mov ah, 0x2e; add dword ptr [eax], eax; movsb byte ptr es:[edi], byte ptr [esi]; mov bh, 0xf0; call esp; 
0x00169c9c: mov ah, 0x35; add dword ptr [eax], eax; push 0x2e; int1; jmp esp; 
0x000fbe01: mov ah, 0x38; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x00169d1c: mov ah, 0x38; add dword ptr [eax], eax; pop ecx; das; int1; jmp esp; 
0x00169d9c: mov ah, 0x3b; add dword ptr [eax], eax; inc ecx; xor cl, dh; jmp esp; 
0x00169e1c: mov ah, 0x3e; add dword ptr [eax], eax; sub dword ptr [ecx], esi; int1; jmp esp; 
0x0016e76c: mov ah, 0x3e; add eax, dword ptr [eax]; hlt; adc esp, edi; call esp; 
0x00169e9c: mov ah, 0x41; add dword ptr [eax], eax; add dword ptr [edx], esi; int1; jmp esp; 
0x0016be14: mov ah, 0x4d; add al, byte ptr [eax]; adc al, 0xc; clc; call esp; 
0x00167550: mov ah, 0x4d; std; inc dword ptr [ebx + ecx*2 + 0x4c34fffd]; std; jmp esp; 
0x001791ac: mov ah, 0x50; out dx, eax; call dword ptr [ecx]; 
0x0016c250: mov ah, 0x62; clc; call eax; 
0x0016ed68: mov ah, 0x65; cld; jmp dword ptr [eax]; 
0x001682e0: mov ah, 0x6d; in al, dx; jmp dword ptr [eax]; 
0x0016e178: mov ah, 0x6d; sti; ljmp ptr [ebx + ebx + 0x6e340003]; sti; jmp eax; 
0x0016e190: mov ah, 0x6e; sti; jmp dword ptr [eax]; 
0x0016ee08: mov ah, 0x6f; cld; jmp eax; 
0x00186e64: mov ah, 0x77; add dword ptr [eax], eax; pushal; push edx; call dword ptr [eax]; 
0x00187064: mov ah, 0x79; add dword ptr [eax], eax; pop ecx; add ebx, esi; call dword ptr [eax]; 
0x0018b83c: mov ah, 0x79; cmc; jmp dword ptr [esi]; 
0x00177464: mov ah, 0x7d; add byte ptr [eax], al; ret 0xef13; 
0x0005ba01: mov ah, 0x81; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x81b8]; add esp, 0x81bc; ret; 
0x000a5448: mov ah, 0x83; ret 0x3901; 
0x00103b1b: mov ah, 0x83; ret 0x3b10; 
0x000c88dc: mov ah, 0x83; ret 0x8901; 
0x0016c4c8: mov ah, 0x85; clc; call dword ptr [eax + 0x6e]; 
0x0019022d: mov ah, 0x85; cmc; jmp dword ptr [edx]; 
0x0016a308: mov ah, 0x89; int1; call dword ptr [eax + 0x66]; 
0x00111bd6: mov ah, 0x8b; add al, byte ptr [ebp - 0x74ed8b40]; push eax; add al, 0x89; add al, 0x24; call dword ptr [edx + 0x10]; 
0x0016c548: mov ah, 0x8b; clc; call dword ptr [eax + 0x70]; 
0x000f9305: mov ah, 0x8b; inc ecx; or al, 0x89; ret 0xe283; 
0x0016cf18: mov ah, 0x9b; stc; jmp dword ptr [eax]; 
0x0016cf28: mov ah, 0x9c; stc; dec dword ptr [eax - 0x1bfffd51]; popfd; stc; call esp; 
0x001991b4: mov ah, 0x9f; add al, byte ptr [eax]; cmp byte ptr [eax - 8], al; call dword ptr [ecx]; 
0x0019a8a8: mov ah, 0xa2; clc; call dword ptr [eax]; 
0x00159090: mov ah, 0xa5; ret; 
0x00168010: mov ah, 0xa; in al, dx; call esp; 
0x0019a964: mov ah, 0xb2; add al, byte ptr [eax]; xor al, 0xa2; clc; call dword ptr [eax]; 
0x0016d0e8: mov ah, 0xb4; stc; jmp dword ptr [eax]; 
0x00157a54: mov ah, 0xb5; mov dh, 0xb7; mov eax, 0xbcbbbab9; mov ebp, 0xc1c0bfbe; ret 0xc4c3; 
0x0019aab4: mov ah, 0xb8; add al, byte ptr [eax]; pop eax; lahf; clc; jmp dword ptr [edi]; 
0x0017b264: mov ah, 0xbb; add byte ptr [eax], al; dec ebp; imul edi; call dword ptr [eax]; 
0x0017b564: mov ah, 0xbe; add byte ptr [eax], al; inc ecx; cmc; out dx, eax; call dword ptr [eax]; 
0x0016ac88: mov ah, 0xc1; hlt; lcall ptr [eax + 0x200001e3]; ret 0xfff4; 
0x000024c7: mov ah, 0xc6; ret; 
0x0017be64: mov ah, 0xc7; add byte ptr [eax], al; fucomp st(6); out dx, eax; call dword ptr [eax]; 
0x0018cc6c: mov ah, 0xcb; cmc; call dword ptr [ebx]; 
0x0016e4b0: mov ah, 0xcc; sti; call dword ptr [eax + 0x2d]; 
0x0016d278: mov ah, 0xcf; stc; jmp eax; 
0x00165f04: mov ah, 0xd1; cld; jmp esp; 
0x00166160: mov ah, 0xd3; cld; jmp esp; 
0x0017c8b4: mov ah, 0xd6; add byte ptr [eax], al; or bh, bl; out dx, eax; jmp dword ptr [esi]; 
0x001663f4: mov ah, 0xd7; cld; jmp esp; 
0x001745bc: mov ah, 0xd7; in al, dx; jmp dword ptr [edx]; 
0x00166678: mov ah, 0xda; cld; jmp esp; 
0x00168e70: mov ah, 0xde; out dx, eax; call dword ptr [eax - 0x17]; 
0x0016d71c: mov ah, 0xdf; add al, byte ptr [eax]; in eax, 0x29; cli; jmp esp; 
0x0016d74c: mov ah, 0xe2; add al, byte ptr [eax]; or esi, dword ptr [edi]; cli; jmp esp; 
0x00168d9c: mov ah, 0xe3; add byte ptr [eax], al; and al, 0xd4; out dx, eax; call eax; 
0x0001a447: mov ah, 0xe8; ret; 
0x0016d380: mov ah, 0xe8; stc; inc dword ptr [ecx + ecx*8 + 2]; add byte ptr [esi - 0x17], cl; stc; jmp esp; 
0x0018a1dc: mov ah, 0xe9; hlt; call dword ptr [eax + 6]; 
0x00049359: mov ah, 0xe9; ret; 
0x000b7bc4: mov ah, 0xe; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00168f04: mov ah, 0xeb; add byte ptr [eax], al; jecxz 0x168ef6; out dx, eax; jmp esp; 
0x001669c8: mov ah, 0xec; cld; inc dword ptr [ebp + ebp*8 - 4]; call dword ptr [ebx + ebp*8 - 4]; call esp; 
0x00187ffd: mov ah, 0xf3; jmp dword ptr [esi + 3]; 
0x0018a350: mov ah, 0xf5; hlt; call dword ptr [eax]; 
0x0019ae9d: mov ah, 0xf8; call dword ptr [eax]; 
0x0016d0e1: mov ah, 0xf9; inc dword ptr [ecx + edi*4]; add al, byte ptr [eax]; mov ah, 0xb4; stc; jmp dword ptr [eax]; 
0x0016d0e9: mov ah, 0xf9; jmp dword ptr [eax]; 
0x0016d0d9: mov ah, 0xf9; jmp eax; 
0x0016b038: mov ah, 0xf; cmc; call esp; 
0x0016b034: mov ah, 0xfb; add dword ptr [eax], eax; mov ah, 0xf; cmc; call esp; 
0x000e7d0f: mov ah, 1; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x1b8]; add esp, 0x1bc; ret; 
0x0016a605: mov ah, 1; add byte ptr [esp - 0xe], ah; jmp esp; 
0x00120c71: mov ah, 1; ret 0xd639; 
0x000de8ff: mov ah, 4; add byte ptr [ecx + 0xc46f2c3], al; add dh, dh; ret 0x8940; 
0x0008e912: mov ah, 9; add byte ptr [ecx + 0xcbe1bc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0008e96d: mov ah, 9; add byte ptr [ecx + 0xcbe40c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008e952: mov ah, 9; add byte ptr [ecx + 0xcbe5bc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008e930: mov ah, 9; add byte ptr [ecx + 0xcbe7dc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x001589ec: mov ah, bl; push esi; ret; 
0x00025f73: mov ah, byte ptr [ebx + ecx*4]; sbb al, 0x24; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x00003087: mov ah, byte ptr [edx - 0x3e]; mov esi, 0x614a3e5c; call dword ptr [ecx]; 
0x0002e1f8: mov al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00116271: mov al, 0; add byte ptr [eax], al; lea edx, dword ptr [esp + 0x84]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 4]; 
0x0011693a: mov al, 0; add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00110a3c: mov al, 0; add byte ptr [eax], al; mov ecx, edi; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000e1722: mov al, 0; add byte ptr [eax], al; mov edi, dword ptr [esp + 0xb4]; mov ebp, dword ptr [esp + 0xb8]; add esp, 0xbc; ret 8; 
0x0009577c: mov al, 0; add byte ptr [eax], al; pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x0009551c: mov al, 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x00168545: mov al, 0; add byte ptr [edi + ebp*4 - 0x14], ah; call eax; 
0x00166f08: mov al, 0x10; std; inc dword ptr [eax + 0x11]; std; call dword ptr [eax + 0xf]; 
0x00099bdc: mov al, 0x11; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x00166fe4: mov al, 0x14; std; inc dword ptr [eax + 0x15]; std; call eax; 
0x00008fe8: mov al, 0x18; adc byte ptr [eax], al; ret 0; 
0x0007d4e1: mov al, 0x19; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00167198: mov al, 0x2c; std; inc dword ptr [eax]; sub eax, 0x2010fffd; std; call eax; 
0x00167290: mov al, 0x2d; std; inc dword ptr [eax]; std; jmp dword ptr [eax + 0x2e]; 
0x00178a70: mov al, 0x2e; out dx, eax; call dword ptr [esi]; 
0x0015a658: mov al, 0x32; inc eax; xor dh, bl; call eax; 
0x0015a658: mov al, 0x32; inc eax; xor dh, bl; call eax; xor dh, bl; jmp eax; 
0x0015a6a8: mov al, 0x34; call eax; xor al, 0xf3; push eax; xor al, 0xf3; call dword ptr [eax]; 
0x0016738c: mov al, 0x36; std; inc dword ptr [eax + 0x37]; std; call eax; 
0x00031ef9: mov al, 0x39; ret 0x1a73; 
0x00167354: mov al, 0x3a; std; inc dword ptr [eax]; cmp edi, ebp; call dword ptr [eax + 0x3b]; 
0x001731b0: mov al, 0x3f; add byte ptr [eax], al; dec esp; add esp, ebp; jmp dword ptr [ecx]; 
0x00167608: mov al, 0x44; std; inc dword ptr [eax + 0x45]; std; call eax; 
0x00184e90: mov al, 0x49; cld; call ebx; 
0x001675a8: mov al, 0x4c; std; push dword ptr [eax + 0x4d]; std; call eax; 
0x00169f4c: mov al, 0x4f; add dword ptr [eax], eax; xor al, 0x3b; int1; call eax; 
0x001676cc: mov al, 0x4f; std; jmp eax; 
0x001677a8: mov al, 0x53; std; inc dword ptr [eax + 0x54]; std; call eax; 
0x00179810: mov al, 0x57; out dx, eax; call dword ptr [ecx]; 
0x00167794: mov al, 0x5c; std; inc dword ptr [eax]; pop ebp; std; call dword ptr [eax + 0x5d]; 
0x0016c124: mov al, 0x5d; add al, byte ptr [eax]; in al, 0x4e; clc; call esp; 
0x001758f0: mov al, 0x61; out dx, al; call edx; 
0x0016c24c: mov al, 0x63; add al, byte ptr [eax]; mov ah, 0x62; clc; call eax; 
0x0012f79c: mov al, 0x75; sti; jmp dword ptr [esi + 0xf]; 
0x0005b9fa: mov al, 0x81; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x81b4]; mov ebp, dword ptr [esp + 0x81b8]; add esp, 0x81bc; ret; 
0x001775b0: mov al, 0x83; add byte ptr [eax], al; lodsb al, byte ptr [esi]; adc ebp, edi; jmp dword ptr [esi]; 
0x00024447: mov al, 0x83; ret 0x8901; 
0x000c821c: mov al, 0x85; ror byte ptr [edi], 0x94; ret 0x8d89; 
0x000631cf: mov al, 0x89; fsubr dword ptr [ebx]; test byte ptr [ebx - 0x13fe18], cl; jmp eax; 
0x00171266: mov al, 0xa; ret; 
0x00189eb0: mov al, 0xac; add dword ptr [eax], eax; in al, dx; in al, 0xf4; call dword ptr [edx]; 
0x0016851c: mov al, 0xaf; add byte ptr [eax], al; adc al, 0xaf; in al, dx; jmp eax; 
0x0016cfcc: mov al, 0xb3; add al, byte ptr [eax]; pop edx; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; jmp dword ptr [eax]; 
0x001685dc: mov al, 0xb4; add byte ptr [eax], al; in al, 0xb5; in al, dx; call eax; 
0x000f0de8: mov al, 0xb; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0016d174: mov al, 0xbc; add al, byte ptr [eax]; sub ebp, eax; stc; jmp dword ptr [eax]; 
0x001687b4: mov al, 0xbd; add byte ptr [eax], al; test al, ah; in al, dx; call eax; 
0x0019b560: mov al, 0xbe; add al, byte ptr [eax]; or dl, bl; clc; call dword ptr [eax]; 
0x0013b572: mov al, 0xbf; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001688a4: mov al, 0xc4; add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; jp 0x168898; call esp; 
0x001767c5: mov al, 0xc6; out dx, al; jmp dword ptr [edx]; 
0x000f0ed8: mov al, 0xc; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0016d434: mov al, 0xce; add al, byte ptr [eax]; adc al, 0xf3; stc; call esp; 
0x00165ff0: mov al, 0xd0; cld; jmp eax; 
0x00166098: mov al, 0xd1; cld; call eax; 
0x00166318: mov al, 0xd5; cld; call eax; 
0x001664e0: mov al, 0xd6; cld; jmp eax; 
0x0016d5ac: mov al, 0xd7; add al, byte ptr [eax]; out 0xb, eax; cli; jmp eax; 
0x00166764: mov al, 0xd9; cld; jmp eax; 
0x00000986: mov al, 0xd; push cs; adc eax, dword ptr [eax]; jo 0x911; add byte ptr [eax], al; ret 0x1010; 
0x0016ab6c: mov al, 0xdc; add dword ptr [eax], eax; push esp; xor dh, ah; call eax; 
0x0016ac4c: mov al, 0xe1; add dword ptr [eax], eax; add al, 0xbf; hlt; call eax; 
0x00166950: mov al, 0xe2; cld; inc dword ptr [eax - 0x1d]; cld; call eax; 
0x0016d764: mov al, 0xe3; add al, byte ptr [eax]; xor al, 0x38; cli; jmp esp; 
0x0018d520: mov al, 0xe3; cmc; call dword ptr [edi]; 
0x00168e24: mov al, 0xe6; add byte ptr [eax], al; dec eax; fucomi st(7); jmp eax; 
0x00166840: mov al, 0xe6; cld; jmp dword ptr [eax - 0x19]; 
0x0016adbc: mov al, 0xeb; add dword ptr [eax], eax; aad 0xdb; hlt; call dword ptr [eax - 0x15]; 
0x00167d61: mov al, 0xeb; call eax; 
0x00168f18: mov al, 0xee; out dx, eax; call eax; 
0x00166bac: mov al, 0xef; cld; inc dword ptr [eax - 0x10]; cld; call eax; 
0x0017c33d: mov al, 0xef; jmp dword ptr [eax + 2]; 
0x001272a3: mov al, 0xf0; mov ecx, 0x81; xchg ebx, edi; call dword ptr gs:[0x10]; 
0x0016a3b9: mov al, 0xf1; call esp; 
0x001918c9: mov al, 0xf6; call dword ptr [ecx]; 
0x0016bb09: mov al, 0xf7; call dword ptr [eax]; 
0x00166b90: mov al, 0xfc; cld; push dword ptr [eax - 6]; cld; jmp dword ptr [eax]; 
0x00051047: mov al, 0xff; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x75]; 
0x0001bece: mov al, 0xff; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00079006: mov al, 0xff; push dword ptr [ecx]; ror byte ptr [ebx - 0x74fbdba4], 0x74; and al, 8; add esp, 0xc; ret; 
0x0018a241: mov al, 1; add byte ptr [eax + esi*8], ch; hlt; call dword ptr [ebx]; 
0x00126dde: mov al, 1; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000e7d08: mov al, 1; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x1b4]; mov ebp, dword ptr [esp + 0x1b8]; add esp, 0x1bc; ret; 
0x000e9a7f: mov al, 1; pop ebx; ret; 
0x00166e2c: mov al, 1; std; inc dword ptr [eax + 2]; std; call eax; 
0x0013c3f5: mov al, 2; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00175a21: mov al, 2; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000eed62: mov al, 3; add byte ptr [ecx + 0xb428fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eed1e: mov al, 3; add byte ptr [ecx + 0xb42d3c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ded42: mov al, 4; add byte ptr [ecx + 0xc42afc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ded04: mov al, 4; add byte ptr [ecx + 0xc42edc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000decbf: mov al, 4; add byte ptr [ecx + 0xc4332c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00000574: mov al, 4; or byte ptr [eax - 0x7f7fdec0], al; pushal; ret 0x2096; 
0x00099a9c: mov al, 7; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x0016d58c: mov al, bl; add al, byte ptr [eax]; cmpsd dword ptr [esi], dword ptr es:[edi]; or edi, edx; jmp dword ptr [eax]; 
0x000734c2: mov al, byte ptr [0x1000018]; pop ebx; ret; 
0x001737b3: mov al, byte ptr [0x2070301]; or cl, byte ptr [esi]; adc al, 0x45; ret; 
0x00185fa0: mov al, byte ptr [0x2c00016d]; fcompi st(2); call dword ptr [edi]; 
0x0016692c: mov al, byte ptr [0x30fffcdd]; fdivp st(4); inc eax; fdivp st(4); call dword ptr [eax - 0x21]; 
0x00167000: mov al, byte ptr [0x30fffd18]; sbb ebp, edi; inc eax; sbb ebp, edi; call dword ptr [eax + 0x1a]; 
0x001671b8: mov al, byte ptr [0x30fffd25]; std; inc eax; std; call dword ptr [eax + 0x27]; 
0x00167368: mov al, byte ptr [0x30fffd31]; xor bh, ch; inc eax; xor bh, ch; call dword ptr [eax + 0x33]; 
0x0016b124: mov al, byte ptr [0x340001ff]; cmc; call eax; 
0x00185c1b: mov al, byte ptr [0x3834b01]; pop ecx; xchg byte ptr [edx], al; add ah, byte ptr [edx + 0xe]; add al, 0xc6; ret; 
0x001676f4: mov al, byte ptr [0x3cfffd5c]; pop ebp; std; dec dword ptr [ebp + ebx*2 + 0x5c86fffd]; std; jmp esi; 
0x00195250: mov al, byte ptr [0x3f00025b]; xor al, 0xf7; call dword ptr [eax]; 
0x001992f9: mov al, byte ptr [0x44640002]; clc; call dword ptr [ecx]; 
0x00191e50: mov al, byte ptr [0x4a000227]; sal esi, 1; call dword ptr [eax]; 
0x001940a0: mov al, byte ptr [0x4c00024e]; adc al, 0xf7; call dword ptr [edx + 3]; 
0x0016ae8c: mov al, byte ptr [0x4e0001f0]; in eax, dx; hlt; call eax; 
0x00166b74: mov al, byte ptr [0x50fffcfa]; sti; cld; call dword ptr [eax]; 
0x001675b4: mov al, byte ptr [0x50fffd4b]; dec esp; std; call dword ptr [eax]; 
0x0017929d: mov al, byte ptr [0x51700000]; out dx, eax; jmp dword ptr [ebx]; 
0x001892c9: mov al, byte ptr [0x53c40001]; hlt; jmp dword ptr [esi + 1]; 
0x0016d554: mov al, byte ptr [0x540002d5]; push es; cli; call dword ptr [eax]; 
0x00087202: mov al, byte ptr [0x5b5f0000]; ret; 
0x000875ec: mov al, byte ptr [0x5f000001]; pop ebx; ret; 
0x0016e79c: mov al, byte ptr [0x60000339]; adc al, 0xfc; call eax; 
0x00168544: mov al, byte ptr [0x640000b0]; scasd eax, dword ptr es:[edi]; in al, dx; call eax; 
0x0016c14c: mov al, byte ptr [0x6400025e]; push esi; clc; jmp eax; 
0x0016a329: mov al, byte ptr [0x6738fff1]; add dword ptr [eax], eax; adc al, 0xa1; int1; jmp dword ptr [eax + 0x67]; 
0x00166df8: mov al, byte ptr [0x70fffd0d]; push cs; std; jmp dword ptr [eax]; 
0x001675d0: mov al, byte ptr [0x70fffd4d]; dec ebx; std; jmp dword ptr [eax]; 
0x0016cd85: mov al, byte ptr [0x72640002]; stc; jmp eax; 
0x000f1838: mov al, byte ptr [0x73b345c6]; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00168834: mov al, byte ptr [0x740000c1]; outsb dx, byte ptr [esi]; in eax, dx; jmp dword ptr [eax - 0x3d]; 
0x0019b6a0: mov al, byte ptr [0x7c0002c4]; ret; 
0x00115fcf: mov al, byte ptr [0x8100013d]; ret; 
0x00107fcf: mov al, byte ptr [0x8100021d]; ret; 
0x000f8ecf: mov al, byte ptr [0x8100030e]; ret; 
0x000f3fcf: mov al, byte ptr [0x8100035d]; ret; 
0x000d03cf: mov al, byte ptr [0x81000599]; ret; 
0x000b56cf: mov al, byte ptr [0x81000746]; ret; 
0x0001f669: mov al, byte ptr [0x89000000]; inc esp; and al, 8; mov dword ptr [esp], edx; call dword ptr [esi]; 
0x00126cb3: mov al, byte ptr [0x89000001]; adc al, 0x24; call eax; 
0x00126cb3: mov al, byte ptr [0x89000001]; adc al, 0x24; call eax; add esp, 0x18; pop ebx; ret; 
0x0014acbd: mov al, byte ptr [0x8900001d]; add al, 0x24; call 0x16f50; add esp, 0x18; pop ebx; ret; 
0x00019a2d: mov al, byte ptr [0x89000036]; ret 0xc589; 
0x00124990: mov al, byte ptr [0x89ffffeb]; ret 0xc483; 
0x00026a54: mov al, byte ptr [0x89ffffff]; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0006f6f2: mov al, byte ptr [0x8b000000]; mov esp, 0xa424; add byte ptr [ebx + 0xa824ac], cl; add byte ptr [eax], al; add esp, 0xac; ret; 
0x00188aa0: mov al, byte ptr [0x8c000198]; sbb dh, ah; call dword ptr [edi]; 
0x001964a0: mov al, byte ptr [0x8c000272]; xchg edi, esi; call edi; 
0x0015a650: mov al, byte ptr [0xa0fff32d]; xor dh, bl; push dword ptr [eax - 0x3f000cce]; xor dh, bl; call eax; 
0x001838a0: mov al, byte ptr [0xac000146]; dec ecx; int1; call dword ptr [ebx + 1]; 
0x0015a654: mov al, byte ptr [0xb0fff332]; xor dh, bl; inc eax; xor dh, bl; call eax; 
0x001691bc: mov al, byte ptr [0xb40000fb]; adc eax, esi; call eax; 
0x0016af8c: mov al, byte ptr [0xb40001f7]; add ch, dh; call eax; 
0x00168d24: mov al, byte ptr [0xb50000e1]; into; out dx, eax; call dword ptr [eax]; 
0x0017d9a0: mov al, byte ptr [0xbc0000e7]; or eax, esi; call dword ptr [edx]; 
0x0018aea0: mov al, byte ptr [0xc0001bc]; inc eax; cmc; jmp ecx; 
0x0015a618: mov al, byte ptr [0xc0fff330]; xor bl, dh; jmp eax; 
0x0015a684: mov al, byte ptr [0xc0fff333]; xor esi, ebx; jmp eax; 
0x0017d1a0: mov al, byte ptr [0xcc0000df]; clc; out dx, eax; call dword ptr [ecx + 1]; 
0x0016cf94: mov al, byte ptr [0xd60002b1]; movsb byte ptr es:[edi], byte ptr [esi]; stc; call eax; 
0x00166288: mov al, byte ptr [0xe0fffcd5]; aad 0xfc; jmp dword ptr [eax]; 
0x00168ea4: mov al, byte ptr [0xec0000ea]; in al, 0xef; call dword ptr [eax]; 
0x001928a0: mov al, byte ptr [0xec000236]; out 0xf6, al; call dword ptr [esi + 5]; 
0x00168994: mov al, byte ptr [0xff0000c8]; popfd; in eax, dx; call eax; 
0x001780b5: mov al, byte ptr [eax]; add byte ptr [esi + 0x27], bl; sti; call dword ptr [eax]; 
0x001780e5: mov al, byte ptr [eax]; add byte ptr [esi], bh; daa; sti; call dword ptr [eax]; 
0x00178145: mov al, byte ptr [eax]; add dh, ch; sti; call dword ptr [eax]; 
0x00178175: mov al, byte ptr [eax]; add dh, cl; sti; call dword ptr [eax]; 
0x00089a26: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, dword ptr [edx + 2]; pop edi; ret; 
0x00089b66: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, dword ptr [edx + 2]; ret; 
0x00093dc9: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop ebx; pop edi; ret; 
0x00085666: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x00085786: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x00089b84: mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, dword ptr [edx + 4]; ret; 
0x000857a4: mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x0008e2fa: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, dword ptr [edx + 8]; pop edi; ret; 
0x0008e45a: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, dword ptr [edx + 8]; ret; 
0x00093e6b: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop ebx; pop edi; ret; 
0x0008ccba: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x0008ce1a: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x00089bc4: mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, dword ptr [edx + 8]; ret; 
0x000857e4: mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x00147352: mov al, byte ptr [ecx]; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xb]; pop edi; ret; 
0x00089a00: mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, dword ptr [edx]; pop edi; ret; 
0x00089b40: mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, dword ptr [edx]; ret; 
0x00093da3: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop ebx; pop edi; ret; 
0x00085640: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x00085760: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x00064926: mov ax, dx; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00089a54: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, dword ptr [edx + 5]; pop edi; ret; 
0x00089b94: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, dword ptr [edx + 5]; ret; 
0x00085684: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x000857b4: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x0008e31a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, dword ptr [edx + 9]; pop edi; ret; 
0x0008e47a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, dword ptr [edx + 9]; ret; 
0x00093e8b: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x0008ccda: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x0008ce3a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x00089be4: mov ax, word ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, dword ptr [edx + 9]; ret; 
0x00085804: mov ax, word ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x00089a10: mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, dword ptr [edx + 1]; pop edi; ret; 
0x00089b50: mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, dword ptr [edx + 1]; ret; 
0x00089b60: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, dword ptr [edx + 2]; ret; 
0x00085780: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x00093db3: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x00085650: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x00085770: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x00007a9c: mov bh, 0; add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; ret 0xc; 
0x000df7ae: mov bh, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00148685: mov bh, 0; add byte ptr [eax], al; lea eax, dword ptr [ecx + 1]; ret; 
0x000d89f5: mov bh, 0x10; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00133d6b: mov bh, 0x27; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x000de03f: mov bh, 0x4f; or al, 0; xchg edi, ebx; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0011aa8d: mov bh, 0x56; or ah, byte ptr [esi + 0x39]; push ebp; ret 0x850f; 
0x0002720e: mov bh, 0x84; push eax; add byte ptr [ecx], al; add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x0013c7eb: mov bh, 0xaf; add al, byte ptr [eax]; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0010d6ab: mov bh, 0xb4; and al, 0x58; add al, byte ptr [eax]; add al, ch; mov esp, 0x810001c6; ret; 
0x0019ae9c: mov bh, 0xb4; clc; call dword ptr [eax]; 
0x00157a57: mov bh, 0xb8; mov ecx, 0xbdbcbbba; mov esi, 0xc2c1c0bf; ret; 
0x0016d598: mov bh, 0xb; cli; call dword ptr [eax - 0x29]; 
0x00111f47: mov bh, 0xc0; ret; 
0x0010506b: mov bh, 0xc2; and ecx, 0xc0000000; and edx, 0xff; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0008de2b: mov bh, 0xc8; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00117148: mov bh, 0xeb; ret; 
0x00175a8e: mov bh, 0xee; jmp dword ptr [edx]; 
0x00169981: mov bh, 0xf0; call esp; 
0x0016ac09: mov bh, 0xf4; call dword ptr [eax - 0x20]; 
0x0018c5c5: mov bh, 0xf5; call dword ptr [eax]; 
0x000cb4bd: mov bh, 0xf5; call dword ptr [edi + 0x56]; 
0x00191a6d: mov bh, 0xf6; jmp dword ptr [edi]; 
0x000752f1: mov bh, 0xfb; inc edi; add al, 0x24; ret 0x10; 
0x0003b543: mov bh, 0xfe; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x0007143e: mov bh, 0xff; inc dword ptr [ebx - 0x6bf00008]; ret 0xd284; 
0x0016d0b5: mov bh, 2; add ah, dh; mov dl, 0xf9; call dword ptr [eax - 0x48]; 
0x000339c5: mov bh, 2; add byte ptr [eax], al; mov eax, dword ptr [esp + 0x1c]; add esp, 0x28; pop ebx; ret; 
0x0019a9e5: mov bh, 2; add byte ptr [eax], ch; sahf; clc; jmp dword ptr [edi]; 
0x0016d095: mov bh, 2; add byte ptr [ecx + esi*4 - 7], ah; jmp dword ptr [eax]; 
0x0016d08d: mov bh, 2; add byte ptr [ecx + esi*4], ah; stc; ljmp ptr [edi + esi*4 + 2]; add byte ptr [ecx + esi*4 - 7], ah; jmp dword ptr [eax]; 
0x000de5e2: mov bh, 4; add byte ptr [ecx + 0xc4a0fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000de5a2: mov bh, 4; add byte ptr [ecx + 0xc4a4fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000f3b5f: mov bh, 4; push eax; add esp, 0xc; and eax, 0x1000; ret; 
0x000f3abf: mov bh, 4; push eax; add esp, 0xc; and eax, 0x100; ret; 
0x000f3a1f: mov bh, 4; push eax; add esp, 0xc; and eax, 0x2000; ret; 
0x000f379f: mov bh, 4; push eax; add esp, 0xc; and eax, 0x200; ret; 
0x000f38df: mov bh, 4; push eax; add esp, 0xc; and eax, 0x4000; ret; 
0x000f351f: mov bh, 4; push eax; add esp, 0xc; and eax, 0x400; ret; 
0x000f383f: mov bh, 4; push eax; add esp, 0xc; and eax, 0x8000; ret; 
0x000f35bf: mov bh, 4; push eax; add esp, 0xc; and eax, 1; ret; 
0x000f365f: mov bh, 4; push eax; add esp, 0xc; and eax, 2; ret; 
0x000f397f: mov bh, 4; push eax; add esp, 0xc; and eax, 4; ret; 
0x000f347f: mov bh, 4; push eax; add esp, 0xc; and eax, 8; ret; 
0x00026f39: mov bh, 4; push eax; and eax, 0x1000; ret; 
0x00026f09: mov bh, 4; push eax; and eax, 0x100; ret; 
0x00026ed9: mov bh, 4; push eax; and eax, 0x2000; ret; 
0x00026e29: mov bh, 4; push eax; and eax, 0x200; ret; 
0x00026e89: mov bh, 4; push eax; and eax, 0x4000; ret; 
0x00026da9: mov bh, 4; push eax; and eax, 0x400; ret; 
0x00026e59: mov bh, 4; push eax; and eax, 0x8000; ret; 
0x00026df9: mov bh, 4; push eax; and eax, 0x800; ret; 
0x00026fc9: mov bh, 4; push eax; and eax, 1; ret; 
0x00026dd9: mov bh, 4; push eax; and eax, 2; ret; 
0x00026eb9: mov bh, 4; push eax; and eax, 4; ret; 
0x00026d89: mov bh, 4; push eax; and eax, 8; ret; 
0x001355e9: mov bh, 8; mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013c539: mov bh, 8; mov word ptr [edx], cx; pop ebx; ret; 
0x0019a3f1: mov bh, al; call dword ptr [edx]; 
0x0016c531: mov bh, al; dec dword ptr [eax]; jo 0x16c539; add byte ptr [ebx + ecx*4], dh; clc; jmp dword ptr [eax]; 
0x0016c529: mov bh, al; jmp eax; 
0x00076e17: mov bh, dl; add byte ptr [eax], al; add byte ptr [ebx - 0x15b55], cl; dec dword ptr [ecx + 0x54892414]; and al, 0x28; call dword ptr [ebp]; 
0x00168585: mov bl, 0; add ah, ah; mov dl, 0xec; jmp dword ptr [eax - 0x4d]; 
0x0002e24c: mov bl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0019df7c: mov bl, 0; add byte ptr [eax], al; lahf; pop es; add byte ptr [eax], al; ret 7; 
0x00149b69: mov bl, 0; add byte ptr [eax], al; lea eax, dword ptr [edi - 0x10]; pop edi; ret; 
0x00177619: mov bl, 0; sbb al, 0; add byte ptr [eax], al; and byte ptr [eax + eax - 0x10eae400], al; jmp dword ptr [eax]; 
0x0019b1c9: mov bl, 0; sbb al, 0; add byte ptr [eax], al; sar byte ptr [edi - 0x4413fffe], 1; clc; jmp dword ptr [edi]; 
0x001775f2: mov bl, 0x24; add byte ptr [eax], al; add al, bh; add dword ptr [eax], 0; adc al, 0xef; call esp; 
0x000ec4c9: mov bl, 0x24; clc; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x77]; 
0x0018b4de: mov bl, 0x41; or eax, dword ptr [eax]; add byte ptr [eax], ch; add byte ptr [eax], al; add al, ch; ret 1; 
0x001955e7: mov bl, 0x43; idiv bh; sbb al, 0xd; cmp eax, dword ptr [edx - 0xa]; jmp dword ptr [edx]; 
0x001986b2: mov bl, 0x47; or eax, dword ptr [eax]; add byte ptr [eax + eax], dl; add byte ptr [esp + edx*4 + 0x15700002], bh; clc; call dword ptr [esi]; 
0x0014ac28: mov bl, 0x54; sbb eax, dword ptr [eax]; add al, ch; push ds; ret; 
0x000f183b: mov bl, 0x73; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0017b589: mov bl, 0x74; out dx, eax; jmp dword ptr [edx]; 
0x00157a53: mov bl, 0xb4; mov ch, 0xb6; mov bh, 0xb8; mov ecx, 0xbdbcbbba; mov esi, 0xc2c1c0bf; ret; 
0x0008f510: mov bl, 0xc; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0005a786: mov bl, 0xcd; sti; dec dword ptr [ecx - 0x106b7b]; call dword ptr [ecx - 0x17]; 
0x00166088: mov bl, 0xd1; cld; call ebx; 
0x001660b4: mov bl, 0xd4; cld; jmp ebx; 
0x00166308: mov bl, 0xd5; cld; call ebx; 
0x001756e1: mov bl, 0xdc; in eax, dx; jmp dword ptr [edx]; 
0x00169949: mov bl, 0xf0; jmp eax; 
0x0016a421: mov bl, 0xf1; call dword ptr [eax + 0x6b]; 
0x0016a419: mov bl, 0xf1; ljmp ptr [ebx + ebp*2]; add dword ptr [eax], eax; inc esp; mov bl, 0xf1; call dword ptr [eax + 0x6b]; 
0x0018c485: mov bl, 0xf5; call dword ptr [ebx]; 
0x00003bad: mov bl, 0xf7; adc bh, byte ptr [eax]; cwde; ret; 
0x00123d44: mov bl, 0xfb; inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x0016cff5: mov bl, 2; add byte ptr [edx - 0x57], cl; stc; call dword ptr [eax]; 
0x0016cfcd: mov bl, 2; add byte ptr [edx - 0x59], bl; stc; jmp dword ptr [eax]; 
0x0016cfd5: mov bl, 2; add byte ptr [esi - 0x59], ah; stc; call dword ptr [eax - 0x4d]; 
0x000eea6e: mov bl, 3; add byte ptr [ecx + 0xb4583c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eea34: mov bl, 3; add byte ptr [ecx + 0xb45bdc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000dea10: mov bl, 4; add byte ptr [ecx + 0xc45e1c3], al; add byte ptr [eax - 0x20787f32], al; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0008ea13: mov bl, 9; add byte ptr [ecx + 0xcbd9ac1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008e9ee: mov bl, 9; add byte ptr [ecx + 0xcbdbfc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008e9ce: mov bl, 9; add byte ptr [ecx + 0xcbddfc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008e9b1: mov bl, 9; add byte ptr [ecx + 0xcbdfcc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008e984: mov bl, 9; add byte ptr [ecx + 0xcbe29c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000e956c: mov bl, byte ptr [edx + 0x548b000b]; and al, 8; xchg ebx, edx; mov eax, 0x10f; call dword ptr gs:[0x10]; 
0x00177b65: mov bl, cl; out dx, al; jmp dword ptr [edx]; 
0x00112696: mov bp, 1; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x00113b46: mov bp, 1; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x0016eb8c: mov byte ptr [0x28240001], al; cld; call esp; 
0x00139f40: mov byte ptr [0x30002d1], al; sbb al, 0x8b; jmp ebx; 
0x001986fa: mov byte ptr [0x41140e0a], al; ret; 
0x00199411: mov byte ptr [0x4abc0002], al; clc; call edx; 
0x00199469: mov byte ptr [0x4d440002], al; clc; jmp dword ptr [ebx]; 
0x00003d94: mov byte ptr [0x5393558d], al; inc eax; or byte ptr fs:[ebx + 0x4e], ch; ret 0x6bba; 
0x0018941d: mov byte ptr [0x58c00001], al; hlt; jmp dword ptr [ebx + 1]; 
0x001894f9: mov byte ptr [0x5e840001], al; hlt; call dword ptr [edx]; 
0x0008d40a: mov byte ptr [0x5f000009], al; pop esi; pop ebx; ret; 
0x00123ed1: mov byte ptr [0x8100005e], al; rcr dword ptr [edi], -0xf; pop es; add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp - 0x39]; 
0x0010c9cd: mov byte ptr [0x810001d3], al; ret; 
0x000b95cd: mov byte ptr [0x81000707], al; ret; 
0x0008d2d1: mov byte ptr [0x810009ca], al; sar ebx, -0x2e; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00023bd1: mov byte ptr [0x81001061], al; rcr dword ptr [edi], -0xc; pop ss; add byte ptr [ebx - 0x1577f], cl; jmp dword ptr [ebp - 0x75]; 
0x000a563a: mov byte ptr [0x890004db], al; ret 0x68b; 
0x0007330a: mov byte ptr [0x89ffffe9], al; ret 0xffb8; 
0x000c3844: mov byte ptr [0x8bfffffd], al; inc ebp; ror byte ptr [ecx - 0x217dbfc], 1; cmc; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x00019a28: mov byte ptr [0x9389de87], al; mov al, byte ptr [0x89000036]; ret 0xc589; 
0x000efafa: mov byte ptr [0xc1810003], al; div dword ptr [ebx + ecx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00166034: mov byte ptr [0xc2fffcd1], al; sar esp, 1; jmp edx; 
0x001662b4: mov byte ptr [0xc2fffcd5], al; aad 0xfc; jmp edx; 
0x00002400: mov byte ptr [0xdd410018], dh; out 0xa9, al; ret 0xbd07; 
0x0004bc55: mov byte ptr [0xebffca83], al; ret 0x8d90; 
0x001667b0: mov byte ptr [0xf0fffce6], al; out 0xfc, al; call edx; 
0x001667b0: mov byte ptr [0xf0fffce6], al; out 0xfc, al; call edx; out 0xfc, eax; jmp dword ptr [edx - 0x18]; 
0x0014685a: mov byte ptr [0xf6000000], al; ret 0x7501; 
0x000eca2f: mov byte ptr [0xffffbc7], al; inc esp; ret 0x7c89; 
0x00094bbe: mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091738: mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094c44: mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000917be: mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000e64a8: mov byte ptr [eax + 0x16], 0; ret; 
0x000e64a4: mov byte ptr [eax + 0x17], 1; mov byte ptr [eax + 0x16], 0; ret; 
0x00094cc8: mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091842: mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094e33: mov byte ptr [eax + 0x40], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00019091: mov byte ptr [eax + 0x46], 0xb8; pop ebx; pop esi; ret; 
0x001470bb: mov byte ptr [eax + 0x75], 0x45; add eax, 0xf; ret; 
0x00147308: mov byte ptr [eax + 0xf], 0x85; rol byte ptr [ecx], 1; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xf]; pop edi; ret; 
0x00148ea3: mov byte ptr [eax + 0xf], 0x85; xchg byte ptr [ebx], al; add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x00094a0c: mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000915d6: mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094a38: mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000915f2: mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00041d67: mov byte ptr [eax + 8], 0; ret; 
0x00094aba: mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091644: mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0019da9c: mov byte ptr [eax + eax], al; add byte ptr [eax + 5], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret 3; 
0x000e14e2: mov byte ptr [eax + eax], al; add ecx, 0xc1b0f; mov eax, dword ptr [ecx - 0xf8]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0003f5b4: mov byte ptr [eax + ecx], 0; pop ebx; ret; 
0x0001aff4: mov byte ptr [eax + edx + 0x24348900], bh; call edi; 
0x00132ce7: mov byte ptr [eax - 1], dh; inc dword ptr [ecx + 0x33135c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00104883: mov byte ptr [eax*4 + 0x753989ff], 0xed; add esp, 4; pop esi; pop edi; ret; 
0x00118f31: mov byte ptr [eax], 0; add byte ptr [ebx + 0x1c42484], cl; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x00126289: mov byte ptr [eax], 0; add byte ptr [ebx + 0xee083], cl; add byte ptr [ecx], dh; in eax, dx; call dword ptr [eax + 0x14]; 
0x0014913f: mov byte ptr [eax], 0; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0017bce5: mov byte ptr [eax], 0; int1; out dx, eax; out dx, eax; call dword ptr [eax]; 
0x0017bd45: mov byte ptr [eax], 0; mov cl, 0xef; out dx, eax; call dword ptr [eax]; 
0x0018dc79: mov byte ptr [eax], 0; sbb al, 0; add byte ptr [eax], al; sub dl, 1; add byte ptr [eax + edx*8 - 5], bh; jmp dword ptr [edx]; 
0x0017bd15: mov byte ptr [eax], 0; shr edi, 1; out dx, eax; call dword ptr [eax]; 
0x0016890d: mov byte ptr [eax], 0; xchg eax, esp; nop; in eax, dx; call eax; 
0x00199a12: mov byte ptr [eax], 0x18; add byte ptr [eax], al; add byte ptr [eax], bl; test al, 2; add byte ptr [ecx + ebx*2 - 8], ah; jmp dword ptr [ecx]; 
0x0019b69a: mov byte ptr [eax], 0x44; add byte ptr [eax], al; add byte ptr [eax + 0x7c0002c4], ah; ret; 
0x0016f0c5: mov byte ptr [eax], al; add ah, al; sub bh, dh; jmp esp; 
0x000196e0: mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x8c; ret; 
0x000ef9b7: mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001483d4: mov byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [ecx + 4]; ret; 
0x00147854: mov byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 0xc]; pop edi; ret; 
0x00116934: mov byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ebp + 0xb0]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000949d0: mov byte ptr [eax], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00094203: mov byte ptr [eax], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x00094005: mov byte ptr [eax], cl; mov eax, edi; pop ebx; pop edi; ret; 
0x000949e5: mov byte ptr [eax], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000915b0: mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00025f82: mov byte ptr [ebp + 0x748bfffb], ah; and al, 4; mov ebx, dword ptr [esp]; add esp, 8; ret; 
0x0017ad8e: mov byte ptr [ebp + 0xb], 0x46; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0019b215: mov byte ptr [ebp + 0xb], 0x66; push cs; or al, 0x41; ret; 
0x001825fc: mov byte ptr [ebp + 0xe], 0xc; add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e4204], al; ret; 
0x0018266b: mov byte ptr [ebp + 0xe], 0xc; add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e4a04], al; ret; 
0x0018265a: mov byte ptr [ebp + 0xe], 0xc; add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x00182638: mov byte ptr [ebp + 0xe], 0xc; add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e7104], al; ret; 
0x00182649: mov byte ptr [ebp + 0xe], 0xc; add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e7304], al; ret; 
0x00182627: mov byte ptr [ebp + 0xe], 0xc; add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e7504], al; ret; 
0x00094f88: mov byte ptr [ebp + 1], 0; pop esi; pop edi; pop ebp; ret; 
0x000740ad: mov byte ptr [ebp + edx], cl; mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x000f1839: mov byte ptr [ebp - 0x4d], 0x73; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000568aa: mov byte ptr [ebp - 0x76ffffbc], ch; ret 0xbe0f; 
0x00025eb2: mov byte ptr [ebx + 0x10e1], al; lea eax, dword ptr [ebx + 0x10ac]; pop ebx; ret; 
0x0004a0fd: mov byte ptr [ebx + 0x5e5b5cc4], 0x5f; pop ebp; ret; 
0x0017403a: mov byte ptr [ebx + 0xb], 0x43; or cl, byte ptr [esi]; or al, 0x44; ret; 
0x001745df: mov byte ptr [ebx + 0xb], 0x4d; push cs; or al, 0x43; ret; 
0x0017a542: mov byte ptr [ebx + 0xb], 2; test byte ptr [edx], cl; push cs; or al, 0x41; ret; 
0x0017d79a: mov byte ptr [ebx + 0xe], 4; ret; 
0x00095c39: mov byte ptr [ebx + 0xf6640ea], 0xd7; rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x0016e48c: mov byte ptr [ebx + eax], ch; add byte ptr [eax + ecx*8 + 0x2cbcfffb], ah; add eax, dword ptr [eax]; adc al, 0xc9; sti; jmp eax; 
0x00170dc8: mov byte ptr [ebx - 0x15], ah; call dword ptr [ebx]; 
0x000b67f5: mov byte ptr [ebx - 0x38afdbac], cl; add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x75]; 
0x0016843c: mov byte ptr [ebx - 0x6dfc0000], ch; in al, dx; jmp eax; 
0x000421e6: mov byte ptr [ebx - 0xf76bf3c], 0x5b; pop esi; pop edi; ret; 
0x0004216e: mov byte ptr [ebx - 0xf76df3c], 0x5b; pop esi; pop edi; ret; 
0x00175478: mov byte ptr [ebx], al; out dx, al; call dword ptr [ecx]; 
0x00002fb6: mov byte ptr [ebx], cl; and bh, byte ptr [eax - 0x52]; sub ebx, dword ptr [esp + eax*2]; nop; ret 0x5bdb; 
0x00041df2: mov byte ptr [ecx + 0x444c4], 0; mov eax, esi; pop ebx; pop esi; ret; 
0x0018a090: mov byte ptr [ecx + 0xe], 4; mov dword ptr [edi + 0xb], 0x1000; add byte ptr [esi + ebp*4 - 0x16afffff], bl; hlt; call dword ptr [ecx]; 
0x0019b253: mov byte ptr [ecx + 0xe], 4; mov dword ptr [esi + 0xb], 0x45100e43; ret; 
0x0017d7da: mov byte ptr [ecx + 0xe], 4; ret; 
0x001823ee: mov byte ptr [ecx + 0xe], 8; add dword ptr [edx], 0xe; or al, 0x86; add ebp, dword ptr [esi + ecx + 8]; ret; 
0x0018229a: mov byte ptr [ecx + 0xe], 8; add dword ptr [edx], 0xe; or al, 0x86; add ebx, dword ptr [esi + ecx + 8]; ret; 
0x00182256: mov byte ptr [ecx + 0xe], 8; add dword ptr [edx], 0xe; or al, 0x86; add edx, dword ptr [esi + ecx + 8]; ret; 
0x001822bc: mov byte ptr [ecx + 0xe], 8; add dword ptr [edx], 0xe; or al, 0x86; add esp, dword ptr [esi + ecx + 8]; ret; 
0x0018b480: mov byte ptr [ecx + 0xe], 8; ret; 
0x00184388: mov byte ptr [ecx + 1], dl; add ah, al; hlt; int1; jmp dword ptr [edi]; 
0x0010fd92: mov byte ptr [ecx + 1], dl; ret; 
0x00087633: mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x00087652: mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x00087694: mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x0014abeb: mov byte ptr [ecx + ecx*4], 4; and al, 0xe8; pop ebx; ret; 
0x0007c5b0: mov byte ptr [ecx + edx + 3], ah; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0010ff68: mov byte ptr [ecx + edx], 0; mov eax, esi; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00179de5: mov byte ptr [ecx - 0x39], 0x41; or al, 4; add al, 0xc5; dec eax; or ecx, dword ptr [esi + 0xa]; ret; 
0x00187705: mov byte ptr [ecx - 0x39], 0x41; or al, 4; add al, 0xc5; dec eax; or edx, dword ptr [esi + 0xa]; ret; 
0x0018c462: mov byte ptr [ecx - 0x39], 0x41; or al, 4; add al, 0xc5; dec ecx; or edx, dword ptr [esi + 0xa]; ret; 
0x0017e1ea: mov byte ptr [ecx - 0x39], 0x41; or al, 4; add al, 0xc5; inc ebx; or ebp, dword ptr [esi + 0xa]; ret; 
0x001759c5: mov byte ptr [ecx - 0x39], 0x41; or al, 4; add al, 0xc5; inc ebx; or ebx, dword ptr [edx + 0xa]; ret; 
0x001887c1: mov byte ptr [ecx - 0x39], 0x41; or al, 4; add al, 0xc5; inc ebx; or edx, dword ptr [eax + 0xa]; ret; 
0x0018459c: mov byte ptr [ecx - 0x39], 0x41; or al, 4; add al, 0xc5; inc ecx; or eax, dword ptr [ebx]; ret; 
0x0018455e: mov byte ptr [ecx - 0x39], 0x41; or al, 4; add al, 0xc5; inc ecx; or ebp, dword ptr [esi + 0xa]; ret; 
0x00195fbe: mov byte ptr [ecx - 0x39], 0x41; or al, 4; add al, 0xc5; inc ecx; or edx, dword ptr [ebp + 0xa]; ret; 
0x00196cbe: mov byte ptr [ecx - 0x39], 0x41; or al, 4; add al, 0xc5; inc ecx; or edx, dword ptr [ecx + 0xa]; ret; 
0x00188329: mov byte ptr [ecx - 0x39], 0x41; or al, 4; add al, 0xc5; inc ecx; or edx, dword ptr [esi + 0xa]; ret; 
0x001984ba: mov byte ptr [ecx - 0x39], 0x41; or al, 4; add al, 0xc5; inc edi; or eax, dword ptr [esi + 0xa]; ret; 
0x0018c31e: mov byte ptr [ecx - 0x39], 0x41; or al, 4; add al, 0xc5; inc edi; or ebx, dword ptr [ebx + 0xa]; ret; 
0x0019a4fa: mov byte ptr [ecx - 0x39], 0x41; or al, 4; add al, 0xc5; inc esp; or ebx, dword ptr [eax + 0xa]; ret; 
0x0017582e: mov byte ptr [ecx - 0x39], 0x41; or al, 4; add al, 0xc5; inc esp; or ebx, dword ptr [edx + 0xa]; ret; 
0x000e1905: mov byte ptr [ecx - 0x76fbdbac], cl; inc esp; and al, 8; mov eax, dword ptr [esi + 0xc]; mov dword ptr [esp], eax; call dword ptr [esi + 0x24]; 
0x000ed288: mov byte ptr [ecx], 0; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x0018b839: mov byte ptr [ecx], 0; mov ah, 0x79; cmc; jmp dword ptr [esi]; 
0x00103ad1: mov byte ptr [ecx], 0x83; ret 0x3b10; 
0x000b3530: mov byte ptr [ecx], 0x83; ret 0x3b34; 
0x000a8b33: mov byte ptr [ecx], 0x83; ret 0xf01; 
0x000fd5c9: mov byte ptr [ecx], 0x83; ret 0xf04; 
0x0004e5ab: mov byte ptr [ecx], 0x85; ror byte ptr [edi], 0x8e; jmp dword ptr [ecx]; 
0x000625e6: mov byte ptr [ecx], 9; add byte ptr [ebx - 0x15775], cl; dec dword ptr [ebx - 0x1336b]; dec dword ptr [ecx - 0x10f7b]; jmp dword ptr [ebp - 0x75]; 
0x00187a41: mov byte ptr [ecx], al; add byte ptr [edx - 0xd], bl; jmp dword ptr [eax + 3]; 
0x0006aa70: mov byte ptr [ecx], al; add ecx, 1; movzx eax, al; mov dword ptr [edx + 0x14], ecx; ret; 
0x0009156f: mov byte ptr [ecx], cl; add byte ptr [ecx + 0xc9312c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00091545: mov byte ptr [ecx], cl; add byte ptr [ecx + 0xc933cc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009152c: mov byte ptr [ecx], cl; add byte ptr [ecx + 0xc9355c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009150b: mov byte ptr [ecx], cl; add byte ptr [ecx + 0xc9376c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000914e7: mov byte ptr [ecx], cl; add byte ptr [ecx + 0xc939ac1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000914c9: mov byte ptr [ecx], cl; add byte ptr [ecx + 0xc93b8c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000914ad: mov byte ptr [ecx], cl; add byte ptr [ecx + 0xc93d4c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00087610: mov byte ptr [ecx], dl; pop ebx; ret; 
0x0008f14b: mov byte ptr [edi + 0x10], cl; lea eax, dword ptr [edi + 0x11]; pop edi; pop esi; pop ebx; ret; 
0x0008da6b: mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x0008f1d1: mov byte ptr [edi + 0x14], dl; lea eax, dword ptr [edi + 0x15]; pop edi; pop esi; pop ebx; ret; 
0x0008daf1: mov byte ptr [edi + 0x14], dl; pop edi; pop esi; pop ebx; ret; 
0x00188988: mov byte ptr [edi + 0x17640001], dl; hlt; jmp dword ptr [eax]; 
0x0008f255: mov byte ptr [edi + 0x18], cl; lea eax, dword ptr [edi + 0x19]; pop edi; pop esi; pop ebx; ret; 
0x0008db75: mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x000ce788: mov byte ptr [edi + 0x1a], dl; add esp, 0x20; pop esi; pop edi; pop ebp; ret; 
0x0008dc75: mov byte ptr [edi + 0x20], cl; pop edi; pop esi; pop ebx; ret; 
0x0017faa7: mov byte ptr [edi + 0xe], 8; mov dword ptr [ebx], 0x40e010d; ret; 
0x0017ef59: mov byte ptr [edi + 0xe], 8; mov dword ptr [ebx], 0x40e0111; ret; 
0x0017f19f: mov byte ptr [edi + 0xe], 8; mov dword ptr [ebx], 0x40e0117; ret; 
0x0008efb9: mov byte ptr [edi + 2], dl; lea eax, dword ptr [edi + 3]; pop edi; pop esi; pop ebx; ret; 
0x0008d919: mov byte ptr [edi + 2], dl; pop edi; pop esi; pop ebx; ret; 
0x0008efe7: mov byte ptr [edi + 4], dl; lea eax, dword ptr [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x0008d937: mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x0008f05b: mov byte ptr [edi + 8], dl; lea eax, dword ptr [edi + 9]; pop edi; pop esi; pop ebx; ret; 
0x0008d97b: mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x000ab3c2: mov byte ptr [edi + eax], ch; add byte ptr [ecx + 0xf14247c], cl; sahf; ret 0xd129; 
0x0014734e: mov byte ptr [edi + ecx], 0x85; mov al, byte ptr [ecx]; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xb]; pop edi; ret; 
0x00126627: mov byte ptr [edi + edx], al; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000d8912: mov byte ptr [edi + edx], al; xor eax, eax; pop esi; pop edi; ret; 
0x0016cf2c: mov byte ptr [edi - 0x621bfffe], ch; stc; call esp; 
0x00082c5f: mov byte ptr [edi], 0; mov eax, edx; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000d8595: mov byte ptr [edi], 0; xor eax, eax; pop edi; ret; 
0x0007c971: mov byte ptr [edi], ah; mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x0007e447: mov byte ptr [edi], ah; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x001339be: mov byte ptr [edi], al; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00133f0e: mov byte ptr [edi], al; pop edi; pop ebx; ret; 
0x00138fa9: mov byte ptr [edi], al; pop esi; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013d5c9: mov byte ptr [edi], al; pop esi; pop edi; pop ebx; ret; 
0x0017a368: mov byte ptr [edi], al; std; call dword ptr [esi]; 
0x0004972a: mov byte ptr [edi], cl; inc esp; ret 0x4589; 
0x0008ef92: mov byte ptr [edi], dl; lea eax, dword ptr [edi + 1]; pop edi; pop esi; pop ebx; ret; 
0x0008d8f2: mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x00094161: mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x0018a2df: mov byte ptr [edx + 0xb], 0x69; push cs; or al, 0x43; ret; 
0x001826af: mov byte ptr [edx + 0xe], 0xc; add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x001826c0: mov byte ptr [edx + 0xe], 0xc; add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e4f04], al; ret; 
0x00090ef0: mov byte ptr [edx + 1], bh; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x00089a29: mov byte ptr [edx + 2], al; lea eax, dword ptr [edx + 2]; pop edi; ret; 
0x00089b69: mov byte ptr [edx + 2], al; lea eax, dword ptr [edx + 2]; ret; 
0x00093dcc: mov byte ptr [edx + 2], al; mov eax, edi; pop ebx; pop edi; ret; 
0x00085669: mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x00085789: mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x00090f00: mov byte ptr [edx + 2], bh; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x00089a47: mov byte ptr [edx + 4], al; lea eax, dword ptr [edx + 4]; pop edi; ret; 
0x00089b87: mov byte ptr [edx + 4], al; lea eax, dword ptr [edx + 4]; ret; 
0x00093dfa: mov byte ptr [edx + 4], al; mov eax, edi; pop ebx; pop edi; ret; 
0x00085677: mov byte ptr [edx + 4], al; mov eax, edi; pop edi; ret; 
0x000857a7: mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x00090f30: mov byte ptr [edx + 4], bh; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x00089a8b: mov byte ptr [edx + 8], al; lea eax, dword ptr [edx + 8]; pop edi; ret; 
0x00089bcb: mov byte ptr [edx + 8], al; lea eax, dword ptr [edx + 8]; ret; 
0x00093e6e: mov byte ptr [edx + 8], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000856ab: mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000857eb: mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x00094104: mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x00090fa0: mov byte ptr [edx + 8], bh; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0016b55c: mov byte ptr [edx + eax], bl; add byte ptr [esi + ecx*4 - 0xa], al; jmp eax; 
0x00146855: mov byte ptr [edx + edx*8 + 0xa2840f], 0; add dh, dh; ret 0x7501; 
0x000031ce: mov byte ptr [edx - 0x11fc0c81], bh; aam 0x5c; ret 0x2ec0; 
0x001853dc: mov byte ptr [edx - 0xe], al; call dword ptr [eax]; 
0x001331c5: mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00136494: mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x00132bb5: mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00134eec: mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013636c: mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x0013bebc: mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x00089a02: mov byte ptr [edx], al; lea eax, dword ptr [edx]; pop edi; ret; 
0x00089b42: mov byte ptr [edx], al; lea eax, dword ptr [edx]; ret; 
0x00136ae3: mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00135683: mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00093da5: mov byte ptr [edx], al; mov eax, edi; pop ebx; pop edi; ret; 
0x00085642: mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x00085762: mov byte ptr [edx], al; mov eax, edx; ret; 
0x0013c5c3: mov byte ptr [edx], al; pop ebx; ret; 
0x0013699b: mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0013555b: mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013c4bb: mov byte ptr [edx], cl; pop ebx; ret; 
0x0017ace6: mov byte ptr [edx], cl; push cs; adc al, 0x46; ret; 
0x0007a73c: mov byte ptr [edx], dl; add byte ptr [ecx - 0x9e7db8c], cl; ret 0x7403; 
0x00184712: mov byte ptr [esi + 0xb], 0x4d; push cs; or al, 0x43; ret; 
0x0018da3e: mov byte ptr [esi + 0xb], 2; dec ecx; push cs; or al, 0x43; ret; 
0x00196088: mov byte ptr [esi + 2], ch; add byte ptr [esi - 9], al; call dword ptr [ebx]; 
0x000b3ee7: mov byte ptr [esi + 7], bl; add byte ptr [ecx + 0xef109c3], al; add byte ptr [edi + 0xdcb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00042c96: mov byte ptr [esi - 0x77000000], al; ret 0xbe0f; 
0x0018fc1d: mov byte ptr [esi - 0xb], bh; jmp dword ptr [edx]; 
0x00041e04: mov byte ptr [esi], 0; add esp, 0x444; mov eax, esi; pop ebx; pop esi; ret; 
0x000e856e: mov byte ptr [esi], 0; mov eax, esi; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00035a84: mov byte ptr [esi], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0011f285: mov byte ptr [esi], al; add esp, 0x28; mov eax, 1; pop esi; ret; 
0x0011e92f: mov byte ptr [esi], al; add esp, 0x28; mov eax, edx; pop esi; ret; 
0x00182c18: mov byte ptr [esi], ch; int1; call dword ptr [ebx]; 
0x000e6035: mov byte ptr [esp + 0x2f], al; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0017bd14: mov byte ptr fs:[eax], 0; shr edi, 1; out dx, eax; call dword ptr [eax]; 
0x000949e4: mov byte ptr ss:[eax], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c58c6: mov ch, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00148a77: mov ch, 0; add byte ptr [eax], al; lea eax, dword ptr [edx + 0xf]; ret; 
0x00054747: mov ch, 0x2b; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x001589ea: mov ch, 0x31; mov ah, bl; push esi; ret; 
0x0017ba39: mov ch, 0x80; out dx, eax; jmp dword ptr [edx]; 
0x001901bd: mov ch, 0x85; cmc; jmp dword ptr [edx]; 
0x00157a55: mov ch, 0xb6; mov bh, 0xb8; mov ecx, 0xbdbcbbba; mov esi, 0xc2c1c0bf; ret; 
0x00175db1: mov ch, 0xba; out dx, al; jmp dword ptr [edx]; 
0x00168d28: mov ch, 0xce; out dx, eax; call dword ptr [eax]; 
0x001685e1: mov ch, 0xec; call eax; 
0x00173fc5: mov ch, 0xec; jmp dword ptr [ebx]; 
0x001685d9: mov ch, 0xec; push dword ptr [eax - 0x1bffff4c]; mov ch, 0xec; call eax; 
0x00169951: mov ch, 0xf0; jmp dword ptr [eax]; 
0x001175d6: mov ch, 0xf1; jmp dword ptr [ebp - 0x7d]; 
0x0016af30: mov ch, 0xf6; hlt; call esp; 
0x0019afb1: mov ch, 0xf8; jmp dword ptr [eax]; 
0x0016dae9: mov ch, 0xfa; jmp dword ptr [eax - 8]; 
0x0017311c: mov ch, 2; in al, dx; call dword ptr [eax]; 
0x000de79f: mov ch, 4; add byte ptr [ecx + 0xc4852c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00130a2d: mov ch, 8; add byte ptr [eax], al; pop ebx; ret; 
0x0008eaf7: mov ch, 9; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0008e83e: mov ch, 9; add byte ptr [ecx + 0xcbeefc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0008e81e: mov ch, 9; add byte ptr [ecx + 0xcbf0fc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0008e7f9: mov ch, 9; add byte ptr [ecx + 0xcbf34c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00173cd6: mov ch, ah; jmp dword ptr [edx]; 
0x0006a9c4: mov ch, al; cli; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x0019039e: mov ch, dh; jmp dword ptr [edx]; 
0x001684fd: mov cl, 0; add ah, dl; lodsb al, byte ptr [esi]; in al, dx; jmp dword ptr [eax - 0x4f]; 
0x0002e336: mov cl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00003c64: mov cl, 0x22; xchg eax, ebp; ret; 
0x000948d5: mov cl, 0x60; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00078070: mov cl, 0x8b; add dword ptr fs:[eax], eax; add byte ptr [ecx], bh; ret 0x850f; 
0x001065c3: mov cl, 0x8b; push 0xf00002f; test ebp, ebp; add byte ptr [eax], al; add byte ptr [ebx - 0xff7d], cl; jmp dword ptr [ebp + 3]; 
0x000cb3ac: mov cl, 0x8d; push esi; add dword ptr [ecx], edi; ret 0xd689; 
0x000e7e38: mov cl, 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0008f624: mov cl, 0xc; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000df3e0: mov cl, 0xc; mov edi, ebp; xchg edi, ebx; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0016d200: mov cl, 0xca; stc; call dword ptr [eax - 0x41]; 
0x00002b75: mov cl, 0xda; fnsave dword ptr [edx - 0x6b]; test word ptr [ebx - 0x2e], bp; cmp dl, byte ptr [edi]; ret; 
0x000b7ef4: mov cl, 0xe; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00138371: mov cl, 0xeb; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00173dd5: mov cl, 0xec; call dword ptr [eax]; 
0x00138171: mov cl, 0xee; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0017bd48: mov cl, 0xef; out dx, eax; call dword ptr [eax]; 
0x0016a3d1: mov cl, 0xf1; inc dword ptr [eax + 0x6a]; add dword ptr [eax], eax; movsb byte ptr es:[edi], byte ptr [esi]; mov cl, 0xf1; jmp dword ptr [eax + 0x6a]; 
0x0016a3d9: mov cl, 0xf1; jmp dword ptr [eax + 0x6a]; 
0x0017ba78: mov cl, 0xf1; out dx, eax; call dword ptr [eax]; 
0x0017b7a8: mov cl, 0xf3; out dx, eax; call dword ptr [eax]; 
0x00197139: mov cl, 0xf7; jmp dword ptr [esi]; 
0x0007bd09: mov cl, 0xf9; inc dword ptr [ebp + 0x74c789c0]; ret 0xf685; 
0x0016d099: mov cl, 0xf9; jmp dword ptr [eax]; 
0x0016d091: mov cl, 0xf9; ljmp ptr [edi + esi*4 + 2]; add byte ptr [ecx + esi*4 - 7], ah; jmp dword ptr [eax]; 
0x0002ebb2: mov cl, 0xf; add byte ptr [ecx + 0x17443fc1], al; add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp - 0x39]; 
0x000b82d1: mov cl, 0xfb; jmp dword ptr [ebp - 0x5f]; 
0x0018a3a9: mov cl, 1; add ah, dl; hlt; jmp dword ptr [ebx]; 
0x001142f2: mov cl, 1; mov dword ptr [esi + 0x34], edx; add esp, 0x18; mov eax, ecx; pop esi; ret; 
0x0018b6ad: mov cl, 1; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0019a3ed: mov cl, 2; add al, ah; mov bh, al; call dword ptr [edx]; 
0x0016cf95: mov cl, 2; add dh, dl; movsb byte ptr es:[edi], byte ptr [esi]; stc; call eax; 
0x000f3bbb: mov cl, 3; add al, 0xa; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000eec2a: mov cl, 3; add byte ptr [ecx + 0xb43c7c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000dec3f: mov cl, 4; add byte ptr [ecx + 0xc43b2c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000debc4: mov cl, 4; add byte ptr [ecx + 0xc442dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00007964: mov cl, byte ptr [ebx]; add byte ptr [eax - 8], ah; adc dword ptr [eax], eax; ret; 
0x001313fd: mov cs, word ptr [eax - 0x7ccfebb4]; ret 0x8301; 
0x00131381: mov cs, word ptr [eax - 0x7cdfebb4]; ret 0x8301; 
0x00131339: mov cs, word ptr [eax - 0x7cefebb4]; ret 0x8301; 
0x0011fd61: mov cs, word ptr [ebp + 0xb6]; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x7d]; 
0x00076a8e: mov cs, word ptr [ebx]; add dword ptr [eax], eax; add byte ptr [ebx - 0xfb55], cl; dec dword ptr [ebx - 0x177cefbb]; add dword ptr [ecx], eax; ret 0xd0f7; 
0x001300d8: mov cs, word ptr [edi]; inc ebp; ret 0x9be9; 
0x00184086: mov cs, word ptr [edi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00183b5a: mov cs, word ptr [edx]; push cs; adc al, 0x43; ret; 
0x001759c1: mov cs, word ptr [edx]; ret; 
0x0019b695: mov cs, word ptr [esi]; add al, 0xc5; mov esi, 0x4400; add byte ptr [eax + 0x7c0002c4], ah; ret; 
0x000915d0: mov cx, word ptr [esi]; mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0017a891: mov dh, 0; add ah, bh; test edi, ebp; jmp dword ptr [eax]; 
0x0017a851: mov dh, 0; add ah, cl; test bh, ch; jmp dword ptr [ecx + 1]; 
0x001685fd: mov dh, 0; add byte ptr [eax + edi*4], dh; in al, dx; jmp eax; 
0x000e4cdb: mov dh, 0; add byte ptr [eax], al; add al, ch; imul esp, dword ptr [edx], -0xd; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x00079a73: mov dh, 0; add byte ptr [eax], al; add al, ch; ret; 
0x0014ab6b: mov dh, 0; add byte ptr [eax], al; add bl, dh; ret; 
0x000b9aa3: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x40], bh; ret; 
0x0003f79b: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x742fff78], al; ret 0xe883; 
0x0007c2f3: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0013837b: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x001470c4: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; add eax, 1; ret; 
0x001499f4: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [ecx + 8]; ret; 
0x00148a84: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edx + 1]; ret; 
0x00073404: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x000a73f4: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 1; ret; 
0x000875f4: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; pop ebx; ret; 
0x00067904: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; xor eax, eax; ret; 
0x00038a3b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x75168bd2], al; sbb dh, dh; ret 0x7501; 
0x00126f45: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp + 0xbf], cl; add byte ptr [ebx - 0x18], dl; sbb eax, 0x8100002e; ret; 
0x00147065: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp + 0xbf], cl; add dh, dh; ret 0x7510; 
0x000da96b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp + ecx - 0x7d], dh; ret 0x8901; 
0x000b904b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp - 0x14], dh; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000ce9db: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp - 0x76d38740], al; ret 0x4e8b; 
0x0014805b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x1b720eea], al; lea eax, dword ptr [edi + 0xd]; pop edi; ret; 
0x0014907b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x1b720eef], al; lea eax, dword ptr [eax + 0xd]; pop edi; ret; 
0x0014804b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x2b720dea], al; lea eax, dword ptr [edi + 0xc]; pop edi; ret; 
0x0014906b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x2b720def], al; lea eax, dword ptr [eax + 0xc]; pop edi; ret; 
0x0014803b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x3b720bea], al; lea eax, dword ptr [edi + 0xa]; pop edi; ret; 
0x0014905b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x3b720bef], al; lea eax, dword ptr [eax + 0xa]; pop edi; ret; 
0x0014802b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x4b720aea], al; lea eax, dword ptr [edi + 9]; pop edi; ret; 
0x0014904b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x4b720aef], al; lea eax, dword ptr [eax + 9]; pop edi; ret; 
0x0014801b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5b7209ea], al; lea eax, dword ptr [edi + 8]; pop edi; ret; 
0x0014903b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5b7209ef], al; lea eax, dword ptr [eax + 8]; pop edi; ret; 
0x0014909b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x000d8a23: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x66042444], cl; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0014800b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x6b7207ea], al; lea eax, dword ptr [edi + 6]; pop edi; ret; 
0x0014902b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x6b7207ef], al; lea eax, dword ptr [eax + 6]; pop edi; ret; 
0x0011e59b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x74890441], cl; and al, 4; mov dword ptr [esp], ecx; call dword ptr [eax]; 
0x0011e5e3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x74890450], cl; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x000f288b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x7c8b2434], cl; and al, 4; add esp, 8; ret; 
0x0014806b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0xb720fea], al; lea eax, dword ptr [edi + 0xe]; pop edi; ret; 
0x0014908b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0xb720fef], al; lea eax, dword ptr [eax + 0xe]; pop edi; ret; 
0x00127943: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0xcc48302], cl; ret; 
0x0011995b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; or eax, 0x81000104; ret; 
0x00035ccb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x74abdbbc], cl; push ebp; add byte ptr [ebp - 0x9ea8a40], al; ret 0x7501; 
0x00118bdb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x76e3dbbc], cl; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x001241db: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0xf74d], cl; jmp dword ptr [ebp - 0x39]; 
0x00123373: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x75]; 
0x0010b803: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x7d]; 
0x000f646b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp + 3]; 
0x0002e97b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x0005dec3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x000da2bb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x7d]; 
0x001003c3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0xff7d], cl; jmp dword ptr [ebp - 0x39]; 
0x00129be3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x7c73d427], cl; add byte ptr [eax + edi*8 - 1], ch; jmp ecx; 
0x00133e3b: mov dh, 0; add byte ptr [eax], al; add byte ptr [edi - 0x18], dl; sub eax, 0x81ffff5f; ret; 
0x000b359b: mov dh, 0; add byte ptr [eax], al; add byte ptr [edx + edi*4 - 0x7d], dh; mov byte ptr [ecx], 0x83; ret 0x3b34; 
0x00097eeb: mov dh, 0; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x00148e3b: mov dh, 0; add byte ptr [eax], al; add dh, dh; ret 0xf10; 
0x00148376: mov dh, 0; add byte ptr [eax], al; mov eax, ecx; ret; 
0x001685f5: mov dh, 0; add byte ptr [edi + esi*4 - 0x49430014], ah; add byte ptr [eax], al; xor al, 0xb8; in al, dx; jmp eax; 
0x00072141: mov dh, 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00070561: mov dh, 0; add esp, 0x18; pop esi; ret; 
0x001278f1: mov dh, 0; add esp, 0x24; pop esi; pop edi; ret; 
0x00025eb0: mov dh, 0; mov byte ptr [ebx + 0x10e1], al; lea eax, dword ptr [ebx + 0x10ac]; pop ebx; ret; 
0x00135681: mov dh, 0; mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013c5c1: mov dh, 0; mov byte ptr [edx], al; pop ebx; ret; 
0x00130823: mov dh, 0; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x00130826: mov dh, 0x12; sub eax, edx; ret; 
0x0008334c: mov dh, 0x14; add dword ptr [edx + edx*8 - 0x41f0f88c], eax; sar byte ptr [ecx], cl; bnd jne 0x83348; pop esi; ret; 
0x0007249e: mov dh, 0x16; mov eax, dword ptr [edi + eax + 0x94]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0xc]; 
0x0000369d: mov dh, 0x1b; add eax, 0x572808a8; call dword ptr [esi + 0x6f]; 
0x00167188: mov dh, 0x2c; std; inc dword ptr [esi]; sub eax, 0x2c00fffd; std; jmp dword ptr [eax + 0x2c]; 
0x000d5649: mov dh, 0x2c; xor ebx, ebp; ret; 
0x00167280: mov dh, 0x2d; std; inc dword ptr [esi]; std; jmp dword ptr [esi + 0x2e]; 
0x00167344: mov dh, 0x3a; std; inc dword ptr [esi]; cmp edi, ebp; call dword ptr [esi + 0x3b]; 
0x0013500d: mov dh, 0x40; jmp dword ptr [esi - 0x77]; 
0x000d78d5: mov dh, 0x41; sbb al, 0x89; ret 0xeac1; 
0x001403b2: mov dh, 0x42; pop es; sub eax, ecx; pop ebp; ret; 
0x0013ec05: mov dh, 0x42; pop es; sub eax, ecx; ret; 
0x0014048e: mov dh, 0x42; push es; sub eax, ecx; pop ebp; ret; 
0x0013ec75: mov dh, 0x42; push es; sub eax, ecx; ret; 
0x000c2b65: mov dh, 0x45; add ecx, dword ptr [ebp + 0x2de90475]; idiv bh; dec dword ptr [ebx - 0x15755]; jmp dword ptr [ebp - 0x75]; 
0x000e6032: mov dh, 0x46; and ecx, dword ptr [eax - 0x78d0dbbc]; fistp qword ptr [eax + 0x36]; call dword ptr gs:[0x10]; 
0x00146882: mov dh, 0x47; test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0014046a: mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x0013ec61: mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; ret; 
0x00134ee9: mov dh, 0x48; dec dword ptr [eax + 0x448bff4a]; and al, 8; pop ebx; ret; 
0x00136369: mov dh, 0x48; dec dword ptr [eax - 0x2f7600b6]; pop ebx; ret; 
0x001403ae: mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x0013ec01: mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0014048a: mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x0013ec71: mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x000c3492: mov dh, 0x4a; add al, 0x83; ret 0x8305; 
0x00094ebd: mov dh, 0x4e; or dword ptr [eax], eax; add ecx, 0xc5ac3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0005209e: mov dh, 0x4f; add cl, byte ptr [edi]; xchg eax, esp; ret 0xb60f; 
0x000bb20d: mov dh, 0x51; add al, byte ptr [ebx - 0x377cfe3f]; add ch, bl; ret; 
0x000c6bea: mov dh, 0x55; and ch, byte ptr [eax + 0x33850f01]; add al, byte ptr [eax]; add dh, dh; ret 0xf01; 
0x00117646: mov dh, 0x56; add ch, al; and eax, 0x81000127; ret; 
0x001468f5: mov dh, 0x56; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x00146886: mov dh, 0x56; imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x001468b5: mov dh, 0x56; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00167784: mov dh, 0x5c; std; inc dword ptr [esi]; pop ebp; std; call dword ptr [esi + 0x5d]; 
0x000d6e19: mov dh, 0x6a; add al, 0x89; fldcw word ptr [ebx]; mov word ptr [ebx - 0xcc1cc], gs; jmp ecx; 
0x000d52a3: mov dh, 0x72; add al, 0x83; ret 0x8505; 
0x000185a0: mov dh, 0x78; add al, 0x89; ret 0x8589; 
0x0004a158: mov dh, 0x79; or eax, 0xeac0fa89; add al, byte ptr [ebx - 0x187cfe1e]; add dword ptr [ebx - 0x15745], ecx; jmp dword ptr [ebp - 0x75]; 
0x00197cff: mov dh, 0xa; ret; 
0x000b8240: mov dh, 0xad; push cs; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00157a56: mov dh, 0xb7; mov eax, 0xbcbbbab9; mov ebp, 0xc1c0bfbe; ret 0xc4c3; 
0x000e9dc7: mov dh, 0xc0; add esp, 0x18; pop ebx; ret; 
0x001252a0: mov dh, 0xc0; add esp, 0x18; pop esi; ret; 
0x000a7267: mov dh, 0xc0; lea eax, dword ptr [eax + eax - 1]; pop esi; pop edi; ret; 
0x000b9b6e: mov dh, 0xc0; lea eax, dword ptr [eax + eax - 1]; ret; 
0x000678b7: mov dh, 0xc0; mov dword ptr [edx + 0x14], ecx; add esp, 0x18; pop ebx; ret; 
0x0006aa76: mov dh, 0xc0; mov dword ptr [edx + 0x14], ecx; ret; 
0x00113bc1: mov dh, 0xc0; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000f071d: mov dh, 0xc0; mov ebx, dword ptr [esp + 0x70]; mov esi, dword ptr [esp + 0x74]; mov edi, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x0002eb80: mov dh, 0xc0; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000cbb51: mov dh, 0xc0; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0xd7494]; jmp ecx; 
0x000c1f79: mov dh, 0xc0; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0xe106c]; jmp ecx; 
0x000ac911: mov dh, 0xc0; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0xf66d4]; jmp ecx; 
0x000ac839: mov dh, 0xc0; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0xf67ac]; jmp ecx; 
0x0011ea97: mov dh, 0xc0; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00114113: mov dh, 0xc0; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000dacee: mov dh, 0xc0; pop ebx; pop esi; pop edi; pop ebp; ret 0xc; 
0x00017790: mov dh, 0xc0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000d84b6: mov dh, 0xc0; pop ebx; ret; 
0x00114a7a: mov dh, 0xc0; pop edi; pop ebp; ret; 
0x000eb5be: mov dh, 0xc0; pop esi; pop edi; pop ebp; ret; 
0x0002e89e: mov dh, 0xc0; ret; 
0x000710c4: mov dh, 0xc0; sub eax, 1; add esp, 0x18; pop esi; ret; 
0x000c5cea: mov dh, 0xc0; sub eax, 1; pop esi; ret; 
0x000ef0a9: mov dh, 0xc0; sub eax, 1; ret; 
0x0004b319: mov dh, 0xc; add dword ptr [ecx], eax; ret 0xf980; 
0x0013032a: mov dh, 0xc; push cs; sub eax, ecx; pop esi; pop edi; ret; 
0x0001cbdb: mov dh, 0xca; test dl, dl; cmovns eax, ecx; ret; 
0x0017721d: mov dh, 0xcf; out dx, al; jmp dword ptr [edx]; 
0x000d4369: mov dh, 0xd0; mov ecx, ebx; sub ecx, dword ptr [ebx + edx*4 - 0xcec7c]; jmp ecx; 
0x00166078: mov dh, 0xd1; cld; call esi; 
0x001773fd: mov dh, 0xd1; out dx, al; jmp dword ptr [edx]; 
0x0004cb6a: mov dh, 0xd2; mov eax, ebx; sub eax, dword ptr [ebx + edx*4 - 0x15647c]; jmp eax; 
0x000cb891: mov dh, 0xd2; mov eax, ebx; sub eax, dword ptr [ebx + edx*4 - 0xd7754]; jmp eax; 
0x001662f8: mov dh, 0xd5; cld; call esi; 
0x00178301: mov dh, 0xdb; cli; jmp dword ptr [edx]; 
0x0016f921: mov dh, 0xea; call dword ptr [edx]; 
0x0016f949: mov dh, 0xea; jmp dword ptr [ecx]; 
0x0017477e: mov dh, 0xec; jmp dword ptr [edx]; 
0x0016ac01: mov dh, 0xf4; call dword ptr [eax]; 
0x001919d9: mov dh, 0xf6; jmp dword ptr [edx]; 
0x0019b095: mov dh, 0xf8; jmp edx; 
0x00191e75: mov dh, 0xfa; cmc; jmp dword ptr [edx]; 
0x0018a8c1: mov dh, 1; add ah, ch; xor ebp, esi; call dword ptr [ebp]; 
0x0006aace: mov dh, 1; add ecx, 1; mov dword ptr [edx + 4], ecx; add esp, 0x18; pop ebx; ret; 
0x0006aa9d: mov dh, 1; add ecx, 1; mov dword ptr [edx + 4], ecx; ret; 
0x000874d6: mov dh, 2; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00072402: mov dh, 2; add edx, 1; mov dword ptr [esi + 4], edx; add esp, 0x18; pop esi; ret; 
0x0012b791: mov dh, 2; add esp, 0x14; pop ebx; pop esi; ret; 
0x00142a74: mov dh, 2; mov ecx, dword ptr [ebx + ecx*4 - 0x567f4]; mov eax, dword ptr [ebx + eax*4 - 0x567f4]; sub eax, ecx; pop ebx; ret; 
0x00073bf1: mov dh, 2; pop esi; ret; 
0x001403cd: mov dh, 2; sub eax, ecx; pop ebp; ret; 
0x0013ec14: mov dh, 2; sub eax, ecx; ret; 
0x000de6c2: mov dh, 4; add byte ptr [ecx + 0xc492fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0013d5c7: mov dh, 6; mov byte ptr [edi], al; pop esi; pop edi; pop ebx; ret; 
0x000e6446: mov dh, 8; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00135559: mov dh, 8; mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013c4b9: mov dh, 8; mov byte ptr [edx], cl; pop ebx; ret; 
0x001403ca: mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x0013ec11: mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0011fbaf: mov dh, ah; inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x00094a09: mov dh, byte ptr [esi + 2]; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000949e3: mov dh, byte ptr [esi]; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0017a49d: mov dl, 0; add al, al; jp 0x17a492; call dword ptr [ebp]; 
0x0002f145: mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0017a449: mov dl, 0; add byte ptr [edx + edi*2], dh; out dx, eax; jmp dword ptr [esi]; 
0x0016857d: mov dl, 0; add byte ptr [edx + esi*4 - 0x4cc30014], al; add byte ptr [eax], al; in al, 0xb2; in al, dx; jmp dword ptr [eax - 0x4d]; 
0x000f1834: mov dl, 0; mov dword ptr [ebp - 0x60], eax; mov byte ptr [ebp - 0x4d], 0x73; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00003b54: mov dl, 0x1e; ret; 
0x001670a0: mov dl, 0x1f; std; inc dword ptr [edx]; and ch, bh; call dword ptr [edx + 0x20]; 
0x000a1d9a: mov dl, 0x4e; clc; jmp dword ptr [esi - 0x70]; 
0x0016cd98: mov dl, 0x74; stc; jmp dword ptr [eax]; 
0x00066ed6: mov dl, 0x8b; cmp byte ptr [eax - 0x77000000], 0x7c; and al, 8; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; call dword ptr [eax + 0x2c]; 
0x000698e6: mov dl, 0x8b; inc ebp; sub al, 0x2b; inc ebp; and al, 0x89; ret 0xfac1; 
0x00166cb0: mov dl, 0xa; std; inc dword ptr [eax]; or edi, ebp; jmp edx; 
0x000fefc1: mov dl, 0xad; add al, byte ptr [eax]; add ecx, 0xa402f; mov eax, dword ptr [ecx - 0x14]; mov eax, dword ptr gs:[eax]; ret; 
0x00157a52: mov dl, 0xb3; mov ah, 0xb5; mov dh, 0xb7; mov eax, 0xbcbbbab9; mov ebp, 0xc1c0bfbe; ret 0xc4c3; 
0x000e7d68: mov dl, 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00175439: mov dl, 0xd5; in eax, dx; jmp dword ptr [edx]; 
0x00166538: mov dl, 0xd8; cld; call edx; 
0x00138f70: mov dl, 0xdf; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b7d55: mov dl, 0xe; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00173cb5: mov dl, 0xec; call dword ptr [eax]; 
0x00168589: mov dl, 0xec; jmp dword ptr [eax - 0x4d]; 
0x0017c375: mov dl, 0xef; jmp dword ptr [edi]; 
0x0016a411: mov dl, 0xf1; call dword ptr [eax]; 
0x0016a401: mov dl, 0xf1; jmp eax; 
0x0016a409: mov dl, 0xf1; push esp; push 1; add ah, dl; mov dl, 0xf1; call dword ptr [eax]; 
0x0019ae71: mov dl, 0xf8; call dword ptr [esi + 1]; 
0x00166a30: mov dl, 0xf8; cld; inc dword ptr [eax]; stc; cld; call edx; 
0x0016d0b9: mov dl, 0xf9; call dword ptr [eax - 0x48]; 
0x0016d0b1: mov dl, 0xf9; push eax; mov bh, 2; add ah, dh; mov dl, 0xf9; call dword ptr [eax - 0x48]; 
0x00166a2c: mov dl, 0xfa; cld; push dword ptr [edx + 0xfffcf8]; stc; cld; call edx; 
0x00123879: mov dl, 0xfb; dec dword ptr [ebx - 0xeb6b]; dec dword ptr [ebx - 0xdf7b]; dec dword ptr [ebx - 0xf775]; jmp dword ptr [ebp - 0x77]; 
0x00166bf4: mov dl, 0xfd; cld; call dword ptr [edx - 2]; 
0x0018a485: mov dl, 1; add byte ptr [eax], ch; div esp; call dword ptr [esi]; 
0x0011e92d: mov dl, 1; mov byte ptr [esi], al; add esp, 0x28; mov eax, edx; pop esi; ret; 
0x0011f6c4: mov dl, 1; mov eax, edx; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x00179771: mov dl, 1; out dx, eax; jmp dword ptr [edx]; 
0x0019a419: mov dl, 2; add ah, dl; mov edi, eax; jmp dword ptr [ebx]; 
0x0019a475: mov dl, 2; add byte ptr [eax - 0x71], bl; clc; call dword ptr [esi + 1]; 
0x0016cfad: mov dl, 2; add byte ptr [ecx], bl; cmpsb byte ptr [esi], byte ptr es:[edi]; stc; jmp dword ptr [eax - 0x4e]; 
0x0019a905: mov dl, 2; add byte ptr [edx - 8], dh; call dword ptr [eax]; 
0x0019a935: mov dl, 2; add byte ptr [edx - 8], dl; call dword ptr [eax]; 
0x0019a965: mov dl, 2; add byte ptr [edx], dh; clc; call dword ptr [eax]; 
0x0019a995: mov dl, 2; add byte ptr [edx], dl; clc; call dword ptr [eax]; 
0x0019bfcc: mov dl, 2; add eax, 0xffff0000; add dword ptr [ebx], ecx; ret; 
0x000eeab2: mov dl, 3; add byte ptr [ecx + 0xb453fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000dea7f: mov dl, 4; add byte ptr [ecx + 0xc4572c3], al; add dh, dh; ret 0x8940; 
0x0008d6fa: mov dl, 6; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0008d5fa: mov dl, 7; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0019b4a4: mov dl, bl; clc; call dword ptr [eax]; 
0x000dde6c: mov dl, byte ptr [ecx + 0xc]; add byte ptr [ebx - 0x78f3dbac], cl; sar dword ptr [eax + 0xc5], cl; call dword ptr gs:[0x10]; 
0x0008d8f0: mov dl, byte ptr [esi]; mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x00174314: mov dl, ch; in al, dx; call dword ptr [eax]; 
0x00064a65: mov ds, word ptr [esi - 0x75000000]; inc ebp; push esp; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x00170618: mov dword ptr [0x41140e0a], eax; ret; 
0x00199521: mov dword ptr [0x4ffc0002], eax; clc; jmp dword ptr [edx]; 
0x0008ed09: mov dword ptr [0x5f000007], eax; pop esi; pop ebx; ret; 
0x0006d90a: mov dword ptr [0x66fffffe], eax; nop; mov edx, dword ptr [ebp + 0x54]; mov dword ptr [esp + 0x48], edx; mov dword ptr [esp], edx; call dword ptr [edx + 0x10]; 
0x0002de86: mov dword ptr [0x68], eax; mov edi, eax; mov edx, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000b9065: mov dword ptr [0x68], ecx; nop; lea esi, dword ptr [esi]; ret; 
0x001682ad: mov dword ptr [0x6af40000], eax; in al, dx; call dword ptr [eax - 0x5d]; 
0x000b8584: mov dword ptr [0x6c], eax; mov eax, 0xbe; int 0x80; 
0x001682cd: mov dword ptr [0x6ca40000], eax; in al, dx; jmp esp; 
0x001682dd: mov dword ptr [0x6db40000], eax; in al, dx; jmp dword ptr [eax]; 
0x0016cd8d: mov dword ptr [0x73640002], eax; stc; call dword ptr [eax]; 
0x0016cd9d: mov dword ptr [0x74c20002], eax; stc; call dword ptr [eax - 0x5d]; 
0x0016cdb5: mov dword ptr [0x74f40002], eax; stc; call dword ptr [eax - 0x5c]; 
0x001194cc: mov dword ptr [0x81000108], eax; ret; 
0x0010a8cc: mov dword ptr [0x810001f4], eax; ret; 
0x001028cc: mov dword ptr [0x81000274], eax; ret; 
0x00101acc: mov dword ptr [0x81000282], eax; ret; 
0x000f64cc: mov dword ptr [0x81000338], eax; ret; 
0x000f06cc: mov dword ptr [0x81000396], eax; ret; 
0x000ee7cc: mov dword ptr [0x810003b5], eax; ret; 
0x000e75cc: mov dword ptr [0x81000427], eax; ret; 
0x00099dcc: mov dword ptr [0x810008ff], eax; ret; 
0x000740cc: mov dword ptr [0x81000b5c], eax; ret; 
0x0006efcc: mov dword ptr [0x81000bad], eax; ret; 
0x000667cc: mov dword ptr [0x81000c35], eax; ret; 
0x0004bbcc: mov dword ptr [0x81000de1], eax; ret; 
0x000335cc: mov dword ptr [0x81000f67], eax; ret; 
0x000307cc: mov dword ptr [0x81000f95], eax; ret; 
0x00087a99: mov dword ptr [0x85fffff8], eax; ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000fc690: mov dword ptr [0x89fffba5], eax; add al, 0x24; call 0x276f0; add esp, 0x18; pop ebx; ret; 
0x000eb499: mov dword ptr [0x8b000001], eax; inc esp; and al, 0x2c; add esp, 0x38; pop ebx; ret; 
0x00166588: mov dword ptr [0xc3fffcd8], eax; fdivr st(4); jmp dword ptr [eax - 0x28]; 
0x00002b6f: mov dword ptr [0xc8928a39], ecx; mov cl, 0xda; fnsave dword ptr [edx - 0x6b]; test word ptr [ebx - 0x2e], bp; cmp dl, byte ptr [edi]; ret; 
0x000e3807: mov dword ptr [0xf000000], eax; inc esp; ret 0x6c89; 
0x00016eb7: mov dword ptr [8], eax; add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x000d936a: mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x0011fc19: mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0xc], edx; ret; 
0x00094c41: mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000917bb: mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094be0: mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009175d: mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0006a05b: mov dword ptr [eax + 0x10], edx; add esp, 0x1c; ret; 
0x00114ac3: mov dword ptr [eax + 0x10], esi; mov esi, dword ptr [esp]; mov dword ptr [eax + 0x18], ecx; mov eax, 1; add esp, 8; ret; 
0x000d9354: mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x000ec402: mov dword ptr [eax + 0x14], edx; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0011f55d: mov dword ptr [eax + 0x14], edx; pop ebx; ret; 
0x00094d28: mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091885: mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00114ac9: mov dword ptr [eax + 0x18], ecx; mov eax, 1; add esp, 8; ret; 
0x00094cfa: mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091867: mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ca089: mov dword ptr [eax + 0x1c], edx; pop edi; mov dword ptr [eax + 0x20], edx; pop ebp; ret; 
0x0006bf72: mov dword ptr [eax + 0x20], 0; mov dword ptr [eax + 0x28], 0; mov dword ptr [eax + 0x24], 0; add esp, 0x1c; ret; 
0x0006b635: mov dword ptr [eax + 0x20], ecx; pop esi; ret; 
0x0006b604: mov dword ptr [eax + 0x20], ecx; ret; 
0x000ca08d: mov dword ptr [eax + 0x20], edx; pop ebp; ret; 
0x0006bf80: mov dword ptr [eax + 0x24], 0; add esp, 0x1c; ret; 
0x00071ed3: mov dword ptr [eax + 0x24], ecx; pop esi; ret; 
0x00071ea2: mov dword ptr [eax + 0x24], ecx; ret; 
0x0006bf79: mov dword ptr [eax + 0x28], 0; mov dword ptr [eax + 0x24], 0; add esp, 0x1c; ret; 
0x00114795: mov dword ptr [eax + 0x2c], edi; add esp, 0x24; mov eax, edx; pop esi; pop edi; ret; 
0x00080eeb: mov dword ptr [eax + 0x2c], edx; add esp, 0x44; pop esi; pop edi; pop ebp; ret; 
0x00129918: mov dword ptr [eax + 0x4c], edx; ret; 
0x000e5022: mov dword ptr [eax + 0x50], ecx; mov dword ptr [eax + 0x54], edx; xor eax, eax; pop ebx; ret; 
0x000e5025: mov dword ptr [eax + 0x54], edx; xor eax, eax; pop ebx; ret; 
0x00129ead: mov dword ptr [eax + 0x94], edx; add esp, 0x28; pop ebx; ret; 
0x00064d78: mov dword ptr [eax + 0x94], edx; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0xb8], edx; pop ebx; ret; 
0x00071e9f: mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 0x24], ecx; ret; 
0x00033db1: mov dword ptr [eax + 0xc], edx; mov word ptr [eax + 0xe], 1; xor eax, eax; add esp, 8; ret; 
0x0011fc20: mov dword ptr [eax + 0xc], edx; ret; 
0x0006bee6: mov dword ptr [eax + 0xc], edx; xor eax, eax; mov dword ptr [esi], ecx; add esp, 0x18; pop esi; ret; 
0x00071ecd: mov dword ptr [eax + 0xc], esi; mov dword ptr [eax + 4], edx; mov dword ptr [eax + 0x24], ecx; pop esi; ret; 
0x00033db5: mov dword ptr [eax + 0xe], 0xc0310001; add esp, 8; ret; 
0x00033d0f: mov dword ptr [eax + 0xe], 0xc0310001; ret; 
0x00094bfe: mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009177b: mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094a7a: mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091627: mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000d8432: mov dword ptr [eax + 4], 0; add esp, 8; ret; 
0x00041d60: mov dword ptr [eax + 4], 0x7974742f; mov byte ptr [eax + 8], 0; ret; 
0x00055669: mov dword ptr [eax + 4], 1; xor eax, eax; add esp, 0xc; ret; 
0x0011f55a: mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 0x14], edx; pop ebx; ret; 
0x0006b5f9: mov dword ptr [eax + 4], ecx; mov ecx, dword ptr [eax + 8]; mov dword ptr [eax], edx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x001199b3: mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x0011a3d3: mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x00071ed0: mov dword ptr [eax + 4], edx; mov dword ptr [eax + 0x24], ecx; pop esi; ret; 
0x00071e9c: mov dword ptr [eax + 4], edx; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 0x24], ecx; ret; 
0x0006745e: mov dword ptr [eax + 4], edx; mov eax, dword ptr [ebp + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x00091609: mov dword ptr [eax + 4], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0006a055: mov dword ptr [eax + 4], edx; mov edx, dword ptr [eax + 0xc]; mov dword ptr [eax + 0x10], edx; add esp, 0x1c; ret; 
0x000d8a58: mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00094afe: mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009168b: mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000d842b: mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; add esp, 8; ret; 
0x0014b3c9: mov dword ptr [eax + 8], 0; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0008060e: mov dword ptr [eax + 8], ecx; add esp, 0x24; pop esi; pop edi; pop ebp; ret; 
0x00071e96: mov dword ptr [eax + 8], ecx; mov ecx, dword ptr [eax + 0xc]; mov dword ptr [eax + 4], edx; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 0x24], ecx; ret; 
0x000e5e7b: mov dword ptr [eax + 8], ecx; xor eax, eax; pop ebx; ret; 
0x000d8463: mov dword ptr [eax + 8], edx; add esp, 8; ret; 
0x000e64a1: mov dword ptr [eax + 8], edx; mov byte ptr [eax + 0x17], 1; mov byte ptr [eax + 0x16], 0; ret; 
0x0006b601: mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x00071eca: mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0xc], esi; mov dword ptr [eax + 4], edx; mov dword ptr [eax + 0x24], ecx; pop esi; ret; 
0x00032bd6: mov dword ptr [eax + 8], edx; mov dword ptr [eax], 2; xor eax, eax; add esp, 0x18; pop ebx; ret; 
0x00094ae0: mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009166d: mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00115f02: mov dword ptr [eax + 8], edx; ret; 
0x0006b630: mov dword ptr [eax + 8], esi; mov dword ptr [eax], edx; mov dword ptr [eax + 0x20], ecx; pop esi; ret; 
0x00055663: mov dword ptr [eax + 8], esi; mov esi, dword ptr [esp]; mov dword ptr [eax + 4], 1; xor eax, eax; add esp, 0xc; ret; 
0x000283d6: mov dword ptr [eax - 0x75], 0x391483; add byte ptr [ecx - 0x373edbc4], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x0011fc6a: mov dword ptr [eax], 0; add esp, 0x1c; ret; 
0x000fc1d5: mov dword ptr [eax], 0; mov ecx, 0x81; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000eb62f: mov dword ptr [eax], 0x16; add esp, 0x1c; ret; 
0x00032817: mov dword ptr [eax], 0x16; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x000ddfe2: mov dword ptr [eax], 0x16; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x000ddf46: mov dword ptr [eax], 0x16; mov eax, 0xffffffff; add esp, 8; ret; 
0x000e4f82: mov dword ptr [eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x0002ed05: mov dword ptr [eax], 0x16; mov eax, 0xffffffff; ret; 
0x000e4d87: mov dword ptr [eax], 0x16; mov eax, 1; ret; 
0x0002ccdb: mov dword ptr [eax], 0x16; mov ecx, edi; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0002e0e2: mov dword ptr [eax], 0x16; or eax, 0xffffffff; add esp, 8; ret; 
0x0002d48f: mov dword ptr [eax], 0x22; add esp, 0x28; pop ebx; ret; 
0x000e3c31: mov dword ptr [eax], 0x24; mov eax, 1; add esp, 0x1c; ret; 
0x0002ebc2: mov dword ptr [eax], 0x26; mov eax, 0xffffffff; ret; 
0x00041d5a: mov dword ptr [eax], 0x7665642f; mov dword ptr [eax + 4], 0x7974742f; mov byte ptr [eax + 8], 0; ret; 
0x00077337: mov dword ptr [eax], 0xc; xor eax, eax; add esp, 0xc; ret; 
0x0017be95: mov dword ptr [eax], 0xefeebd00; call dword ptr [eax]; 
0x0017be65: mov dword ptr [eax], 0xefeedd00; call dword ptr [eax]; 
0x0011c2ee: mov dword ptr [eax], 0xf; mov eax, dword ptr [ebp + 4]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x000b9091: mov dword ptr [eax], 0xff650000; adc eax, 0x10; ret; 
0x00032bd9: mov dword ptr [eax], 2; xor eax, eax; add esp, 0x18; pop ebx; ret; 
0x00032d8e: mov dword ptr [eax], 4; xor eax, eax; add esp, 0x18; pop ebx; ret; 
0x0002c8b7: mov dword ptr [eax], 9; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x00068137: mov dword ptr [eax], 9; mov eax, 0xffffffff; ret; 
0x000a7163: mov dword ptr [eax], eax; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x0006b90d: mov dword ptr [eax], ecx; add esp, 0x18; mov eax, edx; pop esi; ret; 
0x0011f552: mov dword ptr [eax], ecx; lea ecx, dword ptr [ebx - 0x14f4]; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 0x14], edx; pop ebx; ret; 
0x000915d4: mov dword ptr [eax], ecx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094a78: mov dword ptr [eax], ecx; mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091625: mov dword ptr [eax], ecx; mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094a3b: mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000915f5: mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001199ae: mov dword ptr [eax], ecx; mov ecx, dword ptr [edx + 0x28]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x0011a3ce: mov dword ptr [eax], ecx; mov ecx, dword ptr [edx + 0x30]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x0002d40f: mov dword ptr [eax], ecx; ret; 
0x0007bee9: mov dword ptr [eax], edx; add esp, 0x18; pop ebx; ret; 
0x000a5810: mov dword ptr [eax], edx; add esp, 0x24; mov eax, esi; pop ebx; pop esi; ret; 
0x0006b633: mov dword ptr [eax], edx; mov dword ptr [eax + 0x20], ecx; pop esi; ret; 
0x0006b5ff: mov dword ptr [eax], edx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x00114568: mov dword ptr [eax], edx; mov eax, 1; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00078217: mov dword ptr [eax], edx; mov eax, dword ptr [ecx - 0xc4]; lea edx, dword ptr [ecx - 0x12ba44]; mov dword ptr [eax], edx; ret; 
0x000949f7: mov dword ptr [eax], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000915c4: mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ee9df: mov dword ptr [eax], edx; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00033d5d: mov dword ptr [eax], edx; mov word ptr [eax + 0xe], 1; xor eax, eax; ret; 
0x00026a58: mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x000272cb: mov dword ptr [eax], edx; pop ebx; ret; 
0x001050b1: mov dword ptr [eax], edx; pop esi; ret 4; 
0x00078225: mov dword ptr [eax], edx; ret; 
0x000d89fc: mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000ed7c6: mov dword ptr [eax], esi; add esp, 0x34; mov eax, edx; pop ebx; pop esi; ret; 
0x0006745c: mov dword ptr [eax], esi; mov dword ptr [eax + 4], edx; mov eax, dword ptr [ebp + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x000ce89d: mov dword ptr [eax], esi; mov edi, dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x1c]; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; ret; 
0x0006fbad: mov dword ptr [ebp + 0x50], edi; add esp, 0x20; pop esi; pop edi; pop ebp; ret; 
0x00033e2f: mov dword ptr [ebp + 4], edx; mov ebp, dword ptr [esp + 0x10]; add esp, 0x14; ret; 
0x0005789b: mov dword ptr [ebp - 0x1080], ecx; jmp edx; 
0x00057891: mov dword ptr [ebp - 0x10c8], 1; mov dword ptr [ebp - 0x1080], ecx; jmp edx; 
0x000566bf: mov dword ptr [ebp - 0x10d0], 0x20; jmp edx; 
0x000566b5: mov dword ptr [ebp - 0x10e4], 0; mov dword ptr [ebp - 0x10d0], 0x20; jmp edx; 
0x00056df1: mov dword ptr [ebp - 0x10ec], ecx; mov dword ptr [ebp - 0x1110], eax; jmp edx; 
0x00056df7: mov dword ptr [ebp - 0x1110], eax; jmp edx; 
0x000570da: mov dword ptr [ebp - 0x1120], edx; mov dword ptr [ebp - 0x1124], ecx; mov dword ptr [esp + 8], edi; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x000568c5: mov dword ptr [ebp - 0x1120], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x000570e0: mov dword ptr [ebp - 0x1124], ecx; mov dword ptr [esp + 8], edi; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0017b0d9: mov dword ptr [ebp - 0x11], ecx; jmp dword ptr [edx]; 
0x000b830b: mov dword ptr [ebp - 0x1c], ebx; mov ebx, eax; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x000f16d2: mov dword ptr [ebp - 0x20], eax; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000ecfa9: mov dword ptr [ebp - 0x2c], 0; mov ecx, dword ptr [ebp - 0x30]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000ebc4d: mov dword ptr [ebp - 0x38], ecx; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edx; call dword ptr [ebp + 0x10]; 
0x00110cc5: mov dword ptr [ebp - 0x40], 0xc7660012; inc ebp; ret 0x301; 
0x000a327b: mov dword ptr [ebp - 0x4771f001], 0x89fffffe; ret 0x6ee9; 
0x0004504a: mov dword ptr [ebp - 0x4b8], edi; jmp edx; 
0x0004335b: mov dword ptr [ebp - 0x4f4], eax; mov dword ptr [ebp - 0x54c], ecx; jmp edx; 
0x00045040: mov dword ptr [ebp - 0x510], 1; mov dword ptr [ebp - 0x4b8], edi; jmp edx; 
0x00043348: mov dword ptr [ebp - 0x524], ecx; movzx ecx, byte ptr [ebp - 0x550]; mov dword ptr [ebp - 0x534], edi; mov dword ptr [ebp - 0x4f4], eax; mov dword ptr [ebp - 0x54c], ecx; jmp edx; 
0x00043355: mov dword ptr [ebp - 0x534], edi; mov dword ptr [ebp - 0x4f4], eax; mov dword ptr [ebp - 0x54c], ecx; jmp edx; 
0x00043361: mov dword ptr [ebp - 0x54c], ecx; jmp edx; 
0x00042cb5: mov dword ptr [ebp - 0x57c], edx; call dword ptr [eax + 0x1c]; 
0x00043c8a: mov dword ptr [ebp - 0x57c], edx; mov dword ptr [ebp - 0x580], ecx; call dword ptr [eax + 0x1c]; 
0x00043c90: mov dword ptr [ebp - 0x580], ecx; call dword ptr [eax + 0x1c]; 
0x00038346: mov dword ptr [ebp - 0x5a71f001], 0x89fffffe; ret 0x18e9; 
0x000f1836: mov dword ptr [ebp - 0x60], eax; mov byte ptr [ebp - 0x4d], 0x73; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0001b425: mov dword ptr [ebp - 0x64], eax; call 0x126c80; mov eax, dword ptr [ebp - 0x64]; mov dword ptr [esp], esi; call eax; 
0x00028d0c: mov dword ptr [ebp - 0x78], edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], ecx; call eax; 
0x00024f46: mov dword ptr [ebp - 0x7c], 1; mov ecx, edx; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x00195a49: mov dword ptr [ebp - 0xa], ecx; jmp dword ptr [edx]; 
0x00074024: mov dword ptr [ebx + 0x1954], 0; pop ebx; pop esi; ret; 
0x0007b5ef: mov dword ptr [ebx + 0x1964], 1; add esp, 0x18; pop ebx; ret; 
0x0007af23: mov dword ptr [ebx + 0x1968], 1; add esp, 0x28; pop ebx; ret; 
0x0007d4df: mov dword ptr [ebx + 0x19b0], eax; add esp, 0x18; pop ebx; ret; 
0x0007d941: mov dword ptr [ebx + 0x1a30], edx; add esp, 0x100; pop ebx; ret; 
0x000f1b8f: mov dword ptr [ebx + 0x1cc], esi; mov ebx, dword ptr [esp + 4]; mov esi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000ea0f4: mov dword ptr [ebx + 0x1eec], eax; add esp, 8; pop ebx; ret; 
0x00111e5e: mov dword ptr [ebx + 0x331c], eax; add esp, 8; pop ebx; ret; 
0x0001992f: mov dword ptr [ebx + 0x368c], ecx; mov ebx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x0011fe6e: mov dword ptr [ebx + 0x5e5b10c4], eax; pop edi; pop ebp; ret; 
0x0001908b: mov dword ptr [ebx + 0x96c], eax; mov byte ptr [eax + 0x46], 0xb8; pop ebx; pop esi; ret; 
0x001247ff: mov dword ptr [ebx + 0xee0], edx; add esp, 8; pop ebx; ret; 
0x000e8a3b: mov dword ptr [ebx + 0xf2c], eax; add esp, 0x18; pop ebx; ret; 
0x0010a4eb: mov dword ptr [ebx + 0xf94], eax; add esp, 0x18; pop ebx; ret; 
0x0017faab: mov dword ptr [ebx], 0x40e010d; ret; 
0x0017ef5d: mov dword ptr [ebx], 0x40e0111; ret; 
0x0017f1a3: mov dword ptr [ebx], 0x40e0117; ret; 
0x000ce0f1: mov dword ptr [ecx + 0x10], esi; mov eax, dword ptr [eax + 0x10]; mov dword ptr [edx + 0x10], eax; xor eax, eax; pop esi; ret; 
0x0007352b: mov dword ptr [ecx + 0x189c], 0; mov dword ptr [ecx + 0x18a0], 0; mov dword ptr [ecx + 0x18a4], 0; ret; 
0x00073535: mov dword ptr [ecx + 0x18a0], 0; mov dword ptr [ecx + 0x18a4], 0; ret; 
0x0007353f: mov dword ptr [ecx + 0x18a4], 0; ret; 
0x00078228: mov dword ptr [ecx + 0x190c], 0; ret; 
0x00080ac5: mov dword ptr [ecx + 0x1c], ebp; add esp, 0x44; pop esi; pop edi; pop ebp; ret; 
0x00019342: mov dword ptr [ecx + 0x500], eax; mov dword ptr [ecx + 0x504], edx; pop ebx; ret; 
0x00019348: mov dword ptr [ecx + 0x504], edx; pop ebx; ret; 
0x0002ee4a: mov dword ptr [ecx + 0x54], edx; ret; 
0x0002ee63: mov dword ptr [ecx + 0x58], eax; mov eax, edx; ret; 
0x00064d81: mov dword ptr [ecx + 0xb8], edx; pop ebx; ret; 
0x0018459e: mov dword ptr [ecx + 0xc], 0x41c50404; or eax, dword ptr [ebx]; ret; 
0x00184560: mov dword ptr [ecx + 0xc], 0x41c50404; or ebp, dword ptr [esi + 0xa]; ret; 
0x00195fc0: mov dword ptr [ecx + 0xc], 0x41c50404; or edx, dword ptr [ebp + 0xa]; ret; 
0x00196cc0: mov dword ptr [ecx + 0xc], 0x41c50404; or edx, dword ptr [ecx + 0xa]; ret; 
0x0018832b: mov dword ptr [ecx + 0xc], 0x41c50404; or edx, dword ptr [esi + 0xa]; ret; 
0x0017e1ec: mov dword ptr [ecx + 0xc], 0x43c50404; or ebp, dword ptr [esi + 0xa]; ret; 
0x001759c7: mov dword ptr [ecx + 0xc], 0x43c50404; or ebx, dword ptr [edx + 0xa]; ret; 
0x001887c3: mov dword ptr [ecx + 0xc], 0x43c50404; or edx, dword ptr [eax + 0xa]; ret; 
0x0019a4fc: mov dword ptr [ecx + 0xc], 0x44c50404; or ebx, dword ptr [eax + 0xa]; ret; 
0x00175830: mov dword ptr [ecx + 0xc], 0x44c50404; or ebx, dword ptr [edx + 0xa]; ret; 
0x001984bc: mov dword ptr [ecx + 0xc], 0x47c50404; or eax, dword ptr [esi + 0xa]; ret; 
0x0018c320: mov dword ptr [ecx + 0xc], 0x47c50404; or ebx, dword ptr [ebx + 0xa]; ret; 
0x00179de7: mov dword ptr [ecx + 0xc], 0x48c50404; or ecx, dword ptr [esi + 0xa]; ret; 
0x00187707: mov dword ptr [ecx + 0xc], 0x48c50404; or edx, dword ptr [esi + 0xa]; ret; 
0x0018c464: mov dword ptr [ecx + 0xc], 0x49c50404; or edx, dword ptr [esi + 0xa]; ret; 
0x0003315a: mov dword ptr [ecx + 0xc], edx; add esp, 0x3c; ret 4; 
0x00182881: mov dword ptr [ecx + 0xe], 0x28708; lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [esi + esi + 0x28200001], cl; int1; jmp esi; 
0x001820cd: mov dword ptr [ecx + 0xe], 0xe028308; or al, 0x87; add ebx, dword ptr [esi + ecx + 8]; ret; 
0x00182067: mov dword ptr [ecx + 0xe], 0xe028308; or al, 0x87; add edx, dword ptr [esi + ecx + 8]; ret; 
0x0018291c: mov dword ptr [ecx + 0xe], 0xe028708; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x001828fa: mov dword ptr [ecx + 0xe], 0xe028708; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7204], al; ret; 
0x00087672: mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x00097f27: mov dword ptr [ecx + 4], 0; pop esi; pop edi; pop ebp; ret; 
0x0006a574: mov dword ptr [ecx + 4], edi; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000e98f4: mov dword ptr [ecx + 4], edx; mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x00033063: mov dword ptr [ecx + 4], edx; mov edi, dword ptr [esp + 4]; add esp, 8; ret 4; 
0x00087663: mov dword ptr [ecx + 4], edx; pop ebx; ret; 
0x000876b4: mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x00033155: mov dword ptr [ecx + 8], eax; mov eax, ecx; mov dword ptr [ecx + 0xc], edx; add esp, 0x3c; ret 4; 
0x000e5e14: mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x000876a5: mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x0018c75e: mov dword ptr [ecx - 0x3b], 0x4104040c; or eax, dword ptr [edi + 0xa]; ret; 
0x00185fec: mov dword ptr [ecx - 0x3b], 0x4104040c; or ecx, dword ptr [ebp + 0xa]; ret; 
0x001709cf: mov dword ptr [ecx - 0x3b], 0x4104040c; or esi, dword ptr [esi + 0xa]; ret; 
0x001845be: mov dword ptr [ecx - 0x3b], 0x4104040c; or esp, dword ptr [edi + 0xa]; ret; 
0x0018f218: mov dword ptr [ecx - 0x3b], 0x4504040c; or eax, dword ptr [edx]; mov al, 0xa; ret; 
0x001729c8: mov dword ptr [ecx - 0x3b], 0x4704040c; or ebp, dword ptr [eax + 0xa]; ret; 
0x00024fc2: mov dword ptr [ecx], 0x16; mov ecx, edx; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0016a875: mov dword ptr [ecx], 0xf391b400; jmp dword ptr [eax]; 
0x0007e445: mov dword ptr [ecx], 0xf8892788; pop ebx; pop esi; pop edi; ret; 
0x000d765f: mov dword ptr [ecx], 0xffff24e9; jmp dword ptr [esi - 0x39]; 
0x00187b2d: mov dword ptr [ecx], eax; add al, al; xor al, 0xf3; call dword ptr [esi]; 
0x00187b09: mov dword ptr [ecx], eax; add byte ptr [esp + esi - 0xd], dh; jmp dword ptr [ecx]; 
0x0006ee78: mov dword ptr [ecx], eax; add ecx, 4; mov dword ptr [edx + 0x10], ecx; pop esi; ret; 
0x0007314a: mov dword ptr [ecx], eax; ret; 
0x0006df50: mov dword ptr [ecx], eax; xor eax, eax; add esp, 0x1c; ret; 
0x000eebf4: mov dword ptr [ecx], ebx; int 0x80; 
0x0007da2f: mov dword ptr [ecx], edx; add esp, 0x100; ret; 
0x00110100: mov dword ptr [ecx], edx; add esp, 4; pop esi; pop edi; pop ebp; ret; 
0x00087631: mov dword ptr [ecx], edx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x00087650: mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x00087670: mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x0010fac8: mov dword ptr [ecx], edx; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x00087660: mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x00087621: mov dword ptr [ecx], edx; pop ebx; ret; 
0x0011005a: mov dword ptr [ecx], edx; pop esi; pop edi; ret; 
0x0010fab1: mov dword ptr [ecx], edx; xor eax, eax; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x00110054: mov dword ptr [ecx], esi; mov ecx, dword ptr [esp + 0x20]; mov dword ptr [ecx], edx; pop esi; pop edi; ret; 
0x0006a56f: mov dword ptr [ecx], esi; mov esi, dword ptr [esp]; mov dword ptr [ecx + 4], edi; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0017a1f5: mov dword ptr [ecx], esi; out dx, eax; jmp dword ptr [edx]; 
0x00033890: mov dword ptr [ecx], esi; pop esi; ret; 
0x0008f16d: mov dword ptr [edi + 0x10], ecx; lea eax, dword ptr [edi + 0x12]; pop edi; pop esi; pop ebx; ret; 
0x0008f1ab: mov dword ptr [edi + 0x10], ecx; lea eax, dword ptr [edi + 0x14]; pop edi; pop esi; pop ebx; ret; 
0x0008daee: mov dword ptr [edi + 0x10], ecx; mov byte ptr [edi + 0x14], dl; pop edi; pop esi; pop ebx; ret; 
0x0008da8d: mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x0008dbb5: mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x0008f277: mov dword ptr [edi + 0x18], ecx; lea eax, dword ptr [edi + 0x1a]; pop edi; pop esi; pop ebx; ret; 
0x0008f2c5: mov dword ptr [edi + 0x18], ecx; lea eax, dword ptr [edi + 0x1c]; pop edi; pop esi; pop ebx; ret; 
0x0008db97: mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x00069468: mov dword ptr [edi + 0x18], edx; mov edi, dword ptr [esp + 0x28]; mov dword ptr [esi + 0xc], edx; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; ret; 
0x0018a094: mov dword ptr [edi + 0xb], 0x1000; add byte ptr [esi + ebp*4 - 0x16afffff], bl; hlt; call dword ptr [ecx]; 
0x0008f18b: mov dword ptr [edi + 0xf], ecx; lea eax, dword ptr [edi + 0x13]; pop edi; pop esi; pop ebx; ret; 
0x0008daab: mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x0008f027: mov dword ptr [edi + 3], edx; lea eax, dword ptr [edi + 7]; pop edi; pop esi; pop ebx; ret; 
0x0008d957: mov dword ptr [edi + 3], edx; pop edi; pop esi; pop ebx; ret; 
0x000d86a5: mov dword ptr [edi + 4], eax; xor eax, eax; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0008d949: mov dword ptr [edi + 4], edx; pop edi; pop esi; pop ebx; ret; 
0x0008d9bb: mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x00126da5: mov dword ptr [edi + 8], eax; mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000fc77b: mov dword ptr [edi + 8], eax; mov edi, 2; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000eba28: mov dword ptr [edi + 8], eax; mov edi, dword ptr [esp + 8]; add esp, 0x10; ret; 
0x0008f07d: mov dword ptr [edi + 8], edx; lea eax, dword ptr [edi + 0xa]; pop edi; pop esi; pop ebx; ret; 
0x0008f0bb: mov dword ptr [edi + 8], edx; lea eax, dword ptr [edi + 0xc]; pop edi; pop esi; pop ebx; ret; 
0x0008d99d: mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x000d1953: mov dword ptr [edi + edx*8 + 4], ecx; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0008dcb0: mov dword ptr [edi - 1], edx; pop edi; pop esi; pop ebx; ret; 
0x000d8589: mov dword ptr [edi], 0xc7830000; add al, byte ptr [ebx + 0x37401e2]; mov byte ptr [edi], 0; xor eax, eax; pop edi; ret; 
0x0006c0c6: mov dword ptr [edi], eax; mov dword ptr [esi + 0x30], edi; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0007b29f: mov dword ptr [edi], eax; mov ebx, dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00126fec: mov dword ptr [edi], eax; mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0002fdc8: mov dword ptr [edi], eax; pop eax; pop ebx; pop esi; pop edi; ret; 
0x0002fdd1: mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x0008d917: mov dword ptr [edi], ecx; mov byte ptr [edi + 2], dl; pop edi; pop esi; pop ebx; ret; 
0x0008d935: mov dword ptr [edi], ecx; mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x0008d955: mov dword ptr [edi], ecx; mov dword ptr [edi + 3], edx; pop edi; pop esi; pop ebx; ret; 
0x0008286d: mov dword ptr [edi], ecx; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0008d946: mov dword ptr [edi], ecx; mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x0008efa4: mov dword ptr [edi], edx; lea eax, dword ptr [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x0008efd2: mov dword ptr [edi], edx; lea eax, dword ptr [edi + 4]; pop edi; pop esi; pop ebx; ret; 
0x0008dcd0: mov dword ptr [edi], edx; mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x0008dce0: mov dword ptr [edi], edx; mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x0008d904: mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x000ce0da: mov dword ptr [edx + 0x10], eax; xor eax, eax; pop esi; ret; 
0x0006e2ac: mov dword ptr [edx + 0x10], ecx; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0006eff4: mov dword ptr [edx + 0x10], ecx; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x001141b5: mov dword ptr [edx + 0x10], ecx; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0006ee7d: mov dword ptr [edx + 0x10], ecx; pop esi; ret; 
0x000678b9: mov dword ptr [edx + 0x14], ecx; add esp, 0x18; pop ebx; ret; 
0x0002dc7c: mov dword ptr [edx + 0x14], ecx; mov dword ptr [edx + 0xc], ebp; mov dword ptr [edx + 0x18], eax; ret; 
0x0011f36e: mov dword ptr [edx + 0x14], ecx; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0006aa78: mov dword ptr [edx + 0x14], ecx; ret; 
0x0011f397: mov dword ptr [edx + 0x14], esi; add ecx, eax; mov dword ptr [edx + 0xc], ecx; pop esi; ret; 
0x0002dc82: mov dword ptr [edx + 0x18], eax; ret; 
0x000c3f98: mov dword ptr [edx + 0x20], eax; add esp, 0x24; pop esi; pop edi; pop ebp; ret; 
0x001141fc: mov dword ptr [edx + 0x2c], edi; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x001141f6: mov dword ptr [edx + 0x34], esi; mov esi, dword ptr [esp]; mov dword ptr [edx + 0x2c], edi; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000e4d79: mov dword ptr [edx + 0x3e], eax; xor eax, eax; ret; 
0x0006f437: mov dword ptr [edx + 0xb8], eax; mov ebp, dword ptr [esp + 0x98]; add esp, 0x9c; ret; 
0x000703cd: mov dword ptr [edx + 0xb8], ecx; add esp, 0x1c; ret; 
0x0002dc7f: mov dword ptr [edx + 0xc], ebp; mov dword ptr [edx + 0x18], eax; ret; 
0x0011f39c: mov dword ptr [edx + 0xc], ecx; pop esi; ret; 
0x0013c5bd: mov dword ptr [edx + 1], ecx; movzx eax, byte ptr [eax]; mov byte ptr [edx], al; pop ebx; ret; 
0x0013c4b5: mov dword ptr [edx + 1], ecx; movzx ecx, byte ptr [eax]; mov byte ptr [edx], cl; pop ebx; ret; 
0x0013c535: mov dword ptr [edx + 2], ecx; movzx ecx, word ptr [eax]; mov word ptr [edx], cx; pop ebx; ret; 
0x00089a77: mov dword ptr [edx + 3], eax; lea eax, dword ptr [edx + 6]; pop edi; ret; 
0x00089ba7: mov dword ptr [edx + 3], eax; lea eax, dword ptr [edx + 6]; ret; 
0x00093e3a: mov dword ptr [edx + 3], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x00085697: mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000857c7: mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x000e9906: mov dword ptr [edx + 4], 0; ret; 
0x0010fb07: mov dword ptr [edx + 4], 0x29; mov dword ptr [edx + 8], ecx; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00089a59: mov dword ptr [edx + 4], eax; lea eax, dword ptr [edx + 5]; pop edi; ret; 
0x00089b99: mov dword ptr [edx + 4], eax; lea eax, dword ptr [edx + 5]; ret; 
0x0008e1f8: mov dword ptr [edx + 4], eax; lea eax, dword ptr [edx + 7]; pop edi; ret; 
0x0008e447: mov dword ptr [edx + 4], eax; lea eax, dword ptr [edx + 7]; ret; 
0x0008e2f7: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, dword ptr [edx + 8]; pop edi; ret; 
0x0008e457: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, dword ptr [edx + 8]; ret; 
0x0008ccb7: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x0008ce17: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x0008e477: mov dword ptr [edx + 4], eax; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, dword ptr [edx + 9]; ret; 
0x0008ce37: mov dword ptr [edx + 4], eax; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x0008e357: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; pop edi; ret; 
0x0008e4b7: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; ret; 
0x0008cd17: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x0008ce77: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00093e1c: mov dword ptr [edx + 4], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x00085689: mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x000857b9: mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x00113291: mov dword ptr [edx + 4], eax; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0007adcc: mov dword ptr [edx + 4], eax; pop ebx; ret; 
0x000e98f9: mov dword ptr [edx + 4], eax; ret; 
0x0006aad3: mov dword ptr [edx + 4], ecx; add esp, 0x18; pop ebx; ret; 
0x001131eb: mov dword ptr [edx + 4], ecx; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x00138ff9: mov dword ptr [edx + 4], ecx; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013d609: mov dword ptr [edx + 4], ecx; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x0006aaa2: mov dword ptr [edx + 4], ecx; ret; 
0x00089acb: mov dword ptr [edx + 7], eax; lea eax, dword ptr [edx + 0xa]; pop edi; ret; 
0x00089c0b: mov dword ptr [edx + 7], eax; lea eax, dword ptr [edx + 0xa]; ret; 
0x00093eae: mov dword ptr [edx + 7], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000856eb: mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x0008582b: mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0007adc1: mov dword ptr [edx + 8], eax; add eax, dword ptr [edx + 0xc]; xor eax, 0xfedabeeb; mov dword ptr [edx + 4], eax; pop ebx; ret; 
0x0008c834: mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000899bb: mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; pop edi; ret; 
0x00089c2b: mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; ret; 
0x0008b7db: mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xc]; pop edi; pop ebx; ret; 
0x00089aad: mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 9]; pop edi; ret; 
0x00089bed: mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 9]; ret; 
0x00093e90: mov dword ptr [edx + 8], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000873eb: mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000855fb: mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x00088364: mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x0008580d: mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00113237: mov dword ptr [edx + 8], eax; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0010fb0e: mov dword ptr [edx + 8], ecx; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00097c92: mov dword ptr [edx + 8], ecx; pop esi; pop edi; ret; 
0x000555d7: mov dword ptr [edx + 8], edi; add dword ptr [edx + 4], 1; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000648da: mov dword ptr [edx + 8], edi; add dword ptr [edx + 4], 1; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x30]; 
0x000cb2df: mov dword ptr [edx + eax*4], ebp; mov esi, dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0010b6ff: mov dword ptr [edx + ecx], esi; pop esi; pop edi; pop ebp; ret 4; 
0x00132b89: mov dword ptr [edx - 0x10], eax; mov dword ptr [edx - 0xc], eax; mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x001331df: mov dword ptr [edx - 0xa], eax; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132bcf: mov dword ptr [edx - 0xa], eax; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00132b8c: mov dword ptr [edx - 0xc], eax; mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00132bac: mov dword ptr [edx - 0xd], eax; mov dword ptr [edx - 9], eax; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00132bcc: mov dword ptr [edx - 0xe], eax; mov dword ptr [edx - 0xa], eax; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x001331e6: mov dword ptr [edx - 2], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132bd6: mov dword ptr [edx - 2], eax; pop ebx; ret; 
0x00134f7d: mov dword ptr [edx - 2], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001363fd: mov dword ptr [edx - 2], ecx; mov eax, edx; pop ebx; ret; 
0x0013bf4d: mov dword ptr [edx - 2], ecx; pop ebx; ret; 
0x00133206: mov dword ptr [edx - 3], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132bf6: mov dword ptr [edx - 3], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00135011: mov dword ptr [edx - 3], ecx; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00136491: mov dword ptr [edx - 3], ecx; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x0013bfe1: mov dword ptr [edx - 3], ecx; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001331a2: mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00136329: mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x00132b92: mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00134e45: mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001362d5: mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x0013be25: mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x001331c2: mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132bb2: mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00134e96: mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00136326: mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x0013be76: mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0013beb5: mov dword ptr [edx - 5], ecx; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x001331e2: mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132bd2: mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0013bf45: mov dword ptr [edx - 6], ecx; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x00132bf2: mov dword ptr [edx - 7], eax; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0013319f: mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132b8f: mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0013d369: mov dword ptr [edx - 8], ecx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x001331bf: mov dword ptr [edx - 9], eax; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132baf: mov dword ptr [edx - 9], eax; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x000e9900: mov dword ptr [edx], 0; mov dword ptr [edx + 4], 0; ret; 
0x00040ced: mov dword ptr [edx], 0; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00113248: mov dword ptr [edx], 0; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x00113219: mov dword ptr [edx], 0x10; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0008b915: mov dword ptr [edx], 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x001339b7: mov dword ptr [edx], 0x7402ea83; add cl, byte ptr [eax + 0x448b5f07]; and al, 8; pop ebx; ret; 
0x000d88b9: mov dword ptr [edx], 0x9090bdeb; nop; xor eax, eax; ret; 
0x0019b985: mov dword ptr [edx], 0xf8d31800; jmp dword ptr [eax]; 
0x000d9461: mov dword ptr [edx], eax; add esp, 0x524; mov eax, esi; pop ebx; pop esi; ret; 
0x00089a14: mov dword ptr [edx], eax; lea eax, dword ptr [edx + 1]; pop edi; ret; 
0x00089b54: mov dword ptr [edx], eax; lea eax, dword ptr [edx + 1]; ret; 
0x0008c912: mov dword ptr [edx], eax; lea eax, dword ptr [edx + 3]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00089942: mov dword ptr [edx], eax; lea eax, dword ptr [edx + 3]; pop edi; ret; 
0x00089b72: mov dword ptr [edx], eax; lea eax, dword ptr [edx + 3]; ret; 
0x0008b76f: mov dword ptr [edx], eax; lea eax, dword ptr [edx + 4]; pop edi; pop ebx; ret; 
0x00089a24: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, dword ptr [edx + 2]; pop edi; ret; 
0x00089b64: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, dword ptr [edx + 2]; ret; 
0x00085664: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x00085784: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x00089b82: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, dword ptr [edx + 4]; ret; 
0x000857a2: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x00089b92: mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, dword ptr [edx + 5]; ret; 
0x000857b2: mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x0004c442: mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00089a72: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, dword ptr [edx + 6]; pop edi; ret; 
0x00089ba2: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, dword ptr [edx + 6]; ret; 
0x00085692: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000857c2: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x0008ce02: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x00093db7: mov dword ptr [edx], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x0008737f: mov dword ptr [edx], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x00085582: mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x00088432: mov dword ptr [edx], eax; mov eax, edx; pop ebx; ret; 
0x00085774: mov dword ptr [edx], eax; mov eax, edx; ret; 
0x000ab34c: mov dword ptr [edx], eax; mov eax, esi; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0011fa87: mov dword ptr [edx], eax; mov edx, 1; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x0002e217: mov dword ptr [edx], eax; or eax, 0xffffffff; pop ebx; ret; 
0x000689a4: mov dword ptr [edx], eax; xor eax, eax; add esp, 0x1c; ret; 
0x00033c25: mov dword ptr [edx], eax; xor eax, eax; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00129b94: mov dword ptr [edx], ebp; pop esi; pop edi; pop ebp; ret; 
0x0006e588: mov dword ptr [edx], ecx; add esp, 0x18; pop ebx; ret; 
0x0007f0ea: mov dword ptr [edx], ecx; add esp, 0x18; pop esi; pop edi; pop ebp; ret; 
0x000c51a4: mov dword ptr [edx], ecx; add esp, 0x24; pop ebx; pop esi; ret; 
0x000b5c3e: mov dword ptr [edx], ecx; add esp, 0x28; pop ebx; ret; 
0x00191faf: mov dword ptr [edx], ecx; idiv bh; sbb al, 0xd; out dx, al; add esi, esi; jmp dword ptr [edx]; 
0x000e98f7: mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x00136904: mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x001354d4: mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00129c58: mov dword ptr [edx], ecx; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x0011c5b2: mov dword ptr [edx], ecx; pop ebx; pop esi; pop edi; ret; 
0x000d7738: mov dword ptr [edx], ecx; pop ebx; ret; 
0x0003f948: mov dword ptr [edx], ecx; ret; 
0x0007e900: mov dword ptr [edx], edi; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00129b3c: mov dword ptr [edx], edi; pop esi; pop edi; ret; 
0x000b5697: mov dword ptr [edx], esi; add esp, 0x24; mov eax, ecx; pop ebx; pop esi; ret; 
0x000b5dc7: mov dword ptr [edx], esi; add esp, 0x44; mov eax, ecx; pop ebx; pop esi; ret; 
0x000b4b40: mov dword ptr [edx], esi; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0006a106: mov dword ptr [edx], esi; pop esi; ret; 
0x0012b75a: mov dword ptr [esi + 0x10], eax; mov dword ptr [esp + 8], edx; mov dword ptr [esp + 4], eax; mov dword ptr [esp], esi; call dword ptr [ecx + 0x38]; 
0x0011451d: mov dword ptr [esi + 0x10], eax; mov eax, 1; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x00071f0e: mov dword ptr [esi + 0x10], eax; xor eax, eax; mov dword ptr [esi], edx; add esp, 0x18; pop esi; ret; 
0x000b37ec: mov dword ptr [esi + 0x10], edx; mov esi, dword ptr [esp + 0x98]; add esp, 0x9c; ret; 
0x000d8033: mov dword ptr [esi + 0x14], 0; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0006a08a: mov dword ptr [esi + 0x14], eax; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000e3bff: mov dword ptr [esi + 0x14], eax; xor eax, eax; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00042438: mov dword ptr [esi + 0x14], ecx; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x001098b8: mov dword ptr [esi + 0x18], eax; mov eax, 1; add esp, 0x18; pop esi; ret; 
0x0002dbf7: mov dword ptr [esi + 0x18], eax; mov ebx, dword ptr [esp + 0x14]; xor eax, eax; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000ab49d: mov dword ptr [esi + 0x18], ecx; mov esi, dword ptr [esp + 0x10]; add esp, 0x1c; ret; 
0x0007c01d: mov dword ptr [esi + 0x18], edi; mov dword ptr [esp], eax; call edx; 
0x000f87bb: mov dword ptr [esi + 0x1c], eax; add esp, 0x24; pop ebx; pop esi; ret; 
0x000d1978: mov dword ptr [esi + 0x1c], eax; xor eax, eax; mov esi, dword ptr [esp + 4]; add esp, 0xc; ret; 
0x0007c015: mov dword ptr [esi + 0x1c], edx; mov dword ptr [esi + 0x20], ecx; mov dword ptr [esi], eax; mov dword ptr [esi + 0x18], edi; mov dword ptr [esp], eax; call edx; 
0x000f6746: mov dword ptr [esi + 0x20], eax; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x0007c018: mov dword ptr [esi + 0x20], ecx; mov dword ptr [esi], eax; mov dword ptr [esi + 0x18], edi; mov dword ptr [esp], eax; call edx; 
0x000fab0a: mov dword ptr [esi + 0x20], edx; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00109906: mov dword ptr [esi + 0x28], 0; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00071fa6: mov dword ptr [esi + 0x28], 0; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000cc177: mov dword ptr [esi + 0x28], edi; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00071f9f: mov dword ptr [esi + 0x2c], 0; mov dword ptr [esi + 0x28], 0; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0006c0c8: mov dword ptr [esi + 0x30], edi; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x001142f4: mov dword ptr [esi + 0x34], edx; add esp, 0x18; mov eax, ecx; pop esi; ret; 
0x001186af: mov dword ptr [esi + 0x38], eax; add esp, 0x34; mov eax, edx; pop esi; pop edi; ret; 
0x000ed8b0: mov dword ptr [esi + 0x38], eax; mov eax, dword ptr [esp + 0x1c]; mov esi, dword ptr [esp + 0x30]; add esp, 0x3c; ret; 
0x0012bb0c: mov dword ptr [esi + 0x40], 0xffffffff; xor eax, eax; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0006f2e5: mov dword ptr [esi + 0x4c], eax; mov dword ptr [esi + 0x50], edx; add esp, 0x18; pop esi; ret; 
0x00070256: mov dword ptr [esi + 0x50], 0xffffffff; add esp, 0x14; pop ebx; pop esi; ret; 
0x0006f2e8: mov dword ptr [esi + 0x50], edx; add esp, 0x18; pop esi; ret; 
0x0012b864: mov dword ptr [esi + 0x68], 0xffffffff; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0019b257: mov dword ptr [esi + 0xb], 0x45100e43; ret; 
0x0012e62c: mov dword ptr [esi + 0xc], 0; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011f7b7: mov dword ptr [esi + 0xc], 0; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0007ecf4: mov dword ptr [esi + 0xc], eax; mov esi, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; mov ebp, dword ptr [esp + 0x20]; add esp, 0x24; ret; 
0x00126d35: mov dword ptr [esi + 0xc], eax; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000d1975: mov dword ptr [esi + 0xc], edx; mov dword ptr [esi + 0x1c], eax; xor eax, eax; mov esi, dword ptr [esp + 4]; add esp, 0xc; ret; 
0x000f70b8: mov dword ptr [esi + 0xc], edx; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0006946f: mov dword ptr [esi + 0xc], edx; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; ret; 
0x000b3759: mov dword ptr [esi + 0xc], edx; mov esi, dword ptr [esp + 0x98]; add esp, 0x9c; ret; 
0x001127ca: mov dword ptr [esi + 2], 0x5c8b0000; and al, 0x60; mov esi, dword ptr [esp + 0x64]; mov edi, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x0007c379: mov dword ptr [esi + 4], eax; add esp, 0x10; pop esi; pop edi; pop ebp; ret; 
0x00073208: mov dword ptr [esi + 4], eax; xor eax, eax; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x0002e6e0: mov dword ptr [esi + 4], ecx; add esp, 0x130; pop esi; pop edi; pop ebp; ret; 
0x00072296: mov dword ptr [esi + 4], edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x00072407: mov dword ptr [esi + 4], edx; add esp, 0x18; pop esi; ret; 
0x0002e767: mov dword ptr [esi + 4], edx; add esp, 0x34; pop ebx; pop esi; ret; 
0x000f7018: mov dword ptr [esi + 4], edx; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00072a33: mov dword ptr [esi + 4], edx; movzx eax, byte ptr [eax - 1]; and dword ptr [esi], 0xffffffef; add esp, 0x18; pop esi; ret; 
0x00023912: mov dword ptr [esi + 8], 0; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0006a084: mov dword ptr [esi + 8], eax; mov eax, dword ptr [esi + 0x10]; mov dword ptr [esi + 0x14], eax; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0011b436: mov dword ptr [esi + 8], eax; mov eax, dword ptr [esi]; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x00070328: mov dword ptr [esi + 8], eax; mov eax, esi; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000ca613: mov dword ptr [esi + 8], eax; sbb eax, eax; mov esi, dword ptr [esp + 0x18]; and eax, 0xc; add esp, 0x1c; ret; 
0x000aadba: mov dword ptr [esi + 8], eax; xor eax, eax; add esp, 0x24; pop esi; pop edi; ret; 
0x000b3752: mov dword ptr [esi + 8], edx; mov edx, dword ptr [esp + 0x20]; mov dword ptr [esi + 0xc], edx; mov esi, dword ptr [esp + 0x98]; add esp, 0x9c; ret; 
0x000f7068: mov dword ptr [esi + 8], edx; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000eb60c: mov dword ptr [esi], 0; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000650c4: mov dword ptr [esi], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x001147c6: mov dword ptr [esi], eax; add esp, 0x24; mov eax, edx; pop esi; pop edi; ret; 
0x0011e61c: mov dword ptr [esi], eax; add esp, 0x28; mov eax, 1; pop esi; ret; 
0x0011b7ff: mov dword ptr [esi], eax; add esp, 0x34; mov eax, edx; pop ebx; pop esi; ret; 
0x0007c01b: mov dword ptr [esi], eax; mov dword ptr [esi + 0x18], edi; mov dword ptr [esp], eax; call edx; 
0x0011f403: mov dword ptr [esi], eax; mov eax, 1; mov dword ptr [edx + 0xc], ecx; pop esi; ret; 
0x00112587: mov dword ptr [esi], eax; mov eax, dword ptr [esi + 8]; mov dword ptr [esp], edi; mov dword ptr [esp + 4], eax; call dword ptr [esi + 0xc]; 
0x0007e9e4: mov dword ptr [esi], eax; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; mov ebp, dword ptr [esp + 0x1c]; add esp, 0x20; ret; 
0x00055259: mov dword ptr [esi], ecx; add dword ptr [eax], eax; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x7d]; 
0x0006beeb: mov dword ptr [esi], ecx; add esp, 0x18; pop esi; ret; 
0x001100ab: mov dword ptr [esi], edi; add esp, 4; pop esi; pop edi; pop ebp; ret; 
0x001153d0: mov dword ptr [esi], edi; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00071f13: mov dword ptr [esi], edx; add esp, 0x18; pop esi; ret; 
0x0010f940: mov dword ptr [esi], edx; mov edi, dword ptr [esp + 0x28]; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; ret; 
0x0011cf71: mov dword ptr [esp + 0x10], eax; call 0x11cec0; add esp, 0x98; pop edi; ret; 
0x0011b688: mov dword ptr [esp + 0x10], ecx; mov dword ptr [esp], eax; call dword ptr [edx]; 
0x0006cf4c: mov dword ptr [esp + 0x10], edi; mov edi, dword ptr [esp + 0x3c]; mov dword ptr [esp], edi; call dword ptr [edi + 0xc]; 
0x0011ba75: mov dword ptr [esp + 0x10], edx; lea edx, dword ptr [ebx - 0x84aa4]; mov dword ptr [esp + 8], edx; call dword ptr [eax]; 
0x00066c7d: mov dword ptr [esp + 0x10], edx; mov dword ptr [esp + 0xc], 0; call dword ptr [eax + 0x24]; 
0x001092a6: mov dword ptr [esp + 0x10], edx; mov dword ptr [esp], esi; call eax; 
0x00032eb5: mov dword ptr [esp + 0x14], eax; call ecx; 
0x0002f13e: mov dword ptr [esp + 0x14], eax; xchg edi, ebx; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0007bb4f: mov dword ptr [esp + 0x14], ecx; mov dword ptr [esp + 8], esi; mov dword ptr [esp + 4], edi; mov dword ptr [esp], ebp; call eax; 
0x00026774: mov dword ptr [esp + 0x14], ecx; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0006cf44: mov dword ptr [esp + 0x14], edi; lea edi, dword ptr [esp + 0x5c]; mov dword ptr [esp + 0x10], edi; mov edi, dword ptr [esp + 0x3c]; mov dword ptr [esp], edi; call dword ptr [edi + 0xc]; 
0x000478e9: mov dword ptr [esp + 0x14], edx; mov dword ptr [esp + 4], eax; mov dword ptr [esp], esi; call dword ptr [ecx + 0x1c]; 
0x0011266d: mov dword ptr [esp + 0x14], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x00111998: mov dword ptr [esp + 0x18], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x0005b99c: mov dword ptr [esp + 0x18], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0007b841: mov dword ptr [esp + 0x18], edx; mov dword ptr [esp + 8], esi; mov dword ptr [esp + 4], ecx; call eax; 
0x00074d65: mov dword ptr [esp + 0x18], edx; mov dword ptr [esp], 0; call dword ptr [ecx]; 
0x00074d42: mov dword ptr [esp + 0x18], edx; neg eax; mov dword ptr [esp], eax; call dword ptr [ecx]; 
0x000b308c: mov dword ptr [esp + 0x18], edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], ecx; call eax; 
0x000e79bb: mov dword ptr [esp + 0x1c], 0xcb; mov dword ptr [esp + 0x24], ecx; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000e7a3b: mov dword ptr [esp + 0x1c], 0xcc; mov dword ptr [esp + 0x24], ecx; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000b55db: mov dword ptr [esp + 0x1c], 0xce; mov dword ptr [esp + 0x24], ecx; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000b91d9: mov dword ptr [esp + 0x1c], 0xd6; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0007c06e: mov dword ptr [esp + 0x1c], eax; call dword ptr [edx]; 
0x00074f85: mov dword ptr [esp + 0x1c], eax; call edx; 
0x00112638: mov dword ptr [esp + 0x1c], eax; mov eax, dword ptr [edi + 0x10]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], eax; call dword ptr [edi + 0x14]; 
0x000eeb7f: mov dword ptr [esp + 0x1c], eax; xchg ebx, ecx; mov eax, 0x95; call dword ptr gs:[0x10]; 
0x000b7e2b: mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000e0d04: mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x000f0b7e: mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x000f0dea: mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000c57df: mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000c58bf: mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000e88f4: mov dword ptr [esp + 0x1c], ecx; call 0xb81e0; add esp, 0x2c; ret; 
0x0006ad72: mov dword ptr [esp + 0x1c], ecx; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x1c]; 
0x001127a3: mov dword ptr [esp + 0x1c], ecx; mov dword ptr [esp + 8], edx; mov dword ptr [esp + 4], 5; mov dword ptr [esp], edi; call dword ptr [eax]; 
0x000d95cb: mov dword ptr [esp + 0x1c], edx; call dword ptr [eax + 0x14]; 
0x0011f03e: mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x0011ef56: mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x20]; 
0x0011e6d5: mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x0007b936: mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp + 4], esi; mov dword ptr [esp], ecx; call eax; 
0x0007b3bd: mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp + 8], ecx; lea ecx, dword ptr [edi + 0x19]; mov dword ptr [esp + 4], ecx; call eax; 
0x00114254: mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x0007c29e: mov dword ptr [esp + 0x20], eax; call dword ptr [edx]; 
0x000ff049: mov dword ptr [esp + 0x20], eax; xchg edi, ebx; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x000b9505: mov dword ptr [esp + 0x20], edi; mov dword ptr [esp + 0x24], ecx; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0011cac7: mov dword ptr [esp + 0x20], edx; mov edx, dword ptr [eax + 8]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x000b55e3: mov dword ptr [esp + 0x24], ecx; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0011c9e4: mov dword ptr [esp + 0x24], edx; mov edx, dword ptr [eax + 8]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x000df7a3: mov dword ptr [esp + 0x24], esi; mov edx, dword ptr [esp + 0x24]; xchg ebx, edx; mov eax, 0xb7; call dword ptr gs:[0x10]; 
0x00118cd3: mov dword ptr [esp + 0x28], eax; mov eax, dword ptr [esp + 0x44]; call dword ptr [eax + 0x14]; 
0x00076e25: mov dword ptr [esp + 0x28], edx; call dword ptr [ebp]; 
0x00076d04: mov dword ptr [esp + 0x28], edx; call eax; 
0x0011efec: mov dword ptr [esp + 0x28], edx; lea edx, dword ptr [esp + 0x28]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x0011ef04: mov dword ptr [esp + 0x28], edx; lea edx, dword ptr [esp + 0x28]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x0011e684: mov dword ptr [esp + 0x28], edx; lea edx, dword ptr [esp + 0x28]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x00076e46: mov dword ptr [esp + 0x28], edx; mov dword ptr [esp + 0x2c], ecx; call eax; 
0x00076ce0: mov dword ptr [esp + 0x28], edx; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x00112609: mov dword ptr [esp + 0x2c], 0; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x001127be: mov dword ptr [esp + 0x2c], eax; call dword ptr [edx + 0x10]; 
0x000e709f: mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000e75ff: mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00076e4a: mov dword ptr [esp + 0x2c], ecx; call eax; 
0x00076ce4: mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x00118603: mov dword ptr [esp + 0x2c], edx; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x001185de: mov dword ptr [esp + 0x2c], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x0011d944: mov dword ptr [esp + 0x30], edx; mov dword ptr [esp + 4], 0; call dword ptr [eax + 0x14]; 
0x0011c994: mov dword ptr [esp + 0x30], edx; mov edx, dword ptr [eax + 8]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x001194e7: mov dword ptr [esp + 0x454], edi; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; mov dword ptr [esp + 0x458], ebp; call dword ptr [edx + 8]; 
0x001194f5: mov dword ptr [esp + 0x458], ebp; call dword ptr [edx + 8]; 
0x0006d913: mov dword ptr [esp + 0x48], edx; mov dword ptr [esp], edx; call dword ptr [edx + 0x10]; 
0x00066c81: mov dword ptr [esp + 0xc], 0; call dword ptr [eax + 0x24]; 
0x000726e2: mov dword ptr [esp + 0xc], 0; mov dword ptr [esp], eax; call dword ptr [edx + 0x24]; 
0x0006ffb6: mov dword ptr [esp + 0xc], 0; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x0002d7d5: mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x000e1df9: mov dword ptr [esp + 0xc], eax; mov dword ptr [esp + 4], edx; mov eax, dword ptr [ecx + 0xc]; mov dword ptr [esp], eax; call dword ptr [ecx + 0x24]; 
0x000b5186: mov dword ptr [esp + 0xc], eax; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call edi; 
0x000e013e: mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x000e098e: mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x000f0fab: mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000eec9c: mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x00123d7c: mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0xbc; call dword ptr gs:[0x10]; 
0x00123e3f: mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0xbd; call dword ptr gs:[0x10]; 
0x000e0dc6: mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0xfa; call dword ptr gs:[0x10]; 
0x00099306: mov dword ptr [esp + 0xc], ecx; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edi; call esi; 
0x00066a32: mov dword ptr [esp + 0xc], edi; mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x000c77d9: mov dword ptr [esp + 0xc], edi; mov dword ptr [esp + 8], eax; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [ebp - 0x50]; 
0x0012b1f6: mov dword ptr [esp + 0xc], edx; call dword ptr [eax + 0x40]; 
0x0006ff03: mov dword ptr [esp + 0xc], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x0002da12: mov dword ptr [esp + 0xc], edx; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000a5cd0: mov dword ptr [esp + 0xc], esi; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], edx; call edi; 
0x0011d948: mov dword ptr [esp + 4], 0; call dword ptr [eax + 0x14]; 
0x00032ead: mov dword ptr [esp + 4], 0; mov dword ptr [esp + 0x14], eax; call ecx; 
0x0011b598: mov dword ptr [esp + 4], 0; mov dword ptr [esp], eax; call edx; 
0x0011dc3a: mov dword ptr [esp + 4], 0; mov dword ptr [esp], ebp; call dword ptr [eax + 0x14]; 
0x000416fc: mov dword ptr [esp + 4], 0; mov dword ptr [esp], ecx; call eax; 
0x00111831: mov dword ptr [esp + 4], 0; mov dword ptr [esp], edi; call dword ptr [eax + 0x14]; 
0x00113b9d: mov dword ptr [esp + 4], 0; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x00072dcd: mov dword ptr [esp + 4], 0; mov dword ptr [esp], esi; call dword ptr [eax + 0x2c]; 
0x0006448b: mov dword ptr [esp + 4], 0; mov dword ptr [esp], esi; call dword ptr [eax + 8]; 
0x00113463: mov dword ptr [esp + 4], 0x20; mov dword ptr [esp], edi; call dword ptr [eax + 0x18]; 
0x0011e1bf: mov dword ptr [esp + 4], 0x2260; mov dword ptr [esp], eax; call 0x11ded0; add esp, 0x1c; ret; 
0x0011b48e: mov dword ptr [esp + 4], 0xd; mov dword ptr [esp], eax; call dword ptr [edx + 0x14]; 
0x00112108: mov dword ptr [esp + 4], 1; mov dword ptr [esp], edi; call dword ptr [eax]; 
0x000637e3: mov dword ptr [esp + 4], 1; mov dword ptr [esp], esi; call eax; 
0x00112261: mov dword ptr [esp + 4], 2; mov dword ptr [esp], edi; call dword ptr [eax]; 
0x0011c2d1: mov dword ptr [esp + 4], 3; mov dword ptr [esp], ebp; call dword ptr [eax]; 
0x0011b383: mov dword ptr [esp + 4], 4; mov dword ptr [esp], eax; call dword ptr [edx + 0x14]; 
0x0011232a: mov dword ptr [esp + 4], 4; mov dword ptr [esp], edi; call dword ptr [eax]; 
0x0011c3be: mov dword ptr [esp + 4], 5; call 0x11c1e0; sub esp, 0xc; add esp, 0x1c; ret; 
0x001127ab: mov dword ptr [esp + 4], 5; mov dword ptr [esp], edi; call dword ptr [eax]; 
0x0011b3a1: mov dword ptr [esp + 4], 6; mov dword ptr [esp], eax; call dword ptr [edx + 0x14]; 
0x00113511: mov dword ptr [esp + 4], 8; mov dword ptr [esp], edi; call dword ptr [eax + 0x18]; 
0x00027786: mov dword ptr [esp + 4], eax; call 0x276f0; add esp, 0x1c; ret; 
0x00028e82: mov dword ptr [esp + 4], eax; call 0x28dc0; add esp, 0x28; pop ebx; ret; 
0x001197e4: mov dword ptr [esp + 4], eax; call 0x63810; add esp, 0x18; pop ebx; ret; 
0x000ec6ab: mov dword ptr [esp + 4], eax; call 0x63810; add esp, 0x418; pop ebx; ret; 
0x00098975: mov dword ptr [esp + 4], eax; call 0x98990; add esp, 0x18; pop ebx; ret; 
0x000b3dc6: mov dword ptr [esp + 4], eax; call 0xb46f0; add esp, 0x2c; ret; 
0x000b4346: mov dword ptr [esp + 4], eax; call 0xb48f0; add esp, 0x2c; ret; 
0x000b7d8e: mov dword ptr [esp + 4], eax; call 0xb7da0; add esp, 0x1c; ret; 
0x000715b9: mov dword ptr [esp + 4], eax; call 0xdde60; add esp, 0x1c; ret; 
0x000ddb81: mov dword ptr [esp + 4], eax; call 0xddee0; add esp, 0x2c; ret; 
0x000ddbc9: mov dword ptr [esp + 4], eax; call 0xddf70; add esp, 0x3c; ret; 
0x0006d6da: mov dword ptr [esp + 4], eax; call dword ptr [ebp + 0x18]; 
0x0006dcc1: mov dword ptr [esp + 4], eax; call dword ptr [ecx + 0x18]; 
0x00042462: mov dword ptr [esp + 4], eax; call dword ptr [ecx + 0x1c]; 
0x00112642: mov dword ptr [esp + 4], eax; call dword ptr [edi + 0x14]; 
0x0006ccc1: mov dword ptr [esp + 4], eax; call dword ptr [edx + 4]; 
0x00112fce: mov dword ptr [esp + 4], eax; call dword ptr [esi + 0x14]; 
0x0011258f: mov dword ptr [esp + 4], eax; call dword ptr [esi + 0xc]; 
0x0001f4ac: mov dword ptr [esp + 4], eax; call dword ptr [esi]; 
0x001117d4: mov dword ptr [esp + 4], eax; call dword ptr [esp + 0x24]; add esp, 0x18; pop ebx; ret; 
0x000194a4: mov dword ptr [esp + 4], eax; call esi; 
0x0002d545: mov dword ptr [esp + 4], eax; fld dword ptr [esp + 4]; ret; 
0x000311c2: mov dword ptr [esp + 4], eax; fld xword ptr [esp]; add esp, 0x10; ret; 
0x00103838: mov dword ptr [esp + 4], eax; lea eax, dword ptr [ebx - 0x9f8b4]; mov dword ptr [esp], eax; call edx; 
0x00070280: mov dword ptr [esp + 4], eax; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; call dword ptr [edx + 0x40]; 
0x0006d0b5: mov dword ptr [esp + 4], eax; mov dword ptr [esp + 8], edx; call dword ptr [edi + 0xc]; 
0x000679c1: mov dword ptr [esp + 4], eax; mov dword ptr [esp], ebp; call edi; 
0x00113362: mov dword ptr [esp + 4], eax; mov dword ptr [esp], edi; call dword ptr [edx + 0x18]; 
0x00098f68: mov dword ptr [esp + 4], eax; mov dword ptr [esp], edi; call esi; 
0x0006cb82: mov dword ptr [esp + 4], eax; mov dword ptr [esp], edi; mov dword ptr [esp + 8], edx; call dword ptr [edi + 0xc]; 
0x00099696: mov dword ptr [esp + 4], eax; mov dword ptr [esp], edi; mov dword ptr [esp + 8], edx; call esi; 
0x000ebc50: mov dword ptr [esp + 4], eax; mov dword ptr [esp], edx; call dword ptr [ebp + 0x10]; 
0x000bb80a: mov dword ptr [esp + 4], eax; mov dword ptr [esp], edx; call edi; 
0x000478ed: mov dword ptr [esp + 4], eax; mov dword ptr [esp], esi; call dword ptr [ecx + 0x1c]; 
0x000bba23: mov dword ptr [esp + 4], eax; mov dword ptr [esp], esi; call dword ptr [ecx + 0x20]; 
0x0012b761: mov dword ptr [esp + 4], eax; mov dword ptr [esp], esi; call dword ptr [ecx + 0x38]; 
0x0006bfb6: mov dword ptr [esp + 4], eax; mov dword ptr [esp], esi; call dword ptr [edx + 0x18]; 
0x000711db: mov dword ptr [esp + 4], eax; mov dword ptr [esp], esi; sub edx, eax; mov dword ptr [esp + 8], edx; call dword ptr [ecx + 0x38]; 
0x000bd41c: mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebp - 0x134]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x000c019c: mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebp - 0x144]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x00017778: mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebp - 0x7c]; mov dword ptr [esp], eax; mov eax, dword ptr [ebp + 0xc]; call dword ptr [eax]; 
0x00098724: mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; call esi; 
0x00124d0e: mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 8]; 
0x000d95af: mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebx + 0xee0]; mov dword ptr [esp], ebp; call dword ptr [eax + 0xc]; 
0x0007c328: mov dword ptr [esp + 4], eax; mov eax, dword ptr [esi + 0x24]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x000bd171: mov dword ptr [esp + 4], eax; mov eax, dword ptr [esi + 4]; mov eax, dword ptr [eax + edi]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x001144e8: mov dword ptr [esp + 4], eax; mov eax, dword ptr [esi]; mov dword ptr [esp + 8], edi; mov dword ptr [esp], eax; call dword ptr [esi + 8]; 
0x000faafa: mov dword ptr [esp + 4], eax; mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call edx; 
0x00124db6: mov dword ptr [esp + 4], eax; mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 0xc]; 
0x00124a42: mov dword ptr [esp + 4], eax; mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 4]; 
0x0001e1f4: mov dword ptr [esp + 4], ebp; mov dword ptr [esp + 8], eax; mov eax, dword ptr [edi + 0xc]; mov dword ptr [esp], eax; call dword ptr [edi + 4]; 
0x0001cdc9: mov dword ptr [esp + 4], ebp; mov dword ptr [esp + 8], eax; mov eax, dword ptr [esi + 0xc]; mov dword ptr [esp], eax; call dword ptr [esi + 4]; 
0x00079531: mov dword ptr [esp + 4], ebp; mov dword ptr [esp + 8], edx; call eax; 
0x00116497: mov dword ptr [esp + 4], ebp; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x001134e6: mov dword ptr [esp + 4], ebp; mov dword ptr [esp], edi; call dword ptr [eax + 0x18]; 
0x001185c3: mov dword ptr [esp + 4], ebp; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x000317cc: mov dword ptr [esp + 4], ebp; mov dword ptr [esp], edi; mov dword ptr [esp + 8], edx; call esi; 
0x000a5cd4: mov dword ptr [esp + 4], ebp; mov dword ptr [esp], edx; call edi; 
0x0006526b: mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x00066e72: mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; call dword ptr [eax + 0x2c]; 
0x0007167a: mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; call dword ptr [edx + 0x38]; 
0x00031680: mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; mov dword ptr [esp + 8], ecx; call edi; 
0x0006ceb6: mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; sub eax, ebp; mov dword ptr [esp + 8], eax; call dword ptr [edx + 0x38]; 
0x0007c197: mov dword ptr [esp + 4], ebp; mov eax, dword ptr [esi + 0x24]; mov dword ptr [esp], eax; call dword ptr [esi + 0x1c]; 
0x00114965: mov dword ptr [esp + 4], ebp; mov eax, dword ptr [esi]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x0002dd55: mov dword ptr [esp + 4], ebp; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0011385d: mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x18]; 
0x00042a20: mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x1c]; 
0x00126f39: mov dword ptr [esp + 4], ecx; call dword ptr [eax + 4]; 
0x00072511: mov dword ptr [esp + 4], ecx; call dword ptr [edx + 0x20]; 
0x00072511: mov dword ptr [esp + 4], ecx; call dword ptr [edx + 0x20]; add esp, 0x1c; ret; 
0x00111d46: mov dword ptr [esp + 4], ecx; call dword ptr [edx]; 
0x0007b01f: mov dword ptr [esp + 4], ecx; call eax; 
0x000319db: mov dword ptr [esp + 4], ecx; call edi; 
0x000f831b: mov dword ptr [esp + 4], ecx; call edx; 
0x00111994: mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x18], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x0006f9e6: mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 8], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x0007a7b0: mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 8], esi; call eax; 
0x00129e2a: mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 8], esi; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x0011f0bb: mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0x20]; 
0x0011f0bb: mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0x20]; add esp, 0x1c; ret; 
0x0011f0a3: mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0x24]; 
0x0011f0a3: mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0x24]; add esp, 0x1c; ret; 
0x0011c99b: mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x0011c99b: mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; add esp, 0x4c; ret; 
0x001140c3: mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x001140c3: mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 4]; add esp, 0x1c; ret; 
0x001140db: mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx]; 
0x001140db: mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx]; add esp, 0x1c; ret; 
0x001194ee: mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; mov dword ptr [esp + 0x458], ebp; call dword ptr [edx + 8]; 
0x0011f042: mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x001185e2: mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x0011a78b: mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edx; call dword ptr [ebp + 0x10]; 
0x0001e836: mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edx; mov dword ptr [esp + 8], eax; call dword ptr [ebp]; 
0x00112671: mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x000729f7: mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x18]; 
0x000568cb: mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0011ef5a: mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x20]; 
0x0011ea5c: mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0xc]; 
0x0011eaaf: mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 8]; 
0x0011e6d9: mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x000c77e1: mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [ebp - 0x50]; 
0x00048e73: mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call eax; 
0x00042cae: mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; mov dword ptr [ebp - 0x57c], edx; call dword ptr [eax + 0x1c]; 
0x0001ec43: mov dword ptr [esp + 4], ecx; mov ecx, dword ptr [esp + 0x80]; mov dword ptr [esp + 8], eax; mov dword ptr [esp], ecx; call dword ptr [esi]; 
0x00064ecd: mov dword ptr [esp + 4], ecx; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x00033011: mov dword ptr [esp + 4], ecx; sbb dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 4]; add esp, 0x14; ret; 
0x00042fd0: mov dword ptr [esp + 4], ecx; sub edx, ecx; mov dword ptr [esp + 8], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0001e634: mov dword ptr [esp + 4], edi; mov dword ptr [esp + 8], eax; mov eax, dword ptr [ebp + 0xc]; mov dword ptr [esp], eax; call dword ptr [ebp + 4]; 
0x0006d63c: mov dword ptr [esp + 4], edi; mov dword ptr [esp + 8], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x40]; 
0x00109297: mov dword ptr [esp + 4], edi; mov dword ptr [esp + 8], esi; mov esi, dword ptr [esp + 0x470]; mov dword ptr [esp + 0x10], edx; mov dword ptr [esp], esi; call eax; 
0x00111891: mov dword ptr [esp + 4], edi; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x0011acb2: mov dword ptr [esp + 4], edi; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x0011b5e9: mov dword ptr [esp + 4], edi; mov dword ptr [esp], eax; call edx; 
0x0007bb57: mov dword ptr [esp + 4], edi; mov dword ptr [esp], ebp; call eax; 
0x0006aeda: mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0006fa5a: mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; call dword ptr [eax + 0x3c]; 
0x00114143: mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x00114172: mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x0007ba4b: mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; call eax; 
0x0004411c: mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; mov dword ptr [ebp - 0x57c], edx; call dword ptr [eax + 0x1c]; 
0x0012af17: mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; mov dword ptr [esp + 8], edx; call dword ptr [eax + 0x3c]; 
0x00032afb: mov dword ptr [esp + 4], edi; mov edx, dword ptr [ecx + 8]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0007d716: mov dword ptr [esp + 4], edi; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0002dadb: mov dword ptr [esp + 4], edx; add esp, 0x10; and eax, 0x8000; ret; 
0x0002df00: mov dword ptr [esp + 4], edx; call 0x2e1a0; add esp, 0x18; pop ebx; ret; 
0x00102eab: mov dword ptr [esp + 4], edx; call 0xb90d0; add esp, 0x18; pop ebx; ret; 
0x0014a56c: mov dword ptr [esp + 4], edx; call 0xeb160; add esp, 0x18; pop ebx; ret; 
0x00042612: mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x0006f5e9: mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x20]; 
0x0006f5e9: mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x20]; add esp, 0x18; pop esi; ret; 
0x0006704c: mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x2c]; 
0x0006f2da: mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x40]; 
0x0006b963: mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x000b4e82: mov dword ptr [esp + 4], edx; call dword ptr [ebp - 0x34]; 
0x00127394: mov dword ptr [esp + 4], edx; call dword ptr [ebp - 0x7c]; 
0x00032aec: mov dword ptr [esp + 4], edx; call eax; 
0x00031168: mov dword ptr [esp + 4], edx; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0001a663: mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x1c]; mov dword ptr [esp], edx; call eax; 
0x0005d6f5: mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x34]; mov dword ptr [esp + 8], edi; mov dword ptr [esp], edx; call eax; 
0x0005670a: mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x5c]; mov dword ptr [esp], edx; call eax; 
0x0004e38a: mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x64]; mov dword ptr [esp], edx; call eax; 
0x000428b2: mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x70]; mov dword ptr [esp], edx; call eax; 
0x0007b124: mov dword ptr [esp + 4], edx; lea edx, dword ptr [edi + 0x19]; mov dword ptr [esp], edx; call eax; 
0x000479a2: mov dword ptr [esp + 4], edx; lea edx, dword ptr [esp + 0x20d0]; mov dword ptr [esp], edx; call eax; 
0x0005ba5a: mov dword ptr [esp + 4], edx; lea edx, dword ptr [esp + 0x8190]; mov dword ptr [esp], edx; call eax; 
0x00114250: mov dword ptr [esp + 4], edx; mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x00070000: mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], eax; mov dword ptr [esp], ebp; call ecx; 
0x0006fad6: mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], eax; mov dword ptr [esp], esi; call dword ptr [ecx + 0x40]; 
0x000e1906: mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], eax; mov eax, dword ptr [esi + 0xc]; mov dword ptr [esp], eax; call dword ptr [esi + 0x24]; 
0x0012b2a2: mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], ecx; call dword ptr [eax + 0x40]; 
0x0006d8fb: mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x00066a36: mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x000562fb: mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], esi; mov dword ptr [esp], ecx; call dword ptr [eax + 0x1c]; 
0x000e229e: mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call dword ptr [ebp - 0x28]; 
0x00126ecc: mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call dword ptr [esi]; 
0x00115f2d: mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x000b518e: mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call edi; 
0x000c8bbc: mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call esi; 
0x00118a9b: mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; mov dword ptr [esp + 8], esi; call dword ptr [ecx + 0xc]; 
0x0006ad76: mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x1c]; 
0x0006db97: mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x48]; 
0x0011c34c: mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 8]; 
0x0011a750: mov dword ptr [esp + 4], edx; mov dword ptr [esp], ecx; call dword ptr [eax + 4]; 
0x0002155d: mov dword ptr [esp + 4], edx; mov dword ptr [esp], ecx; mov dword ptr [esp + 8], eax; call dword ptr [edi]; 
0x001110db: mov dword ptr [esp + 4], edx; mov dword ptr [esp], ecx; mov dword ptr [esp + 8], esi; call dword ptr [eax + 0xc]; 
0x0011f027: mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x0011eff4: mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x000724a7: mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0xc]; 
0x00111873: mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 4]; 
0x0011269a: mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x00043cd4: mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0011ef3f: mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x20]; 
0x0011ef0c: mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x00064294: mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x48]; 
0x0011cdec: mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0xc]; 
0x0011412e: mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x0011ead4: mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 8]; 
0x0011415e: mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x0001f9c9: mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; mov dword ptr [esp + 8], eax; call dword ptr [ebp]; 
0x00098ca8: mov dword ptr [esp + 4], edx; mov eax, dword ptr [eax + 8]; mov dword ptr [esp], eax; call edi; 
0x000988ab: mov dword ptr [esp + 4], edx; mov eax, dword ptr [eax + 8]; mov dword ptr [esp], eax; call esi; 
0x000e1dfd: mov dword ptr [esp + 4], edx; mov eax, dword ptr [ecx + 0xc]; mov dword ptr [esp], eax; call dword ptr [ecx + 0x24]; 
0x0007c2ad: mov dword ptr [esp + 4], edx; mov eax, dword ptr [esi + 0x24]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x0002d65b: mov dword ptr [esp + 4], edx; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0011a72e: mov dword ptr [esp + 4], edx; mov edx, dword ptr [ebp - 0xbc]; mov dword ptr [esp], edx; call dword ptr [eax + 0x14]; 
0x00064f15: mov dword ptr [esp + 4], edx; mov edx, dword ptr [esi + 0x98]; mov dword ptr [esp], edx; call eax; 
0x0007a102: mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp], edx; call eax; 
0x00126ca9: mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x1c]; mov eax, dword ptr [eax + 0x1a0]; mov dword ptr [esp], edx; call eax; 
0x000fb892: mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x20]; mov dword ptr [esp], edx; call eax; 
0x00113e4f: mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x22a4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x00113cfa: mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x22a4]; mov dword ptr [esp], edx; call dword ptr [eax + 8]; 
0x000a5eb3: mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x2c]; mov dword ptr [esp], edx; call edi; 
0x00019858: mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x30]; mov dword ptr [esp], edx; call eax; 
0x00114b70: mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x60]; mov dword ptr [esp], edx; call eax; 
0x000413ae: mov dword ptr [esp + 4], edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], 1; call eax; 
0x000ce673: mov dword ptr [esp + 4], esi; call 0xce4d0; add esp, 0x28; pop esi; ret; 
0x0011b684: mov dword ptr [esp + 4], esi; mov dword ptr [esp + 0x10], ecx; mov dword ptr [esp], eax; call dword ptr [edx]; 
0x0001d2d9: mov dword ptr [esp + 4], esi; mov dword ptr [esp + 8], eax; mov eax, dword ptr [ebp + 0xc]; mov dword ptr [esp], eax; call dword ptr [ebp + 4]; 
0x00031660: mov dword ptr [esp + 4], esi; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], edx; call edi; 
0x00031625: mov dword ptr [esp + 4], esi; mov dword ptr [esp + 8], ecx; mov ecx, dword ptr [esp + 0x30]; mov dword ptr [esp], ecx; call edi; 
0x0006fefb: mov dword ptr [esp + 4], esi; mov dword ptr [esp + 8], edi; mov dword ptr [esp + 0xc], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x00070452: mov dword ptr [esp + 4], esi; mov dword ptr [esp + 8], edi; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x0012b1eb: mov dword ptr [esp + 4], esi; mov dword ptr [esp + 8], edi; mov dword ptr [esp], ebp; mov dword ptr [esp + 0xc], edx; call dword ptr [eax + 0x40]; 
0x0011e5eb: mov dword ptr [esp + 4], esi; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x0011e5eb: mov dword ptr [esp + 4], esi; mov dword ptr [esp], eax; call dword ptr [edx + 4]; add esp, 0x28; pop esi; ret; 
0x000f7e11: mov dword ptr [esp + 4], esi; mov dword ptr [esp], ebp; mov dword ptr [esp + 8], eax; call dword ptr [edi + 0x14]; 
0x0011e58b: mov dword ptr [esp + 4], esi; mov dword ptr [esp], ecx; call dword ptr [eax + 4]; 
0x0011e58b: mov dword ptr [esp + 4], esi; mov dword ptr [esp], ecx; call dword ptr [eax + 4]; add esp, 0x18; pop esi; ret; 
0x0011e5a3: mov dword ptr [esp + 4], esi; mov dword ptr [esp], ecx; call dword ptr [eax]; 
0x0007b93a: mov dword ptr [esp + 4], esi; mov dword ptr [esp], ecx; call eax; 
0x0011ce07: mov dword ptr [esp + 4], esi; mov dword ptr [esp], edx; call dword ptr [eax + 0xc]; 
0x00098671: mov dword ptr [esp + 4], esi; mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; call edi; 
0x000fab64: mov dword ptr [esp + 4], esi; mov edx, dword ptr [esi + 0x30]; mov dword ptr [esp], edx; call eax; 
0x0006db1e: mov dword ptr [esp + 4], esi; mov esi, 0xffffffff; mov dword ptr [esp + 8], edi; mov edi, 0xffffffff; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x00067e36: mov dword ptr [esp + 8], 0; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x00066266: mov dword ptr [esp + 8], 0; mov dword ptr [esp], edx; call eax; 
0x00070b0b: mov dword ptr [esp + 8], 0; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x0001e83d: mov dword ptr [esp + 8], eax; call dword ptr [ebp]; 
0x000f7e18: mov dword ptr [esp + 8], eax; call dword ptr [edi + 0x14]; 
0x00021564: mov dword ptr [esp + 8], eax; call dword ptr [edi]; 
0x0006cebf: mov dword ptr [esp + 8], eax; call dword ptr [edx + 0x38]; 
0x0002d285: mov dword ptr [esp + 8], eax; fld qword ptr [esp + 4]; ret; 
0x0012738a: mov dword ptr [esp + 8], eax; lea eax, dword ptr [ebp - 0x44]; mov dword ptr [esp], eax; mov dword ptr [esp + 4], edx; call dword ptr [ebp - 0x7c]; 
0x000679ba: mov dword ptr [esp + 8], eax; lea eax, dword ptr [esi + 0x28]; mov dword ptr [esp + 4], eax; mov dword ptr [esp], ebp; call edi; 
0x00067b6a: mov dword ptr [esp + 8], eax; lea eax, dword ptr [esi + 0x54]; mov dword ptr [esp + 4], eax; mov dword ptr [esp], ebp; call edi; 
0x00071676: mov dword ptr [esp + 8], eax; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; call dword ptr [edx + 0x38]; 
0x00114961: mov dword ptr [esp + 8], eax; mov dword ptr [esp + 4], ebp; mov eax, dword ptr [esi]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x000c77dd: mov dword ptr [esp + 8], eax; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [ebp - 0x50]; 
0x00070004: mov dword ptr [esp + 8], eax; mov dword ptr [esp], ebp; call ecx; 
0x0001ec4e: mov dword ptr [esp + 8], eax; mov dword ptr [esp], ecx; call dword ptr [esi]; 
0x000990f8: mov dword ptr [esp + 8], eax; mov dword ptr [esp], edi; call esi; 
0x0002196a: mov dword ptr [esp + 8], eax; mov dword ptr [esp], edx; call dword ptr [ebp]; 
0x0001f66d: mov dword ptr [esp + 8], eax; mov dword ptr [esp], edx; call dword ptr [esi]; 
0x0006fada: mov dword ptr [esp + 8], eax; mov dword ptr [esp], esi; call dword ptr [ecx + 0x40]; 
0x0001d2dd: mov dword ptr [esp + 8], eax; mov eax, dword ptr [ebp + 0xc]; mov dword ptr [esp], eax; call dword ptr [ebp + 4]; 
0x0001e1f8: mov dword ptr [esp + 8], eax; mov eax, dword ptr [edi + 0xc]; mov dword ptr [esp], eax; call dword ptr [edi + 4]; 
0x000e190a: mov dword ptr [esp + 8], eax; mov eax, dword ptr [esi + 0xc]; mov dword ptr [esp], eax; call dword ptr [esi + 0x24]; 
0x0001cdcd: mov dword ptr [esp + 8], eax; mov eax, dword ptr [esi + 0xc]; mov dword ptr [esp], eax; call dword ptr [esi + 4]; 
0x0001949c: mov dword ptr [esp + 8], eax; mov eax, dword ptr [esp + 0x78]; mov dword ptr [esp + 4], eax; call esi; 
0x0001f4a1: mov dword ptr [esp + 8], eax; mov eax, dword ptr [esp + 0xa4]; mov dword ptr [esp + 4], eax; call dword ptr [esi]; 
0x0004245e: mov dword ptr [esp + 8], ebp; mov dword ptr [esp + 4], eax; call dword ptr [ecx + 0x1c]; 
0x0006aed6: mov dword ptr [esp + 8], ebp; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0011b680: mov dword ptr [esp + 8], ebp; mov dword ptr [esp + 4], esi; mov dword ptr [esp + 0x10], ecx; mov dword ptr [esp], eax; call dword ptr [edx]; 
0x0006687f: mov dword ptr [esp + 8], ebp; mov dword ptr [esp], edx; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x1c]; 
0x00066c76: mov dword ptr [esp + 8], ebp; mov dword ptr [esp], esi; mov dword ptr [esp + 0x10], edx; mov dword ptr [esp + 0xc], 0; call dword ptr [eax + 0x24]; 
0x0012b2a6: mov dword ptr [esp + 8], ecx; call dword ptr [eax + 0x40]; 
0x000c8050: mov dword ptr [esp + 8], ecx; call dword ptr [ebp - 0x78]; 
0x00031687: mov dword ptr [esp + 8], ecx; call edi; 
0x000b4e78: mov dword ptr [esp + 8], ecx; lea ecx, dword ptr [ebp - 0x28]; mov dword ptr [esp], ecx; mov dword ptr [esp + 4], edx; call dword ptr [ebp - 0x34]; 
0x0007b3c1: mov dword ptr [esp + 8], ecx; lea ecx, dword ptr [edi + 0x19]; mov dword ptr [esp + 4], ecx; call eax; 
0x0007b017: mov dword ptr [esp + 8], ecx; lea ecx, dword ptr [edi + ebp + 1]; mov dword ptr [esp + 4], ecx; call eax; 
0x0006ad6e: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 0x1c], ecx; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x1c]; 
0x0011b48a: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], 0xd; mov dword ptr [esp], eax; call dword ptr [edx + 0x14]; 
0x0011b39d: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], 6; mov dword ptr [esp], eax; call dword ptr [edx + 0x14]; 
0x0006d8ff: mov dword ptr [esp + 8], ecx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x00067c4e: mov dword ptr [esp + 8], ecx; mov dword ptr [esp], edx; call eax; 
0x00031664: mov dword ptr [esp + 8], ecx; mov dword ptr [esp], edx; call edi; 
0x00066a3a: mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x00070284: mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; call dword ptr [edx + 0x40]; 
0x0006f2d3: mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x40]; 
0x00111d3f: mov dword ptr [esp + 8], ecx; mov ecx, dword ptr [ebp + 0x14]; mov dword ptr [esp + 4], ecx; call dword ptr [edx]; 
0x000f8313: mov dword ptr [esp + 8], ecx; mov ecx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 4], ecx; call edx; 
0x00072506: mov dword ptr [esp + 8], ecx; mov ecx, dword ptr [esp + 0x24]; mov dword ptr [esp], eax; mov dword ptr [esp + 4], ecx; call dword ptr [edx + 0x20]; 
0x000319d3: mov dword ptr [esp + 8], ecx; mov ecx, dword ptr [esp + 0x2c]; mov dword ptr [esp + 4], ecx; call edi; 
0x00031629: mov dword ptr [esp + 8], ecx; mov ecx, dword ptr [esp + 0x30]; mov dword ptr [esp], ecx; call edi; 
0x000eeff2: mov dword ptr [esp + 8], edi; call 0x129d73; add ebx, 0xb3ff9; xchg ebx, edx; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0006feff: mov dword ptr [esp + 8], edi; mov dword ptr [esp + 0xc], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x00098720: mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; call esi; 
0x00065267: mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x00066e6e: mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; call dword ptr [eax + 0x2c]; 
0x00048e6f: mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call eax; 
0x00043cd0: mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0011eae9: mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0xc]; 
0x0011ead0: mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 8]; 
0x00064f11: mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esi + 0x98]; mov dword ptr [esp], edx; call eax; 
0x001144ee: mov dword ptr [esp + 8], edi; mov dword ptr [esp], eax; call dword ptr [esi + 8]; 
0x00070456: mov dword ptr [esp + 8], edi; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x0012b1ef: mov dword ptr [esp + 8], edi; mov dword ptr [esp], ebp; mov dword ptr [esp + 0xc], edx; call dword ptr [eax + 0x40]; 
0x0005d6fc: mov dword ptr [esp + 8], edi; mov dword ptr [esp], edx; call eax; 
0x000570e6: mov dword ptr [esp + 8], edi; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x00043c83: mov dword ptr [esp + 8], edi; mov dword ptr [esp], esi; mov dword ptr [ebp - 0x57c], edx; mov dword ptr [ebp - 0x580], ecx; call dword ptr [eax + 0x1c]; 
0x0006588a: mov dword ptr [esp + 8], edi; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x00042a13: mov dword ptr [esp + 8], edi; mov ecx, dword ptr [ebp - 0x49c]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x1c]; 
0x0006db27: mov dword ptr [esp + 8], edi; mov edi, 0xffffffff; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x00042b36: mov dword ptr [esp + 8], edi; mov edx, dword ptr [ebp - 0x4ac]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x0010e2a7: mov dword ptr [esp + 8], edx; call 0x10d6a0; add esp, 0x2c; ret; 
0x00033bc2: mov dword ptr [esp + 8], edx; call 0x33be0; add esp, 0x18; pop ebx; ret; 
0x00033c62: mov dword ptr [esp + 8], edx; call 0x33c80; add esp, 0x18; pop ebx; ret; 
0x0012af1e: mov dword ptr [esp + 8], edx; call dword ptr [eax + 0x3c]; 
0x0011ba7f: mov dword ptr [esp + 8], edx; call dword ptr [eax]; 
0x000711e4: mov dword ptr [esp + 8], edx; call dword ptr [ecx + 0x38]; 
0x0006cb89: mov dword ptr [esp + 8], edx; call dword ptr [edi + 0xc]; 
0x00079535: mov dword ptr [esp + 8], edx; call eax; 
0x000317d3: mov dword ptr [esp + 8], edx; call esi; 
0x000568c1: mov dword ptr [esp + 8], edx; mov dword ptr [ebp - 0x1120], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x000478e5: mov dword ptr [esp + 8], edx; mov dword ptr [esp + 0x14], edx; mov dword ptr [esp + 4], eax; mov dword ptr [esp], esi; call dword ptr [ecx + 0x1c]; 
0x0005b998: mov dword ptr [esp + 8], edx; mov dword ptr [esp + 0x18], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x001127a7: mov dword ptr [esp + 8], edx; mov dword ptr [esp + 4], 5; mov dword ptr [esp], edi; call dword ptr [eax]; 
0x0012b75d: mov dword ptr [esp + 8], edx; mov dword ptr [esp + 4], eax; mov dword ptr [esp], esi; call dword ptr [ecx + 0x38]; 
0x0011ea58: mov dword ptr [esp + 8], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0xc]; 
0x0011eaab: mov dword ptr [esp + 8], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 8]; 
0x00042caa: mov dword ptr [esp + 8], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; mov dword ptr [ebp - 0x57c], edx; call dword ptr [eax + 0x1c]; 
0x0006fa56: mov dword ptr [esp + 8], edx; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; call dword ptr [eax + 0x3c]; 
0x00044118: mov dword ptr [esp + 8], edx; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; mov dword ptr [ebp - 0x57c], edx; call dword ptr [eax + 0x1c]; 
0x0006f9ea: mov dword ptr [esp + 8], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x00042fd6: mov dword ptr [esp + 8], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0006d640: mov dword ptr [esp + 8], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x40]; 
0x0002d403: mov dword ptr [esp + 8], edx; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00042608: mov dword ptr [esp + 8], edx; mov edx, dword ptr [ebp + 0xc]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x00079df2: mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x14]; mov dword ptr [esp + 4], edx; call eax; 
0x0007985b: mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x18]; mov dword ptr [esp + 4], edx; call eax; 
0x00111852: mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x0006f5de: mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x24]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x20]; 
0x00116255: mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x28]; mov dword ptr [esp], edi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x00067041: mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x34]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x2c]; 
0x00079b5a: mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x40]; mov dword ptr [esp + 4], edx; call eax; 
0x001110e2: mov dword ptr [esp + 8], esi; call dword ptr [eax + 0xc]; 
0x001110e2: mov dword ptr [esp + 8], esi; call dword ptr [eax + 0xc]; add esp, 0x18; pop esi; ret; 
0x00118aa2: mov dword ptr [esp + 8], esi; call dword ptr [ecx + 0xc]; 
0x00118aa2: mov dword ptr [esp + 8], esi; call dword ptr [ecx + 0xc]; add esp, 0x18; pop esi; ret; 
0x0007a7b4: mov dword ptr [esp + 8], esi; call eax; 
0x00124d0a: mov dword ptr [esp + 8], esi; mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 8]; 
0x0007b845: mov dword ptr [esp + 8], esi; mov dword ptr [esp + 4], ecx; call eax; 
0x0007bb53: mov dword ptr [esp + 8], esi; mov dword ptr [esp + 4], edi; mov dword ptr [esp], ebp; call eax; 
0x000562ff: mov dword ptr [esp + 8], esi; mov dword ptr [esp], ecx; call dword ptr [eax + 0x1c]; 
0x0003ec20: mov dword ptr [esp + 8], esi; mov dword ptr [esp], edx; call eax; 
0x00129e2e: mov dword ptr [esp + 8], esi; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x0010929b: mov dword ptr [esp + 8], esi; mov esi, dword ptr [esp + 0x470]; mov dword ptr [esp + 0x10], edx; mov dword ptr [esp], esi; call eax; 
0x001096ab: mov dword ptr [esp + 8], esi; mov esi, dword ptr [esp + 0x474]; mov dword ptr [esp + 0x10], edx; mov dword ptr [esp], esi; call eax; 
0x000b934b: mov dword ptr [esp], 0; call 0xb92e0; add esp, 0x1c; ret; 
0x00076f56: mov dword ptr [esp], 0; call dword ptr [eax]; 
0x00076ecc: mov dword ptr [esp], 0; call dword ptr [ebp]; 
0x00074d69: mov dword ptr [esp], 0; call dword ptr [ecx]; 
0x00074d0a: mov dword ptr [esp], 0; call dword ptr [edx]; 
0x000f841a: mov dword ptr [esp], 0x2000004; mov dword ptr [esp + 8], edx; call eax; 
0x0010a4df: mov dword ptr [esp], 0x400; call 0x16ee0; mov dword ptr [ebx + 0xf94], eax; add esp, 0x18; pop ebx; ret; 
0x00026c0d: mov dword ptr [esp], 1; call eax; 
0x00101a87: mov dword ptr [esp], eax; call 0x101ab0; add esp, 0x2c; ret; 
0x00101bdf: mov dword ptr [esp], eax; call 0x101bf0; add esp, 0x2c; ret; 
0x00102f9f: mov dword ptr [esp], eax; call 0x102fb0; add esp, 0x1c; ret; 
0x0010316f: mov dword ptr [esp], eax; call 0x103180; add esp, 0x1c; ret; 
0x0010347f: mov dword ptr [esp], eax; call 0x103280; add esp, 0x1c; ret; 
0x00104a6f: mov dword ptr [esp], eax; call 0x104a80; add esp, 0x2c; ret; 
0x001090ad: mov dword ptr [esp], eax; call 0x1090c0; add esp, 0x18; pop ebx; ret; 
0x0010958d: mov dword ptr [esp], eax; call 0x1095a0; add esp, 0x18; pop ebx; ret; 
0x0010a54d: mov dword ptr [esp], eax; call 0x109f30; add esp, 0x28; pop ebx; ret; 
0x0010e2cf: mov dword ptr [esp], eax; call 0x10d500; add esp, 0x1c; ret; 
0x0010e3d7: mov dword ptr [esp], eax; call 0x10e2e0; add esp, 0x2c; ret; 
0x0010e517: mov dword ptr [esp], eax; call 0x10e3f0; add esp, 0x2c; ret; 
0x0010ec17: mov dword ptr [esp], eax; call 0x10e5a0; add esp, 0x2c; ret; 
0x0011b127: mov dword ptr [esp], eax; call 0x11ad10; add esp, 0x3c; ret; 
0x0011e1c7: mov dword ptr [esp], eax; call 0x11ded0; add esp, 0x1c; ret; 
0x00113037: mov dword ptr [esp], eax; call 0x11ea10; add esp, 0x1c; ret; 
0x0011ec8e: mov dword ptr [esp], eax; call 0x11eb00; add esp, 0x1c; ret; 
0x00124714: mov dword ptr [esp], eax; call 0x1243e0; add esp, 0x78; pop ebx; ret; 
0x00102c19: mov dword ptr [esp], eax; call 0x1246e0; add esp, 0x18; pop ebx; ret; 
0x00126583: mov dword ptr [esp], eax; call 0x124a80; add esp, 0x18; pop ebx; ret; 
0x00126543: mov dword ptr [esp], eax; call 0x124bc0; add esp, 0x18; pop ebx; ret; 
0x00126563: mov dword ptr [esp], eax; call 0x124c30; add esp, 0x18; pop ebx; ret; 
0x001265a3: mov dword ptr [esp], eax; call 0x126250; add esp, 0x18; pop ebx; ret; 
0x001265cb: mov dword ptr [esp], eax; call 0x126370; add esp, 0x18; pop ebx; ret; 
0x000b4f57: mov dword ptr [esp], eax; call 0x126c80; call dword ptr [ebp - 0x48]; 
0x000b4dfb: mov dword ptr [esp], eax; call 0x126c80; call esi; 
0x00109a96: mov dword ptr [esp], eax; call 0x126c80; mov dword ptr [esp], esi; call edi; 
0x00128a0b: mov dword ptr [esp], eax; call 0x128950; add esp, 0x18; pop ebx; ret; 
0x00128b3b: mov dword ptr [esp], eax; call 0x128a80; add esp, 0x18; pop ebx; ret; 
0x00128cb3: mov dword ptr [esp], eax; call 0x128b90; add esp, 0x18; pop ebx; ret; 
0x0012a873: mov dword ptr [esp], eax; call 0x12a150; add esp, 0x18; pop ebx; ret; 
0x000c5c9c: mov dword ptr [esp], eax; call 0x16ee0; add esp, 0x18; pop ebx; ret; 
0x00023879: mov dword ptr [esp], eax; call 0x16f50; add esp, 0x18; pop ebx; ret; 
0x00025f10: mov dword ptr [esp], eax; call 0x25f20; add esp, 0x18; pop ebx; ret; 
0x000ca024: mov dword ptr [esp], eax; call 0x276f0; add esp, 0x18; pop ebx; ret; 
0x00027757: mov dword ptr [esp], eax; call 0x276f0; add esp, 0x1c; ret; 
0x00028dfb: mov dword ptr [esp], eax; call 0x28580; add esp, 0x28; pop ebx; ret; 
0x00028e43: mov dword ptr [esp], eax; call 0x28dc0; add esp, 0x28; pop ebx; ret; 
0x0002e5cf: mov dword ptr [esp], eax; call 0x2e560; add esp, 0x1c; ret; 
0x00032147: mov dword ptr [esp], eax; call 0x31e40; add esp, 0x2c; ret; 
0x00032ddd: mov dword ptr [esp], eax; call 0x32d50; add esp, 0x18; pop ebx; ret; 
0x00129dab: mov dword ptr [esp], eax; call 0x32db0; add esp, 0x18; pop ebx; ret; 
0x00033adf: mov dword ptr [esp], eax; call 0x33af0; add esp, 0x18; pop ebx; ret; 
0x00033941: mov dword ptr [esp], eax; call 0x33be0; mov eax, dword ptr [esp + 0x1c]; add esp, 0x28; pop ebx; ret; 
0x00033a05: mov dword ptr [esp], eax; call 0x33c80; mov eax, dword ptr [esp + 0x1c]; add esp, 0x28; pop ebx; ret; 
0x00033a3d: mov dword ptr [esp], eax; call 0x33ce0; add esp, 0x18; pop ebx; ret; 
0x00033aad: mov dword ptr [esp], eax; call 0x33d70; add esp, 0x18; pop ebx; ret; 
0x00031207: mov dword ptr [esp], eax; call 0x33eb0; add esp, 0x1c; ret; 
0x0003f7cf: mov dword ptr [esp], eax; call 0x33fa0; add esp, 0x1c; ret; 
0x00031267: mov dword ptr [esp], eax; call 0x33ff0; add esp, 0x1c; ret; 
0x0003f7ff: mov dword ptr [esp], eax; call 0x34040; add esp, 0x1c; ret; 
0x00033e98: mov dword ptr [esp], eax; call 0x340e0; add esp, 0x28; pop ebx; ret; 
0x000345e7: mov dword ptr [esp], eax; call 0x340e0; add esp, 0x2c; ret; 
0x00033f38: mov dword ptr [esp], eax; call 0x34600; add esp, 0x28; pop ebx; ret; 
0x00034b17: mov dword ptr [esp], eax; call 0x34600; add esp, 0x2c; ret; 
0x00033fd8: mov dword ptr [esp], eax; call 0x34b30; add esp, 0x28; pop ebx; ret; 
0x000352b7: mov dword ptr [esp], eax; call 0x34b30; add esp, 0x2c; ret; 
0x00034078: mov dword ptr [esp], eax; call 0x352d0; add esp, 0x28; pop ebx; ret; 
0x000359f7: mov dword ptr [esp], eax; call 0x352d0; add esp, 0x2c; ret; 
0x000311df: mov dword ptr [esp], eax; call 0x35ad0; add esp, 0x1c; ret; 
0x00035a40: mov dword ptr [esp], eax; call 0x36110; add esp, 0x18; pop ebx; ret; 
0x000388cf: mov dword ptr [esp], eax; call 0x36110; add esp, 0x1c; ret; 
0x00035ac0: mov dword ptr [esp], eax; call 0x38f30; add esp, 0x18; pop ebx; ret; 
0x0003b84f: mov dword ptr [esp], eax; call 0x38f30; add esp, 0x1c; ret; 
0x00035b40: mov dword ptr [esp], eax; call 0x3bef0; add esp, 0x18; pop ebx; ret; 
0x0003e6df: mov dword ptr [esp], eax; call 0x3bef0; add esp, 0x1c; ret; 
0x0003f51b: mov dword ptr [esp], eax; call 0x3efe0; add esp, 0x18; pop ebx; ret; 
0x0003fa58: mov dword ptr [esp], eax; call 0x3fa70; add esp, 0x28; pop ebx; ret; 
0x00047a37: mov dword ptr [esp], eax; call 0x424d0; add esp, 0x18; pop ebx; ret; 
0x0004c467: mov dword ptr [esp], eax; call 0x424d0; add esp, 0x1c; ret; 
0x00049fe3: mov dword ptr [esp], eax; call 0x49ee0; add esp, 0x18; pop ebx; ret; 
0x0005468b: mov dword ptr [esp], eax; call 0x4c590; add esp, 0x18; pop ebx; ret; 
0x000546c7: mov dword ptr [esp], eax; call 0x54660; add esp, 0x1c; ret; 
0x000e85eb: mov dword ptr [esp], eax; call 0x54fb0; add esp, 0x18; pop ebx; ret; 
0x00055b87: mov dword ptr [esp], eax; call 0x55ba0; add esp, 0x1c; ret; 
0x0006f043: mov dword ptr [esp], eax; call 0x56370; add esp, 0x18; pop ebx; ret; 
0x00062eab: mov dword ptr [esp], eax; call 0x5baa0; add esp, 0x18; pop ebx; ret; 
0x0006f133: mov dword ptr [esp], eax; call 0x62e80; add esp, 0x18; pop ebx; ret; 
0x00068b53: mov dword ptr [esp], eax; call 0x643c0; add esp, 0x18; pop ebx; ret; 
0x0011fb76: mov dword ptr [esp], eax; call 0x64880; add esp, 0x18; pop ebx; ret; 
0x00064ea3: mov dword ptr [esp], eax; call 0x64db0; add esp, 0x18; pop ebx; ret; 
0x0011fbd6: mov dword ptr [esp], eax; call 0x65620; add esp, 0x18; pop ebx; ret; 
0x000553fb: mov dword ptr [esp], eax; call 0x65980; add esp, 0x18; pop ebx; ret; 
0x00065c6b: mov dword ptr [esp], eax; call 0x65c80; add esp, 0x28; pop ebx; ret; 
0x00068dd3: mov dword ptr [esp], eax; call 0x66df0; add esp, 0x18; pop ebx; ret; 
0x00068e0b: mov dword ptr [esp], eax; call 0x66f50; add esp, 0x18; pop ebx; ret; 
0x0004c523: mov dword ptr [esp], eax; call 0x67210; add esp, 0x18; pop ebx; ret; 
0x00054743: mov dword ptr [esp], eax; call 0x67300; add esp, 0x18; pop ebx; ret; 
0x0011fbaa: mov dword ptr [esp], eax; call 0x68600; add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x0004c553: mov dword ptr [esp], eax; call 0x68e20; add esp, 0x18; pop ebx; ret; 
0x0004c583: mov dword ptr [esp], eax; call 0x68ff0; add esp, 0x18; pop ebx; ret; 
0x0004c4eb: mov dword ptr [esp], eax; call 0x69210; add esp, 0x18; pop ebx; ret; 
0x000696a3: mov dword ptr [esp], eax; call 0x694b0; add esp, 0x18; pop ebx; ret; 
0x0006b10b: mov dword ptr [esp], eax; call 0x6b1a0; add esp, 0x18; pop ebx; ret; 
0x0006b387: mov dword ptr [esp], eax; call 0x6b2b0; add esp, 0x1c; ret; 
0x0006be92: mov dword ptr [esp], eax; call 0x6b640; mov eax, 1; add esp, 0x28; pop ebx; ret; 
0x0006c208: mov dword ptr [esp], eax; call 0x6bf30; add esp, 0x18; pop ebx; ret; 
0x0006ec3b: mov dword ptr [esp], eax; call 0x6ea10; add esp, 0x28; pop ebx; ret; 
0x00073258: mov dword ptr [esp], eax; call 0x71f60; add esp, 0x18; pop ebx; ret; 
0x00072762: mov dword ptr [esp], eax; call 0x722d0; mov eax, 1; add esp, 0x28; pop ebx; ret; 
0x00072913: mov dword ptr [esp], eax; call 0x72820; add esp, 0x28; pop ebx; ret; 
0x00073985: mov dword ptr [esp], eax; call 0x73890; add esp, 0x18; pop ebx; ret; 
0x0001aeaf: mov dword ptr [esp], eax; call 0x7c820; add esp, 0x18; pop ebx; ret; 
0x000c5d8d: mov dword ptr [esp], eax; call 0x7dcd0; add esp, 0x1c; ret; 
0x000985b6: mov dword ptr [esp], eax; call 0x7e180; add esp, 0x18; pop ebx; ret; 
0x00097c26: mov dword ptr [esp], eax; call 0x7e790; add esp, 0x18; pop ebx; ret; 
0x0007fb19: mov dword ptr [esp], eax; call 0x7fa60; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0007c878: mov dword ptr [esp], eax; call 0x81390; add esp, 0x18; pop ebx; ret; 
0x00083733: mov dword ptr [esp], eax; call 0x82760; add esp, 0x18; pop ebx; ret; 
0x0002ae09: mov dword ptr [esp], eax; call 0x95d60; add esp, 0x18; pop ebx; ret; 
0x00104829: mov dword ptr [esp], eax; call 0x97ff0; add esp, 0x18; pop ebx; ret; 
0x00104a29: mov dword ptr [esp], eax; call 0x984e0; add esp, 0x18; pop ebx; ret; 
0x001046a9: mov dword ptr [esp], eax; call 0x98bc0; add esp, 0x18; pop ebx; ret; 
0x00104cd1: mov dword ptr [esp], eax; call 0x98e00; add esp, 0x18; pop ebx; ret; 
0x00040cab: mov dword ptr [esp], eax; call 0x98e00; add esp, 0x28; pop ebx; ret; 
0x00104d21: mov dword ptr [esp], eax; call 0x98e50; add esp, 0x18; pop ebx; ret; 
0x00040dcb: mov dword ptr [esp], eax; call 0x98e50; add esp, 0x28; pop ebx; ret; 
0x00104c39: mov dword ptr [esp], eax; call 0x991e0; add esp, 0x28; pop ebx; ret; 
0x00104c89: mov dword ptr [esp], eax; call 0x99570; add esp, 0x28; pop ebx; ret; 
0x00040e9f: mov dword ptr [esp], eax; call 0x99b00; add esp, 0x1c; ret; 
0x00040ecf: mov dword ptr [esp], eax; call 0x99ba0; add esp, 0x1c; ret; 
0x000999f8: mov dword ptr [esp], eax; call 0x99dc0; add esp, 0x28; pop ebx; ret; 
0x00099a98: mov dword ptr [esp], eax; call 0x9a250; add esp, 0x28; pop ebx; ret; 
0x00099b38: mov dword ptr [esp], eax; call 0x9a6d0; add esp, 0x28; pop ebx; ret; 
0x00099bd8: mov dword ptr [esp], eax; call 0x9ad90; add esp, 0x28; pop ebx; ret; 
0x00099c70: mov dword ptr [esp], eax; call 0x9b9e0; add esp, 0x18; pop ebx; ret; 
0x00099d30: mov dword ptr [esp], eax; call 0x9e640; add esp, 0x18; pop ebx; ret; 
0x00099d70: mov dword ptr [esp], eax; call 0xa1190; add esp, 0x18; pop ebx; ret; 
0x000a3928: mov dword ptr [esp], eax; call 0xa44c0; add esp, 0x18; pop ebx; ret; 
0x000a3970: mov dword ptr [esp], eax; call 0xa4ca0; add esp, 0x18; pop ebx; ret; 
0x00098e43: mov dword ptr [esp], eax; call 0xa5b70; add esp, 0x28; pop ebx; ret; 
0x000a5fd7: mov dword ptr [esp], eax; call 0xa5ff0; add esp, 0x1c; ret; 
0x000a7b9b: mov dword ptr [esp], eax; call 0xa7a60; add esp, 0x48; pop ebx; ret; 
0x000a842c: mov dword ptr [esp], eax; call 0xa7e90; add esp, 0x18; pop ebx; ret; 
0x000a7be3: mov dword ptr [esp], eax; call 0xa94b0; add esp, 0x18; pop ebx; ret; 
0x000b0938: mov dword ptr [esp], eax; call 0xb2da0; add esp, 0x28; pop ebx; ret; 
0x000b8767: mov dword ptr [esp], eax; call 0xb85e0; add esp, 0x18; pop ebx; ret; 
0x000b8a67: mov dword ptr [esp], eax; call 0xb8bd0; add esp, 0x18; pop ebx; ret; 
0x000c52eb: mov dword ptr [esp], eax; call 0xc4000; add esp, 0x28; pop ebx; ret; 
0x000c51f3: mov dword ptr [esp], eax; call 0xc5110; add esp, 0x28; pop ebx; ret; 
0x0012df53: mov dword ptr [esp], eax; call 0xc55b0; add esp, 0x18; pop ebx; ret; 
0x0012df83: mov dword ptr [esp], eax; call 0xc5640; add esp, 0x18; pop ebx; ret; 
0x00102951: mov dword ptr [esp], eax; call 0xc57a0; add esp, 0x18; pop ebx; ret; 
0x0014ace5: mov dword ptr [esp], eax; call 0xd7fe0; add esp, 0x18; pop ebx; ret; 
0x0012dfc6: mov dword ptr [esp], eax; call 0xd81a0; add esp, 0x28; pop ebx; ret; 
0x000d8aa3: mov dword ptr [esp], eax; call 0xd8b90; add esp, 0x28; pop ebx; ret; 
0x000df687: mov dword ptr [esp], eax; call 0xde7c0; add esp, 0x1c; ret; 
0x00123d3f: mov dword ptr [esp], eax; call 0xdf100; add esp, 0x1c; sar eax, 0x1f; ret; 
0x00102b91: mov dword ptr [esp], eax; call 0xdf720; add esp, 0x18; pop ebx; ret; 
0x0012e0a3: mov dword ptr [esp], eax; call 0xe00b0; add esp, 0x18; pop ebx; ret; 
0x00102ef9: mov dword ptr [esp], eax; call 0xe0500; add esp, 0x18; pop ebx; ret; 
0x0012e573: mov dword ptr [esp], eax; call 0xe1090; add esp, 0x28; pop ebx; ret; 
0x000e62e3: mov dword ptr [esp], eax; call 0xe6d00; add esp, 0x18; pop ebx; ret; 
0x00102f31: mov dword ptr [esp], eax; call 0xe7c80; add esp, 0x18; pop ebx; ret; 
0x000e8a99: mov dword ptr [esp], eax; call 0xe8c60; add esp, 0x18; pop ebx; ret; 
0x000eac9f: mov dword ptr [esp], eax; call 0xea6f0; add esp, 0x1c; ret; 
0x000eb4cd: mov dword ptr [esp], eax; call 0xeb4e0; add esp, 0x18; pop ebx; ret; 
0x000eb445: mov dword ptr [esp], eax; call 0xeb5e0; add esp, 0x18; pop ebx; ret; 
0x00023995: mov dword ptr [esp], eax; call 0xec0b0; add esp, 0x18; pop ebx; ret; 
0x0014a3f8: mov dword ptr [esp], eax; call 0xec0d0; add esp, 0x18; pop ebx; ret; 
0x000ec5bf: mov dword ptr [esp], eax; call 0xec330; add esp, 0x1c; ret; 
0x000ec59f: mov dword ptr [esp], eax; call 0xec440; add esp, 0x1c; ret; 
0x0007158e: mov dword ptr [esp], eax; call 0xeec70; add esp, 0x18; pop ebx; ret; 
0x000fb797: mov dword ptr [esp], eax; call 0xfa420; add esp, 0x18; pop ebx; ret; 
0x000fede4: mov dword ptr [esp], eax; call 0xfd430; add esp, 0x14; pop ebx; pop esi; ret; 
0x000fdf9b: mov dword ptr [esp], eax; call 0xfd430; add esp, 0x18; pop ebx; ret; 
0x000fe09f: mov dword ptr [esp], eax; call 0xfdfb0; add esp, 0x1c; ret; 
0x0012eaaf: mov dword ptr [esp], eax; call 0xffe30; add esp, 0x2c; ret; 
0x00064a6d: mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x0001d2e4: mov dword ptr [esp], eax; call dword ptr [ebp + 4]; 
0x000e22a2: mov dword ptr [esp], eax; call dword ptr [ebp - 0x28]; 
0x00124930: mov dword ptr [esp], eax; call dword ptr [ebx - 0x1464]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x001248c0: mov dword ptr [esp], eax; call dword ptr [ebx - 0x1468]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00124848: mov dword ptr [esp], eax; call dword ptr [ebx - 0x146c]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000bb4fd: mov dword ptr [esp], eax; call dword ptr [ecx + 0x14]; 
0x000e1e04: mov dword ptr [esp], eax; call dword ptr [ecx + 0x24]; 
0x00074d48: mov dword ptr [esp], eax; call dword ptr [ecx]; 
0x0001e1ff: mov dword ptr [esp], eax; call dword ptr [edi + 4]; 
0x00111be0: mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x0011b38b: mov dword ptr [esp], eax; call dword ptr [edx + 0x14]; 
0x0011f0bf: mov dword ptr [esp], eax; call dword ptr [edx + 0x20]; 
0x0011f0bf: mov dword ptr [esp], eax; call dword ptr [edx + 0x20]; add esp, 0x1c; ret; 
0x000726ea: mov dword ptr [esp], eax; call dword ptr [edx + 0x24]; 
0x0011f0a7: mov dword ptr [esp], eax; call dword ptr [edx + 0x24]; add esp, 0x1c; ret; 
0x0011f15a: mov dword ptr [esp], eax; call dword ptr [edx + 0x24]; add esp, 0x28; pop esi; ret; 
0x000726ea: mov dword ptr [esp], eax; call dword ptr [edx + 0x24]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0006ab12: mov dword ptr [esp], eax; call dword ptr [edx + 0x30]; 
0x00111959: mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x0011c99f: mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; add esp, 0x4c; ret; 
0x00111895: mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x001140c7: mov dword ptr [esp], eax; call dword ptr [edx + 4]; add esp, 0x1c; ret; 
0x0011e5ef: mov dword ptr [esp], eax; call dword ptr [edx + 4]; add esp, 0x28; pop esi; ret; 
0x0011199c: mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x001140df: mov dword ptr [esp], eax; call dword ptr [edx]; 
0x001140df: mov dword ptr [esp], eax; call dword ptr [edx]; add esp, 0x1c; ret; 
0x0007c19e: mov dword ptr [esp], eax; call dword ptr [esi + 0x1c]; 
0x0007c2b4: mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x000e1911: mov dword ptr [esp], eax; call dword ptr [esi + 0x24]; 
0x0001cdd4: mov dword ptr [esp], eax; call dword ptr [esi + 4]; 
0x001144f2: mov dword ptr [esp], eax; call dword ptr [esi + 8]; 
0x00126ed0: mov dword ptr [esp], eax; call dword ptr [esi]; 
0x00115f31: mov dword ptr [esp], eax; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x0011e537: mov dword ptr [esp], eax; call dword ptr [esp + 0x40]; add esp, 0x3c; ret; 
0x00098678: mov dword ptr [esp], eax; call edi; 
0x00064fb9: mov dword ptr [esp], eax; call edx; 
0x00064fb9: mov dword ptr [esp], eax; call edx; add esp, 0x1c; ret; 
0x0009872b: mov dword ptr [esp], eax; call esi; 
0x000310f8: mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x001194f2: mov dword ptr [esp], eax; mov dword ptr [esp + 0x458], ebp; call dword ptr [edx + 8]; 
0x0007250e: mov dword ptr [esp], eax; mov dword ptr [esp + 4], ecx; call dword ptr [edx + 0x20]; 
0x0007250e: mov dword ptr [esp], eax; mov dword ptr [esp + 4], ecx; call dword ptr [edx + 0x20]; add esp, 0x1c; ret; 
0x00127391: mov dword ptr [esp], eax; mov dword ptr [esp + 4], edx; call dword ptr [ebp - 0x7c]; 
0x000f8310: mov dword ptr [esp], eax; mov dword ptr [esp + 8], ecx; mov ecx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 4], ecx; call edx; 
0x00118a9f: mov dword ptr [esp], eax; mov dword ptr [esp + 8], esi; call dword ptr [ecx + 0xc]; 
0x00118a9f: mov dword ptr [esp], eax; mov dword ptr [esp + 8], esi; call dword ptr [ecx + 0xc]; add esp, 0x18; pop esi; ret; 
0x0001777f: mov dword ptr [esp], eax; mov eax, dword ptr [ebp + 0xc]; call dword ptr [eax]; 
0x00124ab2: mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 0x10]; 
0x00124dbe: mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 0xc]; 
0x00124a4a: mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 4]; 
0x00126dd3: mov dword ptr [esp], eax; mov eax, dword ptr [ebx - 0xfc]; call dword ptr [eax + 0x1b0]; add esp, 0x18; pop ebx; ret; 
0x000b08e8: mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x30]; call 0xae970; add esp, 0x2c; ret; 
0x000b2dc8: mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x30]; call 0xb09a0; add esp, 0x2c; ret; 
0x000276d8: mov dword ptr [esp], eax; mov eax, ecx; call 0x272d0; mov eax, dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x0002d58e: mov dword ptr [esp], eax; mov esi, dword ptr [esp + 4]; fld dword ptr [esp]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000e606a: mov dword ptr [esp], eax; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0006d6d4: mov dword ptr [esp], ebp; add eax, 0x2c; mov dword ptr [esp + 4], eax; call dword ptr [ebp + 0x18]; 
0x00118f3c: mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x0011dc42: mov dword ptr [esp], ebp; call dword ptr [eax + 0x14]; 
0x0006ad7a: mov dword ptr [esp], ebp; call dword ptr [eax + 0x1c]; 
0x00067e3e: mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x0006db9b: mov dword ptr [esp], ebp; call dword ptr [eax + 0x48]; 
0x000d95b9: mov dword ptr [esp], ebp; call dword ptr [eax + 0xc]; 
0x0011c350: mov dword ptr [esp], ebp; call dword ptr [eax + 8]; 
0x0011c2d9: mov dword ptr [esp], ebp; call dword ptr [eax]; 
0x0006d613: mov dword ptr [esp], ebp; call dword ptr [ebp + 0x10]; 
0x0007c260: mov dword ptr [esp], ebp; call dword ptr [esi + 0x1c]; 
0x0007bb5b: mov dword ptr [esp], ebp; call eax; 
0x00070008: mov dword ptr [esp], ebp; call ecx; 
0x000679c5: mov dword ptr [esp], ebp; call edi; 
0x0012b1f3: mov dword ptr [esp], ebp; mov dword ptr [esp + 0xc], edx; call dword ptr [eax + 0x40]; 
0x0011385a: mov dword ptr [esp], ebp; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x18]; 
0x00078f06: mov dword ptr [esp], ebp; mov dword ptr [esp + 4], edx; call eax; 
0x0012b29f: mov dword ptr [esp], ebp; mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], ecx; call dword ptr [eax + 0x40]; 
0x000f7e15: mov dword ptr [esp], ebp; mov dword ptr [esp + 8], eax; call dword ptr [edi + 0x14]; 
0x00079def: mov dword ptr [esp], ebp; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x14]; mov dword ptr [esp + 4], edx; call eax; 
0x00079b57: mov dword ptr [esp], ebp; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x40]; mov dword ptr [esp + 4], edx; call eax; 
0x0006dcbb: mov dword ptr [esp], ecx; add eax, 0x2c; mov dword ptr [esp + 4], eax; call dword ptr [ecx + 0x18]; 
0x001228aa: mov dword ptr [esp], ecx; call 0x122060; add esp, 0x38; pop ebx; ret; 
0x0006c324: mov dword ptr [esp], ecx; call 0x6b6d0; add esp, 0x18; pop ebx; ret; 
0x00073e90: mov dword ptr [esp], ecx; call 0x73270; add esp, 0x18; pop ebx; ret; 
0x0011a7a6: mov dword ptr [esp], ecx; call dword ptr [eax + 0x10]; 
0x00056303: mov dword ptr [esp], ecx; call dword ptr [eax + 0x1c]; 
0x0006d1f3: mov dword ptr [esp], ecx; call dword ptr [eax + 0xc]; 
0x0011a754: mov dword ptr [esp], ecx; call dword ptr [eax + 4]; 
0x0011e58f: mov dword ptr [esp], ecx; call dword ptr [eax + 4]; add esp, 0x18; pop esi; ret; 
0x0011e5a7: mov dword ptr [esp], ecx; call dword ptr [eax]; 
0x0001ec52: mov dword ptr [esp], ecx; call dword ptr [esi]; 
0x00028d19: mov dword ptr [esp], ecx; call eax; 
0x00031631: mov dword ptr [esp], ecx; call edi; 
0x000b4e7f: mov dword ptr [esp], ecx; mov dword ptr [esp + 4], edx; call dword ptr [ebp - 0x34]; 
0x000792b2: mov dword ptr [esp], ecx; mov dword ptr [esp + 4], edx; call eax; 
0x00021561: mov dword ptr [esp], ecx; mov dword ptr [esp + 8], eax; call dword ptr [edi]; 
0x0001f49e: mov dword ptr [esp], ecx; mov dword ptr [esp + 8], eax; mov eax, dword ptr [esp + 0xa4]; mov dword ptr [esp + 4], eax; call dword ptr [esi]; 
0x001110df: mov dword ptr [esp], ecx; mov dword ptr [esp + 8], esi; call dword ptr [eax + 0xc]; 
0x001110df: mov dword ptr [esp], ecx; mov dword ptr [esp + 8], esi; call dword ptr [eax + 0xc]; add esp, 0x18; pop esi; ret; 
0x0012eac3: mov dword ptr [esp], ecx; xor ecx, ecx; call 0x100770; sub esp, 4; add esp, 0x1c; ret; 
0x0012eae3: mov dword ptr [esp], ecx; xor ecx, ecx; call 0x100810; sub esp, 4; add esp, 0x1c; ret; 
0x0012eb03: mov dword ptr [esp], ecx; xor ecx, ecx; call 0x1008b0; sub esp, 4; add esp, 0x1c; ret; 
0x0012eb23: mov dword ptr [esp], ecx; xor ecx, ecx; call 0x100950; sub esp, 4; add esp, 0x1c; ret; 
0x0012eb43: mov dword ptr [esp], ecx; xor ecx, ecx; call 0x1009f0; sub esp, 4; add esp, 0x1c; ret; 
0x0012eb83: mov dword ptr [esp], ecx; xor ecx, ecx; call 0x100bd0; sub esp, 4; add esp, 0x1c; ret; 
0x0012ebc3: mov dword ptr [esp], ecx; xor ecx, ecx; call 0x100d10; sub esp, 4; add esp, 0x1c; ret; 
0x0012ec03: mov dword ptr [esp], ecx; xor ecx, ecx; call 0x100e50; sub esp, 4; add esp, 0x1c; ret; 
0x00098669: mov dword ptr [esp], edi; call 0x126c80; mov dword ptr [esp + 4], esi; mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; call edi; 
0x0001aff0: mov dword ptr [esp], edi; call 0x126c80; mov dword ptr [esp], esi; call edi; 
0x00112b78: mov dword ptr [esp], edi; call 0xdeb70; mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x001118c7: mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x00111839: mov dword ptr [esp], edi; call dword ptr [eax + 0x14]; 
0x0011346b: mov dword ptr [esp], edi; call dword ptr [eax + 0x18]; 
0x0006f9ee: mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x001185c7: mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x000724ab: mov dword ptr [esp], edi; call dword ptr [eax + 0xc]; 
0x00111877: mov dword ptr [esp], edi; call dword ptr [eax + 4]; 
0x00112110: mov dword ptr [esp], edi; call dword ptr [eax]; 
0x00112269: mov dword ptr [esp], edi; call dword ptr [eax]; mov eax, dword ptr [edi + 4]; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x001127b3: mov dword ptr [esp], edi; call dword ptr [eax]; mov edx, dword ptr [edi + 4]; mov dword ptr [esp], edi; mov dword ptr [esp + 0x2c], eax; call dword ptr [edx + 0x10]; 
0x0006cf54: mov dword ptr [esp], edi; call dword ptr [edi + 0xc]; 
0x00113366: mov dword ptr [esp], edi; call dword ptr [edx + 0x18]; 
0x00113d13: mov dword ptr [esp], edi; call dword ptr [esi]; 
0x00111aa7: mov dword ptr [esp], edi; call eax; 
0x00098f6c: mov dword ptr [esp], edi; call esi; 
0x0007b83e: mov dword ptr [esp], edi; mov dword ptr [esp + 0x18], edx; mov dword ptr [esp + 8], esi; mov dword ptr [esp + 4], ecx; call eax; 
0x00118cd0: mov dword ptr [esp], edi; mov dword ptr [esp + 0x28], eax; mov eax, dword ptr [esp + 0x44]; call dword ptr [eax + 0x14]; 
0x001127bb: mov dword ptr [esp], edi; mov dword ptr [esp + 0x2c], eax; call dword ptr [edx + 0x10]; 
0x00112fcb: mov dword ptr [esp], edi; mov dword ptr [esp + 4], eax; call dword ptr [esi + 0x14]; 
0x0011258c: mov dword ptr [esp], edi; mov dword ptr [esp + 4], eax; call dword ptr [esi + 0xc]; 
0x0006d0b2: mov dword ptr [esp], edi; mov dword ptr [esp + 4], eax; mov dword ptr [esp + 8], edx; call dword ptr [edi + 0xc]; 
0x0011625d: mov dword ptr [esp], edi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x0006cb86: mov dword ptr [esp], edi; mov dword ptr [esp + 8], edx; call dword ptr [edi + 0xc]; 
0x000317d0: mov dword ptr [esp], edi; mov dword ptr [esp + 8], edx; call esi; 
0x00079858: mov dword ptr [esp], edi; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x18]; mov dword ptr [esp + 4], edx; call eax; 
0x0011184f: mov dword ptr [esp], edi; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x000283de: mov dword ptr [esp], edi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00032adf: mov dword ptr [esp], edi; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp + 4], edx; call eax; 
0x0006ccbb: mov dword ptr [esp], edx; add eax, 0x2c; mov dword ptr [esp + 4], eax; call dword ptr [edx + 4]; 
0x00129b00: mov dword ptr [esp], edx; call 0x129980; add esp, 0x18; pop ebx; ret; 
0x00129af0: mov dword ptr [esp], edx; call 0x129990; add esp, 0x18; pop ebx; ret; 
0x000e23d6: mov dword ptr [esp], edx; call 0xdf6e0; mov ecx, dword ptr [ebp - 0xb0]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000e3556: mov dword ptr [esp], edx; call 0xdf6e0; mov ecx, dword ptr [ebp - 0xc0]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x00112a93: mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x0011a738: mov dword ptr [esp], edx; call dword ptr [eax + 0x14]; 
0x0011ce0b: mov dword ptr [esp], edx; call dword ptr [eax + 0xc]; 
0x00113d05: mov dword ptr [esp], edx; call dword ptr [eax + 8]; 
0x00126f7c: mov dword ptr [esp], edx; call dword ptr [eax + 8]; add esp, 0x18; pop ebx; ret; 
0x000fc2f1: mov dword ptr [esp], edx; call dword ptr [eax]; 
0x000fc2f1: mov dword ptr [esp], edx; call dword ptr [eax]; add esp, 0x1c; ret; 
0x000ebc54: mov dword ptr [esp], edx; call dword ptr [ebp + 0x10]; 
0x0002196e: mov dword ptr [esp], edx; call dword ptr [ebp]; 
0x0006d917: mov dword ptr [esp], edx; call dword ptr [edx + 0x10]; 
0x0007c285: mov dword ptr [esp], edx; call dword ptr [esi + 0x20]; 
0x0001f671: mov dword ptr [esp], edx; call dword ptr [esi]; 
0x000195ac: mov dword ptr [esp], edx; call eax; 
0x0002dd63: mov dword ptr [esp], edx; call eax; add esp, 0x14; pop ebx; pop ebp; ret; 
0x000197ed: mov dword ptr [esp], edx; call eax; add esp, 0x18; pop ebx; ret; 
0x00064ed7: mov dword ptr [esp], edx; call eax; add esp, 0x1c; ret; 
0x000ec951: mov dword ptr [esp], edx; call eax; add esp, 0x28; pop ebx; ret; 
0x00031668: mov dword ptr [esp], edx; call edi; 
0x00074f2e: mov dword ptr [esp], edx; lea edx, dword ptr [ebx - 0x44875]; call 0x74da0; mov edx, dword ptr [ebx - 0x15c]; mov dword ptr [esp], 0; call dword ptr [edx]; 
0x00076e22: mov dword ptr [esp], edx; mov dword ptr [esp + 0x28], edx; call dword ptr [ebp]; 
0x00076cdd: mov dword ptr [esp], edx; mov dword ptr [esp + 0x28], edx; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x0011d941: mov dword ptr [esp], edx; mov dword ptr [esp + 0x30], edx; mov dword ptr [esp + 4], 0; call dword ptr [eax + 0x14]; 
0x00066883: mov dword ptr [esp], edx; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x1c]; 
0x00126f36: mov dword ptr [esp], edx; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 4]; 
0x0007a7ad: mov dword ptr [esp], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 8], esi; call eax; 
0x0001e83a: mov dword ptr [esp], edx; mov dword ptr [esp + 8], eax; call dword ptr [ebp]; 
0x00019499: mov dword ptr [esp], edx; mov dword ptr [esp + 8], eax; mov eax, dword ptr [esp + 0x78]; mov dword ptr [esp + 4], eax; call esi; 
0x0004245b: mov dword ptr [esp], edx; mov dword ptr [esp + 8], ebp; mov dword ptr [esp + 4], eax; call dword ptr [ecx + 0x1c]; 
0x0007b014: mov dword ptr [esp], edx; mov dword ptr [esp + 8], ecx; lea ecx, dword ptr [edi + ebp + 1]; mov dword ptr [esp + 4], ecx; call eax; 
0x00124d07: mov dword ptr [esp], edx; mov dword ptr [esp + 8], esi; mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 8]; 
0x00126c61: mov dword ptr [esp], edx; mov eax, dword ptr [eax + 0x1a0]; call eax; 
0x00126c61: mov dword ptr [esp], edx; mov eax, dword ptr [eax + 0x1a0]; call eax; add esp, 0x18; pop ebx; ret; 
0x0002ba63: mov dword ptr [esp], edx; mov edx, eax; mov eax, 2; call 0x2b9b0; add esp, 0x2c; ret; 
0x00023edc: mov dword ptr [esp], edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x001111c8: mov dword ptr [esp], esi; call 0x112f00; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0011cd68: mov dword ptr [esp], esi; call 0x11cb20; mov eax, dword ptr [esi + 8]; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x0011cd38: mov dword ptr [esp], esi; call 0x11cb70; mov eax, dword ptr [esi + 8]; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x000251cf: mov dword ptr [esp], esi; call 0x16f50; add esp, 0x14; pop ebx; pop esi; ret; 
0x0002b96d: mov dword ptr [esp], esi; call 0x16f50; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0006bbd7: mov dword ptr [esp], esi; call 0x6bf30; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0006ba9f: mov dword ptr [esp], esi; call 0x6bf30; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x0006b896: mov dword ptr [esp], esi; call 0x71870; add esp, 0x14; pop ebx; pop esi; ret; 
0x000fee90: mov dword ptr [esp], esi; call 0xfd430; add esp, 0x74; pop ebx; pop esi; ret; 
0x000fef60: mov dword ptr [esp], esi; call 0xfdf80; add esp, 0x74; pop ebx; pop esi; ret; 
0x001097f5: mov dword ptr [esp], esi; call 0xfff40; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0006b8f3: mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000720ba: mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0006f61a: mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; add esp, 0x18; pop esi; ret; 
0x0006bab2: mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x0007220a: mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0006c01b: mov dword ptr [esp], esi; call dword ptr [eax + 0x18]; 
0x00042fda: mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0011ef43: mov dword ptr [esp], esi; call dword ptr [eax + 0x20]; 
0x00066a3e: mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x00066e76: mov dword ptr [esp], esi; call dword ptr [eax + 0x2c]; 
0x000648ec: mov dword ptr [esp], esi; call dword ptr [eax + 0x30]; 
0x000670b8: mov dword ptr [esp], esi; call dword ptr [eax + 0x34]; 
0x0006fa5e: mov dword ptr [esp], esi; call dword ptr [eax + 0x3c]; 
0x0006d644: mov dword ptr [esp], esi; call dword ptr [eax + 0x40]; 
0x00070933: mov dword ptr [esp], esi; call dword ptr [eax + 0x44]; 
0x00064298: mov dword ptr [esp], esi; call dword ptr [eax + 0x48]; 
0x0006bf0e: mov dword ptr [esp], esi; call dword ptr [eax + 0xc]; 
0x00114132: mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x00064493: mov dword ptr [esp], esi; call dword ptr [eax + 8]; 
0x00114162: mov dword ptr [esp], esi; call dword ptr [eax]; 
0x000c77e5: mov dword ptr [esp], esi; call dword ptr [ebp - 0x50]; 
0x000478f1: mov dword ptr [esp], esi; call dword ptr [ecx + 0x1c]; 
0x000bba27: mov dword ptr [esp], esi; call dword ptr [ecx + 0x20]; 
0x0012b765: mov dword ptr [esp], esi; call dword ptr [ecx + 0x38]; 
0x0006fade: mov dword ptr [esp], esi; call dword ptr [ecx + 0x40]; 
0x0006bfba: mov dword ptr [esp], esi; call dword ptr [edx + 0x18]; 
0x0007167e: mov dword ptr [esp], esi; call dword ptr [edx + 0x38]; 
0x00070288: mov dword ptr [esp], esi; call dword ptr [edx + 0x40]; 
0x00074f70: mov dword ptr [esp], esi; call dword ptr [edx]; 
0x0001b430: mov dword ptr [esp], esi; call eax; 
0x0001aff8: mov dword ptr [esp], esi; call edi; 
0x00042cb2: mov dword ptr [esp], esi; mov dword ptr [ebp - 0x57c], edx; call dword ptr [eax + 0x1c]; 
0x00043c87: mov dword ptr [esp], esi; mov dword ptr [ebp - 0x57c], edx; mov dword ptr [ebp - 0x580], ecx; call dword ptr [eax + 0x1c]; 
0x00066c7a: mov dword ptr [esp], esi; mov dword ptr [esp + 0x10], edx; mov dword ptr [esp + 0xc], 0; call dword ptr [eax + 0x24]; 
0x0011263f: mov dword ptr [esp], esi; mov dword ptr [esp + 4], eax; call dword ptr [edi + 0x14]; 
0x0007952e: mov dword ptr [esp], esi; mov dword ptr [esp + 4], ebp; mov dword ptr [esp + 8], edx; call eax; 
0x00042a1d: mov dword ptr [esp], esi; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x1c]; 
0x0004260f: mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x0006f5e6: mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x20]; 
0x00067049: mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x2c]; 
0x0006f2d7: mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x40]; 
0x0006b960: mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x0007b28c: mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call eax; 
0x0001f9cd: mov dword ptr [esp], esi; mov dword ptr [esp + 8], eax; call dword ptr [ebp]; 
0x000c804d: mov dword ptr [esp], esi; mov dword ptr [esp + 8], ecx; call dword ptr [ebp - 0x78]; 
0x00031684: mov dword ptr [esp], esi; mov dword ptr [esp + 8], ecx; call edi; 
0x000319d0: mov dword ptr [esp], esi; mov dword ptr [esp + 8], ecx; mov ecx, dword ptr [esp + 0x2c]; mov dword ptr [esp + 4], ecx; call edi; 
0x0012af1b: mov dword ptr [esp], esi; mov dword ptr [esp + 8], edx; call dword ptr [eax + 0x3c]; 
0x0006ceba: mov dword ptr [esp], esi; sub eax, ebp; mov dword ptr [esp + 8], eax; call dword ptr [edx + 0x38]; 
0x000711df: mov dword ptr [esp], esi; sub edx, eax; mov dword ptr [esp + 8], edx; call dword ptr [ecx + 0x38]; 
0x00114b6f: mov dword ptr fs:[esp + 4], edx; mov edx, dword ptr [esp + 0x60]; mov dword ptr [esp], edx; call eax; 
0x0002de85: mov dword ptr gs:[0x68], eax; mov edi, eax; mov edx, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000b9064: mov dword ptr gs:[0x68], ecx; nop; lea esi, dword ptr [esi]; ret; 
0x000b8583: mov dword ptr gs:[0x6c], eax; mov eax, 0xbe; int 0x80; 
0x000eb62e: mov dword ptr gs:[eax], 0x16; add esp, 0x1c; ret; 
0x00032816: mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x000ddfe1: mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x000ddf45: mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; add esp, 8; ret; 
0x000e4f81: mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x0002ed04: mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x000e4d86: mov dword ptr gs:[eax], 0x16; mov eax, 1; ret; 
0x0002ccda: mov dword ptr gs:[eax], 0x16; mov ecx, edi; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0002e0e1: mov dword ptr gs:[eax], 0x16; or eax, 0xffffffff; add esp, 8; ret; 
0x0002d48e: mov dword ptr gs:[eax], 0x22; add esp, 0x28; pop ebx; ret; 
0x000e3c30: mov dword ptr gs:[eax], 0x24; mov eax, 1; add esp, 0x1c; ret; 
0x0002ebc1: mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00077336: mov dword ptr gs:[eax], 0xc; xor eax, eax; add esp, 0xc; ret; 
0x0002c8b6: mov dword ptr gs:[eax], 9; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x00068136: mov dword ptr gs:[eax], 9; mov eax, 0xffffffff; ret; 
0x000272ca: mov dword ptr gs:[eax], edx; pop ebx; ret; 
0x0011c3f7: mov dword ptr gs:[eax], edx; ret; 
0x00024fc1: mov dword ptr gs:[ecx], 0x16; mov ecx, edx; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000d9460: mov dword ptr gs:[edx], eax; add esp, 0x524; mov eax, esi; pop ebx; pop esi; ret; 
0x0002e216: mov dword ptr gs:[edx], eax; or eax, 0xffffffff; pop ebx; ret; 
0x000b5c3d: mov dword ptr gs:[edx], ecx; add esp, 0x28; pop ebx; ret; 
0x000b5696: mov dword ptr gs:[edx], esi; add esp, 0x24; mov eax, ecx; pop ebx; pop esi; ret; 
0x000b5dc6: mov dword ptr gs:[edx], esi; add esp, 0x44; mov eax, ecx; pop ebx; pop esi; ret; 
0x001153cf: mov dword ptr gs:[esi], edi; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000949f3: mov dx, word ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000915c0: mov dx, word ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008d900: mov dx, word ptr [esi]; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x0009841d: mov eax, 0; cmove eax, ecx; ret; 
0x000ef68c: mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000eb2f7: mov eax, 0x101; call dword ptr gs:[0x10]; 
0x001491da: mov eax, 0x10; pop edi; ret; 
0x000ba6bb: mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000de1d4: mov eax, 0x10c; call dword ptr gs:[0x10]; 
0x000de234: mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x0002de93: mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000e9576: mov eax, 0x10f; call dword ptr gs:[0x10]; 
0x000e0e1c: mov eax, 0x110; call dword ptr gs:[0x10]; 
0x000b7e31: mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000ef7d0: mov eax, 0x123; call dword ptr gs:[0x10]; 
0x000ef79d: mov eax, 0x124; call dword ptr gs:[0x10]; 
0x000ef85a: mov eax, 0x125; call dword ptr gs:[0x10]; 
0x000de8ab: mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000de703: mov eax, 0x128; call dword ptr gs:[0x10]; 
0x000ddfab: mov eax, 0x129; call dword ptr gs:[0x10]; 
0x000e0144: mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x000e9757: mov eax, 0x12b; call dword ptr gs:[0x10]; 
0x000de045: mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000e0b73: mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0005556b: mov eax, 0x12e; call dword ptr gs:[0x10]; 
0x000e0994: mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x000e0a33: mov eax, 0x130; call dword ptr gs:[0x10]; 
0x000e0adb: mov eax, 0x131; call dword ptr gs:[0x10]; 
0x000de633: mov eax, 0x132; call dword ptr gs:[0x10]; 
0x000def0d: mov eax, 0x133; call dword ptr gs:[0x10]; 
0x000e0d0a: mov eax, 0x135; call dword ptr gs:[0x10]; 
0x000efc96: mov eax, 0x136; call dword ptr gs:[0x10]; 
0x000efb46: mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000deced: mov eax, 0x13; call dword ptr gs:[0x10]; 
0x000e4f1c: mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000efc1c: mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000efd2c: mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000ddad0: mov eax, 0x13e; call dword ptr gs:[0x10]; 
0x000eeeed: mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x000e140f: mov eax, 0x140; call dword ptr gs:[0x10]; 
0x001736d1: mov eax, 0x140e0a01; inc ecx; ret; 
0x000eefa8: mov eax, 0x141; call dword ptr gs:[0x10]; 
0x000efdaa: mov eax, 0x142; call dword ptr gs:[0x10]; 
0x000ef044: mov eax, 0x143; call dword ptr gs:[0x10]; 
0x000eeb1c: mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000efdf2: mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000efe3a: mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000eef61: mov eax, 0x147; call dword ptr gs:[0x10]; 
0x000ef003: mov eax, 0x148; call dword ptr gs:[0x10]; 
0x000ef5e6: mov eax, 0x149; call dword ptr gs:[0x10]; 
0x000b9052: mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000df53d: mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x000df5ba: mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x000ef816: mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x000e70a5: mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000e7605: mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f0b84: mov eax, 0x151; call dword ptr gs:[0x10]; 
0x000efe7a: mov eax, 0x152; call dword ptr gs:[0x10]; 
0x000ef39c: mov eax, 0x153; call dword ptr gs:[0x10]; 
0x000e6618: mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000efec7: mov eax, 0x155; call dword ptr gs:[0x10]; 
0x000eff17: mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000ef4ea: mov eax, 0x157; call dword ptr gs:[0x10]; 
0x000e81b6: mov eax, 0x158; call dword ptr gs:[0x10]; 
0x000f0c5a: mov eax, 0x159; call dword ptr gs:[0x10]; 
0x000ef8e7: mov eax, 0x15; call dword ptr gs:[0x10]; 
0x000eff8a: mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x000effdc: mov eax, 0x15b; call dword ptr gs:[0x10]; 
0x000f003c: mov eax, 0x15c; call dword ptr gs:[0x10]; 
0x000eed06: mov eax, 0x16; call dword ptr gs:[0x10]; 
0x0007a764: mov eax, 0x16; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000aac86: mov eax, 0x19; call dword ptr gs:[0x10]; 
0x000e89c7: mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x000b7ed6: mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x000b818a: mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000ddb1a: mov eax, 0x1e; call dword ptr gs:[0x10]; 
0x000b9a76: mov eax, 0x20; cmp dword ptr gs:[edx], 0x26; mov edx, 0xffffffff; cmovne eax, edx; ret; 
0x000b9a38: mov eax, 0x20; ret; 
0x000ded2a: mov eax, 0x21; call dword ptr gs:[0x10]; 
0x0016abfc: mov eax, 0x240001df; mov dh, 0xf4; call dword ptr [eax]; 
0x0016cf04: mov eax, 0x240002ae; wait; stc; call esp; 
0x000e8100: mov eax, 0x24; call dword ptr gs:[0x10]; 
0x0002e1aa: mov eax, 0x25; call dword ptr gs:[0x10]; 
0x0005550a: mov eax, 0x26; call dword ptr gs:[0x10]; 
0x000e0e2f: mov eax, 0x26; ret; 
0x000de6aa: mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000e0bb6: mov eax, 0x28; call dword ptr gs:[0x10]; 
0x000df4b6: mov eax, 0x29; call dword ptr gs:[0x10]; 
0x000df576: mov eax, 0x2a; call dword ptr gs:[0x10]; 
0x00042a67: mov eax, 0x2b9; add byte ptr [ecx - 0x4a75b], cl; jmp dword ptr [ebp - 0x75]; 
0x000b7be8: mov eax, 0x2b; call dword ptr gs:[0x10]; 
0x000e6bed: mov eax, 0x2d; call dword ptr gs:[0x10]; 
0x0013b36a: mov eax, 0x30002c1; sbb al, 0x8b; jmp ebx; 
0x0013826a: mov eax, 0x30002ec; sbb al, 0x8b; jmp ebx; 
0x000914ce: mov eax, 0x3000c93; or al, 0x91; jmp ecx; 
0x000cf0ea: mov eax, 0x3130c483; rcr byte ptr [esi + 0x5f], 0x5d; ret 8; 
0x000e8016: mov eax, 0x33; call dword ptr gs:[0x10]; 
0x0016c4e4: mov eax, 0x3400026e; xchg eax, edi; call eax; 
0x000eed4a: mov eax, 0x34; call dword ptr gs:[0x10]; 
0x0018aa51: mov eax, 0x351c0001; cmc; call dword ptr [ecx]; 
0x000e5fa5: mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000b92ea: mov eax, 0x39; call dword ptr gs:[0x10]; 
0x000de566: mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x000de566: mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000e8056: mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x000ecb3e: mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x000df4fa: mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x000b9080: mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000b9080: mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x000b9aa8: mov eax, 0x40; ret; 
0x000b9320: mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000b9320: mov eax, 0x41; call dword ptr gs:[0x10]; ret; 
0x000b93a0: mov eax, 0x42; call dword ptr gs:[0x10]; 
0x00183ab8: mov eax, 0x44000148; push ebx; int1; call dword ptr [eax]; 
0x00188bb8: mov eax, 0x44000199; sbb al, 0xf4; jmp dword ptr [ebp]; 
0x00158fdb: mov eax, 0x45155e93; ret 0x591c; 
0x0001b42a: mov eax, 0x458b0010; pushfd; mov dword ptr [esp], esi; call eax; 
0x000e7d4a: mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x000e65c6: mov eax, 0x4b; call dword ptr gs:[0x10]; 
0x000ef2ba: mov eax, 0x4c; call dword ptr gs:[0x10]; 
0x000e67ca: mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000a846a: mov eax, 0x4e; call dword ptr gs:[0x10]; 
0x000a84aa: mov eax, 0x4f; call dword ptr gs:[0x10]; 
0x000e09da: mov eax, 0x53; call dword ptr gs:[0x10]; 
0x001891b8: mov eax, 0x5400019f; dec edi; hlt; call dword ptr [ebx + 1]; 
0x000e0a7d: mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000efcd6: mov eax, 0x56; call dword ptr gs:[0x10]; 
0x000e84ba: mov eax, 0x57; call dword ptr gs:[0x10]; 
0x000e8215: mov eax, 0x58; call dword ptr gs:[0x10]; 
0x00064d83: mov eax, 0x5b000000; ret; 
0x000eb16a: mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x0001a731: mov eax, 0x5bf4658d; pop esi; pop edi; pop ebp; ret 4; 
0x000e97aa: mov eax, 0x5c; call dword ptr gs:[0x10]; 
0x000e97ea: mov eax, 0x5d; call dword ptr gs:[0x10]; 
0x000de5ca: mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x000e6a86: mov eax, 0x60; call dword ptr gs:[0x10]; 
0x000e6acd: mov eax, 0x61; call dword ptr gs:[0x10]; 
0x000de13a: mov eax, 0x63; call dword ptr gs:[0x10]; 
0x001893b8: mov eax, 0x640001a1; push edi; hlt; jmp esi; 
0x0016d84c: mov eax, 0x640002e9; jno 0x16d84d; call eax; 
0x0016e434: mov eax, 0x6400032a; ret 0xfffb; 
0x000de17a: mov eax, 0x64; call dword ptr gs:[0x10]; 
0x000eea1d: mov eax, 0x65; call dword ptr gs:[0x10]; 
0x000f04cc: mov eax, 0x66; mov ebx, 0x10; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f04f3: mov eax, 0x66; mov ebx, 0x10; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f03cc: mov eax, 0x66; mov ebx, 0x11; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f03f3: mov eax, 0x66; mov ebx, 0x11; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0a6c: mov eax, 0x66; mov ebx, 0x12; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0a93: mov eax, 0x66; mov ebx, 0x12; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f02cc: mov eax, 0x66; mov ebx, 0xa; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f02f3: mov eax, 0x66; mov ebx, 0xa; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f054c: mov eax, 0x66; mov ebx, 0xb; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0573: mov eax, 0x66; mov ebx, 0xb; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f034c: mov eax, 0x66; mov ebx, 0xc; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0373: mov eax, 0x66; mov ebx, 0xc; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0602: mov eax, 0x66; mov ebx, 0xd; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f05c2: mov eax, 0x66; mov ebx, 0xe; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0242: mov eax, 0x66; mov ebx, 0xf; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0642: mov eax, 0x66; mov ebx, 1; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0102: mov eax, 0x66; mov ebx, 2; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f014c: mov eax, 0x66; mov ebx, 3; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0173: mov eax, 0x66; mov ebx, 3; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0282: mov eax, 0x66; mov ebx, 4; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f008c: mov eax, 0x66; mov ebx, 5; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f00b3: mov eax, 0x66; mov ebx, 5; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0202: mov eax, 0x66; mov ebx, 6; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f01c2: mov eax, 0x66; mov ebx, 7; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0682: mov eax, 0x66; mov ebx, 8; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f044c: mov eax, 0x66; mov ebx, 9; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0473: mov eax, 0x66; mov ebx, 9; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000ef89d: mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000aac4d: mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000aac0a: mov eax, 0x69; call dword ptr gs:[0x10]; 
0x000ddc4c: mov eax, 0x6a; call dword ptr gs:[0x10]; 
0x000dddcc: mov eax, 0x6b; call dword ptr gs:[0x10]; 
0x000ddd0c: mov eax, 0x6c; call dword ptr gs:[0x10]; 
0x000eea56: mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x000e8476: mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x000ef276: mov eax, 0x71; call dword ptr gs:[0x10]; 
0x000b7c66: mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000e84f6: mov eax, 0x73; call dword ptr gs:[0x10]; 
0x0016c524: mov eax, 0x7400026f; mov bh, al; jmp eax; 
0x0016dcac: mov eax, 0x74000301; in al, 0xfa; call eax; 
0x000efbc6: mov eax, 0x74; call dword ptr gs:[0x10]; 
0x000f0df0: mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000e80a0: mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0002df39: mov eax, 0x77; int 0x80; 
0x0003ea6b: mov eax, 0x78; call dword ptr gs:[0x10]; 
0x000eebef: mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x000e7e1a: mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000b7ba6: mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x000ef23d: mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x000ef3e6: mov eax, 0x7c; call dword ptr gs:[0x10]; 
0x000b9978: mov eax, 0x7d00; pop ebx; ret; 
0x000eb1ad: mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0003f85a: mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000b99b8: mov eax, 0x7e; pop ebx; ret; 
0x0002d4f4: mov eax, 0x7f800000; and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x000ef52d: mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000b9936: mov eax, 0x7f; pop ebx; cmp dword ptr gs:[edx], 0x26; mov edx, 0xffffffff; cmovne eax, edx; ret; 
0x000b9922: mov eax, 0x7f; pop ebx; ret; 
0x0002d244: mov eax, 0x7ff00000; sub eax, edx; shr eax, 0x1f; ret; 
0x000b857e: mov eax, 0x80000000; mov dword ptr gs:[0x6c], eax; mov eax, 0xbe; int 0x80; 
0x000ef757: mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0010a5b7: mov eax, 0x810001f7; ret; 
0x000bd6b7: mov eax, 0x810006c6; ret; 
0x00095db7: mov eax, 0x8100093f; ret; 
0x00071cb7: mov eax, 0x81000b80; ret; 
0x000ef56d: mov eax, 0x81; call dword ptr gs:[0x10]; 
0x001342b7: mov eax, 0x81ffff5a; ret; 
0x000ef706: mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000efae2: mov eax, 0x83; call dword ptr gs:[0x10]; 
0x00179bb8: mov eax, 0x840000a9; pushal; out dx, eax; jmp dword ptr [edx + 5]; 
0x000b92a6: mov eax, 0x84; call dword ptr gs:[0x10]; 
0x000df6e6: mov eax, 0x85; call dword ptr gs:[0x10]; 
0x00113c39: mov eax, 0x868d0000; pushal; and al, byte ptr [eax]; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000ef42a: mov eax, 0x86; call dword ptr gs:[0x10]; 
0x000ef9b6: mov eax, 0x88; call dword ptr gs:[0x10]; 
0x0006cad1: mov eax, 0x89000000; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x0006bde7: mov eax, 0x89000000; xor al, 0x24; call dword ptr [eax + 0x34]; 
0x0017aa49: mov eax, 0x89e40000; out dx, eax; call dword ptr [edx]; 
0x001099e4: mov eax, 0x89fff735; ret 0x408d; 
0x000d8844: mov eax, 0x89fffffc; ret 0xcb8; 
0x000a3280: mov eax, 0x89fffffe; ret 0x6ee9; 
0x001118bc: mov eax, 0x8b000000; inc esi; adc byte ptr [ebp - 0x76dbdb94], cl; cmp al, 0x24; call dword ptr [eax + 0x10]; 
0x000e2414: mov eax, 0x8b00009c; inc ebp; ror byte ptr [ecx + 0x2de82404], 0x4b; dec dword ptr [ebx - 0xb36b]; dec dword ptr [ebx - 0xab7b]; jmp dword ptr [ebp - 0x77]; 
0x0017aadd: mov eax, 0x8ba00000; out dx, eax; call dword ptr [edx]; 
0x000a5794: mov eax, 0x8bfff717; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000eeca2: mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x000b3e3c: mov eax, 0x8d; call dword ptr gs:[0x10]; 
0x000e7e71: mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000b98f9: mov eax, 0x8f0f007e; mov esi, 0x5b000000; ret; 
0x000df1ca: mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x00167418: mov eax, 0x8fffd3c; cmp eax, 0x3c12fffd; std; jmp dword ptr [edx + 0x3c]; 
0x000eb1f7: mov eax, 0x90; call dword ptr gs:[0x10]; 
0x00088294: mov eax, 0x90fffff0; lea esi, dword ptr [esi]; mov eax, edx; pop ebx; ret; 
0x000e6d72: mov eax, 0x91; call dword ptr gs:[0x10]; 
0x0006a2ba: mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000b9366: mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0017ebb8: mov eax, 0x940000f9; aas; sti; jmp esp; 
0x000e8150: mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000eeb85: mov eax, 0x95; call dword ptr gs:[0x10]; 
0x000eb33a: mov eax, 0x96; call dword ptr gs:[0x10]; 
0x000eb37a: mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000eb3b6: mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000eb3f0: mov eax, 0x99; call dword ptr gs:[0x10]; 
0x000c53ba: mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000c53fa: mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000c543d: mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000c5476: mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000c54b0: mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0019aa91: mov eax, 0x9f1c0002; clc; call dword ptr [ebx]; 
0x0019aab5: mov eax, 0x9f580002; clc; jmp dword ptr [edi]; 
0x000c54f6: mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000c5536: mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x000c557a: mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000b81f4: mov eax, 0xa2; call dword ptr gs:[0x10]; 
0x000ef937: mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x00177fb8: mov eax, 0xa400008d; pop ds; sti; jmp esi; 
0x001682cc: mov eax, 0xa40000a3; insb byte ptr es:[edi], dx; in al, dx; jmp esp; 
0x000eea9a: mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x000efa97: mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x000e0c22: mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x000ef97d: mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000e0b16: mov eax, 0xa; call dword ptr gs:[0x10]; 
0x000efa47: mov eax, 0xac; call dword ptr gs:[0x10]; 
0x0002df30: mov eax, 0xad; int 0x80; 
0x0002dfd0: mov eax, 0xae; call dword ptr gs:[0x10]; 
0x0002e144: mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0002e1f7: mov eax, 0xb0; call dword ptr gs:[0x10]; 
0x0002e335: mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0002f144: mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0002e24b: mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x001745b8: mov eax, 0xb4000053; xlatb; in al, dx; jmp dword ptr [edx]; 
0x0016d0d5: mov eax, 0xb4440002; stc; jmp eax; 
0x000c57e5: mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000c58c5: mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000df7ad: mov eax, 0xb7; call dword ptr gs:[0x10]; 
0x00149152: mov eax, 0xb8000000; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x000ef46a: mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x000ef4aa: mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x000b8603: mov eax, 0xb; call dword ptr gs:[0x10]; 
0x000f0e46: mov eax, 0xb; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0002e77a: mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000e1352: mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x00123d82: mov eax, 0xbc; call dword ptr gs:[0x10]; 
0x00157a58: mov eax, 0xbcbbbab9; mov ebp, 0xc1c0bfbe; ret 0xc4c3; 
0x00123e45: mov eax, 0xbd; call dword ptr gs:[0x10]; 
0x000b8589: mov eax, 0xbe; int 0x80; 
0x001686a5: mov eax, 0xbf540000; in al, dx; inc esp; mov eax, 0xbf840000; in al, dx; jmp esp; 
0x001686ad: mov eax, 0xbf840000; in al, dx; jmp esp; 
0x000e6586: mov eax, 0xbf; call dword ptr gs:[0x10]; 
0x000eb09c: mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x000e9843: mov eax, 0xc1; call dword ptr gs:[0x10]; 
0x000e98a3: mov eax, 0xc2; call dword ptr gs:[0x10]; 
0x000ddc1a: mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ddd9a: mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000ddcda: mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x000e00d3: mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x000b9090: mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000b9090: mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x000b90b0: mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000b90b0: mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000b90a0: mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000b90a0: mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x000df6a6: mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000f0f3a: mov eax, 0xc; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x001491a6: mov eax, 0xc; pop edi; ret; 
0x000b90c0: mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000b90c0: mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x000e7993: mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x000e7a13: mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x000b90e6: mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x000b55b3: mov eax, 0xce; call dword ptr gs:[0x10]; 
0x000e0073: mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000b94ce: mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000b9403: mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x00175b18: mov eax, 0xd1cffee; dec ebp; mov bh, 0xee; jmp dword ptr [edx]; 
0x00175b48: mov eax, 0xd1cffee; iretd; mov bh, 0xee; jmp dword ptr [edx]; 
0x00175a88: mov eax, 0xd1cffee; push ebp; mov bh, 0xee; jmp dword ptr [edx]; 
0x00175ab8: mov eax, 0xd1cffee; pushal; mov bh, 0xee; jmp dword ptr [edx]; 
0x000b955e: mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000b9463: mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0018eeb8: mov eax, 0xd40001fc; and esi, esi; jmp dword ptr [esi]; 
0x000e0013: mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x000b9131: mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000b91b1: mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x000eede8: mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x000eede8: mov eax, 0xd7; call dword ptr gs:[0x10]; xchg ebx, ecx; ret; 
0x000eee08: mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x000eee08: mov eax, 0xd8; call dword ptr gs:[0x10]; xchg ebx, ecx; ret; 
0x000ef9fa: mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x000a844a: mov eax, 0xd; call dword ptr gs:[0x10]; 
0x000eb2ad: mov eax, 0xda; call dword ptr gs:[0x10]; 
0x000c5b36: mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000b3ef3: mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000df0c3: mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0002de77: mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x000eedab: mov eax, 0xe1; call dword ptr gs:[0x10]; 
0x000ed727: mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x000ed697: mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x001693e4: mov eax, 0xe400010c; xor dh, al; jmp esp; 
0x000ed4e7: mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x000ed532: mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x000ed5c2: mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x000ed412: mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x000ed57d: mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x000ed60d: mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x000ddf13: mov eax, 0xe; call dword ptr gs:[0x10]; 
0x000ed45d: mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000ed6da: mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x000ed64a: mov eax, 0xec; call dword ptr gs:[0x10]; 
0x000ed49a: mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000e13a2: mov eax, 0xef; call dword ptr gs:[0x10]; 
0x000fc1b5: mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000fc563: mov eax, 0xf0; mov ecx, 0x80; xor esi, esi; xchg ebx, edi; call dword ptr gs:[0x10]; 
0x000c568f: mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x000c55e2: mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00169c64: mov eax, 0xf400014d; sub al, 0xf1; jmp esp; 
0x0017af35: mov eax, 0xf9ae0000; out dx, eax; call dword ptr [eax]; 
0x000de58a: mov eax, 0xf; call dword ptr gs:[0x10]; 
0x000e0dcc: mov eax, 0xfa; call dword ptr gs:[0x10]; 
0x000b9970: mov eax, 0xfa; pop ebx; ret; 
0x000b85c8: mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x000b85c8: mov eax, 0xfc; call dword ptr gs:[0x10]; mov eax, 1; int 0x80; 
0x000ef5a6: mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x000ef632: mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000b9968: mov eax, 0xfffa; pop ebx; ret; 
0x0002d79e: mov eax, 0xfffe; sub eax, edx; sar eax, 0x10; ret; 
0x001100cb: mov eax, 0xffffffb8; inc dword ptr [ebx + 0x5f5e04c4]; pop ebp; ret; 
0x0002c8bd: mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x000ddfe8: mov eax, 0xffffffff; add esp, 0xc; ret; 
0x001100cc: mov eax, 0xffffffff; add esp, 4; pop esi; pop edi; pop ebp; ret; 
0x000ddf4c: mov eax, 0xffffffff; add esp, 8; ret; 
0x000c5d24: mov eax, 0xffffffff; cmovbe eax, esi; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x0006e2c0: mov eax, 0xffffffff; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00124866: mov eax, 0xffffffff; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000e683a: mov eax, 0xffffffff; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000de065: mov eax, 0xffffffff; mov ebx, dword ptr [esp + 0x70]; mov esi, dword ptr [esp + 0x74]; mov edi, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x000729c0: mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x0006a580: mov eax, 0xffffffff; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0001cbd5: mov eax, 0xffffffff; movzx ecx, dl; test dl, dl; cmovns eax, ecx; ret; 
0x0006cbb6: mov eax, 0xffffffff; or dword ptr [esi], 0x20; mov esi, dword ptr [esp + 0x34]; add esp, 0x3c; ret; 
0x000e7550: mov eax, 0xffffffff; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x000e77f8: mov eax, 0xffffffff; pop ebx; pop esi; pop edi; pop ebp; ret 8; 
0x00023079: mov eax, 0xffffffff; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000e505a: mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x000e4f88: mov eax, 0xffffffff; pop ebx; ret; 
0x0010b6dd: mov eax, 0xffffffff; pop esi; pop edi; pop ebp; ret 4; 
0x000ca1d9: mov eax, 0xffffffff; pop esi; pop edi; pop ebp; ret 8; 
0x000fffd9: mov eax, 0xffffffff; pop esi; pop edi; pop ebp; ret; 
0x0011000d: mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0002ebc8: mov eax, 0xffffffff; ret; 
0x000e9a41: mov eax, 1; add esp, 0x18; pop ebx; ret; 
0x001098bb: mov eax, 1; add esp, 0x18; pop esi; ret; 
0x000e3c37: mov eax, 1; add esp, 0x1c; ret; 
0x0006be9a: mov eax, 1; add esp, 0x28; pop ebx; ret; 
0x00114acc: mov eax, 1; add esp, 8; ret; 
0x000dda76: mov eax, 1; call dword ptr gs:[0x10]; 
0x000b85d4: mov eax, 1; int 0x80; 
0x0011f405: mov eax, 1; mov dword ptr [edx + 0xc], ecx; pop esi; ret; 
0x0007c837: mov eax, 1; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x0011d2e6: mov eax, 1; mov esi, dword ptr [esp + 0x10]; add esp, 0x1c; ret; 
0x00114520: mov eax, 1; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x0011456a: mov eax, 1; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000e8c52: mov eax, 1; pop ebx; ret; 
0x001268cb: mov eax, 1; pop edi; pop ebp; ret; 
0x000fccf5: mov eax, 1; pop esi; pop edi; pop ebp; ret; 
0x0002f56e: mov eax, 1; pop esi; pop edi; ret; 
0x000bb1f8: mov eax, 1; pop esi; ret; 
0x00022f90: mov eax, 1; ret; 
0x00129a68: mov eax, 2; add esp, 0xc; ret; 
0x0002ba68: mov eax, 2; call 0x2b9b0; add esp, 0x2c; ret; 
0x000a7410: mov eax, 2; ret; 
0x0010fd8a: mov eax, 2; sub edx, 1; mov byte ptr [ecx + 1], dl; ret; 
0x000debf7: mov eax, 3; call dword ptr gs:[0x10]; 
0x0011783f: mov eax, 3; mov ebx, dword ptr [esp + 0x44]; mov esi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x000a7420: mov eax, 3; ret; 
0x00129a4c: mov eax, 4; add esp, 0xc; ret; 
0x000dec77: mov eax, 4; call dword ptr gs:[0x10]; 
0x001490fd: mov eax, 4; pop edi; ret; 
0x000a7430: mov eax, 4; ret; 
0x000de757: mov eax, 5; call dword ptr gs:[0x10]; 
0x000db0f7: mov eax, 5; pop ebx; pop esi; pop edi; pop ebp; ret 0x10; 
0x000a7440: mov eax, 5; ret; 
0x000232a9: mov eax, 6; call dword ptr gs:[0x10]; 
0x0010baba: mov eax, 6; call dword ptr gs:[0x10]; xchg ebx, ecx; ret; 
0x000a7450: mov eax, 6; ret; 
0x000b7d07: mov eax, 7; call dword ptr gs:[0x10]; 
0x000fa6ba: mov eax, 7; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000a7460: mov eax, 7; ret; 
0x00129a58: mov eax, 8; add esp, 0xc; ret; 
0x000df604: mov eax, 8; call dword ptr gs:[0x10]; 
0x00149156: mov eax, 8; pop edi; ret; 
0x000e092a: mov eax, 9; call dword ptr gs:[0x10]; 
0x00168858: mov eax, dword ptr [0x10ffed74]; ret 0; 
0x001940c5: mov eax, dword ptr [0x140e0a01]; inc ecx; ret; 
0x00139141: mov eax, dword ptr [0x30002df]; sbb al, 0x8b; jmp ebx; 
0x00168e60: mov eax, dword ptr [0x30ffefde]; call 0xdec08e6a; out dx, eax; jmp dword ptr [eax - 0x18]; 
0x00001a29: mov eax, dword ptr [0x3a6d4813]; ret; 
0x00174988: mov eax, dword ptr [0x43100e0a]; ret; 
0x00199321: mov eax, dword ptr [0x446c0002]; clc; jmp dword ptr [eax]; 
0x00199339: mov eax, dword ptr [0x44740002]; clc; jmp dword ptr [edi]; 
0x00081d76: mov eax, dword ptr [0x4ba]; add byte ptr [ecx], ch; ret 0xd601; 
0x001893b9: mov eax, dword ptr [0x57640001]; hlt; jmp esi; 
0x000879ec: mov eax, dword ptr [0x5bfffffd]; ret; 
0x000cb78e: mov eax, dword ptr [0x5e10c483]; pop edi; pop ebp; ret; 
0x0016cd35: mov eax, dword ptr [0x66340002]; stc; call dword ptr [eax - 0x5f]; 
0x0016cd45: mov eax, dword ptr [0x68c40002]; stc; call esp; 
0x001155ce: mov eax, dword ptr [0x81000147]; ret; 
0x000cf5ce: mov eax, dword ptr [0x810005a7]; ret; 
0x0008d3d2: mov eax, dword ptr [0x810009c9]; sar dword ptr [edx - 0x2e], 0xc; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000231ce: mov eax, dword ptr [0x8100106b]; ret; 
0x0002c264: mov eax, dword ptr [0x83fffffd]; ret 0x8902; 
0x0001bd21: mov eax, dword ptr [0x85000000]; sal byte ptr [esi + 0x6b], cl; ret 0x893c; 
0x00023cd1: mov eax, dword ptr [0x85d23100]; ror byte ptr [edi], 0x94; ret 0xfe83; 
0x000ca8ab: mov eax, dword ptr [0x8bfff4c6]; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000efbde: mov eax, dword ptr [0xc1810003]; adc esi, dword ptr [ebx + ecx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00009554: mov eax, dword ptr [0xd0000010]; ret 7; 
0x000ce0d7: mov eax, dword ptr [eax + 0x10]; mov dword ptr [edx + 0x10], eax; xor eax, eax; pop esi; ret; 
0x0011328e: mov eax, dword ptr [eax + 0x10]; mov dword ptr [edx + 4], eax; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000b3d94: mov eax, dword ptr [eax + 0x14]; ret; 
0x000fb768: mov eax, dword ptr [eax + 0x18]; pop esi; ret; 
0x00126c64: mov eax, dword ptr [eax + 0x1a0]; call eax; 
0x00126c64: mov eax, dword ptr [eax + 0x1a0]; call eax; add esp, 0x18; pop ebx; ret; 
0x00126cb1: mov eax, dword ptr [eax + 0x1a0]; mov dword ptr [esp], edx; call eax; 
0x00126cb1: mov eax, dword ptr [eax + 0x1a0]; mov dword ptr [esp], edx; call eax; add esp, 0x18; pop ebx; ret; 
0x00048e6c: mov eax, dword ptr [eax + 0x1c]; mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call eax; 
0x000f2761: mov eax, dword ptr [eax + 0x1c]; ret; 
0x000ed3f6: mov eax, dword ptr [eax + 0x1c]; test eax, eax; cmove eax, edx; ret; 
0x00067924: mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + 0x28]; ret; 
0x0002701a: mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00067927: mov eax, dword ptr [eax + 0x28]; ret; 
0x00026fea: mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00040c48: mov eax, dword ptr [eax + 0x34]; add esp, 0x1c; ret; 
0x000271b8: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x00027198: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x00027178: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x000270f8: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00027138: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00027098: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00027118: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x000270d8: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x00027058: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x000270b8: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x00027158: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00027078: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x00073464: mov eax, dword ptr [eax + 0x34]; ret; 
0x0007158b: mov eax, dword ptr [eax + 0x38]; mov dword ptr [esp], eax; call 0xeec70; add esp, 0x18; pop ebx; ret; 
0x000271d8: mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000271e8: mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003f8da: mov eax, dword ptr [eax + 0x40]; ret; 
0x001298d4: mov eax, dword ptr [eax + 0x48]; ret; 
0x00129904: mov eax, dword ptr [eax + 0x4c]; ret; 
0x00129924: mov eax, dword ptr [eax + 0x50]; ret; 
0x00129994: mov eax, dword ptr [eax + 0x54]; ret; 
0x00023be6: mov eax, dword ptr [eax + 0x58]; ret; 
0x00129934: mov eax, dword ptr [eax + 0x5c]; ret; 
0x0014af74: mov eax, dword ptr [eax + 0x98]; mov dword ptr [esp], eax; call 0x16f50; add esp, 0x18; pop ebx; ret; 
0x00066ed7: mov eax, dword ptr [eax + 0xb8]; mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; call dword ptr [eax + 0x2c]; 
0x0006cacf: mov eax, dword ptr [eax + 0xb8]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0006bde5: mov eax, dword ptr [eax + 0xb8]; mov dword ptr [esp], esi; call dword ptr [eax + 0x34]; 
0x0001aef9: mov eax, dword ptr [eax + 4]; add esp, 0x28; pop ebx; ret; 
0x000e5db4: mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x00098cac: mov eax, dword ptr [eax + 8]; mov dword ptr [esp], eax; call edi; 
0x000988af: mov eax, dword ptr [eax + 8]; mov dword ptr [esp], eax; call esi; 
0x00073158: mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x000e1903: mov eax, dword ptr [eax + ecx*4]; mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], eax; mov eax, dword ptr [esi + 0xc]; mov dword ptr [esp], eax; call dword ptr [esi + 0x24]; 
0x000bd178: mov eax, dword ptr [eax + edi]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x00026fed: mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00026a98: mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x001298c8: mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x001298e8: mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000271db: mov eax, dword ptr [eax + edx*4]; ret; 
0x0013be73: mov eax, dword ptr [eax - 4]; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00177d91: mov eax, dword ptr [eax]; add byte ptr [edx], bl; out dx, eax; jmp dword ptr [esi]; 
0x00127954: mov eax, dword ptr [eax]; add esp, 0xc; ret; 
0x0006a014: mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00069fe4: mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000ca958: mov eax, dword ptr [eax]; mov dword ptr [esp], eax; call 0x16f50; add esp, 0x18; pop ebx; ret; 
0x00047a35: mov eax, dword ptr [eax]; mov dword ptr [esp], eax; call 0x424d0; add esp, 0x18; pop ebx; ret; 
0x0005470d: mov eax, dword ptr [eax]; mov dword ptr [esp], eax; call 0x4c590; add esp, 0x18; pop ebx; ret; 
0x0006f075: mov eax, dword ptr [eax]; mov dword ptr [esp], eax; call 0x56370; add esp, 0x18; pop ebx; ret; 
0x0006f0fd: mov eax, dword ptr [eax]; mov dword ptr [esp], eax; call 0x5baa0; add esp, 0x18; pop ebx; ret; 
0x0001aead: mov eax, dword ptr [eax]; mov dword ptr [esp], eax; call 0x7c820; add esp, 0x18; pop ebx; ret; 
0x0002ae07: mov eax, dword ptr [eax]; mov dword ptr [esp], eax; call 0x95d60; add esp, 0x18; pop ebx; ret; 
0x00019497: mov eax, dword ptr [eax]; mov dword ptr [esp], edx; mov dword ptr [esp + 8], eax; mov eax, dword ptr [esp + 0x78]; mov dword ptr [esp + 4], eax; call esi; 
0x00027018: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00026fe8: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00023be4: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0001aef7: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 4]; add esp, 0x28; pop ebx; ret; 
0x00026a96: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x00027016: mov eax, dword ptr [eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00026fe6: mov eax, dword ptr [eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00023be2: mov eax, dword ptr [eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x58]; ret; 
0x00040c42: mov eax, dword ptr [eax]; mov ebx, dword ptr [esp + 0x14]; mov eax, dword ptr [eax + 0x34]; add esp, 0x1c; ret; 
0x0011b2c1: mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x000ebc48: mov eax, dword ptr [eax]; mov edx, dword ptr [ebp + 8]; mov dword ptr [ebp - 0x38], ecx; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edx; call dword ptr [ebp + 0x10]; 
0x00026f36: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x00026f06: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x00026ed6: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x00026e26: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00026e86: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00026da6: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00026e56: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00026df6: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x00026fc6: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00026dd6: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x00026eb6: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00026d86: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x000b40c4: mov eax, dword ptr [eax]; ret; 
0x00025208: mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x000fb7dd: mov eax, dword ptr [eax]; test byte ptr [eax + edx*2 + 1], 0x40; setne al; movzx eax, al; pop ebx; ret; 
0x0012b1c0: mov eax, dword ptr [ebp + 0x4c]; lea edx, dword ptr [esp + 0x30]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x48]; 
0x00064a6a: mov eax, dword ptr [ebp + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x0006dcb8: mov eax, dword ptr [ebp + 0x58]; mov dword ptr [esp], ecx; add eax, 0x2c; mov dword ptr [esp + 4], eax; call dword ptr [ecx + 0x18]; 
0x00116938: mov eax, dword ptr [ebp + 0xb0]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00017782: mov eax, dword ptr [ebp + 0xc]; call dword ptr [eax]; 
0x0001d2e1: mov eax, dword ptr [ebp + 0xc]; mov dword ptr [esp], eax; call dword ptr [ebp + 4]; 
0x0011c346: mov eax, dword ptr [ebp + 4]; add edx, 4; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 8]; 
0x000f2777: mov eax, dword ptr [ebp + 4]; call 0xf1bf0; pop edx; pop ecx; pop eax; ret; 
0x0011c2f4: mov eax, dword ptr [ebp + 4]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x000cabaa: mov eax, dword ptr [ebp + 4]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret 8; 
0x0006db90: mov eax, dword ptr [ebp + eax + 0x94]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x48]; 
0x0006fef4: mov eax, dword ptr [ebp + eax + 0x94]; mov dword ptr [esp + 4], esi; mov dword ptr [esp + 8], edi; mov dword ptr [esp + 0xc], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x000bd420: mov eax, dword ptr [ebp - 0x134]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x000c01a0: mov eax, dword ptr [ebp - 0x144]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x000bdae2: mov eax, dword ptr [ebp - 0x1f0]; mov ecx, dword ptr [ebp + 0x10]; mov dword ptr [esp], eax; call dword ptr [ecx + 0x14]; 
0x000bb4f4: mov eax, dword ptr [ebp - 0x300]; mov ecx, dword ptr [ebp + 0x10]; mov dword ptr [esp], eax; call dword ptr [ecx + 0x14]; 
0x000e229b: mov eax, dword ptr [ebp - 0x40]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call dword ptr [ebp - 0x28]; 
0x000b4f54: mov eax, dword ptr [ebp - 0x48]; mov dword ptr [esp], eax; call 0x126c80; call dword ptr [ebp - 0x48]; 
0x0001b42d: mov eax, dword ptr [ebp - 0x64]; mov dword ptr [esp], esi; call eax; 
0x0001777c: mov eax, dword ptr [ebp - 0x7c]; mov dword ptr [esp], eax; mov eax, dword ptr [ebp + 0xc]; call dword ptr [eax]; 
0x00098675: mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; call edi; 
0x00098728: mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; call esi; 
0x000e6067: mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000a935f: mov eax, dword ptr [ebx + 0x3818]; add esp, 8; pop ebx; ret; 
0x000fb8cf: mov eax, dword ptr [ebx + 0x386c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000fb90f: mov eax, dword ptr [ebx + 0x3870]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000fb94f: mov eax, dword ptr [ebx + 0x3874]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000fbcaf: mov eax, dword ptr [ebx + 0x38a0]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000fbcef: mov eax, dword ptr [ebx + 0x38a4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000fbd2f: mov eax, dword ptr [ebx + 0x38a8]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000fbd6f: mov eax, dword ptr [ebx + 0x38ac]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000fbdff: mov eax, dword ptr [ebx + 0x38b4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0012e89f: mov eax, dword ptr [ebx + 0x38c0]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0012e8df: mov eax, dword ptr [ebx + 0x38c4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0012e96f: mov eax, dword ptr [ebx + 0x38cc]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000fbedd: mov eax, dword ptr [ebx + 0x38dc]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000fbfcf: mov eax, dword ptr [ebx + 0x38e8]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000fc05f: mov eax, dword ptr [ebx + 0x38f0]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000fc09f: mov eax, dword ptr [ebx + 0x38f4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000fc0db: mov eax, dword ptr [ebx + 0x38f8]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00027e9f: mov eax, dword ptr [ebx + 0x390c]; mov dword ptr [esp], edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00024026: mov eax, dword ptr [ebx + 0x3910]; mov dword ptr [esp], edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000283d8: mov eax, dword ptr [ebx + 0x3914]; mov dword ptr [esp], edi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00023ed6: mov eax, dword ptr [ebx + 0x3914]; mov dword ptr [esp], edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0007d746: mov eax, dword ptr [ebx + 0x391c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x00019522: mov eax, dword ptr [ebx + 0x3934]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0014adf9: mov eax, dword ptr [ebx + 0x393c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000b854b: mov eax, dword ptr [ebx + 0x3940]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x00124ab5: mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 0x10]; 
0x00124b0e: mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 0x14]; 
0x00124dc1: mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 0xc]; 
0x00124a4d: mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 4]; 
0x00124d12: mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 8]; 
0x000d9595: mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax]; 
0x000d95c5: mov eax, dword ptr [ebx + 0xee0]; mov dword ptr [esp + 0x1c], edx; call dword ptr [eax + 0x14]; 
0x000d95b3: mov eax, dword ptr [ebx + 0xee0]; mov dword ptr [esp], ebp; call dword ptr [eax + 0xc]; 
0x0012628d: mov eax, dword ptr [ebx + 0xee0]; xor ebp, ebp; call dword ptr [eax + 0x14]; 
0x00145272: mov eax, dword ptr [ebx + eax*4 - 0x567f4]; sub eax, ecx; pop ebp; pop ebx; ret; 
0x00142a65: mov eax, dword ptr [ebx + eax*4 - 0x567f4]; sub eax, ecx; pop ebx; ret; 
0x00076f50: mov eax, dword ptr [ebx - 0x15c]; mov dword ptr [esp], 0; call dword ptr [eax]; 
0x00076cd7: mov eax, dword ptr [ebx - 0x15c]; mov dword ptr [esp], edx; mov dword ptr [esp + 0x28], edx; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x00026a52: mov eax, dword ptr [ebx - 0x60]; mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x000272be: mov eax, dword ptr [ebx - 0x90]; add edx, 0x200; mov dword ptr gs:[eax], edx; pop ebx; ret; 
0x0007bee3: mov eax, dword ptr [ebx - 0xc4]; mov dword ptr [eax], edx; add esp, 0x18; pop ebx; ret; 
0x000e4f7b: mov eax, dword ptr [ebx - 0xf8]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x0002d488: mov eax, dword ptr [ebx - 0xf8]; mov dword ptr gs:[eax], 0x22; add esp, 0x28; pop ebx; ret; 
0x000eb620: mov eax, dword ptr [ebx - 0xf8]; mov esi, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov dword ptr gs:[eax], 0x16; add esp, 0x1c; ret; 
0x00126dd6: mov eax, dword ptr [ebx - 0xfc]; call dword ptr [eax + 0x1b0]; add esp, 0x18; pop ebx; ret; 
0x00126c5b: mov eax, dword ptr [ebx - 0xfc]; mov dword ptr [esp], edx; mov eax, dword ptr [eax + 0x1a0]; call eax; 
0x000f11f2: mov eax, dword ptr [ebx]; add byte ptr [ecx + 0xb1dffc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0001af9b: mov eax, dword ptr [ecx + 0x36c0]; ret; 
0x0001af7b: mov eax, dword ptr [ecx + 0x36c8]; ret; 
0x0002edeb: mov eax, dword ptr [ecx + 0x54]; ret; 
0x0002ee0b: mov eax, dword ptr [ecx + 0x58]; ret; 
0x0007343b: mov eax, dword ptr [ecx + 0x96c]; ret; 
0x00064fb3: mov eax, dword ptr [ecx + 0x98]; mov dword ptr [esp], eax; call edx; 
0x00064fb3: mov eax, dword ptr [ecx + 0x98]; mov dword ptr [esp], eax; call edx; add esp, 0x1c; ret; 
0x000e1e01: mov eax, dword ptr [ecx + 0xc]; mov dword ptr [esp], eax; call dword ptr [ecx + 0x24]; 
0x000231ab: mov eax, dword ptr [ecx + 0xfe4]; ret; 
0x00089a74: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, dword ptr [edx + 6]; pop edi; ret; 
0x00089ba4: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, dword ptr [edx + 6]; ret; 
0x00093e37: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x00085694: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000857c4: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x0008e454: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, dword ptr [edx + 8]; ret; 
0x0008e4b4: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; ret; 
0x0008ce04: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x0011e588: mov eax, dword ptr [ecx + 4]; mov dword ptr [esp + 4], esi; mov dword ptr [esp], ecx; call dword ptr [eax + 4]; 
0x0011e5a0: mov eax, dword ptr [ecx + 4]; mov dword ptr [esp + 4], esi; mov dword ptr [esp], ecx; call dword ptr [eax]; 
0x00089a55: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, dword ptr [edx + 5]; pop edi; ret; 
0x00089b95: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, dword ptr [edx + 5]; ret; 
0x00085685: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x000857b5: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x00032b18: mov eax, dword ptr [ecx + 4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0008e33a: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; lea eax, dword ptr [edx + 0xa]; pop edi; ret; 
0x0008e49a: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; lea eax, dword ptr [edx + 0xa]; ret; 
0x0008ccfa: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x0008ce5a: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x00089c04: mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, dword ptr [edx + 0xa]; ret; 
0x00085824: mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0008e35a: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; pop edi; ret; 
0x0008e4ba: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; ret; 
0x00093ecb: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd1a: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x0008ce7a: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0008e31b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, dword ptr [edx + 9]; pop edi; ret; 
0x0008e47b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, dword ptr [edx + 9]; ret; 
0x00093e8c: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x0008ccdb: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x0008ce3b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x00089c24: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; ret; 
0x00085844: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00089be5: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, dword ptr [edx + 9]; ret; 
0x00085805: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x0006c11a: mov eax, dword ptr [ecx + 8]; sar edx, 2; sub eax, edx; ret; 
0x00073178: mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x000562f4: mov eax, dword ptr [ecx + eax + 0x94]; mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], esi; mov dword ptr [esp], ecx; call dword ptr [eax + 0x1c]; 
0x0010533b: mov eax, dword ptr [ecx - 0x100]; add eax, dword ptr gs:[0]; ret; 
0x0002722b: mov eax, dword ptr [ecx - 0x130]; add eax, dword ptr gs:[0]; ret; 
0x00026f2f: mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x00026eff: mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x00026ecf: mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x00026e1f: mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00026e7f: mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00026d9f: mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00026e4f: mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00026def: mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x00026fbf: mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00026dcf: mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x00026eaf: mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00026d7f: mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x000fefcb: mov eax, dword ptr [ecx - 0x14]; mov eax, dword ptr gs:[eax]; ret; 
0x00026a8f: mov eax, dword ptr [ecx - 0x158]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0002700f: mov eax, dword ptr [ecx - 0x158]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00026fdf: mov eax, dword ptr [ecx - 0x158]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00023bdb: mov eax, dword ptr [ecx - 0x158]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0012759b: mov eax, dword ptr [ecx - 0x174]; add eax, dword ptr gs:[0]; ret; 
0x0011c3eb: mov eax, dword ptr [ecx - 0x58]; lea edx, dword ptr [ecx + 0x33ac]; mov dword ptr gs:[eax], edx; ret; 
0x0002726b: mov eax, dword ptr [ecx - 0x90]; add eax, dword ptr gs:[0]; ret; 
0x0002724b: mov eax, dword ptr [ecx - 0xc0]; add eax, dword ptr gs:[0]; ret; 
0x00078219: mov eax, dword ptr [ecx - 0xc4]; lea edx, dword ptr [ecx - 0x12ba44]; mov dword ptr [eax], edx; ret; 
0x00019b5b: mov eax, dword ptr [ecx - 0xf8]; add eax, dword ptr gs:[0]; ret; 
0x000b9b60: mov eax, dword ptr [ecx - 0xf8]; cmp dword ptr gs:[eax], 0x26; sete al; movzx eax, al; lea eax, dword ptr [eax + eax - 1]; ret; 
0x0002ecfe: mov eax, dword ptr [ecx - 0xf8]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x000e4d80: mov eax, dword ptr [ecx - 0xf8]; mov dword ptr gs:[eax], 0x16; mov eax, 1; ret; 
0x0002ebbb: mov eax, dword ptr [ecx - 0xf8]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00068130: mov eax, dword ptr [ecx - 0xf8]; mov dword ptr gs:[eax], 9; mov eax, 0xffffffff; ret; 
0x000f275b: mov eax, dword ptr [ecx - 0xfc]; mov eax, dword ptr [eax + 0x1c]; ret; 
0x000ed3f0: mov eax, dword ptr [ecx - 0xfc]; mov eax, dword ptr [eax + 0x1c]; test eax, eax; cmove eax, edx; ret; 
0x0006e583: mov eax, dword ptr [ecx]; add ecx, 4; mov dword ptr [edx], ecx; add esp, 0x18; pop ebx; ret; 
0x0006e422: mov eax, dword ptr [ecx]; add ecx, 4; mov dword ptr [edx], ecx; ret; 
0x00089940: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, dword ptr [edx + 3]; pop edi; ret; 
0x00089b70: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, dword ptr [edx + 3]; ret; 
0x0008b76d: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, dword ptr [edx + 4]; pop edi; pop ebx; ret; 
0x00089b80: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, dword ptr [edx + 4]; ret; 
0x000857a0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x00089b90: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, dword ptr [edx + 5]; ret; 
0x000857b0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x00089ba0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, dword ptr [edx + 6]; ret; 
0x000857c0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x0008ce00: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x00093de3: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x0008737d: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x00085580: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x00088430: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; pop ebx; ret; 
0x00085790: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x0001e1f2: mov eax, dword ptr [ecx]; mov dword ptr [esp + 4], ebp; mov dword ptr [esp + 8], eax; mov eax, dword ptr [edi + 0xc]; mov dword ptr [esp], eax; call dword ptr [edi + 4]; 
0x0001e632: mov eax, dword ptr [ecx]; mov dword ptr [esp + 4], edi; mov dword ptr [esp + 8], eax; mov eax, dword ptr [ebp + 0xc]; mov dword ptr [esp], eax; call dword ptr [ebp + 4]; 
0x0001d2d7: mov eax, dword ptr [ecx]; mov dword ptr [esp + 4], esi; mov dword ptr [esp + 8], eax; mov eax, dword ptr [ebp + 0xc]; mov dword ptr [esp], eax; call dword ptr [ebp + 4]; 
0x0011a765: mov eax, dword ptr [ecx]; mov ecx, dword ptr [ebp - 0xbc]; mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x0011acad: mov eax, dword ptr [ecx]; mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp + 4], edi; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x0011abd4: mov eax, dword ptr [ecx]; mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x00089a11: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; lea eax, dword ptr [edx + 1]; pop edi; ret; 
0x00089b51: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; lea eax, dword ptr [edx + 1]; ret; 
0x00089b61: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, dword ptr [edx + 2]; ret; 
0x00085781: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x00093db4: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x00085651: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x00085771: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x0011263c: mov eax, dword ptr [edi + 0x10]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], eax; call dword ptr [edi + 0x14]; 
0x0001e1fc: mov eax, dword ptr [edi + 0xc]; mov dword ptr [esp], eax; call dword ptr [edi + 4]; 
0x0011dc80: mov eax, dword ptr [edi + 0xc]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x001185fd: mov eax, dword ptr [edi + 4]; add ebp, 0xc; mov dword ptr [esp + 0x2c], edx; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x001134dd: mov eax, dword ptr [edi + 4]; add ebp, 3; and ebp, 0xfffffffc; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], edi; call dword ptr [eax + 0x18]; 
0x001185c0: mov eax, dword ptr [edi + 4]; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x00112119: mov eax, dword ptr [edi + 4]; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x000724a0: mov eax, dword ptr [edi + eax + 0x94]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0xc]; 
0x0001d78f: mov eax, dword ptr [edi]; mov dword ptr [esp + 4], ebp; mov dword ptr [esp + 8], eax; mov eax, dword ptr [esi + 0xc]; mov dword ptr [esp], eax; call dword ptr [esi + 4]; 
0x0006a0be: mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x000c5e75: mov eax, dword ptr [edx + 0x14]; add esp, 0x28; pop esi; pop edi; pop ebp; ret; 
0x0006a0c8: mov eax, dword ptr [edx + 0x14]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00069f9e: mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x0011bbd1: mov eax, dword ptr [edx + 0x20]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x00069fa8: mov eax, dword ptr [edx + 0x20]; sub eax, dword ptr [edx + 0x1c]; ret; 
0x0011f334: mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0006c817: mov eax, dword ptr [edx + 4]; cmp dword ptr [edx + 0x10], eax; cmovae eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x00073c14: mov eax, dword ptr [edx + 8]; cmp dword ptr [edx + 0x14], eax; cmovae eax, dword ptr [edx + 0x14]; sub eax, dword ptr [edx + 0xc]; ret; 
0x000f3c97: mov eax, dword ptr [edx + ebp*4 + 0x24]; add esp, 0x20; pop esi; pop edi; pop ebp; ret; 
0x00025f71: mov eax, dword ptr [edx + ecx*4 + 0x24]; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x00127948: mov eax, dword ptr [edx]; add esp, 0xc; ret; 
0x00073148: mov eax, dword ptr [edx]; mov dword ptr [ecx], eax; ret; 
0x000d7736: mov eax, dword ptr [edx]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x0001efca: mov eax, dword ptr [edx]; mov dword ptr [esp + 4], ebp; mov dword ptr [esp + 8], eax; mov eax, dword ptr [edi + 0xc]; mov dword ptr [esp], eax; call dword ptr [edi + 4]; 
0x0001cdc7: mov eax, dword ptr [edx]; mov dword ptr [esp + 4], ebp; mov dword ptr [esp + 8], eax; mov eax, dword ptr [esi + 0xc]; mov dword ptr [esp], eax; call dword ptr [esi + 4]; 
0x0006cbc8: mov eax, dword ptr [edx]; mov ebx, dword ptr [esp + 0x30]; mov esi, dword ptr [esp + 0x34]; mov edi, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x00116492: mov eax, dword ptr [edx]; mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x001119b1: mov eax, dword ptr [edx]; mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x18], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x0011188c: mov eax, dword ptr [edx]; mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp + 4], edi; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x001163c8: mov eax, dword ptr [edx]; mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x0006c268: mov eax, dword ptr [edx]; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x001118c0: mov eax, dword ptr [esi + 0x10]; lea ebp, dword ptr [esp + 0x24]; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x00111869: mov eax, dword ptr [esi + 0x10]; lea edx, dword ptr [esp + 0x84]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 4]; 
0x0006a087: mov eax, dword ptr [esi + 0x10]; mov dword ptr [esi + 0x14], eax; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00111a8e: mov eax, dword ptr [esi + 0x10]; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x00112fc8: mov eax, dword ptr [esi + 0x10]; mov dword ptr [esp], edi; mov dword ptr [esp + 4], eax; call dword ptr [esi + 0x14]; 
0x0011184c: mov eax, dword ptr [esi + 0x10]; mov dword ptr [esp], edi; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x000ed8ad: mov eax, dword ptr [esi + 0x1c]; mov dword ptr [esi + 0x38], eax; mov eax, dword ptr [esp + 0x1c]; mov esi, dword ptr [esp + 0x30]; add esp, 0x3c; ret; 
0x0006ceb3: mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; sub eax, ebp; mov dword ptr [esp + 8], eax; call dword ptr [edx + 0x38]; 
0x00112b80: mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00113b40: mov eax, dword ptr [esi + 0x2398]; mov bp, 1; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x0007c19b: mov eax, dword ptr [esi + 0x24]; mov dword ptr [esp], eax; call dword ptr [esi + 0x1c]; 
0x0007c2b1: mov eax, dword ptr [esi + 0x24]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x000cb4f0: mov eax, dword ptr [esi + 0x3c]; add esp, 0x14; pop esi; pop edi; ret; 
0x0011a74d: mov eax, dword ptr [esi + 0x3c]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ecx; call dword ptr [eax + 4]; 
0x0011aeb7: mov eax, dword ptr [esi + 0x3c]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x0011a79d: mov eax, dword ptr [esi + 0x3c]; mov ecx, dword ptr [ebp - 0xbc]; mov dword ptr [esp], ecx; call dword ptr [eax + 0x10]; 
0x0012a1d6: mov eax, dword ptr [esi + 0x4c]; mov dword ptr [esp + 4], 0; mov dword ptr [esp], esi; call dword ptr [eax + 8]; 
0x0012af14: mov eax, dword ptr [esi + 0x4c]; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; mov dword ptr [esp + 8], edx; call dword ptr [eax + 0x3c]; 
0x0012bd70: mov eax, dword ptr [esi + 0x4c]; mov dword ptr [esp], esi; call dword ptr [eax + 0x44]; 
0x00119cd7: mov eax, dword ptr [esi + 0x50]; lea edx, dword ptr [esp + 0x84]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 4]; 
0x0011a1d2: mov eax, dword ptr [esi + 0x50]; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x0006552e: mov eax, dword ptr [esi + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x0006d6d1: mov eax, dword ptr [esi + 0x58]; mov dword ptr [esp], ebp; add eax, 0x2c; mov dword ptr [esp + 4], eax; call dword ptr [ebp + 0x18]; 
0x0006ccb8: mov eax, dword ptr [esi + 0x58]; mov dword ptr [esp], edx; add eax, 0x2c; mov dword ptr [esp + 4], eax; call dword ptr [edx + 4]; 
0x0006cacc: mov eax, dword ptr [esi + 0x58]; mov eax, dword ptr [eax + 0xb8]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000f16cf: mov eax, dword ptr [esi + 0xc]; mov dword ptr [ebp - 0x20], eax; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000e190e: mov eax, dword ptr [esi + 0xc]; mov dword ptr [esp], eax; call dword ptr [esi + 0x24]; 
0x0001cdd1: mov eax, dword ptr [esi + 0xc]; mov dword ptr [esp], eax; call dword ptr [esi + 4]; 
0x00112667: mov eax, dword ptr [esi + 4]; add edi, 0xc; mov dword ptr [esp + 0x14], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x0011eac7: mov eax, dword ptr [esi + 4]; lea edx, dword ptr [ebx + 0x3474]; mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 8]; 
0x00112693: mov eax, dword ptr [esi + 4]; mov bp, 1; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x00114140: mov eax, dword ptr [esi + 4]; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x0011416f: mov eax, dword ptr [esi + 4]; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x0011262f: mov eax, dword ptr [esi + 4]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000bd175: mov eax, dword ptr [esi + 4]; mov eax, dword ptr [eax + edi]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x0011cc20: mov eax, dword ptr [esi + 8]; lea edx, dword ptr [esp + 0x4d0]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x00112589: mov eax, dword ptr [esi + 8]; mov dword ptr [esp], edi; mov dword ptr [esp + 4], eax; call dword ptr [esi + 0xc]; 
0x0011cd7d: mov eax, dword ptr [esi + 8]; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x0011cd40: mov eax, dword ptr [esi + 8]; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x000f7061: mov eax, dword ptr [esi + 8]; mov ebx, dword ptr [esp + 0x14]; mov dword ptr [esi + 8], edx; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000729f0: mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x18]; 
0x00042fc9: mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp + 4], ecx; sub edx, ecx; mov dword ptr [esp + 8], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0006428d: mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x48]; 
0x0006aecf: mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp + 8], ebp; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x00042b2f: mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp + 8], edi; mov edx, dword ptr [ebp - 0x4ac]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x000568ba: mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp + 8], edx; mov dword ptr [ebp - 0x1120], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0006fa4f: mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp + 8], edx; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; call dword ptr [eax + 0x3c]; 
0x0006b8ec: mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0006f613: mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; add esp, 0x18; pop esi; ret; 
0x0006baab: mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x000648e5: mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x30]; 
0x000670b1: mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x34]; 
0x0007092c: mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x44]; 
0x0006b959: mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x00026923: mov eax, dword ptr [esi + eax]; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0006587f: mov eax, dword ptr [esi + edx + 0x94]; mov edx, dword ptr [esp + 0x40]; mov dword ptr [esp + 8], edi; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x0011424c: mov eax, dword ptr [esi]; add edx, ecx; mov dword ptr [esp + 4], edx; mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x0014b3c7: mov eax, dword ptr [esi]; mov dword ptr [eax + 8], 0; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x001144ec: mov eax, dword ptr [esi]; mov dword ptr [esp + 8], edi; mov dword ptr [esp], eax; call dword ptr [esi + 8]; 
0x00114969: mov eax, dword ptr [esi]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x000eb908: mov eax, dword ptr [esi]; mov dword ptr [esp], eax; call edi; 
0x0011b439: mov eax, dword ptr [esi]; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x0011b2cc: mov eax, dword ptr [esi]; mov edx, dword ptr [eax + 4]; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x0002da16: mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00127950: mov eax, dword ptr [esp + 0x10]; mov eax, dword ptr [eax]; add esp, 0xc; ret; 
0x0007c973: mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x00101943: mov eax, dword ptr [esp + 0x10]; pop esi; pop edi; pop ebp; ret; 
0x000eaeac: mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00019f37: mov eax, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x1c]; add esp, 0x24; ret; 
0x00064f81: mov eax, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x1c]; add esp, 0x2c; ret; 
0x00118f35: mov eax, dword ptr [esp + 0x1c4]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x00033358: mov eax, dword ptr [esp + 0x1c]; add esp, 0x28; pop ebx; ret; 
0x00126e5f: mov eax, dword ptr [esp + 0x1c]; add esp, 0x34; pop ebx; pop esi; ret; 
0x0007af1f: mov eax, dword ptr [esp + 0x1c]; mov dword ptr [ebx + 0x1968], 1; add esp, 0x28; pop ebx; ret; 
0x001111d0: mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000ed984: mov eax, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000ce8a3: mov eax, dword ptr [esp + 0x1c]; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; ret; 
0x000ce875: mov eax, dword ptr [esp + 0x1c]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000ed8b3: mov eax, dword ptr [esp + 0x1c]; mov esi, dword ptr [esp + 0x30]; add esp, 0x3c; ret; 
0x000e25b8: mov eax, dword ptr [esp + 0x20]; call 0xe2070; sub esp, 8; add esp, 0x1c; ret; 
0x000e3738: mov eax, dword ptr [esp + 0x20]; call 0xe31f0; sub esp, 8; add esp, 0x1c; ret; 
0x000b7d8a: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp + 4], eax; call 0xb7da0; add esp, 0x1c; ret; 
0x00102f9b: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call 0x102fb0; add esp, 0x1c; ret; 
0x0010316b: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call 0x103180; add esp, 0x1c; ret; 
0x0010347b: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call 0x103280; add esp, 0x1c; ret; 
0x00113033: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call 0x11ea10; add esp, 0x1c; ret; 
0x0011ec8a: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call 0x11eb00; add esp, 0x1c; ret; 
0x00027753: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call 0x276f0; add esp, 0x1c; ret; 
0x0003f7cb: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call 0x33fa0; add esp, 0x1c; ret; 
0x0003f7fb: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call 0x34040; add esp, 0x1c; ret; 
0x000388cb: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call 0x36110; add esp, 0x1c; ret; 
0x0003b84b: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call 0x38f30; add esp, 0x1c; ret; 
0x0003e6db: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call 0x3bef0; add esp, 0x1c; ret; 
0x0004c463: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call 0x424d0; add esp, 0x1c; ret; 
0x000546c3: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call 0x54660; add esp, 0x1c; ret; 
0x00055b83: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call 0x55ba0; add esp, 0x1c; ret; 
0x0006b383: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call 0x6b2b0; add esp, 0x1c; ret; 
0x00040e9b: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call 0x99b00; add esp, 0x1c; ret; 
0x00040ecb: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call 0x99ba0; add esp, 0x1c; ret; 
0x000a5fd3: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call 0xa5ff0; add esp, 0x1c; ret; 
0x000df683: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call 0xde7c0; add esp, 0x1c; ret; 
0x000eac9b: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call 0xea6f0; add esp, 0x1c; ret; 
0x000ec5bb: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call 0xec330; add esp, 0x1c; ret; 
0x000ec59b: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call 0xec440; add esp, 0x1c; ret; 
0x000faafe: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call edx; 
0x00124aae: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 0x10]; 
0x00124dba: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 0xc]; 
0x00124a46: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 4]; 
0x000276b4: mov eax, dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x000faaf6: mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call edx; 
0x00112a85: mov eax, dword ptr [esp + 0x289c]; lea edx, dword ptr [esp + 0x2898]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x000eb49d: mov eax, dword ptr [esp + 0x2c]; add esp, 0x38; pop ebx; ret; 
0x0011c2ea: mov eax, dword ptr [esp + 0x2c]; mov dword ptr [eax], 0xf; mov eax, dword ptr [ebp + 4]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x0010e58b: mov eax, dword ptr [esp + 0x30]; call 0x10cc60; add esp, 0x28; pop ebx; ret; 
0x001216f1: mov eax, dword ptr [esp + 0x30]; call 0x120d70; sub esp, 0x14; add esp, 0x2c; ret; 
0x000b08eb: mov eax, dword ptr [esp + 0x30]; call 0xae970; add esp, 0x2c; ret; 
0x000b2dcb: mov eax, dword ptr [esp + 0x30]; call 0xb09a0; add esp, 0x2c; ret; 
0x000d82ee: mov eax, dword ptr [esp + 0x30]; call 0xd7850; sub esp, 0x14; add esp, 0x2c; ret; 
0x000d8382: mov eax, dword ptr [esp + 0x30]; call 0xd7cd0; sub esp, 0x1c; add esp, 0x2c; ret; 
0x000b3dc2: mov eax, dword ptr [esp + 0x30]; mov dword ptr [esp + 4], eax; call 0xb46f0; add esp, 0x2c; ret; 
0x000b4342: mov eax, dword ptr [esp + 0x30]; mov dword ptr [esp + 4], eax; call 0xb48f0; add esp, 0x2c; ret; 
0x00101a83: mov eax, dword ptr [esp + 0x30]; mov dword ptr [esp], eax; call 0x101ab0; add esp, 0x2c; ret; 
0x00101bdb: mov eax, dword ptr [esp + 0x30]; mov dword ptr [esp], eax; call 0x101bf0; add esp, 0x2c; ret; 
0x00104a6b: mov eax, dword ptr [esp + 0x30]; mov dword ptr [esp], eax; call 0x104a80; add esp, 0x2c; ret; 
0x0010e3d3: mov eax, dword ptr [esp + 0x30]; mov dword ptr [esp], eax; call 0x10e2e0; add esp, 0x2c; ret; 
0x0010ec13: mov eax, dword ptr [esp + 0x30]; mov dword ptr [esp], eax; call 0x10e5a0; add esp, 0x2c; ret; 
0x00032143: mov eax, dword ptr [esp + 0x30]; mov dword ptr [esp], eax; call 0x31e40; add esp, 0x2c; ret; 
0x000345e3: mov eax, dword ptr [esp + 0x30]; mov dword ptr [esp], eax; call 0x340e0; add esp, 0x2c; ret; 
0x00034b13: mov eax, dword ptr [esp + 0x30]; mov dword ptr [esp], eax; call 0x34600; add esp, 0x2c; ret; 
0x000352b3: mov eax, dword ptr [esp + 0x30]; mov dword ptr [esp], eax; call 0x34b30; add esp, 0x2c; ret; 
0x000359f3: mov eax, dword ptr [esp + 0x30]; mov dword ptr [esp], eax; call 0x352d0; add esp, 0x2c; ret; 
0x0012eaab: mov eax, dword ptr [esp + 0x30]; mov dword ptr [esp], eax; call 0xffe30; add esp, 0x2c; ret; 
0x0006b18a: mov eax, dword ptr [esp + 0x34]; mov esi, dword ptr [esp + 0x20]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000b518a: mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call edi; 
0x00113856: mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp], ebp; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x18]; 
0x000ddbc5: mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 4], eax; call 0xddf70; add esp, 0x3c; ret; 
0x0011b123: mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp], eax; call 0x11ad10; add esp, 0x3c; ret; 
0x001195b0: mov eax, dword ptr [esp + 0x430]; mov edx, ebx; sub edx, dword ptr [ebx + eax*4 - 0x89a30]; jmp edx; 
0x000f2095: mov eax, dword ptr [esp + 0x44]; call 0xf1f70; add esp, 4; ret; 
0x00118cd7: mov eax, dword ptr [esp + 0x44]; call dword ptr [eax + 0x14]; 
0x000eeb7b: mov eax, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x1c], eax; xchg ebx, ecx; mov eax, 0x95; call dword ptr gs:[0x10]; 
0x000e73f8: mov eax, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000e7918: mov eax, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000194a0: mov eax, dword ptr [esp + 0x78]; mov dword ptr [esp + 4], eax; call esi; 
0x0012470d: mov eax, dword ptr [esp + 0x80]; mov dword ptr [esp], eax; call 0x1243e0; add esp, 0x78; pop ebx; ret; 
0x0002e441: mov eax, dword ptr [esp + 0x90]; add esp, 0x118; pop ebx; ret; 
0x0001f4a5: mov eax, dword ptr [esp + 0xa4]; mov dword ptr [esp + 4], eax; call dword ptr [esi]; 
0x0002f137: mov eax, dword ptr [esp + 0xa8]; mov dword ptr [esp + 0x14], eax; xchg edi, ebx; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0002d407: mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000ddae5: mov eax, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x14]; add esp, 0x18; ret; 
0x0002d7b0: mov eax, dword ptr [esp + 0xc]; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x000949d2: mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00148f12: mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0011f710: mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0010fae0: mov eax, dword ptr [esp + 4]; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x0002d4aa: mov eax, dword ptr [esp + 4]; add esp, 0xc; and eax, 0x80000000; ret; 
0x0006aa30: mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x00027030: mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0002d6f0: mov eax, dword ptr [esp + 4]; and eax, 0x80000000; ret; 
0x00105040: mov eax, dword ptr [esp + 4]; and eax, 0xffff; ror ax, 8; ret; 
0x00105030: mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x000d9366: mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x000d9350: mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00129914: mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x4c], edx; ret; 
0x000b3d90: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x00067920: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + 0x28]; ret; 
0x00073460: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x001298d0: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x48]; ret; 
0x00129900: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x00129920: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x00129990: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00129980: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x00129930: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x000e5db0: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x001298c4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x001298e4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0006a010: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00069fe0: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000b40c0: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x0011f720: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x000d8a50: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00073150: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00025200: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x000d8a28: mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00073470: mov eax, dword ptr [esp + 4]; ret; 
0x0006aa40: mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x10; setne al; movzx eax, al; ret; 
0x0006aa50: mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x20; setne al; movzx eax, al; ret; 
0x00069ff0: mov eax, dword ptr [esp + 4]; test byte ptr [eax], 4; sete al; movzx eax, al; ret; 
0x0006a000: mov eax, dword ptr [esp + 4]; test byte ptr [eax], 8; sete al; movzx eax, al; ret; 
0x0006c05c: mov eax, dword ptr [esp + 8]; add eax, esi; pop esi; ret; 
0x0007e061: mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x0002d65f: mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000d8a47: mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00136906: mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x000271d0: mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000271e0: mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002dd19: mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x000d89f7: mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x001331a5: mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0007c5b4: mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000915b2: mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00026a51: mov eax, dword ptr fs:[ebx - 0x60]; mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x00026a95: mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x00027015: mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00026fe5: mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00023be1: mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x58]; ret; 
0x00026f35: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x00026f05: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x00026ed5: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x00026e25: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00026e85: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00026da5: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00026e55: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00026df5: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x00026fc5: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00026dd5: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x00026eb5: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00026d85: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x000fefd1: mov eax, dword ptr gs:[eax]; ret; 
0x000fb7dc: mov eax, dword ptr gs:[eax]; test byte ptr [eax + edx*2 + 1], 0x40; setne al; movzx eax, al; pop ebx; ret; 
0x000e6066: mov eax, dword ptr gs:[ebp]; mov dword ptr [esp], eax; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0014b3c6: mov eax, dword ptr gs:[esi]; mov dword ptr [eax + 8], 0; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000a56be: mov eax, ebp; add esp, 0x10; pop esi; pop edi; pop ebp; ret; 
0x000b7e29: mov eax, ebp; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000f0b7c: mov eax, ebp; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x000c5842: mov eax, ebp; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000c5922: mov eax, ebp; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000e0dc4: mov eax, ebp; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0xfa; call dword ptr gs:[0x10]; 
0x000fc2ba: mov eax, ebp; mov ecx, 0x80; xor esi, esi; xchg ebx, edi; int 0x80; 
0x00112f89: mov eax, ebp; mov esi, dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x001125c9: mov eax, ebp; mov esi, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x34]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x00118c95: mov eax, ebp; mov esi, dword ptr [esp + 0x60]; mov edi, dword ptr [esp + 0x64]; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x00082745: mov eax, ebp; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00023e3d: mov eax, ebp; pop ebp; ret; 
0x0002f815: mov eax, ebp; pop ebx; pop ebp; pop esi; pop edi; ret; 
0x00120351: mov eax, ebp; pop ebx; pop esi; pop edi; pop ebp; ret 0x10; 
0x00023d53: mov eax, ebp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00023e05: mov eax, ebp; pop edi; pop ebp; ret; 
0x000347c0: mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x000c57da: mov eax, ebp; sar edi, 0x1f; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000c58ba: mov eax, ebp; sar edi, 0x1f; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00166564: mov eax, ebx; cld; ljmp ptr [ecx - 0x36000328]; fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x000278da: mov eax, ebx; sub eax, dword ptr [ebx + ebp*4 - 0x17b70c]; jmp eax; 
0x00063d38: mov eax, ebx; sub eax, dword ptr [ebx + ecx*4 - 0x13f2b0]; jmp eax; 
0x000631d0: mov eax, ebx; sub eax, dword ptr [ebx + ecx*4 - 0x13fe18]; jmp eax; 
0x0005c1b8: mov eax, ebx; sub eax, dword ptr [ebx + ecx*4 - 0x146e30]; jmp eax; 
0x001200f1: mov eax, ebx; sub eax, dword ptr [ebx + ecx*4 - 0x82ef4]; shr edx, 3; jmp eax; 
0x000b0c78: mov eax, ebx; sub eax, dword ptr [ebx + ecx*4 - 0xf2370]; jmp eax; 
0x00097588: mov eax, ebx; sub eax, dword ptr [ebx + edi*4 - 0x10ba60]; jmp eax; 
0x000dc3a7: mov eax, ebx; sub eax, dword ptr [ebx + edi*4 - 0xc6c40]; jmp eax; 
0x000dbb28: mov eax, ebx; sub eax, dword ptr [ebx + edi*4 - 0xc74c0]; jmp eax; 
0x0004cb6c: mov eax, ebx; sub eax, dword ptr [ebx + edx*4 - 0x15647c]; jmp eax; 
0x000cb893: mov eax, ebx; sub eax, dword ptr [ebx + edx*4 - 0xd7754]; jmp eax; 
0x00078788: mov eax, ebx; sub eax, dword ptr [ebx + esi*4 - 0x12a860]; jmp eax; 
0x000bad08: mov eax, ebx; sub eax, dword ptr [ebx + esi*4 - 0xe82e0]; jmp eax; 
0x000baca8: mov eax, ebx; sub eax, dword ptr [ebx + esi*4 - 0xe8340]; jmp eax; 
0x000ba2b0: mov eax, ebx; sub eax, dword ptr [ebx + esi*4 - 0xe8d38]; jmp eax; 
0x000b9d68: mov eax, ebx; sub eax, dword ptr [ebx + esi*4 - 0xe9280]; jmp eax; 
0x000b9d08: mov eax, ebx; sub eax, dword ptr [ebx + esi*4 - 0xe92e0]; jmp eax; 
0x0007a488: mov eax, ecx; and eax, 0xfffffff8; sub eax, 8; pop esi; ret; 
0x000276db: mov eax, ecx; call 0x272d0; mov eax, dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x00033158: mov eax, ecx; mov dword ptr [ecx + 0xc], edx; add esp, 0x3c; ret 4; 
0x00033061: mov eax, ecx; mov dword ptr [ecx + 4], edx; mov edi, dword ptr [esp + 4]; add esp, 8; ret 4; 
0x000559e1: mov eax, ecx; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000686b9: mov eax, ecx; mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x00067ffe: mov eax, ecx; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x001208e9: mov eax, ecx; pop ebp; ret 0x10; 
0x000d12f7: mov eax, ecx; pop ebp; ret 4; 
0x000ebe20: mov eax, ecx; pop ebp; ret; 
0x00120845: mov eax, ecx; pop ebx; pop esi; pop edi; pop ebp; ret 0x10; 
0x0001b18a: mov eax, ecx; pop ebx; pop esi; pop edi; pop ebp; ret 0xc; 
0x000d0fe6: mov eax, ecx; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00042098: mov eax, ecx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000b569c: mov eax, ecx; pop ebx; pop esi; ret; 
0x00047bf7: mov eax, ecx; pop edi; pop ebp; ret; 
0x000f7b03: mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x001142fa: mov eax, ecx; pop esi; ret; 
0x000b7c0c: mov eax, ecx; ret; 
0x000a55f2: mov eax, edi; add esp, 0x10; pop esi; pop edi; pop ebp; ret; 
0x0006b9f8: mov eax, edi; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00064e55: mov eax, edi; mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x00054c7b: mov eax, edi; mov ebx, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x44]; mov edi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x000e633a: mov eax, edi; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000e0cfd: mov eax, edi; mov edi, 8; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x00116d53: mov eax, edi; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000d9c58: mov eax, edi; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 8; 
0x00082976: mov eax, edi; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x00093d39: mov eax, edi; pop ebx; pop edi; ret; 
0x00017e74: mov eax, edi; pop ebx; pop esi; pop edi; pop ebp; ret 0x10; 
0x00120ea6: mov eax, edi; pop ebx; pop esi; pop edi; pop ebp; ret 0x14; 
0x00028f45: mov eax, edi; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00023ec6: mov eax, edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00047af9: mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00023efe: mov eax, edi; pop edi; pop ebp; ret; 
0x00087381: mov eax, edi; pop edi; pop ebx; ret; 
0x0008df30: mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x00085584: mov eax, edi; pop edi; ret; 
0x0005ea5b: mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x00099969: mov eax, edi; pop esi; pop edi; ret; 
0x000e88b4: mov eax, edx; add esp, 0x3c; ret; 
0x00054e44: mov eax, edx; add esp, 0x7c; ret; 
0x0010505a: mov eax, edx; and eax, 0xffffff; ret; 
0x0003ef2a: mov eax, edx; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0002e262: mov eax, edx; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0011bb86: mov eax, edx; mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x00041890: mov eax, edx; mov ebx, dword ptr [esp + 4]; mov esi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00078770: mov eax, edx; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00115109: mov eax, edx; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000ffd03: mov eax, edx; mov esi, dword ptr [ebp - 8]; mov edi, dword ptr [ebp - 4]; mov esp, ebp; pop ebp; ret; 
0x00112f45: mov eax, edx; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00114716: mov eax, edx; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0011f6c6: mov eax, edx; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0011efc8: mov eax, edx; mov esi, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x34]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x0011e666: mov eax, edx; mov esi, dword ptr [esp + 0x34]; mov edi, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x000827be: mov eax, edx; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000db8d6: mov eax, edx; pop ebp; ret 0x1c; 
0x000825e4: mov eax, edx; pop ebp; ret; 
0x0011b783: mov eax, edx; pop ebx; pop edi; ret; 
0x000d7a9c: mov eax, edx; pop ebx; pop esi; pop edi; pop ebp; ret 0x14; 
0x000db4bd: mov eax, edx; pop ebx; pop esi; pop edi; pop ebp; ret 0x1c; 
0x000d0823: mov eax, edx; pop ebx; pop esi; pop edi; pop ebp; ret 8; 
0x00022c9c: mov eax, edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000c6aa1: mov eax, edx; pop ebx; pop esi; ret; 
0x0004bc34: mov eax, edx; pop ebx; ret; 
0x0002f8ab: mov eax, edx; pop edi; pop ebp; ret; 
0x000db87e: mov eax, edx; pop esi; pop edi; pop ebp; ret 0x1c; 
0x000d0836: mov eax, edx; pop esi; pop edi; pop ebp; ret 8; 
0x00022e68: mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0002fe75: mov eax, edx; pop esi; pop edi; ret; 
0x0006b912: mov eax, edx; pop esi; ret; 
0x0002ee69: mov eax, edx; ret; 
0x00110173: mov eax, edx; shl eax, 4; add eax, 8; ret; 
0x001050fa: mov eax, edx; shr eax, 0x18; ret; 
0x000ba022: mov eax, es; sti; jmp dword ptr [ebp - 0x75]; 
0x0014a471: mov eax, esi; add eax, dword ptr [edx + 8]; mov dword ptr [esp], eax; call edi; 
0x00095e6e: mov eax, esi; add esp, 8; pop esi; pop edi; pop ebp; ret; 
0x00120618: mov eax, esi; call 0x1201f0; sub esp, 0x10; add esp, 0x18; pop esi; ret; 
0x00120ce7: mov eax, esi; call 0x1206a0; sub esp, 0x10; add esp, 0x18; pop esi; ret; 
0x0006f608: mov eax, esi; call 0x6f3b0; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000332e7: mov eax, esi; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0007032b: mov eax, esi; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00054d45: mov eax, esi; mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000edd6c: mov eax, esi; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x001121a1: mov eax, esi; mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x54]; mov edi, dword ptr [esp + 0x58]; add esp, 0x5c; ret; 
0x000eaf2e: mov eax, esi; mov ebx, dword ptr [esp + 0x70]; mov esi, dword ptr [esp + 0x74]; mov edi, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x0007a6f8: mov eax, esi; mov ebx, dword ptr [esp + 4]; mov esi, dword ptr [esp + 8]; add esp, 0xc; ret 4; 
0x000b84bd: mov eax, esi; mov ecx, 0x81; xchg ebx, edi; int 0x80; 
0x0002e3de: mov eax, esi; mov edi, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x0010fc55: mov eax, esi; mov edi, dword ptr [esp + 0x1c]; mov esi, dword ptr [esp + 0x18]; mov ebp, dword ptr [esp + 0x20]; add esp, 0x24; ret; 
0x0002ef91: mov eax, esi; mov edi, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x20]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000e5b71: mov eax, esi; mov edi, dword ptr [esp + 0x34]; mov esi, dword ptr [esp + 0x30]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x00082f17: mov eax, esi; mov edi, dword ptr [esp + 4]; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x0009aa69: mov eax, esi; mov edx, edi; pop esi; pop edi; pop ebp; ret; 
0x000f126f: mov eax, esi; mov esi, dword ptr [esp + 0x14]; cmovbe eax, dword ptr [esp + 8]; add esp, 0x1c; ret; 
0x000ab34e: mov eax, esi; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0012ba7e: mov eax, esi; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0007e333: mov eax, esi; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x000cd40d: mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x000e2435: mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret 8; 
0x00017349: mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00042172: mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00041df9: mov eax, esi; pop ebx; pop esi; ret; 
0x00027a09: mov eax, esi; pop esi; pop edi; pop ebp; ret 4; 
0x000ceca5: mov eax, esi; pop esi; pop edi; pop ebp; ret 8; 
0x0002ad61: mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x000980e4: mov eax, esi; pop esi; pop edi; ret; 
0x00080473: mov eax, esi; pop esi; ret; 
0x0012ea69: mov eax, esi; ror edx, 9; xor edx, dword ptr gs:[0x18]; call edx; 
0x00095962: mov ebp, 0x30f801ff; in eax, dx; add eax, ecx; pop edi; ret; 
0x001993b2: mov ebp, 0x43140e0a; ret; 
0x00112697: mov ebp, 0x54890001; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x00132a6f: mov ebp, 0x5b000000; ret; 
0x000f8f27: mov ebp, 0x5b2cc483; pop esi; pop edi; pop ebp; ret; 
0x00095126: mov ebp, 0x5ff801c0; ret; 
0x00095925: mov ebp, 0x5ff801ff; ret; 
0x0016d208: mov ebp, 0x80fff9ca; mov edi, 0xcad40002; stc; jmp eax; 
0x0011c4b2: mov ebp, 0x810000d8; ret; 
0x0010e5b2: mov ebp, 0x810001b7; ret; 
0x0010c6b2: mov ebp, 0x810001d6; ret; 
0x00104bb2: mov ebp, 0x81000251; ret; 
0x001035b2: mov ebp, 0x81000267; ret; 
0x000f47b2: mov ebp, 0x81000355; ret; 
0x000f1bb2: mov ebp, 0x81000381; ret; 
0x000eb4b2: mov ebp, 0x810003e8; ret; 
0x000ea6b2: mov ebp, 0x810003f6; ret; 
0x000c5cb2: mov ebp, 0x81000640; ret; 
0x00099ab2: mov ebp, 0x81000902; ret; 
0x0007e1b2: mov ebp, 0x81000abb; ret; 
0x0007dfb2: mov ebp, 0x81000abd; ret; 
0x0007d1b2: mov ebp, 0x81000acb; ret; 
0x0007c3b2: mov ebp, 0x81000ad9; ret; 
0x000705b2: mov ebp, 0x81000b97; ret; 
0x0006aab2: mov ebp, 0x81000bf2; ret; 
0x000696b2: mov ebp, 0x81000c06; ret; 
0x00033eb2: mov ebp, 0x81000f5e; ret; 
0x00032db2: mov ebp, 0x81000f6f; ret; 
0x0014b2b2: mov ebp, 0x81fffdea; ret; 
0x0001aeef: mov ebp, 0x85000d0c; sal byte ptr [ecx + edx - 0x75], 0; mov eax, dword ptr [eax + 4]; add esp, 0x28; pop ebx; ret; 
0x0007562c: mov ebp, 0x89000005; ret 0xd285; 
0x00112f3f: mov ebp, 0x890000bb; ret 0xd089; 
0x0006eccf: mov ebp, 0x89ffffd2; ret 0x68b; 
0x000b9def: mov ebp, 0x89fffffa; ret 0x768d; 
0x001145ff: mov ebp, 0x89fffffe; ret 0xc031; 
0x0019afad: mov ebp, 0xb5800002; clc; jmp dword ptr [eax]; 
0x0000172c: mov ebp, 0xbe000007; pop es; add byte ptr [eax], al; ret 7; 
0x00001584: mov ebp, 0xbf000006; push es; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret 6; 
0x0015286c: mov ebp, 0xc000000e; push cs; add byte ptr [eax], al; ret; 
0x0008e9b7: mov ebp, 0xc03000c; cdq; jmp ecx; 
0x00157a5d: mov ebp, 0xc1c0bfbe; ret 0xc4c3; 
0x000de03a: mov ebp, 0xc3810004; mov bh, 0x4f; or al, 0; xchg edi, ebx; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0014b242: mov ebp, 0xc483ffec; sub al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0016d195: mov ebp, 0xc66a0002; stc; jmp eax; 
0x0016d1bd: mov ebp, 0xc7c50002; stc; call eax; 
0x0019b4a1: mov ebp, 0xda880002; clc; call dword ptr [eax]; 
0x0019b471: mov ebp, 0xdaa80002; clc; call dword ptr [eax]; 
0x0019b441: mov ebp, 0xdac80002; clc; call dword ptr [eax]; 
0x0019b411: mov ebp, 0xdae80002; clc; call dword ptr [eax]; 
0x00168795: mov ebp, 0xdf840000; in al, dx; call dword ptr [eax - 0x43]; 
0x001687b5: mov ebp, 0xe0840000; in al, dx; call eax; 
0x000fc2b5: mov ebp, 0xf0; mov eax, ebp; mov ecx, 0x80; xor esi, esi; xchg ebx, edi; int 0x80; 
0x0017b415: mov ebp, 0xf62d0000; out dx, eax; call dword ptr [eax]; 
0x0017b3e5: mov ebp, 0xf64d0000; out dx, eax; call dword ptr [eax]; 
0x0017b3b5: mov ebp, 0xf66d0000; out dx, eax; call dword ptr [eax]; 
0x000598ff: mov ebp, 0xffffef5c; or cl, byte ptr [edi]; test byte ptr [edi], bl; add dword ptr [eax], eax; add byte ptr [ebx - 0x10a343], al; call dword ptr [eax]; 
0x0005a493: mov ebp, 0xffffef64; or cl, byte ptr [edi]; test dl, ch; adc byte ptr [eax], al; add byte ptr [ebx - 0x109b43], al; call dword ptr [eax]; 
0x00043356: mov ebp, 0xfffffacc; mov dword ptr [ebp - 0x4f4], eax; mov dword ptr [ebp - 0x54c], ecx; jmp edx; 
0x0004504b: mov ebp, 0xfffffb48; jmp edx; 
0x000f1611: mov ebp, 0xfffffbf4; mov ecx, dword ptr [ebp - 0x3fc]; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000f15a5: mov ebp, 0xfffffbf4; mov edx, 0x40; mov ecx, dword ptr [ebp - 0x3fc]; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0004d387: mov ebp, 0xfffffe74; inc edi; test dword ptr [esi + edi*8 - 1], ebx; call dword ptr [eax]; 
0x0005fc18: mov ebp, 0xffffff0c; add byte ptr [edi], cl; test byte ptr [eax - 0x1600002b], ch; ret; 
0x0001895f: mov ebp, 0xffffff4c; add byte ptr [esi - 1], dh; test dword ptr [edi + edi*8 - 1], eax; inc dword ptr [ebx - 0xb77b]; jmp dword ptr [eax]; 
0x0011aca8: mov ebp, 0xffffff58; mov eax, dword ptr [ecx]; mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp + 4], edi; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x0002a2db: mov ebp, 0xffffff64; mov esi, dword ptr [ebp - 0x94]; mov ecx, edx; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000eeee8: mov ebp, 8; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x00060479: mov ebp, dword ptr [eax + 0x1fffffe]; ror byte ptr [ecx - 0x1037b], 1; jmp dword ptr [ebp - 0x75]; 
0x0002dd16: mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x000703c0: mov ebp, dword ptr [eax + edi*8 + 0x748bffff]; and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov dword ptr [edx + 0xb8], ecx; add esp, 0x1c; ret; 
0x00076e1c: mov ebp, dword ptr [ebx - 0x15c]; mov dword ptr [esp], edx; mov dword ptr [esp + 0x28], edx; call dword ptr [ebp]; 
0x0010357f: mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x0010b289: mov ebp, dword ptr [edx]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0006d610: mov ebp, dword ptr [esi + 0x54]; mov dword ptr [esp], ebp; call dword ptr [ebp + 0x10]; 
0x00001b11: mov ebp, dword ptr [esi + ebx*8 + 0x6d]; ret 0x1bb7; 
0x00054afe: mov ebp, dword ptr [esp + 0x1038]; add esp, 0x103c; ret; 
0x000aae49: mov ebp, dword ptr [esp + 0x108]; add esp, 0x10c; ret; 
0x0002c820: mov ebp, dword ptr [esp + 0x10]; add esp, 0x14; ret; 
0x000e1136: mov ebp, dword ptr [esp + 0x118]; add esp, 0x11c; ret; 
0x000692fd: mov ebp, dword ptr [esp + 0x128]; add esp, 0x12c; ret; 
0x0002e03b: mov ebp, dword ptr [esp + 0x12c]; add esp, 0x130; ret; 
0x001187ed: mov ebp, dword ptr [esp + 0x138]; add esp, 0x13c; ret; 
0x0002ec60: mov ebp, dword ptr [esp + 0x148]; add esp, 0x14c; ret; 
0x000830bc: mov ebp, dword ptr [esp + 0x14]; add esp, 0x18; ret; 
0x000b9e0f: mov ebp, dword ptr [esp + 0x168]; add esp, 0x16c; ret; 
0x000ca368: mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret 0xc; 
0x00019d90: mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000e0df2: mov ebp, dword ptr [esp + 0x18]; cmova eax, edx; add esp, 0x1c; ret; 
0x0001992b: mov ebp, dword ptr [esp + 0x18]; mov dword ptr [ebx + 0x368c], ecx; mov ebx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x000e7d13: mov ebp, dword ptr [esp + 0x1b8]; add esp, 0x1bc; ret; 
0x0007e9ee: mov ebp, dword ptr [esp + 0x1c]; add esp, 0x20; ret; 
0x000f11d4: mov ebp, dword ptr [esp + 0x1c]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0003105e: mov ebp, dword ptr [esp + 0x20]; add esp, 0x24; ret; 
0x000982d0: mov ebp, dword ptr [esp + 0x24]; add esp, 0x28; ret; 
0x0002f3bb: mov ebp, dword ptr [esp + 0x258]; add esp, 0x25c; ret; 
0x0012755d: mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 4; 
0x000d9c62: mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 8; 
0x00019bd3: mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x00127a0b: mov ebp, dword ptr [esp + 0x28]; cmovbe eax, edx; add esp, 0x2c; ret; 
0x000eeaed: mov ebp, dword ptr [esp + 0x28]; int 0x80; 
0x000e0e18: mov ebp, dword ptr [esp + 0x28]; mov eax, 0x110; call dword ptr gs:[0x10]; 
0x000e4f18: mov ebp, dword ptr [esp + 0x28]; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x0006b29a: mov ebp, dword ptr [esp + 0x298]; add esp, 0x29c; ret; 
0x000ef1d4: mov ebp, dword ptr [esp + 0x30]; add esp, 0x34; ret; 
0x000b38a0: mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret 4; 
0x0001bb59: mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret 8; 
0x0001ba37: mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x000e625d: mov ebp, dword ptr [esp + 0x3c]; add esp, 0x40; ret; 
0x000547e2: mov ebp, dword ptr [esp + 0x438]; add esp, 0x43c; ret; 
0x0011959c: mov ebp, dword ptr [esp + 0x458]; add esp, 0x45c; ret; 
0x0011565f: mov ebp, dword ptr [esp + 0x488]; add esp, 0x48c; ret; 
0x000d7dd1: mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret 0x1c; 
0x0011b5c6: mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret 8; 
0x0001a336: mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x000d953a: mov ebp, dword ptr [esp + 0x548]; add esp, 0x54c; ret; 
0x00054a13: mov ebp, dword ptr [esp + 0x58]; add esp, 0x5c; ret; 
0x000e60b5: mov ebp, dword ptr [esp + 0x60]; add esp, 0x64; ret; 
0x0011c327: mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret 0xc; 
0x00023516: mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret 8; 
0x00066347: mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x0002d8eb: mov ebp, dword ptr [esp + 0x78]; add esp, 0x7c; fsubp st(1); ret; 
0x0002d864: mov ebp, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x0005ba05: mov ebp, dword ptr [esp + 0x81b8]; add esp, 0x81bc; ret; 
0x000987d3: mov ebp, dword ptr [esp + 0x88]; add esp, 0x8c; ret; 
0x000e3ce9: mov ebp, dword ptr [esp + 0x98]; add esp, 0x9c; ret 4; 
0x0002331f: mov ebp, dword ptr [esp + 0x98]; add esp, 0x9c; ret; 
0x0006f6fd: mov ebp, dword ptr [esp + 0xa8]; add esp, 0xac; ret; 
0x000e172d: mov ebp, dword ptr [esp + 0xb8]; add esp, 0xbc; ret 8; 
0x000de311: mov ebp, dword ptr [esp + 0xc8]; add esp, 0xcc; ret; 
0x0007ebfe: mov ebp, dword ptr [esp + 0xc]; add esp, 0x10; ret; 
0x000eba24: mov ebp, dword ptr [esp + 0xc]; mov dword ptr [edi + 8], eax; mov edi, dword ptr [esp + 8]; add esp, 0x10; ret; 
0x0006d7ca: mov ebp, dword ptr [esp + 0xd8]; add esp, 0xdc; ret; 
0x00068f55: mov ebp, dword ptr [esp + 0xe8]; add esp, 0xec; ret; 
0x000de485: mov ebp, dword ptr [esp + 0xf8]; add esp, 0xfc; ret; 
0x0002692d: mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000f3b5a: mov ebp, dword ptr [esp + 8]; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x1000; ret; 
0x000f3aba: mov ebp, dword ptr [esp + 8]; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x100; ret; 
0x000f3a1a: mov ebp, dword ptr [esp + 8]; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x2000; ret; 
0x000f379a: mov ebp, dword ptr [esp + 8]; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x200; ret; 
0x000f38da: mov ebp, dword ptr [esp + 8]; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x4000; ret; 
0x000f351a: mov ebp, dword ptr [esp + 8]; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x400; ret; 
0x000f383a: mov ebp, dword ptr [esp + 8]; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x8000; ret; 
0x000f35ba: mov ebp, dword ptr [esp + 8]; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 1; ret; 
0x000f365a: mov ebp, dword ptr [esp + 8]; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 2; ret; 
0x000f397a: mov ebp, dword ptr [esp + 8]; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 4; ret; 
0x000f347a: mov ebp, dword ptr [esp + 8]; movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 8; ret; 
0x000fe87e: mov ebp, dword ptr [esp + ebp]; add byte ptr [edx], al; add esp, 0x18; pop ebx; ret; 
0x0011c326: mov ebp, dword ptr fs:[esp + 0x68]; add esp, 0x6c; ret 0xc; 
0x00023515: mov ebp, dword ptr fs:[esp + 0x68]; add esp, 0x6c; ret 8; 
0x00066346: mov ebp, dword ptr fs:[esp + 0x68]; add esp, 0x6c; ret; 
0x0010b288: mov ebp, dword ptr gs:[edx]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000f0e44: mov ebp, eax; mov eax, 0xb; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000f0f38: mov ebp, eax; mov eax, 0xc; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00023e3b: mov ebp, eax; mov eax, ebp; pop ebp; ret; 
0x000de962: mov ebp, eax; xchg edi, ebx; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000f0c9c: mov ebp, eax; xchg edi, ebx; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x000b7ca7: mov ebp, eax; xchg edi, ebx; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x0017aae1: mov ebp, edi; call dword ptr [edx]; 
0x0017cb0a: mov ebp, edi; jmp dword ptr [edx]; 
0x00173d36: mov ebp, esp; jmp dword ptr [edx]; 
0x001754f9: mov ebp, ss; in eax, dx; jmp dword ptr [edx]; 
0x0003f855: mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000f04d1: mov ebx, 0x10; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f04f8: mov ebx, 0x10; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f03d1: mov ebx, 0x11; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f03f8: mov ebx, 0x11; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0a71: mov ebx, 0x12; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0a98: mov ebx, 0x12; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0017dc4d: mov ebx, 0x140e0a03; inc ebx; ret; 
0x0009474b: mov ebx, 0x3000c61; or al, 0x91; jmp ecx; 
0x0018ad55: mov ebx, 0x3c980001; cmc; jmp dword ptr [edx]; 
0x000fc230: mov ebx, 0x740af983; or eax, dword ptr [ebx - 0x2f76f73c]; pop ebx; ret; 
0x0017ad3d: mov ebx, 0x7d00000; sti; jmp edx; 
0x0011b9b4: mov ebx, 0x810000e3; ret; 
0x001095b4: mov ebx, 0x81000207; ret; 
0x000fbfb4: mov ebx, 0x810002dd; ret; 
0x000fbab4: mov ebx, 0x810002e2; ret; 
0x000fb8b4: mov ebx, 0x810002e4; ret; 
0x000ec9b4: mov ebx, 0x810003d3; ret; 
0x000b54b4: mov ebx, 0x81000748; ret; 
0x000a0fb4: mov ebx, 0x8100088d; ret; 
0x000269b4: mov ebx, 0x81001033; ret; 
0x0012b8b4: mov ebx, 0x81ffffe4; ret; 
0x000714e1: mov ebx, 0x83fffffb; clc; dec dword ptr [edi]; xchg eax, esp; ret 0x57e9; 
0x000a828c: mov ebx, 0x85fffffc; ror byte ptr [edi], cl; xchg eax, ebp; ret 0xb60f; 
0x000f123b: mov ebx, 0x89000b1d; pop esp; and al, 0xc; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0002508e: mov ebx, 0x89fffffe; rol dword ptr [edi + 0x6b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014b378: mov ebx, 0x8bffec; mov dword ptr [esp], eax; call 0x16f50; add esp, 0x18; pop ebx; ret; 
0x0011b5e1: mov ebx, 0x8bfff9da; push esp; and al, 0x2c; mov dword ptr [esp + 4], edi; mov dword ptr [esp], eax; call edx; 
0x0019ad01: mov ebx, 0xa53c0002; clc; jmp dword ptr [edi]; 
0x000f02d1: mov ebx, 0xa; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f02f8: mov ebx, 0xa; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0551: mov ebx, 0xb; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0578: mov ebx, 0xb; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00157a5b: mov ebx, 0xbfbebdbc; rol cl, 0xc2; ret; 
0x0017adf5: mov ebx, 0xc080000; sti; jmp dword ptr [ebx]; 
0x000de1c9: mov ebx, 0xc3810004; sub byte ptr [esi + 0xc], cl; add byte ptr [edi + 0x10cb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002e1ec: mov ebx, 0xc381000f; add eax, 0x8700174e; sar dword ptr [eax + 0xb0], cl; call dword ptr gs:[0x10]; 
0x000f0351: mov ebx, 0xc; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0378: mov ebx, 0xc; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00175dac: mov ebx, 0xd1cffee; mov ch, 0xba; out dx, al; jmp dword ptr [edx]; 
0x000f0607: mov ebx, 0xd; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f05c7: mov ebx, 0xe; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0017b295: mov ebx, 0xf72d0000; out dx, eax; call dword ptr [eax]; 
0x0017b265: mov ebx, 0xf74d0000; out dx, eax; call dword ptr [eax]; 
0x0017b235: mov ebx, 0xf76d0000; out dx, eax; call dword ptr [eax]; 
0x0017b205: mov ebx, 0xf78d0000; out dx, eax; call dword ptr [eax]; 
0x0017b1d5: mov ebx, 0xf7ad0000; out dx, eax; call dword ptr [eax]; 
0x000f0247: mov ebx, 0xf; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0007c900: mov ebx, 0xfefefeff; and ecx, 3; call 0x7c90d; pop edx; lea ecx, dword ptr [edx + ecx*8 + 0xb]; jmp ecx; 
0x0007e3d0: mov ebx, 0xfefefeff; and ecx, 3; call 0x7e3dd; pop edx; lea ecx, dword ptr [edx + ecx*8 + 0xb]; jmp ecx; 
0x0008306b: mov ebx, 0xffee0080; jmp edx; 
0x0009758c: mov ebx, 0xffef45a0; jmp eax; 
0x000dbb2c: mov ebx, 0xfff38b40; jmp eax; 
0x000dc3ab: mov ebx, 0xfff393c0; jmp eax; 
0x000f0647: mov ebx, 1; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0107: mov ebx, 2; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0003f89a: mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000f0151: mov ebx, 3; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0178: mov ebx, 3; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0287: mov ebx, 4; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0091: mov ebx, 5; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f00b8: mov ebx, 5; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0207: mov ebx, 6; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f01c7: mov ebx, 7; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0687: mov ebx, 8; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0451: mov ebx, 9; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0478: mov ebx, 9; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0003f8d1: mov ebx, dword ptr [eax + 0x34]; mov edx, dword ptr [eax + 0x38]; mov ecx, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + 0x40]; ret; 
0x000f1cf5: mov ebx, dword ptr [ebp - 0xc]; mov edi, dword ptr [ebp - 4]; mov esp, ebp; pop ebp; ret; 
0x00103577: mov ebx, dword ptr [ecx]; mov esi, dword ptr [ecx + 4]; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x000ef6b6: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000eb2f3: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x000efc46: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000efd56: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000efec3: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x000ef8e3: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x000ef753: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x000e7e6d: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000ef933: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x000efa93: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x000efa43: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x00123dd3: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xbc; call dword ptr gs:[0x10]; 
0x00123e93: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xbd; call dword ptr gs:[0x10]; 
0x000ed723: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x000ed693: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x000ed4e3: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012e523: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xfa; call dword ptr gs:[0x10]; 
0x000ddae9: mov ebx, dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x14]; add esp, 0x18; ret; 
0x0007b2a1: mov ebx, dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0001af58: mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00109843: mov ebx, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x000d94a6: mov ebx, dword ptr [esp + 0x14]; cmove eax, esi; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000703c9: mov ebx, dword ptr [esp + 0x14]; mov dword ptr [edx + 0xb8], ecx; add esp, 0x1c; ret; 
0x000d802f: mov ebx, dword ptr [esp + 0x14]; mov dword ptr [esi + 0x14], 0; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000f70b4: mov ebx, dword ptr [esp + 0x14]; mov dword ptr [esi + 0xc], edx; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000f7014: mov ebx, dword ptr [esp + 0x14]; mov dword ptr [esi + 4], edx; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000f7064: mov ebx, dword ptr [esp + 0x14]; mov dword ptr [esi + 8], edx; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000eb62a: mov ebx, dword ptr [esp + 0x14]; mov dword ptr gs:[eax], 0x16; add esp, 0x1c; ret; 
0x00032812: mov ebx, dword ptr [esp + 0x14]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x0002c8b2: mov ebx, dword ptr [esp + 0x14]; mov dword ptr gs:[eax], 9; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x000efb42: mov ebx, dword ptr [esp + 0x14]; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000eeb18: mov ebx, dword ptr [esp + 0x14]; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000ef398: mov ebx, dword ptr [esp + 0x14]; mov eax, 0x153; call dword ptr gs:[0x10]; 
0x000effd8: mov ebx, dword ptr [esp + 0x14]; mov eax, 0x15b; call dword ptr gs:[0x10]; 
0x000f0038: mov ebx, dword ptr [esp + 0x14]; mov eax, 0x15c; call dword ptr gs:[0x10]; 
0x000e7ea1: mov ebx, dword ptr [esp + 0x14]; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x00040c44: mov ebx, dword ptr [esp + 0x14]; mov eax, dword ptr [eax + 0x34]; add esp, 0x1c; ret; 
0x00023919: mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0011fc62: mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; mov dword ptr [eax], 0; add esp, 0x1c; ret; 
0x000739e4: mov ebx, dword ptr [esp + 0x14]; or dword ptr [esi], 8; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0002dbfa: mov ebx, dword ptr [esp + 0x14]; xor eax, eax; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000efb7c: mov ebx, dword ptr [esp + 0x18]; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000eaea8: mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000eebe7: mov ebx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x00019865: mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x00126d31: mov ebx, dword ptr [esp + 0x24]; mov dword ptr [esi + 0xc], eax; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0012ba7a: mov ebx, dword ptr [esp + 0x24]; mov eax, esi; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x001007ac: mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret 4; 
0x000caf60: mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0006cbca: mov ebx, dword ptr [esp + 0x30]; mov esi, dword ptr [esp + 0x34]; mov edi, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x000b94e3: mov ebx, dword ptr [esp + 0x34]; mov edi, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x00054c7d: mov ebx, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x44]; mov edi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x00117844: mov ebx, dword ptr [esp + 0x44]; mov esi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x001121a3: mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x54]; mov edi, dword ptr [esp + 0x58]; add esp, 0x5c; ret; 
0x001127cf: mov ebx, dword ptr [esp + 0x60]; mov esi, dword ptr [esp + 0x64]; mov edi, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x000b464d: mov ebx, dword ptr [esp + 0x70]; mov esi, dword ptr [esp + 0x74]; mov edi, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x00019935: mov ebx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x000ef688: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000efc18: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000efd28: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000efdee: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000ef33e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000eff3b: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000b7dae: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000efade: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x000eb21b: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000e134e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000ed52e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x000ed5be: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x000ed40e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x000e139e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x000ef62e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000dec1b: mov ebx, dword ptr [esp + 0xc]; mov eax, 3; call dword ptr gs:[0x10]; 
0x000dec9b: mov ebx, dword ptr [esp + 0xc]; mov eax, 4; call dword ptr gs:[0x10]; 
0x000de77b: mov ebx, dword ptr [esp + 0xc]; mov eax, 5; call dword ptr gs:[0x10]; 
0x000b7d2b: mov ebx, dword ptr [esp + 0xc]; mov eax, 7; call dword ptr gs:[0x10]; 
0x00077332: mov ebx, dword ptr [esp + 4]; mov dword ptr gs:[eax], 0xc; xor eax, eax; add esp, 0xc; ret; 
0x000ef856: mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x000efc92: mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x000efda6: mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x000efe36: mov ebx, dword ptr [esp + 4]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000ef5e2: mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x000df5b6: mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x000ef812: mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x000efe76: mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x000ef4e6: mov ebx, dword ptr [esp + 4]; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x000e81b2: mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x000eff86: mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x000eed02: mov ebx, dword ptr [esp + 4]; mov eax, 0x16; call dword ptr gs:[0x10]; 
0x000aac82: mov ebx, dword ptr [esp + 4]; mov eax, 0x19; call dword ptr gs:[0x10]; 
0x000b7ed2: mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x000ddb16: mov ebx, dword ptr [esp + 4]; mov eax, 0x1e; call dword ptr gs:[0x10]; 
0x000ded26: mov ebx, dword ptr [esp + 4]; mov eax, 0x21; call dword ptr gs:[0x10]; 
0x0002e1a6: mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00055506: mov ebx, dword ptr [esp + 4]; mov eax, 0x26; call dword ptr gs:[0x10]; 
0x000de6a6: mov ebx, dword ptr [esp + 4]; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000e0bb2: mov ebx, dword ptr [esp + 4]; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x000df4b2: mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x000df572: mov ebx, dword ptr [esp + 4]; mov eax, 0x2a; call dword ptr gs:[0x10]; 
0x000e8012: mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x000eed46: mov ebx, dword ptr [esp + 4]; mov eax, 0x34; call dword ptr gs:[0x10]; 
0x000b92e6: mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x000de562: mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x000de562: mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000e8052: mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x000df4f6: mov ebx, dword ptr [esp + 4]; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x000e7d46: mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x000ef2f6: mov ebx, dword ptr [esp + 4]; mov eax, 0x4b; call dword ptr gs:[0x10]; 
0x000ef2b6: mov ebx, dword ptr [esp + 4]; mov eax, 0x4c; call dword ptr gs:[0x10]; 
0x000e67c6: mov ebx, dword ptr [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000a8466: mov ebx, dword ptr [esp + 4]; mov eax, 0x4e; call dword ptr gs:[0x10]; 
0x000a84a6: mov ebx, dword ptr [esp + 4]; mov eax, 0x4f; call dword ptr gs:[0x10]; 
0x000e09d6: mov ebx, dword ptr [esp + 4]; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x000efcd2: mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x000e84b6: mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x000eb166: mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x000e97a6: mov ebx, dword ptr [esp + 4]; mov eax, 0x5c; call dword ptr gs:[0x10]; 
0x000e97e6: mov ebx, dword ptr [esp + 4]; mov eax, 0x5d; call dword ptr gs:[0x10]; 
0x000de5c6: mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x000de136: mov ebx, dword ptr [esp + 4]; mov eax, 0x63; call dword ptr gs:[0x10]; 
0x000de176: mov ebx, dword ptr [esp + 4]; mov eax, 0x64; call dword ptr gs:[0x10]; 
0x000aac06: mov ebx, dword ptr [esp + 4]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x000eea52: mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x000e8472: mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x000ef272: mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x000e84f2: mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x000efbc2: mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x000e809c: mov ebx, dword ptr [esp + 4]; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x000e7e16: mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000b7ba2: mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x000ef3e2: mov ebx, dword ptr [esp + 4]; mov eax, 0x7c; call dword ptr gs:[0x10]; 
0x000ef702: mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000b92a2: mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x000df6e2: mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x000ef426: mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x000ef9b2: mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000df1c6: mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000b9362: mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x000e814c: mov ebx, dword ptr [esp + 4]; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000eb336: mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x000eb376: mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000eb3b2: mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000c53b6: mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000c53f6: mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000c5472: mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000c54f2: mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000c5532: mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x000c5576: mov ebx, dword ptr [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000b81f0: mov ebx, dword ptr [esp + 4]; mov eax, 0xa2; call dword ptr gs:[0x10]; 
0x000eea96: mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x000e0b12: mov ebx, dword ptr [esp + 4]; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x000ef466: mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x000ef4a6: mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0002e776: mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000df6a2: mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000ef9f6: mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x000ed6d6: mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x000ed646: mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x000ed496: mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000de586: mov ebx, dword ptr [esp + 4]; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x000b85c4: mov ebx, dword ptr [esp + 4]; mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x000ef5a2: mov ebx, dword ptr [esp + 4]; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x000dda72: mov ebx, dword ptr [esp + 4]; mov eax, 1; call dword ptr gs:[0x10]; 
0x000deb7c: mov ebx, dword ptr [esp + 4]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000df600: mov ebx, dword ptr [esp + 4]; mov eax, 8; call dword ptr gs:[0x10]; 
0x000e0926: mov ebx, dword ptr [esp + 4]; mov eax, 9; call dword ptr gs:[0x10]; 
0x001028ff: mov ebx, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0007a6fa: mov ebx, dword ptr [esp + 4]; mov esi, dword ptr [esp + 8]; add esp, 0xc; ret 4; 
0x00041892: mov ebx, dword ptr [esp + 4]; mov esi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000ef799: mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x000dece9: mov ebx, dword ptr [esp + 8]; mov eax, 0x13; call dword ptr gs:[0x10]; 
0x000df539: mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x000eff13: mov ebx, dword ptr [esp + 8]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000e6d09: mov ebx, dword ptr [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000e0a79: mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000e6ac9: mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x000eea19: mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x000ef899: mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000aac49: mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000ef239: mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x000eb1a9: mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x000ef529: mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000ef569: mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000eb1f3: mov ebx, dword ptr [esp + 8]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000c5439: mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000b8216: mov ebx, dword ptr [esp + 8]; mov eax, 0xa2; call dword ptr gs:[0x10]; 
0x000ef979: mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eb2a9: mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x000eb269: mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000ed579: mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x000ed609: mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x000ed459: mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000debf3: mov ebx, dword ptr [esp + 8]; mov eax, 3; call dword ptr gs:[0x10]; 
0x000dec73: mov ebx, dword ptr [esp + 8]; mov eax, 4; call dword ptr gs:[0x10]; 
0x000de753: mov ebx, dword ptr [esp + 8]; mov eax, 5; call dword ptr gs:[0x10]; 
0x000b7d03: mov ebx, dword ptr [esp + 8]; mov eax, 7; call dword ptr gs:[0x10]; 
0x000df626: mov ebx, dword ptr [esp + 8]; mov eax, 8; call dword ptr gs:[0x10]; 
0x00025f8a: mov ebx, dword ptr [esp]; add esp, 8; ret; 
0x000268c4: mov ebx, dword ptr [esp]; cmove eax, edx; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00113216: mov ebx, dword ptr [esp]; mov dword ptr [edx], 0x10; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000ddf42: mov ebx, dword ptr [esp]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; add esp, 8; ret; 
0x0002e0de: mov ebx, dword ptr [esp]; mov dword ptr gs:[eax], 0x16; or eax, 0xffffffff; add esp, 8; ret; 
0x0002dea8: mov ebx, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000ddfda: mov ebx, dword ptr [esp]; mov edi, dword ptr [esp + 8]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x00025f75: mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0002e9fe: mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0007ebf3: mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; mov ebp, dword ptr [esp + 0xc]; add esp, 0x10; ret; 
0x0007d860: mov ebx, dword ptr [esp]; ret; 
0x000fc1d3: mov ebx, eax; mov dword ptr [eax], 0; mov ecx, 0x81; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000b7e2f: mov ebx, eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000e0142: mov ebx, eax; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x000e0992: mov ebx, eax; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x000e0d08: mov ebx, eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x000e70a3: mov ebx, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000e7603: mov ebx, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f0b82: mov ebx, eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x000f0dee: mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000b830e: mov ebx, eax; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x000eeca0: mov ebx, eax; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x000c57e3: mov ebx, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000c58c3: mov ebx, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00123d80: mov ebx, eax; mov eax, 0xbc; call dword ptr gs:[0x10]; 
0x00123e43: mov ebx, eax; mov eax, 0xbd; call dword ptr gs:[0x10]; 
0x000e0dca: mov ebx, eax; mov eax, 0xfa; call dword ptr gs:[0x10]; 
0x000eec1a: mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x000024c3: mov ebx, edi; arpl cx, bx; mov ah, 0xc6; ret; 
0x000de572: mov ebx, edx; ret; 
0x0010c071: mov ebx, gs; adc dword ptr [ebp - 0x7cffd98c], ecx; rol byte ptr [ecx], 0x81; ret 0x9c; 
0x0002392b: mov ecx, 0x14245c8b; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0002e19f: mov ecx, 0x4c8bda89; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x000e6355: mov ecx, 0x5409; mov esi, eax; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000e631c: mov ecx, 0x5409; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x001163c0: mov ecx, 0x8024948b; add byte ptr [eax], al; add byte ptr [ebx + 0x20508b02], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x000fc568: mov ecx, 0x80; xor esi, esi; xchg ebx, edi; call dword ptr gs:[0x10]; 
0x000fc2bc: mov ecx, 0x80; xor esi, esi; xchg ebx, edi; int 0x80; 
0x000fe0b6: mov ecx, 0x810002bc; ret; 
0x000e65b6: mov ecx, 0x81000437; ret; 
0x000e37b6: mov ecx, 0x81000465; ret; 
0x000b98b6: mov ecx, 0x81000704; ret; 
0x00038bb6: mov ecx, 0x81000f11; ret; 
0x00020ab6: mov ecx, 0x81001092; ret; 
0x0001dab6: mov ecx, 0x810010c2; ret; 
0x000fc1db: mov ecx, 0x81; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x001272a5: mov ecx, 0x81; xchg ebx, edi; call dword ptr gs:[0x10]; 
0x000b84bf: mov ecx, 0x81; xchg ebx, edi; int 0x80; 
0x00045363: mov ecx, 0x89ffffca; ret 0x16eb; 
0x0012bbdb: mov ecx, 0x8b000000; dec esi; or bh, dh; ret 0x202; 
0x0017ab75: mov ecx, 0x8e280000; out dx, eax; call dword ptr [ebx]; 
0x0017abe1: mov ecx, 0x902c0000; out dx, eax; call dword ptr [edx]; 
0x0019ab21: mov ecx, 0xa09c0002; clc; jmp dword ptr [edx]; 
0x0019ab45: mov ecx, 0xa0e80002; clc; jmp dword ptr [edx]; 
0x0016d1b8: mov ecx, 0xa0fff9c7; mov ebp, 0xc7c50002; stc; call eax; 
0x0016d0e5: mov ecx, 0xb4b40002; stc; jmp dword ptr [eax]; 
0x0016d115: mov ecx, 0xb9c40002; stc; call dword ptr [eax]; 
0x00157a59: mov ecx, 0xbdbcbbba; mov esi, 0xc2c1c0bf; ret; 
0x001686f5: mov ecx, 0xc2540000; in al, dx; call dword ptr [eax]; 
0x000df43f: mov ecx, 0xd; mov edi, ebp; xchg edi, ebx; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0019ca68: mov ecx, 0xdf000001; add eax, 0x1250000; add byte ptr [eax], al; ret; 
0x0017b085: mov ecx, 0xf89e0000; out dx, eax; call dword ptr [eax]; 
0x0002d514: mov ecx, 0xff7fffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0002d254: mov ecx, 0xffefffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0007c83c: mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x0002e244: mov ecx, 8; xchg ebx, edx; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0003f8d7: mov ecx, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + 0x40]; ret; 
0x00064d7e: mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0xb8], edx; pop ebx; ret; 
0x00071e99: mov ecx, dword ptr [eax + 0xc]; mov dword ptr [eax + 4], edx; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 0x24], ecx; ret; 
0x0013c4b2: mov ecx, dword ptr [eax + 1]; mov dword ptr [edx + 1], ecx; movzx ecx, byte ptr [eax]; mov byte ptr [edx], cl; pop ebx; ret; 
0x0013c532: mov ecx, dword ptr [eax + 2]; mov dword ptr [edx + 2], ecx; movzx ecx, word ptr [eax]; mov word ptr [edx], cx; pop ebx; ret; 
0x0013d606: mov ecx, dword ptr [eax + 4]; mov dword ptr [edx + 4], ecx; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x0006b5fc: mov ecx, dword ptr [eax + 8]; mov dword ptr [eax], edx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x00134e42: mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001362d2: mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x0013be22: mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x001354d2: mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013c432: mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x000bb9d8: mov ecx, dword ptr [ebp + 0x10]; call dword ptr [ecx + 0x10]; 
0x000bb94e: mov ecx, dword ptr [ebp + 0x10]; call dword ptr [ecx + 0x18]; 
0x000bba20: mov ecx, dword ptr [ebp + 0x10]; mov dword ptr [esp + 4], eax; mov dword ptr [esp], esi; call dword ptr [ecx + 0x20]; 
0x000bb4fa: mov ecx, dword ptr [ebp + 0x10]; mov dword ptr [esp], eax; call dword ptr [ecx + 0x14]; 
0x00111d43: mov ecx, dword ptr [ebp + 0x14]; mov dword ptr [esp + 4], ecx; call dword ptr [edx]; 
0x0011a782: mov ecx, dword ptr [ebp + 0x14]; mov edx, dword ptr [ebp - 0xbc]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edx; call dword ptr [ebp + 0x10]; 
0x000c568a: mov ecx, dword ptr [ebp + 0xc]; xchg edi, ebx; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0011abd1: mov ecx, dword ptr [ebp + 8]; mov eax, dword ptr [ecx]; mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x000c98c0: mov ecx, dword ptr [ebp - 0x100]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x00025768: mov ecx, dword ptr [ebp - 0x1d4]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000c5723: mov ecx, dword ptr [ebp - 0x20]; mov edx, dword ptr [ebp - 0x1c]; mov edi, eax; xchg edi, ebx; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000ecfb0: mov ecx, dword ptr [ebp - 0x30]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000f15af: mov ecx, dword ptr [ebp - 0x3fc]; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000f17af: mov ecx, dword ptr [ebp - 0x40c]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000f16c9: mov ecx, dword ptr [ebp - 0x410]; mov eax, dword ptr [esi + 0xc]; mov dword ptr [ebp - 0x20], eax; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00042a17: mov ecx, dword ptr [ebp - 0x49c]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x1c]; 
0x001222ae: mov ecx, dword ptr [ebp - 0x50]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0006a4d2: mov ecx, dword ptr [ebp - 0x520]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x001207f9: mov ecx, dword ptr [ebp - 0x58]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x00120f87: mov ecx, dword ptr [ebp - 0x70]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000e23de: mov ecx, dword ptr [ebp - 0xb0]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0011a7a0: mov ecx, dword ptr [ebp - 0xbc]; mov dword ptr [esp], ecx; call dword ptr [eax + 0x10]; 
0x0011a767: mov ecx, dword ptr [ebp - 0xbc]; mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x000e355e: mov ecx, dword ptr [ebp - 0xc0]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0014526b: mov ecx, dword ptr [ebx + ecx*4 - 0x567f4]; mov eax, dword ptr [ebx + eax*4 - 0x567f4]; sub eax, ecx; pop ebp; pop ebx; ret; 
0x00142a5e: mov ecx, dword ptr [ebx + ecx*4 - 0x567f4]; mov eax, dword ptr [ebx + eax*4 - 0x567f4]; sub eax, ecx; pop ebx; ret; 
0x00131c34: mov ecx, dword ptr [ebx + ecx*4 - 0x567f4]; sub eax, ecx; pop esi; pop edi; pop ebx; ret; 
0x000f7226: mov ecx, dword ptr [ebx - 0x130]; pop ebx; mov ecx, dword ptr gs:[ecx]; test byte ptr [ecx + eax*2 + 1], 0x40; cmove eax, edx; ret; 
0x00074d3c: mov ecx, dword ptr [ebx - 0x15c]; mov dword ptr [esp + 0x18], edx; neg eax; mov dword ptr [esp], eax; call dword ptr [ecx]; 
0x00074d5d: mov ecx, dword ptr [ebx - 0x15c]; xor ebp, ebp; mov dword ptr [esp + 0x18], edx; mov dword ptr [esp], 0; call dword ptr [ecx]; 
0x00024fbb: mov ecx, dword ptr [ebx - 0xf8]; mov dword ptr gs:[ecx], 0x16; mov ecx, edx; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x001200f5: mov ecx, dword ptr [ecx + edx*8]; idiv edi; shr edx, 3; jmp eax; 
0x0010a736: mov ecx, dword ptr [ecx - 0x7cfd7406]; ret 0x8d04; 
0x000f722e: mov ecx, dword ptr [ecx]; test byte ptr [ecx + eax*2 + 1], 0x40; cmove eax, edx; ret; 
0x001199b0: mov ecx, dword ptr [edx + 0x28]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x0011a3d0: mov ecx, dword ptr [edx + 0x30]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x00091774: mov ecx, dword ptr [esi + 0xf]; movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00019930: mov ecx, dword ptr [esi + esi + 0x5c8b0000]; and al, 0xc; add esp, 0x1c; ret; 
0x000915f0: mov ecx, dword ptr [esi]; mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000915d1: mov ecx, dword ptr [esi]; mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0013690a: mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x000ef684: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000efc14: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000efd24: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000efdea: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000ef33a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000eff37: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000b7daa: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000efada: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x000eb217: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000e134a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000ed52a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x000ed5ba: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x000ed40a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x000e139a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x000ef62a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000dec17: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 3; call dword ptr gs:[0x10]; 
0x000dec97: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 4; call dword ptr gs:[0x10]; 
0x000de777: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 5; call dword ptr gs:[0x10]; 
0x000b7d27: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 7; call dword ptr gs:[0x10]; 
0x000de629: mov ecx, dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x000ecb38: mov ecx, dword ptr [esp + 0x10]; xchg ebx, edx; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x0007da28: mov ecx, dword ptr [esp + 0x10c]; mov dword ptr [ecx], edx; add esp, 0x100; ret; 
0x000ef6b2: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000eb2ef: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x000efc42: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000efd52: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000efebf: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x000ef8df: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x000ef74f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x000e7e69: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000ef92f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x000efa8f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x000efa3f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x00123dcf: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xbc; call dword ptr gs:[0x10]; 
0x00123e8f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xbd; call dword ptr gs:[0x10]; 
0x000ed71f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x000ed68f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x000ed4df: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012e51f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xfa; call dword ptr gs:[0x10]; 
0x00102aa0: mov ecx, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000ddf09: mov ecx, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0xe; call dword ptr gs:[0x10]; 
0x001028e0: mov ecx, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 3; call dword ptr gs:[0x10]; 
0x000195a1: mov ecx, dword ptr [esp + 0x18]; lea edx, dword ptr [ecx + ebp*8 + 0x258]; mov dword ptr [esp], edx; call eax; 
0x0003167c: mov ecx, dword ptr [esp + 0x18]; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; mov dword ptr [esp + 8], ecx; call edi; 
0x000efb3e: mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000eeb14: mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000ef394: mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x153; call dword ptr gs:[0x10]; 
0x000effd4: mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x15b; call dword ptr gs:[0x10]; 
0x000f0034: mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x15c; call dword ptr gs:[0x10]; 
0x000e7e9d: mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000ddfa1: mov ecx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x14]; xchg edi, ebx; mov eax, 0x129; call dword ptr gs:[0x10]; 
0x000f8317: mov ecx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 4], ecx; call edx; 
0x000efb78: mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000eaea4: mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000de0cc: mov ecx, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x18]; xchg edi, ebx; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00110056: mov ecx, dword ptr [esp + 0x20]; mov dword ptr [ecx], edx; pop esi; pop edi; ret; 
0x000e9608: mov ecx, dword ptr [esp + 0x20]; xchg edi, ebx; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x000e013a: mov ecx, dword ptr [esp + 0x24]; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x000e098a: mov ecx, dword ptr [esp + 0x24]; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00064ec9: mov ecx, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], ecx; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x0007250a: mov ecx, dword ptr [esp + 0x24]; mov dword ptr [esp], eax; mov dword ptr [esp + 4], ecx; call dword ptr [edx + 0x20]; 
0x00113852: mov ecx, dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp], ebp; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x18]; 
0x000319d7: mov ecx, dword ptr [esp + 0x2c]; mov dword ptr [esp + 4], ecx; call edi; 
0x000dfcb4: mov ecx, dword ptr [esp + 0x2c]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0003162d: mov ecx, dword ptr [esp + 0x30]; mov dword ptr [esp], ecx; call edi; 
0x000ef15f: mov ecx, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x38]; xchg edi, ebx; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0007b932: mov ecx, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp + 4], esi; mov dword ptr [esp], ecx; call eax; 
0x000e7368: mov ecx, dword ptr [esp + 0x54]; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000e7888: mov ecx, dword ptr [esp + 0x54]; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0001ec47: mov ecx, dword ptr [esp + 0x80]; mov dword ptr [esp + 8], eax; mov dword ptr [esp], ecx; call dword ptr [esi]; 
0x000de95e: mov ecx, dword ptr [esp + 0xc]; mov ebp, eax; xchg edi, ebx; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000f0c98: mov ecx, dword ptr [esp + 0xc]; mov ebp, eax; xchg edi, ebx; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x000ef795: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x000dece5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x13; call dword ptr gs:[0x10]; 
0x000df535: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x000eff0f: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000e6d05: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000e0a75: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000e6ac5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x000eea15: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x000ef895: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000aac45: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000ef235: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x000eb1a5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x000ef525: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000ef565: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000eb1ef: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000c5435: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000b8212: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa2; call dword ptr gs:[0x10]; 
0x000ef975: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eb2a5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x000eb265: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000ed575: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x000ed605: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x000ed455: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000debef: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 3; call dword ptr gs:[0x10]; 
0x000dec6f: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 4; call dword ptr gs:[0x10]; 
0x000de74f: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 5; call dword ptr gs:[0x10]; 
0x000b7cff: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 7; call dword ptr gs:[0x10]; 
0x000df622: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 8; call dword ptr gs:[0x10]; 
0x000c5b2c: mov ecx, dword ptr [esp + 0xc]; mov edi, dword ptr [esp + 8]; xchg edi, ebx; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000e6dac: mov ecx, dword ptr [esp + 0xc]; mov esi, eax; xchg edi, ebx; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x000e6e6c: mov ecx, dword ptr [esp + 0xc]; mov esi, eax; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000e0c5c: mov ecx, dword ptr [esp + 0xc]; mov esi, eax; xchg edi, ebx; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x000ef852: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x000efda2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x000efe32: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000df5b2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x000efe72: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x000ef4e2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x000eff82: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x000ddb12: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1e; call dword ptr gs:[0x10]; 
0x000ded22: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x21; call dword ptr gs:[0x10]; 
0x0002e1a2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00055502: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x26; call dword ptr gs:[0x10]; 
0x000de6a2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000eed42: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x34; call dword ptr gs:[0x10]; 
0x000b92e2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x000df4f2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x000e7d42: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x000ef2f2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4b; call dword ptr gs:[0x10]; 
0x000ef2b2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4c; call dword ptr gs:[0x10]; 
0x000e67c2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000a8462: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4e; call dword ptr gs:[0x10]; 
0x000a84a2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4f; call dword ptr gs:[0x10]; 
0x000e09d2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x000e84b2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x000eb162: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x000e97a2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5c; call dword ptr gs:[0x10]; 
0x000e97e2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5d; call dword ptr gs:[0x10]; 
0x000de5c2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x000de132: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x63; call dword ptr gs:[0x10]; 
0x000de172: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x64; call dword ptr gs:[0x10]; 
0x000aac02: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x000e7e12: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000ef422: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x000df1c2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000eb332: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x000eb372: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000c53b2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000c53f2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000c5572: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000b81ec: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa2; call dword ptr gs:[0x10]; 
0x000eea92: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x000ef462: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x000ef4a2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0002e772: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000ef9f2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x000ed6d2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x000ed642: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x000ed492: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000de582: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x000df5fc: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 8; call dword ptr gs:[0x10]; 
0x000e0922: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 9; call dword ptr gs:[0x10]; 
0x000df176: mov ecx, dword ptr [esp + 8]; mov esi, eax; xchg edi, ebx; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00074c54: mov ecx, dword ptr [esp + eax]; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x77]; 
0x00129d77: mov ecx, dword ptr [esp]; ret; 
0x000f722d: mov ecx, dword ptr gs:[ecx]; test byte ptr [ecx + eax*2 + 1], 0x40; cmove eax, edx; ret; 
0x000b81a3: mov ecx, eax; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x0002e139: mov ecx, eax; mov edi, dword ptr [esp + 0x90]; xchg edi, ebx; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000e80bb: mov ecx, eax; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x000e816b: mov ecx, eax; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000deb9b: mov ecx, eax; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000a8446: mov ecx, eax; xchg ebx, ecx; mov eax, 0xd; call dword ptr gs:[0x10]; 
0x000fdfe1: mov ecx, eax; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000d909d: mov ecx, eax; xchg edi, ebx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000d90c9: mov ecx, eax; xchg edi, ebx; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000b9e4a: mov ecx, ebp; mov edx, eax; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000ba24f: mov ecx, ebp; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0007841c: mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0x12abcc]; jmp ecx; 
0x00129be8: mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0x79400]; jmp ecx; 
0x00116000: mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0x8cfe8]; jmp ecx; 
0x000cbb53: mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0xd7494]; jmp ecx; 
0x000c1f7b: mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0xe106c]; jmp ecx; 
0x000c06a0: mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0xe2948]; jmp ecx; 
0x000ac913: mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0xf66d4]; jmp ecx; 
0x000ac83b: mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0xf67ac]; jmp ecx; 
0x000d6e1c: mov ecx, ebx; sub ecx, dword ptr [ebx + ebp*4 - 0xcc1cc]; jmp ecx; 
0x000d436b: mov ecx, ebx; sub ecx, dword ptr [ebx + edx*4 - 0xcec7c]; jmp ecx; 
0x00176b7d: mov ecx, ecx; out dx, al; jmp dword ptr [edx]; 
0x000ed33f: mov ecx, edi; mov edx, eax; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0002cce1: mov ecx, edi; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000ddc48: mov ecx, edi; xchg ebx, edx; mov eax, 0x6a; call dword ptr gs:[0x10]; 
0x000dddc8: mov ecx, edi; xchg ebx, edx; mov eax, 0x6b; call dword ptr gs:[0x10]; 
0x000ddd08: mov ecx, edi; xchg ebx, edx; mov eax, 0x6c; call dword ptr gs:[0x10]; 
0x00114bef: mov ecx, edx; aam 0xfb; jmp dword ptr [ebp - 0x75]; 
0x000b8307: mov ecx, edx; mov esi, edx; mov dword ptr [ebp - 0x1c], ebx; mov ebx, eax; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0007e109: mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0007e2d0: mov ecx, edx; rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x000e6880: mov ecx, edx; shr ecx, 9; cmp edx, -1; cmovne eax, ecx; add esp, 0x2c; ret; 
0x000ef040: mov ecx, edx; xchg ebx, ecx; mov eax, 0x143; call dword ptr gs:[0x10]; 
0x0012ea51: mov ecx, edx; xchg ebx, ecx; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x000b7be4: mov ecx, edx; xchg ebx, ecx; mov eax, 0x2b; call dword ptr gs:[0x10]; 
0x000e6be9: mov ecx, edx; xchg ebx, ecx; mov eax, 0x2d; call dword ptr gs:[0x10]; 
0x000b912d: mov ecx, edx; xchg ebx, ecx; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000b91ad: mov ecx, edx; xchg ebx, ecx; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x000eede4: mov ecx, edx; xchg ebx, ecx; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x000eede4: mov ecx, edx; xchg ebx, ecx; mov eax, 0xd7; call dword ptr gs:[0x10]; xchg ebx, ecx; ret; 
0x000eee04: mov ecx, edx; xchg ebx, ecx; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x000eee04: mov ecx, edx; xchg ebx, ecx; mov eax, 0xd8; call dword ptr gs:[0x10]; xchg ebx, ecx; ret; 
0x00024f4d: mov ecx, edx; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0010bab6: mov ecx, edx; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; xchg ebx, ecx; ret; 
0x0002e331: mov ecx, edx; xchg edi, ebx; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0016a309: mov ecx, esi; call dword ptr [eax + 0x66]; 
0x0010b286: mov ecx, esi; mov ebp, dword ptr gs:[edx]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000b3911: mov ecx, esi; mov edi, dword ptr gs:[edx]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0006a2af: mov ecx, esi; mov edx, dword ptr [ebp - 0x51c]; nop; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000e82a2: mov ecx, esi; mov edx, eax; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0016a301: mov ecx, esi; push dword ptr [eax]; add word ptr [eax], ax; mov ah, 0x89; int1; call dword ptr [eax + 0x66]; 
0x000232a5: mov ecx, esi; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x00103527: mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000a73db: mov edi, 0; add eax, 3; ret; 
0x0014849b: mov edi, 0; lea eax, dword ptr [ecx + 0xa]; ret; 
0x001484ab: mov edi, 0; lea eax, dword ptr [ecx + 0xb]; ret; 
0x001484bb: mov edi, 0; lea eax, dword ptr [ecx + 0xd]; ret; 
0x001484cb: mov edi, 0; lea eax, dword ptr [ecx + 0xe]; ret; 
0x001484db: mov edi, 0; lea eax, dword ptr [ecx + 0xf]; ret; 
0x0014843b: mov edi, 0; lea eax, dword ptr [ecx + 2]; ret; 
0x0014844b: mov edi, 0; lea eax, dword ptr [ecx + 3]; ret; 
0x0014845b: mov edi, 0; lea eax, dword ptr [ecx + 5]; ret; 
0x0014846b: mov edi, 0; lea eax, dword ptr [ecx + 6]; ret; 
0x0014847b: mov edi, 0; lea eax, dword ptr [ecx + 7]; ret; 
0x0014848b: mov edi, 0; lea eax, dword ptr [ecx + 9]; ret; 
0x0014740b: mov edi, 0; lea eax, dword ptr [edi + 1]; pop edi; ret; 
0x001473fb: mov edi, 0; lea eax, dword ptr [edi]; pop edi; ret; 
0x00148afb: mov edi, 0; lea eax, dword ptr [edx + 0xa]; ret; 
0x00148b0b: mov edi, 0; lea eax, dword ptr [edx + 0xc]; ret; 
0x00148b1b: mov edi, 0; lea eax, dword ptr [edx + 0xd]; ret; 
0x00148b2b: mov edi, 0; lea eax, dword ptr [edx + 0xe]; ret; 
0x00148a9b: mov edi, 0; lea eax, dword ptr [edx + 2]; ret; 
0x00148aab: mov edi, 0; lea eax, dword ptr [edx + 4]; ret; 
0x00148abb: mov edi, 0; lea eax, dword ptr [edx + 5]; ret; 
0x00148acb: mov edi, 0; lea eax, dword ptr [edx + 6]; ret; 
0x00148adb: mov edi, 0; lea eax, dword ptr [edx + 8]; ret; 
0x00148aeb: mov edi, 0; lea eax, dword ptr [edx + 9]; ret; 
0x0008764b: mov edi, 0; mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x0008761b: mov edi, 0; mov word ptr [ecx], dx; pop ebx; ret; 
0x000a73eb: mov edi, 0; xor eax, eax; ret; 
0x0003ea62: mov edi, 0x100011; mov edx, esi; xchg edi, ebx; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0018b191: mov edi, 0x2f1c0001; cli; call dword ptr [ebp + 2]; 
0x0008e9f3: mov edi, 0x3000cbd; or al, 0x99; jmp ecx; 
0x0008d393: mov edi, 0x3000cd2; or al, 0x99; jmp ecx; 
0x0008d213: mov edi, 0x3000cd3; or al, 0x91; jmp ecx; 
0x001687fd: mov edi, 0x3d940000; in eax, dx; call dword ptr [eax]; 
0x0018b125: mov edi, 0x4f280001; cmc; call dword ptr [ebx]; 
0x0018b149: mov edi, 0x4f640001; cmc; call dword ptr [ebx]; 
0x000a712d: mov edi, 0x5f000000; pop esi; ret; 
0x0008eeed: mov edi, 0x5f000005; pop esi; pop ebx; ret; 
0x00099968: mov edi, 0x5f5ef889; ret; 
0x000e89b0: mov edi, 0x81000413; ret; 
0x000981b0: mov edi, 0x8100091b; ret; 
0x000772b0: mov edi, 0x81000b2a; ret; 
0x000709b0: mov edi, 0x81000b93; ret; 
0x0006e5b0: mov edi, 0x81000bb7; ret; 
0x000654b0: mov edi, 0x81000c48; ret; 
0x00064bb0: mov edi, 0x81000c51; ret; 
0x000649b0: mov edi, 0x81000c53; ret; 
0x0005bab0: mov edi, 0x81000ce2; ret; 
0x000327b0: mov edi, 0x81000f75; ret; 
0x000277b0: mov edi, 0x81001025; ret; 
0x00025fb0: mov edi, 0x8100103d; ret; 
0x0012adb0: mov edi, 0x81ffffef; ret; 
0x0002dad7: mov edi, 0x89082444; push esp; and al, 4; add esp, 0x10; and eax, 0x8000; ret; 
0x0012a9dd: mov edi, 0x89fff3bf; ret 0x68b; 
0x00105337: mov edi, 0x8b0009dc; add dword ptr [eax], 0x65ffffff; add eax, dword ptr [0]; ret; 
0x00002833: mov edi, 0xa9011612; ret; 
0x0019b1d1: mov edi, 0xbbec0002; clc; jmp dword ptr [edi]; 
0x0008e7ff: mov edi, 0xc03000c; xchg eax, ecx; jmp ecx; 
0x0008de26: mov edi, 0xc1810009; mov bh, 0xc8; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008de0a: mov edi, 0xc1810009; ror eax, cl; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000dde67: mov edi, 0xc3810004; mov dl, byte ptr [ecx + 0xc]; add byte ptr [ebx - 0x78f3dbac], cl; sar dword ptr [eax + 0xc5], cl; call dword ptr gs:[0x10]; 
0x0016d1f5: mov edi, 0xcaa50002; stc; jmp dword ptr [eax]; 
0x0016d1fd: mov edi, 0xcab10002; stc; call dword ptr [eax - 0x41]; 
0x0016d20d: mov edi, 0xcad40002; stc; jmp eax; 
0x00019253: mov edi, 0xe8000000; test dl, ah; pop es; add byte ptr [ecx - 0x47fbdbbc], cl; ret 0; 
0x00097513: mov edi, 0xf000000; popfd; ret 0xea81; 
0x000662cc: mov edi, 0xf3000004; ret; 
0x0017b685: mov edi, 0xf4750000; out dx, eax; call dword ptr [eax]; 
0x0017b5c5: mov edi, 0xf5010000; out dx, eax; call dword ptr [eax]; 
0x000e8203: mov edi, 0xfee1dead; call 0x129d73; add ebx, 0xbade7; xchg edi, ebx; mov eax, 0x58; call dword ptr gs:[0x10]; 
0x0005d39d: mov edi, 0xfffef885; jmp dword ptr [ebp]; 
0x000e9603: mov edi, 0xffffff9c; mov ecx, dword ptr [esp + 0x20]; xchg edi, ebx; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x0006db2b: mov edi, 0xffffffff; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x000d9096: mov edi, 0xffffffff; mov edx, edi; mov ecx, eax; xchg edi, ebx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000b7c5d: mov edi, 0xffffffff; mov esi, edx; xchg edi, ebx; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000fc77e: mov edi, 2; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000bd417: mov edi, 3; mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebp - 0x134]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x000c0197: mov edi, 3; mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebp - 0x144]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x00001588: mov edi, 6; add byte ptr [eax], al; add dl, al; push es; add byte ptr [eax], al; ret; 
0x000e0cff: mov edi, 8; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x0011a464: mov edi, dword ptr [eax + 0x74]; idiv edi; jmp esi; 
0x00113264: mov edi, dword ptr [eax + 2]; idiv edi; jmp esi; 
0x0002dd13: mov edi, dword ptr [eax + 8]; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x000c5685: mov edi, dword ptr [ebp + 8]; mov edx, esi; mov ecx, dword ptr [ebp + 0xc]; xchg edi, ebx; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x000b3f5d: mov edi, dword ptr [ebp - 0x3c]; xchg edi, ebx; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000f1610: mov edi, dword ptr [ebp - 0x40c]; mov ecx, dword ptr [ebp - 0x3fc]; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000f15a4: mov edi, dword ptr [ebp - 0x40c]; mov edx, 0x40; mov ecx, dword ptr [ebp - 0x3fc]; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0002a2da: mov edi, dword ptr [ebp - 0x9c]; mov esi, dword ptr [ebp - 0x94]; mov ecx, edx; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x00030d30: mov edi, dword ptr [ebp - 4]; mov esp, ebp; pop ebp; ret; 
0x0010357c: mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x000b3914: mov edi, dword ptr [edx]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000dfed3: mov edi, dword ptr [esp + 0x1018]; add esp, 0x101c; ret; 
0x00054dfc: mov edi, dword ptr [esp + 0x1028]; add esp, 0x102c; ret; 
0x00054af7: mov edi, dword ptr [esp + 0x1034]; mov ebp, dword ptr [esp + 0x1038]; add esp, 0x103c; ret; 
0x000aae42: mov edi, dword ptr [esp + 0x104]; mov ebp, dword ptr [esp + 0x108]; add esp, 0x10c; ret; 
0x000830b8: mov edi, dword ptr [esp + 0x10]; mov ebp, dword ptr [esp + 0x14]; add esp, 0x18; ret; 
0x000de8a5: mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00055565: mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x12e; call dword ptr gs:[0x10]; 
0x000e0ad5: mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x000e1409: mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x00102aa4: mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000eeda5: mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0xe1; call dword ptr gs:[0x10]; 
0x000ddf0d: mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0xe; call dword ptr gs:[0x10]; 
0x001028e4: mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 3; call dword ptr gs:[0x10]; 
0x000e112f: mov edi, dword ptr [esp + 0x114]; mov ebp, dword ptr [esp + 0x118]; add esp, 0x11c; ret; 
0x000692f6: mov edi, dword ptr [esp + 0x124]; mov ebp, dword ptr [esp + 0x128]; add esp, 0x12c; ret; 
0x0011bcc9: mov edi, dword ptr [esp + 0x128]; add esp, 0x12c; ret; 
0x0002e034: mov edi, dword ptr [esp + 0x128]; mov ebp, dword ptr [esp + 0x12c]; add esp, 0x130; ret; 
0x001187e6: mov edi, dword ptr [esp + 0x134]; mov ebp, dword ptr [esp + 0x138]; add esp, 0x13c; ret; 
0x0002ddd2: mov edi, dword ptr [esp + 0x138]; add esp, 0x13c; ret; 
0x0002ec59: mov edi, dword ptr [esp + 0x144]; mov ebp, dword ptr [esp + 0x148]; add esp, 0x14c; ret; 
0x000ddaed: mov edi, dword ptr [esp + 0x14]; add esp, 0x18; ret; 
0x000e0de8: mov edi, dword ptr [esp + 0x14]; cmp ebp, 0xfffff000; mov ebp, dword ptr [esp + 0x18]; cmova eax, edx; add esp, 0x1c; ret; 
0x000e709b: mov edi, dword ptr [esp + 0x14]; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000e75fb: mov edi, dword ptr [esp + 0x14]; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000ca364: mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret 0xc; 
0x00019d8c: mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000f11d0: mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x1c]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000ddfa5: mov edi, dword ptr [esp + 0x14]; xchg edi, ebx; mov eax, 0x129; call dword ptr gs:[0x10]; 
0x000b9e08: mov edi, dword ptr [esp + 0x164]; mov ebp, dword ptr [esp + 0x168]; add esp, 0x16c; ret; 
0x0001af60: mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00073204: mov edi, dword ptr [esp + 0x18]; mov dword ptr [esi + 4], eax; xor eax, eax; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x0007e9ea: mov edi, dword ptr [esp + 0x18]; mov ebp, dword ptr [esp + 0x1c]; add esp, 0x20; ret; 
0x00114413: mov edi, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; add eax, edx; ret; 
0x0002e3e0: mov edi, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x000de0d0: mov edi, dword ptr [esp + 0x18]; xchg edi, ebx; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000e7e02: mov edi, dword ptr [esp + 0x1a8]; add esp, 0x1ac; ret; 
0x000e7d0c: mov edi, dword ptr [esp + 0x1b4]; mov ebp, dword ptr [esp + 0x1b8]; add esp, 0x1bc; ret; 
0x0003105a: mov edi, dword ptr [esp + 0x1c]; mov ebp, dword ptr [esp + 0x20]; add esp, 0x24; ret; 
0x0010fc57: mov edi, dword ptr [esp + 0x1c]; mov esi, dword ptr [esp + 0x18]; mov ebp, dword ptr [esp + 0x20]; add esp, 0x24; ret; 
0x000319cc: mov edi, dword ptr [esp + 0x20]; mov dword ptr [esp], esi; mov dword ptr [esp + 8], ecx; mov ecx, dword ptr [esp + 0x2c]; mov dword ptr [esp + 4], ecx; call edi; 
0x000982cc: mov edi, dword ptr [esp + 0x20]; mov ebp, dword ptr [esp + 0x24]; add esp, 0x28; ret; 
0x000e96d0: mov edi, dword ptr [esp + 0x20]; mov esi, ecx; xchg edi, ebx; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x000c55d7: mov edi, dword ptr [esp + 0x20]; test esi, esi; cmovns ecx, esi; xchg edi, ebx; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000eb10f: mov edi, dword ptr [esp + 0x24]; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x000eeee4: mov edi, dword ptr [esp + 0x24]; mov ebp, 8; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x00127559: mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 4; 
0x000d9c5e: mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 8; 
0x00019bcf: mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000eeae9: mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; int 0x80; 
0x000e0e14: mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; mov eax, 0x110; call dword ptr gs:[0x10]; 
0x000e4f14: mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x0002ef93: mov edi, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x20]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0002f3b4: mov edi, dword ptr [esp + 0x254]; mov ebp, dword ptr [esp + 0x258]; add esp, 0x25c; ret; 
0x0011f6f8: mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; mov edx, eax; mov eax, edx; ret; 
0x0001986d: mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0006946b: mov edi, dword ptr [esp + 0x28]; mov dword ptr [esi + 0xc], edx; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; ret; 
0x000eebeb: mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x000ce89f: mov edi, dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x1c]; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; ret; 
0x0010f942: mov edi, dword ptr [esp + 0x28]; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; ret; 
0x0006b293: mov edi, dword ptr [esp + 0x294]; mov ebp, dword ptr [esp + 0x298]; add esp, 0x29c; ret; 
0x000eec98: mov edi, dword ptr [esp + 0x2c]; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x00123d78: mov edi, dword ptr [esp + 0x2c]; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0xbc; call dword ptr gs:[0x10]; 
0x00123e3b: mov edi, dword ptr [esp + 0x2c]; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0xbd; call dword ptr gs:[0x10]; 
0x000ef1d0: mov edi, dword ptr [esp + 0x2c]; mov ebp, dword ptr [esp + 0x30]; add esp, 0x34; ret; 
0x000e0136: mov edi, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x24]; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x000e0986: mov edi, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x24]; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00033151: mov edi, dword ptr [esp + 0x34]; mov dword ptr [ecx + 8], eax; mov eax, ecx; mov dword ptr [ecx + 0xc], edx; add esp, 0x3c; ret 4; 
0x000b389c: mov edi, dword ptr [esp + 0x34]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret 4; 
0x0001bb55: mov edi, dword ptr [esp + 0x34]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret 8; 
0x0001ba33: mov edi, dword ptr [esp + 0x34]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x000e5b73: mov edi, dword ptr [esp + 0x34]; mov esi, dword ptr [esp + 0x30]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x0006cbd2: mov edi, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x000dc3a3: mov edi, dword ptr [esp + 0x38]; mov eax, ebx; sub eax, dword ptr [ebx + edi*4 - 0xc6c40]; jmp eax; 
0x000e6259: mov edi, dword ptr [esp + 0x38]; mov ebp, dword ptr [esp + 0x3c]; add esp, 0x40; ret; 
0x000ef163: mov edi, dword ptr [esp + 0x38]; xchg edi, ebx; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0006cf50: mov edi, dword ptr [esp + 0x3c]; mov dword ptr [esp], edi; call dword ptr [edi + 0xc]; 
0x00019e42: mov edi, dword ptr [esp + 0x40]; add esp, 0x44; ret; 
0x00083063: mov edi, dword ptr [esp + 0x40]; mov edx, ebx; sub edx, dword ptr [ebx + edi*4 - 0x11ff80]; jmp edx; 
0x00019eb2: mov edi, dword ptr [esp + 0x40]; neg eax; adc edx, 0; add esp, 0x44; neg edx; ret; 
0x000547db: mov edi, dword ptr [esp + 0x434]; mov ebp, dword ptr [esp + 0x438]; add esp, 0x43c; ret; 
0x001198fe: mov edi, dword ptr [esp + 0x438]; add esp, 0x43c; ret; 
0x00129c54: mov edi, dword ptr [esp + 0x44]; mov dword ptr [edx], ecx; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x000d7dcd: mov edi, dword ptr [esp + 0x44]; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret 0x1c; 
0x0011b5c2: mov edi, dword ptr [esp + 0x44]; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret 8; 
0x0001a332: mov edi, dword ptr [esp + 0x44]; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x00119595: mov edi, dword ptr [esp + 0x454]; mov ebp, dword ptr [esp + 0x458]; add esp, 0x45c; ret; 
0x00115658: mov edi, dword ptr [esp + 0x484]; mov ebp, dword ptr [esp + 0x488]; add esp, 0x48c; ret; 
0x00054c85: mov edi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x000d9533: mov edi, dword ptr [esp + 0x544]; mov ebp, dword ptr [esp + 0x548]; add esp, 0x54c; ret; 
0x00054a0f: mov edi, dword ptr [esp + 0x54]; mov ebp, dword ptr [esp + 0x58]; add esp, 0x5c; ret; 
0x001121ab: mov edi, dword ptr [esp + 0x58]; add esp, 0x5c; ret; 
0x000e60b1: mov edi, dword ptr [esp + 0x5c]; mov ebp, dword ptr [esp + 0x60]; add esp, 0x64; ret; 
0x0011c323: mov edi, dword ptr [esp + 0x64]; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret 0xc; 
0x00023512: mov edi, dword ptr [esp + 0x64]; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret 8; 
0x00066343: mov edi, dword ptr [esp + 0x64]; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x001127d7: mov edi, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x0002d860: mov edi, dword ptr [esp + 0x74]; mov ebp, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x000b4655: mov edi, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x0005b9fe: mov edi, dword ptr [esp + 0x81b4]; mov ebp, dword ptr [esp + 0x81b8]; add esp, 0x81bc; ret; 
0x000987cc: mov edi, dword ptr [esp + 0x84]; mov ebp, dword ptr [esp + 0x88]; add esp, 0x8c; ret; 
0x000196dd: mov edi, dword ptr [esp + 0x88]; add esp, 0x8c; ret; 
0x0002e13b: mov edi, dword ptr [esp + 0x90]; xchg edi, ebx; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000e3ce2: mov edi, dword ptr [esp + 0x94]; mov ebp, dword ptr [esp + 0x98]; add esp, 0x9c; ret 4; 
0x00023318: mov edi, dword ptr [esp + 0x94]; mov ebp, dword ptr [esp + 0x98]; add esp, 0x9c; ret; 
0x0002f21c: mov edi, dword ptr [esp + 0x98]; add esp, 0x9c; ret; 
0x0006f6f6: mov edi, dword ptr [esp + 0xa4]; mov ebp, dword ptr [esp + 0xa8]; add esp, 0xac; ret; 
0x0002e84c: mov edi, dword ptr [esp + 0xa8]; add esp, 0xac; ret; 
0x000e1726: mov edi, dword ptr [esp + 0xb4]; mov ebp, dword ptr [esp + 0xb8]; add esp, 0xbc; ret 8; 
0x000de30a: mov edi, dword ptr [esp + 0xc4]; mov ebp, dword ptr [esp + 0xc8]; add esp, 0xcc; ret; 
0x000672d3: mov edi, dword ptr [esp + 0xc8]; add esp, 0xcc; ret; 
0x000de223: mov edi, dword ptr [esp + 0xc]; call 0x129d73; add ebx, 0xc4dc8; xchg edi, ebx; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x0002c81c: mov edi, dword ptr [esp + 0xc]; mov ebp, dword ptr [esp + 0x10]; add esp, 0x14; ret; 
0x000de6fd: mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x000e0b6d: mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x000e0a2d: mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x000de62d: mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x000b85fd: mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x000e983d: mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xc1; call dword ptr gs:[0x10]; 
0x000e989d: mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xc2; call dword ptr gs:[0x10]; 
0x000e00cd: mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x000e006d: mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000b93fd: mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000b945d: mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x000e000d: mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x000df0bd: mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0006d7c3: mov edi, dword ptr [esp + 0xd4]; mov ebp, dword ptr [esp + 0xd8]; add esp, 0xdc; ret; 
0x00068f4e: mov edi, dword ptr [esp + 0xe4]; mov ebp, dword ptr [esp + 0xe8]; add esp, 0xec; ret; 
0x000de47e: mov edi, dword ptr [esp + 0xf4]; mov ebp, dword ptr [esp + 0xf8]; add esp, 0xfc; ret; 
0x00033066: mov edi, dword ptr [esp + 4]; add esp, 8; ret 4; 
0x0002deab: mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x001275d5: mov edi, dword ptr [esp + 4]; cmovbe eax, esi; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x000d8427: mov edi, dword ptr [esp + 4]; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; add esp, 8; ret; 
0x00026929: mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000ddf3e: mov edi, dword ptr [esp + 4]; mov ebx, dword ptr [esp]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; add esp, 8; ret; 
0x00082f19: mov edi, dword ptr [esp + 4]; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x000f36fb: mov edi, dword ptr [esp + 4]; setbe al; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00082dfb: mov edi, dword ptr [esp + 4]; sub eax, ebp; mov esi, dword ptr [esp]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00082e4b: mov edi, dword ptr [esp + 4]; sub eax, edx; mov esi, dword ptr [esp]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000eee6e: mov edi, dword ptr [esp + 4]; xor al, al; or eax, esi; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x000eba2b: mov edi, dword ptr [esp + 8]; add esp, 0x10; ret; 
0x000268ce: mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000ddfdd: mov edi, dword ptr [esp + 8]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x0007ebfa: mov edi, dword ptr [esp + 8]; mov ebp, dword ptr [esp + 0xc]; add esp, 0x10; ret; 
0x000c5b30: mov edi, dword ptr [esp + 8]; xchg edi, ebx; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x001127d6: mov edi, dword ptr fs:[esp + 0x68]; add esp, 0x6c; ret; 
0x000b3913: mov edi, dword ptr gs:[edx]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000b3ee4: mov edi, eax; call 0x129d73; add ebx, 0xef109; xchg edi, ebx; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0016c549: mov edi, eax; call dword ptr [eax + 0x70]; 
0x0016c539: mov edi, eax; jmp dword ptr [eax]; 
0x0019a41d: mov edi, eax; jmp dword ptr [ebx]; 
0x0011ba85: mov edi, eax; mov eax, dword ptr [esi + 4]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000dd945: mov edi, eax; mov eax, edi; pop edi; pop ebp; ret; 
0x0002de8b: mov edi, eax; mov edx, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0007e7dd: mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x0002eeb4: mov edi, eax; xchg edi, ebx; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x000c5729: mov edi, eax; xchg edi, ebx; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0017aa4d: mov edi, ebp; call dword ptr [edx]; 
0x0017cada: mov edi, ebp; jmp dword ptr [edx]; 
0x000df3e2: mov edi, ebp; xchg edi, ebx; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001075d4: mov edi, edi; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x00138377: mov edi, edi; jecxz 0x138308; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x00139357: mov edi, edi; jecxz 0x1392e8; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x0013a357: mov edi, edi; jecxz 0x13a2e8; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x0013c9a7: mov edi, edi; jecxz 0x13c938; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x000e6609: mov edi, edx; call 0x129d73; add ebx, 0xbc9e4; xchg edi, ebx; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000e7a9e: mov edi, edx; xchg edi, ebx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000e7b5e: mov edi, edx; xchg edi, ebx; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000e66f9: mov edi, esi; call 0x129d73; add ebx, 0xbc8f4; xchg edi, ebx; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0017cb3a: mov edi, gs; jmp dword ptr [edx]; 
0x000f0d13: mov edx, 0; cmovb eax, edx; pop esi; ret; 
0x0007ad7f: mov edx, 0; cmp eax, -1; cmove eax, edx; add esp, 0x1c; ret; 
0x0000c6fc: mov edx, 0x12000000; add byte ptr [eax + eax], cl; ret 0x59; 
0x0016fec6: mov edx, 0x140e0a02; inc ecx; ret; 
0x0019b7e5: mov edx, 0x140e0a03; inc ecx; ret; 
0x000e6a9f: mov edx, 0x14; sub edx, eax; mov eax, edx; pop ebx; ret; 
0x001231b0: mov edx, 0x26b48d; add byte ptr [eax], al; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x7d]; 
0x00069eee: mov edx, 0x2b2c458b; inc ebp; and al, 0x89; ret 0xfac1; 
0x000f281d: mov edx, 0x2cc48324; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0018ac69: mov edx, 0x3a740001; cmc; call dword ptr [ebx]; 
0x000f15aa: mov edx, 0x40; mov ecx, dword ptr [ebp - 0x3fc]; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00171776: mov edx, 0x43140e0a; ret; 
0x001674f8: mov edx, 0x4afffd4a; dec ebx; std; call eax; 
0x000ed3eb: mov edx, 0x64; mov eax, dword ptr [ecx - 0xfc]; mov eax, dword ptr [eax + 0x1c]; test eax, eax; cmove eax, edx; ret; 
0x0016c719: mov edx, 0x7b34fff8; add al, byte ptr [eax]; add al, 0xbb; clc; jmp dword ptr [eax + 0x7b]; 
0x00125db5: mov edx, 0x8100003f; ret; 
0x00125ab5: mov edx, 0x81000042; ret; 
0x00108eb5: mov edx, 0x8100020e; ret; 
0x00102fb5: mov edx, 0x8100026d; ret; 
0x00102bb5: mov edx, 0x81000271; ret; 
0x000fc7b5: mov edx, 0x810002d5; ret; 
0x000f27b5: mov edx, 0x81000375; ret; 
0x000e61b5: mov edx, 0x8100043b; ret; 
0x000c5eb5: mov edx, 0x8100063e; ret; 
0x000c38b5: mov edx, 0x81000664; ret; 
0x0007a1b5: mov edx, 0x81000afb; ret; 
0x00073eb5: mov edx, 0x81000b5e; ret; 
0x00072eb5: mov edx, 0x81000b6e; ret; 
0x00054fb5: mov edx, 0x81000d4d; ret; 
0x0013b2b5: mov edx, 0x81fffeea; ret; 
0x001381b5: mov edx, 0x81ffff1b; ret; 
0x000b35a1: mov edx, 0x8301c683; ret 0x3b34; 
0x0002cfc3: mov edx, 0x89fffff9; ret 0x95e9; 
0x000e9d62: mov edx, 0x89fffffc; ret 0xc031; 
0x0019ac59: mov edx, 0xa1240002; clc; jmp dword ptr [edi]; 
0x0019ac91: mov edx, 0xa18c0002; clc; call dword ptr [esi + 2]; 
0x000de32f: mov edx, 0xc3810004; ret 0xc4c; 
0x0002e2dc: mov edx, 0xc381000f; adc eax, 0x8700174d; sar dword ptr [eax + 0xb3], cl; call dword ptr gs:[0x10]; 
0x00175d1c: mov edx, 0xd1cffee; jnp 0x175cdd; out dx, al; jmp dword ptr [edx]; 
0x000024f7: mov edx, 0xd8f9715c; dec esi; jp 0x24df; jmp dword ptr [ebx]; 
0x0001ba62: mov edx, 0xeb00060d; ret; 
0x000031cf: mov edx, 0xee03f37f; aam 0x5c; ret 0x2ec0; 
0x0002c690: mov edx, 0xf6000000; ret 0xf02; 
0x0017b1a5: mov edx, 0xf7cd0000; out dx, eax; call dword ptr [eax]; 
0x0007e2e0: mov edx, 0xffffffff; bsf eax, dword ptr [esp + 4]; cmove eax, edx; add eax, 1; ret; 
0x000e6a5d: mov edx, 0xffffffff; call 0xe6980; sar eax, 0x1f; add esp, 0xc; ret; 
0x00145725: mov edx, 0xffffffff; cmovbe eax, edx; pop esi; pop ebp; pop ebx; ret; 
0x000b9940: mov edx, 0xffffffff; cmovne eax, edx; ret; 
0x000e7a99: mov edx, 0xffffffff; mov edi, edx; xchg edi, ebx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000e7b59: mov edx, 0xffffffff; mov edi, edx; xchg edi, ebx; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000729c5: mov edx, 0xffffffff; ret; 
0x0012c197: mov edx, 0xffffffff; test eax, eax; cmovne eax, edx; add esp, 0x1c; ret; 
0x0012edc4: mov edx, 0xffffffff; test eax, eax; cmovne eax, edx; add esp, 0x28; pop ebx; ret; 
0x000fc8f7: mov edx, 0xffffffff; test eax, eax; cmovne edx, dword ptr [esp + 0x1c]; add esp, 0x2c; mov eax, edx; ret; 
0x0011fa89: mov edx, 1; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x000fc1e0: mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000f20b3: mov edx, 1; mov eax, dword ptr [esp + 0x44]; call 0xf1f70; add esp, 4; ret; 
0x000b84b8: mov edx, 1; mov eax, esi; mov ecx, 0x81; xchg ebx, edi; int 0x80; 
0x000e6317: mov edx, 1; mov ecx, 0x5409; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000b9c58: mov edx, 1; mov ecx, esi; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000ba6b4: mov edx, 1; xchg ebx, edx; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0012ea4c: mov edx, 9; mov ecx, edx; xchg ebx, ecx; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00116494: mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x001119b3: mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x18], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x0011a76d: mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x0011188e: mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp + 4], edi; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x0011acaf: mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp + 4], edi; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x0011b2c3: mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x001163ca: mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x0011c9e1: mov edx, dword ptr [eax + 0x28]; mov dword ptr [esp + 0x24], edx; mov edx, dword ptr [eax + 8]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x000272bb: mov edx, dword ptr [eax + 0x30]; mov eax, dword ptr [ebx - 0x90]; add edx, 0x200; mov dword ptr gs:[eax], edx; pop ebx; ret; 
0x0003f8d4: mov edx, dword ptr [eax + 0x38]; mov ecx, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + 0x40]; ret; 
0x0006a058: mov edx, dword ptr [eax + 0xc]; mov dword ptr [eax + 0x10], edx; add esp, 0x1c; ret; 
0x0011b3d0: mov edx, dword ptr [eax + 4]; lea ecx, dword ptr [esp + 0xa8]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], 6; mov dword ptr [esp], eax; call dword ptr [edx + 0x14]; 
0x000ce100: mov edx, dword ptr [eax + 4]; mov dword ptr [edx + 0x10], eax; xor eax, eax; pop esi; ret; 
0x0011f0b8: mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0x20]; 
0x0011f0a0: mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0x24]; 
0x001140c0: mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x001140d8: mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx]; 
0x0011e5e8: mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], esi; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x00111bdd: mov edx, dword ptr [eax + 4]; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x000fc2ee: mov edx, dword ptr [eax + 4]; mov dword ptr [esp], edx; call dword ptr [eax]; 
0x000fc2ee: mov edx, dword ptr [eax + 4]; mov dword ptr [esp], edx; call dword ptr [eax]; add esp, 0x1c; ret; 
0x0011b51c: mov edx, dword ptr [eax + 4]; xor edi, edi; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x0011c998: mov edx, dword ptr [eax + 8]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x0011c998: mov edx, dword ptr [eax + 8]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; add esp, 0x4c; ret; 
0x0006ab0b: mov edx, dword ptr [eax + edx + 0x94]; mov dword ptr [esp], eax; call dword ptr [edx + 0x30]; 
0x0006a053: mov edx, dword ptr [eax]; mov dword ptr [eax + 4], edx; mov edx, dword ptr [eax + 0xc]; mov dword ptr [eax + 0x10], edx; add esp, 0x1c; ret; 
0x000d9364: mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x0010bab4: mov edx, dword ptr [eax]; mov ecx, edx; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0006d910: mov edx, dword ptr [ebp + 0x54]; mov dword ptr [esp + 0x48], edx; mov dword ptr [esp], edx; call dword ptr [edx + 0x10]; 
0x0004260c: mov edx, dword ptr [ebp + 0xc]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x000ebc4a: mov edx, dword ptr [ebp + 8]; mov dword ptr [ebp - 0x38], ecx; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edx; call dword ptr [ebp + 0x10]; 
0x000c5726: mov edx, dword ptr [ebp - 0x1c]; mov edi, eax; xchg edi, ebx; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000bde17: mov edx, dword ptr [ebp - 0x20c]; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edx; call edi; 
0x000bb804: mov edx, dword ptr [ebp - 0x31c]; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edx; call edi; 
0x000b8548: mov edx, dword ptr [ebp - 0x38]; mov eax, dword ptr [ebx + 0x3940]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000b4e75: mov edx, dword ptr [ebp - 0x3c]; mov dword ptr [esp + 8], ecx; lea ecx, dword ptr [ebp - 0x28]; mov dword ptr [esp], ecx; mov dword ptr [esp + 4], edx; call dword ptr [ebp - 0x34]; 
0x00042b3a: mov edx, dword ptr [ebp - 0x4ac]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x0006a2b1: mov edx, dword ptr [ebp - 0x51c]; nop; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0011a785: mov edx, dword ptr [ebp - 0xbc]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edx; call dword ptr [ebp + 0x10]; 
0x0011a732: mov edx, dword ptr [ebp - 0xbc]; mov dword ptr [esp], edx; call dword ptr [eax + 0x14]; 
0x000e2295: mov edx, dword ptr [ebp - 0xbc]; mov eax, dword ptr [ebp - 0x40]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call dword ptr [ebp - 0x28]; 
0x000e3415: mov edx, dword ptr [ebp - 0xcc]; mov eax, dword ptr [ebp - 0x40]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call dword ptr [ebp - 0x28]; 
0x000c5e96: mov edx, dword ptr [ebx + 0x1d98]; call 0xc5da0; add esp, 4; pop ebx; ret; 
0x00057884: mov edx, dword ptr [ebx + eax*4 - 0x48f94]; add edx, dword ptr [ebp - 0x106c]; mov dword ptr [ebp - 0x10c8], 1; mov dword ptr [ebp - 0x1080], ecx; jmp edx; 
0x00045033: mov edx, dword ptr [ebx + eax*4 - 0x497b4]; add edx, dword ptr [ebp - 0x49c]; mov dword ptr [ebp - 0x510], 1; mov dword ptr [ebp - 0x4b8], edi; jmp edx; 
0x00074f66: mov edx, dword ptr [ebx - 0x15c]; and eax, ecx; sub esi, eax; mov dword ptr [esp], esi; call dword ptr [edx]; 
0x00074d04: mov edx, dword ptr [ebx - 0x15c]; mov dword ptr [esp], 0; call dword ptr [edx]; 
0x000d7730: mov edx, dword ptr [ebx - 0x34]; mov eax, dword ptr [edx]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x000c519e: mov edx, dword ptr [ebx - 0x70]; mov dword ptr [edx], ecx; add esp, 0x24; pop ebx; pop esi; ret; 
0x0007c068: mov edx, dword ptr [ebx - 0x78]; mov dword ptr [esp + 0x1c], eax; call dword ptr [edx]; 
0x0007c298: mov edx, dword ptr [ebx - 0x78]; mov dword ptr [esp + 0x20], eax; call dword ptr [edx]; 
0x0010b280: mov edx, dword ptr [ebx - 0xf8]; mov ecx, esi; mov ebp, dword ptr gs:[edx]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000b390b: mov edx, dword ptr [ebx - 0xf8]; mov ecx, esi; mov edi, dword ptr gs:[edx]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0002e20e: mov edx, dword ptr [ebx - 0xf8]; neg eax; mov dword ptr gs:[edx], eax; or eax, 0xffffffff; pop ebx; ret; 
0x00032aff: mov edx, dword ptr [ecx + 8]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000b9a70: mov edx, dword ptr [ecx - 0xf8]; mov eax, 0x20; cmp dword ptr gs:[edx], 0x26; mov edx, 0xffffffff; cmovne eax, edx; ret; 
0x000fab07: mov edx, dword ptr [edi + 0x24]; mov dword ptr [esi + 0x20], edx; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x001127b8: mov edx, dword ptr [edi + 4]; mov dword ptr [esp], edi; mov dword ptr [esp + 0x2c], eax; call dword ptr [edx + 0x10]; 
0x000c3d2d: mov edx, dword ptr [edi]; ret 0xfffb; 
0x000fb80f: mov edx, dword ptr [edx + 0x14]; xor eax, eax; test edx, edx; sete al; ret; 
0x001199b6: mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x0011a3d6: mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x0006a0bb: mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x00069f9b: mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x00115efc: mov edx, dword ptr [edx + 0x8c]; mov dword ptr [eax + 8], edx; ret; 
0x00064ed1: mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x00064ed1: mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; add esp, 0x1c; ret; 
0x000c6b27: mov edx, dword ptr [edx + 8]; pop ebx; pop esi; mov eax, edx; ret; 
0x0001a65f: mov edx, dword ptr [edx + ecx + 0x10]; mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x1c]; mov dword ptr [esp], edx; call eax; 
0x000711d8: mov edx, dword ptr [esi + 0x20]; mov dword ptr [esp + 4], eax; mov dword ptr [esp], esi; sub edx, eax; mov dword ptr [esp + 8], edx; call dword ptr [ecx + 0x38]; 
0x000fab68: mov edx, dword ptr [esi + 0x30]; mov dword ptr [esp], edx; call eax; 
0x00064f19: mov edx, dword ptr [esi + 0x98]; mov dword ptr [esp], edx; call eax; 
0x0001a93c: mov edx, dword ptr [esi + 0xc]; mov dword ptr [esp], edx; call eax; 
0x00091622: mov edx, dword ptr [esi + 3]; mov dword ptr [eax], ecx; mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0006d0af: mov edx, dword ptr [esi + 4]; mov dword ptr [esp], edi; mov dword ptr [esp + 4], eax; mov dword ptr [esp + 8], edx; call dword ptr [edi + 0xc]; 
0x00094a23: mov edx, dword ptr [esi]; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000915e0: mov edx, dword ptr [esi]; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008d920: mov edx, dword ptr [esi]; mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x000949f4: mov edx, dword ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000915c1: mov edx, dword ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008d901: mov edx, dword ptr [esi]; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x000b39b4: mov edx, dword ptr [esp + 0x10]; call 0xb3930; add esp, 8; pop ebx; ret; 
0x00129b38: mov edx, dword ptr [esp + 0x10]; mov dword ptr [edx], edi; pop esi; pop edi; ret; 
0x000ef791: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x000dece1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x13; call dword ptr gs:[0x10]; 
0x000df531: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x000eff0b: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000e6d01: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000e0a71: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000e6ac1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x000eea11: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x000ef891: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000aac41: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000ef231: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x000eb1a1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x000ef521: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000ef561: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000eb1eb: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000c5431: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000ef971: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eb2a1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x000eb261: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000ed571: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x000ed601: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x000ed451: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000debeb: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 3; call dword ptr gs:[0x10]; 
0x000dec6b: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 4; call dword ptr gs:[0x10]; 
0x000de74b: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 5; call dword ptr gs:[0x10]; 
0x000b7cfb: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 7; call dword ptr gs:[0x10]; 
0x00079df6: mov edx, dword ptr [esp + 0x14]; mov dword ptr [esp + 4], edx; call eax; 
0x000ef680: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000efc10: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000efd20: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000efde6: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000ef336: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000eff33: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000b7da6: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000efad6: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x000eb213: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000e1346: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000ed526: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x000ed5b6: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x000ed406: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x000e1396: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x000ef626: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000dec13: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 3; call dword ptr gs:[0x10]; 
0x000dec93: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 4; call dword ptr gs:[0x10]; 
0x000de773: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 5; call dword ptr gs:[0x10]; 
0x000b7d23: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 7; call dword ptr gs:[0x10]; 
0x000e1483: mov edx, dword ptr [esp + 0x14]; mov esi, ecx; xchg edi, ebx; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x0007985f: mov edx, dword ptr [esp + 0x18]; mov dword ptr [esp + 4], edx; call eax; 
0x000ef6ae: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000eb2eb: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x000efc3e: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000efd4e: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000efebb: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x000ef8db: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x000ef74b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x000e7e65: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000ef92b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x000efa8b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x000efa3b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x00123dcb: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xbc; call dword ptr gs:[0x10]; 
0x00123e8b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xbd; call dword ptr gs:[0x10]; 
0x000ed71b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x000ed68b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x000ed4db: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012e51b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xfa; call dword ptr gs:[0x10]; 
0x000e1405: mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x000f11cc: mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x1c]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00019f3b: mov edx, dword ptr [esp + 0x1c]; add esp, 0x24; ret; 
0x00064f85: mov edx, dword ptr [esp + 0x1c]; add esp, 0x2c; ret; 
0x000d845f: mov edx, dword ptr [esp + 0x1c]; mov dword ptr [eax + 8], edx; add esp, 8; ret; 
0x000317c8: mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], edi; mov dword ptr [esp + 8], edx; call esi; 
0x00111856: mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x000792ae: mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp], ecx; mov dword ptr [esp + 4], edx; call eax; 
0x0007a106: mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp], edx; call eax; 
0x00126cad: mov edx, dword ptr [esp + 0x1c]; mov eax, dword ptr [eax + 0x1a0]; mov dword ptr [esp], edx; call eax; 
0x00126c57: mov edx, dword ptr [esp + 0x1c]; mov eax, dword ptr [ebx - 0xfc]; mov dword ptr [esp], edx; mov eax, dword ptr [eax + 0x1a0]; call eax; 
0x000efb3a: mov edx, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000eeb10: mov edx, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000ef390: mov edx, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x153; call dword ptr gs:[0x10]; 
0x000effd0: mov edx, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x15b; call dword ptr gs:[0x10]; 
0x000f0030: mov edx, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x15c; call dword ptr gs:[0x10]; 
0x000e7e99: mov edx, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000eb107: mov edx, dword ptr [esp + 0x1c]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x000eeae1: mov edx, dword ptr [esp + 0x1c]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; int 0x80; 
0x000b3755: mov edx, dword ptr [esp + 0x20]; mov dword ptr [esi + 0xc], edx; mov esi, dword ptr [esp + 0x98]; add esp, 0x9c; ret; 
0x0003165c: mov edx, dword ptr [esp + 0x20]; mov dword ptr [esp + 4], esi; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], edx; call edi; 
0x000197e9: mov edx, dword ptr [esp + 0x20]; mov dword ptr [esp], edx; call eax; 
0x000efb74: mov edx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000eaea0: mov edx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00113e53: mov edx, dword ptr [esp + 0x22a4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x00113cfe: mov edx, dword ptr [esp + 0x22a4]; mov dword ptr [esp], edx; call dword ptr [eax + 8]; 
0x000fbea3: mov edx, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x20]; mov dword ptr [esp], edx; call eax; 
0x0006f2cf: mov edx, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x40]; 
0x0006f5e2: mov edx, dword ptr [esp + 0x24]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x20]; 
0x0007b288: mov edx, dword ptr [esp + 0x24]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call eax; 
0x000df7a7: mov edx, dword ptr [esp + 0x24]; xchg ebx, edx; mov eax, 0xb7; call dword ptr gs:[0x10]; 
0x00116259: mov edx, dword ptr [esp + 0x28]; mov dword ptr [esp], edi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x0011b5e5: mov edx, dword ptr [esp + 0x2c]; mov dword ptr [esp + 4], edi; mov dword ptr [esp], eax; call edx; 
0x000a5eb7: mov edx, dword ptr [esp + 0x2c]; mov dword ptr [esp], edx; call edi; 
0x000a5eaf: mov edx, dword ptr [esp + 0x30]; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x2c]; mov dword ptr [esp], edx; call edi; 
0x0001985c: mov edx, dword ptr [esp + 0x30]; mov dword ptr [esp], edx; call eax; 
0x0014a46d: mov edx, dword ptr [esp + 0x30]; mov eax, esi; add eax, dword ptr [edx + 8]; mov dword ptr [esp], eax; call edi; 
0x0007b120: mov edx, dword ptr [esp + 0x34]; mov dword ptr [esp + 4], edx; lea edx, dword ptr [edi + 0x19]; mov dword ptr [esp], edx; call eax; 
0x00019854: mov edx, dword ptr [esp + 0x34]; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x30]; mov dword ptr [esp], edx; call eax; 
0x00067045: mov edx, dword ptr [esp + 0x34]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x2c]; 
0x00019e3a: mov edx, dword ptr [esp + 0x34]; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x40]; add esp, 0x44; ret; 
0x0010e2a3: mov edx, dword ptr [esp + 0x38]; mov dword ptr [esp + 8], edx; call 0x10d6a0; add esp, 0x2c; ret; 
0x0007a0fe: mov edx, dword ptr [esp + 0x3c]; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp], edx; call eax; 
0x00078f02: mov edx, dword ptr [esp + 0x3c]; mov dword ptr [esp], ebp; mov dword ptr [esp + 4], edx; call eax; 
0x0007952a: mov edx, dword ptr [esp + 0x3c]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], ebp; mov dword ptr [esp + 8], edx; call eax; 
0x00079b5e: mov edx, dword ptr [esp + 0x40]; mov dword ptr [esp + 4], edx; call eax; 
0x00065886: mov edx, dword ptr [esp + 0x40]; mov dword ptr [esp + 8], edi; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x000b37e8: mov edx, dword ptr [esp + 0x60]; mov dword ptr [esi + 0x10], edx; mov esi, dword ptr [esp + 0x98]; add esp, 0x9c; ret; 
0x00114b74: mov edx, dword ptr [esp + 0x60]; mov dword ptr [esp], edx; call eax; 
0x00114b6c: mov edx, dword ptr [esp + 0x64]; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x60]; mov dword ptr [esp], edx; call eax; 
0x00021963: mov edx, dword ptr [esp + 0x80]; mov dword ptr [esp + 8], eax; mov dword ptr [esp], edx; call dword ptr [ebp]; 
0x001163c1: mov edx, dword ptr [esp + 0x80]; mov eax, dword ptr [edx]; mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x000f0d95: mov edx, dword ptr [esp + 0x84]; shl edx, 0x18; or eax, edx; add esp, 0x7c; ret; 
0x0001f666: mov edx, dword ptr [esp + 0xa0]; mov dword ptr [esp + 8], eax; mov dword ptr [esp], edx; call dword ptr [esi]; 
0x0012b1e4: mov edx, dword ptr [esp + 0xbc]; mov dword ptr [esp + 4], esi; mov dword ptr [esp + 8], edi; mov dword ptr [esp], ebp; mov dword ptr [esp + 0xc], edx; call dword ptr [eax + 0x40]; 
0x0011f724: mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x001298eb: mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0002e27e: mov edx, dword ptr [esp + 0xc]; mov esi, eax; xchg ebx, edx; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000dde30: mov edx, dword ptr [esp + 0xc]; xchg ebx, edx; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ddeb0: mov edx, dword ptr [esp + 0xc]; xchg ebx, edx; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000dde70: mov edx, dword ptr [esp + 0xc]; xchg ebx, edx; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x0002de8d: mov edx, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00033019: mov edx, dword ptr [esp + 4]; add esp, 0x14; ret; 
0x000271d4: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000271e4: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00026a8b: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [ecx - 0x158]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0011f330: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x000a8442: mov edx, dword ptr [esp + 4]; mov ecx, eax; xchg ebx, ecx; mov eax, 0xd; call dword ptr gs:[0x10]; 
0x000b7be0: mov edx, dword ptr [esp + 4]; mov ecx, edx; xchg ebx, ecx; mov eax, 0x2b; call dword ptr gs:[0x10]; 
0x000eede0: mov edx, dword ptr [esp + 4]; mov ecx, edx; xchg ebx, ecx; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x000eee00: mov edx, dword ptr [esp + 4]; mov ecx, edx; xchg ebx, ecx; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0011fc15: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0xc], edx; ret; 
0x000d8a54: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00073154: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00025204: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x00129910: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x4c], edx; ret; 
0x001298c0: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x000e4d74: mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x000e9570: mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0x10f; call dword ptr gs:[0x10]; 
0x000e65c0: mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0x4b; call dword ptr gs:[0x10]; 
0x000e6a80: mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0x60; call dword ptr gs:[0x10]; 
0x000e6580: mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0xbf; call dword ptr gs:[0x10]; 
0x000b90e0: mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x00129d7b: mov edx, dword ptr [esp]; ret; 
0x00124994: mov edx, eax; add esp, 0x18; mov eax, edx; pop ebx; ret; 
0x00118a5c: mov edx, eax; add esp, 0x434; mov eax, edx; pop esi; pop edi; ret; 
0x0002ba66: mov edx, eax; mov eax, 2; call 0x2b9b0; add esp, 0x2c; ret; 
0x0006cadb: mov edx, eax; mov eax, edx; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00112f43: mov edx, eax; mov eax, edx; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0011ed33: mov edx, eax; mov eax, edx; ret; 
0x00129e3d: mov edx, eax; sar edx, 0x1f; add esp, 0x18; pop esi; ret; 
0x00032fc4: mov edx, eax; sar edx, 0x1f; xor eax, edx; sub eax, edx; ret; 
0x000b9e4c: mov edx, eax; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x00019bc9: mov edx, ebp; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000f04ca: mov edx, ebx; mov eax, 0x66; mov ebx, 0x10; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f04f1: mov edx, ebx; mov eax, 0x66; mov ebx, 0x10; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f03ca: mov edx, ebx; mov eax, 0x66; mov ebx, 0x11; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f03f1: mov edx, ebx; mov eax, 0x66; mov ebx, 0x11; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0a6a: mov edx, ebx; mov eax, 0x66; mov ebx, 0x12; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0a91: mov edx, ebx; mov eax, 0x66; mov ebx, 0x12; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f02ca: mov edx, ebx; mov eax, 0x66; mov ebx, 0xa; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f02f1: mov edx, ebx; mov eax, 0x66; mov ebx, 0xa; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f054a: mov edx, ebx; mov eax, 0x66; mov ebx, 0xb; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0571: mov edx, ebx; mov eax, 0x66; mov ebx, 0xb; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f034a: mov edx, ebx; mov eax, 0x66; mov ebx, 0xc; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0371: mov edx, ebx; mov eax, 0x66; mov ebx, 0xc; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0600: mov edx, ebx; mov eax, 0x66; mov ebx, 0xd; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f05c0: mov edx, ebx; mov eax, 0x66; mov ebx, 0xe; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0240: mov edx, ebx; mov eax, 0x66; mov ebx, 0xf; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0640: mov edx, ebx; mov eax, 0x66; mov ebx, 1; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0100: mov edx, ebx; mov eax, 0x66; mov ebx, 2; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f014a: mov edx, ebx; mov eax, 0x66; mov ebx, 3; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0171: mov edx, ebx; mov eax, 0x66; mov ebx, 3; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0280: mov edx, ebx; mov eax, 0x66; mov ebx, 4; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f008a: mov edx, ebx; mov eax, 0x66; mov ebx, 5; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f00b1: mov edx, ebx; mov eax, 0x66; mov ebx, 5; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0200: mov edx, ebx; mov eax, 0x66; mov ebx, 6; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f01c0: mov edx, ebx; mov eax, 0x66; mov ebx, 7; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0680: mov edx, ebx; mov eax, 0x66; mov ebx, 8; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f044a: mov edx, ebx; mov eax, 0x66; mov ebx, 9; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0471: mov edx, ebx; mov eax, 0x66; mov ebx, 9; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000efc90: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x000ef5e0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x000ef810: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x000e81b0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x000eed00: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x16; call dword ptr gs:[0x10]; 
0x000aac80: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x19; call dword ptr gs:[0x10]; 
0x000b7ed0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x000e0bb0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x000df4b0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x000df570: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x2a; call dword ptr gs:[0x10]; 
0x000e8010: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x000de560: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x000de560: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000e8050: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x000efcd0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x000eea50: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x000e8470: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x000ef270: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x000e84f0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x000efbc0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x000e809a: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x000b7ba0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x000ef3e0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7c; call dword ptr gs:[0x10]; 
0x000ef700: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000b92a0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x000df6e0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x000ef9b0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000b9360: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x000e814a: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000eb3b0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000c5470: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000c54f0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000c5530: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x000e0b10: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x000df6a0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000ef5a0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x000dda70: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 1; call dword ptr gs:[0x10]; 
0x000deb7a: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000b8210: mov edx, ebx; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa2; call dword ptr gs:[0x10]; 
0x000df620: mov edx, ebx; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 8; call dword ptr gs:[0x10]; 
0x000ef850: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x000efda0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x000efe30: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000df5b0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x000efe70: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x000ef4e0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x000eff80: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x000ddb10: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1e; call dword ptr gs:[0x10]; 
0x000ded20: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x21; call dword ptr gs:[0x10]; 
0x0002e1a0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00055500: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x26; call dword ptr gs:[0x10]; 
0x000de6a0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000eed40: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x34; call dword ptr gs:[0x10]; 
0x000b92e0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x000df4f0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x000e7d40: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x000ef2f0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4b; call dword ptr gs:[0x10]; 
0x000ef2b0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4c; call dword ptr gs:[0x10]; 
0x000e67c0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000a8460: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4e; call dword ptr gs:[0x10]; 
0x000a84a0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4f; call dword ptr gs:[0x10]; 
0x000e09d0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x000e84b0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x000eb160: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x000e97a0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5c; call dword ptr gs:[0x10]; 
0x000e97e0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5d; call dword ptr gs:[0x10]; 
0x000de5c0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x000de130: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x63; call dword ptr gs:[0x10]; 
0x000de170: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x64; call dword ptr gs:[0x10]; 
0x000aac00: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x000e7e10: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000ef420: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x000df1c0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000eb330: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x000eb370: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000c53b0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000c53f0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000c5570: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000b81ea: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa2; call dword ptr gs:[0x10]; 
0x000eea90: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x000ef460: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x000ef4a0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0002e770: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000ef9f0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x000ed6d0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x000ed640: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x000ed490: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000de580: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x000df5fa: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 8; call dword ptr gs:[0x10]; 
0x000e0920: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 9; call dword ptr gs:[0x10]; 
0x0001a2e8: mov edx, ebx; sub edx, dword ptr [ebx + eax*4 - 0x188d00]; jmp edx; 
0x001195b7: mov edx, ebx; sub edx, dword ptr [ebx + eax*4 - 0x89a30]; jmp edx; 
0x00083067: mov edx, ebx; sub edx, dword ptr [ebx + edi*4 - 0x11ff80]; jmp edx; 
0x000ce671: mov edx, ecx; mov dword ptr [esp + 4], esi; call 0xce4d0; add esp, 0x28; pop esi; ret; 
0x00066d81: mov edx, ecx; mov esi, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x34]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x00066ba9: mov edx, ecx; mov esi, dword ptr [esp + 0x40]; mov edi, dword ptr [esp + 0x44]; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x00114d17: mov edx, edi; aam 0xfb; jmp dword ptr [ebp - 0x75]; 
0x000eb901: mov edx, edi; call 0xeb8d0; mov eax, dword ptr [esi]; mov dword ptr [esp], eax; call edi; 
0x000d909b: mov edx, edi; mov ecx, eax; xchg edi, ebx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000d90c7: mov edx, edi; mov ecx, eax; xchg edi, ebx; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00081b9d: mov edx, edi; or byte ptr [ecx], dl; pop esi; pop edi; ret; 
0x000354e6: mov edx, edi; pop esi; pop edi; pop ebp; ret; 
0x000c7749: mov edx, edi; ret 0xfffb; 
0x000ff047: mov edx, esi; mov dword ptr [esp + 0x20], eax; xchg edi, ebx; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x000c5688: mov edx, esi; mov ecx, dword ptr [ebp + 0xc]; xchg edi, ebx; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00029461: mov edx, esi; mov esi, dword ptr [ebp - 0x94]; mov ecx, edx; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0003edfc: mov edx, esi; xchg ebx, edx; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x000def09: mov edx, esi; xchg edi, ebx; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x0003ea67: mov edx, esi; xchg edi, ebx; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x000e7e72: mov es, word ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001483fe: mov es, word ptr [eax]; add byte ptr [eax], al; lea eax, dword ptr [ecx + 8]; ret; 
0x0014787e: mov es, word ptr [eax]; add byte ptr [eax], al; lea eax, dword ptr [edi - 8]; pop edi; ret; 
0x00124b0a: mov es, word ptr [eax]; add byte ptr [eax], al; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 0x14]; 
0x0005a70f: mov es, word ptr [ebx]; ret; 
0x00188069: mov es, word ptr [ecx]; add byte ptr [esi + edi*4 - 0xd], dh; jmp dword ptr [eax]; 
0x0019730f: mov esi, 0x14000000; add byte ptr [eax], al; add byte ptr [eax], bl; add dword ptr [edx], 0xf7bd0400; jmp dword ptr [ebx]; 
0x00199a11: mov esi, 0x1800; add byte ptr [eax], bl; test al, 2; add byte ptr [ecx + ebx*2 - 8], ah; jmp dword ptr [ecx]; 
0x00177618: mov esi, 0x1c00c3; add byte ptr [eax], al; and byte ptr [eax + eax - 0x10eae400], al; jmp dword ptr [eax]; 
0x0019b1c8: mov esi, 0x1c00c3; add byte ptr [eax], al; sar byte ptr [edi - 0x4413fffe], 1; clc; jmp dword ptr [edi]; 
0x001775f1: mov esi, 0x24c3; add al, bh; add dword ptr [eax], 0; adc al, 0xef; call esp; 
0x00191f57: mov esi, 0x2c0b41c3; add byte ptr [eax], al; add byte ptr [eax + 0x2d000228], dh; loope 0x191f5d; call dword ptr [eax]; 
0x0016fede: mov esi, 0x41140e0a; ret; 
0x0007adc9: mov esi, 0x4289feda; add al, 0x5b; ret; 
0x0019b699: mov esi, 0x4400; add byte ptr [eax + 0x7c0002c4], ah; ret; 
0x0018b009: mov esi, 0x46640001; cmc; jmp dword ptr [ebx]; 
0x00009f79: mov esi, 0x49000f; add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; ret 0x11; 
0x00166a78: mov esi, 0x4efffcf9; cli; cld; call esp; 
0x0018b0cd: mov esi, 0x4f200001; cmc; call dword ptr [ebx]; 
0x0002bd00: mov esi, 0x500c138c; sti; jmp dword ptr [esi + 0x39]; 
0x000b98fe: mov esi, 0x5b000000; ret; 
0x0000308a: mov esi, 0x614a3e5c; call dword ptr [ecx]; 
0x000833d4: mov esi, 0x75f239d2; out 0x5e, al; pop edi; pop ebp; ret; 
0x00083354: mov esi, 0x75f239d2; out dx, al; pop esi; ret; 
0x00119e1a: mov esi, 0x8024948b; add byte ptr [eax], al; add byte ptr [ebx + 0x20508b02], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x000f80b1: mov esi, 0x8100031c; ret; 
0x000e38b1: mov esi, 0x81000464; ret; 
0x000cb7b1: mov esi, 0x810005e5; ret; 
0x00074db1: mov esi, 0x81000b4f; ret; 
0x000739b1: mov esi, 0x81000b63; ret; 
0x0002bfeb: mov esi, 0x831f244c; ret 0x8001; 
0x000419ab: mov esi, 0x83ea2901; rol byte ptr [ecx], 0x39; ret 0x3a74; 
0x0004a03e: mov esi, 0x89000358; ret 0xc031; 
0x000e8b34: mov esi, 0x8900768d; clc; pop esi; pop edi; pop ebp; ret; 
0x0004661d: mov esi, 0x89c78901; ret 0xefc1; 
0x000a541b: mov esi, 0x8bdc552b; dec ebp; shr byte ptr [ecx], 1; ret 0x48b; 
0x00109168: mov esi, 0x8d06244c; imul edx, eax, 0x8357e983; std; or dword ptr [edi], ecx; inc esi; int 0x80; 
0x0004b29c: mov esi, 0x8dff3d44; push eax; rol byte ptr [ebx - 0x68f0f606], 1; ret 0xe083; 
0x0018b4dd: mov esi, 0xb41c3; add byte ptr [eax], ch; add byte ptr [eax], al; add al, ch; ret 1; 
0x001986b1: mov esi, 0xb47c3; add byte ptr [eax + eax], dl; add byte ptr [esp + edx*4 + 0x15700002], bh; clc; call dword ptr [esi]; 
0x0019b00d: mov esi, 0xb5800002; clc; jmp dword ptr [eax]; 
0x0019b091: mov esi, 0xb60c0002; clc; jmp edx; 
0x0007ad7c: mov esi, 0xba0006; add byte ptr [eax], al; add byte ptr [ebx + 0x440ffff8], al; ret 0xc483; 
0x00099964: mov esi, 0xbf75c085; mov eax, edi; pop esi; pop edi; ret; 
0x0014e67c: mov esi, 0xc0000006; push es; add byte ptr [eax], al; ret 6; 
0x0014e87c: mov esi, 0xc0000007; pop es; add byte ptr [eax], al; ret 7; 
0x0008e936: mov esi, 0xc03000c; cdq; jmp ecx; 
0x0008e844: mov esi, 0xc03000c; xchg eax, ecx; jmp ecx; 
0x00157a5e: mov esi, 0xc2c1c0bf; ret; 
0x0016d1d5: mov esi, 0xc8fa0002; stc; jmp dword ptr [eax - 0x42]; 
0x00176020: mov esi, 0xd1cffee; jns 0x175fe4; out dx, al; jmp dword ptr [edx]; 
0x001761d0: mov esi, 0xd1cffee; out 0xbd, eax; out dx, al; jmp dword ptr [edx]; 
0x00175ff0: mov esi, 0xd1cffee; xor al, 0xbd; out dx, al; jmp dword ptr [edx]; 
0x0019b591: mov esi, 0xd9e80002; clc; call dword ptr [eax]; 
0x0019b561: mov esi, 0xda080002; clc; call dword ptr [eax]; 
0x0019b531: mov esi, 0xda280002; clc; call dword ptr [eax]; 
0x0019b501: mov esi, 0xda480002; clc; call dword ptr [eax]; 
0x0019b4d1: mov esi, 0xda680002; clc; call dword ptr [eax]; 
0x0016ac49: mov esi, 0xe1b0fff4; add dword ptr [eax], eax; add al, 0xbf; hlt; call eax; 
0x0017b595: mov esi, 0xf5210000; out dx, eax; call dword ptr [eax]; 
0x0017b565: mov esi, 0xf5410000; out dx, eax; call dword ptr [eax]; 
0x0017b535: mov esi, 0xf5610000; out dx, eax; call dword ptr [eax]; 
0x0017b505: mov esi, 0xf5810000; out dx, eax; call dword ptr [eax]; 
0x0017b4d5: mov esi, 0xf5a10000; out dx, eax; call dword ptr [eax]; 
0x001498ce: mov esi, 0xf6000000; ret 0xf0f; 
0x00158d2a: mov esi, 0xfa1fb992; xchg dword ptr [esp + eax + 0x6fa9ce9d], esp; ret; 
0x0002bd56: mov esi, 0xfa832814; div byte ptr [edx + ebp*8 - 0x7d]; ret 0x8301; 
0x00133371: mov esi, 0xff69fce8; inc dword ptr [ecx + 0x32d29c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00132d41: mov esi, 0xff702ce8; inc dword ptr [ecx + 0x330d9c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0006db22: mov esi, 0xffffffff; mov dword ptr [esp + 8], edi; mov edi, 0xffffffff; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x0002ccd5: mov esi, 0xffffffff; mov dword ptr gs:[eax], 0x16; mov ecx, edi; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0002dfc6: mov esi, 8; cmovne edx, eax; xchg edi, ebx; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x0002e32c: mov esi, 8; mov ecx, edx; xchg edi, ebx; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0002dd10: mov esi, dword ptr [eax + 4]; mov edi, dword ptr [eax + 8]; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x0003edfa: mov esi, dword ptr [eax]; mov edx, esi; xchg ebx, edx; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x000c77d6: mov esi, dword ptr [ebp - 0x70]; mov dword ptr [esp + 0xc], edi; mov dword ptr [esp + 8], eax; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [ebp - 0x50]; 
0x00029463: mov esi, dword ptr [ebp - 0x94]; mov ecx, edx; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000f1cf2: mov esi, dword ptr [ebp - 8]; mov ebx, dword ptr [ebp - 0xc]; mov edi, dword ptr [ebp - 4]; mov esp, ebp; pop ebp; ret; 
0x00030d2d: mov esi, dword ptr [ebp - 8]; mov edi, dword ptr [ebp - 4]; mov esp, ebp; pop ebp; ret; 
0x0000282e: mov esi, dword ptr [ebx - 0x5e]; dec esi; push ecx; mov edi, 0xa9011612; ret; 
0x00103579: mov esi, dword ptr [ecx + 4]; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x000dfecc: mov esi, dword ptr [esp + 0x1014]; mov edi, dword ptr [esp + 0x1018]; add esp, 0x101c; ret; 
0x00054df5: mov esi, dword ptr [esp + 0x1024]; mov edi, dword ptr [esp + 0x1028]; add esp, 0x102c; ret; 
0x000ab4a0: mov esi, dword ptr [esp + 0x10]; add esp, 0x1c; ret; 
0x000ca360: mov esi, dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret 0xc; 
0x00019d88: mov esi, dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0011bcc2: mov esi, dword ptr [esp + 0x124]; mov edi, dword ptr [esp + 0x128]; add esp, 0x12c; ret; 
0x0002ddcb: mov esi, dword ptr [esp + 0x134]; mov edi, dword ptr [esp + 0x138]; add esp, 0x13c; ret; 
0x00114417: mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; add eax, edx; ret; 
0x0002e3e4: mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x000f1271: mov esi, dword ptr [esp + 0x14]; cmovbe eax, dword ptr [esp + 8]; add esp, 0x1c; ret; 
0x000d86a1: mov esi, dword ptr [esp + 0x14]; mov dword ptr [edi + 4], eax; xor eax, eax; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0007b29b: mov esi, dword ptr [esp + 0x14]; mov dword ptr [edi], eax; mov ebx, dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00115105: mov esi, dword ptr [esp + 0x14]; mov eax, edx; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0001af5c: mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0007e9e6: mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; mov ebp, dword ptr [esp + 0x1c]; add esp, 0x20; ret; 
0x0011ea92: mov esi, dword ptr [esp + 0x14]; movzx eax, al; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0012476f: mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; mov eax, edx; ret; 
0x0002391d: mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000ca618: mov esi, dword ptr [esp + 0x18]; and eax, 0xc; add esp, 0x1c; ret; 
0x0006bf6e: mov esi, dword ptr [esp + 0x18]; mov dword ptr [eax + 0x20], 0; mov dword ptr [eax + 0x28], 0; mov dword ptr [eax + 0x24], 0; add esp, 0x1c; ret; 
0x0011fc66: mov esi, dword ptr [esp + 0x18]; mov dword ptr [eax], 0; add esp, 0x1c; ret; 
0x000689a0: mov esi, dword ptr [esp + 0x18]; mov dword ptr [edx], eax; xor eax, eax; add esp, 0x1c; ret; 
0x000e3c2c: mov esi, dword ptr [esp + 0x18]; mov dword ptr gs:[eax], 0x24; mov eax, 1; add esp, 0x1c; ret; 
0x0010fc5b: mov esi, dword ptr [esp + 0x18]; mov ebp, dword ptr [esp + 0x20]; add esp, 0x24; ret; 
0x0010983f: mov esi, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x000703c5: mov esi, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov dword ptr [edx + 0xb8], ecx; add esp, 0x1c; ret; 
0x000eb626: mov esi, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov dword ptr gs:[eax], 0x16; add esp, 0x1c; ret; 
0x0003280e: mov esi, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x0002c8ae: mov esi, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov dword ptr gs:[eax], 9; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x00040e51: mov esi, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, dword ptr [eax + 0x34]; add esp, 0x1c; ret; 
0x00031056: mov esi, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; mov ebp, dword ptr [esp + 0x20]; add esp, 0x24; ret; 
0x000ef67c: mov esi, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000efc0c: mov esi, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000efd1c: mov esi, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000efde2: mov esi, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000ef332: mov esi, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000b7da2: mov esi, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000efad2: mov esi, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x000e1342: mov esi, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000ed522: mov esi, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x000ed5b2: mov esi, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x000ed402: mov esi, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x000e1392: mov esi, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x000ef622: mov esi, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x00040d27: mov esi, dword ptr [esp + 0x18]; test eax, eax; cmovs eax, edx; add esp, 0x1c; ret; 
0x0007a7a9: mov esi, dword ptr [esp + 0x1c]; mov dword ptr [esp], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 8], esi; call eax; 
0x000982c8: mov esi, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x20]; mov ebp, dword ptr [esp + 0x24]; add esp, 0x28; ret; 
0x0002ef97: mov esi, dword ptr [esp + 0x20]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000eb10b: mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x000eeee0: mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, 8; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x00127555: mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 4; 
0x000d9c5a: mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 8; 
0x00019bcb: mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000eeae5: mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; int 0x80; 
0x000e0e10: mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; mov eax, 0x110; call dword ptr gs:[0x10]; 
0x000e4f10: mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000efb36: mov esi, dword ptr [esp + 0x20]; mov edx, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000eeb0c: mov esi, dword ptr [esp + 0x20]; mov edx, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000ef38c: mov esi, dword ptr [esp + 0x20]; mov edx, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x153; call dword ptr gs:[0x10]; 
0x000effcc: mov esi, dword ptr [esp + 0x20]; mov edx, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x15b; call dword ptr gs:[0x10]; 
0x000f002c: mov esi, dword ptr [esp + 0x20]; mov edx, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x15c; call dword ptr gs:[0x10]; 
0x000e7e95: mov esi, dword ptr [esp + 0x20]; mov edx, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x0006b8e4: mov esi, dword ptr [esp + 0x20]; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000a7b3c: mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; imul eax, edx; ret; 
0x00069472: mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; ret; 
0x000a7b0f: mov esi, dword ptr [esp + 0x24]; div edi; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0011f6f4: mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; mov edx, eax; mov eax, edx; ret; 
0x00019869: mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0012becb: mov esi, dword ptr [esp + 0x24]; test eax, eax; cmove eax, edi; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x001007b0: mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret 4; 
0x000caf64: mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000ef1cc: mov esi, dword ptr [esp + 0x28]; mov edi, dword ptr [esp + 0x2c]; mov ebp, dword ptr [esp + 0x30]; add esp, 0x34; ret; 
0x000ed8b7: mov esi, dword ptr [esp + 0x30]; add esp, 0x3c; ret; 
0x000e5b77: mov esi, dword ptr [esp + 0x30]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x000b3898: mov esi, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x34]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret 4; 
0x0001bb51: mov esi, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x34]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret 8; 
0x0001ba2f: mov esi, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x34]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x000d827a: mov esi, dword ptr [esp + 0x30]; setne al; mov edi, dword ptr [esp + 0x34]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x0006cbbe: mov esi, dword ptr [esp + 0x34]; add esp, 0x3c; ret; 
0x0006cbce: mov esi, dword ptr [esp + 0x34]; mov edi, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x000e6255: mov esi, dword ptr [esp + 0x34]; mov edi, dword ptr [esp + 0x38]; mov ebp, dword ptr [esp + 0x3c]; add esp, 0x40; ret; 
0x00019e3e: mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x40]; add esp, 0x44; ret; 
0x00129c50: mov esi, dword ptr [esp + 0x40]; mov edi, dword ptr [esp + 0x44]; mov dword ptr [edx], ecx; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x000d7dc9: mov esi, dword ptr [esp + 0x40]; mov edi, dword ptr [esp + 0x44]; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret 0x1c; 
0x0011b5be: mov esi, dword ptr [esp + 0x40]; mov edi, dword ptr [esp + 0x44]; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret 8; 
0x0001a32e: mov esi, dword ptr [esp + 0x40]; mov edi, dword ptr [esp + 0x44]; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x001198f7: mov esi, dword ptr [esp + 0x434]; mov edi, dword ptr [esp + 0x438]; add esp, 0x43c; ret; 
0x00054c81: mov esi, dword ptr [esp + 0x44]; mov edi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x0010929f: mov esi, dword ptr [esp + 0x470]; mov dword ptr [esp + 0x10], edx; mov dword ptr [esp], esi; call eax; 
0x001096af: mov esi, dword ptr [esp + 0x474]; mov dword ptr [esp + 0x10], edx; mov dword ptr [esp], esi; call eax; 
0x00117848: mov esi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x00054a0b: mov esi, dword ptr [esp + 0x50]; mov edi, dword ptr [esp + 0x54]; mov ebp, dword ptr [esp + 0x58]; add esp, 0x5c; ret; 
0x000d952c: mov esi, dword ptr [esp + 0x540]; mov edi, dword ptr [esp + 0x544]; mov ebp, dword ptr [esp + 0x548]; add esp, 0x54c; ret; 
0x001121a7: mov esi, dword ptr [esp + 0x54]; mov edi, dword ptr [esp + 0x58]; add esp, 0x5c; ret; 
0x000e60ad: mov esi, dword ptr [esp + 0x58]; mov edi, dword ptr [esp + 0x5c]; mov ebp, dword ptr [esp + 0x60]; add esp, 0x64; ret; 
0x0011c31f: mov esi, dword ptr [esp + 0x60]; mov edi, dword ptr [esp + 0x64]; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret 0xc; 
0x0002350e: mov esi, dword ptr [esp + 0x60]; mov edi, dword ptr [esp + 0x64]; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret 8; 
0x0006633f: mov esi, dword ptr [esp + 0x60]; mov edi, dword ptr [esp + 0x64]; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x001127d3: mov esi, dword ptr [esp + 0x64]; mov edi, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x0002d85c: mov esi, dword ptr [esp + 0x70]; mov edi, dword ptr [esp + 0x74]; mov ebp, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x000b4651: mov esi, dword ptr [esp + 0x74]; mov edi, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x000196d6: mov esi, dword ptr [esp + 0x84]; mov edi, dword ptr [esp + 0x88]; add esp, 0x8c; ret; 
0x000b375c: mov esi, dword ptr [esp + 0x98]; add esp, 0x9c; ret; 
0x000672cc: mov esi, dword ptr [esp + 0xc4]; mov edi, dword ptr [esp + 0xc8]; add esp, 0xcc; ret; 
0x000830b4: mov esi, dword ptr [esp + 0xc]; mov edi, dword ptr [esp + 0x10]; mov ebp, dword ptr [esp + 0x14]; add esp, 0x18; ret; 
0x000695c9: mov esi, dword ptr [esp + 0xe0]; mov ebp, dword ptr [esp + 0xe8]; add esp, 0xec; ret; 
0x000d197d: mov esi, dword ptr [esp + 4]; add esp, 0xc; ret; 
0x00025f78: mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0002d591: mov esi, dword ptr [esp + 4]; fld dword ptr [esp]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00025f86: mov esi, dword ptr [esp + 4]; mov ebx, dword ptr [esp]; add esp, 8; ret; 
0x0002e0da: mov esi, dword ptr [esp + 4]; mov ebx, dword ptr [esp]; mov dword ptr gs:[eax], 0x16; or eax, 0xffffffff; add esp, 8; ret; 
0x000268ca: mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0007ebf6: mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; mov ebp, dword ptr [esp + 0xc]; add esp, 0x10; ret; 
0x0007a6fe: mov esi, dword ptr [esp + 8]; add esp, 0xc; ret 4; 
0x00041896: mov esi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0007732e: mov esi, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov dword ptr gs:[eax], 0xc; xor eax, eax; add esp, 0xc; ret; 
0x0002c818: mov esi, dword ptr [esp + 8]; mov edi, dword ptr [esp + 0xc]; mov ebp, dword ptr [esp + 0x10]; add esp, 0x14; ret; 
0x0007e335: mov esi, dword ptr [esp]; add esp, 8; ret; 
0x00114ac6: mov esi, dword ptr [esp]; mov dword ptr [eax + 0x18], ecx; mov eax, 1; add esp, 8; ret; 
0x00055666: mov esi, dword ptr [esp]; mov dword ptr [eax + 4], 1; xor eax, eax; add esp, 0xc; ret; 
0x0006a571: mov esi, dword ptr [esp]; mov dword ptr [ecx + 4], edi; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0010fac5: mov esi, dword ptr [esp]; mov dword ptr [ecx], edx; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x001141f9: mov esi, dword ptr [esp]; mov dword ptr [edx + 0x2c], edi; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0003305e: mov esi, dword ptr [esp]; mov eax, ecx; mov dword ptr [ecx + 4], edx; mov edi, dword ptr [esp + 4]; add esp, 8; ret 4; 
0x00082e01: mov esi, dword ptr [esp]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000555de: mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x00026926: mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x001153d1: mov esi, dword ptr ds:[esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00041df1: mov esi, eax; add esp, 0x444; mov eax, esi; pop ebx; pop esi; ret; 
0x000c5d22: mov esi, eax; mov eax, 0xffffffff; cmovbe eax, esi; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x00027a1b: mov esi, eax; mov eax, esi; pop esi; pop edi; pop ebp; ret 4; 
0x000818c6: mov esi, eax; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x000f04ef: mov esi, eax; mov edx, ebx; mov eax, 0x66; mov ebx, 0x10; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f03ef: mov esi, eax; mov edx, ebx; mov eax, 0x66; mov ebx, 0x11; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0a8f: mov esi, eax; mov edx, ebx; mov eax, 0x66; mov ebx, 0x12; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f02ef: mov esi, eax; mov edx, ebx; mov eax, 0x66; mov ebx, 0xa; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f056f: mov esi, eax; mov edx, ebx; mov eax, 0x66; mov ebx, 0xb; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f036f: mov esi, eax; mov edx, ebx; mov eax, 0x66; mov ebx, 0xc; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f016f: mov esi, eax; mov edx, ebx; mov eax, 0x66; mov ebx, 3; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f00af: mov esi, eax; mov edx, ebx; mov eax, 0x66; mov ebx, 5; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f046f: mov esi, eax; mov edx, ebx; mov eax, 0x66; mov ebx, 9; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0002e282: mov esi, eax; xchg ebx, edx; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000e635a: mov esi, eax; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000e6db0: mov esi, eax; xchg edi, ebx; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x000e6e70: mov esi, eax; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000e0c60: mov esi, eax; xchg edi, ebx; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x000df17a: mov esi, eax; xchg edi, ebx; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000de83c: mov esi, eax; xchg edi, ebx; mov eax, 5; call dword ptr gs:[0x10]; 
0x00119a40: mov esi, ebx; sub esi, dword ptr [ebx + eax*4 - 0x895a8]; jmp esi; 
0x0011a460: mov esi, ebx; sub esi, dword ptr [ebx + ecx*4 - 0x88b88]; jmp esi; 
0x00113260: mov esi, ebx; sub esi, dword ptr [ebx + ecx*4 - 0x8fd88]; jmp esi; 
0x000e1487: mov esi, ecx; xchg edi, ebx; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x0011a935: mov esi, edx; add dword ptr [eax], eax; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x75]; 
0x0007e24b: mov esi, edx; cld; pop edi; ret; 
0x000b8309: mov esi, edx; mov dword ptr [ebp - 0x1c], ebx; mov ebx, eax; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0007e7df: mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x0007e05f: mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x0007e035: mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00001b0f: mov esi, edx; mov ebp, dword ptr [esi + ebx*8 + 0x6d]; ret 0x1bb7; 
0x000b7ca5: mov esi, edx; mov ebp, eax; xchg edi, ebx; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x0007e225: mov esi, edx; pop edi; ret; 
0x0007e19f: mov esi, edx; ret; 
0x000b7c62: mov esi, edx; xchg edi, ebx; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x00087677: mov esi, esi; lea edi, dword ptr [edi]; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x00168b7c: mov esi, ss; add byte ptr [eax], al; add al, 0xd9; out dx, al; call eax; 
0x0007e764: mov esp, 0x1000036; add byte ptr [eax], al; add byte ptr [esi + eax - 0x73], dh; or dword ptr [ecx + edx*2 - 7], 0xffffffff; pop ebx; ret; 
0x0007e284: mov esp, 0x1000036; add byte ptr [eax], al; add byte ptr [esi + eax - 0x73], dh; sbb dword ptr [ebp + ecx - 7], -1; pop ebx; ret; 
0x0007e1e4: mov esp, 0x1000036; add byte ptr [eax], al; add byte ptr [esi + eax - 0x73], dh; sub dword ptr [edi + edx*4 - 7], -1; pop ebx; ret; 
0x00054af8: mov esp, 0x103424; add byte ptr [ebx + 0x103824ac], cl; add byte ptr [eax], al; add esp, 0x103c; ret; 
0x000aae43: mov esp, 0x10424; add byte ptr [ebx + 0x10824ac], cl; add byte ptr [eax], al; add esp, 0x10c; ret; 
0x000e1130: mov esp, 0x11424; add byte ptr [ebx + 0x11824ac], cl; add byte ptr [eax], al; add esp, 0x11c; ret; 
0x000692f7: mov esp, 0x12424; add byte ptr [ebx + 0x12824ac], cl; add byte ptr [eax], al; add esp, 0x12c; ret; 
0x0002e035: mov esp, 0x12824; add byte ptr [ebx + 0x12c24ac], cl; add byte ptr [eax], al; add esp, 0x130; ret; 
0x001187e7: mov esp, 0x13424; add byte ptr [ebx + 0x13824ac], cl; add byte ptr [eax], al; add esp, 0x13c; ret; 
0x0016a37c: mov esp, 0x14000168; scasb al, byte ptr es:[edi]; int1; jmp eax; 
0x0016beec: mov esp, 0x14000251; push ds; clc; jmp eax; 
0x0016e494: mov esp, 0x1400032c; leave; sti; jmp eax; 
0x0002ec5a: mov esp, 0x14424; add byte ptr [ebx + 0x14824ac], cl; add byte ptr [eax], al; add esp, 0x14c; ret; 
0x000b9e09: mov esp, 0x16424; add byte ptr [ebx + 0x16824ac], cl; add byte ptr [eax], al; add esp, 0x16c; ret; 
0x000e7d0d: mov esp, 0x1b424; add byte ptr [ebx + 0x1b824ac], cl; add byte ptr [eax], al; add esp, 0x1bc; ret; 
0x0016e07c: mov esp, 0x24000316; push edi; sti; jmp esp; 
0x0002f3b5: mov esp, 0x25424; add byte ptr [ebx + 0x25824ac], cl; add byte ptr [eax], al; add esp, 0x25c; ret; 
0x000948aa: mov esp, 0x27; add al, ch; ret 0x954; 
0x0007341a: mov esp, 0x27; add bl, dh; ret; 
0x0014727a: mov esp, 0x27; add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x000a73fa: mov esp, 0x27; add byte ptr [eax + 1], bh; ret; 
0x000a740a: mov esp, 0x27; add byte ptr [eax + 2], bh; ret; 
0x000a741a: mov esp, 0x27; add byte ptr [eax + 3], bh; ret; 
0x000a742a: mov esp, 0x27; add byte ptr [eax + 4], bh; ret; 
0x000a743a: mov esp, 0x27; add byte ptr [eax + 5], bh; ret; 
0x000a744a: mov esp, 0x27; add byte ptr [eax + 6], bh; ret; 
0x000a745a: mov esp, 0x27; add byte ptr [eax + 7], bh; ret; 
0x000733ea: mov esp, 0x27; add byte ptr [eax - 1], bh; ret; 
0x00149aca: mov esp, 0x27; add byte ptr [ebp - 0x677af02e], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x000ff0da: mov esp, 0x27; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x0009349a: mov esp, 0x27; add byte ptr [ebp - 0x7cc78a40], al; ret; 
0x000a71ba: mov esp, 0x27; add byte ptr [ebx + 0x4f39344e], cl; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x00113a2a: mov esp, 0x27; add byte ptr [ebx - 0x18], dl; cmp eax, 0x81000163; ret; 
0x0010e52a: mov esp, 0x27; add byte ptr [ebx - 0x18], dl; cmp eax, 0x810001b8; ret; 
0x000f5d2a: mov esp, 0x27; add byte ptr [ebx - 0x18], dl; cmp eax, 0x81000340; ret; 
0x000f47aa: mov esp, 0x27; add byte ptr [ebx - 0x18], dl; mov ebp, 0x81000355; ret; 
0x000eb4aa: mov esp, 0x27; add byte ptr [ebx - 0x18], dl; mov ebp, 0x810003e8; ret; 
0x00099aaa: mov esp, 0x27; add byte ptr [ebx - 0x18], dl; mov ebp, 0x81000902; ret; 
0x00033eaa: mov esp, 0x27; add byte ptr [ebx - 0x18], dl; mov ebp, 0x81000f5e; ret; 
0x00032daa: mov esp, 0x27; add byte ptr [ebx - 0x18], dl; mov ebp, 0x81000f6f; ret; 
0x000eb45a: mov esp, 0x27; add byte ptr [ebx - 0x18], dl; or eax, 0x810003e9; ret; 
0x0007be5a: mov esp, 0x27; add byte ptr [ebx - 0x18], dl; or eax, 0x81000adf; ret; 
0x000fe84a: mov esp, 0x27; add byte ptr [ebx - 0x18], dl; sbb eax, 0x810002b5; ret; 
0x000ea04a: mov esp, 0x27; add byte ptr [ebx - 0x18], dl; sbb eax, 0x810003fd; ret; 
0x000e8a4a: mov esp, 0x27; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000413; ret; 
0x000b5c4a: mov esp, 0x27; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000741; ret; 
0x00099b4a: mov esp, 0x27; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000902; ret; 
0x00033f4a: mov esp, 0x27; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000f5e; ret; 
0x00032d4a: mov esp, 0x27; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000f70; ret; 
0x0010f33a: mov esp, 0x27; add byte ptr [ebx - 0x18], dl; sub eax, 0x810001aa; ret; 
0x001298fa: mov esp, 0x27; add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; dec esp; ret; 
0x000f8e5a: mov esp, 0x27; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x77]; 
0x0008767a: mov esp, 0x27; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; pop ebx; ret; 
0x0013321a: mov esp, 0x27; add byte ptr [esi + 0xf], ah; outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x00148f5a: mov esp, 0x27; add dh, dh; ret 0xf10; 
0x00020f09: mov esp, 0x29000001; ret 0xb48b; 
0x0006b294: mov esp, 0x29424; add byte ptr [ebx + 0x29824ac], cl; add byte ptr [eax], al; add esp, 0x29c; ret; 
0x0009484a: mov esp, 0x3000c60; or al, 0x91; jmp ecx; 
0x000c6ae4: mov esp, 0x3100768d; rol byte ptr [ecx + 0xc0fefe], cl; add byte ptr [edi], cl; xchg eax, ebp; ret 0x548d; 
0x001881bc: mov esp, 0x4000018f; sal ebx, 1; call dword ptr [eax]; 
0x0016830c: mov esp, 0x40000a4; jo 0x1682ff; jmp eax; 
0x00168b54: mov esp, 0x40000d5; shr dh, cl; jmp esp; 
0x0016c64c: mov esp, 0x4000276; cmpsb byte ptr [esi], byte ptr es:[edi]; clc; call esp; 
0x0018aea1: mov esp, 0x400c0001; cmc; jmp ecx; 
0x0018aecd: mov esp, 0x41d00001; cmc; call dword ptr [ebx]; 
0x00098d2e: mov esp, 0x4245489; mov eax, dword ptr [eax + 8]; mov dword ptr [esp], eax; call edi; 
0x000547dc: mov esp, 0x43424; add byte ptr [ebx + 0x43824ac], cl; add byte ptr [eax], al; add esp, 0x43c; ret; 
0x0016d0d4: mov esp, 0x440002b8; mov ah, 0xf9; jmp eax; 
0x00119596: mov esp, 0x45424; add byte ptr [ebx + 0x45824ac], cl; add byte ptr [eax], al; add esp, 0x45c; ret; 
0x001194e8: mov esp, 0x45424; add byte ptr [ecx - 0x76fbdbb4], cl; add al, 0x24; mov dword ptr [esp + 0x458], ebp; call dword ptr [edx + 8]; 
0x00115659: mov esp, 0x48424; add byte ptr [ebx + 0x48824ac], cl; add byte ptr [eax], al; add esp, 0x48c; ret; 
0x0011384f: mov esp, 0x4c8b0000; and al, 0x24; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp], ebp; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x18]; 
0x000d9534: mov esp, 0x54424; add byte ptr [ebx + 0x54824ac], cl; add byte ptr [eax], al; add esp, 0x54c; ret; 
0x00094807: mov esp, 0x5569e8d2; or dword ptr [eax], eax; add ecx, 0xc60f6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000947e3: mov esp, 0x558de8d2; or dword ptr [eax], eax; add ecx, 0xc611a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000d63fc: mov esp, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x0007e49c: mov esp, 0x5bffee6c; ret; 
0x0007c9ae: mov esp, 0x5bfff8f3; ret; 
0x00098490: mov esp, 0x5bfff8f7; ret; 
0x0011cf3b: mov esp, 0x5e20c483; pop edi; pop ebp; ret; 
0x0008d7f0: mov esp, 0x5f000005; pop esi; pop ebx; ret; 
0x0008d4f0: mov esp, 0x5f000008; pop esi; pop ebx; ret; 
0x00083f9a: mov esp, 0x5fd001d2; pop esi; ret; 
0x00095571: mov esp, 0x5ff801c0; ret; 
0x0010bf70: mov esp, 0x6c860f03; add al, 0; add byte ptr [ecx], al; ret 0xb70f; 
0x00094905: mov esp, 0x72da39d2; movsd dword ptr es:[edi], dword ptr [esi]; call 0x129d77; add ecx, 0xc6074; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e965: mov esp, 0x72da39d2; movsd dword ptr es:[edi], dword ptr [esi]; call 0x129d77; add ecx, 0xcbe40; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d325: mov esp, 0x72da39d2; movsd dword ptr es:[edi], dword ptr [esi]; call 0x129d77; add ecx, 0xcd320; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00169bbc: mov esp, 0x74000149; pop es; int1; call eax; 
0x0016b0b4: mov esp, 0x740001fd; sbb ch, dh; call eax; 
0x000955a1: mov esp, 0x76c229c0; cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x000955b4: mov esp, 0x76c229c0; lea eax, dword ptr es:[edi + eax + 0x10]; pop edi; ret; 
0x000955d4: mov esp, 0x76c229c0; push es; lea eax, dword ptr [edi + eax + 0x30]; pop edi; ret; 
0x000955c4: mov esp, 0x76c229c0; push ss; lea eax, dword ptr [edi + eax + 0x20]; pop edi; ret; 
0x00172d6c: mov esp, 0x7a000036; add ah, ch; call dword ptr [eax]; 
0x0016c731: mov esp, 0x7bb8fff8; add al, byte ptr [eax]; in al, 0xbc; clc; jmp esp; 
0x001921bc: mov esp, 0x8000022f; fdecstp; call dword ptr [ebp]; 
0x0010d6b3: mov esp, 0x810001c6; ret; 
0x000df0b3: mov esp, 0x810004ac; ret; 
0x000b09b3: mov esp, 0x81000793; ret; 
0x000ab3b3: mov esp, 0x810007e9; ret; 
0x0006b2b3: mov esp, 0x81000bea; ret; 
0x0005b9ff: mov esp, 0x81b424; add byte ptr [ebx - 0x7e47db54], cl; add byte ptr [eax], al; add esp, 0x81bc; ret; 
0x00098cbf: mov esp, 0x830002c6; ret 0x8901; 
0x000a5166: mov esp, 0x8301c083; ret 0x3901; 
0x000a5163: mov esp, 0x83bc4d8b; rol byte ptr [ecx], 0x83; ret 0x3901; 
0x0008d203: mov esp, 0x83ce01d2; ret 0x2910; 
0x00083fa4: mov esp, 0x83d001d2; rcl byte ptr [eax], 0x5f; pop esi; ret; 
0x00083fbe: mov esp, 0x83d001d2; sal byte ptr [eax], 0x5f; pop esi; ret; 
0x00083fb1: mov esp, 0x83d001d2; shl byte ptr [eax], 0x5f; pop esi; ret; 
0x000987cd: mov esp, 0x8424; add byte ptr [ebx + 0x8824ac], cl; add byte ptr [eax], al; add esp, 0x8c; ret; 
0x000194b2: mov esp, 0x85000001; test byte ptr [edi], 0x85; ret 0; 
0x00103708: mov esp, 0x8500002e; sal byte ptr [eax + ecx - 0x7d], 0xc4; adc al, 0x5b; pop ebp; ret; 
0x00091507: mov esp, 0x8869e8d2; or dword ptr [eax], eax; add ecx, 0xc9376; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000914e3: mov esp, 0x888de8d2; or dword ptr [eax], eax; add ecx, 0xc939a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00048a65: mov esp, 0x8904c683; ret 0xfac1; 
0x00127390: mov esp, 0x89240489; push esp; and al, 4; call dword ptr [ebp - 0x7c]; 
0x000721f0: mov esp, 0x89fffffa; ret 0xffb8; 
0x000c01a2: mov esp, 0x89fffffe; add al, 0x24; call dword ptr [esi + 0x20]; 
0x000e5136: mov esp, 0x8b000004; mov word ptr [eax + ebx*8], fs; add al, 0; add al, ch; sub eax, 0x8100044c; ret; 
0x000b4f18: mov esp, 0x8b900c89; dec ebp; or al, 0x83; ret 0x8901; 
0x0002e13c: mov esp, 0x9024; add byte ptr [edi + 0xafb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e3ce3: mov esp, 0x9424; add byte ptr [ebx + 0x9824ac], cl; add byte ptr [eax], al; add esp, 0x9c; ret 4; 
0x00023319: mov esp, 0x9424; add byte ptr [ebx + 0x9824ac], cl; add byte ptr [eax], al; add esp, 0x9c; ret; 
0x00003d90: mov esp, 0xa235a8f4; lea edx, dword ptr [ebp - 0x6d]; push ebx; inc eax; or byte ptr fs:[ebx + 0x4e], ch; ret 0x6bba; 
0x001693b4: mov esp, 0xa400010b; xor al, dh; jmp dword ptr [eax + 0xc]; 
0x0006f6f7: mov esp, 0xa424; add byte ptr [ebx + 0xa824ac], cl; add byte ptr [eax], al; add esp, 0xac; ret; 
0x0016acac: mov esp, 0xad0001e3; ret 0xfff4; 
0x0019ae6d: mov esp, 0xb2800002; clc; call dword ptr [esi + 1]; 
0x000e1727: mov esp, 0xb424; add byte ptr [ebx + 0xb824ac], cl; add byte ptr [eax], al; add esp, 0xbc; ret 8; 
0x0008e7f5: mov esp, 0xb57be8d2; or dword ptr [eax], eax; add ecx, 0xcbf34; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0014e478: mov esp, 0xbe000005; add eax, 0x5c00000; add byte ptr [eax], al; ret 5; 
0x001529c0: mov esp, 0xbf00000f; sldt word ptr [eax]; ret 0xf; 
0x00063350: mov esp, 0xc20013fa; call dword ptr [ebx]; 
0x000de30b: mov esp, 0xc424; add byte ptr [ebx + 0xc824ac], cl; add byte ptr [eax], al; add esp, 0xcc; ret; 
0x0010b2ed: mov esp, 0xc483fff0; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0016d175: mov esp, 0xc5290002; stc; jmp dword ptr [eax]; 
0x0016d17d: mov esp, 0xc5350002; stc; call dword ptr [eax - 0x44]; 
0x0016d19d: mov esp, 0xc6760002; stc; call dword ptr [eax]; 
0x0008d1ea: mov esp, 0xcb86e8d2; or dword ptr [eax], eax; add ecx, 0xcd3df; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008d1c5: mov esp, 0xcbabe8d2; or dword ptr [eax], eax; add ecx, 0xcd404; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00167178: mov esp, 0xcfffd2c; sub eax, 0x2c06fffd; std; jmp dword ptr [esi + 0x2c]; 
0x00167774: mov esp, 0xcfffd5c; pop ebp; std; lcall ptr [ebp + ebx*2 - 3]; call dword ptr [esi + 0x5c]; 
0x0016e00c: mov esp, 0xd4000314; dec edi; sti; call esp; 
0x0006d7c4: mov esp, 0xd424; add byte ptr [ebx + 0xd824ac], cl; add byte ptr [eax], al; add esp, 0xdc; ret; 
0x0016ac31: mov esp, 0xe13cfff4; add dword ptr [eax], eax; xor al, 0xbd; hlt; jmp dword ptr [eax - 0x1f]; 
0x00068f4f: mov esp, 0xe424; add byte ptr [ebx + 0xe824ac], cl; add byte ptr [eax], al; add esp, 0xec; ret; 
0x000de329: mov esp, 0xe8000000; inc ecx; mov edx, 0xc3810004; ret 0xc4c; 
0x001977bc: mov esp, 0xf0000285; int 0xf7; jmp dword ptr [esi]; 
0x0007e2e6: mov esp, 0xf042444; inc esp; ret 0xc083; 
0x000de47f: mov esp, 0xf424; add byte ptr [ebx + 0xf824ac], cl; add byte ptr [eax], al; add esp, 0xfc; ret; 
0x0017b385: mov esp, 0xf68d0000; out dx, eax; call dword ptr [eax]; 
0x0017b355: mov esp, 0xf6ad0000; out dx, eax; call dword ptr [eax]; 
0x0017b325: mov esp, 0xf6cd0000; out dx, eax; call dword ptr [eax]; 
0x0017b2f5: mov esp, 0xf6ed0000; out dx, eax; call dword ptr [eax]; 
0x0017b2c5: mov esp, 0xf70d0000; out dx, eax; call dword ptr [eax]; 
0x0009533c: mov esp, 0xfc229c0; xchg byte ptr [edx + 0x1000002], bl; clc; add eax, ecx; pop edi; ret; 
0x0018d184: mov esp, ds; cmc; jmp dword ptr [ecx]; 
0x00078071: mov esp, dword ptr [ecx + eax]; add byte ptr [ecx], bh; ret 0x850f; 
0x000c3a4e: mov esp, dword ptr [edx]; ret 0xfffb; 
0x00074d3d: mov esp, dword ptr [esi + edi*8 + 0x5489ffff]; and al, 0x18; neg eax; mov dword ptr [esp], eax; call dword ptr [ecx]; 
0x00074d5e: mov esp, dword ptr [esi + edi*8 - 0x12ce0001]; mov dword ptr [esp + 0x18], edx; mov dword ptr [esp], 0; call dword ptr [ecx]; 
0x00030d33: mov esp, ebp; pop ebp; ret; 
0x0002dd1d: mov esp, ecx; jmp edx; 
0x00103575: mov esp, edi; mov ebx, dword ptr [ecx]; mov esi, dword ptr [ecx + 4]; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x00173dc6: mov esp, gs; jmp dword ptr [edx]; 
0x0003834a: mov fs, word ptr [ebp - 0x76000002]; ret 0x18e9; 
0x00087a98: mov fs, word ptr [ebx - 0x7a000008]; ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0008d341: mov gs, eax; xor dl, cl; or dword ptr [eax], eax; add ecx, 0xcd309; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0017ab79: mov gs, edi; call dword ptr [ebx]; 
0x00168439: mov gs, esp; dec dword ptr [eax + 0x40000ab]; xchg eax, edx; in al, dx; jmp eax; 
0x00175529: mov ss, ebp; in eax, dx; jmp dword ptr [edx]; 
0x00099a68: mov ss, word ptr [ebp - 0x137cfff0]; sub byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x00040ea4: mov word ptr [0x1cc48300], es; ret; 
0x0008d820: mov word ptr [0x5e5f0000], es; pop ebx; ret; 
0x00094bdf: mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009175c: mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094cf9: mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091866: mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00033db0: mov word ptr [eax + 0xc], dx; mov word ptr [eax + 0xe], 1; xor eax, eax; add esp, 8; ret; 
0x00033db4: mov word ptr [eax + 0xe], 1; xor eax, eax; add esp, 8; ret; 
0x00033d0e: mov word ptr [eax + 0xe], 1; xor eax, eax; ret; 
0x00091608: mov word ptr [eax + 4], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094adf: mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009166c: mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0001ec48: mov word ptr [eax + eax*4], fs; add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbbc], cl; or al, 0x24; call dword ptr [esi]; 
0x0009e77f: mov word ptr [eax + eax*4], fs; add byte ptr [eax], al; add byte ptr [edi], cl; xchg eax, esp; ret 0xed31; 
0x000e513b: mov word ptr [eax + ebx*8], fs; add al, 0; add al, ch; sub eax, 0x8100044c; ret; 
0x00198a44: mov word ptr [eax + edi*8], gs; call dword ptr [eax]; 
0x00190554: mov word ptr [eax - 0xa], ds; call ecx; 
0x000915d3: mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0001a311: mov word ptr [eax], ds; add ah, bl; mov word ptr [eax], ds; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x0001a315: mov word ptr [eax], ds; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x0001a30d: mov word ptr [eax], ds; add byte ptr [esp + ecx*4 + 0x18], bh; add ah, bl; mov word ptr [eax], ds; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x000949f6: mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000915c3: mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00033d5c: mov word ptr [eax], dx; mov word ptr [eax + 0xe], 1; xor eax, eax; ret; 
0x000d89fb: mov word ptr [eax], dx; xor eax, eax; ret; 
0x000eeca3: mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00115efe: mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x000196e6: mov word ptr [eax], es; add byte ptr [eax], al; ret; 
0x00177ef9: mov word ptr [eax], es; add byte ptr [edi], dl; out dx, eax; call dword ptr [edi + 1]; 
0x00074a14: mov word ptr [eax], ss; add byte ptr [eax], al; add cl, ch; ret; 
0x00033e2e: mov word ptr [ebp + 4], dx; mov ebp, dword ptr [esp + 0x10]; add esp, 0x14; ret; 
0x000e8bf0: mov word ptr [ebp - 7], ss; jmp dword ptr [esi - 0x39]; 
0x0007841f: mov word ptr [ebx - 0x12abcc], es; jmp ecx; 
0x00076f4f: mov word ptr [ebx - 0x15b7d], cs; inc edi; add al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [eax]; 
0x0014526c: mov word ptr [ebx - 0x567f4], cs; mov eax, dword ptr [ebx + eax*4 - 0x567f4]; sub eax, ecx; pop ebp; pop ebx; ret; 
0x00142a5f: mov word ptr [ebx - 0x567f4], cs; mov eax, dword ptr [ebx + eax*4 - 0x567f4]; sub eax, ecx; pop ebx; ret; 
0x00131c35: mov word ptr [ebx - 0x567f4], cs; sub eax, ecx; pop esi; pop edi; pop ebx; ret; 
0x00129beb: mov word ptr [ebx - 0x79400], es; jmp ecx; 
0x00116003: mov word ptr [ebx - 0x8cfe8], es; jmp ecx; 
0x000d6e1f: mov word ptr [ebx - 0xcc1cc], gs; jmp ecx; 
0x000d436e: mov word ptr [ebx - 0xcec7c], ss; jmp ecx; 
0x000cbb56: mov word ptr [ebx - 0xd7494], es; jmp ecx; 
0x000c1f7e: mov word ptr [ebx - 0xe106c], es; jmp ecx; 
0x000c06a3: mov word ptr [ebx - 0xe2948], es; jmp ecx; 
0x000ac916: mov word ptr [ebx - 0xf66d4], es; jmp ecx; 
0x000ac83e: mov word ptr [ebx - 0xf67ac], es; jmp ecx; 
0x00028912: mov word ptr [ebx - 0xf775], cs; jmp dword ptr [ebp - 0x77]; 
0x0012f7cc: mov word ptr [ebx], cs; mov al, 0x75; sti; jmp dword ptr [esi + 0xf]; 
0x0002bd01: mov word ptr [ebx], ss; or al, 0x50; sti; jmp dword ptr [esi + 0x39]; 
0x00087662: mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x000876a4: mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x00184e8c: mov word ptr [ecx + eax], ds; mov al, 0x49; cld; call ebx; 
0x00127389: mov word ptr [ecx - 0x72f7dbbc], cs; inc ebp; mov esp, 0x89240489; push esp; and al, 4; call dword ptr [ebp - 0x7c]; 
0x00087630: mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x00087620: mov word ptr [ecx], dx; pop ebx; ret; 
0x0008f16c: mov word ptr [edi + 0x10], cx; lea eax, dword ptr [edi + 0x12]; pop edi; pop esi; pop ebx; ret; 
0x0008da8c: mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x0008f276: mov word ptr [edi + 0x18], cx; lea eax, dword ptr [edi + 0x1a]; pop edi; pop esi; pop ebx; ret; 
0x0008db96: mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x0008d948: mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x0008f07c: mov word ptr [edi + 8], dx; lea eax, dword ptr [edi + 0xa]; pop edi; pop esi; pop ebx; ret; 
0x0008d99c: mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x00195d44: mov word ptr [edi - 9], es; jmp dword ptr [esi]; 
0x0008d916: mov word ptr [edi], cx; mov byte ptr [edi + 2], dl; pop edi; pop esi; pop ebx; ret; 
0x0008286c: mov word ptr [edi], cx; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0008efa3: mov word ptr [edi], dx; lea eax, dword ptr [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x0008d903: mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x0008d620: mov word ptr [edi], es; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00188c8c: mov word ptr [edx + 0x1d100001], ds; hlt; jmp dword ptr [ecx + 1]; 
0x000e4d78: mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x0016edc4: mov word ptr [edx + 0x6d540002], es; cld; jmp esp; 
0x0013c5bc: mov word ptr [edx + 1], cx; movzx eax, byte ptr [eax]; mov byte ptr [edx], al; pop ebx; ret; 
0x00169f9c: mov word ptr [edx + 1], ss; add byte ptr [esp + eax*2], ah; int1; jmp esp; 
0x00089a58: mov word ptr [edx + 4], ax; lea eax, dword ptr [edx + 5]; pop edi; ret; 
0x00089b98: mov word ptr [edx + 4], ax; lea eax, dword ptr [edx + 5]; ret; 
0x00093e1b: mov word ptr [edx + 4], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x00085688: mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x000857b8: mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x00089aac: mov word ptr [edx + 8], ax; lea eax, dword ptr [edx + 9]; pop edi; ret; 
0x00089bec: mov word ptr [edx + 8], ax; lea eax, dword ptr [edx + 9]; ret; 
0x00093e8f: mov word ptr [edx + 8], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000856cc: mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x0008580c: mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x001331e5: mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132bd5: mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00134f7c: mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001363fc: mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x0013bf4c: mov word ptr [edx - 2], cx; pop ebx; ret; 
0x00133205: mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132bf5: mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00135010: mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00136490: mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x0013bfe0: mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00089a13: mov word ptr [edx], ax; lea eax, dword ptr [edx + 1]; pop edi; ret; 
0x00089b53: mov word ptr [edx], ax; lea eax, dword ptr [edx + 1]; ret; 
0x00089a23: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, dword ptr [edx + 2]; pop edi; ret; 
0x00089b63: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, dword ptr [edx + 2]; ret; 
0x00085663: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x00085783: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x00093db6: mov word ptr [edx], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x00085653: mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x00085773: mov word ptr [edx], ax; mov eax, edx; ret; 
0x00178f95: mov word ptr [edx], cs; push cs; adc al, 0x41; ret; 
0x00136a3b: mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x001355eb: mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013c53b: mov word ptr [edx], cx; pop ebx; ret; 
0x00188aa4: mov word ptr [edx], ds; hlt; call dword ptr [edi]; 
0x000a1833: mov word ptr [edx], es; add eax, 0x8e0f0000; hlt; add al, 0; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x0018853c: mov word ptr [esi + 0x1a850001], cs; hlt; call dword ptr [eax]; 
0x000038b9: mov word ptr [esi + 0x39219574], ds; push cs; pop esp; ret; 
0x001127c9: mov word ptr [esi + 2], 0; mov ebx, dword ptr [esp + 0x60]; mov esi, dword ptr [esp + 0x64]; mov edi, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x000aadb9: mov word ptr [esi + 8], ax; xor eax, eax; add esp, 0x24; pop esi; pop edi; ret; 
0x00174c04: mov word ptr [esi - 3], ds; jmp dword ptr [eax]; 
0x0011e864: mov word ptr [esi], ax; add esp, 0x28; mov eax, 1; pop esi; ret; 
0x00020aaf: mov word ptr [esp + eax*4], fs; add byte ptr [eax], al; add al, ch; mov ecx, 0x81001092; ret; 
0x0001daaf: mov word ptr [esp + eax*4], fs; add byte ptr [eax], al; add al, ch; mov ecx, 0x810010c2; ret; 
0x000221bf: mov word ptr [esp + eax*4], fs; add byte ptr [eax], al; add al, ch; test eax, 0x8100107b; ret; 
0x000d247e: mov word ptr [esp + esi*2], fs; add dword ptr [eax], eax; add byte ptr [ebp - 0x1f7bf037], al; add eax, dword ptr [eax]; add dh, dh; ret 0xf08; 
0x0004a12b: mov word ptr [esp], fs; add dword ptr [eax], eax; add al, ch; cmp eax, 0x81000dfc; ret; 
0x0013c429: movd dword ptr [eax + 4], mm0; movq qword ptr [edx + 4], xmm0; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x0013be4f: movd dword ptr [eax - 0x10], mm0; movq qword ptr [edx - 0x10], xmm0; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x0013bf89: movd dword ptr [eax - 0xa], mm0; movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x00134e79: movd dword ptr [eax - 8], mm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00136309: movd dword ptr [eax - 8], mm0; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0013be59: movd dword ptr [eax - 8], mm0; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x0013bef9: movd dword ptr [eax - 9], mm0; movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x00135509: movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013c469: movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; pop ebx; ret; 
0x001350aa: movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013652a: movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x0013c06a: movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x0013c060: movdqa xmm0, xmmword ptr [eax - 0x20]; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x0008f501: movdqa xmmword ptr [edi], xmm0; add edi, 0x10; call 0x129d77; add ecx, 0xcb333; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008de01: movdqa xmmword ptr [edi], xmm0; add edi, 0x10; call 0x129d77; add ecx, 0xcc8d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0013345e: movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013652f: movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x00132e2e: movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x0013348e: movdqa xmmword ptr [edx - 0x11], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132e5e: movdqa xmmword ptr [edx - 0x11], xmm0; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0013c12f: movdqa xmmword ptr [edx - 0x11], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x001334be: movdqa xmmword ptr [edx - 0x12], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132e8e: movdqa xmmword ptr [edx - 0x12], xmm0; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0013c1df: movdqa xmmword ptr [edx - 0x12], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x00132ebe: movdqa xmmword ptr [edx - 0x13], xmm0; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0013351e: movdqa xmmword ptr [edx - 0x14], xmm0; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132eee: movdqa xmmword ptr [edx - 0x14], xmm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0013c2ff: movdqa xmmword ptr [edx - 0x14], xmm0; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x0013354e: movdqa xmmword ptr [edx - 0x15], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132f1e: movdqa xmmword ptr [edx - 0x15], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0013357e: movdqa xmmword ptr [edx - 0x16], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132f4e: movdqa xmmword ptr [edx - 0x16], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00132f7e: movdqa xmmword ptr [edx - 0x17], xmm0; mov dword ptr [edx - 7], eax; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001335ee: movdqa xmmword ptr [edx - 0x18], xmm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132fae: movdqa xmmword ptr [edx - 0x18], xmm0; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x0013c04f: movdqa xmmword ptr [edx - 0x18], xmm0; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x0013361e: movdqa xmmword ptr [edx - 0x19], xmm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132fde: movdqa xmmword ptr [edx - 0x19], xmm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0013365e: movdqa xmmword ptr [edx - 0x1a], xmm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013300e: movdqa xmmword ptr [edx - 0x1a], xmm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0013307e: movdqa xmmword ptr [edx - 0x1c], xmm0; movq qword ptr [edx - 0xc], xmm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x001330ae: movdqa xmmword ptr [edx - 0x1d], xmm0; movq qword ptr [edx - 0xd], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001330de: movdqa xmmword ptr [edx - 0x1e], xmm0; movq qword ptr [edx - 0xe], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x001350a5: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00136525: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x0013c065: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x00133459: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132e29: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x00133489: movdqa xmmword ptr [edx - 0x21], xmm0; movdqa xmmword ptr [edx - 0x11], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132e59: movdqa xmmword ptr [edx - 0x21], xmm0; movdqa xmmword ptr [edx - 0x11], xmm0; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001334b9: movdqa xmmword ptr [edx - 0x22], xmm0; movdqa xmmword ptr [edx - 0x12], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132e89: movdqa xmmword ptr [edx - 0x22], xmm0; movdqa xmmword ptr [edx - 0x12], xmm0; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00132eb9: movdqa xmmword ptr [edx - 0x23], xmm0; movdqa xmmword ptr [edx - 0x13], xmm0; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00133519: movdqa xmmword ptr [edx - 0x24], xmm0; movdqa xmmword ptr [edx - 0x14], xmm0; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132ee9: movdqa xmmword ptr [edx - 0x24], xmm0; movdqa xmmword ptr [edx - 0x14], xmm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00132f19: movdqa xmmword ptr [edx - 0x25], xmm0; movdqa xmmword ptr [edx - 0x15], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00132f49: movdqa xmmword ptr [edx - 0x26], xmm0; movdqa xmmword ptr [edx - 0x16], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x001335e9: movdqa xmmword ptr [edx - 0x28], xmm0; movdqa xmmword ptr [edx - 0x18], xmm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132fa9: movdqa xmmword ptr [edx - 0x28], xmm0; movdqa xmmword ptr [edx - 0x18], xmm0; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00133454: movdqa xmmword ptr [edx - 0x30], xmm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132e24: movdqa xmmword ptr [edx - 0x30], xmm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x00132ee4: movdqa xmmword ptr [edx - 0x34], xmm0; movdqa xmmword ptr [edx - 0x24], xmm0; movdqa xmmword ptr [edx - 0x14], xmm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00132fa4: movdqa xmmword ptr [edx - 0x38], xmm0; movdqa xmmword ptr [edx - 0x28], xmm0; movdqa xmmword ptr [edx - 0x18], xmm0; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00132e1f: movdqa xmmword ptr [edx - 0x40], xmm0; movdqa xmmword ptr [edx - 0x30], xmm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x000899f0: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, dword ptr [edx + 0xf]; pop edi; ret; 
0x00089ca0: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, dword ptr [edx + 0xf]; ret; 
0x00085630: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000858c0: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x00091720: movdqu xmm0, xmmword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000918f4: movdqu xmm2, xmmword ptr [esi + 0xf]; movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094de0: movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009191d: movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094d80: movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000918bd: movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094da0: movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000918dd: movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094dc0: movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000918fd: movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094bba: movdqu xmmword ptr [eax], xmm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091734: movdqu xmmword ptr [eax], xmm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000917b7: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094c1a: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091797: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094bfa: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091777: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094b97: movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091724: movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094bdb: movdqu xmmword ptr [eax], xmm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091758: movdqu xmmword ptr [eax], xmm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094ddc: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091919: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094d7c: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000918b9: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094d9c: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000918d9: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094dbc: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000918f9: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00091839: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009187c: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009189c: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094c9c: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091819: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009185d: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094c5c: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000917d9: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094c7c: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000917f9: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008f33d: movdqu xmmword ptr [edi + 0x10], xmm2; lea eax, dword ptr [edi + 0x20]; pop edi; pop esi; pop ebx; ret; 
0x0008dc70: movdqu xmmword ptr [edi + 0x10], xmm2; mov byte ptr [edi + 0x20], cl; pop edi; pop esi; pop ebx; ret; 
0x0008dc4d: movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x0008f58c: movdqu xmmword ptr [edi + 0x30], xmm7; lea eax, dword ptr [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x0008de8c: movdqu xmmword ptr [edi + 0x30], xmm7; pop edi; pop esi; pop ebx; ret; 
0x0008f2dd: movdqu xmmword ptr [edi + 0xd], xmm2; lea eax, dword ptr [edi + 0x1d]; pop edi; pop esi; pop ebx; ret; 
0x0008dbed: movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x0008dc0d: movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x0008f31d: movdqu xmmword ptr [edi + 0xf], xmm2; lea eax, dword ptr [edi + 0x1f]; pop edi; pop esi; pop ebx; ret; 
0x0008dc2d: movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x0008dd70: movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0008f134: movdqu xmmword ptr [edi], xmm0; lea eax, dword ptr [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x0008da67: movdqu xmmword ptr [edi], xmm0; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x0008dac7: movdqu xmmword ptr [edi], xmm0; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x0008daa7: movdqu xmmword ptr [edi], xmm0; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x0008da88: movdqu xmmword ptr [edi], xmm0; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x0008dc49: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x0008dbe9: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x0008dc09: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x0008dc29: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x0008db49: movdqu xmmword ptr [edi], xmm0; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x0008db09: movdqu xmmword ptr [edi], xmm0; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x0008db29: movdqu xmmword ptr [edi], xmm0; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x0008da54: movdqu xmmword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000899f4: movdqu xmmword ptr [edx], xmm0; lea eax, dword ptr [edx + 0xf]; pop edi; ret; 
0x00089ca4: movdqu xmmword ptr [edx], xmm0; lea eax, dword ptr [edx + 0xf]; ret; 
0x00085634: movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000858c4: movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x00094cc3: movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009183d: movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094d23: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091880: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094d53: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000918a0: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094ca0: movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009181d: movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094cf4: movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091861: movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094c60: movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000917dd: movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094c80: movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000917fd: movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094b40: movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000916cd: movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094b60: movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000916ed: movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094b80: movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009170d: movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094afa: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091687: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094b1a: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000916a7: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094a97: movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091634: movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094adb: movlpd qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091668: movlpd qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094b3c: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000916c9: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094b5c: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000916e9: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094b7c: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091709: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000876d4: movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000876e4: movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000876f4: movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x00087704: movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x00087690: movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000876b0: movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000876c0: movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000876a0: movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000876d0: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000876e0: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000876f0: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x00087700: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x00087680: movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x0008f22d: movlpd qword ptr [edi + 0x10], xmm2; lea eax, dword ptr [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x0008db70: movlpd qword ptr [edi + 0x10], xmm2; mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x0008dbb0: movlpd qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x0008dbd0: movlpd qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x0008db91: movlpd qword ptr [edi + 0x10], xmm2; mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x0008db4d: movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x0008db0d: movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x0008f20d: movlpd qword ptr [edi + 0xf], xmm3; lea eax, dword ptr [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x0008db2d: movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x0008dd54: movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0008f0dd: movlpd qword ptr [edi + 5], xmm1; lea eax, dword ptr [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x0008d9fd: movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x0008dd64: movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0008da1d: movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x0008da3d: movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x0008dcf0: movlpd qword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0008f044: movlpd qword ptr [edi], xmm0; lea eax, dword ptr [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x0008d977: movlpd qword ptr [edi], xmm0; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x0008d9b7: movlpd qword ptr [edi], xmm0; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x0008d9d7: movlpd qword ptr [edi], xmm0; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x0008d998: movlpd qword ptr [edi], xmm0; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x0008dd50: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0008d9f9: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x0008dd60: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0008da19: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x0008da39: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x0008d964: movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0008e37d: movlpd qword ptr [edx + 5], xmm0; lea eax, dword ptr [edx + 0xc]; pop edi; ret; 
0x0008e4dd: movlpd qword ptr [edx + 5], xmm0; lea eax, dword ptr [edx + 0xc]; ret; 
0x00093ef0: movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd3d: movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x0008ce9d: movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x00089aed: movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; pop edi; ret; 
0x00089c4d: movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x0008570d: movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0008586d: movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x0008e39d: movlpd qword ptr [edx + 6], xmm0; lea eax, dword ptr [edx + 0xd]; pop edi; ret; 
0x0008e4fd: movlpd qword ptr [edx + 6], xmm0; lea eax, dword ptr [edx + 0xd]; ret; 
0x00093f10: movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd5d: movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x0008cebd: movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x00089b0d: movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; pop edi; ret; 
0x00089c6d: movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x0008572d: movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x0008588d: movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x0008e3bd: movlpd qword ptr [edx + 7], xmm0; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x0008e51d: movlpd qword ptr [edx + 7], xmm0; lea eax, dword ptr [edx + 0xe]; ret; 
0x00093f30: movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd7d: movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x0008cedd: movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x00089b2d: movlpd qword ptr [edx + 7], xmm1; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x00089c8d: movlpd qword ptr [edx + 7], xmm1; lea eax, dword ptr [edx + 0xe]; ret; 
0x0008574d: movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x00088310: movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000858ad: movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x0008e24c: movlpd qword ptr [edx + 8], xmm0; lea eax, dword ptr [edx + 0xf]; pop edi; ret; 
0x0008e53d: movlpd qword ptr [edx + 8], xmm0; lea eax, dword ptr [edx + 0xf]; ret; 
0x0008cc2c: movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x0008cefd: movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x0008b818: movlpd qword ptr [edx + 8], xmm1; lea eax, dword ptr [edx + 0x10]; pop edi; pop ebx; ret; 
0x0009415c: movlpd qword ptr [edx + 8], xmm1; mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x00093d8c: movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x00087428: movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x00090edc: movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x0008c8b9: movlpd qword ptr [edx], xmm0; lea eax, dword ptr [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00089974: movlpd qword ptr [edx], xmm0; lea eax, dword ptr [edx + 7]; pop edi; ret; 
0x00089bb4: movlpd qword ptr [edx], xmm0; lea eax, dword ptr [edx + 7]; ret; 
0x0008b79f: movlpd qword ptr [edx], xmm0; lea eax, dword ptr [edx + 8]; pop edi; pop ebx; ret; 
0x00090fb7: movlpd qword ptr [edx], xmm0; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x00090fd7: movlpd qword ptr [edx], xmm0; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x00089a87: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, dword ptr [edx + 8]; pop edi; ret; 
0x00089bc7: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, dword ptr [edx + 8]; ret; 
0x000856a7: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000857e7: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x00094100: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x00089ac7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, dword ptr [edx + 0xa]; pop edi; ret; 
0x00089c07: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, dword ptr [edx + 0xa]; ret; 
0x000856e7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x00085827: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000899b7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; pop edi; ret; 
0x00089c27: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; ret; 
0x0008b7d7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xc]; pop edi; pop ebx; ret; 
0x000873e7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000855f7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x00088360: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x00085847: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00090ff7: movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x00091017: movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x0014a314: movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00093d35: movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000873af: movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000855b4: movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000883d9: movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000857d4: movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x00089aa8: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, dword ptr [edx + 9]; pop edi; ret; 
0x00089be8: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, dword ptr [edx + 9]; ret; 
0x000856c8: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x00085808: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x00089ae9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; pop edi; ret; 
0x00089c49: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x00085709: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x00085869: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x00089b09: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; pop edi; ret; 
0x00089c69: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x00085729: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x00085889: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x00089b29: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x00089c89: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, dword ptr [edx + 0xe]; ret; 
0x00085749: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x0008830c: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000858a9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x0008b814: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; lea eax, dword ptr [edx + 0x10]; pop edi; pop ebx; ret; 
0x00093d88: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x00087424: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x00090ed8: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x0008e374: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, dword ptr [edx + 0xc]; pop edi; ret; 
0x0008e4d4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, dword ptr [edx + 0xc]; ret; 
0x0008cd34: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x0008ce94: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x0008e394: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, dword ptr [edx + 0xd]; pop edi; ret; 
0x0008e4f4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, dword ptr [edx + 0xd]; ret; 
0x0008cd54: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x0008ceb4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x0008e3b4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x0008e514: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, dword ptr [edx + 0xe]; ret; 
0x0008cd74: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x0008ced4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x0008e243: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, dword ptr [edx + 0xf]; pop edi; ret; 
0x0008e534: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, dword ptr [edx + 0xf]; ret; 
0x0008cc23: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x0008cef4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x0008e378: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, dword ptr [edx + 0xc]; pop edi; ret; 
0x0008e4d8: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, dword ptr [edx + 0xc]; ret; 
0x00093eeb: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd38: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x0008ce98: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x0008e398: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, dword ptr [edx + 0xd]; pop edi; ret; 
0x0008e4f8: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, dword ptr [edx + 0xd]; ret; 
0x0008cd58: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x0008ceb8: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x0008e3b8: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x0008e518: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, dword ptr [edx + 0xe]; ret; 
0x0008cd78: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x0008ced8: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x0008e247: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, dword ptr [edx + 0xf]; pop edi; ret; 
0x0008e538: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, dword ptr [edx + 0xf]; ret; 
0x0008cc27: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x0008cef8: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x00089bc0: movlpd xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, dword ptr [edx + 8]; ret; 
0x000857e0: movlpd xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x00089c00: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, dword ptr [edx + 0xa]; ret; 
0x00085820: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x00089c20: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; ret; 
0x00085840: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00089970: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, dword ptr [edx + 7]; pop edi; ret; 
0x00089bb0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, dword ptr [edx + 7]; ret; 
0x0008b79b: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, dword ptr [edx + 8]; pop edi; pop ebx; ret; 
0x0014a310: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00093d31: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000873ab: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000855b0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000883d5: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000857d0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0008e4d0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, dword ptr [edx + 0xc]; ret; 
0x0008ce90: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x0008e4f0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, dword ptr [edx + 0xd]; ret; 
0x0008ceb0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x0008e510: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, dword ptr [edx + 0xe]; ret; 
0x0008ced0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x0008e530: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, dword ptr [edx + 0xf]; ret; 
0x0008cef0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x00089c40: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x00085860: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x00089c60: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x00085880: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x00089c80: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, dword ptr [edx + 0xe]; ret; 
0x000858a0: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x00091640: movlpd xmm0, qword ptr [esi]; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094a93: movlpd xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091630: movlpd xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008d960: movlpd xmm0, qword ptr [esi]; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x00089ae4: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; pop edi; ret; 
0x00089c44: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x00085704: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x00085864: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x00089c64: movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x00085884: movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x00089c84: movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, dword ptr [edx + 0xe]; ret; 
0x000858a4: movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000916c4: movlpd xmm1, qword ptr [esi + 5]; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000917f4: movlpd xmm3, qword ptr [esi + 0xf]; movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094cc4: movlps qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009183e: movlps qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094d24: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091881: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094d54: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000918a1: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094ca1: movlps qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009181e: movlps qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094cf5: movlps qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091862: movlps qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094c61: movlps qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000917de: movlps qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094c81: movlps qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000917fe: movlps qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094b41: movlps qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000916ce: movlps qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094b61: movlps qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000916ee: movlps qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094b81: movlps qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009170e: movlps qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094afb: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091688: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094b1b: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000916a8: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094a98: movlps qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091635: movlps qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094adc: movlps qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091669: movlps qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094b3d: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000916ca: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094b5d: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000916ea: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094b7d: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009170a: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000876d5: movlps qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000876e5: movlps qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000876f5: movlps qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x00087705: movlps qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x00087691: movlps qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000876b1: movlps qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000876c1: movlps qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000876a1: movlps qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000876d1: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000876e1: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000876f1: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x00087701: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x00087681: movlps qword ptr [ecx], xmm0; pop ebx; ret; 
0x0008f22e: movlps qword ptr [edi + 0x10], xmm2; lea eax, dword ptr [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x0008db71: movlps qword ptr [edi + 0x10], xmm2; mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x0008dbb1: movlps qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x0008dbd1: movlps qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x0008db92: movlps qword ptr [edi + 0x10], xmm2; mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x0008db4e: movlps qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x0008db0e: movlps qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x0008f20e: movlps qword ptr [edi + 0xf], xmm3; lea eax, dword ptr [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x0008db2e: movlps qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x0008dd55: movlps qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0008f0de: movlps qword ptr [edi + 5], xmm1; lea eax, dword ptr [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x0008d9fe: movlps qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x0008dd65: movlps qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0008da1e: movlps qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x0008da3e: movlps qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x0008dcf1: movlps qword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0008f045: movlps qword ptr [edi], xmm0; lea eax, dword ptr [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x0008d978: movlps qword ptr [edi], xmm0; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x0008d9b8: movlps qword ptr [edi], xmm0; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x0008d9d8: movlps qword ptr [edi], xmm0; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x0008d999: movlps qword ptr [edi], xmm0; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x0008dd51: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0008d9fa: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x0008dd61: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0008da1a: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x0008da3a: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x0008d965: movlps qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0008e37e: movlps qword ptr [edx + 5], xmm0; lea eax, dword ptr [edx + 0xc]; pop edi; ret; 
0x0008e4de: movlps qword ptr [edx + 5], xmm0; lea eax, dword ptr [edx + 0xc]; ret; 
0x00093ef1: movlps qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd3e: movlps qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x0008ce9e: movlps qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x00089aee: movlps qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; pop edi; ret; 
0x00089c4e: movlps qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x0008570e: movlps qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0008586e: movlps qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x0008e39e: movlps qword ptr [edx + 6], xmm0; lea eax, dword ptr [edx + 0xd]; pop edi; ret; 
0x0008e4fe: movlps qword ptr [edx + 6], xmm0; lea eax, dword ptr [edx + 0xd]; ret; 
0x00093f11: movlps qword ptr [edx + 6], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd5e: movlps qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x0008cebe: movlps qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x00089b0e: movlps qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; pop edi; ret; 
0x00089c6e: movlps qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x0008572e: movlps qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x0008588e: movlps qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x0008e3be: movlps qword ptr [edx + 7], xmm0; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x0008e51e: movlps qword ptr [edx + 7], xmm0; lea eax, dword ptr [edx + 0xe]; ret; 
0x00093f31: movlps qword ptr [edx + 7], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd7e: movlps qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x0008cede: movlps qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x00089b2e: movlps qword ptr [edx + 7], xmm1; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x00089c8e: movlps qword ptr [edx + 7], xmm1; lea eax, dword ptr [edx + 0xe]; ret; 
0x0008574e: movlps qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x00088311: movlps qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000858ae: movlps qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x0008e24d: movlps qword ptr [edx + 8], xmm0; lea eax, dword ptr [edx + 0xf]; pop edi; ret; 
0x0008e53e: movlps qword ptr [edx + 8], xmm0; lea eax, dword ptr [edx + 0xf]; ret; 
0x0008cc2d: movlps qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x0008cefe: movlps qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x0008b819: movlps qword ptr [edx + 8], xmm1; lea eax, dword ptr [edx + 0x10]; pop edi; pop ebx; ret; 
0x0009415d: movlps qword ptr [edx + 8], xmm1; mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x00093d8d: movlps qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x00087429: movlps qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x00090edd: movlps qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x0008c8ba: movlps qword ptr [edx], xmm0; lea eax, dword ptr [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00089975: movlps qword ptr [edx], xmm0; lea eax, dword ptr [edx + 7]; pop edi; ret; 
0x00089bb5: movlps qword ptr [edx], xmm0; lea eax, dword ptr [edx + 7]; ret; 
0x0008b7a0: movlps qword ptr [edx], xmm0; lea eax, dword ptr [edx + 8]; pop edi; pop ebx; ret; 
0x00090fb8: movlps qword ptr [edx], xmm0; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x00090fd8: movlps qword ptr [edx], xmm0; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x00089a88: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, dword ptr [edx + 8]; pop edi; ret; 
0x00089bc8: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, dword ptr [edx + 8]; ret; 
0x000856a8: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000857e8: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x00094101: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x00089ac8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, dword ptr [edx + 0xa]; pop edi; ret; 
0x00089c08: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, dword ptr [edx + 0xa]; ret; 
0x000856e8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x00085828: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000899b8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; pop edi; ret; 
0x00089c28: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; ret; 
0x0008b7d8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xc]; pop edi; pop ebx; ret; 
0x000873e8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000855f8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x00088361: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x00085848: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00090ff8: movlps qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x00091018: movlps qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x0014a315: movlps qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00093d36: movlps qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000873b0: movlps qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000855b5: movlps qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000883da: movlps qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000857d5: movlps qword ptr [edx], xmm0; mov eax, edx; ret; 
0x00089aa9: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, dword ptr [edx + 9]; pop edi; ret; 
0x00089be9: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, dword ptr [edx + 9]; ret; 
0x000856c9: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x00085809: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x00089aea: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; pop edi; ret; 
0x00089c4a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x0008570a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0008586a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x00089b0a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; pop edi; ret; 
0x00089c6a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x0008572a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x0008588a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x00089b2a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x00089c8a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, dword ptr [edx + 0xe]; ret; 
0x0008574a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x0008830d: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000858aa: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x0008b815: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; lea eax, dword ptr [edx + 0x10]; pop edi; pop ebx; ret; 
0x00093d89: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x00087425: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x00090ed9: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x0008e375: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, dword ptr [edx + 0xc]; pop edi; ret; 
0x0008e4d5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, dword ptr [edx + 0xc]; ret; 
0x0008cd35: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x0008ce95: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x0008e395: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, dword ptr [edx + 0xd]; pop edi; ret; 
0x0008e4f5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, dword ptr [edx + 0xd]; ret; 
0x0008cd55: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x0008ceb5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x0008e3b5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x0008e515: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, dword ptr [edx + 0xe]; ret; 
0x0008cd75: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x0008ced5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x0008e244: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, dword ptr [edx + 0xf]; pop edi; ret; 
0x0008e535: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, dword ptr [edx + 0xf]; ret; 
0x0008cc24: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x0008cef5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x0008e379: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, dword ptr [edx + 0xc]; pop edi; ret; 
0x0008e4d9: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, dword ptr [edx + 0xc]; ret; 
0x00093eec: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd39: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x0008ce99: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x0008e399: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, dword ptr [edx + 0xd]; pop edi; ret; 
0x0008e4f9: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, dword ptr [edx + 0xd]; ret; 
0x0008cd59: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x0008ceb9: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x0008e3b9: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x0008e519: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, dword ptr [edx + 0xe]; ret; 
0x0008cd79: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x0008ced9: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x0008e248: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, dword ptr [edx + 0xf]; pop edi; ret; 
0x0008e539: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, dword ptr [edx + 0xf]; ret; 
0x0008cc28: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x0008cef9: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x00089bc1: movlps xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, dword ptr [edx + 8]; ret; 
0x000857e1: movlps xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x00089c01: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, dword ptr [edx + 0xa]; ret; 
0x00085821: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x00089c21: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; ret; 
0x00085841: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00089971: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, dword ptr [edx + 7]; pop edi; ret; 
0x00089bb1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, dword ptr [edx + 7]; ret; 
0x0008b79c: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, dword ptr [edx + 8]; pop edi; pop ebx; ret; 
0x0014a311: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00093d32: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000873ac: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000855b1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000883d6: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000857d1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0008e4d1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, dword ptr [edx + 0xc]; ret; 
0x0008ce91: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x0008e4f1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, dword ptr [edx + 0xd]; ret; 
0x0008ceb1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x0008e511: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, dword ptr [edx + 0xe]; ret; 
0x0008ced1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x0008e531: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, dword ptr [edx + 0xf]; ret; 
0x0008cef1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x00089c41: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x00085861: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x00089c61: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x00085881: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x00089c81: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, dword ptr [edx + 0xe]; ret; 
0x000858a1: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x00091641: movlps xmm0, qword ptr [esi]; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094a94: movlps xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091631: movlps xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008d961: movlps xmm0, qword ptr [esi]; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x00089ae5: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; pop edi; ret; 
0x00089c45: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x00085705: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x00085865: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x00089c65: movlps xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x00085885: movlps xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x00089c85: movlps xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, dword ptr [edx + 0xe]; ret; 
0x000858a5: movlps xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000916c5: movlps xmm1, qword ptr [esi + 5]; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000917f5: movlps xmm3, qword ptr [esi + 0xf]; movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000e6ce7: movnti dword ptr [ebx], ecx; add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp - 0x39]; 
0x001350ab: movq mm0, qword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013652b: movq mm0, qword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x0013c06b: movq mm0, qword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x0013c061: movq mm0, qword ptr [eax - 0x20]; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x000899f1: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, dword ptr [edx + 0xf]; pop edi; ret; 
0x00089ca1: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, dword ptr [edx + 0xf]; ret; 
0x00085631: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000858c1: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x00091721: movq mm0, qword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000918f5: movq mm2, qword ptr [esi + 0xf]; movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094de1: movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009191e: movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094d81: movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000918be: movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094da1: movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000918de: movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094dc1: movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000918fe: movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094bbb: movq qword ptr [eax], mm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091735: movq qword ptr [eax], mm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000917b8: movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094c1b: movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091798: movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094bfb: movq qword ptr [eax], mm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091778: movq qword ptr [eax], mm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094b98: movq qword ptr [eax], mm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091725: movq qword ptr [eax], mm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094bdc: movq qword ptr [eax], mm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091759: movq qword ptr [eax], mm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094ddd: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009191a: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094d7d: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000918ba: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094d9d: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000918da: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094dbd: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000918fa: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009183a: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009187d: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009189d: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094c9d: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009181a: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009185e: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094c5d: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000917da: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094c7d: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000917fa: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008f33e: movq qword ptr [edi + 0x10], mm2; lea eax, dword ptr [edi + 0x20]; pop edi; pop esi; pop ebx; ret; 
0x0008dc71: movq qword ptr [edi + 0x10], mm2; mov byte ptr [edi + 0x20], cl; pop edi; pop esi; pop ebx; ret; 
0x0008dc4e: movq qword ptr [edi + 0x10], mm2; pop edi; pop esi; pop ebx; ret; 
0x0008f58d: movq qword ptr [edi + 0x30], mm7; lea eax, dword ptr [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x0008de8d: movq qword ptr [edi + 0x30], mm7; pop edi; pop esi; pop ebx; ret; 
0x0008f2de: movq qword ptr [edi + 0xd], mm2; lea eax, dword ptr [edi + 0x1d]; pop edi; pop esi; pop ebx; ret; 
0x0008dbee: movq qword ptr [edi + 0xd], mm2; pop edi; pop esi; pop ebx; ret; 
0x0008dc0e: movq qword ptr [edi + 0xe], mm2; pop edi; pop esi; pop ebx; ret; 
0x0008f31e: movq qword ptr [edi + 0xf], mm2; lea eax, dword ptr [edi + 0x1f]; pop edi; pop esi; pop ebx; ret; 
0x0008dc2e: movq qword ptr [edi + 0xf], mm2; pop edi; pop esi; pop ebx; ret; 
0x0008dd71: movq qword ptr [edi - 1], mm0; pop edi; pop esi; pop ebx; ret; 
0x0008f502: movq qword ptr [edi], mm0; add edi, 0x10; call 0x129d77; add ecx, 0xcb333; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008de02: movq qword ptr [edi], mm0; add edi, 0x10; call 0x129d77; add ecx, 0xcc8d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008f135: movq qword ptr [edi], mm0; lea eax, dword ptr [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x0008da68: movq qword ptr [edi], mm0; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x0008dac8: movq qword ptr [edi], mm0; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x0008daa8: movq qword ptr [edi], mm0; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x0008da89: movq qword ptr [edi], mm0; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x0008dc4a: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x0008dbea: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x0008dc0a: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x0008dc2a: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x0008db4a: movq qword ptr [edi], mm0; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x0008db0a: movq qword ptr [edi], mm0; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x0008db2a: movq qword ptr [edi], mm0; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x0008da55: movq qword ptr [edi], mm0; pop edi; pop esi; pop ebx; ret; 
0x001354cd: movq qword ptr [edx + 4], xmm0; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013c42d: movq qword ptr [edx + 4], xmm0; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x0013345f: movq qword ptr [edx - 0x10], mm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00136530: movq qword ptr [edx - 0x10], mm0; mov eax, edx; pop ebx; ret; 
0x00132e2f: movq qword ptr [edx - 0x10], mm0; pop ebx; ret; 
0x0013be53: movq qword ptr [edx - 0x10], xmm0; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x0013348f: movq qword ptr [edx - 0x11], mm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132e5f: movq qword ptr [edx - 0x11], mm0; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0013c130: movq qword ptr [edx - 0x11], mm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x001334bf: movq qword ptr [edx - 0x12], mm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132e8f: movq qword ptr [edx - 0x12], mm0; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0013c1e0: movq qword ptr [edx - 0x12], mm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x00132ebf: movq qword ptr [edx - 0x13], mm0; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0013351f: movq qword ptr [edx - 0x14], mm0; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132eef: movq qword ptr [edx - 0x14], mm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0013c300: movq qword ptr [edx - 0x14], mm0; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x0013354f: movq qword ptr [edx - 0x15], mm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132f1f: movq qword ptr [edx - 0x15], mm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0013357f: movq qword ptr [edx - 0x16], mm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132f4f: movq qword ptr [edx - 0x16], mm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00132f7f: movq qword ptr [edx - 0x17], mm0; mov dword ptr [edx - 7], eax; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001335ef: movq qword ptr [edx - 0x18], mm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132faf: movq qword ptr [edx - 0x18], mm0; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x0013c050: movq qword ptr [edx - 0x18], mm0; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x0013361f: movq qword ptr [edx - 0x19], mm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132fdf: movq qword ptr [edx - 0x19], mm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0013365f: movq qword ptr [edx - 0x1a], mm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013300f: movq qword ptr [edx - 0x1a], mm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0013307f: movq qword ptr [edx - 0x1c], mm0; movq qword ptr [edx - 0xc], xmm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x001330af: movq qword ptr [edx - 0x1d], mm0; movq qword ptr [edx - 0xd], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001330df: movq qword ptr [edx - 0x1e], mm0; movq qword ptr [edx - 0xe], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x001350a6: movq qword ptr [edx - 0x20], mm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00136526: movq qword ptr [edx - 0x20], mm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x0013c066: movq qword ptr [edx - 0x20], mm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x0013345a: movq qword ptr [edx - 0x20], mm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132e2a: movq qword ptr [edx - 0x20], mm0; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x0013348a: movq qword ptr [edx - 0x21], mm0; movdqa xmmword ptr [edx - 0x11], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132e5a: movq qword ptr [edx - 0x21], mm0; movdqa xmmword ptr [edx - 0x11], xmm0; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001334ba: movq qword ptr [edx - 0x22], mm0; movdqa xmmword ptr [edx - 0x12], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132e8a: movq qword ptr [edx - 0x22], mm0; movdqa xmmword ptr [edx - 0x12], xmm0; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00132eba: movq qword ptr [edx - 0x23], mm0; movdqa xmmword ptr [edx - 0x13], xmm0; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0013351a: movq qword ptr [edx - 0x24], mm0; movdqa xmmword ptr [edx - 0x14], xmm0; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132eea: movq qword ptr [edx - 0x24], mm0; movdqa xmmword ptr [edx - 0x14], xmm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00132f1a: movq qword ptr [edx - 0x25], mm0; movdqa xmmword ptr [edx - 0x15], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00132f4a: movq qword ptr [edx - 0x26], mm0; movdqa xmmword ptr [edx - 0x16], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x001335ea: movq qword ptr [edx - 0x28], mm0; movdqa xmmword ptr [edx - 0x18], xmm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132faa: movq qword ptr [edx - 0x28], mm0; movdqa xmmword ptr [edx - 0x18], xmm0; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00133455: movq qword ptr [edx - 0x30], mm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132e25: movq qword ptr [edx - 0x30], mm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x00132ee5: movq qword ptr [edx - 0x34], mm0; movdqa xmmword ptr [edx - 0x24], xmm0; movdqa xmmword ptr [edx - 0x14], xmm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00132fa5: movq qword ptr [edx - 0x38], mm0; movdqa xmmword ptr [edx - 0x28], xmm0; movdqa xmmword ptr [edx - 0x18], xmm0; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00132e20: movq qword ptr [edx - 0x40], mm0; movdqa xmmword ptr [edx - 0x30], xmm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x00001a0f: movq qword ptr [edx - 0x46], mm2; fidiv dword ptr [ebx]; push edx; test dword ptr [ebx + 0x59e7c8ee], esi; pop ebx; ret 0x2a63; 
0x00133663: movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00133013: movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00134fbd: movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013643d: movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x0013bf8d: movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x00133083: movq qword ptr [edx - 0xc], xmm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x001330b3: movq qword ptr [edx - 0xd], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001330e3: movq qword ptr [edx - 0xe], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x001335f3: movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013630d: movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x00132fb3: movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00133623: movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132fe3: movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00134f2d: movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001363ad: movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x0013befd: movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x000899f5: movq qword ptr [edx], mm0; lea eax, dword ptr [edx + 0xf]; pop edi; ret; 
0x00089ca5: movq qword ptr [edx], mm0; lea eax, dword ptr [edx + 0xf]; ret; 
0x00085635: movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x000858c5: movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x0013550c: movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013c46c: movq qword ptr [edx], xmm0; pop ebx; ret; 
0x0013c428: movq xmm0, qword ptr [eax + 4]; movq qword ptr [edx + 4], xmm0; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x0013be4e: movq xmm0, qword ptr [eax - 0x10]; movq qword ptr [edx - 0x10], xmm0; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x0013bf88: movq xmm0, qword ptr [eax - 0xa]; movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x00134e78: movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00136308: movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0013be58: movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x0013bef8: movq xmm0, qword ptr [eax - 9]; movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x00135508: movq xmm0, qword ptr [eax]; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013c468: movq xmm0, qword ptr [eax]; movq qword ptr [edx], xmm0; pop ebx; ret; 
0x00166174: movsb byte ptr es:[edi], byte ptr [esi]; aam 0xfc; call esp; 
0x00169e44: movsb byte ptr es:[edi], byte ptr [esi]; aas; add dword ptr [eax], eax; insd dword ptr es:[edi], dx; xor ecx, esi; call esp; 
0x00004ff9: movsb byte ptr es:[edi], byte ptr [esi]; adc al, byte ptr [eax]; ret 2; 
0x0016cdc5: movsb byte ptr es:[edi], byte ptr [esi]; add al, byte ptr [eax]; aam 0x75; stc; jmp dword ptr [eax]; 
0x0016ce2d: movsb byte ptr es:[edi], byte ptr [esi]; add al, byte ptr [eax]; cmc; test ecx, edi; jmp dword ptr [eax]; 
0x0016cd95: movsb byte ptr es:[edi], byte ptr [esi]; add al, byte ptr [eax]; mov dl, 0x74; stc; jmp dword ptr [eax]; 
0x001682ed: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add al, 0x6e; in al, dx; call dword ptr [eax - 0x5c]; 
0x0016830d: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add al, 0x70; in al, dx; jmp eax; 
0x0006f6f9: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0xa824ac], cl; add byte ptr [eax], al; add esp, 0xac; ret; 
0x0002e848: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0xa824bc], cl; add byte ptr [eax], al; add esp, 0xac; ret; 
0x000b6688: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x000a7148: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x0012fb77: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; out dx, eax; call dword ptr [eax - 0x7cef397d]; ret 0x8910; 
0x0004a12d: movsb byte ptr es:[edi], byte ptr [esi]; add dword ptr [eax], eax; add al, ch; cmp eax, 0x81000dfc; ret; 
0x000e7dfe: movsb byte ptr es:[edi], byte ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebx + 0x1a824bc], cl; add byte ptr [eax], al; add esp, 0x1ac; ret; 
0x001896ad: movsb byte ptr es:[edi], byte ptr [esi]; add dword ptr [eax], eax; pmaxsw mm5, mm0; jmp dword ptr [esi + 0xb]; 
0x00173b49: movsb byte ptr es:[edi], byte ptr [esi]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00167bd0: movsb byte ptr es:[edi], byte ptr [esi]; and bl, ch; ljmp ptr [eax + 0x74000079]; and ch, bl; call eax; 
0x0016da79: movsb byte ptr es:[edi], byte ptr [esi]; cli; call eax; 
0x0016e6c0: movsb byte ptr es:[edi], byte ptr [esi]; cli; sti; jmp esp; 
0x00192aa4: movsb byte ptr es:[edi], byte ptr [esi]; cmp byte ptr [edx], al; add byte ptr [eax], cl; out dx, al; idiv bh; ret 0; 
0x0016ed38: movsb byte ptr es:[edi], byte ptr [esi]; dec eax; cld; jmp dword ptr [eax + 3]; 
0x0016a068: movsb byte ptr es:[edi], byte ptr [esi]; dec edi; int1; call eax; 
0x00189d2c: movsb byte ptr es:[edi], byte ptr [esi]; fcompi st(4); call dword ptr [edx]; 
0x0016ca08: movsb byte ptr es:[edi], byte ptr [esi]; hlt; clc; jmp esp; 
0x00189e9c: movsb byte ptr es:[edi], byte ptr [esi]; in al, 0xf4; call dword ptr [edx]; 
0x0016bc08: movsb byte ptr es:[edi], byte ptr [esi]; in al, 0xf7; jmp esp; 
0x00169ec4: movsb byte ptr es:[edi], byte ptr [esi]; inc edx; add dword ptr [eax], eax; dec ecx; xor dh, cl; call esp; 
0x001682d0: movsb byte ptr es:[edi], byte ptr [esi]; insb byte ptr es:[edi], dx; in al, dx; jmp esp; 
0x0019779c: movsb byte ptr es:[edi], byte ptr [esi]; int 0xf7; jmp dword ptr [esi]; 
0x0016e1b0: movsb byte ptr es:[edi], byte ptr [esi]; jno 0x16e1ae; call eax; 
0x00167c2c: movsb byte ptr es:[edi], byte ptr [esi]; jnp 0x167c2f; add ah, al; xor ebp, ebx; jmp esp; 
0x001688a8: movsb byte ptr es:[edi], byte ptr [esi]; jp 0x168898; call esp; 
0x0018faad: movsb byte ptr es:[edi], byte ptr [esi]; jp 0x18faa5; jmp dword ptr [edx]; 
0x00169980: movsb byte ptr es:[edi], byte ptr [esi]; mov bh, 0xf0; call esp; 
0x001685d8: movsb byte ptr es:[edi], byte ptr [esi]; mov ch, 0xec; push dword ptr [eax - 0x1bffff4c]; mov ch, 0xec; call eax; 
0x0016a3d8: movsb byte ptr es:[edi], byte ptr [esi]; mov cl, 0xf1; jmp dword ptr [eax + 0x6a]; 
0x00056710: movsb byte ptr es:[edi], byte ptr [esi]; mov dword ptr [esp], edx; call eax; 
0x0016ac30: movsb byte ptr es:[edi], byte ptr [esi]; mov esp, 0xe13cfff4; add dword ptr [eax], eax; xor al, 0xbd; hlt; jmp dword ptr [eax - 0x1f]; 
0x0017b354: movsb byte ptr es:[edi], byte ptr [esi]; mov esp, 0xf6ad0000; out dx, eax; call dword ptr [eax]; 
0x00189b01: movsb byte ptr es:[edi], byte ptr [esi]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0016b650: movsb byte ptr es:[edi], byte ptr [esi]; or edi, esi; jmp dword ptr [eax]; 
0x00176654: movsb byte ptr es:[edi], byte ptr [esi]; outsd dx, dword ptr [esi]; add byte ptr [eax], al; aaa; add edi, ebp; call dword ptr [eax]; 
0x001711a4: movsb byte ptr es:[edi], byte ptr [esi]; pop ds; add byte ptr [eax], al; fdiv dword ptr [ebx - 0x15]; call ecx; 
0x00177fbc: movsb byte ptr es:[edi], byte ptr [esi]; pop ds; sti; jmp esi; 
0x0007e7db: movsb byte ptr es:[edi], byte ptr [esi]; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x0016c094: movsb byte ptr es:[edi], byte ptr [esi]; pop edx; add al, byte ptr [eax]; in al, 0x40; clc; jmp esp; 
0x00168154: movsb byte ptr es:[edi], byte ptr [esi]; popfd; add byte ptr [eax], al; aam 0x59; in al, dx; call eax; 
0x001949a4: movsb byte ptr es:[edi], byte ptr [esi]; push edi; add al, byte ptr [eax]; cmp byte ptr [edi + esi*8], ah; jmp dword ptr [ebx]; 
0x0018b3ac: movsb byte ptr es:[edi], byte ptr [esi]; push edi; cmc; call dword ptr [ebx]; 
0x000948cf: movsb byte ptr es:[edi], byte ptr [esi]; push esp; or dword ptr [eax], eax; add ecx, 0xc60b1; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0017b954: movsb byte ptr es:[edi], byte ptr [esi]; ret 0; 
0x000376b5: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000553af: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc110; 
0x00168700: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xffec; 
0x000c7739: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xfffb; 
0x00168844: movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x0016e430: movsb byte ptr es:[edi], byte ptr [esi]; sar ebx, -1; mov eax, 0x6400032a; ret 0xfffb; 
0x000734bc: movsb byte ptr es:[edi], byte ptr [esi]; sbb byte ptr [eax], al; add byte ptr [ebx + 0x18a083], al; add byte ptr [ecx], al; pop ebx; ret; 
0x000c9cb2: movsb byte ptr es:[edi], byte ptr [esi]; sbb eax, 0xc8c10000; or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr [esp], edx; call eax; 
0x0013c67e: movsb byte ptr es:[edi], byte ptr [esi]; scasd eax, dword ptr es:[edi]; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001949f9: movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [ebx]; 
0x0016cf99: movsb byte ptr es:[edi], byte ptr [esi]; stc; call eax; 
0x0016e690: movsb byte ptr es:[edi], byte ptr [esi]; sti; jmp eax; 
0x00194d7c: movsb byte ptr es:[edi], byte ptr [esi]; sub bh, dh; jmp dword ptr [edi]; 
0x0016e514: movsb byte ptr es:[edi], byte ptr [esi]; sub eax, 0xd0900003; sti; call esp; 
0x0016ce5c: movsb byte ptr es:[edi], byte ptr [esi]; test al, 2; add ah, ah; xchg ecx, edi; call esp; 
0x0016cb1c: movsb byte ptr es:[edi], byte ptr [esi]; xchg eax, esp; add al, byte ptr [eax]; cmp al, 0xf9; call esp; 
0x00167c48: movsb byte ptr es:[edi], byte ptr [esi]; xor al, 0xeb; dec dword ptr [esi + edi*2]; add ah, al; xor al, 0xeb; jmp dword ptr [eax + 0x7e]; 
0x001680a8: movsb byte ptr es:[edi], byte ptr [esi]; xor al, 0xec; call esp; 
0x001693b8: movsb byte ptr es:[edi], byte ptr [esi]; xor al, dh; jmp dword ptr [eax + 0xc]; 
0x0016bfe8: movsb byte ptr es:[edi], byte ptr [esi]; xor eax, 0x5724fff8; add al, byte ptr [eax]; adc al, 0x36; clc; jmp dword ptr [eax + 0x57]; 
0x0016cdc4: movsb byte ptr es:[edi], byte ptr fs:[esi]; add al, byte ptr [eax]; aam 0x75; stc; jmp dword ptr [eax]; 
0x000f2b51: movsd dword ptr es:[edi], dword ptr [esi]; add al, 0xb; add byte ptr [ecx - 0x8fbdb8c], cl; ret 0xff80; 
0x00168355: movsd dword ptr es:[edi], dword ptr [esi]; add byte ptr [eax], al; xor al, 0x73; in al, dx; call dword ptr [eax]; 
0x0019192c: movsd dword ptr es:[edi], dword ptr [esi]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0009490a: movsd dword ptr es:[edi], dword ptr [esi]; call 0x129d77; add ecx, 0xc6074; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e96a: movsd dword ptr es:[edi], dword ptr [esi]; call 0x129d77; add ecx, 0xcbe40; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d32a: movsd dword ptr es:[edi], dword ptr [esi]; call 0x129d77; add ecx, 0xcd320; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0019ad05: movsd dword ptr es:[edi], dword ptr [esi]; clc; jmp dword ptr [edi]; 
0x0016da81: movsd dword ptr es:[edi], dword ptr [esi]; cli; call dword ptr [eax]; 
0x0018c06d: movsd dword ptr es:[edi], dword ptr [esi]; cmc; jmp esp; 
0x00082975: movsd dword ptr es:[edi], dword ptr [esi]; mov eax, edi; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0008278b: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0007e24a: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; cld; pop edi; ret; 
0x0007e05e: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x0007e034: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0007e224: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; pop edi; ret; 
0x0018036a: movsd dword ptr es:[edi], dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001959e3: movsd dword ptr es:[edi], dword ptr [esi]; push ebp; idiv bh; sbb al, 0xd; adc byte ptr [ebp - 0xa], cl; jmp dword ptr [edx]; 
0x0007e032: movsd dword ptr es:[edi], dword ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0007e222: movsd dword ptr es:[edi], dword ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; pop edi; ret; 
0x0007e19b: movsd dword ptr es:[edi], dword ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg eax, edi; mov esi, edx; ret; 
0x0014aca7: movsd dword ptr es:[edi], dword ptr [esi]; ret 0xffec; 
0x0002fdbe: movsd dword ptr es:[edi], dword ptr [esi]; ret; 
0x00188510: movsd dword ptr es:[edi], dword ptr [esi]; sbb dh, ah; call dword ptr [eax]; 
0x0016e3c9: movsd dword ptr es:[edi], dword ptr [esi]; sti; call eax; 
0x00025f83: movsd dword ptr es:[edi], dword ptr [esi]; sti; dec dword ptr [ebx - 0x74fbdb8c]; sbb al, 0x24; add esp, 8; ret; 
0x0007e19d: movsd dword ptr es:[edi], dword ptr [esi]; xchg eax, edi; mov esi, edx; ret; 
0x0007e031: movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0007e221: movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; pop edi; ret; 
0x0007e19a: movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg eax, edi; mov esi, edx; ret; 
0x0006b8e8: movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0006baa7: movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x000648e1: movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x30]; 
0x000670ad: movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x34]; 
0x00070928: movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x44]; 
0x0002dad6: movsx eax, word ptr [esp + 8]; mov dword ptr [esp + 4], edx; add esp, 0x10; and eax, 0x8000; ret; 
0x0008e823: movsx ecx, word ptr [eax + eax]; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0006ab07: movsx edx, byte ptr [eax + 0x46]; mov edx, dword ptr [eax + edx + 0x94]; mov dword ptr [esp], eax; call dword ptr [edx + 0x30]; 
0x000e5dd0: movups xmm0, xmmword ptr [eax]; add bl, dh; ret; 
0x000e9dc6: movzx eax, al; add esp, 0x18; pop ebx; ret; 
0x0012529f: movzx eax, al; add esp, 0x18; pop esi; ret; 
0x000a7266: movzx eax, al; lea eax, dword ptr [eax + eax - 1]; pop esi; pop edi; ret; 
0x000b9b6d: movzx eax, al; lea eax, dword ptr [eax + eax - 1]; ret; 
0x000678b6: movzx eax, al; mov dword ptr [edx + 0x14], ecx; add esp, 0x18; pop ebx; ret; 
0x0006aa75: movzx eax, al; mov dword ptr [edx + 0x14], ecx; ret; 
0x00113bc0: movzx eax, al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000f071c: movzx eax, al; mov ebx, dword ptr [esp + 0x70]; mov esi, dword ptr [esp + 0x74]; mov edi, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x0002eb7f: movzx eax, al; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000cbb50: movzx eax, al; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0xd7494]; jmp ecx; 
0x000c1f78: movzx eax, al; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0xe106c]; jmp ecx; 
0x000ac910: movzx eax, al; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0xf66d4]; jmp ecx; 
0x000ac838: movzx eax, al; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0xf67ac]; jmp ecx; 
0x0011ea96: movzx eax, al; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00114112: movzx eax, al; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000daced: movzx eax, al; pop ebx; pop esi; pop edi; pop ebp; ret 0xc; 
0x0001778f: movzx eax, al; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000d84b5: movzx eax, al; pop ebx; ret; 
0x00114a79: movzx eax, al; pop edi; pop ebp; ret; 
0x000eb5bd: movzx eax, al; pop esi; pop edi; pop ebp; ret; 
0x0002e89d: movzx eax, al; ret; 
0x000710c3: movzx eax, al; sub eax, 1; add esp, 0x18; pop esi; ret; 
0x000c5ce9: movzx eax, al; sub eax, 1; pop esi; ret; 
0x000ef0a8: movzx eax, al; sub eax, 1; ret; 
0x00111f46: movzx eax, ax; ret; 
0x001103c0: movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x00072a36: movzx eax, byte ptr [eax - 1]; and dword ptr [esi], 0xffffffef; add esp, 0x18; pop esi; ret; 
0x0013500c: movzx eax, byte ptr [eax - 1]; mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013648c: movzx eax, byte ptr [eax - 1]; mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x0013bfdc: movzx eax, byte ptr [eax - 1]; mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00072140: movzx eax, byte ptr [eax]; add esp, 0x14; pop ebx; pop esi; ret; 
0x00070560: movzx eax, byte ptr [eax]; add esp, 0x18; pop esi; ret; 
0x001278f0: movzx eax, byte ptr [eax]; add esp, 0x24; pop esi; pop edi; ret; 
0x00025eaf: movzx eax, byte ptr [eax]; mov byte ptr [ebx + 0x10e1], al; lea eax, dword ptr [ebx + 0x10ac]; pop ebx; ret; 
0x00135680: movzx eax, byte ptr [eax]; mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013c5c0: movzx eax, byte ptr [eax]; mov byte ptr [edx], al; pop ebx; ret; 
0x00130822: movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0006aacd: movzx eax, byte ptr [ecx]; add ecx, 1; mov dword ptr [edx + 4], ecx; add esp, 0x18; pop ebx; ret; 
0x0006aa9c: movzx eax, byte ptr [ecx]; add ecx, 1; mov dword ptr [edx + 4], ecx; ret; 
0x00130325: movzx eax, byte ptr [edi + ecx]; movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x00142a94: movzx eax, byte ptr [edx + 1]; mov ecx, dword ptr [ebx + ecx*4 - 0x567f4]; mov eax, dword ptr [ebx + eax*4 - 0x567f4]; sub eax, ecx; pop ebx; ret; 
0x001403ed: movzx eax, byte ptr [edx + 1]; sub eax, ecx; pop ebp; ret; 
0x0013ec24: movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x00142ab4: movzx eax, byte ptr [edx + 2]; mov ecx, dword ptr [ebx + ecx*4 - 0x567f4]; mov eax, dword ptr [ebx + eax*4 - 0x567f4]; sub eax, ecx; pop ebx; ret; 
0x0014040d: movzx eax, byte ptr [edx + 2]; sub eax, ecx; pop ebp; ret; 
0x0013ec34: movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x00142ad4: movzx eax, byte ptr [edx + 3]; mov ecx, dword ptr [ebx + ecx*4 - 0x567f4]; mov eax, dword ptr [ebx + eax*4 - 0x567f4]; sub eax, ecx; pop ebx; ret; 
0x0014042d: movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x0013ec44: movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x0014044d: movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x0013ec54: movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x00142b14: movzx eax, byte ptr [edx + 5]; mov ecx, dword ptr [ebx + ecx*4 - 0x567f4]; mov eax, dword ptr [ebx + eax*4 - 0x567f4]; sub eax, ecx; pop ebx; ret; 
0x0014046d: movzx eax, byte ptr [edx + 5]; sub eax, ecx; pop ebp; ret; 
0x0013ec64: movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x0014048d: movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x0013ec74: movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x001403b1: movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x0013ec04: movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x00072401: movzx eax, byte ptr [edx]; add edx, 1; mov dword ptr [esi + 4], edx; add esp, 0x18; pop esi; ret; 
0x0012b790: movzx eax, byte ptr [edx]; add esp, 0x14; pop ebx; pop esi; ret; 
0x00142a73: movzx eax, byte ptr [edx]; mov ecx, dword ptr [ebx + ecx*4 - 0x567f4]; mov eax, dword ptr [ebx + eax*4 - 0x567f4]; sub eax, ecx; pop ebx; ret; 
0x00073bf0: movzx eax, byte ptr [edx]; pop esi; ret; 
0x001403cc: movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x0013ec13: movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x000e6031: movzx eax, byte ptr [esi + 0x23]; mov byte ptr [esp + 0x2f], al; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0013d5c6: movzx eax, byte ptr [esi]; mov byte ptr [edi], al; pop esi; pop edi; pop ebx; ret; 
0x0010506a: movzx eax, dx; and ecx, 0xc0000000; and edx, 0xff; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0002720d: movzx eax, word ptr [eax + edx*2 + 0x100]; and eax, dword ptr [esp + 8]; ret; 
0x000f3b5e: movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x1000; ret; 
0x000f3abe: movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x100; ret; 
0x000f3a1e: movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x2000; ret; 
0x000f379e: movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x200; ret; 
0x000f38de: movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x4000; ret; 
0x000f351e: movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x400; ret; 
0x000f383e: movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 0x8000; ret; 
0x000f35be: movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 1; ret; 
0x000f365e: movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 2; ret; 
0x000f397e: movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 4; ret; 
0x000f347e: movzx eax, word ptr [eax + edx*2]; add esp, 0xc; and eax, 8; ret; 
0x00026f38: movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x00026f08: movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x00026ed8: movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x00026e28: movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00026e88: movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00026da8: movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00026e58: movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00026df8: movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x00026fc8: movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00026dd8: movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x00026eb8: movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00026d88: movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x000d6e18: movzx ebp, byte ptr [edx + 4]; mov ecx, ebx; sub ecx, dword ptr [ebx + ebp*4 - 0xcc1cc]; jmp ecx; 
0x001403e9: movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; pop ebp; ret; 
0x0013ec20: movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x00140409: movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; pop ebp; ret; 
0x0013ec30: movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x00140429: movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x0013ec40: movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x00140449: movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x0013ec50: movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x00140469: movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; pop ebp; ret; 
0x0013ec60: movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x00140489: movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x0013ec70: movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x001403ad: movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x0013ec00: movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x00134ee8: movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00136368: movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x0013beb8: movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x00135558: movzx ecx, byte ptr [eax]; mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013c4b8: movzx ecx, byte ptr [eax]; mov byte ptr [edx], cl; pop ebx; ret; 
0x001403c9: movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x0013ec10: movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0004334e: movzx ecx, byte ptr [ebp - 0x550]; mov dword ptr [ebp - 0x534], edi; mov dword ptr [ebp - 0x4f4], eax; mov dword ptr [ebp - 0x54c], ecx; jmp edx; 
0x00130329: movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x0001cbda: movzx ecx, dl; test dl, dl; cmovns eax, ecx; ret; 
0x00134f78: movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001363f8: movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x0013bf48: movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x001355e8: movzx ecx, word ptr [eax]; mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013c538: movzx ecx, word ptr [eax]; mov word ptr [edx], cx; pop ebx; ret; 
0x000d4368: movzx edx, al; mov ecx, ebx; sub ecx, dword ptr [ebx + edx*4 - 0xcec7c]; jmp ecx; 
0x00130825: movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x00146894: movzx edx, byte ptr [esi - 0x10]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x001468f4: movzx edx, byte ptr [esi - 0xa]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x001468c4: movzx edx, byte ptr [esi - 0xd]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x001468b4: movzx edx, byte ptr [esi - 0xe]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00146885: movzx edx, byte ptr [esi - 9]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0007249d: movzx edx, byte ptr [esi]; mov eax, dword ptr [edi + eax + 0x94]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0xc]; 
0x0004cb69: movzx edx, dl; mov eax, ebx; sub eax, dword ptr [ebx + edx*4 - 0x15647c]; jmp eax; 
0x000cb890: movzx edx, dl; mov eax, ebx; sub eax, dword ptr [ebx + edx*4 - 0xd7754]; jmp eax; 
0x000d89f4: movzx edx, word ptr [eax]; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00094810: mul byte ptr [eax + 0xc]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00133667: mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00166fcc: neg byte ptr [esi]; std; jmp eax; 
0x0014b358: neg dword ptr [ebx + 0x5e]; pop edi; ret; 
0x00019eb6: neg eax; adc edx, 0; add esp, 0x44; neg edx; ret; 
0x00145447: neg eax; add esp, 4; pop ebp; pop ebx; ret; 
0x00142bb7: neg eax; add esp, 4; pop ebx; ret; 
0x00074d46: neg eax; mov dword ptr [esp], eax; call dword ptr [ecx]; 
0x0002e214: neg eax; mov dword ptr gs:[edx], eax; or eax, 0xffffffff; pop ebx; ret; 
0x00082ca1: neg eax; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x00082ceb: neg eax; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000c9d8b: neg eax; pop ebp; ret; 
0x001321c7: neg eax; pop edi; pop ebp; pop ebx; ret; 
0x00131c67: neg eax; pop edi; pop ebx; ret; 
0x00149737: neg eax; pop edi; pop esi; pop ebx; ret; 
0x000a71f7: neg eax; pop edi; pop esi; ret; 
0x000c5b44: neg eax; pop edi; ret; 
0x0002f7d3: neg eax; pop esi; pop edi; ret; 
0x000ca2ff: neg eax; ret 8; 
0x000a7227: neg eax; ret; 
0x00019d86: neg edx; mov esi, dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00019ebe: neg edx; ret; 
0x000e14e7: nop dword ptr [eax + eax]; mov eax, dword ptr [ecx - 0xf8]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00197b20: nop; aad 0xf7; jmp dword ptr [ebx]; 
0x0016e7b8: nop; adc al, 0xfc; jmp dword ptr [eax + 0x3a]; 
0x0016ca7d: nop; add al, byte ptr [eax]; test byte ptr [edi], al; stc; call esp; 
0x0002eeb0: nop; add byte ptr [eax], al; add byte ptr [ecx - 0x47207839], cl; mov cl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002e13e: nop; add byte ptr [eax], al; add byte ptr [edi + 0xafb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00026fef: nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x00166e24: nop; add ch, bh; jmp dword ptr [eax]; 
0x001709e6: nop; add cl, byte ptr [edx]; ret; 
0x0005ba61: nop; add dword ptr [eax], 0x24148900; call eax; 
0x00078d6e: nop; add dword ptr [eax], eax; add byte ptr [ebx - 0x1876d], cl; jmp dword ptr [ebp - 0x75]; 
0x000a87c2: nop; add dword ptr [eax], eax; add byte ptr [ecx], ch; ret 0xfa83; 
0x0016f014: nop; add dword ptr [ecx], 0; add al, 0x72; std; jmp dword ptr [eax]; 
0x001988b7: nop; add dword ptr [edx], eax; ret; 
0x001491ef: nop; add eax, 1; pop edi; ret; 
0x0002f72f: nop; add eax, dword ptr [esp]; ret; 
0x0003f76f: nop; add esp, 0x14; add eax, 1; pop ebx; pop esi; ret; 
0x00024b28: nop; and al, 0x83; ret 0x3b01; 
0x0018eca0: nop; and dh, dh; jmp dword ptr [edi]; 
0x00095c6f: nop; bsf eax, eax; lea eax, dword ptr [eax + edx - 0x10]; ret; 
0x0009581f: nop; bsr eax, eax; add eax, ecx; ret; 
0x0002eddf: nop; call 0x129d77; add ecx, 0x17420f; mov eax, dword ptr [ecx + 0x54]; ret; 
0x0002721f: nop; call 0x129d77; add ecx, 0x17bdcf; mov eax, dword ptr [ecx - 0x130]; add eax, dword ptr gs:[0]; ret; 
0x00019b4f: nop; call 0x129d77; add ecx, 0x18949f; mov eax, dword ptr [ecx - 0xf8]; add eax, dword ptr gs:[0]; ret; 
0x0012758f: nop; call 0x129d77; add ecx, 0x7ba5f; mov eax, dword ptr [ecx - 0x174]; add eax, dword ptr gs:[0]; ret; 
0x000fefbf: nop; call 0x129d77; add ecx, 0xa402f; mov eax, dword ptr [ecx - 0x14]; mov eax, dword ptr gs:[eax]; ret; 
0x000f274f: nop; call 0x129d77; add ecx, 0xb089f; mov eax, dword ptr [ecx - 0xfc]; mov eax, dword ptr [eax + 0x1c]; ret; 
0x0000ccd8: nop; call dword ptr [eax]; 
0x0014b34f: nop; call dword ptr [esi]; 
0x0016c571: nop; clc; call dword ptr [eax + 0x71]; 
0x001678b1: nop; cld; call esi; 
0x001678b1: nop; cld; call esi; nop; cld; jmp dword ptr [esi - 0x6f]; 
0x001678b5: nop; cld; jmp dword ptr [esi - 0x6f]; 
0x00167510: nop; dec ecx; std; jmp dword ptr [eax]; 
0x00174340: nop; dec esp; add byte ptr [eax], al; push -0x2b; in al, dx; call dword ptr [eax]; 
0x0002d99f: nop; fild dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0002d38f: nop; fild dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x000a7baf: nop; fild dword ptr [esp + 4]; fild dword ptr [esp + 8]; fsubp st(1); ret; 
0x0002d5ef: nop; fild dword ptr [esp + 8]; fld dword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0017c810: nop; fsub st(7), st(0); jmp edx; 
0x0016acdc: nop; in al, 1; add byte ptr [esp + eax*8], al; hlt; call eax; 
0x00168911: nop; in eax, dx; call eax; 
0x00026a9a: nop; inc eax; ret; 
0x00167600: nop; inc ebx; std; jmp dword ptr [eax]; 
0x00173d40: nop; inc esi; add byte ptr [eax], al; dec ecx; mov dl, 0xec; call dword ptr [eax]; 
0x00083073: nop; inc esp; call dword ptr [ecx]; 
0x0018f96d: nop; jns 0x18f965; jmp dword ptr [edx]; 
0x00186bf5: nop; jo 0x186bea; jmp dword ptr [edx]; 
0x0014842f: nop; lea eax, dword ptr [ecx + 1]; ret; 
0x00149c1f: nop; lea eax, dword ptr [edi - 0xc]; pop edi; ret; 
0x0002ee5f: nop; lea eax, dword ptr [edx - 1]; mov dword ptr [ecx + 0x58], eax; mov eax, edx; ret; 
0x0011198f: nop; lea ecx, dword ptr [esp + 0x30]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x18], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x000a73cb: nop; lea esi, dword ptr [esi]; add eax, 1; ret; 
0x0009842b: nop; lea esi, dword ptr [esi]; add eax, 8; ret; 
0x000792bb: nop; lea esi, dword ptr [esi]; add esp, 0x18; pop ebx; ret; 
0x00095c78: nop; lea esi, dword ptr [esi]; bsf eax, eax; add eax, edx; ret; 
0x00095c98: nop; lea esi, dword ptr [esi]; bsf eax, eax; lea eax, dword ptr [eax + edx + 0x20]; ret; 
0x00095838: nop; lea esi, dword ptr [esi]; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x20]; ret; 
0x00095848: nop; lea esi, dword ptr [esi]; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x30]; ret; 
0x00129adb: nop; lea esi, dword ptr [esi]; call 0x129930; add esp, 0x18; pop ebx; ret; 
0x0011cdfb: nop; lea esi, dword ptr [esi]; lea edx, dword ptr [esp + 0x530]; mov dword ptr [esp + 4], esi; mov dword ptr [esp], edx; call dword ptr [eax + 0xc]; 
0x00087638: nop; lea esi, dword ptr [esi]; mov dword ptr [ecx], edx; pop ebx; ret; 
0x000733cb: nop; lea esi, dword ptr [esi]; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x000733db: nop; lea esi, dword ptr [esi]; mov eax, 0xffffffff; ret; 
0x0002ecf3: nop; lea esi, dword ptr [esi]; mov eax, 1; ret; 
0x00032b13: nop; lea esi, dword ptr [esi]; mov eax, dword ptr [ecx + 4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00129988: nop; lea esi, dword ptr [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00129928: nop; lea esi, dword ptr [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x00073468: nop; lea esi, dword ptr [esi]; mov eax, dword ptr [esp + 4]; ret; 
0x000ba2ab: nop; lea esi, dword ptr [esi]; mov eax, ebx; sub eax, dword ptr [ebx + esi*4 - 0xe8d38]; jmp eax; 
0x00088298: nop; lea esi, dword ptr [esi]; mov eax, edx; pop ebx; ret; 
0x000eb01b: nop; lea esi, dword ptr [esi]; mov ecx, edi; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000ddc43: nop; lea esi, dword ptr [esi]; mov ecx, edi; xchg ebx, edx; mov eax, 0x6a; call dword ptr gs:[0x10]; 
0x000dddc3: nop; lea esi, dword ptr [esi]; mov ecx, edi; xchg ebx, edx; mov eax, 0x6b; call dword ptr gs:[0x10]; 
0x000ddd03: nop; lea esi, dword ptr [esi]; mov ecx, edi; xchg ebx, edx; mov eax, 0x6c; call dword ptr gs:[0x10]; 
0x00083b4b: nop; lea esi, dword ptr [esi]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000876db: nop; lea esi, dword ptr [esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000876eb: nop; lea esi, dword ptr [esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000876fb: nop; lea esi, dword ptr [esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x0013ec2b: nop; lea esi, dword ptr [esi]; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x0013ec3b: nop; lea esi, dword ptr [esi]; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x0013ec4b: nop; lea esi, dword ptr [esi]; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x0013ec5b: nop; lea esi, dword ptr [esi]; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x0013ec6b: nop; lea esi, dword ptr [esi]; movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0013ec0b: nop; lea esi, dword ptr [esi]; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x000d4363: nop; lea esi, dword ptr [esi]; movzx edx, al; mov ecx, ebx; sub ecx, dword ptr [ebx + edx*4 - 0xcec7c]; jmp ecx; 
0x00091928: nop; lea esi, dword ptr [esi]; pop esi; ret; 
0x000834ab: nop; lea esi, dword ptr [esi]; ret; 
0x0009509b: nop; lea esi, dword ptr [esi]; xor eax, eax; pop edi; ret; 
0x00095ae8: nop; lea esi, dword ptr [esi]; xor eax, eax; ret; 
0x0016cec4: nop; lodsb al, byte ptr [esi]; add al, byte ptr [eax]; in al, 0x92; stc; jmp eax; 
0x00189f90: nop; lodsd eax, dword ptr [esi]; add dword ptr [eax], eax; pushfd; out 0xf4, al; jmp dword ptr [eax]; 
0x00166948: nop; loope 0x166947; jmp dword ptr [eax]; 
0x00126ddd: nop; mov al, 1; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000cb4bc: nop; mov bh, 0xf5; call dword ptr [edi + 0x56]; 
0x000949cf: nop; mov byte ptr [eax], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0017a890: nop; mov dh, 0; add ah, bh; test edi, ebp; jmp dword ptr [eax]; 
0x000c77d8: nop; mov dword ptr [esp + 0xc], edi; mov dword ptr [esp + 8], eax; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [ebp - 0x50]; 
0x00017777: nop; mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebp - 0x7c]; mov dword ptr [esp], eax; mov eax, dword ptr [ebp + 0xc]; call dword ptr [eax]; 
0x0007c327: nop; mov dword ptr [esp + 4], eax; mov eax, dword ptr [esi + 0x24]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x000428b8: nop; mov dword ptr [esp], edx; call eax; 
0x000e8937: nop; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x000ef7cf: nop; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x000b9a37: nop; mov eax, 0x20; ret; 
0x000e80ff: nop; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x000b907f: nop; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000b907f: nop; mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x000b931f: nop; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000b931f: nop; mov eax, 0x41; call dword ptr gs:[0x10]; ret; 
0x000b939f: nop; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x000b9977: nop; mov eax, 0x7d00; pop ebx; ret; 
0x000b99b7: nop; mov eax, 0x7e; pop ebx; ret; 
0x000eb3ef: nop; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x000c54af: nop; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0019aa90: nop; mov eax, 0x9f1c0002; clc; call dword ptr [ebx]; 
0x0002df2f: nop; mov eax, 0xad; int 0x80; 
0x000b908f: nop; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000b908f: nop; mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x000b90af: nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000b90af: nop; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000b909f: nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000b909f: nop; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x000b90bf: nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000b90bf: nop; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x000b996f: nop; mov eax, 0xfa; pop ebx; ret; 
0x0006a57f: nop; mov eax, 0xffffffff; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000bb1f7: nop; mov eax, 1; pop esi; ret; 
0x00113a0f: nop; mov eax, 2; ret; 
0x00177d90: nop; mov eax, dword ptr [eax]; add byte ptr [edx], bl; out dx, eax; jmp dword ptr [esi]; 
0x001298ca: nop; mov eax, dword ptr [eax]; ret; 
0x000e4d7f: nop; mov eax, dword ptr [ecx - 0xf8]; mov dword ptr gs:[eax], 0x16; mov eax, 1; ret; 
0x0006812f: nop; mov eax, dword ptr [ecx - 0xf8]; mov dword ptr gs:[eax], 9; mov eax, 0xffffffff; ret; 
0x0008e29f: nop; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, dword ptr [edx + 3]; pop edi; ret; 
0x0014a2bf: nop; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x0008578f: nop; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x00073147: nop; mov eax, dword ptr [edx]; mov dword ptr [ecx], eax; ret; 
0x0006c267: nop; mov eax, dword ptr [edx]; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x00112fc7: nop; mov eax, dword ptr [esi + 0x10]; mov dword ptr [esp], edi; mov dword ptr [esp + 4], eax; call dword ptr [esi + 0x14]; 
0x0011cc1f: nop; mov eax, dword ptr [esi + 8]; lea edx, dword ptr [esp + 0x4d0]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x0012794f: nop; mov eax, dword ptr [esp + 0x10]; mov eax, dword ptr [eax]; add esp, 0xc; ret; 
0x0002d7af: nop; mov eax, dword ptr [esp + 0xc]; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x0011f70f: nop; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0006aa2f: nop; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0002d6ef: nop; mov eax, dword ptr [esp + 4]; and eax, 0x80000000; ret; 
0x0010503f: nop; mov eax, dword ptr [esp + 4]; and eax, 0xffff; ror ax, 8; ret; 
0x000b3d8f: nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x001298cf: nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x48]; ret; 
0x000e5daf: nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x0006a00f: nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00069fdf: nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000b40bf: nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x0011f71f: nop; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x000251ff: nop; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0006aa3f: nop; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x10; setne al; movzx eax, al; ret; 
0x0006aa4f: nop; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x20; setne al; movzx eax, al; ret; 
0x00069fef: nop; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 4; sete al; movzx eax, al; ret; 
0x00069fff: nop; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 8; sete al; movzx eax, al; ret; 
0x000271df: nop; mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0005c1b7: nop; mov eax, ebx; sub eax, dword ptr [ebx + ecx*4 - 0x146e30]; jmp eax; 
0x000b0c77: nop; mov eax, ebx; sub eax, dword ptr [ebx + ecx*4 - 0xf2370]; jmp eax; 
0x0008ea2f: nop; mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x00148a7f: nop; mov eax, edx; ret; 
0x000a74c7: nop; mov eax, esi; pop esi; ret; 
0x0019b440: nop; mov ebp, 0xdac80002; clc; call dword ptr [eax]; 
0x000b85c3: nop; mov ebx, dword ptr [esp + 4]; mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x00115fef: nop; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0007d85f: nop; mov ebx, dword ptr [esp]; ret; 
0x00115fff: nop; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0x8cfe8]; jmp ecx; 
0x00125a67: nop; mov ecx, esi; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0018b190: nop; mov edi, 0x2f1c0001; cli; call dword ptr [ebp + 2]; 
0x0019ac90: nop; mov edx, 0xa18c0002; clc; call dword ptr [esi + 2]; 
0x0007e2df: nop; mov edx, 0xffffffff; bsf eax, dword ptr [esp + 4]; cmove eax, edx; add eax, 1; ret; 
0x000ce0ff: nop; mov edx, dword ptr [eax + 4]; mov dword ptr [edx + 0x10], eax; xor eax, eax; pop esi; ret; 
0x0006d90f: nop; mov edx, dword ptr [ebp + 0x54]; mov dword ptr [esp + 0x48], edx; mov dword ptr [esp], edx; call dword ptr [edx + 0x10]; 
0x000915df: nop; mov edx, dword ptr [esi]; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001298ea: nop; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000b7bdf: nop; mov edx, dword ptr [esp + 4]; mov ecx, edx; xchg ebx, ecx; mov eax, 0x2b; call dword ptr gs:[0x10]; 
0x000eeddf: nop; mov edx, dword ptr [esp + 4]; mov ecx, edx; xchg ebx, ecx; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x000eedff: nop; mov edx, dword ptr [esp + 4]; mov ecx, edx; xchg ebx, ecx; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x000f05ff: nop; mov edx, ebx; mov eax, 0x66; mov ebx, 0xd; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f05bf: nop; mov edx, ebx; mov eax, 0x66; mov ebx, 0xe; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f023f: nop; mov edx, ebx; mov eax, 0x66; mov ebx, 0xf; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f063f: nop; mov edx, ebx; mov eax, 0x66; mov ebx, 1; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f00ff: nop; mov edx, ebx; mov eax, 0x66; mov ebx, 2; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f027f: nop; mov edx, ebx; mov eax, 0x66; mov ebx, 4; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f01ff: nop; mov edx, ebx; mov eax, 0x66; mov ebx, 6; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f01bf: nop; mov edx, ebx; mov eax, 0x66; mov ebx, 7; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f067f: nop; mov edx, ebx; mov eax, 0x66; mov ebx, 8; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000efc8f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x000ef5df: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x000ef80f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x000e81af: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x000eecff: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x16; call dword ptr gs:[0x10]; 
0x000aac7f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x19; call dword ptr gs:[0x10]; 
0x000b7ecf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x000e0baf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x000df4af: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x000df56f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x2a; call dword ptr gs:[0x10]; 
0x000e800f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x000de55f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x000e804f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x000efccf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x000eea4f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x000e846f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x000ef26f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x000e84ef: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x000efbbf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x000b7b9f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x000ef3df: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7c; call dword ptr gs:[0x10]; 
0x000ef6ff: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000b929f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x000df6df: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x000ef9af: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000b935f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x000eb3af: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000c546f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000c54ef: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000c552f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x000e0b0f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x000df69f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000ef59f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x000dda6f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 1; call dword ptr gs:[0x10]; 
0x000ef84f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x000efd9f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x000efe2f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000df5af: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x000efe6f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x000ef4df: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x000eff7f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x000ddb0f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1e; call dword ptr gs:[0x10]; 
0x000ded1f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x21; call dword ptr gs:[0x10]; 
0x000554ff: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x26; call dword ptr gs:[0x10]; 
0x000de69f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000eed3f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x34; call dword ptr gs:[0x10]; 
0x000b92df: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x000df4ef: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x000e7d3f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x000ef2ef: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4b; call dword ptr gs:[0x10]; 
0x000ef2af: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4c; call dword ptr gs:[0x10]; 
0x000a849f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4f; call dword ptr gs:[0x10]; 
0x000e09cf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x000e84af: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x000eb15f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x000e979f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5c; call dword ptr gs:[0x10]; 
0x000e97df: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5d; call dword ptr gs:[0x10]; 
0x000de5bf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x000de12f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x63; call dword ptr gs:[0x10]; 
0x000de16f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x64; call dword ptr gs:[0x10]; 
0x000aabff: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x000ef41f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x000df1bf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000eb32f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x000eb36f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000c53af: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000c53ef: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000c556f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000eea8f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x000ef45f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x000ef49f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x000ef9ef: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x000ed6cf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x000ed63f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x000ed48f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000de57f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x0019b090: nop; mov esi, 0xb60c0002; clc; jmp edx; 
0x00119a3f: nop; mov esi, ebx; sub esi, dword ptr [ebx + eax*4 - 0x895a8]; jmp esi; 
0x0011a45f: nop; mov esi, ebx; sub esi, dword ptr [ebx + ecx*4 - 0x88b88]; jmp esi; 
0x0014a32f: nop; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x00089baf: nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, dword ptr [edx + 7]; ret; 
0x00070a07: nop; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x44]; 
0x000cbb4f: nop; movzx eax, al; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0xd7494]; jmp ecx; 
0x000d6e17: nop; movzx ebp, byte ptr [edx + 4]; mov ecx, ebx; sub ecx, dword ptr [ebx + ebp*4 - 0xcc1cc]; jmp ecx; 
0x001491ee: nop; nop; add eax, 1; pop edi; ret; 
0x0002f72e: nop; nop; add eax, dword ptr [esp]; ret; 
0x0002edde: nop; nop; call 0x129d77; add ecx, 0x17420f; mov eax, dword ptr [ecx + 0x54]; ret; 
0x000a7bae: nop; nop; fild dword ptr [esp + 4]; fild dword ptr [esp + 8]; fsubp st(1); ret; 
0x000b907e: nop; nop; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000b907e: nop; nop; mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x000b931e: nop; nop; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000b931e: nop; nop; mov eax, 0x41; call dword ptr gs:[0x10]; ret; 
0x000b939e: nop; nop; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x000eb3ee: nop; nop; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x000c54ae: nop; nop; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0002df2e: nop; nop; mov eax, 0xad; int 0x80; 
0x000b908e: nop; nop; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000b908e: nop; nop; mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x000b90ae: nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000b90ae: nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000b909e: nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000b909e: nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x000b90be: nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000b90be: nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x00113a0e: nop; nop; mov eax, 2; ret; 
0x0011f70e: nop; nop; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0006aa2e: nop; nop; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0002d6ee: nop; nop; mov eax, dword ptr [esp + 4]; and eax, 0x80000000; ret; 
0x0010503e: nop; nop; mov eax, dword ptr [esp + 4]; and eax, 0xffff; ror ax, 8; ret; 
0x000b3d8e: nop; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x000e5dae: nop; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x0006a00e: nop; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00069fde: nop; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000b40be: nop; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x000b85c2: nop; nop; mov ebx, dword ptr [esp + 4]; mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x0007d85e: nop; nop; mov ebx, dword ptr [esp]; ret; 
0x000efc8e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x000ef5de: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x000ef80e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x000b7ece: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x000e0bae: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x000df4ae: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x000e800e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x000de55e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x000e804e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x000efcce: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x000e846e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x000e84ee: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x000efbbe: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x000b7b9e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x000ef3de: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7c; call dword ptr gs:[0x10]; 
0x000ef6fe: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000b929e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x000df6de: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x000b935e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x000eb3ae: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000c54ee: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000c552e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x000df69e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000dda6e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 1; call dword ptr gs:[0x10]; 
0x0014a32e: nop; nop; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x001491ed: nop; nop; nop; add eax, 1; pop edi; ret; 
0x0002f72d: nop; nop; nop; add eax, dword ptr [esp]; ret; 
0x000b907d: nop; nop; nop; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000b907d: nop; nop; nop; mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x000b931d: nop; nop; nop; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000b931d: nop; nop; nop; mov eax, 0x41; call dword ptr gs:[0x10]; ret; 
0x000b939d: nop; nop; nop; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x000eb3ed: nop; nop; nop; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x000c54ad: nop; nop; nop; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0002df2d: nop; nop; nop; mov eax, 0xad; int 0x80; 
0x000b908d: nop; nop; nop; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000b908d: nop; nop; nop; mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x000b90ad: nop; nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000b90ad: nop; nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000b909d: nop; nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000b909d: nop; nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x000b90bd: nop; nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000b90bd: nop; nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x00113a0d: nop; nop; nop; mov eax, 2; ret; 
0x0006aa2d: nop; nop; nop; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0002d6ed: nop; nop; nop; mov eax, dword ptr [esp + 4]; and eax, 0x80000000; ret; 
0x000b3d8d: nop; nop; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x000b40bd: nop; nop; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x000b85c1: nop; nop; nop; mov ebx, dword ptr [esp + 4]; mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x0002f72c: nop; nop; nop; nop; add eax, dword ptr [esp]; ret; 
0x000b907c: nop; nop; nop; nop; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000b939c: nop; nop; nop; nop; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x000eb3ec: nop; nop; nop; nop; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x000c54ac: nop; nop; nop; nop; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0002df2c: nop; nop; nop; nop; mov eax, 0xad; int 0x80; 
0x00113a0c: nop; nop; nop; nop; mov eax, 2; ret; 
0x0007403c: nop; nop; nop; nop; xor eax, eax; ret; 
0x0007403d: nop; nop; nop; xor eax, eax; ret; 
0x0008d3ee: nop; nop; pop edi; pop esi; pop ebx; ret; 
0x00131c4e: nop; nop; xor eax, eax; pop edi; pop ebx; ret; 
0x0007403e: nop; nop; xor eax, eax; ret; 
0x00166e14: nop; or al, 0xfd; jmp dword ptr [eax + 0xd]; 
0x000d9355: nop; or al, 1; add byte ptr [eax], al; xor eax, eax; ret; 
0x000d936b: nop; or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00166ba4: nop; out dx, al; cld; jmp dword ptr [eax]; 
0x0017abe5: nop; out dx, eax; call dword ptr [edx]; 
0x0002df37: nop; pop eax; mov eax, 0x77; int 0x80; 
0x0014763f: nop; pop ebx; pop esi; xor eax, eax; pop edi; ret; 
0x00024a1f: nop; pop ebx; ret; 
0x0008d3ef: nop; pop edi; pop esi; pop ebx; ret; 
0x00094f4f: nop; pop esi; pop edi; pop ebp; ret; 
0x00167898: nop; pop esi; std; jmp eax; 
0x00176c70: nop; push es; out dx, eax; jmp dword ptr [esi]; 
0x00002fbe: nop; ret 0x5bdb; 
0x00180c80: nop; ret 0xfff0; 
0x0018b490: nop; ret 1; 
0x0000a4d8: nop; ret; 
0x0017c780: nop; salc; out dx, eax; call dword ptr [ebx + 3]; 
0x0016e518: nop; sar bl, 1; call esp; 
0x0016701c: nop; sbb al, 0xfd; jmp eax; 
0x00167114: nop; sub al, 0xfd; jmp eax; 
0x001850a0: nop; sub dl, dh; jmp dword ptr [ecx]; 
0x000f0666: nop; sub dword ptr [ebx], ecx; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x001671d4: nop; sub ebp, edi; jmp dword ptr [eax]; 
0x0007317f: nop; sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x00179240: nop; wait; add byte ptr [eax], al; ret; 
0x00064d79: nop; xchg eax, esp; add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov eax, 0x5b000000; ret; 
0x00120f89: nop; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0006a2b7: nop; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00131c4f: nop; xor eax, eax; pop edi; pop ebx; ret; 
0x0002f857: nop; xor eax, eax; pop esi; pop edi; ret; 
0x0007403f: nop; xor eax, eax; ret; 
0x00109384: not byte ptr [ebx - 0x18]; call 0x81109595; ret; 
0x000740c6: not byte ptr [ebx - 0x7d]; in al, dx; adc al, 0xe8; mov dword ptr [0x81000b5c], eax; ret; 
0x000aad0b: not eax; add eax, 0x16e; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0011baa1: not eax; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x0001a402: not eax; add esp, 8; pop ebx; ret; 
0x0002e8e8: not eax; and dword ptr [edx + esi*4], eax; xor eax, eax; pop esi; ret; 
0x0002d4de: not eax; and eax, ecx; ret; 
0x0002d753: not eax; and eax, edx; ret; 
0x0006ab20: not eax; pop ebx; ret; 
0x000f44b3: not eax; pop esi; pop edi; pop ebp; ret; 
0x0002d20d: not eax; sar ecx, 0x1e; and eax, ecx; ret; 
0x0011fbb5: not eax; shr eax, 0x1f; ret; 
0x0011b717: not edx; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x000554e6: not edx; mov eax, edx; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00147faf: or ah, 0; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xf]; pop edi; ret; 
0x0007e064: or ah, bh; pop edi; ret; 
0x00133d65: or ah, byte ptr [eax - 1]; inc dword ptr [ecx + 0x327b7c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0011aa8f: or ah, byte ptr [esi + 0x39]; push ebp; ret 0x850f; 
0x001734f9: or ah, ch; call dword ptr [eax]; 
0x00173519: or ah, ch; call dword ptr [esi]; 
0x00183278: or ah, dh; cli; jmp dword ptr [ebx]; 
0x001075ca: or al, 0; add al, 0; add byte ptr [ecx + 0x39e82404], cl; mov edi, edi; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x0010872a: or al, 0; add al, 0; add byte ptr [ecx - 0x2617dbfc], cl; jns 0x108735; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x000f3e0a: or al, 0; add al, 0; add byte ptr [ecx - 0x617dbfc], cl; ret 0; 
0x0010f57a: or al, 0; add al, 0; add byte ptr [ecx - 0x7617dbfc], cl; or edi, edi; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x000b8183: or al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x14], dh; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x0012e62e: or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x0012b29a: or al, 0; add byte ptr [eax], al; add byte ptr [ecx + 0x5489242c], cl; and al, 4; mov dword ptr [esp + 8], ecx; call dword ptr [eax + 0x40]; 
0x000df6a7: or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f0352: or al, 0; add byte ptr [eax], al; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0379: or al, 0; add byte ptr [eax], al; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0f3b: or al, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x001491a7: or al, 0; add byte ptr [eax], al; pop edi; ret; 
0x00077339: or al, 0; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x0013c7dc: or al, 0; add byte ptr [ebx + 0x1c740fe7], al; call 0x129d73; add ebx, 0x2afb7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0013a18c: or al, 0; add byte ptr [ebx + 0x1c740fe7], al; call 0x129d73; add ebx, 0x2d1c7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0013918c: or al, 0; add byte ptr [ebx + 0x1c740fe7], al; call 0x129d73; add ebx, 0x2e007; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x001381ac: or al, 0; add byte ptr [ebx + 0x1c740fe7], al; call 0x129d73; add ebx, 0x2ee27; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x001447ee: or al, 0; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0009c5e7: or al, 0; add byte ptr [ebx - 0x76bfdbbc], cl; ret 0xfac1; 
0x0008d2f7: or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d1d0: or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0001961b: or al, 0; add esp, 0x18; pop ebx; ret; 
0x0000af72: or al, 0; fsub dword ptr [eax + eax]; add byte ptr [eax], dl; ret; 
0x00007962: or al, 0; mov cl, byte ptr [ebx]; add byte ptr [eax - 8], ah; adc dword ptr [eax], eax; ret; 
0x00009552: or al, 0; mov eax, dword ptr [0xd0000010]; ret 7; 
0x000dda59: or al, 0; mov eax, dword ptr [ecx - 0xf8]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0002e3dc: or al, 0; mov eax, esi; mov edi, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x000de8a3: or al, 0; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000e0ad3: or al, 0; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x000de6fb: or al, 0; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x000e0b6b: or al, 0; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x000e0a2b: or al, 0; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x000e00cb: or al, 0; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x000e006b: or al, 0; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000e000b: or al, 0; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x000df0bb: or al, 0; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000d772e: or al, 0; mov edx, dword ptr [ebx - 0x34]; mov eax, dword ptr [edx]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x000dde2e: or al, 0; mov edx, dword ptr [esp + 0xc]; xchg ebx, edx; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ddeae: or al, 0; mov edx, dword ptr [esp + 0xc]; xchg ebx, edx; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000dde6e: or al, 0; mov edx, dword ptr [esp + 0xc]; xchg ebx, edx; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x000dea17: or al, 0; or dh, 0x80; xchg edi, ebx; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000081a2: or al, 0; pop ss; sub dword ptr [eax], eax; add byte ptr [eax], dl; ret; 
0x0000a4d2: or al, 0; push cs; pop ecx; add byte ptr [eax], al; nop; ret; 
0x00009f82: or al, 0; ret 0x11; 
0x00009442: or al, 0; ret 0x38; 
0x00004232: or al, 0; ret 0x52; 
0x0000c702: or al, 0; ret 0x59; 
0x00007aa2: or al, 0; ret 0xc; 
0x00006102: or al, 0; ret 3; 
0x0000b5a2: or al, 0; ret 8; 
0x00005842: or al, 0; ret; 
0x000de1d0: or al, 0; xchg edi, ebx; mov eax, 0x10c; call dword ptr gs:[0x10]; 
0x000de230: or al, 0; xchg edi, ebx; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x000de041: or al, 0; xchg edi, ebx; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000ddacc: or al, 0; xchg edi, ebx; mov eax, 0x13e; call dword ptr gs:[0x10]; 
0x0000cf12: or al, 0; xlatb; and al, 0; add byte ptr [eax], dl; ret; 
0x0000ccd2: or al, 0; xor byte ptr [ebx], bl; add byte ptr [eax], al; nop; call dword ptr [eax]; 
0x00004ff2: or al, 0; xor dword ptr [eax + eax], esi; add al, al; movsb byte ptr es:[edi], byte ptr [esi]; adc al, byte ptr [eax]; ret 2; 
0x0007822a: or al, 0x19; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00170c0c: or al, 0x1a; add byte ptr [eax], al; add byte ptr [edx - 0x15], ah; jmp dword ptr [edx]; 
0x0006dcbc: or al, 0x24; add eax, 0x2c; mov dword ptr [esp + 4], eax; call dword ptr [ecx + 0x18]; 
0x001228ab: or al, 0x24; call 0x122060; add esp, 0x38; pop ebx; ret; 
0x0006c325: or al, 0x24; call 0x6b6d0; add esp, 0x18; pop ebx; ret; 
0x00073e91: or al, 0x24; call 0x73270; add esp, 0x18; pop ebx; ret; 
0x0011a7a7: or al, 0x24; call dword ptr [eax + 0x10]; 
0x00056304: or al, 0x24; call dword ptr [eax + 0x1c]; 
0x0006d1f4: or al, 0x24; call dword ptr [eax + 0xc]; 
0x0011a755: or al, 0x24; call dword ptr [eax + 4]; 
0x0011e590: or al, 0x24; call dword ptr [eax + 4]; add esp, 0x18; pop esi; ret; 
0x0011e5a8: or al, 0x24; call dword ptr [eax]; 
0x0001ec53: or al, 0x24; call dword ptr [esi]; 
0x00028d1a: or al, 0x24; call eax; 
0x00031632: or al, 0x24; call edi; 
0x000b4e80: or al, 0x24; mov dword ptr [esp + 4], edx; call dword ptr [ebp - 0x34]; 
0x000792b3: or al, 0x24; mov dword ptr [esp + 4], edx; call eax; 
0x00021562: or al, 0x24; mov dword ptr [esp + 8], eax; call dword ptr [edi]; 
0x0001f49f: or al, 0x24; mov dword ptr [esp + 8], eax; mov eax, dword ptr [esp + 0xa4]; mov dword ptr [esp + 4], eax; call dword ptr [esi]; 
0x001110e0: or al, 0x24; mov dword ptr [esp + 8], esi; call dword ptr [eax + 0xc]; 
0x001110e0: or al, 0x24; mov dword ptr [esp + 8], esi; call dword ptr [eax + 0xc]; add esp, 0x18; pop esi; ret; 
0x00129d78: or al, 0x24; ret; 
0x0012eac4: or al, 0x24; xor ecx, ecx; call 0x100770; sub esp, 4; add esp, 0x1c; ret; 
0x0012eae4: or al, 0x24; xor ecx, ecx; call 0x100810; sub esp, 4; add esp, 0x1c; ret; 
0x0012eb04: or al, 0x24; xor ecx, ecx; call 0x1008b0; sub esp, 4; add esp, 0x1c; ret; 
0x0012eb24: or al, 0x24; xor ecx, ecx; call 0x100950; sub esp, 4; add esp, 0x1c; ret; 
0x0012eb44: or al, 0x24; xor ecx, ecx; call 0x1009f0; sub esp, 4; add esp, 0x1c; ret; 
0x0012eb84: or al, 0x24; xor ecx, ecx; call 0x100bd0; sub esp, 4; add esp, 0x1c; ret; 
0x0012ebc4: or al, 0x24; xor ecx, ecx; call 0x100d10; sub esp, 4; add esp, 0x1c; ret; 
0x0012ec04: or al, 0x24; xor ecx, ecx; call 0x100e50; sub esp, 4; add esp, 0x1c; ret; 
0x000f3a24: or al, 0x25; add byte ptr [eax], ah; add byte ptr [eax], al; ret; 
0x000f3b64: or al, 0x25; add byte ptr [eax], dl; add byte ptr [eax], al; ret; 
0x000f3ac4: or al, 0x25; add byte ptr [ecx], al; add byte ptr [eax], al; ret; 
0x000f37a4: or al, 0x25; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x000f6cef: or al, 0x29; ret 0x838d; 
0x0016717c: or al, 0x2d; std; inc dword ptr [esi]; sub al, 0xfd; jmp dword ptr [esi + 0x2c]; 
0x0017200c: or al, 0x2e; add byte ptr [eax], al; ror bl, 0xeb; jmp dword ptr [eax]; 
0x00016ea8: or al, 0x30; sbb al, byte ptr [eax]; sub al, byte ptr [eax]; add byte ptr [eax], al; push dword ptr [ebx + 4]; jmp dword ptr [ebx + 8]; 
0x00103524: or al, 0x31; fisttp dword ptr [ecx + 0xbab8e1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c68f8: or al, 0x31; rol byte ptr [ebx - 0x6bf09f02], cl; ret 0x5408; 
0x001140b3: or al, 0x31; rol byte ptr [ebx - 0x6bf0fd06], 0xc0; add esp, 0x1c; ret; 
0x0006bee8: or al, 0x31; ror byte ptr [ecx + 0x18c4830e], 0x5e; ret; 
0x00027ea1: or al, 0x39; add byte ptr [eax], al; mov dword ptr [esp], edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0010fc13: or al, 0x39; ljmp 0x7c8d:0x118b3d72; cmp byte ptr [eax*4 - 0x7cb98b2e], cl; ror byte ptr [esi], 0x39; ret 0x2c72; 
0x000f7a75: or al, 0x39; ret 0x1474; 
0x0006ddc7: or al, 0x39; ret 0x1574; 
0x0013c76c: or al, 0x39; ret 0x1d72; 
0x0013b23c: or al, 0x39; ret 0x1e72; 
0x000f7a89: or al, 0x39; ret 0xf275; 
0x0003b989: or al, 0x3d; ret 0xffbf; 
0x0018aea4: or al, 0x40; cmc; jmp ecx; 
0x0017a50d: or al, 0x41; ret; 
0x001745e4: or al, 0x43; ret; 
0x00174040: or al, 0x44; ret; 
0x00171fe3: or al, 0x4b; add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; imul ecx, dword ptr [edx], 0xe; add al, 0xc6; ret; 
0x00171f9b: or al, 0x4b; add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; or cl, byte ptr [0xffffc604]; ret; 
0x0018cc23: or al, 0x4b; add dword ptr [ebx], 0x53; xchg dword ptr [edx], eax; or cl, byte ptr gs:[esi]; add al, 0xc7; ret; 
0x0018c243: or al, 0x4b; xchg byte ptr [edx], al; add dword ptr [ebx], 0x77; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x001875a3: or al, 0x4f; xchg dword ptr [edx], eax; add dword ptr [ebx], 0x70; or cl, byte ptr [esi]; add al, 0xc7; ret; 
0x0002bd03: or al, 0x50; sti; jmp dword ptr [esi + 0x39]; 
0x0018ab0b: or al, 0x54; xchg dword ptr [edx], eax; add dword ptr [ebx], 0x6c; or cl, byte ptr [esi]; add al, 0xc7; ret; 
0x0018c717: or al, 0x55; xchg dword ptr [edx], eax; add dword ptr [ebx], 0x6c; or cl, byte ptr [esi]; add al, 0xc7; ret; 
0x000f2019: or al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x000949d5: or al, 0x5b; pop esi; ret; 
0x000fc3ca: or al, 0x5b; ret; 
0x00167778: or al, 0x5d; std; lcall ptr [ebp + ebx*2 - 3]; call dword ptr [esi + 0x5c]; 
0x000a7e64: or al, 0x5e; pop edi; pop ebp; ret; 
0x0002d2ec: or al, 0x5e; pop edi; ret; 
0x0011f39e: or al, 0x5e; ret; 
0x00134c50: or al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008b7e0: or al, 0x5f; pop ebx; ret; 
0x0008f0c0: or al, 0x5f; pop esi; pop ebx; ret; 
0x00089af4: or al, 0x5f; ret; 
0x00033db3: or al, 0x66; mov dword ptr [eax + 0xe], 0xc0310001; add esp, 8; ret; 
0x000d1928: or al, 0x74; or eax, 0x424748b; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0007ca5f: or al, 0x75; fiadd word ptr [eax + 0x40]; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x000a7922: or al, 0x7d; sti; dec dword ptr [edi]; inc ebp; ret 0xa5eb; 
0x0019710c: or al, 0x7f; add al, byte ptr [eax]; pushal; mov al, 0xf7; call dword ptr [eax]; 
0x000de838: or al, 0x80; int 0x80; 
0x000de838: or al, 0x80; int 0x80; mov esi, eax; xchg edi, ebx; mov eax, 5; call dword ptr gs:[0x10]; 
0x000a7969: or al, 0x81; ret 0x76c; 
0x00129219: or al, 0x81; ret 0x94; 
0x00190bf8: or al, 0x83; add eax, dword ptr [ebx + 0xe]; xor byte ptr [edx + 0xa], bh; push cs; or al, 0x41; ret; 
0x001825ff: or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4204], al; ret; 
0x0018266e: or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4a04], al; ret; 
0x0018265d: or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x001826c3: or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4f04], al; ret; 
0x0018263b: or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7104], al; ret; 
0x00182901: or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7204], al; ret; 
0x0018264c: or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7304], al; ret; 
0x0018262a: or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7504], al; ret; 
0x000fc2d4: or al, 0x83; clc; add al, 0x75; ret 0xdeeb; 
0x00095093: or al, 0x83; out dx, eax; adc byte ptr [ecx], al; clc; pop edi; ret; 
0x00098525: or al, 0x83; rcl dword ptr [eax], -0x7b; div byte ptr [ebx + esi - 0x7d]; ret 0x8310; 
0x00095633: or al, 0x83; rcl dword ptr [eax], -0x7d; ret 0x2910; 
0x000ccf5a: or al, 0x83; ret 0x301; 
0x00128400: or al, 0x83; ret 0x8304; 
0x00097c65: or al, 0x83; ret 0x8310; 
0x00080f6e: or al, 0x83; ret 0x8501; 
0x00098034: or al, 0x83; ret 0x8510; 
0x000b4f1e: or al, 0x83; ret 0x8901; 
0x0010527e: or al, 0x83; ret 0xe901; 
0x000e217d: or al, 0x84; sti; dec dword ptr [edi]; inc esp; ret 0x45f6; 
0x000d7153: or al, 0x85; rol dh, 4; push ss; add dword ptr [eax + edx - 0x75], esi; xor dword ptr [eax - 1], 0xffffffff; jmp dword ptr [ebp - 0x75]; 
0x0001959c: or al, 0x85; sal byte ptr [eax + edx - 0x75], 0x4c; and al, 0x18; lea edx, dword ptr [ecx + ebp*8 + 0x258]; mov dword ptr [esp], edx; call eax; 
0x0010fc1d: or al, 0x85; sal byte ptr [esi + eax*2 - 0x7d], cl; ror byte ptr [esi], 0x39; ret 0x2c72; 
0x0017497c: or al, 0x86; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0x300e4304], al; add ah, byte ptr [ecx + 0x43100e0a]; ret; 
0x00198e50: or al, 0x86; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xc0e7e04], al; ret; 
0x0018e4ec: or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xc0e5d04], al; ret; 
0x0018b4a4: or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xc0e6104], al; ret; 
0x0017cf14: or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xc0e6704], al; ret; 
0x001823f5: or al, 0x86; add ebp, dword ptr [esi + ecx + 8]; ret; 
0x001822a1: or al, 0x86; add ebx, dword ptr [esi + ecx + 8]; ret; 
0x0018225d: or al, 0x86; add edx, dword ptr [esi + ecx + 8]; ret; 
0x001822c3: or al, 0x86; add esp, dword ptr [esi + ecx + 8]; ret; 
0x0016fc88: or al, 0x87; add eax, dword ptr [ecx + 0xe]; adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x1800e43], 3; ret 0xa03; 
0x001988a8: or al, 0x87; add eax, dword ptr [ecx + 0xe]; adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x1900e4e], 2; ret; 
0x001820d4: or al, 0x87; add ebx, dword ptr [esi + ecx + 8]; ret; 
0x0018206e: or al, 0x87; add edx, dword ptr [esi + ecx + 8]; ret; 
0x0002de90: or al, 0x87; fistp qword ptr [eax + 0x10e]; call dword ptr gs:[0x10]; 
0x000de700: or al, 0x87; fistp qword ptr [eax + 0x128]; call dword ptr gs:[0x10]; 
0x000e0b70: or al, 0x87; fistp qword ptr [eax + 0x12d]; call dword ptr gs:[0x10]; 
0x000e0a30: or al, 0x87; fistp qword ptr [eax + 0x130]; call dword ptr gs:[0x10]; 
0x000de630: or al, 0x87; fistp qword ptr [eax + 0x132]; call dword ptr gs:[0x10]; 
0x000b8600: or al, 0x87; fistp qword ptr [eax + 0xb]; call dword ptr gs:[0x10]; 
0x000e9840: or al, 0x87; fistp qword ptr [eax + 0xc1]; call dword ptr gs:[0x10]; 
0x000e98a0: or al, 0x87; fistp qword ptr [eax + 0xc2]; call dword ptr gs:[0x10]; 
0x000e00d0: or al, 0x87; fistp qword ptr [eax + 0xc6]; call dword ptr gs:[0x10]; 
0x000e0070: or al, 0x87; fistp qword ptr [eax + 0xcf]; call dword ptr gs:[0x10]; 
0x000b9400: or al, 0x87; fistp qword ptr [eax + 0xd1]; call dword ptr gs:[0x10]; 
0x000b9460: or al, 0x87; fistp qword ptr [eax + 0xd3]; call dword ptr gs:[0x10]; 
0x000e0010: or al, 0x87; fistp qword ptr [eax + 0xd4]; call dword ptr gs:[0x10]; 
0x000df0c0: or al, 0x87; fistp qword ptr [eax + 0xdd]; call dword ptr gs:[0x10]; 
0x000c568c: or al, 0x87; fistp qword ptr [eax + 0xf1]; call dword ptr gs:[0x10]; 
0x000dde33: or al, 0x87; sar dword ptr [eax + 0xc3], cl; call dword ptr gs:[0x10]; 
0x000ddeb3: or al, 0x87; sar dword ptr [eax + 0xc4], cl; call dword ptr gs:[0x10]; 
0x000dde73: or al, 0x87; sar dword ptr [eax + 0xc5], cl; call dword ptr gs:[0x10]; 
0x0001a93e: or al, 0x89; adc al, 0x24; call eax; 
0x0011fb75: or al, 0x89; add al, 0x24; call 0x64880; add esp, 0x18; pop ebx; ret; 
0x0011fbd5: or al, 0x89; add al, 0x24; call 0x65620; add esp, 0x18; pop ebx; ret; 
0x00104cd0: or al, 0x89; add al, 0x24; call 0x98e00; add esp, 0x18; pop ebx; ret; 
0x00104d80: or al, 0x89; add al, 0x24; call 0x98e00; add esp, 0x28; pop ebx; ret; 
0x00104d20: or al, 0x89; add al, 0x24; call 0x98e50; add esp, 0x18; pop ebx; ret; 
0x00104de0: or al, 0x89; add al, 0x24; call 0x98e50; add esp, 0x28; pop ebx; ret; 
0x00102950: or al, 0x89; add al, 0x24; call 0xc57a0; add esp, 0x18; pop ebx; ret; 
0x0001d2e3: or al, 0x89; add al, 0x24; call dword ptr [ebp + 4]; 
0x000e1e03: or al, 0x89; add al, 0x24; call dword ptr [ecx + 0x24]; 
0x0001e1fe: or al, 0x89; add al, 0x24; call dword ptr [edi + 4]; 
0x000e1910: or al, 0x89; add al, 0x24; call dword ptr [esi + 0x24]; 
0x0001cdd3: or al, 0x89; add al, 0x24; call dword ptr [esi + 4]; 
0x000b7e8a: or al, 0x89; call 0x1c2fdb1a; mov ebx, eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000c5841: or al, 0x89; call 0x1c30b4d1; mov ebx, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000c5921: or al, 0x89; call 0x1c30b5b1; mov ebx, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000c59fb: or al, 0x89; call 0x1c30b68b; mov ebx, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000c5adb: or al, 0x89; call 0x1c30b76b; mov ebx, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000f0bdb: or al, 0x89; call 0x1c33686b; mov ebx, eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0001e835: or al, 0x89; dec esp; and al, 4; mov dword ptr [esp], edx; mov dword ptr [esp + 8], eax; call dword ptr [ebp]; 
0x00099309: or al, 0x89; inc esp; and al, 4; mov dword ptr [esp], edi; call esi; 
0x000c77dc: or al, 0x89; inc esp; and al, 8; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [ebp - 0x50]; 
0x000a5cd3: or al, 0x89; insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp], edx; call edi; 
0x0012ff00: or al, 0x89; int 0xf; cwde; ror dword ptr [edi], -0x6e; ret 0xb60f; 
0x0001f49d: or al, 0x89; or al, 0x24; mov dword ptr [esp + 8], eax; mov eax, dword ptr [esp + 0xa4]; mov dword ptr [esp + 4], eax; call dword ptr [esi]; 
0x000df3e1: or al, 0x89; out dx, eax; xchg edi, ebx; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000f0ed9: or al, 0x89; pop esp; and al, 0x1c; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00071ecf: or al, 0x89; push eax; add al, 0x89; dec eax; and al, 0x5e; ret; 
0x0011266c: or al, 0x89; push esp; and al, 0x14; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x00118602: or al, 0x89; push esp; and al, 0x2c; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x00066a35: or al, 0x89; push esp; and al, 4; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x0002155c: or al, 0x89; push esp; and al, 4; mov dword ptr [esp], ecx; mov dword ptr [esp + 8], eax; call dword ptr [edi]; 
0x0001f9c8: or al, 0x89; push esp; and al, 4; mov dword ptr [esp], esi; mov dword ptr [esp + 8], eax; call dword ptr [ebp]; 
0x000e1dfc: or al, 0x89; push esp; and al, 4; mov eax, dword ptr [ecx + 0xc]; mov dword ptr [esp], eax; call dword ptr [ecx + 0x24]; 
0x00113e4e: or al, 0x89; push esp; and al, 4; mov edx, dword ptr [esp + 0x22a4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x00113cf9: or al, 0x89; push esp; and al, 4; mov edx, dword ptr [esp + 0x22a4]; mov dword ptr [esp], edx; call dword ptr [eax + 8]; 
0x00069574: or al, 0x89; ret 0x562b; 
0x0001bbb3: or al, 0x89; ret 0x8365; 
0x0011ea65: or al, 0x89; ret 0xc031; 
0x0012f60b: or al, 0x89; ret 0xe281; 
0x00097686: or al, 0x89; ret 0xe283; 
0x000704d5: or al, 0x89; ret 0xfac1; 
0x0002d9f7: or al, 0x89; ret 0xff25; 
0x000e0141: or al, 0x89; ret; 
0x000b7ca4: or al, 0x89; salc; mov ebp, eax; xchg edi, ebx; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x0011dc82: or al, 0x89; sub al, 0x24; call dword ptr [eax + 0x10]; 
0x0006ff06: or al, 0x89; sub al, 0x24; call dword ptr [eax + 0x40]; 
0x0004260e: or al, 0x89; xor al, 0x24; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x0006e582: or al, 0x8b; add dword ptr [ebx + 0xa8904c1], eax; add esp, 0x18; pop ebx; ret; 
0x000f7a5a: or al, 0x8b; inc ebp; adc al, 0x39; ret 0xf67c; 
0x000f7a72: or al, 0x8b; inc ecx; or al, 0x39; ret 0x1474; 
0x000f7a86: or al, 0x8b; inc ecx; or al, 0x39; ret 0xf275; 
0x0006952a: or al, 0x8b; inc esi; or byte ptr [ecx + 0x29cd29d5], cl; ret 0xe75; 
0x0002da15: or al, 0x8b; inc esp; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000b5189: or al, 0x8b; inc esp; and al, 0x3c; mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call edi; 
0x0002dd18: or al, 0x8b; inc esp; and al, 8; mov esp, ecx; jmp edx; 
0x0002c81f: or al, 0x8b; insb byte ptr es:[edi], dx; and al, 0x10; add esp, 0x14; ret; 
0x000ddae8: or al, 0x8b; pop esp; and al, 0x10; mov edi, dword ptr [esp + 0x14]; add esp, 0x18; ret; 
0x0006b969: or al, 0x8b; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000ef798: or al, 0x8b; pop esp; and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x000dece8: or al, 0x8b; pop esp; and al, 8; mov eax, 0x13; call dword ptr gs:[0x10]; 
0x000df538: or al, 0x8b; pop esp; and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x000eff12: or al, 0x8b; pop esp; and al, 8; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000e6d08: or al, 0x8b; pop esp; and al, 8; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000e0a78: or al, 0x8b; pop esp; and al, 8; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000e6ac8: or al, 0x8b; pop esp; and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x000eea18: or al, 0x8b; pop esp; and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x000ef898: or al, 0x8b; pop esp; and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000aac48: or al, 0x8b; pop esp; and al, 8; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000ef238: or al, 0x8b; pop esp; and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x000eb1a8: or al, 0x8b; pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x000ef528: or al, 0x8b; pop esp; and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000ef568: or al, 0x8b; pop esp; and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000eb1f2: or al, 0x8b; pop esp; and al, 8; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000c5438: or al, 0x8b; pop esp; and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000b8215: or al, 0x8b; pop esp; and al, 8; mov eax, 0xa2; call dword ptr gs:[0x10]; 
0x000ef978: or al, 0x8b; pop esp; and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eb2a8: or al, 0x8b; pop esp; and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x000eb268: or al, 0x8b; pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000ed578: or al, 0x8b; pop esp; and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x000ed608: or al, 0x8b; pop esp; and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x000ed458: or al, 0x8b; pop esp; and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000debf2: or al, 0x8b; pop esp; and al, 8; mov eax, 3; call dword ptr gs:[0x10]; 
0x000dec72: or al, 0x8b; pop esp; and al, 8; mov eax, 4; call dword ptr gs:[0x10]; 
0x000de752: or al, 0x8b; pop esp; and al, 8; mov eax, 5; call dword ptr gs:[0x10]; 
0x000b7d02: or al, 0x8b; pop esp; and al, 8; mov eax, 7; call dword ptr gs:[0x10]; 
0x000df625: or al, 0x8b; pop esp; and al, 8; mov eax, 8; call dword ptr gs:[0x10]; 
0x000e4d73: or al, 0x8b; push esp; and al, 8; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x000871c2: or al, 0x8d; dec edx; or al, 0xf; test esp, eax; add eax, 0x5b5f0000; ret; 
0x000a74bc: or al, 0x8d; inc edx; add eax, dword ptr [ebp + 0x5ed475f6]; ret; 
0x0009843a: or al, 0x90; lea esi, dword ptr [esi]; ret; 
0x0008d1d3: or al, 0x91; jmp ecx; 
0x0008d2fa: or al, 0x99; jmp ecx; 
0x00184855: or al, 0x9e; int1; jmp dword ptr [edx]; 
0x0017980c: or al, 0xa6; add byte ptr [eax], al; mov al, 0x57; out dx, eax; call dword ptr [ecx]; 
0x001499d3: or al, 0xa8; add dword ptr [ebp + 0x18], esi; lea eax, dword ptr [ecx + 4]; ret; 
0x00173e34: or al, 0xab; in al, dx; call dword ptr [edi + 4]; 
0x000f3bba: or al, 0xb1; add eax, dword ptr [edx + ecx]; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0019b094: or al, 0xb6; clc; jmp edx; 
0x000eec51: or al, 0xb8; adc al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000dec9e: or al, 0xb8; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ef68b: or al, 0xb8; add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000dec1e: or al, 0xb8; add eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000efd2b: or al, 0xb8; cmp al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000efc1b: or al, 0xb8; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ed531: or al, 0xb8; in eax, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ef631: or al, 0xb8; inc dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ed5c1: or al, 0xb8; out 0, al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ed411: or al, 0xb8; out 0, eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0007877f: or al, 0xc3; lea esi, dword ptr [esi]; mov eax, ebx; sub eax, dword ptr [ebx + esi*4 - 0x12a860]; jmp eax; 
0x00115ffd: or al, 0xc3; nop; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0x8cfe8]; jmp ecx; 
0x00119a3d: or al, 0xc3; nop; mov esi, ebx; sub esi, dword ptr [ebx + eax*4 - 0x895a8]; jmp esi; 
0x0011a45d: or al, 0xc3; nop; mov esi, ebx; sub esi, dword ptr [ebx + ecx*4 - 0x88b88]; jmp esi; 
0x001581eb: or al, 0xc; ret; 
0x001200f6: or al, 0xd1; idiv edi; shr edx, 3; jmp eax; 
0x0017c80c: or al, 0xd6; add byte ptr [eax], al; nop; fsub st(7), st(0); jmp edx; 
0x00178725: or al, 0xd7; out dx, al; jmp dword ptr [edx]; 
0x001779e9: or al, 0xd8; out dx, al; jmp dword ptr [edx]; 
0x0002d7d8: or al, 0xdb; insb byte ptr es:[edi], dx; and al, 4; ret; 
0x0002d393: or al, 0xdd; inc esp; and al, 4; fscale; fstp st(1); ret; 
0x0002d40a: or al, 0xdd; inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x0016d794: or al, 0xe5; add al, byte ptr [eax]; add al, 0x40; cli; jmp dword ptr [eax]; 
0x00189fc4: or al, 0xe7; hlt; call esi; 
0x000e65b4: or al, 0xe8; mov ecx, 0x81000437; ret; 
0x000b98b4: or al, 0xe8; mov ecx, 0x81000704; ret; 
0x000e89ae: or al, 0xe8; mov edi, 0x81000413; ret; 
0x00025fae: or al, 0xe8; mov edi, 0x8100103d; ret; 
0x000b09b1: or al, 0xe8; mov esp, 0x81000793; ret; 
0x000ab3b1: or al, 0xe8; mov esp, 0x810007e9; ret; 
0x0002e905: or al, 0xe8; push 0x81000fb4; ret; 
0x000b2d07: or al, 0xe8; ret; 
0x000fd412: or al, 0xe8; sbb byte ptr [ebx + edi*8 + 0xcc483ff], bh; and eax, 0xffff; ret; 
0x000ddac2: or al, 0xe8; stosd dword ptr es:[edi], eax; ret 4; 
0x0011f538: or al, 0xe8; xor eax, 0x810000a8; ret; 
0x000197ca: or al, 0xe9; sar dh, 0xff; call dword ptr [ebx - 0x18]; 
0x0013061f: or al, 0xe; sub eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0013032b: or al, 0xe; sub eax, ecx; pop esi; pop edi; ret; 
0x000631cd: or al, 0xeb; mov al, 0x89; fsubr dword ptr [ebx]; test byte ptr [ebx - 0x13fe18], cl; jmp eax; 
0x000d67ca: or al, 0xeb; sbb dword ptr [ebp + 0x148b0076], ecx; xchg byte ptr [ecx], bh; ret 0x775; 
0x00176885: or al, 0xee; jmp dword ptr [edx]; 
0x00176ffd: or al, 0xef; call dword ptr [ebx + 2]; 
0x0017db35: or al, 0xf0; jmp dword ptr [ebp]; 
0x0011f3db: or al, 0xf3; ret; 
0x0018e1c5: or al, 0xf6; call dword ptr [edi]; 
0x0018e24d: or al, 0xf6; call dword ptr [edx]; 
0x0018e285: or al, 0xf6; jmp dword ptr [edx]; 
0x00193be1: or al, 0xf7; call dword ptr [esi]; 
0x0016be19: or al, 0xf8; call esp; 
0x00148fb4: or al, 0xf; and ch, 0; add byte ptr [eax], al; lea eax, dword ptr [eax + 0xb]; pop edi; ret; 
0x000ed9f4: or al, 0xf; mov dh, 0xc0; ret; 
0x000a70e5: or al, 0xf; test dword ptr [ecx + eax], eax; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x0008d573: or al, 0xf; test dword ptr [esi], esi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008ebd6: or al, 0xf; test ebx, edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000871c5: or al, 0xf; test esp, eax; add eax, 0x5b5f0000; ret; 
0x0012f629: or al, 0xf; xchg eax, edx; ret 0xb60f; 
0x0012f583: or al, 0xf; xchg eax, edx; ret 0xcf89; 
0x000a2c33: or al, 0xf; xchg eax, edx; ret 0xd009; 
0x0006dbe5: or al, 0xf; xchg eax, esp; ret 0xb60f; 
0x00147f84: or al, 0xf; xor ch, 0; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xb]; pop edi; ret; 
0x0017adf9: or al, 0xfb; jmp dword ptr [ebx]; 
0x00063308: or al, 0xfc; adc eax, dword ptr [eax]; ret 0x13ff; 
0x00166d49: or al, 0xfd; call dword ptr [eax - 0x7f0002f4]; or bh, ch; jmp dword ptr [eax]; 
0x00166cfd: or al, 0xfd; call esp; 
0x0007b79f: or al, 0xfd; dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x00166ca9: or al, 0xfd; inc edx; or al, 0xfd; push dword ptr [edx + 0xfffd0a]; or edi, ebp; jmp edx; 
0x00166e15: or al, 0xfd; jmp dword ptr [eax + 0xd]; 
0x00166de1: or al, 0xfd; push dword ptr [eax]; or eax, 0xe00fffd; std; jmp eax; 
0x00166cad: or al, 0xfd; push dword ptr [edx + 0xfffd0a]; or edi, ebp; jmp edx; 
0x0013913c: or al, 0xff; inc dword ptr [ecx + 0x2dfa1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013914c: or al, 0xff; inc dword ptr [ecx + 0x2e091c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001693e5: or al, 1; add ah, ah; xor dh, al; jmp esp; 
0x0017fef1: or al, 1; add ah, bl; in eax, dx; sti; jmp ecx; 
0x000de1d5: or al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0007da2b: or al, 1; add byte ptr [eax], al; mov dword ptr [ecx], edx; add esp, 0x100; ret; 
0x000d9276: or al, 1; add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000aae52: or al, 1; add byte ptr [eax], al; ret; 
0x000d9356: or al, 1; add byte ptr [eax], al; xor eax, eax; ret; 
0x0011f727: or al, 1; push eax; adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000e1677: or al, 1; ret 0x1489; 
0x0006d1cf: or al, 1; ret 0x562b; 
0x0016b31d: or al, 2; add ah, ah; div ebp; call eax; 
0x0016b315: or al, 2; add byte ptr [edi + esi*8], dl; cmc; lcall ptr [esp + ecx - 0x81bfffe]; cmc; call eax; 
0x0018c761: or al, 4; add al, 0x41; or eax, dword ptr [edi + 0xa]; ret; 
0x00185fef: or al, 4; add al, 0x41; or ecx, dword ptr [ebp + 0xa]; ret; 
0x001709d2: or al, 4; add al, 0x41; or esi, dword ptr [esi + 0xa]; ret; 
0x001845c1: or al, 4; add al, 0x41; or esp, dword ptr [edi + 0xa]; ret; 
0x0018f21b: or al, 4; add al, 0x45; or eax, dword ptr [edx]; mov al, 0xa; ret; 
0x001729cb: or al, 4; add al, 0x47; or ebp, dword ptr [eax + 0xa]; ret; 
0x00179de9: or al, 4; add al, 0xc5; dec eax; or ecx, dword ptr [esi + 0xa]; ret; 
0x00187709: or al, 4; add al, 0xc5; dec eax; or edx, dword ptr [esi + 0xa]; ret; 
0x0018c466: or al, 4; add al, 0xc5; dec ecx; or edx, dword ptr [esi + 0xa]; ret; 
0x0018883b: or al, 4; add al, 0xc5; inc ebx; or eax, dword ptr [edx]; out 0xa, al; ret; 
0x0017e1ee: or al, 4; add al, 0xc5; inc ebx; or ebp, dword ptr [esi + 0xa]; ret; 
0x001759c9: or al, 4; add al, 0xc5; inc ebx; or ebx, dword ptr [edx + 0xa]; ret; 
0x001887c5: or al, 4; add al, 0xc5; inc ebx; or edx, dword ptr [eax + 0xa]; ret; 
0x001845a0: or al, 4; add al, 0xc5; inc ecx; or eax, dword ptr [ebx]; ret; 
0x001960dd: or al, 4; add al, 0xc5; inc ecx; or eax, dword ptr [edx]; cwde; ret; 
0x0019179c: or al, 4; add al, 0xc5; inc ecx; or eax, dword ptr [edx]; in eax, 0xa; ret; 
0x00184562: or al, 4; add al, 0xc5; inc ecx; or ebp, dword ptr [esi + 0xa]; ret; 
0x00195fc2: or al, 4; add al, 0xc5; inc ecx; or edx, dword ptr [ebp + 0xa]; ret; 
0x00196cc2: or al, 4; add al, 0xc5; inc ecx; or edx, dword ptr [ecx + 0xa]; ret; 
0x0018832d: or al, 4; add al, 0xc5; inc ecx; or edx, dword ptr [esi + 0xa]; ret; 
0x001984be: or al, 4; add al, 0xc5; inc edi; or eax, dword ptr [esi + 0xa]; ret; 
0x0018c322: or al, 4; add al, 0xc5; inc edi; or ebx, dword ptr [ebx + 0xa]; ret; 
0x0019708a: or al, 4; add al, 0xc5; inc esp; or eax, dword ptr [edx]; dec ebx; ret; 
0x0019a4fe: or al, 4; add al, 0xc5; inc esp; or ebx, dword ptr [eax + 0xa]; ret; 
0x00175832: or al, 4; add al, 0xc5; inc esp; or ebx, dword ptr [edx + 0xa]; ret; 
0x00130bd6: or al, 7; add byte ptr [eax], al; pop ebx; ret; 
0x000b90d7: or al, 7; add byte ptr [ecx + 0xe9f1ac3], al; add byte ptr [ebx - 0x78f7dbac], cl; sar dword ptr [eax + 0xcd], cl; call dword ptr gs:[0x10]; 
0x000a7edb: or al, 9; ret 0x5489; 
0x00000446: or al, ah; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret 0x3e00; 
0x0000713a: or al, byte ptr [eax]; adc eax, 0x22000000; add byte ptr [eax + eax], cl; ret; 
0x0004864d: or al, byte ptr [eax]; add byte ptr [eax - 0xb443], al; jmp dword ptr [esi + 0xf]; 
0x000e9a77: or al, byte ptr [eax]; add byte ptr [eax], 0; add esp, 0x18; mov al, 1; pop ebx; ret; 
0x000e0b17: or al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f02d2: or al, byte ptr [eax]; add byte ptr [eax], al; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f02f9: or al, byte ptr [eax]; add byte ptr [eax], al; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0003f944: or al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x000c8049: or al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp], esi; mov dword ptr [esp + 8], ecx; call dword ptr [ebp - 0x78]; 
0x00144a3e: or al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000a1fa1: or al, byte ptr [eax]; add byte ptr [ebx - 0x76bfdbbc], cl; ret 0xfac1; 
0x0008ea4d: or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00122b65: or al, byte ptr [eax]; add cl, ch; ret; 
0x0007df5f: or al, byte ptr [eax]; add ebx, 0xdc5c3; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x0007dd05: or al, byte ptr [eax]; add ebx, 0xdc81d; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x000fefc9: or al, byte ptr [eax]; mov eax, dword ptr [ecx - 0x14]; mov eax, dword ptr gs:[eax]; ret; 
0x00098170: or al, byte ptr [ebp + 0x5ef375c9]; pop edi; pop ebp; ret; 
0x00077fd5: or al, byte ptr [ebp - 0x74218a40]; cmp dword ptr [eax - 2], -1; jmp dword ptr [ebp - 0x77]; 
0x0004ba4b: or al, byte ptr [ebp - 0x76e48a37]; ret 0x542b; 
0x00116d7d: or al, byte ptr [ebp - 0x7cec8b37]; ret 0x8908; 
0x000fb7fe: or al, byte ptr [ebp - 0xcfa8b37]; ret; 
0x000c51a5: or al, byte ptr [ebx + 0x5e5b24c4]; ret; 
0x000969df: or al, byte ptr [ebx + 0x5e5b28c4]; pop edi; pop ebp; ret; 
0x00126e35: or al, byte ptr [ebx + 0x5e5b34c4]; ret; 
0x0007a7e5: or al, byte ptr [ebx + 0x5e5b60c4]; pop edi; ret; 
0x0007f0eb: or al, byte ptr [ebx + 0x5f5e18c4]; pop ebp; ret; 
0x000836ec: or al, byte ptr [ebx - 0x1776fb3c]; pop esi; pop edi; pop ebp; ret; 
0x000bafc5: or al, byte ptr [ebx - 0x49f0fd40]; or byte ptr [ecx + ecx*8 - 0x3fce2e8b], al; pop esi; ret; 
0x0016f18d: or al, byte ptr [ebx]; add ah, al; xor al, 0xfe; jmp dword ptr [eax + 0x24]; 
0x000f72c4: or al, byte ptr [ecx + ecx*8 + 0x5e5be775]; pop edi; pop ebp; ret; 
0x000ba6bc: or al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000292d7: or al, byte ptr [ecx]; add byte ptr [eax], al; mov ecx, edx; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x00000877: or al, byte ptr [ecx]; ret; 
0x000b92be: or al, byte ptr [edi]; add byte ptr [ecx + 0xe9d33c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00135765: or al, byte ptr [esi - 1]; inc dword ptr [ecx + 0x31437c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x00066a77: or al, ch; add ebp, dword ptr [eax + 0x768dfffc]; add byte ptr [ebx + 0x462b0846], cl; add al, 0x89; ret 0xfac1; 
0x001255d1: or al, ch; cdq; xchg eax, esi; cld; jmp dword ptr [ecx]; 
0x0006974c: or al, ch; dec esi; sar bh, cl; jmp dword ptr [ecx]; 
0x0010dbc3: or al, ch; imul eax; dec dword ptr [ecx - 0x7cf5740e]; ret 0x8d04; 
0x000714df: or al, ch; mov ebx, 0x83fffffb; clc; dec dword ptr [edi]; xchg eax, esp; ret 0x57e9; 
0x000709df: or al, ch; pop ebx; ret 0xffff; 
0x0006867c: or al, ch; push ds; jecxz 0x68680; jmp dword ptr [ecx]; 
0x0007143b: or al, ch; push dword ptr [edi - 0x77c0001]; dec dword ptr [edi]; xchg eax, esp; ret 0xd284; 
0x000d0f08: or al, ch; ret 0xfad1; 
0x00030a78: or al, ch; ret 0xffec; 
0x000df350: or al, ch; sbb eax, 0x810004aa; ret; 
0x0002e1e9: or al, ch; test byte ptr [ebx - 0x3c7efff1], bh; add eax, 0x8700174e; sar dword ptr [eax + 0xb0], cl; call dword ptr gs:[0x10]; 
0x0002e2d9: or al, ch; xchg eax, esp; mov edx, 0xc381000f; adc eax, 0x8700174d; sar dword ptr [eax + 0xb3], cl; call dword ptr gs:[0x10]; 
0x0017d8c5: or al, dh; jmp dword ptr [edx]; 
0x0005b32f: or al, dl; sti; dec dword ptr [ecx - 0x106b7b]; call dword ptr [edx - 0x17]; 
0x001127aa: or bh, al; inc esp; and al, 4; add eax, 0x89000000; cmp al, 0x24; call dword ptr [eax]; 
0x0011b48d: or bh, al; inc esp; and al, 4; or eax, 0x89000000; add al, 0x24; call dword ptr [edx + 0x14]; 
0x0011ba82: or bh, bh; adc byte ptr [ecx + 0x4468bc7], cl; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0013934c: or bh, bh; inc dword ptr [ecx + 0x2dd91c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0017c8b8: or bh, bl; out dx, eax; jmp dword ptr [esi]; 
0x00179fdf: or bh, byte ptr [0xd1cffef]; jo 0x17a007; out dx, eax; jmp dword ptr [edx]; 
0x0019bd23: or bh, byte ptr [eax + 5]; ret; 
0x0006e41c: or bh, byte ptr [ebx]; dec edx; add al, 0x73; or byte ptr [ebx + 0x4c18301], cl; mov dword ptr [edx], ecx; ret; 
0x00166cb1: or bh, ch; inc dword ptr [eax]; or edi, ebp; jmp edx; 
0x00166d51: or bh, ch; jmp dword ptr [eax]; 
0x0007b97a: or bh, ch; jmp dword ptr [ebp - 0x7d]; 
0x000cb4b3: or bh, cl; add byte ptr [eax], al; add byte ptr [ecx - 0x6f17dbfc], cl; mov bh, 0xf5; call dword ptr [edi + 0x56]; 
0x001939c5: or bh, dh; call dword ptr [esi]; 
0x0016b639: or bh, dh; dec eax; and eax, dword ptr [edx]; add ah, dl; or bh, dh; jmp eax; 
0x0016b641: or bh, dh; jmp eax; 
0x0012bbe1: or bh, dh; ret 0x202; 
0x000e5df3: or bh, dh; ret 0xeff0; 
0x000f3405: or bh, dh; ret 0xff80; 
0x0016d589: or bh, dl; dec dword ptr [eax - 0x58fffd28]; or edi, edx; jmp dword ptr [eax]; 
0x00113257: or bl, al; lea esi, dword ptr [esi]; mov esi, ebx; sub esi, dword ptr [ebx + ecx*4 - 0x8fd88]; jmp esi; 
0x00177a19: or bl, al; out dx, al; jmp dword ptr [edx]; 
0x0011c5b3: or bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x0008f082: or bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x00134b30: or bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0010b701: or bl, byte ptr [esi + 0x5f]; pop ebp; ret 4; 
0x00175acc: or bl, ch; out dx, al; call dword ptr [eax]; 
0x00118e0a: or bl, ch; ret 0x768d; 
0x00126c00: or bl, ch; ret; 
0x0018bd08: or bl, cl; add dword ptr [eax], eax; aam 0x9d; cmc; jmp dword ptr [ebx]; 
0x00135507: or bl, dh; movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013c467: or bl, dh; movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; pop ebx; ret; 
0x000d8a1f: or bl, dh; ret; 
0x000e5db6: or byte ptr [0x100f], ah; ret; 
0x0016741c: or byte ptr [0x3c12fffd], bh; std; jmp dword ptr [edx + 0x3c]; 
0x000ca01f: or byte ptr [0x89000000], al; add al, 0x24; call 0x276f0; add esp, 0x18; pop ebx; ret; 
0x000e1e76: or byte ptr [0x89000000], al; push esp; and al, 4; mov eax, dword ptr [ecx + 0xc]; mov dword ptr [esp], eax; call dword ptr [ecx + 0x24]; 
0x00083994: or byte ptr [0x89000000], al; ret 0x838d; 
0x000ef79c: or byte ptr [eax + 0x124], bh; call dword ptr gs:[0x10]; 
0x000decec: or byte ptr [eax + 0x13], bh; call dword ptr gs:[0x10]; 
0x000df53c: or byte ptr [eax + 0x14a], bh; call dword ptr gs:[0x10]; 
0x000eff16: or byte ptr [eax + 0x156], bh; call dword ptr gs:[0x10]; 
0x0004a5e9: or byte ptr [eax + 0x17324bc], al; add byte ptr [eax], al; add byte ptr [ebp - 0x75], ah; add byte ptr [edi], cl; cwde; ret 0x44f6; 
0x000ca109: or byte ptr [eax + 0x1a], 8; xor eax, eax; ret; 
0x00055241: or byte ptr [eax + 0x24000001], al; cmp al, 0xc; ret 0x4489; 
0x000e6d0c: or byte ptr [eax + 0x36], bh; call dword ptr gs:[0x10]; 
0x000915d5: or byte ptr [eax + 0x448b0270], cl; and al, 8; pop esi; ret; 
0x000e0a7c: or byte ptr [eax + 0x55], bh; call dword ptr gs:[0x10]; 
0x000e6acc: or byte ptr [eax + 0x61], bh; call dword ptr gs:[0x10]; 
0x000eea1c: or byte ptr [eax + 0x65], bh; call dword ptr gs:[0x10]; 
0x000ef89c: or byte ptr [eax + 0x67], bh; call dword ptr gs:[0x10]; 
0x000aac4c: or byte ptr [eax + 0x68], bh; call dword ptr gs:[0x10]; 
0x000ca0f3: or byte ptr [eax + 0x74111878], al; push es; xor eax, eax; ret; 
0x000ef23c: or byte ptr [eax + 0x7b], bh; call dword ptr gs:[0x10]; 
0x000eb1ac: or byte ptr [eax + 0x7d], bh; call dword ptr gs:[0x10]; 
0x000ef52c: or byte ptr [eax + 0x7f], bh; call dword ptr gs:[0x10]; 
0x000ef56c: or byte ptr [eax + 0x81], bh; call dword ptr gs:[0x10]; 
0x000eb1f6: or byte ptr [eax + 0x90], bh; call dword ptr gs:[0x10]; 
0x000c543c: or byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x000b8219: or byte ptr [eax + 0xa2], bh; call dword ptr gs:[0x10]; 
0x000ef97c: or byte ptr [eax + 0xa9], bh; call dword ptr gs:[0x10]; 
0x000eb2ac: or byte ptr [eax + 0xda], bh; call dword ptr gs:[0x10]; 
0x000eb26c: or byte ptr [eax + 0xdb], bh; call dword ptr gs:[0x10]; 
0x000ed57c: or byte ptr [eax + 0xe8], bh; call dword ptr gs:[0x10]; 
0x000ed60c: or byte ptr [eax + 0xe9], bh; call dword ptr gs:[0x10]; 
0x000ed45c: or byte ptr [eax + 0xea], bh; call dword ptr gs:[0x10]; 
0x00094ab9: or byte ptr [eax + 0xf660870], cl; adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0016c534: or byte ptr [eax + 2], dh; add byte ptr [ebx + ecx*4], dh; clc; jmp dword ptr [eax]; 
0x000debf6: or byte ptr [eax + 3], bh; call dword ptr gs:[0x10]; 
0x000dec76: or byte ptr [eax + 4], bh; call dword ptr gs:[0x10]; 
0x000de756: or byte ptr [eax + 5], bh; call dword ptr gs:[0x10]; 
0x000b7d06: or byte ptr [eax + 7], bh; call dword ptr gs:[0x10]; 
0x000df629: or byte ptr [eax + 8], bh; call dword ptr gs:[0x10]; 
0x000e9567: or byte ptr [eax + eax], al; add ebx, 0xb9a8a; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0x10f; call dword ptr gs:[0x10]; 
0x00198818: or byte ptr [eax + edi*8], bl; jmp esp; 
0x0008ce1c: or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x00094160: or byte ptr [eax - 0x776ef86], cl; pop ebx; pop edi; ret; 
0x00093e6d: or byte ptr [eax - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x0008ccbc: or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x00000576: or byte ptr [eax - 0x7f7fdec0], al; pushal; ret 0x2096; 
0x0001cbd4: or byte ptr [eax - 1], bh; movzx ecx, dl; test dl, dl; cmovns eax, ecx; ret; 
0x000003c7: or byte ptr [eax], ah; or byte ptr [edx], ah; ret 0x224; 
0x00095845: or byte ptr [eax], ah; ret; 
0x00072812: or byte ptr [eax], al; add byte ptr [eax], al; add bl, dh; ret; 
0x00016eb8: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x00067a94: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbbc], cl; sub al, 0x24; call edi; 
0x00025f14: or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00129a59: or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0xc; ret; 
0x000df605: or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002dfc7: or byte ptr [eax], al; add byte ptr [eax], al; cmovne edx, eax; xchg edi, ebx; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x000f0688: or byte ptr [eax], al; add byte ptr [eax], al; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000e0d00: or byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x00113515: or byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], edi; call dword ptr [eax + 0x18]; 
0x000eeee9: or byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x0002e32d: or byte ptr [eax], al; add byte ptr [eax], al; mov ecx, edx; xchg edi, ebx; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x00149157: or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0002e245: or byte ptr [eax], al; add byte ptr [eax], al; xchg ebx, edx; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000e5e90: or byte ptr [eax], al; add byte ptr [eax], al; xor byte ptr [ecx], 0xc0; pop ebx; ret; 
0x00093492: or byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; mov esp, 0x27; add byte ptr [ebp - 0x7cc78a40], al; ret; 
0x0003058b: or byte ptr [eax], al; add byte ptr [ebx + 0x293c2454], cl; ret 0x5489; 
0x000c1f68: or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 0x10; 
0x000749f8: or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0008d4b5: or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ba9bd: or byte ptr [eax], al; add cl, ch; ret; 
0x000c8bb7: or byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [ecx - 0x76fbdbac], cl; add al, 0x24; call esi; 
0x0012011a: or byte ptr [eax], al; inc esp; or byte ptr cs:[eax], al; pop ebx; pop esi; ret; 
0x0009866f: or byte ptr [eax], al; mov dword ptr [esp + 4], esi; mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; call edi; 
0x0011c3e9: or byte ptr [eax], al; mov eax, dword ptr [ecx - 0x58]; lea edx, dword ptr [ecx + 0x33ac]; mov dword ptr gs:[eax], edx; ret; 
0x0012011e: or byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0003f5b6: or byte ptr [eax], al; pop ebx; ret; 
0x00041d69: or byte ptr [eax], al; ret; 
0x0009841c: or byte ptr [eax], bh; cmove eax, ecx; ret; 
0x00113360: or byte ptr [eax], ch; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edi; call dword ptr [edx + 0x18]; 
0x000036a1: or byte ptr [eax], ch; push edi; call dword ptr [esi + 0x6f]; 
0x00095855: or byte ptr [eax], dh; ret; 
0x00103d0a: or byte ptr [eax], dl; add byte ptr [eax], al; add byte ptr [ecx - 0x17fbdbbc], cl; or cl, ah; dec dword ptr [ebx - 0x76dfdbb4]; ret 0x448b; 
0x00066062: or byte ptr [eax], dl; add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbac], cl; xor al, 0x24; call dword ptr [eax + 0x1c]; 
0x00095835: or byte ptr [eax], dl; ret; 
0x00166e64: or byte ptr [eax], dl; std; jmp edx; 
0x000cfa7a: or byte ptr [ebp + 0x348d7604], cl; ret 0x558b; 
0x000679bd: or byte ptr [ebp + 0x44892846], cl; and al, 4; mov dword ptr [esp], ebp; call edi; 
0x00067b6d: or byte ptr [ebp + 0x44895446], cl; and al, 4; mov dword ptr [esp], ebp; call edi; 
0x0012738d: or byte ptr [ebp + 0x489bc45], cl; and al, 0x89; push esp; and al, 4; call dword ptr [ebp - 0x7c]; 
0x0007b3c4: or byte ptr [ebp + 0x4c89194f], cl; and al, 4; call eax; 
0x0011cc22: or byte ptr [ebp + 0x4d02494], cl; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x00187f33: or byte ptr [ebp + 0x50d4202], al; inc ebx; xchg dword ptr [ebx], eax; inc edx; add dword ptr [0x5d030486], 6; ret; 
0x00171b87: or byte ptr [ebp + 0x50d4202], al; inc ecx; add dword ptr [ebx], 0x78; ret; 
0x0019a767: or byte ptr [ebp + 0x50d4202], al; inc edi; xchg byte ptr [edi + eax*4], al; add ecx, dword ptr [ebp - 0x7d]; add eax, 0xa017803; ret; 
0x0018a1b7: or byte ptr [ebp + 0x50d4202], al; inc esp; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx + eax*4 + 5]; add dh, byte ptr [ebp + 0xa]; ret; 
0x00170843: or byte ptr [ebp + 0x50d4202], al; inc esp; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ecx - 0x7d]; add eax, 0xa010f03; ret; 
0x0019b36b: or byte ptr [ebp + 0x50d4202], al; inc esp; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ecx - 0x7d]; add eax, 0xa014103; ret; 
0x0019a037: or byte ptr [ebp + 0x50d4202], al; inc esp; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ecx - 0x7d]; add eax, 0xa01a003; ret; 
0x0018b6d7: or byte ptr [ebp + 0x50d4202], al; inc esp; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edi - 0x7d]; add eax, 0xa03ba03; ret; 
0x00098d2b: or byte ptr [ebp + 0x5489bc55], cl; and al, 4; mov eax, dword ptr [eax + 8]; mov dword ptr [esp], eax; call edi; 
0x0008b7dd: or byte ptr [ebp + 0x5b5f0c42], cl; ret; 
0x0008b81c: or byte ptr [ebp + 0x5b5f1042], cl; ret; 
0x0003f1f9: or byte ptr [ebp + 0x5e5bf465], 0x5f; pop ebp; ret; 
0x00024f82: or byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x0008f05d: or byte ptr [ebp + 0x5e5f0947], cl; pop ebx; ret; 
0x0008f07f: or byte ptr [ebp + 0x5e5f0a47], cl; pop ebx; ret; 
0x0008f0bd: or byte ptr [ebp + 0x5e5f0c47], cl; pop ebx; ret; 
0x00199f08: or byte ptr [ebp + 0x61c40002], ch; clc; call dword ptr [edi]; 
0x000b4e7b: or byte ptr [ebp + 0xc89d84d], cl; and al, 0x89; push esp; and al, 4; call dword ptr [ebp - 0x34]; 
0x000959ed: or byte ptr [ebp - 0x12], dh; add esp, 4; pop esi; pop edi; pop ebp; ret; 
0x001047f0: or byte ptr [ebp - 0x13], dh; add esp, 8; pop esi; ret; 
0x0011f553: or byte ptr [ebp - 0x14f375], cl; dec dword ptr [ecx + 0x50890448]; adc al, 0x5b; ret; 
0x000ddfe0: or byte ptr [ebp - 0x39], ah; add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; add esp, 0xc; ret; 
0x0011e23d: or byte ptr [ebp - 0x42d847d], cl; dec dword ptr [ecx - 0x17fbdbbc]; ret; 
0x000fe23d: or byte ptr [ebp - 0x435d97d], cl; dec dword ptr [ecx - 0x17fbdbbc]; ret; 
0x000264bd: or byte ptr [ebp - 0x5cf000ba], cl; ret 0x8a72; 
0x0004bb39: or byte ptr [ebp - 0x74158a37], al; adc al, byte ptr [ebp - 0x76e18a2e]; ret 0x542b; 
0x000ecb33: or byte ptr [ebp - 0x74df8a40], al; dec esp; and al, 0x10; xchg ebx, edx; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x000fc2e9: or byte ptr [ebp - 0x74f78b2e], al; push eax; add al, 0x89; adc al, 0x24; call dword ptr [eax]; 
0x000ce0d2: or byte ptr [ebp - 0x74f98b2e], al; inc eax; adc byte ptr [ecx - 0x3fceefbe], cl; pop esi; ret; 
0x000988a6: or byte ptr [ebp - 0x76cfdbac], cl; push esp; and al, 4; mov eax, dword ptr [eax + 8]; mov dword ptr [esp], eax; call esi; 
0x00064f68: or byte ptr [ebp - 0x76e7dbb4], cl; dec esp; and al, 4; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x000eb8fc: or byte ptr [ebp - 0x76f88b40], al; cli; call 0xeb8d0; mov eax, dword ptr [esi]; mov dword ptr [esp], eax; call edi; 
0x0007b01a: or byte ptr [ebp - 0x76fed0b4], cl; dec esp; and al, 4; call eax; 
0x0008d4ea: or byte ptr [ebp - 0x7af0f781], cl; mov esp, 0x5f000008; pop esi; pop ebx; ret; 
0x000d0a45: or byte ptr [ebp - 0x7ce78b2e], al; ret 0x8d04; 
0x0006317b: or byte ptr [ebp - 0x7cffd98c], cl; ret 0x8901; 
0x0011aca6: or byte ptr [ebp - 0xa743], cl; dec dword ptr [ebx + 0x20508b01]; mov dword ptr [esp + 4], edi; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x001191ca: or byte ptr [ebp - 0xc37b], cl; jmp dword ptr [esi - 0x39]; 
0x000c5c5f: or byte ptr [ebp - 0xdd3e37d], 0xff; lea edx, dword ptr [ebx - 0xdd464]; cmove eax, edx; add esp, 8; pop ebx; ret; 
0x000ea05e: or byte ptr [ebx + 0x1eec93], cl; add byte ptr [ebp - 0x74e88b2e], al; add al, byte ptr [ebp - 0x7cf68b40]; ret 0x8904; 
0x001916e7: or byte ptr [ebx + 0x200e4502], al; add al, dl; or cl, byte ptr [esi]; or byte ptr [esi + ecx + 4], al; ret; 
0x00172e3f: or byte ptr [ebx + 0x200e4e02], al; imul ecx, dword ptr [esi], 0x40e4108; ret; 
0x0011abd3: or byte ptr [ebx + 0x20508b01], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x00113215: or byte ptr [ebx + 0x2c7241c], cl; adc byte ptr [eax], al; add byte ptr [eax], al; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0006d6d0: or byte ptr [ebx + 0x2c895846], cl; and al, 0x83; shr byte ptr [ecx + ecx*4], 0x44; and al, 4; call dword ptr [ebp + 0x18]; 
0x0004260b: or byte ptr [ebx + 0x34890c55], cl; and al, 0x89; push esp; and al, 4; call dword ptr [eax + 0x1c]; 
0x0013c768: or byte ptr [ebx + 0x390c2454], cl; ret 0x1d72; 
0x0013b238: or byte ptr [ebx + 0x390c2454], cl; ret 0x1e72; 
0x00184e4d: or byte ptr [ebx + 0x40e4502], al; ret; 
0x0017d784: or byte ptr [ebx + 0x40e4602], al; ret; 
0x0017d714: or byte ptr [ebx + 0x40e4702], al; ret; 
0x00184d58: or byte ptr [ebx + 0x40e4802], al; ret; 
0x0017fff7: or byte ptr [ebx + 0x40e4902], al; ret; 
0x001806a4: or byte ptr [ebx + 0x40e4b02], al; ret; 
0x001806bf: or byte ptr [ebx + 0x40e4e02], al; ret; 
0x001806ec: or byte ptr [ebx + 0x40e4f02], al; ret; 
0x00180692: or byte ptr [ebx + 0x40e5002], al; ret; 
0x00180689: or byte ptr [ebx + 0x40e5102], al; ret; 
0x0018069b: or byte ptr [ebx + 0x40e5202], al; ret; 
0x0017fa13: or byte ptr [ebx + 0x40e5502], al; ret; 
0x00174090: or byte ptr [ebx + 0x40e5702], al; ret; 
0x0017ee75: or byte ptr [ebx + 0x40e5902], al; ret; 
0x00189ca3: or byte ptr [ebx + 0x40e5a02], al; ret; 
0x0017d77b: or byte ptr [ebx + 0x40e5b02], al; ret; 
0x0018075a: or byte ptr [ebx + 0x40e5d02], al; ret; 
0x00180787: or byte ptr [ebx + 0x40e5f02], al; ret; 
0x0017ebda: or byte ptr [ebx + 0x40e6002], al; ret; 
0x0016f457: or byte ptr [ebx + 0x40e6102], al; ret; 
0x0017ebd1: or byte ptr [ebx + 0x40e6202], al; ret; 
0x00180790: or byte ptr [ebx + 0x40e6302], al; ret; 
0x0017eec3: or byte ptr [ebx + 0x40e6502], al; ret; 
0x00180321: or byte ptr [ebx + 0x40e6602], al; ret; 
0x00180b05: or byte ptr [ebx + 0x40e6702], al; ret; 
0x00180b68: or byte ptr [ebx + 0x40e6902], al; ret; 
0x0017ec36: or byte ptr [ebx + 0x40e6a02], al; ret; 
0x0017ec12: or byte ptr [ebx + 0x40e6b02], al; ret; 
0x0017eeba: or byte ptr [ebx + 0x40e6c02], al; ret; 
0x00180b20: or byte ptr [ebx + 0x40e6d02], al; ret; 
0x0017f11d: or byte ptr [ebx + 0x40e6e02], al; ret; 
0x00180799: or byte ptr [ebx + 0x40e6f02], al; ret; 
0x0017ec00: or byte ptr [ebx + 0x40e7002], al; ret; 
0x0017fce5: or byte ptr [ebx + 0x40e7102], al; ret; 
0x0017d09b: or byte ptr [ebx + 0x40e7202], al; ret; 
0x0017eee7: or byte ptr [ebx + 0x40e7302], al; ret; 
0x0017eede: or byte ptr [ebx + 0x40e7502], al; ret; 
0x0017f165: or byte ptr [ebx + 0x40e7602], al; ret; 
0x0017d70b: or byte ptr [ebx + 0x40e7802], al; ret; 
0x0017ee6c: or byte ptr [ebx + 0x40e7902], al; ret; 
0x0017ed16: or byte ptr [ebx + 0x40e7a02], al; ret; 
0x0017ec5a: or byte ptr [ebx + 0x40e7b02], al; ret; 
0x0017eed5: or byte ptr [ebx + 0x40e7e02], al; ret; 
0x0017c923: or byte ptr [ebx + 0x40e7f02], al; ret; 
0x0002dd15: or byte ptr [ebx + 0x448b0c68], cl; and al, 8; mov esp, ecx; jmp edx; 
0x0004a68b: or byte ptr [ebx + 0x468901c0], al; adc al, 0x83; ret 0x8301; 
0x0010929e: or byte ptr [ebx + 0x47024b4], cl; add byte ptr [eax], al; mov dword ptr [esp + 0x10], edx; mov dword ptr [esp], esi; call eax; 
0x001096ae: or byte ptr [ebx + 0x47424b4], cl; add byte ptr [eax], al; mov dword ptr [esp + 0x10], edx; mov dword ptr [esp], esi; call eax; 
0x0004838a: or byte ptr [ebx + 0x478901c0], al; adc al, 0x83; ret 0x8301; 
0x0003dbe7: or byte ptr [ebx + 0x48901e8], al; and al, 0x89; ret 0x448b; 
0x0001ed5a: or byte ptr [ebx + 0x4a8801c0], al; add al, 0x83; ret 0x3901; 
0x0006e421: or byte ptr [ebx + 0x4c18301], cl; mov dword ptr [edx], ecx; ret; 
0x00111d42: or byte ptr [ebx + 0x4c89144d], cl; and al, 4; call dword ptr [edx]; 
0x00003d9b: or byte ptr [ebx + 0x4e], ch; ret 0x6bba; 
0x00094a3c: or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x0010370f: or byte ptr [ebx + 0x5d5b14c4], al; ret; 
0x000915f6: or byte ptr [ebx + 0x5e082444], cl; ret; 
0x000a3fa8: or byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x000c6b29: or byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x000fd0ec: or byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00080610: or byte ptr [ebx + 0x5f5e24c4], al; pop ebp; ret; 
0x0018b2d3: or byte ptr [ebx + 0x600e4302], al; push cs; or byte ptr [esi + ecx + 4], al; ret; 
0x00077331: or byte ptr [ebx + 0x6504245c], cl; mov dword ptr [eax], 0xc; xor eax, eax; add esp, 0xc; ret; 
0x00113239: or byte ptr [ebx + 0x748b241c], cl; and al, 4; add esp, 8; ret; 
0x0001cece: or byte ptr [ebx + 0x778b01c0], al; adc al, 0x88; dec esp; push ss; add al, 0x83; ret 0x3b01; 
0x0008d52f: or byte ptr [ebx + 0x7f8d0aeb], al; or cl, byte ptr [edi]; test dword ptr [eax + ecx], esi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0001f4a4: or byte ptr [ebx + 0xa42484], cl; add byte ptr [eax], al; mov dword ptr [esp + 4], eax; call dword ptr [esi]; 
0x0006aa99: or byte ptr [ebx + 0xa], dh; movzx eax, byte ptr [ecx]; add ecx, 1; mov dword ptr [edx + 4], ecx; ret; 
0x0006dcb7: or byte ptr [ebx + 0xc895845], cl; and al, 0x83; shr byte ptr [ecx + ecx*4], 0x44; and al, 4; call dword ptr [ecx + 0x18]; 
0x000e5dcb: or byte ptr [ebx + 0xf250842], cl; adc byte ptr [eax], al; add bl, dh; ret; 
0x0007055d: or byte ptr [ebx + 8], dh; movzx eax, byte ptr [eax]; add esp, 0x18; pop esi; ret; 
0x0017adf8: or byte ptr [ebx + edi*8], cl; jmp dword ptr [ebx]; 
0x0004bccd: or byte ptr [ebx - 0x12f7d], cl; dec dword ptr [ebp - 0x4943b6d]; jmp dword ptr [ebp - 0x75]; 
0x0005fa7d: or byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x0011f534: or byte ptr [ebx - 0x17f3dbac], cl; xor eax, 0x810000a8; ret; 
0x0002d406: or byte ptr [ebx - 0x22f3dbbc], cl; inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x0006b90e: or byte ptr [ebx - 0x2f76e73c], al; pop esi; ret; 
0x00073182: or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x000ded25: or byte ptr [ebx - 0x47fbdba4], cl; and dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000de135: or byte ptr [ebx - 0x47fbdba4], cl; arpl word ptr [eax], ax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b92e5: or byte ptr [ebx - 0x47fbdba4], cl; cmp dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ef9f5: or byte ptr [ebx - 0x47fbdba4], cl; fld dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e7e15: or byte ptr [ebx - 0x47fbdba4], cl; jns 0xe7e1d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000df5ff: or byte ptr [ebx - 0x47fbdba4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e0925: or byte ptr [ebx - 0x47fbdba4], cl; or dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000df1c5: or byte ptr [ebx - 0x47fbdba4], cl; pop dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ef425: or byte ptr [ebx - 0x47fbdba4], cl; xchg byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000eed45: or byte ptr [ebx - 0x47fbdba4], cl; xor al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00042a16: or byte ptr [ebx - 0x49b73], cl; dec dword ptr [ecx + 0x4c892434]; and al, 4; call dword ptr [eax + 0x1c]; 
0x00042b39: or byte ptr [ebx - 0x4ab6b], cl; dec dword ptr [ecx + 0x54892434]; and al, 4; call dword ptr [eax + 0x1c]; 
0x00115ffa: or byte ptr [ebx - 0x6f3cf33c], al; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0x8cfe8]; jmp ecx; 
0x00119a3a: or byte ptr [ebx - 0x6f3cf33c], al; mov esi, ebx; sub esi, dword ptr [ebx + eax*4 - 0x895a8]; jmp esi; 
0x0011a45a: or byte ptr [ebx - 0x6f3cf33c], al; mov esi, ebx; sub esi, dword ptr [ebx + ecx*4 - 0x88b88]; jmp esi; 
0x00096b2c: or byte ptr [ebx - 0x74e7db94], cl; dec esp; xchg eax, ebp; add byte ptr [ebx + 0x29202454], cl; ret 0xc083; 
0x00078f55: or byte ptr [ebx - 0x74efdb8c], cl; cmp dword ptr [eax - 2], -1; jmp dword ptr [ebp - 0x7d]; 
0x0002c81b: or byte ptr [ebx - 0x74f3db84], cl; insb byte ptr es:[edi], dx; and al, 0x10; add esp, 0x14; ret; 
0x000271e3: or byte ptr [ebx - 0x74fbdbac], cl; inc eax; cmp al, 0x8b; add al, 0x90; ret; 
0x001298c3: or byte ptr [ebx - 0x74fbdbbc], cl; add al, 0x90; mov eax, dword ptr [eax]; ret; 
0x001298e3: or byte ptr [ebx - 0x74fbdbbc], cl; add al, 0x90; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000555d9: or byte ptr [ebx - 0x74fefbbe], al; xor al, 0x24; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0011424b: or byte ptr [ebx - 0x7635fefa], cl; push esp; and al, 4; mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x0001949f: or byte ptr [ebx - 0x7687dbbc], cl; inc esp; and al, 4; call esi; 
0x00114b6b: or byte ptr [ebx - 0x769bdbac], cl; push esp; and al, 4; mov edx, dword ptr [esp + 0x60]; mov dword ptr [esp], edx; call eax; 
0x00079b5d: or byte ptr [ebx - 0x76bfdbac], cl; push esp; and al, 4; call eax; 
0x000ddbc4: or byte ptr [ebx - 0x76bfdbbc], cl; inc esp; and al, 4; call 0xddf70; add esp, 0x3c; ret; 
0x00067044: or byte ptr [ebx - 0x76cbdbac], cl; xor al, 0x24; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x2c]; 
0x000a5eae: or byte ptr [ebx - 0x76cfdbac], cl; push esp; and al, 4; mov edx, dword ptr [esp + 0x2c]; mov dword ptr [esp], edx; call edi; 
0x0003162c: or byte ptr [ebx - 0x76cfdbb4], cl; or al, 0x24; call edi; 
0x000b3dc1: or byte ptr [ebx - 0x76cfdbbc], cl; inc esp; and al, 4; call 0xb46f0; add esp, 0x2c; ret; 
0x000b4341: or byte ptr [ebx - 0x76cfdbbc], cl; inc esp; and al, 4; call 0xb48f0; add esp, 0x2c; ret; 
0x000319d6: or byte ptr [ebx - 0x76d3dbb4], cl; dec esp; and al, 4; call edi; 
0x00116258: or byte ptr [ebx - 0x76d7dbac], cl; cmp al, 0x24; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x000fbea2: or byte ptr [ebx - 0x76dbdbac], cl; push esp; and al, 4; mov edx, dword ptr [esp + 0x20]; mov dword ptr [esp], edx; call eax; 
0x0006f5e1: or byte ptr [ebx - 0x76dbdbac], cl; xor al, 0x24; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x20]; 
0x00072509: or byte ptr [ebx - 0x76dbdbb4], cl; add al, 0x24; mov dword ptr [esp + 4], ecx; call dword ptr [edx + 0x20]; 
0x00064ec8: or byte ptr [ebx - 0x76dbdbb4], cl; dec esp; and al, 4; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x000df682: or byte ptr [ebx - 0x76dfdbbc], cl; add al, 0x24; call 0xde7c0; add esp, 0x1c; ret; 
0x000eacca: or byte ptr [ebx - 0x76dfdbbc], cl; add al, 0x24; call 0xea6f0; add esp, 0x1c; ret; 
0x000b7d89: or byte ptr [ebx - 0x76dfdbbc], cl; inc esp; and al, 4; call 0xb7da0; add esp, 0x1c; ret; 
0x00111855: or byte ptr [ebx - 0x76e3dbac], cl; push esp; and al, 4; call dword ptr [eax + 0xc]; 
0x000f8316: or byte ptr [ebx - 0x76e3dbb4], cl; dec esp; and al, 4; call edx; 
0x0007985e: or byte ptr [ebx - 0x76e7dbac], cl; push esp; and al, 4; call eax; 
0x00079df5: or byte ptr [ebx - 0x76ebdbac], cl; push esp; and al, 4; call eax; 
0x00129913: or byte ptr [ebx - 0x76fbdbbc], cl; push eax; dec esp; ret; 
0x0006bff6: or byte ptr [ebx - 0x77c03be], cl; push dword ptr [ebx + eax - 0x7d]; out dx, eax; add esp, 0x18; pop esi; ret; 
0x001820d0: or byte ptr [ebx - 0x78f3f1fe], al; add ebx, dword ptr [esi + ecx + 8]; ret; 
0x0018206a: or byte ptr [ebx - 0x78f3f1fe], al; add edx, dword ptr [esi + ecx + 8]; ret; 
0x001823f1: or byte ptr [ebx - 0x79f3f1fe], al; add ebp, dword ptr [esi + ecx + 8]; ret; 
0x0018229d: or byte ptr [ebx - 0x79f3f1fe], al; add ebx, dword ptr [esi + ecx + 8]; ret; 
0x00182259: or byte ptr [ebx - 0x79f3f1fe], al; add edx, dword ptr [esi + ecx + 8]; ret; 
0x001822bf: or byte ptr [ebx - 0x79f3f1fe], al; add esp, dword ptr [esi + ecx + 8]; ret; 
0x000cb75c: or byte ptr [ebx - 0x7afbdb8c], cl; div byte ptr [ebx + ecx*8 - 0xa]; ret 0x7408; 
0x0004acad: or byte ptr [ebx - 0x7c9fdb84], cl; ret 0x850f; 
0x000eb7b5: or byte ptr [ebx - 0x7ca3dbb4], cl; ret 0x8904; 
0x000de834: or byte ptr [ebx - 0x7ff3dbac], cl; int 0x80; 
0x000e2294: or byte ptr [ebx - 0xbb6b], cl; dec dword ptr [ebx + 0x5489c045]; and al, 4; mov dword ptr [esp], eax; call dword ptr [ebp - 0x28]; 
0x000e3414: or byte ptr [ebx - 0xcb6b], cl; dec dword ptr [ebx + 0x5489c045]; and al, 4; mov dword ptr [esp], eax; call dword ptr [ebp - 0x28]; 
0x0012a7f9: or byte ptr [ebx - 0xf76eb3c], al; pop ebx; pop esi; ret; 
0x00056389: or byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x0012b32a: or byte ptr [ebx], ch; inc ebp; add al, 0x89; ret 0xfac1; 
0x00066a82: or byte ptr [ebx], ch; inc esi; add al, 0x89; ret 0xfac1; 
0x00069104: or byte ptr [ecx + 0x180c4], al; add byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x0006b632: or byte ptr [ecx + 0x20488910], cl; pop esi; ret; 
0x0006952d: or byte ptr [ecx + 0x29cd29d5], cl; ret 0xe75; 
0x000d1bbd: or byte ptr [ecx + 0x3ffe2], al; add dh, dh; ret 0x7404; 
0x0011258b: or byte ptr [ecx + 0x4489243c], cl; and al, 4; call dword ptr [esi + 0xc]; 
0x000ebc4c: or byte ptr [ecx + 0x4489c84d], cl; and al, 4; mov dword ptr [esp], edx; call dword ptr [ebp + 0x10]; 
0x00094a79: or byte ptr [ecx + 0x448b0350], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x00091626: or byte ptr [ecx + 0x448b0350], cl; and al, 8; pop esi; ret; 
0x00066882: or byte ptr [ecx + 0x4c892414], cl; and al, 4; call dword ptr [eax + 0x1c]; 
0x00071ecc: or byte ptr [ecx + 0x50890c70], cl; add al, 0x89; dec eax; and al, 0x5e; ret; 
0x00056a5e: or byte ptr [ecx + 0x50ff2434], cl; sbb al, 0x89; ret 0x478b; 
0x0012b1f2: or byte ptr [ecx + 0x5489242c], cl; and al, 0xc; call dword ptr [eax + 0x40]; 
0x00066c79: or byte ptr [ecx + 0x54892434], cl; and al, 0x10; mov dword ptr [esp + 0xc], 0; call dword ptr [eax + 0x24]; 
0x0006588d: or byte ptr [ecx + 0x54892434], cl; and al, 4; call dword ptr [eax + 0x1c]; 
0x0006f2d6: or byte ptr [ecx + 0x54892434], cl; and al, 4; call dword ptr [eax + 0x40]; 
0x00116b24: or byte ptr [ecx + 0x54ff2404], cl; and al, 0x24; add esp, 0x1c; ret; 
0x000cb3a9: or byte ptr [ecx + 0x568db114], cl; add dword ptr [ecx], edi; ret 0xd689; 
0x000b3ee3: or byte ptr [ecx + 0x5e88e8c7], cl; pop es; add byte ptr [ecx + 0xef109c3], al; add byte ptr [edi + 0xdcb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002d58d: or byte ptr [ecx + 0x748b2404], 0x24; add al, 0xd9; add al, 0x24; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000cb2de: or byte ptr [ecx + 0x748b822c], cl; and al, 0x10; mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000e98ed: or byte ptr [ecx + 0x74c98510], cl; add ecx, dword ptr [ecx + 0xa890451]; mov dword ptr [edx + 4], eax; ret; 
0x0006b5fe: or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x0012b451: or byte ptr [ecx + 0x9cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000c5687: or byte ptr [ecx + 0xc4d8bf2], cl; xchg edi, ebx; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00033157: or byte ptr [ecx + 0xc5189c8], cl; add esp, 0x3c; ret 4; 
0x0002d277: or byte ptr [ecx + 0xe2], al; and byte ptr [0x7fffffff], 9; ror byte ptr [ecx - 0x22f7dbbc], 1; inc esp; and al, 4; ret; 
0x0018e4e9: or byte ptr [ecx + 0xe], al; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xc0e5d04], al; ret; 
0x000bafcb: or byte ptr [ecx + ecx*8 - 0x3fce2e8b], al; pop esi; ret; 
0x0002d253: or byte ptr [ecx - 0x100001], bh; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x000568c4: or byte ptr [ecx - 0x111f6b], cl; dec dword ptr [ecx - 0x76fbdbb4]; xor al, 0x24; call dword ptr [eax + 0x1c]; 
0x0005f6a1: or byte ptr [ecx - 0x1336b], cl; dec dword ptr [ecx - 0x2f17dbcc]; ret 0; 
0x000bb12b: or byte ptr [ecx - 0x16fbdbbc], cl; sbb edx, dword ptr [edi]; cld; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x00037fc4: or byte ptr [ecx - 0x17fbdbac], cl; ret 0xffdb; 
0x00031cc3: or byte ptr [ecx - 0x17fbdbb4], cl; ret; 
0x0004b922: or byte ptr [ecx - 0x2a17dbfc], cl; ret 4; 
0x000cab72: or byte ptr [ecx - 0x2a17dbfc], cl; ret; 
0x0008ce7c: or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000cab81: or byte ptr [ecx - 0x3917dbfc], cl; ret; 
0x001886fb: or byte ptr [ecx - 0x3a], al; push cs; add al, 0x45; or ebp, dword ptr [ebx + 0xa]; ret; 
0x00080ac4: or byte ptr [ecx - 0x3b7ce397], cl; inc esp; pop esi; pop edi; pop ebp; ret; 
0x001841ad: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x41; or eax, dword ptr [ebx]; dec byte ptr [0x41140e0a]; ret; 
0x0016fed6: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x41; or eax, dword ptr [edx]; mov esi, 0x41140e0a; ret; 
0x0018d454: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x41; or edx, dword ptr [eax + 0xe]; adc al, 0x43; ret; 
0x0018a735: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x43; or esp, dword ptr [edx + ecx + 0xe]; adc al, 0x46; ret; 
0x0018f154: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x44; or ebx, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x00190c97: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x46; or ecx, dword ptr [edi + 0xe]; adc al, 0x41; ret; 
0x00170627: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x47; or ebp, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x0018be95: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x47; or ebx, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x000d8a57: or byte ptr [ecx - 0x3fcefbb0], cl; ret; 
0x000df179: or byte ptr [ecx - 0x4720783a], cl; fld qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000524e1: or byte ptr [ecx - 0x5917dbf4], cl; ret 2; 
0x0005f5d8: or byte ptr [ecx - 0x6017dbcc], cl; ret; 
0x00103574: or byte ptr [ecx - 0x74e67404], cl; jno 0x103580; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x00114964: or byte ptr [ecx - 0x74fbdb94], cl; push es; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x00124d0d: or byte ptr [ecx - 0x74fbdbbc], cl; and eax, 0xe; add byte ptr [eax], al; call dword ptr [eax + 8]; 
0x000fc238: or byte ptr [ecx - 0x763ca430], cl; ret 0xd5eb; 
0x000c68f1: or byte ptr [ecx - 0x76d7dbbc], cl; push eax; or al, 0x31; rol byte ptr [ebx - 0x6bf09f02], cl; ret 0x5408; 
0x000a3ce8: or byte ptr [ecx - 0x76dfdbac], cl; ret 0x788b; 
0x0006ad71: or byte ptr [ecx - 0x76e3dbb4], cl; push esp; and al, 4; mov dword ptr [esp], ebp; call dword ptr [eax + 0x1c]; 
0x0005b99b: or byte ptr [ecx - 0x76e7dbac], cl; dec esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x000478e8: or byte ptr [ecx - 0x76ebdbac], cl; inc esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [ecx + 0x1c]; 
0x0006ff02: or byte ptr [ecx - 0x76f3dbac], cl; sub al, 0x24; call dword ptr [eax + 0x40]; 
0x0007bb56: or byte ptr [ecx - 0x76fbdb84], cl; sub al, 0x24; call eax; 
0x0006aed9: or byte ptr [ecx - 0x76fbdb84], cl; xor al, 0x24; call dword ptr [eax + 0x1c]; 
0x0006fa59: or byte ptr [ecx - 0x76fbdb84], cl; xor al, 0x24; call dword ptr [eax + 0x3c]; 
0x0004411b: or byte ptr [ecx - 0x76fbdb84], cl; xor al, 0x24; mov dword ptr [ebp - 0x57c], edx; call dword ptr [eax + 0x1c]; 
0x0011b683: or byte ptr [ecx - 0x76fbdb8c], cl; dec esp; and al, 0x10; mov dword ptr [esp], eax; call dword ptr [edx]; 
0x0006526a: or byte ptr [ecx - 0x76fbdb94], cl; xor al, 0x24; call dword ptr [eax + 0x1c]; 
0x00066e71: or byte ptr [ecx - 0x76fbdb94], cl; xor al, 0x24; call dword ptr [eax + 0x2c]; 
0x00071679: or byte ptr [ecx - 0x76fbdb94], cl; xor al, 0x24; call dword ptr [edx + 0x38]; 
0x00116b47: or byte ptr [ecx - 0x76fbdbac], cl; add al, 0x24; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x00043cd3: or byte ptr [ecx - 0x76fbdbac], cl; xor al, 0x24; call dword ptr [eax + 0x1c]; 
0x0011eaec: or byte ptr [ecx - 0x76fbdbac], cl; xor al, 0x24; call dword ptr [eax + 0xc]; 
0x0011ead3: or byte ptr [ecx - 0x76fbdbac], cl; xor al, 0x24; call dword ptr [eax + 8]; 
0x0011c99a: or byte ptr [ecx - 0x76fbdbb4], cl; add al, 0x24; call dword ptr [edx + 0xc]; 
0x0011c99a: or byte ptr [ecx - 0x76fbdbb4], cl; add al, 0x24; call dword ptr [edx + 0xc]; add esp, 0x4c; ret; 
0x0011ea5b: or byte ptr [ecx - 0x76fbdbb4], cl; xor al, 0x24; call dword ptr [eax + 0xc]; 
0x0011eaae: or byte ptr [ecx - 0x76fbdbb4], cl; xor al, 0x24; call dword ptr [eax + 8]; 
0x000c77e0: or byte ptr [ecx - 0x76fbdbb4], cl; xor al, 0x24; call dword ptr [ebp - 0x50]; 
0x00048e72: or byte ptr [ecx - 0x76fbdbb4], cl; xor al, 0x24; call eax; 
0x00042cad: or byte ptr [ecx - 0x76fbdbb4], cl; xor al, 0x24; mov dword ptr [ebp - 0x57c], edx; call dword ptr [eax + 0x1c]; 
0x0012b760: or byte ptr [ecx - 0x76fbdbbc], cl; xor al, 0x24; call dword ptr [ecx + 0x38]; 
0x0006a9bf: or byte ptr [ecx - 0x7717dbcc], 0xc5; cli; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x00093ecd: or byte ptr [ecx - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x0008cd1c: or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x000711f8: or byte ptr [ecx - 0x7c15de06], cl; cli; push dword ptr [edi + ecx - 0x77]; ret 0xfac1; 
0x000753f4: or byte ptr [ecx - 0x7cebdb84], cl; ret 0x138; 
0x00042461: or byte ptr [ecx - 0xfbdbbc], cl; push ecx; sbb al, 0x89; ret 0x408d; 
0x0016ebf5: or byte ptr [ecx], al; add byte ptr [eax + esi], dl; cld; jmp dword ptr [eax + 9]; 
0x0011d93c: or byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ecx + 0x54892414], cl; and al, 0x30; mov dword ptr [esp + 4], 0; call dword ptr [eax + 0x14]; 
0x000aae4c: or byte ptr [ecx], al; add byte ptr [eax], al; add esp, 0x10c; ret; 
0x000d9296: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000d936c: or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x000df43c: or byte ptr [ecx], al; add byte ptr [ecx + 0xd], bh; mov edi, ebp; xchg edi, ebx; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000a5a98: or byte ptr [ecx], al; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00173679: or byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0002b2c9: or byte ptr [ecx], al; ret 0x48d; 
0x0013a11c: or byte ptr [ecx], bh; ret 0x1d72; 
0x00136b6c: or byte ptr [ecx], bh; ret 0x1e72; 
0x00120333: or byte ptr [ecx], bh; ret 0x2275; 
0x00121941: or byte ptr [ecx], bh; ret 0x850f; 
0x000d6964: or byte ptr [ecx], bh; ret 0xd772; 
0x000a76ea: or byte ptr [ecx], ch; ret 0xc889; 
0x000716c6: or byte ptr [ecx], ch; ret 0xfa39; 
0x000fd0fa: or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00095e7a: or byte ptr [ecx], dh; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x0012e629: or byte ptr [ecx], dh; rol bh, 0x46; or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x00117cf1: or byte ptr [ecx], dh; ror byte ptr [ecx + 0x31ead1ca], 1; ret 0xe281; 
0x00081b9f: or byte ptr [ecx], dl; pop esi; pop edi; ret; 
0x000e9573: or byte ptr [edi + 0x10fb8d3], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00102a9d: or byte ptr [edi + 0x2b], dh; mov ecx, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x001028dd: or byte ptr [edi + 0x2b], dh; mov ecx, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 3; call dword ptr gs:[0x10]; 
0x000e65c3: or byte ptr [edi + 0x4bb8d3], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008b7a5: or byte ptr [edi + 0x5b], bl; ret; 
0x0008d97d: or byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a71e7: or byte ptr [edi + 0x5e], bl; ret; 
0x000e6a83: or byte ptr [edi + 0x60b8d3], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e6583: or byte ptr [edi + 0xbfb8d3], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b90e3: or byte ptr [edi + 0xcdb8d3], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c5b33: or byte ptr [edi + 0xdbb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000fc77d: or byte ptr [edi + 2], bh; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00134a10: or byte ptr [edi + 3], bl; sbb al, 0x8b; jmp ebx; 
0x0018e935: or byte ptr [edi - 0x7a], al; add al, byte ptr [edx + 9]; add eax, dword ptr [edx]; push edi; ret; 
0x0018291f: or byte ptr [edi - 0x7cf3f1fe], al; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x001828fd: or byte ptr [edi - 0x7cf3f1fe], al; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7204], al; ret; 
0x0018b5f8: or byte ptr [edi - 0xb], bl; call dword ptr [edx]; 
0x0006db2a: or byte ptr [edi - 1], bh; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x0010507e: or byte ptr [edi], 0x45; ret 0x90c3; 
0x000a7e7f: or byte ptr [edi], 0x4e; ret 0xc483; 
0x000488d4: or byte ptr [edi], 0x84; ret; 
0x000205c3: or byte ptr [edi], 0x85; ret 3; 
0x000ee8fa: or byte ptr [edi], 0x95; ret 0xcbeb; 
0x000f3b5d: or byte ptr [edi], cl; mov bh, 4; push eax; add esp, 0xc; and eax, 0x1000; ret; 
0x000f3abd: or byte ptr [edi], cl; mov bh, 4; push eax; add esp, 0xc; and eax, 0x100; ret; 
0x000f3a1d: or byte ptr [edi], cl; mov bh, 4; push eax; add esp, 0xc; and eax, 0x2000; ret; 
0x000f379d: or byte ptr [edi], cl; mov bh, 4; push eax; add esp, 0xc; and eax, 0x200; ret; 
0x000f38dd: or byte ptr [edi], cl; mov bh, 4; push eax; add esp, 0xc; and eax, 0x4000; ret; 
0x000f351d: or byte ptr [edi], cl; mov bh, 4; push eax; add esp, 0xc; and eax, 0x400; ret; 
0x000f383d: or byte ptr [edi], cl; mov bh, 4; push eax; add esp, 0xc; and eax, 0x8000; ret; 
0x000f35bd: or byte ptr [edi], cl; mov bh, 4; push eax; add esp, 0xc; and eax, 1; ret; 
0x000f365d: or byte ptr [edi], cl; mov bh, 4; push eax; add esp, 0xc; and eax, 2; ret; 
0x000f397d: or byte ptr [edi], cl; mov bh, 4; push eax; add esp, 0xc; and eax, 4; ret; 
0x000f347d: or byte ptr [edi], cl; mov bh, 4; push eax; add esp, 0xc; and eax, 8; ret; 
0x0007055f: or byte ptr [edi], cl; mov dh, 0; add esp, 0x18; pop esi; ret; 
0x0005209c: or byte ptr [edi], cl; mov dh, 0x4f; add cl, byte ptr [edi]; xchg eax, esp; ret 0xb60f; 
0x000bd62f: or byte ptr [edi], cl; mov dh, 0xc0; ret; 
0x001403cb: or byte ptr [edi], cl; mov dh, 2; sub eax, ecx; pop ebp; ret; 
0x0013ec12: or byte ptr [edi], cl; mov dh, 2; sub eax, ecx; ret; 
0x00130598: or byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x0002e9be: or byte ptr [edi], cl; test byte ptr [ebx - 0xa000000], al; ret 0x8901; 
0x0008d4ed: or byte ptr [edi], cl; test dword ptr [eax + ecx + 0x5e5f0000], edi; pop ebx; ret; 
0x000a70ca: or byte ptr [edi], cl; test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x000d7e7d: or byte ptr [edi], cl; xchg eax, ebp; ret 0xe083; 
0x00131420: or byte ptr [edi], cl; xchg eax, edx; ret 0xb60f; 
0x00019546: or byte ptr [edi], cl; xchg eax, esp; ret 0xc031; 
0x000ef0e1: or byte ptr [edi], cl; xchg eax, esp; rol byte ptr [ebx - 0x49f0d33c], 0xc0; sub eax, 1; ret; 
0x000ef0a1: or byte ptr [edi], cl; xchg eax, esp; rol byte ptr [ebx - 0x49f0e33c], 0xc0; sub eax, 1; ret; 
0x00094a08: or byte ptr [edx + 0x70880276], cl; add cl, byte ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x00187527: or byte ptr [edx + 9], al; add eax, dword ptr [edx]; push esi; ret; 
0x001890f8: or byte ptr [edx - 0xc], al; call edi; 
0x00166d50: or byte ptr [edx], 0xfd; jmp dword ptr [eax]; 
0x000003c9: or byte ptr [edx], ah; ret 0x224; 
0x0018fa49: or byte ptr [edx], al; add byte ptr [ebp + eax*2 - 0xa], dh; call dword ptr [ebx + 1]; 
0x0018a500: or byte ptr [edx], al; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x001730b8: or byte ptr [edx], bh; add byte ptr [eax], al; cmc; add ch, ah; call dword ptr [eax]; 
0x0007dce4: or byte ptr [edx], bh; or dh, byte ptr [ebp + 4]; xor eax, eax; pop ebx; ret; 
0x0016e11c: or byte ptr [edx], bl; add eax, dword ptr [eax]; push esp; push -5; call dword ptr [eax + 0x1a]; 
0x0018b008: or byte ptr [esi + 0x46640001], bh; cmc; jmp dword ptr [ebx]; 
0x00041bfe: or byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x00097c94: or byte ptr [esi + 0x5f], bl; ret; 
0x00090fa2: or byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000916a6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094abc: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091646: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00091667: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008e24b: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, dword ptr [edx + 0xf]; pop edi; ret; 
0x0008e53c: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, dword ptr [edx + 0xf]; ret; 
0x0008cc2b: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x0008cefc: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x00089a86: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, dword ptr [edx + 8]; pop edi; ret; 
0x00089bc6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, dword ptr [edx + 8]; ret; 
0x000856a6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000857e6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000899b6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; pop edi; ret; 
0x00089c26: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; ret; 
0x000855f6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x0008835f: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x00085846: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00089aa7: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, dword ptr [edx + 9]; pop edi; ret; 
0x00089be7: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, dword ptr [edx + 9]; ret; 
0x000856c7: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x00085807: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x00090ed7: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x0009409a: or byte ptr [esi + 0xf], ah; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop ebx; pop edi; ret; 
0x0012f623: or byte ptr [esi + 0xf], ah; cmp ah, byte ptr [ebx - 0x1f]; or al, 0xf; xchg eax, edx; ret 0xb60f; 
0x0012f57d: or byte ptr [esi + 0xf], ah; cmp ah, byte ptr [ebx - 0x2f]; or al, 0xf; xchg eax, edx; ret 0xcf89; 
0x00101909: or byte ptr [esi + eax*2 - 0x7d], dh; ret 0x8304; 
0x00189f07: or byte ptr [esi + ecx + 4], al; ret; 
0x000e4d77: or byte ptr [esi - 0x77], ah; inc edx; xor eax, eax; ret; 
0x001355ea: or byte ptr [esi - 0x77], ah; or cl, byte ptr [ebx + 0x5b082444]; ret; 
0x00149fed: or byte ptr [esi - 0x7d], bl; ret 0x830c; 
0x000311a4: or byte ptr [esi - 0x7f], ah; ret 0x3fff; 
0x00169178: or byte ptr [esi], 0xf0; call dword ptr [eax - 6]; 
0x00120119: or byte ptr cs:[eax], al; inc esp; or byte ptr cs:[eax], al; pop ebx; pop esi; ret; 
0x0012011d: or byte ptr cs:[eax], al; pop ebx; pop esi; ret; 
0x00003d9a: or byte ptr fs:[ebx + 0x4e], ch; ret 0x6bba; 
0x0008d576: or byte ptr ss:[eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000de839: or ch, 0x80; mov esi, eax; xchg edi, ebx; mov eax, 5; call dword ptr gs:[0x10]; 
0x000de7f6: or ch, 0x80; xchg edi, ebx; mov eax, 5; call dword ptr gs:[0x10]; 
0x00168011: or ch, ah; call esp; 
0x000638c2: or ch, ah; std; dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x00166e5d: or ch, bh; inc dword ptr [esi + 0x8fffd0f]; adc ch, bh; jmp edx; 
0x0007bbeb: or ch, bh; jmp dword ptr [ebp - 0x7d]; 
0x0002d288: or ch, bl; inc esp; and al, 4; ret; 
0x0009f0f9: or ch, ch; add al, 0; add byte ptr [ecx + 0x4ae82404], cl; jnp 0x9f0fd; jmp dword ptr [esi - 0x70]; 
0x0009c3e9: or ch, ch; add al, 0; add byte ptr [ecx + 0x5ae82404], cl; test al, 0xf8; jmp dword ptr [esi - 0x70]; 
0x000a1d91: or ch, ch; add al, 0; add byte ptr [ecx - 0x4d17dbfc], cl; dec esi; clc; jmp dword ptr [esi - 0x70]; 
0x0018c708: or ch, dl; add dword ptr [eax], eax; in al, 0xba; cmc; call dword ptr [ebp]; 
0x00103d14: or cl, ah; dec dword ptr [ebx - 0x76dfdbb4]; ret 0x448b; 
0x0016881c: or cl, al; add byte ptr [eax], al; and al, 0x6c; in eax, dx; jmp dword ptr [eax]; 
0x0010510c: or cl, al; call 0x109d223; add byte ptr [eax], al; or byte ptr [edi], 0x45; ret 0x90c3; 
0x0002d5f3: or cl, bl; inc esp; and al, 4; fscale; fstp st(1); ret; 
0x0002d662: or cl, bl; inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x00176e5d: or cl, bl; out dx, al; jmp dword ptr [edx]; 
0x0016fcc8: or cl, byte ptr [0x4114]; ret; 
0x00171fa2: or cl, byte ptr [0xffffc604]; ret; 
0x00101706: or cl, byte ptr [eax - 0x3d7cc5f4]; add dword ptr [ecx + ecx*8 - 0x3b7c108b], eax; adc byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x00110c95: or cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000f2889: or cl, byte ptr [ebp + 0xb6]; add byte ptr [ebx + 0x7c8b2434], cl; and al, 4; add esp, 8; ret; 
0x00046f9a: or cl, byte ptr [ebp - 0x7c2ff7bc]; ret 0xf01; 
0x000f7a57: or cl, byte ptr [ebx + 0x458b0c6d]; adc al, 0x39; ret 0xf67c; 
0x001354d5: or cl, byte ptr [ebx + 0x5b082444]; ret; 
0x000f324b: or cl, byte ptr [ebx + 0x748b241c]; and al, 4; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000f3bbe: or cl, byte ptr [ebx + 0x7c8b2434]; and al, 4; add esp, 8; ret; 
0x00058901: or cl, byte ptr [ebx - 0x107f73]; dec dword ptr [ebp - 0x7c2ffebc]; ret 0x8b04; 
0x00136905: or cl, byte ptr [ebx - 0x74f7dbbc]; dec esp; and al, 0x10; add eax, ecx; pop ebx; ret; 
0x0012fa0d: or cl, byte ptr [ebx - 0x8f6d]; jmp dword ptr [ebp - 0x75]; 
0x0006ee77: or cl, byte ptr [ecx + 0x4c18301]; mov dword ptr [edx + 0x10], ecx; pop esi; ret; 
0x000c348c: or cl, byte ptr [ecx + 0xf38244c]; mov dh, 0x4a; add al, 0x83; ret 0x8305; 
0x0006aa9b: or cl, byte ptr [edi]; mov dh, 1; add ecx, 1; mov dword ptr [edx + 4], ecx; ret; 
0x00059904: or cl, byte ptr [edi]; test byte ptr [edi], bl; add dword ptr [eax], eax; add byte ptr [ebx - 0x10a343], al; call dword ptr [eax]; 
0x0005a498: or cl, byte ptr [edi]; test dl, ch; adc byte ptr [eax], al; add byte ptr [ebx - 0x109b43], al; call dword ptr [eax]; 
0x0008d535: or cl, byte ptr [edi]; test dword ptr [eax + ecx], esi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00077f35: or cl, byte ptr [edi]; test dword ptr [ecx], ebx; sub eax, dword ptr [eax]; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x77]; 
0x0008eb78: or cl, byte ptr [edi]; test dword ptr [ecx], esi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00087537: or cl, byte ptr [edi]; test dword ptr [edx + 2], edx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000e1369: or cl, byte ptr [edx - 0x3e7efffc]; xchg dword ptr [esp + ecx], ebx; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0016fcb3: or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001702f5: or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x001795a1: or cl, byte ptr [esi]; adc al, 0x44; ret; 
0x001702df: or cl, byte ptr [esi]; adc al, 0x45; ret; 
0x0016f659: or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x0017052c: or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00171bdb: or cl, byte ptr [esi]; add al, 0xc7; ret; 
0x0017a50b: or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0019b972: or cl, byte ptr [esi]; or al, 0x43; ret; 
0x0017403e: or cl, byte ptr [esi]; or al, 0x44; ret; 
0x001916ef: or cl, byte ptr [esi]; or byte ptr [esi + ecx + 4], al; ret; 
0x00199041: or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x0017c2c5: or cl, byte ptr fs:[esi]; adc al, 0x43; ret; 
0x0018a73c: or cl, byte ptr fs:[esi]; adc al, 0x46; ret; 
0x0017c5cb: or cl, byte ptr fs:[esi]; add al, 0xc6; ret; 
0x0017427e: or cl, byte ptr gs:[esi]; add al, 0xc6; ret; 
0x0018cc2a: or cl, byte ptr gs:[esi]; add al, 0xc7; ret; 
0x0016d834: or cl, ch; add al, byte ptr [eax]; push -6; jmp dword ptr [eax]; 
0x0005df68: or cl, ch; sal ah, 0xff; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x75]; 
0x0005e7aa: or cl, ch; sti; jecxz 0x5e7ae; dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0xe373]; jmp dword ptr [ebp - 0x77]; 
0x000deae5: or dh, 0x80; mov ebp, eax; xchg edi, ebx; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000dea19: or dh, 0x80; xchg edi, ebx; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000f101d: or dh, 1; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0017da15: or dh, al; call dword ptr [ecx]; 
0x0017d9f9: or dh, al; call dword ptr [edx]; 
0x00097561: or dh, bl; add dword ptr [eax], eax; add byte ptr [ecx - 0x1d17dbfc], cl; idiv al; jmp dword ptr [esi - 0x70]; 
0x0016a719: or dh, bl; call dword ptr [eax - 0x42]; 
0x001874ad: or dh, bl; jmp dword ptr [ebp + 2]; 
0x0006c055: or dh, byte ptr [eax + edx + 0x39]; sal dword ptr [edx - 0xc], 1; mov eax, dword ptr [esp + 8]; add eax, esi; pop esi; ret; 
0x0007dce6: or dh, byte ptr [ebp + 4]; xor eax, eax; pop ebx; ret; 
0x00149052: or dh, byte ptr [edx + 0x4b]; lea eax, dword ptr [eax + 9]; pop edi; ret; 
0x00148032: or dh, byte ptr [edx + 0x4b]; lea eax, dword ptr [edi + 9]; pop edi; ret; 
0x000e997b: or dh, byte ptr [edx - 0x77]; ret 0xb60f; 
0x00132b65: or dh, byte ptr [edx - 1]; inc dword ptr [ecx + 0x33237c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00192aa8: or dh, ch; idiv bh; ret 0; 
0x00111f90: or dh, dh; ret 0x7401; 
0x0001fbad: or dh, dh; ret 0x7501; 
0x0019b564: or dl, bl; clc; call dword ptr [eax]; 
0x00042456: or dl, byte ptr [eax + eax + 0x14890000]; and al, 0x89; insb byte ptr es:[edi], dx; and al, 8; mov dword ptr [esp + 4], eax; call dword ptr [ecx + 0x1c]; 
0x0001a661: or dl, byte ptr [eax]; mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x1c]; mov dword ptr [esp], edx; call eax; 
0x000023ff: or dword ptr [eax + 0x41001835], 0xffffffdd; out 0xa9, al; ret 0xbd07; 
0x000ce09a: or dword ptr [eax + 0x50], edx; xor eax, eax; pop esi; ret; 
0x000e6356: or dword ptr [eax + eax], edx; mov esi, eax; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000e631d: or dword ptr [eax + eax], edx; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00045035: or dword ptr [eax + ebp*2 - 5], 0xffffffff; add edx, dword ptr [ebp - 0x49c]; mov dword ptr [ebp - 0x510], 1; mov dword ptr [ebp - 0x4b8], edi; jmp edx; 
0x00097d0d: or dword ptr [eax + ebp*2 - 6], 0xffffffff; pop ebx; ret; 
0x0002ea99: or dword ptr [eax + esi*4], edx; xor eax, eax; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x00025f81: or dword ptr [eax - 0x7400045b], 0x74; and al, 4; mov ebx, dword ptr [esp]; add esp, 8; ret; 
0x000c2a42: or dword ptr [eax - 0x7af0de06], eax; ret 0xfff8; 
0x00019b5c: or dword ptr [eax], 0x65ffffff; add eax, dword ptr [0]; ret; 
0x000b9b61: or dword ptr [eax], 0x65ffffff; cmp dword ptr [eax], 0x26; sete al; movzx eax, al; lea eax, dword ptr [eax + eax - 1]; ret; 
0x0002ecff: or dword ptr [eax], 0x65ffffff; mov dword ptr [eax], 0x16; mov eax, 0xffffffff; ret; 
0x000e4d81: or dword ptr [eax], 0x65ffffff; mov dword ptr [eax], 0x16; mov eax, 1; ret; 
0x0002ebbc: or dword ptr [eax], 0x65ffffff; mov dword ptr [eax], 0x26; mov eax, 0xffffffff; ret; 
0x00068131: or dword ptr [eax], 0x65ffffff; mov dword ptr [eax], 9; mov eax, 0xffffffff; ret; 
0x000e8922: or dword ptr [eax], 0x74ffffff; pcmpgtw mm0, mm7; add byte ptr [esi], ah; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x000edbf2: or dword ptr [eax], 0x78ffffff; pcmpgtw mm0, mm7; add byte ptr [esi], ah; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x000e5e8f: or dword ptr [eax], 0x80000000; xor eax, eax; pop ebx; ret; 
0x0016fb05: or dword ptr [eax], eax; add al, bl; ret; 
0x00033ae3: or dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000b7d93: or dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00101be3: or dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000e092b: or dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f0452: or dword ptr [eax], eax; add byte ptr [eax], al; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0479: or dword ptr [eax], eax; add byte ptr [eax], al; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0002c8b9: or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x00068139: or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x0012ea4d: or dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, edx; xchg ebx, ecx; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x0008d40b: or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ad9a3: or dword ptr [eax], eax; add dh, dh; ret 0x7518; 
0x000c8111: or dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x00094ebf: or dword ptr [eax], eax; add ecx, 0xc5ac3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949b4: or dword ptr [eax], eax; add ecx, 0xc5fce; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009498f: or dword ptr [eax], eax; add ecx, 0xc5ff3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009496f: or dword ptr [eax], eax; add ecx, 0xc6013; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094952: or dword ptr [eax], eax; add ecx, 0xc6030; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000948b3: or dword ptr [eax], eax; add ecx, 0xc604f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00094925: or dword ptr [eax], eax; add ecx, 0xc605d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094895: or dword ptr [eax], eax; add ecx, 0xc606d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009490e: or dword ptr [eax], eax; add ecx, 0xc6074; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000948f3: or dword ptr [eax], eax; add ecx, 0xc608f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094870: or dword ptr [eax], eax; add ecx, 0xc6092; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000948d1: or dword ptr [eax], eax; add ecx, 0xc60b1; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094846: or dword ptr [eax], eax; add ecx, 0xc60bc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009482d: or dword ptr [eax], eax; add ecx, 0xc60d5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009480c: or dword ptr [eax], eax; add ecx, 0xc60f6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000947e8: or dword ptr [eax], eax; add ecx, 0xc611a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000947ca: or dword ptr [eax], eax; add ecx, 0xc6138; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00094747: or dword ptr [eax], eax; add ecx, 0xc61bb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00091595: or dword ptr [eax], eax; add ecx, 0xc92ed; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00091570: or dword ptr [eax], eax; add ecx, 0xc9312; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00091546: or dword ptr [eax], eax; add ecx, 0xc933c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009152d: or dword ptr [eax], eax; add ecx, 0xc9355; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009150c: or dword ptr [eax], eax; add ecx, 0xc9376; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000914e8: or dword ptr [eax], eax; add ecx, 0xc939a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000914ca: or dword ptr [eax], eax; add ecx, 0xc93b8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000914ae: or dword ptr [eax], eax; add ecx, 0xc93d4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008f61f: or dword ptr [eax], eax; add ecx, 0xcb18f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008f53a: or dword ptr [eax], eax; add ecx, 0xcb304; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008f527: or dword ptr [eax], eax; add ecx, 0xcb317; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008f50b: or dword ptr [eax], eax; add ecx, 0xcb333; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008ea14: or dword ptr [eax], eax; add ecx, 0xcbd9a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e9ef: or dword ptr [eax], eax; add ecx, 0xcbdbf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e9cf: or dword ptr [eax], eax; add ecx, 0xcbddf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e9b2: or dword ptr [eax], eax; add ecx, 0xcbdfc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e913: or dword ptr [eax], eax; add ecx, 0xcbe1b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008e985: or dword ptr [eax], eax; add ecx, 0xcbe29; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e96e: or dword ptr [eax], eax; add ecx, 0xcbe40; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e953: or dword ptr [eax], eax; add ecx, 0xcbe5b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e931: or dword ptr [eax], eax; add ecx, 0xcbe7d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e83f: or dword ptr [eax], eax; add ecx, 0xcbeef; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008e81f: or dword ptr [eax], eax; add ecx, 0xcbf0f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008e7fa: or dword ptr [eax], eax; add ecx, 0xcbf34; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008df1f: or dword ptr [eax], eax; add ecx, 0xcc72f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008de3a: or dword ptr [eax], eax; add ecx, 0xcc8a4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008de27: or dword ptr [eax], eax; add ecx, 0xcc8b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008de0b: or dword ptr [eax], eax; add ecx, 0xcc8d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d3d4: or dword ptr [eax], eax; add ecx, 0xcd27a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d3af: or dword ptr [eax], eax; add ecx, 0xcd29f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d38f: or dword ptr [eax], eax; add ecx, 0xcd2bf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d372: or dword ptr [eax], eax; add ecx, 0xcd2dc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d2d3: or dword ptr [eax], eax; add ecx, 0xcd2fb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008d345: or dword ptr [eax], eax; add ecx, 0xcd309; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d32e: or dword ptr [eax], eax; add ecx, 0xcd320; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d313: or dword ptr [eax], eax; add ecx, 0xcd33b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d2f1: or dword ptr [eax], eax; add ecx, 0xcd35d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d20f: or dword ptr [eax], eax; add ecx, 0xcd3bf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008d1ef: or dword ptr [eax], eax; add ecx, 0xcd3df; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008d1ca: or dword ptr [eax], eax; add ecx, 0xcd404; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00105339: or dword ptr [eax], eax; mov eax, dword ptr [ecx - 0x100]; add eax, dword ptr gs:[0]; ret; 
0x0012ea6d: or dword ptr [ebp + 0x33], esp; adc eax, 0x18; call edx; 
0x000ff6fd: or dword ptr [ebp + 0x33], esp; adc eax, 0x18; mov dword ptr [esp], edx; call eax; 
0x0001952a: or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x000fe8ab: or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; add esp, 0x18; pop ebx; ret; 
0x000fc0e3: or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; add esp, 8; pop ebx; ret; 
0x00032ae4: or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr [esp + 4], edx; call eax; 
0x00056702: or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x5c]; mov dword ptr [esp], edx; call eax; 
0x0004e382: or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x64]; mov dword ptr [esp], edx; call eax; 
0x000428aa: or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x70]; mov dword ptr [esp], edx; call eax; 
0x0004799a: or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr [esp + 4], edx; lea edx, dword ptr [esp + 0x20d0]; mov dword ptr [esp], edx; call eax; 
0x0005ba52: or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr [esp + 4], edx; lea edx, dword ptr [esp + 0x8190]; mov dword ptr [esp], edx; call eax; 
0x000fb88a: or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x20]; mov dword ptr [esp], edx; call eax; 
0x0003ec18: or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr [esp + 8], esi; mov dword ptr [esp], edx; call eax; 
0x00026c05: or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr [esp], 1; call eax; 
0x00028d11: or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr [esp], ecx; call eax; 
0x0001ba80: or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr [esp], edx; call eax; 
0x0001afe8: or dword ptr [ebp + 0x33], esp; cmp eax, 0x18; mov dword ptr [esp], edi; call 0x126c80; mov dword ptr [esp], esi; call edi; 
0x00121dc0: or dword ptr [ebp - 0x57cfe90], 0x891274ff; rol dword ptr [edi + 0x6b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008d50d: or dword ptr [ebp - 0x7af0f681], ecx; cdq; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000fe87d: or dword ptr [ebx + 0x2c6c], 2; add esp, 0x18; pop ebx; ret; 
0x0011123b: or dword ptr [ebx + 0x32ac], 2; add esp, 0x18; pop ebx; ret; 
0x000cb74e: or dword ptr [ebx + 0x5f5e10c4], eax; pop ebp; ret; 
0x0012784e: or dword ptr [ebx + 0x5f5e24c4], eax; ret; 
0x0002c45a: or dword ptr [ebx - 0x12f7d], ecx; jmp dword ptr [ebp - 0x75]; 
0x00105473: or dword ptr [ebx - 0xff6d], ecx; jmp dword ptr [ebp - 0x77]; 
0x000725fb: or dword ptr [ebx], edx; add byte ptr [ebx + 0x940684], cl; add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 0x30]; 
0x0007d0eb: or dword ptr [ecx + ebp*8 - 0x12], 0xffffffff; pop ebx; ret; 
0x00078229: or dword ptr [ecx + ebx], 0; add byte ptr [eax], al; ret; 
0x00027ea0: or dword ptr [ecx + edi], 0; add byte ptr [ecx - 0x373edbec], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x0007e76f: or dword ptr [ecx + edx*2 - 7], 0xffffffff; pop ebx; ret; 
0x0005dc28: or dword ptr [ecx - 0x10373], ecx; dec dword ptr [ebx - 0x15775]; jmp dword ptr [ebp - 0x75]; 
0x000eb6a7: or dword ptr [ecx - 0x7cdfdbb4], ecx; ret 0x8d01; 
0x0016ebfd: or dword ptr [ecx], eax; add byte ptr [esi + 0x31], ch; cld; call eax; 
0x0008f060: or dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x00134aa0: or dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x0010383d: or dword ptr [edi + eax - 0xa], 0xffffffff; mov dword ptr [esp], eax; call edx; 
0x000dde66: or dword ptr [edi - 0x3c7efffc], edi; mov dl, byte ptr [ecx + 0xc]; add byte ptr [ebx - 0x78f3dbac], cl; sar dword ptr [eax + 0xc5], cl; call dword ptr gs:[0x10]; 
0x000e9976: or dword ptr [edi - 0x7d], esi; cli; or dh, byte ptr [edx - 0x77]; ret 0xb60f; 
0x000b9454: or dword ptr [edi], eax; add byte ptr [ecx + 0xe9b9dc3], al; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xd3]; call dword ptr gs:[0x10]; 
0x000b93f4: or dword ptr [edi], eax; add byte ptr [ecx + 0xe9bfdc3], al; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xd1]; call dword ptr gs:[0x10]; 
0x000b93b6: or dword ptr [edi], eax; add byte ptr [ecx + 0xe9c3bc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000b937e: or dword ptr [edi], eax; add byte ptr [ecx + 0xe9c73c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00109174: or dword ptr [edi], ecx; inc esi; int 0x80; 
0x0008d510: or dword ptr [edi], ecx; test dword ptr [ecx + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x00087515: or dword ptr [edi], ecx; test dword ptr [edx + eax], esi; add byte ptr [edi + 0x5b], bl; ret; 
0x0004b2a5: or dword ptr [edi], ecx; xchg eax, edi; ret 0xe083; 
0x000e6a9e: or dword ptr [edx + 0x14], edi; sub edx, eax; mov eax, edx; pop ebx; ret; 
0x00149042: or dword ptr [edx + 0x5b], esi; lea eax, dword ptr [eax + 8]; pop edi; ret; 
0x00148022: or dword ptr [edx + 0x5b], esi; lea eax, dword ptr [edi + 8]; pop edi; ret; 
0x0012784b: or dword ptr [edx + 0x74], edi; or dword ptr [ebx + 0x5f5e24c4], eax; ret; 
0x0002e8c8: or dword ptr [edx + esi*4], eax; xor eax, eax; pop esi; ret; 
0x0019551d: or dword ptr [edx - 0xa], eax; jmp dword ptr [edx]; 
0x00186e2d: or dword ptr [edx - 0xe], esi; jmp dword ptr [edx]; 
0x000e9a76: or dword ptr [edx], 0x8000; add esp, 0x18; mov al, 1; pop ebx; ret; 
0x0017569e: or dword ptr [edx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00003082: or dword ptr [edx], ebx; out 0x28, eax; scasb al, byte ptr es:[edi]; mov ah, byte ptr [edx - 0x3e]; mov esi, 0x614a3e5c; call dword ptr [ecx]; 
0x0017399b: or dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0006b680: or dword ptr [esi + 0x3c], 8; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00095773: or dword ptr [esi + 0xf], esp; xlatb; ret 0xc085; 
0x001482b3: or dword ptr [esi + 0xf], esp; xlatb; rol dword ptr [ebp + 0x30850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x000957e3: or dword ptr [esi + 0xf], esp; xlatb; rol dword ptr [ebp + 0x317475c0], -0x40; ret; 
0x0007c3fb: or dword ptr [esi + eax*8 - 0x12], 0xffffffff; pop ebx; ret; 
0x000ba585: or dword ptr [esi], 0; ret 0xe87; 
0x00064f28: or dword ptr [esi], 0x20; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0006cbbb: or dword ptr [esi], 0x20; mov esi, dword ptr [esp + 0x34]; add esp, 0x3c; ret; 
0x000bad05: or dword ptr [esi], 0x2bd88900; test byte ptr [ebx - 0xe82e0], dh; jmp eax; 
0x0007230c: or dword ptr [esi], 1; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000739e8: or dword ptr [esi], 8; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000e217c: or dword ptr [esp + eax*4], 0xfffffffb; dec dword ptr [edi]; inc esp; ret 0x45f6; 
0x0007e3ab: or dword ptr [esp + edx*2 - 0x12], 0xffffffff; pop ebx; ret; 
0x0019630e: or eax, 0x140e0a01; inc ebx; ret; 
0x0011c422: or eax, 0x14245c8b; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000d98d2: or eax, 0x1424748b; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00023184: or eax, 0x18153365; add byte ptr [eax], al; add cl, al; ret 0x8909; 
0x00087589: or eax, 0x200850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00127ee2: or eax, 0x26748d90; add byte ptr [ecx], bh; ret 0xc789; 
0x00187f37: or eax, 0x3874305; inc edx; add dword ptr [0x5d030486], 6; ret; 
0x00149072: or eax, 0x408d2b72; or al, 0x5f; ret; 
0x001841b6: or eax, 0x41140e0a; ret; 
0x000d192a: or eax, 0x424748b; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00148052: or eax, 0x478d2b72; or al, 0x5f; ret; 
0x00187d7f: or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; add al, 0xa; ret; 
0x0016f97f: or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; daa; add dword ptr [edx], ecx; ret; 
0x00172c13: or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; dec edi; add dword ptr [edx], ecx; ret; 
0x00171417: or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; dec esp; add ecx, dword ptr [edx]; ret; 
0x00184737: or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; imul eax, dword ptr [ecx], 0xa; ret; 
0x0018d983: or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; insd dword ptr es:[edi], dx; add dword ptr [edx], ecx; ret; 
0x00177e6b: or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; int1; add dword ptr [edx], ecx; ret; 
0x001984ab: or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; push eax; add dword ptr [edx], ecx; ret; 
0x00187f67: or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; push ebx; add cl, byte ptr [edx]; ret; 
0x00195faf: or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; push ebx; add dword ptr [edx], ecx; ret; 
0x0018a3bb: or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; pushfd; add dword ptr [edx], ecx; ret; 
0x00187c33: or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; xchg byte ptr [edx + ecx], al; ret; 
0x0016fbb7: or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; xchg eax, ebx; add cl, byte ptr [edx]; ret; 
0x0019650b: or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; xchg eax, esi; add dword ptr [edx], ecx; ret; 
0x00195df7: or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; arpl word ptr [edx], cx; ret; 
0x00197007: or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; dec byte ptr [edx]; ret; 
0x00187a83: or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; fisttp qword ptr [edx]; ret; 
0x00195e27: or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; jno 0x195e3d; ret; 
0x0019364b: or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; loope 0x193661; ret; 
0x0018c73f: or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; mov cs, word ptr [edx]; ret; 
0x0019178b: or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add edi, dword ptr [eax + 0xa]; ret; 
0x00172527: or eax, 0x5834605; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; pop edi; add dword ptr [edx], ecx; ret; 
0x0018c3e7: or eax, 0x5834605; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; fmul qword ptr [edx]; ret; 
0x00190f87: or eax, 0x5834905; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; fld dword ptr [edx + ecx]; ret; 
0x0018cb2f: or eax, 0x5834905; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; rol byte ptr [edx], 0xa; ret; 
0x001759b7: or eax, 0x5834905; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; mov cs, word ptr [edx]; ret; 
0x0017e243: or eax, 0x5834905; xchg byte ptr [edi + eax*4], al; add edi, dword ptr [ebx + 0xa]; ret; 
0x0018458f: or eax, 0x5834905; xchg byte ptr [edi + eax*4], al; add edi, dword ptr [ecx + 0xa]; ret; 
0x001711b7: or eax, 0x5834905; xchg byte ptr [edi + eax*4], al; add esi, dword ptr [edi + 0xa]; ret; 
0x0017e1db: or eax, 0x5834c05; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; add al, 0xa; ret; 
0x001729b7: or eax, 0x5834c05; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; cmpsd dword ptr [esi], dword ptr es:[edi]; add dword ptr [edx], ecx; ret; 
0x00171177: or eax, 0x5834c05; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; inc esp; add dword ptr [edx], ecx; ret; 
0x00173eeb: or eax, 0x5834c05; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; lar ecx, word ptr [edx]; ret; 
0x00174a47: or eax, 0x5834c05; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; pop ecx; add al, 0xa; ret; 
0x00198877: or eax, 0x5834c05; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; salc; add cl, byte ptr [edx]; ret; 
0x0018d5ff: or eax, 0x5834c05; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; xchg byte ptr [edx], cl; ret; 
0x00190cdf: or eax, 0x5834c05; xchg byte ptr [edi + eax*4], al; add edx, dword ptr [esi + 0xa]; ret; 
0x0018f1f7: or eax, 0x5834f05; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; wait; add cl, byte ptr [edx]; ret; 
0x000f079a: or eax, 0x5b4cc483; pop esi; pop edi; pop ebp; ret; 
0x0008f2e1: or eax, 0x5f1d478d; pop esi; pop ebx; ret; 
0x000b9066: or eax, 0x68; nop; lea esi, dword ptr [esi]; ret; 
0x00159489: or eax, 0x73950000; ret 0x48; 
0x0001aef1: or eax, 0x74c08500; adc dword ptr [ebx + 0x4408b00], ecx; add esp, 0x28; pop ebx; ret; 
0x0008dbe8: or eax, 0x77f0ff3; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x00094d7b: or eax, 0x7f0ff3; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000918b8: or eax, 0x7f0ff3; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00124962: or eax, 0x81000054; ret; 
0x00119962: or eax, 0x81000104; ret; 
0x000eb462: or eax, 0x810003e9; ret; 
0x000ab362: or eax, 0x810007ea; ret; 
0x000a7c62: or eax, 0x81000821; ret; 
0x00099a62: or eax, 0x81000903; ret; 
0x00097d62: or eax, 0x81000920; ret; 
0x00083762: or eax, 0x81000a66; ret; 
0x0007e362: or eax, 0x81000aba; ret; 
0x0007d062: or eax, 0x81000acd; ret; 
0x0007bf62: or eax, 0x81000ade; ret; 
0x0007be62: or eax, 0x81000adf; ret; 
0x00077362: or eax, 0x81000b2a; ret; 
0x0006e562: or eax, 0x81000bb8; ret; 
0x00033e62: or eax, 0x81000f5f; ret; 
0x00033962: or eax, 0x81000f64; ret; 
0x00023e62: or eax, 0x8100105f; ret; 
0x00023862: or eax, 0x81001065; ret; 
0x0008d597: or eax, 0x812850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0014b362: or eax, 0x81fffdea; ret; 
0x0014af62: or eax, 0x81fffdee; ret; 
0x0014ac62: or eax, 0x81fffdf1; ret; 
0x0012b062: or eax, 0x81ffffed; ret; 
0x0012a862: or eax, 0x81fffff5; ret; 
0x000918c1: or eax, 0x824448b; pop esi; ret; 
0x0011b492: or eax, 0x89000000; add al, 0x24; call dword ptr [edx + 0x14]; 
0x000df440: or eax, 0x89000000; out dx, eax; xchg edi, ebx; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0008ec0a: or eax, 0x89f850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0007dd0b: or eax, 0x8b1c0300; add edx, ecx; add esi, ecx; jmp ebx; 
0x00134ce0: or eax, 0x8b1c035f; jmp ebx; 
0x000f0608: or eax, 0x8d000000; dec esp; and al, 4; call dword ptr gs:[0x10]; 
0x00111222: or eax, 0x8d18c483; or esp, 0x32; add byte ptr [eax], al; pop ebx; ret; 
0x0005555d: or eax, 0x95c38100; ficom dword ptr [eax + eax]; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x12e; call dword ptr gs:[0x10]; 
0x00094d84: or eax, 0xc24448b; pop ebx; pop esi; ret; 
0x00002b70: or eax, 0xc8928a39; mov cl, 0xda; fnsave dword ptr [edx - 0x6b]; test word ptr [ebx - 0x2e], bp; cmp dl, byte ptr [edi]; ret; 
0x000882fb: or eax, 0xcd840f00; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00166de5: or eax, 0xe00fffd; std; jmp eax; 
0x00166e19: or eax, 0xe30fffd; std; jmp eax; 
0x00166dd9: or eax, 0xe3afffd; std; call dword ptr [eax + 0xc]; 
0x00166df9: or eax, 0xe70fffd; std; jmp dword ptr [eax]; 
0x00166e09: or eax, 0xea0fffd; std; call dword ptr [eax]; 
0x0004a15a: or eax, 0xeac0fa89; add al, byte ptr [ebx - 0x187cfe1e]; add dword ptr [ebx - 0x15745], ecx; jmp dword ptr [ebp - 0x75]; 
0x00087586: or eax, 0xf0d4a8d; test dword ptr [eax], eax; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0008ec07: or eax, 0xf0d7f8d; test dword ptr [edi + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x0008d594: or eax, 0xf0d7f8d; test dword ptr [edx], edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a754b: or eax, 0xfc09f0f; mov dh, 0xc0; lea eax, dword ptr [eax + eax - 1]; pop esi; pop edi; ret; 
0x0016f6e6: or eax, 0xffeac46e; sbb al, 0xd; test cl, 0xea; jmp dword ptr [edx]; 
0x0017101a: or eax, 0xffeb751d; sbb al, 0xd; adc dword ptr [ecx - 0x15], ebp; jmp dword ptr [edx]; 
0x00170fba: or eax, 0xffeb7585; sbb al, 0xd; fisubr dword ptr [eax - 0x15]; jmp dword ptr [edx]; 
0x00172dba: or eax, 0xffebe67a; sbb al, 0xd; aaa; in eax, 0xeb; jmp dword ptr [edx]; 
0x00173136: or eax, 0xffebe6c9; sbb al, 0xd; aas; out 0xeb, al; jmp dword ptr [edx]; 
0x00173106: or eax, 0xffebe6fd; sbb al, 0xd; pop ecx; out 0xeb, al; jmp dword ptr [edx]; 
0x001730d6: or eax, 0xffebe731; sbb al, 0xd; push esi; out 0xeb, al; jmp dword ptr [edx]; 
0x001730a6: or eax, 0xffebe765; sbb al, 0xd; pop esi; out 0xeb, al; jmp dword ptr [edx]; 
0x00173076: or eax, 0xffebe799; sbb al, 0xd; push eax; out 0xeb, al; jmp dword ptr [edx]; 
0x00173046: or eax, 0xffebe7cd; sbb al, 0xd; push eax; out 0xeb, al; jmp dword ptr [edx]; 
0x00173016: or eax, 0xffebe801; sbb al, 0xd; dec ebx; out 0xeb, al; jmp dword ptr [edx]; 
0x00172fe6: or eax, 0xffebe835; sbb al, 0xd; popal; out 0xeb, al; jmp dword ptr [edx]; 
0x00173dbe: or eax, 0xffec8f29; sbb al, 0xd; push cs; mov esp, gs; jmp dword ptr [edx]; 
0x00173d8e: or eax, 0xffec8f5d; sbb al, 0xd; cld; mov ebp, esp; jmp dword ptr [edx]; 
0x00173d2e: or eax, 0xffec8fc5; sbb al, 0xd; inc eax; mov ebp, esp; jmp dword ptr [edx]; 
0x00173cce: or eax, 0xffec902d; sbb al, 0xd; push esp; mov ch, ah; jmp dword ptr [edx]; 
0x001743be: or eax, 0xffecaebb; sbb al, 0xd; outsd dx, dword ptr [esi]; scasb al, byte ptr es:[edi]; in al, dx; jmp dword ptr [edx]; 
0x0017438e: or eax, 0xffecaef2; sbb al, 0xd; xchg eax, edx; scasb al, byte ptr es:[edi]; in al, dx; jmp dword ptr [edx]; 
0x00174806: or eax, 0xffed0a48; sbb al, 0xd; scasb al, byte ptr es:[edi]; or ebp, ebp; jmp dword ptr [edx]; 
0x001747d6: or eax, 0xffed0a80; sbb al, 0xd; aaa; or ebp, ebp; jmp dword ptr [edx]; 
0x00174776: or eax, 0xffed0af0; sbb al, 0xd; in eax, 0xb6; in al, dx; jmp dword ptr [edx]; 
0x00174ac6: or eax, 0xffed2cf4; sbb al, 0xd; inc eax; sub al, 0xed; jmp dword ptr [edx]; 
0x00174a96: or eax, 0xffed2d28; sbb al, 0xd; dec esp; sub al, 0xed; jmp dword ptr [edx]; 
0x00174bee: or eax, 0xffed46d0; sbb al, 0xd; popal; inc esp; in eax, dx; jmp dword ptr [edx]; 
0x00174eee: or eax, 0xffedccf8; sbb al, 0xd; aad 0x55; in eax, dx; jmp dword ptr [edx]; 
0x00174ebe: or eax, 0xffedcd30; sbb al, 0xd; xchg eax, edi; push ebp; in eax, dx; jmp dword ptr [edx]; 
0x001755de: or eax, 0xffedd594; sbb al, 0xd; push -0x2b; in eax, dx; jmp dword ptr [edx]; 
0x00175522: or eax, 0xffedd5b8; sbb al, 0xd; mov ss, ebp; in eax, dx; jmp dword ptr [edx]; 
0x001752fe: or eax, 0xffedd5b9; sbb al, 0xd; stosb byte ptr es:[edi], al; aad 0xed; jmp dword ptr [edx]; 
0x001754f2: or eax, 0xffedd5f3; sbb al, 0xd; mov ebp, ss; in eax, dx; jmp dword ptr [edx]; 
0x001753a2: or eax, 0xffedd5fa; sbb al, 0xd; rcl ch, 1; in eax, dx; jmp dword ptr [edx]; 
0x0017557e: or eax, 0xffedd607; sbb al, 0xd; dec edx; aad 0xed; jmp dword ptr [edx]; 
0x00175432: or eax, 0xffedd61d; sbb al, 0xd; mov dl, 0xd5; in eax, dx; jmp dword ptr [edx]; 
0x001754c2: or eax, 0xffedd62b; sbb al, 0xd; outsb dx, byte ptr [esi]; aad 0xed; jmp dword ptr [edx]; 
0x00175402: or eax, 0xffedd655; sbb al, 0xd; xchg eax, ecx; aad 0xed; jmp dword ptr [edx]; 
0x00175342: or eax, 0xffedd66d; sbb al, 0xd; test al, 0xd5; in eax, dx; jmp dword ptr [edx]; 
0x0017573a: or eax, 0xffee3263; sbb al, 0xd; cmp byte ptr [ecx], dh; out dx, al; jmp dword ptr [edx]; 
0x001756da: or eax, 0xffee32d3; sbb al, 0xd; mov bl, 0xdc; in eax, dx; jmp dword ptr [edx]; 
0x00175b46: or eax, 0xffeeb81c; sbb al, 0xd; iretd; mov bh, 0xee; jmp dword ptr [edx]; 
0x00175b16: or eax, 0xffeeb854; sbb al, 0xd; dec ebp; mov bh, 0xee; jmp dword ptr [edx]; 
0x00175ab6: or eax, 0xffeeb8bc; sbb al, 0xd; pushal; mov bh, 0xee; jmp dword ptr [edx]; 
0x00175a86: or eax, 0xffeeb8f4; sbb al, 0xd; push ebp; mov bh, 0xee; jmp dword ptr [edx]; 
0x00175d1a: or eax, 0xffeebaa8; sbb al, 0xd; jnp 0x175cdd; out dx, al; jmp dword ptr [edx]; 
0x00175daa: or eax, 0xffeebb43; sbb al, 0xd; mov ch, 0xba; out dx, al; jmp dword ptr [edx]; 
0x0017601e: or eax, 0xffeebe0c; sbb al, 0xd; jns 0x175fe4; out dx, al; jmp dword ptr [edx]; 
0x001761ce: or eax, 0xffeebe14; sbb al, 0xd; out 0xbd, eax; out dx, al; jmp dword ptr [edx]; 
0x00175fee: or eax, 0xffeebe44; sbb al, 0xd; xor al, 0xbd; out dx, al; jmp dword ptr [edx]; 
0x0017652e: or eax, 0xffeec22c; sbb al, 0xd; test al, 0xc1; out dx, al; jmp dword ptr [edx]; 
0x001764fe: or eax, 0xffeec264; sbb al, 0xd; sub al, cl; out dx, al; jmp dword ptr [edx]; 
0x001767ee: or eax, 0xffeec7d8; sbb al, 0xd; sub al, 0xc7; out dx, al; jmp dword ptr [edx]; 
0x00176672: or eax, 0xffeec7ef; sbb al, 0xd; pop ds; ret; 
0x001767be: or eax, 0xffeec810; sbb al, 0xd; mov al, 0xc6; out dx, al; jmp dword ptr [edx]; 
0x00176642: or eax, 0xffeec823; sbb al, 0xd; cmp al, dl; out dx, al; jmp dword ptr [edx]; 
0x001769ca: or eax, 0xffeec930; sbb al, 0xd; push es; leave; out dx, al; jmp dword ptr [edx]; 
0x0017687e: or eax, 0xffeec93f; sbb al, 0xd; or al, 0xee; jmp dword ptr [edx]; 
0x0017699a: or eax, 0xffeec96b; sbb al, 0xd; add cl, cl; out dx, al; jmp dword ptr [edx]; 
0x00176c06: or eax, 0xffeec990; sbb al, 0xd; pop ebx; leave; out dx, al; jmp dword ptr [edx]; 
0x00176b76: or eax, 0xffeec9b8; sbb al, 0xd; mov ecx, ecx; out dx, al; jmp dword ptr [edx]; 
0x00176bd6: or eax, 0xffeec9cb; sbb al, 0xd; push ebx; leave; out dx, al; jmp dword ptr [edx]; 
0x00176d16: or eax, 0xffeecb4e; sbb al, 0xd; and ebx, ecx; out dx, al; jmp dword ptr [edx]; 
0x00176eb6: or eax, 0xffeecb5e; sbb al, 0xd; xor al, 0xcb; out dx, al; jmp dword ptr [edx]; 
0x00176e86: or eax, 0xffeecb99; sbb al, 0xd; sbb al, 0xcb; out dx, al; jmp dword ptr [edx]; 
0x00176dc6: or eax, 0xffeecba8; sbb al, 0xd; add ebx, ecx; out dx, al; jmp dword ptr [edx]; 
0x00176e56: or eax, 0xffeecbd1; sbb al, 0xd; or cl, bl; out dx, al; jmp dword ptr [edx]; 
0x00177072: or eax, 0xffeecfbc; sbb al, 0xd; wait; iretd; out dx, al; jmp dword ptr [edx]; 
0x0017717a: or eax, 0xffeecfd0; sbb al, 0xd; xchg eax, ebp; iretd; out dx, al; jmp dword ptr [edx]; 
0x00177246: or eax, 0xffeecff8; sbb al, 0xd; into; iretd; out dx, al; jmp dword ptr [edx]; 
0x0017714a: or eax, 0xffeed00b; sbb al, 0xd; xchg eax, edi; iretd; out dx, al; jmp dword ptr [edx]; 
0x00177216: or eax, 0xffeed033; sbb al, 0xd; mov dh, 0xcf; out dx, al; jmp dword ptr [edx]; 
0x001771e6: or eax, 0xffeed06b; sbb al, 0xd; stosb byte ptr es:[edi], al; iretd; out dx, al; jmp dword ptr [edx]; 
0x0017756e: or eax, 0xffeed195; sbb al, 0xd; imul edx, ecx, -0x12; jmp dword ptr [edx]; 
0x0017753e: or eax, 0xffeed1d0; sbb al, 0xd; pop ebp; shr esi, 1; jmp dword ptr [edx]; 
0x001773f6: or eax, 0xffeed1e0; sbb al, 0xd; mov dh, 0xd1; out dx, al; jmp dword ptr [edx]; 
0x00177482: or eax, 0xffeed1f2; sbb al, 0xd; adc ecx, -0x12; jmp dword ptr [edx]; 
0x0017730c: or eax, 0xffeed201; and al, byte ptr [eax]; add byte ptr [eax + eax], bl; add byte ptr [edx + ebp], bh; add byte ptr [edi + ecx - 0x11], ah; call dword ptr [esi + 3]; 
0x0017750e: or eax, 0xffeed208; sbb al, 0xd; push edx; shr esi, 1; jmp dword ptr [edx]; 
0x00177306: or eax, 0xffeed22e; sbb al, 0xd; add edx, edx; out dx, al; jmp dword ptr [edx]; 
0x00177396: or eax, 0xffeed253; sbb al, 0xd; xchg eax, edx; shr esi, 1; jmp dword ptr [edx]; 
0x001772d6: or eax, 0xffeed266; sbb al, 0xd; pop edi; shr dh, 1; jmp dword ptr [edx]; 
0x0017777e: or eax, 0xffeed26b; sbb al, 0xd; inc ecx; shr dh, cl; jmp dword ptr [edx]; 
0x001776be: or eax, 0xffeed290; sbb al, 0xd; shr dh, cl; jmp dword ptr [edx]; 
0x001772a6: or eax, 0xffeed29e; sbb al, 0xd; push -0x30; out dx, al; jmp dword ptr [edx]; 
0x0017774e: or eax, 0xffeed2a6; sbb al, 0xd; inc ebp; shr dh, cl; jmp dword ptr [edx]; 
0x0017768e: or eax, 0xffeed2cb; sbb al, 0xd; dec esi; shr dh, cl; jmp dword ptr [edx]; 
0x0017771e: or eax, 0xffeed2de; sbb al, 0xd; and dl, dl; out dx, al; jmp dword ptr [edx]; 
0x0017765e: or eax, 0xffeed303; sbb al, 0xd; inc edx; shr dh, cl; jmp dword ptr [edx]; 
0x0017871e: or eax, 0xffeed736; sbb al, 0xd; or al, 0xd7; out dx, al; jmp dword ptr [edx]; 
0x001786ee: or eax, 0xffeed771; sbb al, 0xd; stc; salc; out dx, al; jmp dword ptr [edx]; 
0x001786be: or eax, 0xffeed7a9; sbb al, 0xd; cli; salc; out dx, al; jmp dword ptr [edx]; 
0x00177a12: or eax, 0xffeed834; sbb al, 0xd; or bl, al; out dx, al; jmp dword ptr [edx]; 
0x001779e2: or eax, 0xffeed86f; sbb al, 0xd; or al, 0xd8; out dx, al; jmp dword ptr [edx]; 
0x00177ace: or eax, 0xffeed8a5; sbb al, 0xd; jnp 0x177aaf; out dx, al; jmp dword ptr [edx]; 
0x001779b2: or eax, 0xffeed8a7; sbb al, 0xd; out 0xd7, al; out dx, al; jmp dword ptr [edx]; 
0x00177a9e: or eax, 0xffeed8e0; sbb al, 0xd; outsb dx, byte ptr [esi]; fsubr st(6); jmp dword ptr [edx]; 
0x00177a6e: or eax, 0xffeed918; sbb al, 0xd; xlatb; xlatb; out dx, al; jmp dword ptr [edx]; 
0x00177c4a: or eax, 0xffeeda82; sbb al, 0xd; sbb ebx, edx; out dx, al; jmp dword ptr [edx]; 
0x00177b5e: or eax, 0xffeedab7; sbb al, 0xd; mov bl, cl; out dx, al; jmp dword ptr [edx]; 
0x00177c1a: or eax, 0xffeedaba; sbb al, 0xd; cli; fldz; jmp dword ptr [edx]; 
0x00177d0a: or eax, 0xffeedabe; sbb al, 0xd; push -0x26; out dx, al; jmp dword ptr [edx]; 
0x00177b2e: or eax, 0xffeedaef; sbb al, 0xd; dec eax; fsubr st(6); jmp dword ptr [edx]; 
0x00177cda: or eax, 0xffeedaf6; sbb al, 0xd; jecxz 0x177cbc; out dx, al; jmp dword ptr [edx]; 
0x00178132: or eax, 0xffeedeaa; sbb al, 0xd; xchg eax, edi; fsubp st(6); jmp dword ptr [edx]; 
0x00179166: or eax, 0xffeeff94; sbb al, 0xd; push -1; out dx, al; jmp dword ptr [edx]; 
0x0017925e: or eax, 0xffeeff9b; sbb al, 0xd; jno 0x179266; out dx, al; jmp dword ptr [edx]; 
0x001792ce: or eax, 0xffeeffe8; sbb al, 0xd; xor bh, bh; out dx, al; jmp dword ptr [edx]; 
0x00178e6a: or eax, 0xffeeffec; sbb al, 0xd; out dx, al; jmp dword ptr [edx]; 
0x00179106: or eax, 0xffef0007; sbb al, 0xd; xor bh, bh; out dx, al; jmp dword ptr [edx]; 
0x001794fa: or eax, 0xffef005c; sbb al, 0xd; xor al, byte ptr [eax]; out dx, eax; jmp dword ptr [edx]; 
0x001797ca: or eax, 0xffef01ff; sbb al, 0xd; aad 1; out dx, eax; jmp dword ptr [edx]; 
0x0017990e: or eax, 0xffef0203; sbb al, 0xd; insb byte ptr es:[edi], dx; add edi, ebp; jmp dword ptr [edx]; 
0x0017962e: or eax, 0xffef0212; sbb al, 0xd; out 1, al; out dx, eax; jmp dword ptr [edx]; 
0x001796e6: or eax, 0xffef0219; sbb al, 0xd; out dx, eax; add edi, ebp; jmp dword ptr [edx]; 
0x0017979a: or eax, 0xffef023a; sbb al, 0xd; ret; 
0x001796b6: or eax, 0xffef0254; sbb al, 0xd; fld qword ptr [ecx]; out dx, eax; jmp dword ptr [edx]; 
0x0017976a: or eax, 0xffef0272; sbb al, 0xd; mov dl, 1; out dx, eax; jmp dword ptr [edx]; 
0x00179686: or eax, 0xffef028c; sbb al, 0xd; rol byte ptr [ecx], cl; out dx, eax; jmp dword ptr [edx]; 
0x001799fa: or eax, 0xffef25e9; sbb al, 0xd; out dx, eax; and bh, ch; jmp dword ptr [edx]; 
0x001799ca: or eax, 0xffef2621; sbb al, 0xd; pop ds; out dx, eax; jmp dword ptr [edx]; 
0x0017a224: or eax, 0xffef32d2; and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; sub byte ptr [ebx - 0x6c1a0000], 0xef; call dword ptr [eax]; 
0x0017a2b4: or eax, 0xffef336d; and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; adc byte ptr [eax + eax - 0x106c8200], ch; call dword ptr [eax]; 
0x0017a30e: or eax, 0xffef3972; sbb al, 0xd; leave; aaa; out dx, eax; jmp dword ptr [edx]; 
0x0017a2ae: or eax, 0xffef39da; sbb al, 0xd; insd dword ptr es:[edi], dx; xor ebp, edi; jmp dword ptr [edx]; 
0x0017a27e: or eax, 0xffef3a12; sbb al, 0xd; arpl word ptr [ebx], si; out dx, eax; jmp dword ptr [edx]; 
0x0017a24e: or eax, 0xffef3a4a; sbb al, 0xd; xor esi, dword ptr [ebx]; out dx, eax; jmp dword ptr [edx]; 
0x0017a21e: or eax, 0xffef3a7e; sbb al, 0xd; sal byte ptr [edx], cl; out dx, eax; jmp dword ptr [edx]; 
0x0017a1ee: or eax, 0xffef3ab6; sbb al, 0xd; mov dword ptr [ecx], esi; out dx, eax; jmp dword ptr [edx]; 
0x0017a1be: or eax, 0xffef3aea; sbb al, 0xd; and dh, byte ptr [ecx]; out dx, eax; jmp dword ptr [edx]; 
0x0017a18e: or eax, 0xffef3b22; sbb al, 0xd; xlatb; xor bh, ch; jmp dword ptr [edx]; 
0x0017a15e: or eax, 0xffef3b5a; sbb al, 0xd; xchg eax, edi; xor bh, ch; jmp dword ptr [edx]; 
0x0017a12e: or eax, 0xffef3b8e; sbb al, 0xd; sub ah, byte ptr [edx]; out dx, eax; jmp dword ptr [edx]; 
0x0017a06e: or eax, 0xffef3c66; sbb al, 0xd; and ah, byte ptr [ecx]; out dx, eax; jmp dword ptr [edx]; 
0x0017a03e: or eax, 0xffef3c9e; sbb al, 0xd; shl dword ptr [eax], cl; out dx, eax; jmp dword ptr [edx]; 
0x00179fde: or eax, 0xffef3d0a; sbb al, 0xd; jo 0x17a007; out dx, eax; jmp dword ptr [edx]; 
0x00179fae: or eax, 0xffef3d3e; sbb al, 0xd; inc ebx; and bh, ch; jmp dword ptr [edx]; 
0x00179f7e: or eax, 0xffef3d72; sbb al, 0xd; push edx; and bh, ch; jmp dword ptr [edx]; 
0x0017b948: or eax, 0xffef7f6d; and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; ret 0; 
0x0017b8e8: or eax, 0xffef7faa; and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; inc esp; ret 0; 
0x0017ba98: or eax, 0xffef8078; and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; hlt; ret; 
0x0017ba38: or eax, 0xffef80b5; and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; xchg eax, esp; ret; 
0x0017beb2: or eax, 0xffef8da5; sbb al, 0xd; aaa; xchg edi, ebp; jmp dword ptr [edx]; 
0x0017be82: or eax, 0xffef8dd9; sbb al, 0xd; push esi; xchg edi, ebp; jmp dword ptr [edx]; 
0x0017be22: or eax, 0xffef8e45; sbb al, 0xd; dec ebx; xchg bh, ch; jmp dword ptr [edx]; 
0x0017bdf2: or eax, 0xffef8e7d; sbb al, 0xd; xchg eax, edx; test bh, ch; jmp dword ptr [edx]; 
0x0017bbe2: or eax, 0xffef90d5; sbb al, 0xd; xor al, 0x81; out dx, eax; jmp dword ptr [edx]; 
0x0017cbf2: or eax, 0xffef913c; sbb al, 0xd; loope 0x17cb88; out dx, eax; jmp dword ptr [edx]; 
0x0017bb82: or eax, 0xffef913d; sbb al, 0xd; jno 0x17bb0c; out dx, eax; jmp dword ptr [edx]; 
0x0017cbc2: or eax, 0xffef9170; sbb al, 0xd; out 0x8c, al; out dx, eax; jmp dword ptr [edx]; 
0x0017cb62: or eax, 0xffef91d8; sbb al, 0xd; sbb al, 0x8d; out dx, eax; jmp dword ptr [edx]; 
0x0017bac2: or eax, 0xffef921d; sbb al, 0xd; in al, 0x80; out dx, eax; jmp dword ptr [edx]; 
0x0017cad2: or eax, 0xffef9274; sbb al, 0xd; cli; mov edi, ebp; jmp dword ptr [edx]; 
0x0017ba32: or eax, 0xffef92b9; sbb al, 0xd; mov ch, 0x80; out dx, eax; jmp dword ptr [edx]; 
0x0017b912: or eax, 0xffef9400; sbb al, 0xd; test dword ptr [edi - 0x11], edi; jmp dword ptr [edx]; 
0x0017b852: or eax, 0xffef94d9; sbb al, 0xd; adc al, 0x7d; out dx, eax; jmp dword ptr [edx]; 
0x0017b822: or eax, 0xffef9511; sbb al, 0xd; sub byte ptr [ebp - 0x11], bh; jmp dword ptr [edx]; 
0x0017b7f2: or eax, 0xffef9549; sbb al, 0xd; in eax, 0x7b; out dx, eax; jmp dword ptr [edx]; 
0x0017b792: or eax, 0xffef95b1; sbb al, 0xd; hlt; jns 0x17b78b; jmp dword ptr [edx]; 
0x0017b762: or eax, 0xffef95e5; sbb al, 0xd; and byte ptr [edx - 0x11], bh; jmp dword ptr [edx]; 
0x0017b732: or eax, 0xffef9619; sbb al, 0xd; fdivr qword ptr [ecx - 0x11]; jmp dword ptr [edx]; 
0x0017b702: or eax, 0xffef9651; sbb al, 0xd; in al, dx; jns 0x17b6fb; jmp dword ptr [edx]; 
0x0017b6d2: or eax, 0xffef9685; sbb al, 0xd; sar dword ptr [ecx - 0x11], 1; jmp dword ptr [edx]; 
0x0017b642: or eax, 0xffef9725; sbb al, 0xd; bnd jns 0x17b63b; jmp dword ptr [edx]; 
0x0017b612: or eax, 0xffef975d; sbb al, 0xd; adc edi, dword ptr [edx - 0x11]; jmp dword ptr [edx]; 
0x0017b5b2: or eax, 0xffef97c9; sbb al, 0xd; sub al, 0x76; out dx, eax; jmp dword ptr [edx]; 
0x0017b582: or eax, 0xffef97fd; sbb al, 0xd; mov bl, 0x74; out dx, eax; jmp dword ptr [edx]; 
0x0017b522: or eax, 0xffef9865; sbb al, 0xd; inc ebx; outsd dx, dword ptr [esi]; out dx, eax; jmp dword ptr [edx]; 
0x0017b4f2: or eax, 0xffef9899; sbb al, 0xd; pop ebp; outsd dx, dword ptr [esi]; out dx, eax; jmp dword ptr [edx]; 
0x0017b4c2: or eax, 0xffef98cd; sbb al, 0xd; test dword ptr [edi - 0x11], ebp; jmp dword ptr [edx]; 
0x0017b492: or eax, 0xffef9905; sbb al, 0xd; scasb al, byte ptr es:[edi]; outsb dx, byte ptr [esi]; out dx, eax; jmp dword ptr [edx]; 
0x0017b462: or eax, 0xffef993d; sbb al, 0xd; pop ss; outsb dx, byte ptr [esi]; out dx, eax; jmp dword ptr [edx]; 
0x0017b432: or eax, 0xffef9975; sbb al, 0xd; cmp al, 0x6e; out dx, eax; jmp dword ptr [edx]; 
0x0017b402: or eax, 0xffef99a9; sbb al, 0xd; push edx; outsb dx, byte ptr [esi]; out dx, eax; jmp dword ptr [edx]; 
0x0017b3d2: or eax, 0xffef99dd; sbb al, 0xd; insd dword ptr es:[edi], dx; out dx, eax; jmp dword ptr [edx]; 
0x0017b3a2: or eax, 0xffef9a11; sbb al, 0xd; and byte ptr [ebp - 0x11], ch; jmp dword ptr [edx]; 
0x0017b372: or eax, 0xffef9a45; sbb al, 0xd; push es; insd dword ptr es:[edi], dx; out dx, eax; jmp dword ptr [edx]; 
0x0017b342: or eax, 0xffef9a79; sbb al, 0xd; and ebp, dword ptr [ebp - 0x11]; jmp dword ptr [edx]; 
0x0017b312: or eax, 0xffef9aad; sbb al, 0xd; out 0x6c, eax; out dx, eax; jmp dword ptr [edx]; 
0x0017b2e2: or eax, 0xffef9ae1; sbb al, 0xd; sti; insb byte ptr es:[edi], dx; out dx, eax; jmp dword ptr [edx]; 
0x0017b2b2: or eax, 0xffef9b15; sbb al, 0xd; sbb ebp, dword ptr [ebp - 0x11]; jmp dword ptr [edx]; 
0x0017b282: or eax, 0xffef9b49; sbb al, 0xd; and byte ptr [ebp - 0x11], ch; jmp dword ptr [edx]; 
0x0017b222: or eax, 0xffef9bb1; sbb al, 0xd; sub dword ptr [eax - 0x11], ebp; jmp dword ptr [edx]; 
0x0017b1f2: or eax, 0xffef9be5; sbb al, 0xd; pushal; out dx, eax; jmp dword ptr [edx]; 
0x0017b1c2: or eax, 0xffef9c19; sbb al, 0xd; jno 0x17b230; out dx, eax; jmp dword ptr [edx]; 
0x0017b192: or eax, 0xffef9c4d; sbb al, 0xd; std; dec edi; out dx, eax; jmp dword ptr [edx]; 
0x0017b162: or eax, 0xffef9c85; sbb al, 0xd; add al, 0x50; out dx, eax; jmp dword ptr [edx]; 
0x0017b102: or eax, 0xffef9cf4; sbb al, 0xd; inc esp; dec esi; out dx, eax; jmp dword ptr [edx]; 
0x0017b0d2: or eax, 0xffef9d2b; sbb al, 0xd; mov dword ptr [ebp - 0x11], ecx; jmp dword ptr [edx]; 
0x0017b0a2: or eax, 0xffef9d62; sbb al, 0xd; loope 0x17b0eb; out dx, eax; jmp dword ptr [edx]; 
0x0017b072: or eax, 0xffef9d96; sbb al, 0xd; add eax, dword ptr [ecx - 0x11]; jmp dword ptr [edx]; 
0x0017b012: or eax, 0xffef9e06; sbb al, 0xd; test dword ptr [ebx], edi; out dx, eax; jmp dword ptr [edx]; 
0x00184aea: or eax, 0xfff19df8; sbb al, 0xd; into; popfd; int1; jmp dword ptr [edx]; 
0x00184a2e: or eax, 0xfff19e1c; sbb al, 0xd; popfd; int1; jmp dword ptr [edx]; 
0x0018496e: or eax, 0xfff19e46; sbb al, 0xd; sbb al, 0x9e; int1; jmp dword ptr [edx]; 
0x001848ae: or eax, 0xfff19e5e; sbb al, 0xd; xor al, 0x9e; int1; jmp dword ptr [edx]; 
0x00184a8a: or eax, 0xfff19e6b; sbb al, 0xd; scasb al, byte ptr es:[edi]; popfd; int1; jmp dword ptr [edx]; 
0x0018493e: or eax, 0xfff19e81; sbb al, 0xd; push ss; sahf; int1; jmp dword ptr [edx]; 
0x0018487e: or eax, 0xfff19e99; sbb al, 0xd; sahf; int1; jmp dword ptr [edx]; 
0x0018490e: or eax, 0xfff19eb9; sbb al, 0xd; cmc; popfd; int1; jmp dword ptr [edx]; 
0x0018484e: or eax, 0xfff19ed1; sbb al, 0xd; or al, 0x9e; int1; jmp dword ptr [edx]; 
0x00185456: or eax, 0xfff1c1e8; sbb al, 0xd; test al, 0xf1; jmp dword ptr [edx]; 
0x00185366: or eax, 0xfff1c2ec; sbb al, 0xd; in eax, 0xbf; int1; jmp dword ptr [edx]; 
0x00185e26: or eax, 0xfff25a5d; sbb al, 0xd; add ebx, dword ptr [edx - 0xe]; jmp dword ptr [edx]; 
0x0018663e: or eax, 0xfff267b1; sbb al, 0xd; cmp ah, byte ptr [edi - 0xe]; jmp dword ptr [edx]; 
0x001866ca: or eax, 0xfff26828; sbb al, 0xd; adc byte ptr [edi - 0xe], ah; jmp dword ptr [edx]; 
0x0018680a: or eax, 0xfff269bd; sbb al, 0xd; adc ch, byte ptr [eax - 0xe]; jmp dword ptr [edx]; 
0x00186bee: or eax, 0xfff27122; sbb al, 0xd; nop; jo 0x186bea; jmp dword ptr [edx]; 
0x00186cfe: or eax, 0xfff27159; sbb al, 0xd; sbb byte ptr [eax - 0xe], dh; jmp dword ptr [edx]; 
0x00186bbe: or eax, 0xfff2715a; sbb al, 0xd; xchg eax, ebp; jo 0x186bba; jmp dword ptr [edx]; 
0x00186e26: or eax, 0xfff27232; sbb al, 0xd; or dword ptr [edx - 0xe], esi; jmp dword ptr [edx]; 
0x00186df6: or eax, 0xfff27269; sbb al, 0xd; bnd jno 0x186df2; jmp dword ptr [edx]; 
0x00187022: or eax, 0xfff27449; sbb al, 0xd; sal dword ptr [edx - 0xe], cl; jmp dword ptr [edx]; 
0x0018728e: or eax, 0xfff27aec; sbb al, 0xd; pop ss; jp 0x18728a; jmp dword ptr [edx]; 
0x0018a36a: or eax, 0xfff45a0c; sbb al, 0xd; in eax, dx; push esi; hlt; jmp dword ptr [edx]; 
0x0018a33a: or eax, 0xfff45a40; sbb al, 0xd; rcl byte ptr [esi - 0xc], 1; jmp dword ptr [edx]; 
0x00188926: or eax, 0xfff4635e; sbb al, 0xd; fldenv dword ptr [eax - 0xc]; jmp dword ptr [edx]; 
0x001888c6: or eax, 0xfff463c6; sbb al, 0xd; test byte ptr [ecx - 0xc], bl; jmp dword ptr [edx]; 
0x00188896: or eax, 0xfff463fa; sbb al, 0xd; sti; push edi; hlt; jmp dword ptr [edx]; 
0x0018ca46: or eax, 0xfff5168e; sbb al, 0xd; test al, 0x10; cmc; jmp dword ptr [edx]; 
0x0018ca16: or eax, 0xfff516c6; sbb al, 0xd; xor ecx, dword ptr [esi]; cmc; jmp dword ptr [edx]; 
0x0018d02a: or eax, 0xfff52729; sbb al, 0xd; cmc; jmp dword ptr [edx]; 
0x0018cffa: or eax, 0xfff5275d; sbb al, 0xd; inc eax; cmc; jmp dword ptr [edx]; 
0x0018cf9a: or eax, 0xfff527c5; sbb al, 0xd; ret 0xf522; 
0x0018cf6a: or eax, 0xfff527f9; sbb al, 0xd; cmp bl, byte ptr [esi]; cmc; jmp dword ptr [edx]; 
0x0018f90a: or eax, 0xfff579fa; sbb al, 0xd; sar dword ptr [ecx - 0xb], 1; jmp dword ptr [edx]; 
0x0018f996: or eax, 0xfff57a74; sbb al, 0xd; std; jns 0x18f995; jmp dword ptr [edx]; 
0x0018f966: or eax, 0xfff57aa8; sbb al, 0xd; nop; jns 0x18f965; jmp dword ptr [edx]; 
0x0018fa36: or eax, 0xfff57afb; sbb al, 0xd; insb byte ptr es:[edi], dx; jp 0x18fa35; jmp dword ptr [edx]; 
0x0018fa06: or eax, 0xfff57b2f; sbb al, 0xd; cld; jns 0x18fa05; jmp dword ptr [edx]; 
0x0018fad6: or eax, 0xfff57bb1; sbb al, 0xd; dec edx; jnp 0x18fad5; jmp dword ptr [edx]; 
0x0018faa6: or eax, 0xfff57be5; sbb al, 0xd; movsb byte ptr es:[edi], byte ptr [esi]; jp 0x18faa5; jmp dword ptr [edx]; 
0x0018fb46: or eax, 0xfff57f10; sbb al, 0xd; dec esi; jnp 0x18fb45; jmp dword ptr [edx]; 
0x0018fcd6: or eax, 0xfff57f6d; sbb al, 0xd; add dword ptr [edi - 0xb], edi; jmp dword ptr [edx]; 
0x0018fc16: or eax, 0xfff5803d; sbb al, 0xd; mov byte ptr [esi - 0xb], bh; jmp dword ptr [edx]; 
0x0018ff06: or eax, 0xfff584ec; sbb al, 0xd; popfd; test ch, dh; jmp dword ptr [edx]; 
0x001901b6: or eax, 0xfff5862c; sbb al, 0xd; mov ch, 0x85; cmc; jmp dword ptr [edx]; 
0x00190186: or eax, 0xfff58660; sbb al, 0xd; dec eax; test ebp, esi; jmp dword ptr [edx]; 
0x0019001e: or eax, 0xfff58665; sbb al, 0xd; out dx, eax; test ebp, esi; jmp dword ptr [edx]; 
0x0018ffee: or eax, 0xfff58699; sbb al, 0xd; in al, dx; test ebp, esi; jmp dword ptr [edx]; 
0x00190256: or eax, 0xfff586cc; sbb al, 0xd; inc edi; xchg ch, dh; jmp dword ptr [edx]; 
0x00190226: or eax, 0xfff58700; sbb al, 0xd; mov ah, 0x85; cmc; jmp dword ptr [edx]; 
0x0018ff8e: or eax, 0xfff58701; sbb al, 0xd; jnp 0x18ff1b; cmc; jmp dword ptr [edx]; 
0x001902c6: or eax, 0xfff587ad; sbb al, 0xd; insb byte ptr es:[edi], dx; xchg ch, dh; jmp dword ptr [edx]; 
0x001904f6: or eax, 0xfff58935; sbb al, 0xd; leave; mov ch, dh; jmp dword ptr [edx]; 
0x00190466: or eax, 0xfff589d1; sbb al, 0xd; pop ebx; mov ch, dh; jmp dword ptr [edx]; 
0x00190436: or eax, 0xfff58a05; sbb al, 0xd; push eax; mov ch, dh; jmp dword ptr [edx]; 
0x0019168a: or eax, 0xfff5da3a; sbb al, 0xd; xchg eax, edi; fprem1; jmp dword ptr [edx]; 
0x0019165a: or eax, 0xfff5da6e; sbb al, 0xd; dec ecx; fprem1; jmp dword ptr [edx]; 
0x00191766: or eax, 0xfff5da8c; sbb al, 0xd; xlatb; fprem1; jmp dword ptr [edx]; 
0x00191736: or eax, 0xfff5dac0; sbb al, 0xd; rcr cl, 0xf5; jmp dword ptr [edx]; 
0x00191e9e: or eax, 0xfff5fb52; sbb al, 0xd; scasb al, byte ptr es:[edi]; cli; cmc; jmp dword ptr [edx]; 
0x00191e6e: or eax, 0xfff5fb86; sbb al, 0xd; mov dh, 0xfa; cmc; jmp dword ptr [edx]; 
0x00191e0e: or eax, 0xfff5fbee; sbb al, 0xd; pop es; cli; cmc; jmp dword ptr [edx]; 
0x00191bba: or eax, 0xfff5fc25; sbb al, 0xd; adc ecx, edi; cmc; jmp dword ptr [edx]; 
0x00191fde: or eax, 0xfff60a55; sbb al, 0xd; add dh, dh; jmp dword ptr [edx]; 
0x00191fae: or eax, 0xfff60a89; sbb al, 0xd; out dx, al; add esi, esi; jmp dword ptr [edx]; 
0x00192cbe: or eax, 0xfff617d6; sbb al, 0xd; imul edx, dword ptr [edi], -0xa; jmp dword ptr [edx]; 
0x00193032: or eax, 0xfff61a1d; sbb al, 0xd; xchg eax, ecx; sbb esi, esi; jmp dword ptr [edx]; 
0x001932de: or eax, 0xfff61ad8; sbb al, 0xd; stosd dword ptr es:[edi], eax; sbb dh, dh; jmp dword ptr [edx]; 
0x0019327e: or eax, 0xfff61b48; sbb al, 0xd; pushal; sbb dh, dh; jmp dword ptr [edx]; 
0x001937ce: or eax, 0xfff625ba; sbb al, 0xd; out dx, al; and al, 0xf6; jmp dword ptr [edx]; 
0x0019370e: or eax, 0xfff625c1; sbb al, 0xd; and al, 0xf6; jmp dword ptr [edx]; 
0x00193a0e: or eax, 0xfff6261d; sbb al, 0xd; clc; and al, 0xf6; jmp dword ptr [edx]; 
0x0019404e: or eax, 0xfff62a52; sbb al, 0xd; iretd; sub esi, esi; jmp dword ptr [edx]; 
0x001943d2: or eax, 0xfff634da; sbb al, 0xd; pop edx; xor al, 0xf6; jmp dword ptr [edx]; 
0x0019454e: or eax, 0xfff63558; sbb al, 0xd; in al, dx; xor al, 0xf6; jmp dword ptr [edx]; 
0x00194ad2: or eax, 0xfff63a60; sbb al, 0xd; dec eax; cmp esi, esi; jmp dword ptr [edx]; 
0x00194cd6: or eax, 0xfff63c7f; sbb al, 0xd; pop es; cmp esi, esi; jmp dword ptr [edx]; 
0x00194f3a: or eax, 0xfff63df0; sbb al, 0xd; sar byte ptr [esi + esi*8], 1; jmp dword ptr [edx]; 
0x001952fe: or eax, 0xfff6422f; sbb al, 0xd; ret; 
0x00195446: or eax, 0xfff64248; sbb al, 0xd; xor byte ptr [ecx - 0xa], al; jmp dword ptr [edx]; 
0x00195516: or eax, 0xfff64280; sbb al, 0xd; or dword ptr [edx - 0xa], eax; jmp dword ptr [edx]; 
0x001955e6: or eax, 0xfff643b3; sbb al, 0xd; cmp eax, dword ptr [edx - 0xa]; jmp dword ptr [edx]; 
0x001955b6: or eax, 0xfff643e7; sbb al, 0xd; xor al, byte ptr [edx - 0xa]; jmp dword ptr [edx]; 
0x00195a42: or eax, 0xfff6553d; sbb al, 0xd; mov dword ptr [ebp - 0xa], ecx; jmp dword ptr [edx]; 
0x001959e2: or eax, 0xfff655a5; sbb al, 0xd; adc byte ptr [ebp - 0xa], cl; jmp dword ptr [edx]; 
0x001989aa: or eax, 0xfff73179; sbb al, 0xd; cvttps2pi mm6, xmm7; jmp dword ptr [edx]; 
0x0018620a: or eax, 0xfff9d89f; sbb al, 0xd; dec ebx; fdivr st(1); jmp dword ptr [edx]; 
0x0018609a: or eax, 0xfff9d930; sbb al, 0xd; xchg eax, esi; fdivr st(1); jmp dword ptr [edx]; 
0x001915fa: or eax, 0xfffac46c; sbb al, 0xd; add al, ah; cli; jmp dword ptr [edx]; 
0x00178076: or eax, 0xfffad8ad; sbb al, 0xd; sbb eax, -6; jmp dword ptr [edx]; 
0x00178046: or eax, 0xfffad8e8; sbb al, 0xd; imul ebx, eax, -6; jmp dword ptr [edx]; 
0x00178016: or eax, 0xfffad920; sbb al, 0xd; std; xlatb; cli; jmp dword ptr [edx]; 
0x00178192: or eax, 0xfffadc4a; sbb al, 0xd; out dx, al; fsqrt; jmp dword ptr [edx]; 
0x0017835a: or eax, 0xfffadc5a; sbb al, 0xd; xor ah, bl; cli; jmp dword ptr [edx]; 
0x00178162: or eax, 0xfffadc7e; sbb al, 0xd; out dx, al; fsqrt; jmp dword ptr [edx]; 
0x0017859a: or eax, 0xfffadc84; sbb al, 0xd; pop edx; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x001784de: or eax, 0xfffadc88; sbb al, 0xd; pop esi; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x0017841e: or eax, 0xfffadc8f; sbb al, 0xd; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x0017832a: or eax, 0xfffadc95; sbb al, 0xd; inc edx; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x0017856a: or eax, 0xfffadcbf; sbb al, 0xd; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x001784ae: or eax, 0xfffadcc3; sbb al, 0xd; inc esp; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x001782fa: or eax, 0xfffadccd; sbb al, 0xd; mov dh, 0xdb; cli; jmp dword ptr [edx]; 
0x00178102: or eax, 0xfffadcf6; sbb al, 0xd; xchg eax, esi; fdivr st(2); jmp dword ptr [edx]; 
0x0017853a: or eax, 0xfffadcf7; sbb al, 0xd; push ds; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x0017847e: or eax, 0xfffadcfb; sbb al, 0xd; and bl, ah; cli; jmp dword ptr [edx]; 
0x001780d2: or eax, 0xfffadd2a; sbb al, 0xd; push edi; fdivr st(2); jmp dword ptr [edx]; 
0x0017afe2: or eax, 0xfffca86c; sbb al, 0xd; dec esp; test al, 0xfc; jmp dword ptr [edx]; 
0x0017afb2: or eax, 0xfffca8a3; sbb al, 0xd; push -0x58; cld; jmp dword ptr [edx]; 
0x0002d7b4: or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x000e29e0: or eax, 0xffffffb8; dec dword ptr [edi]; test dword ptr [esi + edi*8 + 0x568bffff], ecx; sbb al, 0xf6; ret 0x7501; 
0x000e1868: or eax, 0xffffffb8; dec dword ptr [edi]; test dword ptr [esi + edi*8 + 0x568bffff], esp; sbb al, 0xf6; ret 0x7501; 
0x0002e0e8: or eax, 0xffffffff; add esp, 8; ret; 
0x0002e219: or eax, 0xffffffff; pop ebx; ret; 
0x000ba0e3: or eax, 1; pop esi; pop edi; pop ebp; ret; 
0x000974d4: or eax, 1; pop esi; ret; 
0x00175ed6: or eax, dword ptr [eax]; adc al, 0; add byte ptr [eax], al; fsubr qword ptr [eax + eax]; sal al, 0xee; jmp dword ptr [edx]; 
0x0018eeb1: or eax, dword ptr [eax]; add byte ptr [eax + eax], ah; add byte ptr [eax], al; mov eax, 0xd40001fc; and esi, esi; jmp dword ptr [esi]; 
0x0018a47d: or eax, dword ptr [eax]; add byte ptr [eax + eax], ah; add byte ptr [eax], al; test byte ptr [edx - 0x8d7ffff], dh; hlt; call dword ptr [esi]; 
0x0017c8ad: or eax, dword ptr [eax]; add byte ptr [eax + eax], al; add byte ptr [esi + edx*8 - 0x20f80000], dh; out dx, eax; jmp dword ptr [esi]; 
0x0019ae91: or eax, dword ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; call 0xb719b154; mov ah, 0xf8; call dword ptr [eax]; 
0x00175d55: or eax, dword ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; lodsb al, byte ptr [esi]; add byte ptr [eax], al; ret; 
0x0019a411: or eax, dword ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; sbb byte ptr [edx - 0x742bfffe], dh; clc; jmp dword ptr [ebx]; 
0x00188a61: or eax, dword ptr [eax]; add byte ptr [eax + eax], dh; add byte ptr [eax], al; push 0xf4000198; sbb esp, esi; call eax; 
0x001921b5: or eax, dword ptr [eax]; add byte ptr [eax + eax], dl; add byte ptr [eax], al; mov esp, 0x8000022f; fdecstp; call dword ptr [ebp]; 
0x001986b5: or eax, dword ptr [eax]; add byte ptr [eax + eax], dl; add byte ptr [esp + edx*4 + 0x15700002], bh; clc; call dword ptr [esi]; 
0x00197791: or eax, dword ptr [eax]; add byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [eax - 0x5bfffd7b], bl; int 0xf7; jmp dword ptr [esi]; 
0x0019b675: or eax, dword ptr [eax]; add byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [esp + eax*8 + 2], bh; add al, dh; ret 0xfff8; 
0x000eb4d1: or eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000b8604: or eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f0552: or eax, dword ptr [eax]; add byte ptr [eax], al; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0579: or eax, dword ptr [eax]; add byte ptr [eax], al; lea ecx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0e47: or eax, dword ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0018b18b: or eax, dword ptr [eax]; add byte ptr [eax], al; nop; mov edi, 0x2f1c0001; cli; call dword ptr [ebp + 2]; 
0x001753b5: or eax, dword ptr [eax]; add byte ptr [eax], bl; add ebp, esi; call dword ptr [ecx]; 
0x0018b4e1: or eax, dword ptr [eax]; add byte ptr [eax], ch; add byte ptr [eax], al; add al, ch; ret 1; 
0x00178d7d: or eax, dword ptr [eax]; add byte ptr [eax], ch; add byte ptr [eax], al; add byte ptr [ebx + ebx*4 + 0x37a80000], al; out dx, eax; call dword ptr [edx]; 
0x00188a99: or eax, dword ptr [eax]; add byte ptr [eax], dh; add byte ptr [eax], al; add byte ptr [eax - 0x73fffe68], ah; sbb dh, ah; call dword ptr [edi]; 
0x0018b5d9: or eax, dword ptr [eax]; add byte ptr [eax], dl; add byte ptr [eax], al; add al, ah; ret; 
0x00179b7d: or eax, dword ptr [eax]; add byte ptr [eax], dl; add byte ptr [eax], al; add byte ptr [ecx + ebp*4 + 0x60480000], al; out dx, eax; call dword ptr [eax]; 
0x000a25b7: or eax, dword ptr [eax]; add byte ptr [ebx - 0x7a8bdbbc], cl; ror byte ptr [edi], 0x85; ret; 
0x0005f923: or eax, dword ptr [eax]; add byte ptr [ebx - 0xeb73], cl; inc dword ptr [ecx]; ret 0x9589; 
0x000725f6: or eax, dword ptr [eax]; add ebx, 0x1309fc; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x30]; 
0x0006f3df: or eax, dword ptr [eax]; add ebx, 0x133c13; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x48]; 
0x00073433: or eax, dword ptr [eax]; add ecx, 0x12fbbf; mov eax, dword ptr [ecx + 0x96c]; ret; 
0x00185f9a: or eax, dword ptr [eax]; and al, 0; add byte ptr [eax], al; mov al, byte ptr [0x2c00016d]; fcompi st(2); call dword ptr [edi]; 
0x00191a62: or eax, dword ptr [eax]; cmp al, 0; add byte ptr [eax], al; push 0x74000228; mov bh, 0xf6; jmp dword ptr [edi]; 
0x0000c3ea: or eax, dword ptr [eax]; jp 0xc3ee; add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; ret; 
0x000f0fa9: or eax, dword ptr [eax]; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000e6ce9: or eax, dword ptr [eax]; mov eax, dword ptr [ecx - 0xf8]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x000f2759: or eax, dword ptr [eax]; mov eax, dword ptr [ecx - 0xfc]; mov eax, dword ptr [eax + 0x1c]; ret; 
0x000eec18: or eax, dword ptr [eax]; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x000e6be7: or eax, dword ptr [eax]; mov ecx, edx; xchg ebx, ecx; mov eax, 0x2d; call dword ptr gs:[0x10]; 
0x000eeda3: or eax, dword ptr [eax]; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0xe1; call dword ptr gs:[0x10]; 
0x000eec96: or eax, dword ptr [eax]; mov edi, dword ptr [esp + 0x2c]; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x000e983b: or eax, dword ptr [eax]; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xc1; call dword ptr gs:[0x10]; 
0x000e989b: or eax, dword ptr [eax]; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xc2; call dword ptr gs:[0x10]; 
0x0000c6fa: or eax, dword ptr [eax]; mov edx, 0x12000000; add byte ptr [eax + eax], cl; ret 0x59; 
0x000e956e: or eax, dword ptr [eax]; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0x10f; call dword ptr gs:[0x10]; 
0x000e65be: or eax, dword ptr [eax]; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0x4b; call dword ptr gs:[0x10]; 
0x000e6a7e: or eax, dword ptr [eax]; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0x60; call dword ptr gs:[0x10]; 
0x000e657e: or eax, dword ptr [eax]; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0xbf; call dword ptr gs:[0x10]; 
0x00033d0c: or eax, dword ptr [eax]; mov word ptr [eax + 0xe], 1; xor eax, eax; ret; 
0x000f101b: or eax, dword ptr [eax]; or dh, 1; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00009f8a: or eax, dword ptr [eax]; push esi; add al, byte ptr [eax]; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0x11; 
0x00172d66: or eax, dword ptr [eax]; sub al, 0; add byte ptr [eax], al; mov esp, 0x7a000036; add ah, ch; call dword ptr [eax]; 
0x001954c2: or eax, dword ptr [eax]; sub al, 0; add byte ptr [eax], al; sbb byte ptr [esi + 2], bl; add byte ptr [ebp + esi - 9], cl; call dword ptr [eax]; 
0x000eefff: or eax, dword ptr [eax]; xchg ebx, edx; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x000eef5d: or eax, dword ptr [eax]; xchg edi, ebx; mov eax, 0x147; call dword ptr gs:[0x10]; 
0x000e6614: or eax, dword ptr [eax]; xchg edi, ebx; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000e5fa1: or eax, dword ptr [eax]; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000e8211: or eax, dword ptr [eax]; xchg edi, ebx; mov eax, 0x58; call dword ptr gs:[0x10]; 
0x00097c89: or eax, dword ptr [ebx + 0x4a8903ff]; add al, 0x75; add ecx, dword ptr [ecx + 0x5f5e084a]; ret; 
0x000a7cc4: or eax, dword ptr [ebx + 0x5f5e20c4]; pop ebp; ret; 
0x00183242: or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x0016f657: or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x0017403c: or eax, dword ptr [ebx + 0xa]; push cs; or al, 0x44; ret; 
0x0018cb86: or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x001971c2: or eax, dword ptr [ebx + 0xe]; adc al, 0x46; ret; 
0x000fc235: or eax, dword ptr [ebx - 0x2f76f73c]; pop ebx; ret; 
0x00196450: or eax, dword ptr [ebx]; aad 1; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00189958: or eax, dword ptr [ebx]; aam 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001842c8: or eax, dword ptr [ebx]; adc al, 0x10; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018419b: or eax, dword ptr [ebx]; add al, 0xa; push cs; adc al, 0x41; ret; 
0x0017c2da: or eax, dword ptr [ebx]; add al, 0xa; push cs; adc al, 0x43; ret; 
0x00189847: or eax, dword ptr [ebx]; add al, 3; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001988cf: or eax, dword ptr [ebx]; add byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00179c0c: or eax, dword ptr [ebx]; add byte ptr [edx], al; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0018a4e6: or eax, dword ptr [ebx]; add cl, byte ptr es:[edx]; push cs; adc al, 0x43; ret; 
0x001700bc: or eax, dword ptr [ebx]; add dword ptr [ecx], 0x41140e0a; ret; 
0x001701cb: or eax, dword ptr [ebx]; add dword ptr [edx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017015b: or eax, dword ptr [ebx]; add eax, 0x140e0a02; inc ecx; ret; 
0x00177358: or eax, dword ptr [ebx]; add word ptr [edx], cx; push cs; adc al, 0x43; ret; 
0x0017acfb: or eax, dword ptr [ebx]; and byte ptr [edx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0016ff7c: or eax, dword ptr [ebx]; and dword ptr [ecx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017e0e2: or eax, dword ptr [ebx]; and dword ptr [ecx], eax; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00173927: or eax, dword ptr [ebx]; cdq; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00190cf5: or eax, dword ptr [ebx]; cdq; add dword ptr [edx], ecx; ret; 
0x0017e259: or eax, dword ptr [ebx]; cmc; add cl, byte ptr [edx]; ret; 
0x00173ba0: or eax, dword ptr [ebx]; cmp al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00189130: or eax, dword ptr [ebx]; cmp byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00173bb8: or eax, dword ptr [ebx]; cmp byte ptr [edx], dl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018cd8a: or eax, dword ptr [ebx]; cmp dword ptr [ecx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017bfbb: or eax, dword ptr [ebx]; cmp eax, 0x140e0a01; inc ebx; ret; 
0x0016fcdd: or eax, dword ptr [ebx]; cmp eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001841b3: or eax, dword ptr [ebx]; dec byte ptr [0x41140e0a]; ret; 
0x00183ef4: or eax, dword ptr [ebx]; dec eax; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00173a90: or eax, dword ptr [ebx]; dec esi; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0018733a: or eax, dword ptr [ebx]; hlt; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00170060: or eax, dword ptr [ebx]; in al, 3; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0016ff64: or eax, dword ptr [ebx]; in al, dx; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0018a723: or eax, dword ptr [ebx]; in al, dx; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0017012c: or eax, dword ptr [ebx]; inc dword ptr [edx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00170030: or eax, dword ptr [ebx]; inc eax; add ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x00179bf4: or eax, dword ptr [ebx]; inc ebp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0018ce37: or eax, dword ptr [ebx]; inc ecx; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00196468: or eax, dword ptr [ebx]; inc ecx; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x00173aa8: or eax, dword ptr [ebx]; inc esi; or dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00175987: or eax, dword ptr [ebx]; inc esp; add ecx, dword ptr [edx]; push cs; adc al, 0x43; ret; 
0x0017d652: or eax, dword ptr [ebx]; iretd; add cl, byte ptr [edx]; push cs; adc al, 0x43; ret; 
0x0018406c: or eax, dword ptr [ebx]; lea eax, dword ptr [ebx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001706b1: or eax, dword ptr [ebx]; lea eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00175a1f: or eax, dword ptr [ebx]; mov al, 2; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018b6ab: or eax, dword ptr [ebx]; mov cl, 1; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00184084: or eax, dword ptr [ebx]; mov cs, word ptr [edi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017dc4b: or eax, dword ptr [ebx]; mov ebx, 0x140e0a03; inc ebx; ret; 
0x0016fec4: or eax, dword ptr [ebx]; mov edx, 0x140e0a02; inc ecx; ret; 
0x0019b7e3: or eax, dword ptr [ebx]; mov edx, 0x140e0a03; inc ecx; ret; 
0x00173b47: or eax, dword ptr [ebx]; movsb byte ptr es:[edi], byte ptr [esi]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0019192a: or eax, dword ptr [ebx]; movsd dword ptr es:[edi], dword ptr [esi]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x001709e4: or eax, dword ptr [ebx]; nop; add cl, byte ptr [edx]; ret; 
0x00173677: or eax, dword ptr [ebx]; or byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018a4fe: or eax, dword ptr [ebx]; or byte ptr [edx], al; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x0018ba16: or eax, dword ptr [ebx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017569c: or eax, dword ptr [ebx]; or dword ptr [edx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0019630c: or eax, dword ptr [ebx]; or eax, 0x140e0a01; inc ebx; ret; 
0x00192487: or eax, dword ptr [ebx]; or eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0018037f: or eax, dword ptr [ebx]; outsb dx, byte ptr [esi]; add cl, byte ptr [edx]; push cs; adc al, 0x43; ret; 
0x00196ee3: or eax, dword ptr [ebx]; pop ebx; add cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0019a10f: or eax, dword ptr [ebx]; pop edi; add al, 0xa; ret; 
0x00183477: or eax, dword ptr [ebx]; pop edi; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00196523: or eax, dword ptr [ebx]; pop edx; add dword ptr [edx], ecx; ret; 
0x001725fa: or eax, dword ptr [ebx]; pop esi; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x001840fe: or eax, dword ptr [ebx]; pop esp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00173980: or eax, dword ptr [ebx]; popal; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x001835d9: or eax, dword ptr [ebx]; push 0x140e0a01; inc ecx; ret; 
0x0018a7aa: or eax, dword ptr [ebx]; push 0x140e0a03; inc esi; ret; 
0x00170048: or eax, dword ptr [ebx]; push cs; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x00170699: or eax, dword ptr [ebx]; push cs; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x001962f4: or eax, dword ptr [ebx]; push ebp; add ecx, dword ptr [edx]; push cs; adc al, 0x43; ret; 
0x00183fe6: or eax, dword ptr [ebx]; push ecx; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00186543: or eax, dword ptr [ebx]; push ecx; add dword ptr [edx], ecx; ret; 
0x0016fda2: or eax, dword ptr [ebx]; push edi; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0017c55b: or eax, dword ptr [ebx]; push edx; add dword ptr [edx], ecx; push cs; adc al, 0x46; ret; 
0x00175bc1: or eax, dword ptr [ebx]; push es; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x00186c6b: or eax, dword ptr [ebx]; push esp; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x00173f03: or eax, dword ptr [ebx]; pushfd; add dword ptr [edx], ecx; ret; 
0x001845a5: or eax, dword ptr [ebx]; ret; 
0x001702db: or eax, dword ptr [ebx]; rol byte ptr [ecx], 0xa; push cs; adc al, 0x45; ret; 
0x0016ff94: or eax, dword ptr [ebx]; rol byte ptr [ecx], cl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017242e: or eax, dword ptr [ebx]; rol byte ptr [edx], 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0016fef3: or eax, dword ptr [ebx]; rol dword ptr [ecx], 0xa; push cs; adc al, 0x41; ret; 
0x00173998: or eax, dword ptr [ebx]; ror byte ptr [ecx], 0xa; push cs; adc al, 0x41; ret; 
0x001842b0: or eax, dword ptr [ebx]; sbb dword ptr [ebx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001711cd: or eax, dword ptr [ebx]; stosd dword ptr es:[edi], eax; add al, 0xa; ret; 
0x0017c23b: or eax, dword ptr [ebx]; sub al, 4; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00173758: or eax, dword ptr [ebx]; sub byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00199f8c: or eax, dword ptr [ebx]; test byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x001981f8: or eax, dword ptr [ebx]; test dword ptr [ecx], 0x41140e0a; ret; 
0x001886b4: or eax, dword ptr [ebx]; test dword ptr [edx + ecx], eax; push cs; adc al, 0x41; ret; 
0x0017023c: or eax, dword ptr [ebx]; test dword ptr [edx], 0x41140e0a; ret; 
0x0018bc90: or eax, dword ptr [ebx]; xchg eax, esp; add cl, byte ptr [edx]; push cs; adc al, 0x43; ret; 
0x0019ba9c: or eax, dword ptr [ebx]; xor al, 1; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x001897ec: or eax, dword ptr [ebx]; xor al, byte ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x00192489: or eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x001757fb: or eax, dword ptr [ecx]; ret; 
0x00170817: or eax, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0018c765: or eax, dword ptr [edi + 0xa]; ret; 
0x0016fe28: or eax, dword ptr [edx]; arpl word ptr [edx], cx; push cs; adc al, 0x41; ret; 
0x0019590f: or eax, dword ptr [edx]; arpl word ptr [edx], cx; push cs; adc al, 0x46; ret; 
0x00172a36: or eax, dword ptr [edx]; arpl word ptr [esi], cx; adc al, 0x41; ret; 
0x00177be0: or eax, dword ptr [edx]; cmpsb byte ptr [esi], byte ptr es:[edi]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x001960e2: or eax, dword ptr [edx]; cwde; ret; 
0x0017d66a: or eax, dword ptr [edx]; dec ebp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0017a5a1: or eax, dword ptr [edx]; dec ebx; ret; 
0x0016fcb0: or eax, dword ptr [edx]; dec ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018da40: or eax, dword ptr [edx]; dec ecx; push cs; or al, 0x43; ret; 
0x0018a94a: or eax, dword ptr [edx]; dec edi; ret; 
0x0018ba9b: or eax, dword ptr [edx]; dec edx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00179f43: or eax, dword ptr [edx]; dec esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017c2f2: or eax, dword ptr [edx]; in al, 0xa; push cs; adc al, 0x43; ret; 
0x001917a1: or eax, dword ptr [edx]; in eax, 0xa; ret; 
0x00190ab8: or eax, dword ptr [edx]; inc ecx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00183a44: or eax, dword ptr [edx]; inc edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00178b75: or eax, dword ptr [edx]; inc edi; ret; 
0x001764c2: or eax, dword ptr [edx]; inc esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00173ffa: or eax, dword ptr [edx]; inc esp; push cs; adc al, 0x43; ret; 
0x0019ae2c: or eax, dword ptr [edx]; insb byte ptr es:[edi], dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00170173: or eax, dword ptr [edx]; insd dword ptr es:[edi], dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001700d4: or eax, dword ptr [edx]; iretd; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00191c5a: or eax, dword ptr [edx]; jnp 0x191c68; push cs; adc al, 0x43; ret; 
0x0017dc63: or eax, dword ptr [edx]; jo 0x17dc71; push cs; adc al, 0x43; ret; 
0x0018d4d6: or eax, dword ptr [edx]; jp 0x18d4e4; push cs; adc al, 0x41; ret; 
0x0018bb4a: or eax, dword ptr [edx]; lahf; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00197d48: or eax, dword ptr [edx]; lodsd eax, dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018f21f: or eax, dword ptr [edx]; mov al, 0xa; ret; 
0x001986f8: or eax, dword ptr [edx]; mov byte ptr [0x41140e0a], al; ret; 
0x0017ace4: or eax, dword ptr [edx]; mov byte ptr [edx], cl; push cs; adc al, 0x46; ret; 
0x00183b58: or eax, dword ptr [edx]; mov cs, word ptr [edx]; push cs; adc al, 0x43; ret; 
0x00197cfd: or eax, dword ptr [edx]; mov dh, 0xa; ret; 
0x00170616: or eax, dword ptr [edx]; mov dword ptr [0x41140e0a], eax; ret; 
0x001993b0: or eax, dword ptr [edx]; mov ebp, 0x43140e0a; ret; 
0x0016fedc: or eax, dword ptr [edx]; mov esi, 0x41140e0a; ret; 
0x00178f93: or eax, dword ptr [edx]; mov word ptr [edx], cs; push cs; adc al, 0x41; ret; 
0x00189aff: or eax, dword ptr [edx]; movsb byte ptr es:[edi], byte ptr [esi]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00180368: or eax, dword ptr [edx]; movsd dword ptr es:[edi], dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017c2c3: or eax, dword ptr [edx]; or cl, byte ptr fs:[esi]; adc al, 0x43; ret; 
0x00188840: or eax, dword ptr [edx]; out 0xa, al; ret; 
0x00189970: or eax, dword ptr [edx]; pop ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018939b: or eax, dword ptr [edx]; pop ebx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x001701e3: or eax, dword ptr [edx]; pop edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001942b7: or eax, dword ptr [edx]; pop esi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00189b6e: or eax, dword ptr [edx]; pop esp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0016fe56: or eax, dword ptr [edx]; popal; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018f0d8: or eax, dword ptr [edx]; popal; push cs; adc al, 0x41; ret; 
0x0019220e: or eax, dword ptr [edx]; popal; push cs; adc al, 0x43; ret; 
0x00192fc7: or eax, dword ptr [edx]; push 0xa; push cs; adc al, 0x46; ret; 
0x0019291d: or eax, dword ptr [edx]; push eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00189635: or eax, dword ptr [edx]; push ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00187eae: or eax, dword ptr [edx]; push edi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00198076: or eax, dword ptr [edx]; push esi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0017959e: or eax, dword ptr [edx]; push esi; or cl, byte ptr [esi]; adc al, 0x44; ret; 
0x00174628: or eax, dword ptr [edx]; push esi; ret; 
0x0018cd0c: or eax, dword ptr [edx]; pushal; ret; 
0x001987b7: or eax, dword ptr [edx]; ror byte ptr [edx], cl; push cs; adc al, 0x43; ret; 
0x0017c4d9: or eax, dword ptr [edx]; ror dword ptr [edx], 1; push cs; adc al, 0x41; ret; 
0x0019a38c: or eax, dword ptr [edx]; ror dword ptr [edx], cl; push cs; adc al, 0x43; ret; 
0x0016ffac: or eax, dword ptr [edx]; scasb al, byte ptr es:[edi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017a544: or eax, dword ptr [edx]; test byte ptr [edx], cl; push cs; or al, 0x41; ret; 
0x0016faea: or eax, dword ptr [edx]; test byte ptr [esi], cl; adc al, 0x41; ret; 
0x0018d443: or eax, dword ptr [edx]; test dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0018bbfc: or eax, dword ptr [edx]; wait; ret; 
0x00183bb0: or eax, dword ptr [edx]; xchg byte ptr [edx], cl; push cs; adc al, 0x43; ret; 
0x00183e03: or eax, dword ptr [edx]; xchg eax, ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0019805f: or eax, dword ptr [edx]; xchg eax, edi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00195b8b: or eax, dword ptr [edx]; xchg eax, edx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x001706c9: or eax, dword ptr [edx]; xchg eax, esi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0016fe3f: or eax, dword ptr [edx]; xchg eax, esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001964da: or eax, dword ptr [edx]; xchg eax, esp; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x0019bd14: or eax, dword ptr [esi + 0x1d50501]; add byte ptr [edx + eax - 0xfffffb], cl; inc dword ptr [ecx]; or bh, byte ptr [eax + 5]; ret; 
0x001744d4: or eax, dword ptr [esi + 0xa]; push cs; adc al, 0x46; ret; 
0x0017ad90: or eax, dword ptr [esi + 0xa]; push cs; or al, 0x41; ret; 
0x001879ce: or eax, dword ptr [esi + 0xa]; ret; 
0x0018446a: or eax, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x000310f4: or eax, ecx; or eax, edx; mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x000f0d9f: or eax, edx; add esp, 0x7c; ret; 
0x000e5e12: or eax, edx; mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x000650c2: or eax, edx; mov dword ptr [esi], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0002d7d3: or eax, edx; mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x0002d543: or eax, edx; mov dword ptr [esp + 4], eax; fld dword ptr [esp + 4]; ret; 
0x0002d283: or eax, edx; mov dword ptr [esp + 8], eax; fld qword ptr [esp + 4]; ret; 
0x000310f6: or eax, edx; mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x000f0d93: or eax, edx; mov edx, dword ptr [esp + 0x84]; shl edx, 0x18; or eax, edx; add esp, 0x7c; ret; 
0x0017d901: or eax, esi; call dword ptr [eax]; 
0x0017d969: or eax, esi; call dword ptr [ecx]; 
0x0017d9a5: or eax, esi; call dword ptr [edx]; 
0x000eee47: or eax, esi; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x001729cf: or ebp, dword ptr [eax + 0xa]; ret; 
0x0017062d: or ebp, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x00172c92: or ebp, dword ptr [eax + 0xe]; adc al, 0x46; ret; 
0x00187a3b: or ebp, dword ptr [eax + eax]; add byte ptr [eax], al; inc eax; mov byte ptr [ecx], al; add byte ptr [edx - 0xd], bl; jmp dword ptr [eax + 3]; 
0x0018ef93: or ebp, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [eax - 0x7bfffe03], bl; sub esi, esi; call dword ptr [ebx]; 
0x00189b16: or ebp, dword ptr [ebp + 0xa]; push cs; adc al, 0x43; ret; 
0x00188701: or ebp, dword ptr [ebx + 0xa]; ret; 
0x00197686: or ebp, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x0018989f: or ebp, dword ptr [ecx + 0xa]; push cs; adc al, 0x43; ret; 
0x0018c20c: or ebp, dword ptr [ecx + 0xa]; push cs; or al, 0x41; ret; 
0x0018a2e1: or ebp, dword ptr [ecx + 0xe]; or al, 0x43; ret; 
0x000a766f: or ebp, dword ptr [ecx]; ret 0x5589; 
0x00196d96: or ebp, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0018b9b5: or ebp, dword ptr [edi + 0xa]; ret; 
0x00197e38: or ebp, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x0018bab2: or ebp, dword ptr [edx + 0xa]; push cs; adc al, 0x43; ret; 
0x00170683: or ebp, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0017e1f3: or ebp, dword ptr [esi + 0xa]; ret; 
0x0018d68e: or ebp, dword ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x0017d4ae: or ebp, dword ptr [esi + ecx + 8]; inc ecx; ret; 
0x00199c96: or ebp, dword ptr [esi + ecx + 8]; inc esp; ret; 
0x001747de: or ebp, ebp; jmp dword ptr [edx]; 
0x0014ab64: or ebp, ecx; push ss; add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add bl, dh; ret; 
0x00176fad: or ebp, edi; call esp; 
0x00176fd5: or ebp, edi; jmp dword ptr [ebx]; 
0x0016fdba: or ebx, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0019975a: or ebx, dword ptr [eax + 0xa]; ret; 
0x00195d3b: or ebx, dword ptr [eax + eax]; add byte ptr [eax], al; inc eax; imul eax, dword ptr [edx], 0; mov word ptr [edi - 9], es; jmp dword ptr [esi]; 
0x0019585e: or ebx, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x0018358d: or ebx, dword ptr [ebp + 0xa]; push cs; add al, 0xc6; ret; 
0x0017138a: or ebx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x0017035e: or ebx, dword ptr [ebp + 0xe]; adc al, 0x43; ret; 
0x00185cbd: or ebx, dword ptr [ebp + 0xe]; add al, 0xc6; ret; 
0x0018be85: or ebx, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x0018c327: or ebx, dword ptr [ebx + 0xa]; ret; 
0x0018be9b: or ebx, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x0017c17b: or ebx, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0008f0a0: or ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x0017473b: or ebx, dword ptr [edi + 0xa]; push cs; adc al, 0x43; ret; 
0x0017d1db: or ebx, dword ptr [edi + 0xa]; push cs; adc al, 0x46; ret; 
0x001726da: or ebx, dword ptr [edi + 0xa]; ret; 
0x00134bc0: or ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x001958b7: or ebx, dword ptr [edx + 0xa]; push cs; adc al, 0x43; ret; 
0x00175837: or ebx, dword ptr [edx + 0xa]; ret; 
0x00171c55: or ebx, dword ptr [edx + 0xe]; add al, 0xc6; ret; 
0x0018b268: or ebx, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x00185ac2: or ebx, dword ptr [esi + 0xa]; push cs; adc al, 0x43; ret; 
0x001879c7: or ebx, dword ptr [esi + 0xa]; ret; 
0x0018f15a: or ebx, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x0008d349: or ebx, edx; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0018746d: or ebx, esi; call edi; 
0x001946d3: or ecx, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00185ff3: or ecx, dword ptr [ebp + 0xa]; ret; 
0x001856b3: or ecx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x0017c5d2: or ecx, dword ptr [ebp + 0xe]; add al, 0xc6; ret; 
0x001745e1: or ecx, dword ptr [ebp + 0xe]; or al, 0x43; ret; 
0x00087972: or ecx, dword ptr [ebp - 0x7af0f4b6]; adc eax, 0x5bfffffe; ret; 
0x000b8617: or ecx, dword ptr [ebx + 0x7c8b241c]; and al, 4; add esp, 8; ret; 
0x00064fb2: or ecx, dword ptr [ebx + 0x9881]; add byte ptr [ecx - 0x2d00dbfc], cl; add esp, 0x1c; ret; 
0x0017150b: or ecx, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x0018a311: or ecx, dword ptr [ebx + 0xe]; add al, 0xc6; ret; 
0x000f40ef: or ecx, dword ptr [ebx - 0xf74d]; jmp dword ptr [ebp - 0x75]; 
0x0006f2e4: or ecx, dword ptr [ecx + 0x56894c46]; push eax; add esp, 0x18; pop esi; ret; 
0x001831c0: or ecx, dword ptr [ecx + 0xa]; push cs; adc al, 0x44; ret; 
0x000db1e3: or ecx, dword ptr [ecx - 0x76270810]; ret 0xfac1; 
0x000f0de9: or ecx, dword ptr [ecx - 0x76e3dba4]; ret; 
0x00189987: or ecx, dword ptr [edi + 0xa]; push cs; adc al, 0x43; ret; 
0x00170532: or ecx, dword ptr [edi + 0xa]; ret; 
0x00190c9d: or ecx, dword ptr [edi + 0xe]; adc al, 0x41; ret; 
0x00199e9a: or ecx, dword ptr [edi + 0xe]; adc al, 0x43; ret; 
0x00087975: or ecx, dword ptr [edi]; test dword ptr [0x5bfffffe], edx; ret; 
0x0008eba6: or ecx, dword ptr [edi]; test dword ptr [ebx], eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00087565: or ecx, dword ptr [edi]; test dword ptr [edx + eax], esp; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0011aac6: or ecx, dword ptr [edi]; xchg byte ptr [0x83fffffe], bl; ret 0x8303; 
0x000adde8: or ecx, dword ptr [edi]; xchg byte ptr [ecx + 0x31ffffdd], cl; shr cl, 0x76; fdivr st(7); jmp dword ptr [esi - 0x70]; 
0x00191daa: or ecx, dword ptr [edx + 0xe]; adc al, 0x41; ret; 
0x00189a8f: or ecx, dword ptr [edx + ecx + 0xe]; adc al, 0x43; ret; 
0x001896ca: or ecx, dword ptr [edx]; ret; 
0x001928f1: or ecx, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x0018cc31: or ecx, dword ptr [esi + 0xa]; push cs; add al, 0xc7; ret; 
0x00179dee: or ecx, dword ptr [esi + 0xa]; ret; 
0x000e5e79: or ecx, edx; mov dword ptr [eax + 8], ecx; xor eax, eax; pop ebx; ret; 
0x000d1951: or ecx, esi; mov dword ptr [edi + edx*8 + 4], ecx; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000b3eed: or ecx, esi; push cs; add byte ptr [edi + 0xdcb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0018874f: or edi, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x001702f3: or edi, dword ptr [eax + 0xa]; push cs; adc al, 0x43; ret; 
0x00178392: or edi, dword ptr [eax + 0xa]; ret; 
0x001894f3: or edi, dword ptr [eax + eax]; add byte ptr [eax], al; clc; mov byte ptr [0x5e840001], al; hlt; call dword ptr [edx]; 
0x00184537: or edi, dword ptr [eax + eax]; add byte ptr [eax], al; cmp al, 0x53; add dword ptr [eax], eax; cmp bh, 0xf1; call edi; 
0x001896d7: or edi, dword ptr [eax + eax]; add byte ptr [eax], al; fsub qword ptr [ecx + eax - 0xb932000]; jmp dword ptr [edi + 2]; 
0x0014b241: or edi, dword ptr [ebp - 0x3b7c0014]; sub al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x00198ea2: or edi, dword ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x0018a87c: or edi, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0019944b: or edi, dword ptr [ecx + 0xa]; push cs; adc al, 0x43; ret; 
0x00189fb1: or edi, dword ptr [ecx + 0xa]; ret; 
0x000faec9: or edi, dword ptr [ecx]; ret 0x77e; 
0x00178faa: or edi, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0018a794: or edi, dword ptr [edi + 0xa]; push cs; adc al, 0x43; ret; 
0x0018968f: or edi, dword ptr [edx + ecx + 0xe]; adc al, 0x43; ret; 
0x0018c0f1: or edi, dword ptr [esi + 0xa]; ret; 
0x0016be11: or edi, eax; push dword ptr [ebp + ecx*2 + 0xc140002]; clc; call esp; 
0x00176f5d: or edi, ebp; call esp; 
0x00166cf5: or edi, ebp; dec esi; or edi, ebp; lcall ptr [esi + 0xc]; std; call esp; 
0x00166d45: or edi, ebp; inc dword ptr [eax]; or al, 0xfd; call dword ptr [eax - 0x7f0002f4]; or bh, ch; jmp dword ptr [eax]; 
0x0007b892: or edi, ebp; jmp dword ptr [ebp - 0x7d]; 
0x00176f21: or edi, ebp; jmp dword ptr [ebx]; 
0x00166cb5: or edi, ebp; jmp edx; 
0x00166cf9: or edi, ebp; lcall ptr [esi + 0xc]; std; call esp; 
0x0016ddc1: or edi, ebx; call dword ptr [eax]; 
0x0010f584: or edi, edi; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x00139456: or edi, edi; inc dword ptr [ecx + 0x2dc87c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00139245: or edi, edi; inc dword ptr [ecx + 0x2de98c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00139196: or edi, edi; inc dword ptr [ecx + 0x2e007c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0016d599: or edi, edx; call dword ptr [eax - 0x29]; 
0x0016d5b9: or edi, edx; call dword ptr [eax]; 
0x0016d591: or edi, edx; jmp dword ptr [eax]; 
0x0016d5b1: or edi, edx; jmp eax; 
0x0016d5a9: or edi, edx; push dword ptr [eax - 0x18fffd29]; or edi, edx; jmp eax; 
0x00149736: or edi, esi; fcomp dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000a71f6: or edi, esi; fcomp dword ptr [edi + 0x5e]; ret; 
0x0016b651: or edi, esi; jmp dword ptr [eax]; 
0x000e649e: or edx, 0x30; mov dword ptr [eax + 8], edx; mov byte ptr [eax + 0x17], 1; mov byte ptr [eax + 0x16], 0; ret; 
0x0018d42d: or edx, dword ptr [eax + 0xa]; push cs; adc al, 0x43; ret; 
0x0017099e: or edx, dword ptr [eax + 0xa]; ret; 
0x00192432: or edx, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x0018d45a: or edx, dword ptr [eax + 0xe]; adc al, 0x43; ret; 
0x0019409b: or edx, dword ptr [eax + eax]; add byte ptr [eax + 0x4c00024e], ah; adc al, 0xf7; call dword ptr [edx + 3]; 
0x0018d17b: or edx, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [eax - 0x73fffe21], al; fdivr st(5), st(0); jmp dword ptr [ecx]; 
0x0002918a: or edx, dword ptr [eax]; add byte ptr [ecx + 0x179e67c3], al; add byte ptr [ecx + 0xfcec], al; add byte ptr [ecx - 0x8f6b], cl; jmp dword ptr [ebp - 0x75]; 
0x00190acf: or edx, dword ptr [ebp + 0xa]; push cs; adc al, 0x43; ret; 
0x00195fc7: or edx, dword ptr [ebp + 0xa]; ret; 
0x0018d8f4: or edx, dword ptr [ebx + 0xa]; ret; 
0x00183595: or edx, dword ptr [ebx + 0xe]; add al, 0xc6; ret; 
0x00196a36: or edx, dword ptr [ecx + 0xa]; ret; 
0x0019b970: or edx, dword ptr [edi + 0xa]; push cs; or al, 0x43; ret; 
0x0018c0f9: or edx, dword ptr [edi + 0xa]; ret; 
0x0019781a: or edx, dword ptr [edi + 0xe]; adc al, 0x43; ret; 
0x0016ffc3: or edx, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x0016fdd0: or edx, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x0018770e: or edx, dword ptr [esi + 0xa]; ret; 
0x00190da2: or edx, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x000424de: or edx, dword ptr [esi]; add byte ptr [ecx + 0x59cec], al; add byte ptr [ebx + 0x7e800875], cl; inc esi; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x00031166: or edx, eax; mov dword ptr [esp + 4], edx; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0002d242: or edx, eax; mov eax, 0x7ff00000; sub eax, edx; shr eax, 0x1f; ret; 
0x0002d79c: or edx, eax; mov eax, 0xfffe; sub eax, edx; sar eax, 0x10; ret; 
0x001050ad: or edx, ecx; bswap edx; mov dword ptr [eax], edx; pop esi; ret 4; 
0x000eeebe: or edx, ecx; or eax, esi; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x0006a100: or esi, 0x8000; mov dword ptr [edx], esi; pop esi; ret; 
0x00192907: or esi, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0018a5bd: or esi, dword ptr [eax + 0xa]; push cs; adc al, 0x43; ret; 
0x0017422d: or esi, dword ptr [ebx + 0xa]; ret; 
0x0017c42a: or esi, dword ptr [ebx + 0xe]; add al, 0xc6; ret; 
0x00178cb0: or esi, dword ptr [ecx + 0xa]; ret; 
0x000b7c03: or esi, dword ptr [ecx]; leave; cmp eax, -1; cmovne ecx, eax; mov eax, ecx; ret; 
0x000c8519: or esi, dword ptr [ecx]; rol byte ptr [ebx - 0x6bf0fb08], cl; ret 0x5589; 
0x0018a7d8: or esi, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x00174285: or esi, dword ptr [edi + 0xa]; ret; 
0x0016d750: or esi, dword ptr [edi]; cli; jmp esp; 
0x00149062: or esi, dword ptr [edx + 0x3b]; lea eax, dword ptr [eax + 0xa]; pop edi; ret; 
0x00148042: or esi, dword ptr [edx + 0x3b]; lea eax, dword ptr [edi + 0xa]; pop edi; ret; 
0x00190ed9: or esi, dword ptr [edx + 0xa]; ret; 
0x00193eb6: or esi, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x00190c87: or esi, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x001709d6: or esi, dword ptr [esi + 0xa]; ret; 
0x000f722f: or esi, esi; inc esp; inc ecx; add dword ptr [eax + 0xf], eax; inc esp; ret 0x8dc3; 
0x0007d4da: or esp, 0x19; add byte ptr [eax], al; mov dword ptr [ebx + 0x19b0], eax; add esp, 0x18; pop ebx; ret; 
0x00111236: or esp, 0x32; add byte ptr [eax], al; or dword ptr [ebx + 0x32ac], 2; add esp, 0x18; pop ebx; ret; 
0x00111227: or esp, 0x32; add byte ptr [eax], al; pop ebx; ret; 
0x0012e970: or esp, 0x38; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0016fcf5: or esp, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0017467b: or esp, dword ptr [eax + 0xa]; push cs; adc al, 0x43; ret; 
0x001879b9: or esp, dword ptr [eax + 0xa]; ret; 
0x0018aec7: or esp, dword ptr [eax]; add byte ptr [eax], al; add ah, cl; mov esp, 0x41d00001; cmc; call dword ptr [ebx]; 
0x00186427: or esp, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [edx + esi*2], ch; add dword ptr [eax], eax; shl dh, 0xf2; jmp dword ptr [edx]; 
0x0017c422: or esp, dword ptr [ebp + 0xa]; push cs; add al, 0xc6; ret; 
0x00183a5b: or esp, dword ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x0019a5c2: or esp, dword ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x0017c5c2: or esp, dword ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x00197f8c: or esp, dword ptr [ecx + 0xe]; adc al, 0x41; ret; 
0x0016fcc7: or esp, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x001845c5: or esp, dword ptr [edi + 0xa]; ret; 
0x00170a37: or esp, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x00199040: or esp, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0018a73b: or esp, dword ptr [edx + ecx + 0xe]; adc al, 0x46; ret; 
0x0017c5ca: or esp, dword ptr [edx + ecx + 0xe]; add al, 0xc6; ret; 
0x0019249f: or esp, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x001973a1: or esp, dword ptr [esi + 0xa]; ret; 
0x0019b217: or esp, dword ptr [esi + 0xe]; or al, 0x41; ret; 
0x001765da: or esp, dword ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x0014b34d: or esp, dword ptr [esi - 0x70]; call dword ptr [esi]; 
0x0016aa99: or esp, esi; call dword ptr [eax]; 
0x00168e25: out 0, al; add byte ptr [eax - 0x25], cl; out dx, eax; jmp eax; 
0x000ed5c3: out 0, al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0017d8fd: out 0, al; add byte ptr [eax], al; or eax, esi; call dword ptr [eax]; 
0x00168e2d: out 0, al; add byte ptr [ebx + ebx*8 - 0x11], dl; call eax; 
0x00168e1d: out 0, al; add byte ptr [ebx + ebx*8], bh; out dx, eax; push dword ptr [eax + 0x480000e6]; fucomi st(7); jmp eax; 
0x000ed413: out 0, eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001311fb: out 0, eax; add byte ptr [eax], al; pop ebx; ret; 
0x00166fc0: out 0x1d, al; std; call dword ptr [esi + 0x1e]; 
0x00003084: out 0x28, eax; scasb al, byte ptr es:[edi]; mov ah, byte ptr [edx - 0x3e]; mov esi, 0x614a3e5c; call dword ptr [ecx]; 
0x00132dea: out 0x42, eax; jo 0x132d6f; ret 0x80; 
0x0013341a: out 0x42, eax; jo 0x13339f; ret 0x80; 
0x001955b7: out 0x43, eax; idiv bh; sbb al, 0xd; xor al, byte ptr [edx - 0xa]; jmp dword ptr [edx]; 
0x0009498d: out 0x53, al; or dword ptr [eax], eax; add ecx, 0xc5ff3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00001a1a: out 0x59, eax; pop ebx; ret 0x2a63; 
0x000f72c8: out 0x5b, eax; pop esi; pop edi; pop ebp; ret; 
0x000833d9: out 0x5e, al; pop edi; pop ebp; ret; 
0x0007eee1: out 0x5e, al; pop edi; ret; 
0x0017b319: out 0x6c, eax; out dx, eax; jmp dword ptr [edx]; 
0x000f204e: out 0x83, al; ret 0x6601; 
0x0003f55e: out 0x83, al; rol dword ptr [esi], -0x7d; ret 0x901; 
0x000301f9: out 0x89, al; inc ebp; fsub st(1), st(0); ret 0xfffe; 
0x0004ba49: out 0x8b, al; or al, byte ptr [ebp - 0x76e48a37]; ret 0x542b; 
0x000cf639: out 0x8b, al; push ebp; add dh, dh; inc esp; ret 0x804; 
0x0017cbc9: out 0x8c, al; out dx, eax; jmp dword ptr [edx]; 
0x0017a234: out 0x93, al; out dx, eax; call dword ptr [eax]; 
0x00158847: out 0x95, eax; push es; cld; ret; 
0x00188842: out 0xa, al; ret; 
0x00002406: out 0xa9, al; ret 0xbd07; 
0x000e820f: out 0xad, eax; or eax, dword ptr [eax]; xchg edi, ebx; mov eax, 0x58; call dword ptr gs:[0x10]; 
0x0016d5b0: out 0xb, eax; cli; jmp eax; 
0x001761d5: out 0xbd, eax; out dx, al; jmp dword ptr [edx]; 
0x000eeebc: out 0xc, al; or edx, ecx; or eax, esi; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x000205bc: out 0xc0, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x7af07f39], al; ret 3; 
0x0008d38d: out 0xc9, al; or dword ptr [eax], eax; add ecx, 0xcd2bf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00165df0: out 0xcd, al; cld; inc dword ptr [esi]; into; cld; jmp dword ptr [esi]; 
0x001779b9: out 0xd7, al; out dx, al; jmp dword ptr [edx]; 
0x001726b5: out 0xeb, al; call ecx; 
0x00172fee: out 0xeb, al; jmp dword ptr [edx]; 
0x00172755: out 0xeb, eax; jmp dword ptr [eax]; 
0x00186431: out 0xf2, al; jmp dword ptr [edx]; 
0x0016a961: out 0xf3, al; jmp dword ptr [eax - 0x33]; 
0x00189f95: out 0xf4, al; jmp dword ptr [eax]; 
0x00189f59: out 0xf4, al; jmp dword ptr [esi]; 
0x00189fc5: out 0xf4, eax; call esi; 
0x001928a5: out 0xf6, al; call dword ptr [esi + 5]; 
0x0016bc11: out 0xf7, al; call dword ptr [eax]; 
0x000ffdb4: out 0xf7, al; jmp dword ptr [esi - 0x39]; 
0x0016bc21: out 0xf7, eax; jmp dword ptr [eax + 0x44]; 
0x00166851: out 0xfc, al; call dword ptr [eax]; 
0x001667b5: out 0xfc, al; call edx; 
0x001667b5: out 0xfc, al; call edx; out 0xfc, eax; jmp dword ptr [edx - 0x18]; 
0x00166841: out 0xfc, al; jmp dword ptr [eax - 0x19]; 
0x001667b1: out 0xfc, al; push eax; out 0xfc, al; call edx; 
0x001667b1: out 0xfc, al; push eax; out 0xfc, al; call edx; out 0xfc, eax; jmp dword ptr [edx - 0x18]; 
0x00166849: out 0xfc, eax; inc dword ptr [eax + 0x70fffce8]; out 0xfc, al; call dword ptr [eax]; 
0x001667b9: out 0xfc, eax; jmp dword ptr [edx - 0x18]; 
0x001667a5: out 0xfc, eax; jmp dword ptr [edx]; 
0x00166835: out 0xfc, eax; ljmp ptr [edx + 0x3afffce7]; call 0xe6c7683e; cld; jmp dword ptr [eax - 0x19]; 
0x00166845: out 0xfc, eax; push eax; out 0xfc, eax; inc dword ptr [eax + 0x70fffce8]; out 0xfc, al; call dword ptr [eax]; 
0x0005fbbf: out 0xff, al; dec dword ptr [ebx - 0xe34b]; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x77]; 
0x0005de92: out 0xff, al; dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0xe373]; jmp dword ptr [ebp - 0x77]; 
0x000db4ab: out 0xff, al; dec dword ptr [ecx - 0x7a2dcefa]; ror byte ptr [edi], 0x94; ret 0xc481; 
0x00037f6a: out 0xff, al; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000fede9: out 0xff, al; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0009fd05: out 0xff, al; inc dword ptr [ecx + 0x10fcc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000a28fb: out 0xff, al; inc dword ptr [ecx + 0xfcc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000d5cf9: out 0xff, al; inc dword ptr [ecx]; ret 0x13e9; 
0x0009d703: out 0xff, al; jmp dword ptr [esi - 0x70]; 
0x000fed82: out 0xff, al; jmp dword ptr [esi - 0x77]; 
0x000eee42: out 0xff, al; sldt word ptr [eax]; or eax, esi; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x0005f5d3: out 0xff, eax; dec dword ptr [ebx + 0x34890875]; and al, 0xe8; lahf; ret; 
0x0005dd0f: out 0xff, eax; dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0xe373]; jmp dword ptr [ebp - 0x77]; 
0x0005d535: out 0xff, eax; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x75]; 
0x0003de35: out 0xff, eax; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0015a0bd: out 0xff, eax; jmp dword ptr [ebx]; 
0x0001a2ef: out 0xff, eax; jmp edx; 
0x00179635: out 1, al; out dx, eax; jmp dword ptr [edx]; 
0x0018d9f1: out 1, eax; add ah, ch; div ebp; call dword ptr [esi]; 
0x0018d905: out 1, eax; add byte ptr [eax - 0xe], bh; cmc; jmp edx; 
0x0016d7fd: out 2, eax; add ah, dl; pop ebx; cli; call eax; 
0x001103ee: out 4, al; lea eax, dword ptr [edx + esi + 8]; pop esi; ret; 
0x000031d3: out dx, al; aam 0x5c; ret 0x2ec0; 
0x0001af72: out dx, al; adc byte ptr [eax], al; add ecx, 0x18807f; mov eax, dword ptr [ecx + 0x36c8]; ret; 
0x00131e08: out dx, al; adc dword ptr [edi], eax; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x0007d26e: out dx, al; add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x000a7517: out dx, al; add al, 0x83; rcl dword ptr [eax], -0x7d; ret 0x8310; 
0x00101747: out dx, al; add al, 0x83; ret 0x8304; 
0x000b22b5: out dx, al; add al, 0x83; ret 0x8530; 
0x0007d271: out dx, al; add al, 0xf7; ret 0; 
0x00137da5: out dx, al; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001381bc: out dx, al; add al, byte ptr [eax]; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0009547e: out dx, al; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x000bd781: out dx, al; add dword ptr [ebx + 0x489b704], ecx; and al, 0xe8; ret 0xf597; 
0x0002e8e4: out dx, al; add eax, 0xd0f7e0d3; and dword ptr [edx + esi*4], eax; xor eax, eax; pop esi; ret; 
0x000ee2cb: out dx, al; add ecx, ebx; ret 0xcad8; 
0x00191fb5: out dx, al; add esi, esi; jmp dword ptr [edx]; 
0x00109b39: out dx, al; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000959ef: out dx, al; add esp, 4; pop esi; pop edi; pop ebp; ret; 
0x001937d5: out dx, al; and al, 0xf6; jmp dword ptr [edx]; 
0x00168ba2: out dx, al; call dword ptr [eax - 0x29]; 
0x00168ad2: out dx, al; call dword ptr [eax - 0x2d]; 
0x00168b92: out dx, al; call dword ptr [eax]; 
0x00168bd2: out dx, al; call dword ptr [eax]; fadd dword ptr [eax]; add byte ptr [esp + ebx*8], al; out dx, al; jmp esp; 
0x001753ba: out dx, al; call dword ptr [ecx]; 
0x00175206: out dx, al; call dword ptr [esi]; 
0x00168a8a: out dx, al; call eax; 
0x001758f2: out dx, al; call edx; 
0x00168c22: out dx, al; call esp; 
0x00166ba5: out dx, al; cld; jmp dword ptr [eax]; 
0x0018d7d1: out dx, al; cmc; jmp dword ptr [ebx]; 
0x00168b7a: out dx, al; dec dword ptr [esi + edx*8 - 0x26fc0000]; out dx, al; call eax; 
0x0016753c: out dx, al; dec esp; std; push dword ptr [ebx + ecx*2]; std; jmp esp; 
0x00178169: out dx, al; fsqrt; jmp dword ptr [edx]; 
0x0016aeb1: out dx, al; hlt; call dword ptr [eax]; 
0x00192aa9: out dx, al; idiv bh; ret 0; 
0x00168bca: out dx, al; inc dword ptr [eax - 0x28]; add byte ptr [eax], al; int1; fucomi st(6); call dword ptr [eax]; 
0x0000254a: out dx, al; inc ebp; ret 0x88ad; 
0x00168afa: out dx, al; jmp dword ptr [eax - 0x2c]; 
0x00168c3a: out dx, al; jmp dword ptr [eax]; 
0x00175622: out dx, al; jmp dword ptr [ebx]; 
0x00175743: out dx, al; jmp dword ptr [edx]; 
0x001759ea: out dx, al; jmp dword ptr [esi]; 
0x00168b5a: out dx, al; jmp esp; 
0x001334c2: out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132e92: out dx, al; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0013c1de: out dx, al; movdqa xmmword ptr [edx - 0x12], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x00135263: out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001366a3: out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x0013c1e3: out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x0017be69: out dx, al; out dx, eax; call dword ptr [eax]; 
0x00168f19: out dx, al; out dx, eax; call eax; 
0x00168f31: out dx, al; out dx, eax; jmp dword ptr [eax]; 
0x0002f8a9: out dx, al; pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x001046f1: out dx, al; pop esi; pop edi; pop ebp; ret; 
0x00083359: out dx, al; pop esi; ret; 
0x00168c32: out dx, al; push dword ptr [edx + ebx*8]; add byte ptr [eax], al; test bh, bl; out dx, al; jmp dword ptr [eax]; 
0x00131908: out dx, al; push ss; pop es; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x00178148: out dx, al; sti; call dword ptr [eax]; 
0x00095095: out dx, eax; adc byte ptr [ecx], al; clc; pop edi; ret; 
0x0016d955: out dx, eax; add al, byte ptr [eax]; inc esp; xchg dl, bh; jmp dword ptr [eax]; 
0x0017e101: out dx, eax; add byte ptr [eax], al; dec esp; and esi, eax; jmp dword ptr [edi]; 
0x0018e1d5: out dx, eax; add dword ptr [eax], eax; sub byte ptr [esi + esi*8], cl; call dword ptr [edi]; 
0x00149011: out dx, eax; add eax, 0x87820f; add byte ptr [eax], al; lea eax, dword ptr [eax + 4]; pop edi; ret; 
0x001796ed: out dx, eax; add edi, ebp; jmp dword ptr [edx]; 
0x0014a380: out dx, eax; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00101710: out dx, eax; add esp, 0x10; pop esi; pop edi; pop ebp; ret; 
0x000c5d68: out dx, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0006bfc7: out dx, eax; add esp, 0x18; pop esi; ret; 
0x00179a01: out dx, eax; and bh, ch; jmp dword ptr [edx]; 
0x00168e72: out dx, eax; call dword ptr [eax - 0x17]; 
0x00168df2: out dx, eax; call dword ptr [eax - 0x1a]; 
0x0012fb7d: out dx, eax; call dword ptr [eax - 0x7cef397d]; ret 0x8910; 
0x00168d2a: out dx, eax; call dword ptr [eax]; 
0x0017a4a2: out dx, eax; call dword ptr [ebp]; 
0x00176ffe: out dx, eax; call dword ptr [ebx + 2]; 
0x0017c782: out dx, eax; call dword ptr [ebx + 3]; 
0x00176922: out dx, eax; call dword ptr [ebx]; 
0x0017d1a6: out dx, eax; call dword ptr [ecx + 1]; 
0x001769e2: out dx, eax; call dword ptr [ecx]; 
0x00177efe: out dx, eax; call dword ptr [edi + 1]; 
0x0017c756: out dx, eax; call dword ptr [edi + 2]; 
0x00178d8a: out dx, eax; call dword ptr [edx]; 
0x0017731e: out dx, eax; call dword ptr [esi + 3]; 
0x001778ae: out dx, eax; call dword ptr [esi]; 
0x00168da2: out dx, eax; call eax; 
0x0017c5aa: out dx, eax; call edi; 
0x00177f2a: out dx, eax; call edx; 
0x00168cd2: out dx, eax; call esp; 
0x00166bad: out dx, eax; cld; inc dword ptr [eax - 0x10]; cld; call eax; 
0x000ef507: out dx, eax; cmp cl, byte ptr [ebx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0009682a: out dx, eax; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x0016905a: out dx, eax; dec dword ptr [esp + esi*8]; add byte ptr [esi + edi*8 - 0x11], al; jmp dword ptr [eax - 0xc]; 
0x00168e1a: out dx, eax; inc dword ptr [eax + 0x3c0000e6]; fucomi st(7); push dword ptr [eax + 0x480000e6]; fucomi st(7); jmp eax; 
0x001241d4: out dx, eax; inc dword ptr [ebp - 0x725c8a40]; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0xf74d], cl; jmp dword ptr [ebp - 0x39]; 
0x0011fda6: out dx, eax; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x0017c33e: out dx, eax; jmp dword ptr [eax + 2]; 
0x00168f12: out dx, eax; jmp dword ptr [eax - 0x13]; 
0x00168e6a: out dx, eax; jmp dword ptr [eax - 0x18]; 
0x00168dea: out dx, eax; jmp dword ptr [eax - 0x1b]; 
0x00169062: out dx, eax; jmp dword ptr [eax - 0xc]; 
0x00168e0a: out dx, eax; jmp dword ptr [eax]; 
0x00176f22: out dx, eax; jmp dword ptr [ebx]; 
0x0017a856: out dx, eax; jmp dword ptr [ecx + 1]; 
0x00179afa: out dx, eax; jmp dword ptr [ecx]; 
0x0017c4a6: out dx, eax; jmp dword ptr [edi + 4]; 
0x0017c376: out dx, eax; jmp dword ptr [edi]; 
0x0017cd3a: out dx, eax; jmp dword ptr [edx + 1]; 
0x00179bbe: out dx, eax; jmp dword ptr [edx + 5]; 
0x001794d3: out dx, eax; jmp dword ptr [edx]; 
0x00178df6: out dx, eax; jmp dword ptr [esi + 2]; 
0x00177d96: out dx, eax; jmp dword ptr [esi]; 
0x00168e2a: out dx, eax; jmp eax; 
0x00176c4a: out dx, eax; jmp ebx; 
0x0017beca: out dx, eax; jmp edi; 
0x0017c812: out dx, eax; jmp edx; 
0x00179c32: out dx, eax; jmp esi; 
0x00168f0a: out dx, eax; jmp esp; 
0x0002d257: out dx, eax; ljmp ptr [ecx]; sal dword ptr [ecx], -0x38; shr eax, 0x1f; ret; 
0x00133492: out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132e62: out dx, eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0011000c: out dx, eax; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0008e843: out dx, eax; mov esi, 0xc03000c; xchg eax, ecx; jmp ecx; 
0x0013c12e: out dx, eax; movdqa xmmword ptr [edx - 0x11], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x00135193: out dx, eax; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001365f3: out dx, eax; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x0013c133: out dx, eax; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x00149051: out dx, eax; or dh, byte ptr [edx + 0x4b]; lea eax, dword ptr [eax + 9]; pop edi; ret; 
0x00149041: out dx, eax; or dword ptr [edx + 0x5b], esi; lea eax, dword ptr [eax + 8]; pop edi; ret; 
0x00149071: out dx, eax; or eax, 0x408d2b72; or al, 0x5f; ret; 
0x00149061: out dx, eax; or esi, dword ptr [edx + 0x3b]; lea eax, dword ptr [eax + 0xa]; pop edi; ret; 
0x00178e42: out dx, eax; out dx, al; jmp dword ptr [edx]; 
0x0017bce9: out dx, eax; out dx, eax; call dword ptr [eax]; 
0x0017cd39: out dx, eax; out dx, eax; jmp dword ptr [edx + 1]; 
0x00168e22: out dx, eax; push dword ptr [eax + 0x480000e6]; fucomi st(7); jmp eax; 
0x0017d092: out dx, eax; push dword ptr [eax + eax]; add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e7202], al; ret; 
0x00168eba: out dx, eax; push dword ptr [eax - 0x16]; add byte ptr [eax], al; adc al, 0xe5; out dx, eax; call eax; 
0x00168e62: out dx, eax; push dword ptr [eax]; call 0xdec08e6a; out dx, eax; jmp dword ptr [eax - 0x18]; 
0x00168de2: out dx, eax; push dword ptr [eax]; in eax, 0; add byte ptr [eax - 0x28], bh; out dx, eax; jmp dword ptr [eax - 0x1b]; 
0x00168f02: out dx, eax; push dword ptr [ebx + ebp*8 - 0x131d0000]; out dx, eax; jmp esp; 
0x00168d9a: out dx, eax; push dword ptr [ebx - 0x2bdc0000]; out dx, eax; call eax; 
0x00168e82: out dx, eax; push eax; call 0xe16d8e8a; out dx, eax; jmp dword ptr [eax]; 
0x0012fa09: out dx, eax; ror byte ptr [edi], 0xb6; or cl, byte ptr [ebx - 0x8f6d]; jmp dword ptr [ebp - 0x75]; 
0x00130894: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x00131255: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3273; 
0x0013087f: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x0013123b: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x4c73; 
0x0013086a: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x00130855: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x00131221: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6673; 
0x00130921: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00190025: out dx, eax; test ebp, esi; jmp dword ptr [edx]; 
0x000df3e3: out dx, eax; xchg edi, ebx; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0002ed60: out dx, eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x001754c9: outsb dx, byte ptr [esi]; aad 0xed; jmp dword ptr [edx]; 
0x0016c4c5: outsb dx, byte ptr [esi]; add al, byte ptr [eax]; mov ah, 0x85; clc; call dword ptr [eax + 0x6e]; 
0x001960f5: outsb dx, byte ptr [esi]; add al, byte ptr [eax]; sub byte ptr [eax - 9], ch; call dword ptr [ecx]; 
0x00196019: outsb dx, byte ptr [esi]; add al, byte ptr [eax]; test byte ptr [ebx - 9], bl; jmp esp; 
0x0016c4e5: outsb dx, byte ptr [esi]; add al, byte ptr [eax]; xor al, 0x87; clc; call eax; 
0x00180381: outsb dx, byte ptr [esi]; add cl, byte ptr [edx]; push cs; adc al, 0x43; ret; 
0x000aad0e: outsb dx, byte ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebx + 0x7c8b2434], cl; and al, 4; add esp, 8; ret; 
0x000cc3ae: outsb dx, byte ptr [esi]; and byte ptr [ebx + 0x5e5b6cc4], al; pop edi; pop ebp; ret; 
0x00177aa5: outsb dx, byte ptr [esi]; fsubr st(6); jmp dword ptr [edx]; 
0x001682f1: outsb dx, byte ptr [esi]; in al, dx; call dword ptr [eax - 0x5c]; 
0x00168839: outsb dx, byte ptr [esi]; in eax, dx; jmp dword ptr [eax - 0x3d]; 
0x00183f39: outsb dx, byte ptr [esi]; int1; jmp dword ptr [edi]; 
0x0013c3f4: outsb dx, byte ptr [esi]; mov al, 2; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00124ff9: outsb dx, byte ptr [esi]; mov ecx, ebp; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0017b40a: outsb dx, byte ptr [esi]; out dx, eax; jmp dword ptr [edx]; 
0x0006d611: outsb dx, byte ptr [esi]; push esp; mov dword ptr [esp], ebp; call dword ptr [ebp + 0x10]; 
0x000467cd: outsb dx, byte ptr [esi]; ret 0xffff; 
0x00126c88: outsb dx, byte ptr [esi]; ret; 
0x00159384: outsb dx, byte ptr [esi]; sahf; ret 0x38ae; 
0x00133222: outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x0016e191: outsb dx, byte ptr [esi]; sti; jmp dword ptr [eax]; 
0x0016e181: outsb dx, byte ptr [esi]; sti; jmp eax; 
0x000d31fb: outsb dx, byte ptr [esi]; sub al, 0xe9; ret; 
0x0016ec00: outsb dx, byte ptr [esi]; xor esp, edi; call eax; 
0x00130851: outsd dx, dword ptr [esi]; adc ah, byte ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x00176655: outsd dx, dword ptr [esi]; add byte ptr [eax], al; aaa; add edi, ebp; call dword ptr [eax]; 
0x00176685: outsd dx, dword ptr [esi]; add byte ptr [eax], al; pop ss; add edi, ebp; call dword ptr [eax]; 
0x00176625: outsd dx, dword ptr [esi]; add byte ptr [eax], al; push edi; add edi, ebp; call dword ptr [eax]; 
0x00132758: outsd dx, dword ptr [esi]; add byte ptr [esi + 0xf], ah; cmp byte ptr [eax], al; ret 0xf66; 
0x00079635: outsd dx, dword ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x75]; 
0x00144edd: outsd dx, dword ptr [esi]; add eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x001308b3: outsd dx, dword ptr [esi]; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000899f2: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; lea eax, dword ptr [edx + 0xf]; pop edi; ret; 
0x00089ca2: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; lea eax, dword ptr [edx + 0xf]; ret; 
0x00085632: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x000858c2: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x0016ee11: outsd dx, dword ptr [esi]; cld; call dword ptr [eax]; 
0x0016ee01: outsd dx, dword ptr [esi]; cld; jmp dword ptr [eax]; 
0x0016ee09: outsd dx, dword ptr [esi]; cld; jmp eax; 
0x0016edf9: outsd dx, dword ptr [esi]; cld; lcall ptr [eax + ebx*4 + 0x6f640002]; cld; jmp dword ptr [eax]; 
0x0018b7b9: outsd dx, dword ptr [esi]; cmc; jmp dword ptr [edi + 3]; 
0x000ef487: outsd dx, dword ptr [esi]; cmp ecx, dword ptr [ebx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x001310a2: outsd dx, dword ptr [esi]; dec eax; ret 0xff3; 
0x00131002: outsd dx, dword ptr [esi]; dec eax; ret; 
0x001313a1: outsd dx, dword ptr [esi]; fimul dword ptr [edi]; xchg eax, edx; ret 0xce89; 
0x001430d6: outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00174ba5: outsd dx, dword ptr [esi]; in eax, dx; call dword ptr [eax]; 
0x00002fb5: outsd dx, dword ptr [esi]; mov byte ptr [ebx], cl; and bh, byte ptr [eax - 0x52]; sub ebx, dword ptr [esp + eax*2]; nop; ret 0x5bdb; 
0x0012f7cb: outsd dx, dword ptr [esi]; mov word ptr [ebx], cs; mov al, 0x75; sti; jmp dword ptr [esi + 0xf]; 
0x0010fc12: outsd dx, dword ptr [esi]; or al, 0x39; ljmp 0x7c8d:0x118b3d72; cmp byte ptr [eax*4 - 0x7cb98b2e], cl; ror byte ptr [esi], 0x39; ret 0x2c72; 
0x0008ec3d: outsd dx, dword ptr [esi]; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0012f622: outsd dx, dword ptr [esi]; or byte ptr [esi + 0xf], ah; cmp ah, byte ptr [ebx - 0x1f]; or al, 0xf; xchg eax, edx; ret 0xb60f; 
0x0012f57c: outsd dx, dword ptr [esi]; or byte ptr [esi + 0xf], ah; cmp ah, byte ptr [ebx - 0x2f]; or al, 0xf; xchg eax, edx; ret 0xcf89; 
0x00196d97: outsd dx, dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001924d2: outsd dx, dword ptr [esi]; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0017b4ca: outsd dx, dword ptr [esi]; out dx, eax; jmp dword ptr [edx]; 
0x0017ab8a: outsd dx, dword ptr [esi]; push cs; add al, 0xc6; ret; 
0x00130c28: outsd dx, dword ptr [esi]; push edx; ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x001310a7: outsd dx, dword ptr [esi]; push edx; ret 0xc2bb; 
0x00131007: outsd dx, dword ptr [esi]; push edx; ret; 
0x00091722: outsd dx, dword ptr [esi]; push es; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0012f4fe: outsd dx, dword ptr [esi]; ret 0xf66; 
0x000c6517: outsd dx, dword ptr [esi]; ret 0xfffb; 
0x0005b4e7: outsd dx, dword ptr [esi]; ret; 
0x001743c5: outsd dx, dword ptr [esi]; scasb al, byte ptr es:[edi]; in al, dx; jmp dword ptr [edx]; 
0x000a8487: outsd dx, dword ptr [esi]; stosd dword ptr es:[edi], eax; str word ptr [ebx - 0xf777]; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x001115dd: outsd dx, dword ptr [esi]; sub edx, esi; dec dword ptr [ebx - 0x12f6d]; jmp dword ptr [ebp - 0x75]; 
0x0012f799: outsd dx, dword ptr [esi]; test byte ptr [ebx], cl; mov al, 0x75; sti; jmp dword ptr [esi + 0xf]; 
0x0016ee00: outsd dx, dword ptr fs:[esi]; cld; jmp dword ptr [eax]; 
0x00174d10: outsd dx, dword ptr fs:[esi]; in eax, dx; call dword ptr [eax]; 
0x00166f01: paddw mm7, mm7; and byte ptr [eax], dl; std; push dword ptr [eax + 0x40fffd10]; adc ebp, edi; call dword ptr [eax + 0xf]; 
0x000a491a: paddw mm7, mm7; jmp dword ptr [esi - 0x70]; 
0x00166e11: paddw mm7, mm7; nop; or al, 0xfd; jmp dword ptr [eax + 0xd]; 
0x00166e61: paddw mm7, mm7; or byte ptr [eax], dl; std; jmp edx; 
0x00166f15: paddw mm7, mm7; pushal; adc ch, bh; push eax; adc ch, bh; jmp dword ptr [edx]; 
0x00166df1: paddw mm7, mm7; ror byte ptr [edi*8 - 0x2f25f01], 1; push dword ptr [eax + 0xe]; std; jmp dword ptr [eax]; 
0x00166f11: paddw mm7, mm7; ror byte ptr [edi], 1; std; jmp dword ptr [eax + 0x10]; 
0x00095631: pcmpeqb mm1, qword ptr [ebx + eax*4]; rcl dword ptr [eax], -0x7d; ret 0x2910; 
0x001342d1: pcmpeqb mm3, qword ptr [eax + ebp*8]; lcall 0x47c3:0x81ffff5a; add eax, dword ptr es:[eax]; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0013b2b1: pcmpeqb mm3, qword ptr [eax + ebp*8]; mov edx, 0x81fffeea; ret; 
0x001381b1: pcmpeqb mm3, qword ptr [eax + ebp*8]; mov edx, 0x81ffff1b; ret; 
0x00135761: pcmpeqb mm3, qword ptr [eax + ebp*8]; or al, byte ptr [esi - 1]; inc dword ptr [ecx + 0x31437c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x000a73c4: pcmpeqb mm3, qword ptr [ecx]; add eax, 2; ret; 
0x000a73ad: pcmpeqb mm4, qword ptr [eax]; ret; 
0x0010b93a: pcmpeqd mm3, qword ptr [ebx + 1]; ret 0x28b; 
0x0008d947: pcmpgtd mm1, qword ptr [ecx + 0x5e5f0457]; pop ebx; ret; 
0x00130004: pcmpgtd mm1, qword ptr [edi]; cmp byte ptr [eax], al; ret 0xf66; 
0x000e8928: pcmpgtw mm0, mm7; add byte ptr [esi], ah; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0016b031: pmaddwd mm7, mm7; mov ah, 0xfb; add dword ptr [eax], eax; mov ah, 0xf; cmc; call esp; 
0x001896b0: pmaxsw mm5, mm0; jmp dword ptr [esi + 0xb]; 
0x000954a9: pmovmskb eax, mm1; bsf eax, eax; lea eax, dword ptr [edi + eax + 0x30]; pop edi; ret; 
0x00095c64: pmovmskb eax, mm1; bsf eax, eax; lea eax, dword ptr [edx + eax + 0x30]; ret; 
0x00095781: pmovmskb eax, mm1; bsr eax, eax; add eax, ecx; ret; 
0x000954a8: pmovmskb eax, xmm1; bsf eax, eax; lea eax, dword ptr [edi + eax + 0x30]; pop edi; ret; 
0x00095c63: pmovmskb eax, xmm1; bsf eax, eax; lea eax, dword ptr [edx + eax + 0x30]; ret; 
0x00095780: pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x000ae95d: pop ds; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x001711a5: pop ds; add byte ptr [eax], al; fdiv dword ptr [ebx - 0x15]; call ecx; 
0x000709f7: pop ds; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00059907: pop ds; add dword ptr [eax], eax; add byte ptr [ebx - 0x10a343], al; call dword ptr [eax]; 
0x000a70cd: pop ds; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x0014512d: pop ds; add eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0007c363: pop ds; add esp, 0x10; pop esi; pop edi; pop ebp; ret; 
0x00129e41: pop ds; add esp, 0x18; pop esi; ret; 
0x000e6a69: pop ds; add esp, 0xc; ret; 
0x000cf113: pop ds; and eax, 0xc; ret 8; 
0x0008021d: pop ds; bound eax, qword ptr [ecx]; add byte ptr [ebp + 0x37840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx + 0x1242454], cl; ret 0x442b; 
0x00158d2d: pop ds; cli; xchg dword ptr [esp + eax + 0x6fa9ce9d], esp; ret; 
0x0016b101: pop ds; cmc; jmp dword ptr [eax]; 
0x000f7e0d: pop ds; cmp dword ptr [eax], eax; add byte ptr [ecx - 0x76fbdb8c], cl; sub al, 0x24; mov dword ptr [esp + 8], eax; call dword ptr [edi + 0x14]; 
0x00023bd7: pop ds; hlt; pop ss; add byte ptr [ebx - 0x1577f], cl; jmp dword ptr [ebp - 0x75]; 
0x00123ed7: pop ds; int1; pop es; add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp - 0x39]; 
0x000b6a90: pop ds; lea esp, dword ptr [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x000c57de: pop ds; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000c58be: pop ds; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000e0dc3: pop ds; mov eax, ebp; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0xfa; call dword ptr gs:[0x10]; 
0x000e976b: pop ds; mov ebx, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000f04c9: pop ds; mov edx, ebx; mov eax, 0x66; mov ebx, 0x10; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f03c9: pop ds; mov edx, ebx; mov eax, 0x66; mov ebx, 0x11; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0a69: pop ds; mov edx, ebx; mov eax, 0x66; mov ebx, 0x12; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f02c9: pop ds; mov edx, ebx; mov eax, 0x66; mov ebx, 0xa; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0549: pop ds; mov edx, ebx; mov eax, 0x66; mov ebx, 0xb; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0349: pop ds; mov edx, ebx; mov eax, 0x66; mov ebx, 0xc; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0149: pop ds; mov edx, ebx; mov eax, 0x66; mov ebx, 3; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0089: pop ds; mov edx, ebx; mov eax, 0x66; mov ebx, 5; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f0449: pop ds; mov edx, ebx; mov eax, 0x66; mov ebx, 9; lea ecx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000eecf2: pop ds; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0002d20c: pop ds; not eax; sar ecx, 0x1e; and eax, ecx; ret; 
0x000f108a: pop ds; or eax, dword ptr [eax]; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0002d241: pop ds; or edx, eax; mov eax, 0x7ff00000; sub eax, edx; shr eax, 0x1f; ret; 
0x0002d79b: pop ds; or edx, eax; mov eax, 0xfffe; sub eax, edx; sar eax, 0x10; ret; 
0x001799a2: pop ds; out dx, eax; jmp dword ptr [edx]; 
0x0002fdd2: pop ds; pop ebx; pop esi; pop edi; ret; 
0x0008f324: pop ds; pop edi; pop esi; pop ebx; ret; 
0x00062bad: pop ds; ret 0xffff; 
0x0002d24d: pop ds; ret; 
0x0002d4da: pop ds; sar ecx, 0x1e; not eax; and eax, ecx; ret; 
0x00166f4d: pop ds; std; call dword ptr [eax]; 
0x00166f3d: pop ds; std; call dword ptr [esi]; 
0x001670a1: pop ds; std; inc dword ptr [edx]; and ch, bh; call dword ptr [edx + 0x20]; 
0x00167051: pop ds; std; jmp dword ptr [eax]; 
0x00167041: pop ds; std; jmp dword ptr [esi]; 
0x00177fbd: pop ds; sti; jmp esi; 
0x0002d750: pop ds; sub edx, ecx; not eax; and eax, edx; ret; 
0x00195284: pop ds; xor al, 0xf7; call dword ptr [eax]; 
0x00032fc8: pop ds; xor eax, edx; sub eax, edx; ret; 
0x000238b4: pop dword ptr [0x18c48300]; pop ebx; ret; 
0x0008ef1d: pop dword ptr [0x5e5f0000]; pop ebx; ret; 
0x000df1cb: pop dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014997d: pop dword ptr [eax]; add byte ptr [eax], al; lea eax, dword ptr [ecx + 4]; ret; 
0x00188175: pop dword ptr [ecx]; add al, bl; sal bl, 1; call dword ptr [eax]; 
0x000eed67: pop dword ptr [edx + 0xb]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0004ccc0: pop eax; adc eax, 0x155c6e00; add byte ptr [ebx - 0xf77d], cl; dec dword ptr [ebx - 0x1af6b]; jmp dword ptr [ebp - 0x77]; 
0x0016eaec: pop eax; adc eax, dword ptr [ebx]; add byte ptr [edi + 0x24fffc22], ah; and eax, 0x22a70003; cld; jmp eax; 
0x00079075: pop eax; add al, 0; add al, ch; ret 0xfffc; 
0x0010d6ae: pop eax; add al, byte ptr [eax]; add al, ch; mov esp, 0x810001c6; ret; 
0x0016c04d: pop eax; add al, byte ptr [eax]; xchg eax, esp; cmp eax, edi; jmp esp; 
0x00174ad9: pop eax; add byte ptr [eax], al; add al, 0x54; in eax, dx; call esp; 
0x00173718: pop eax; add byte ptr [eax], al; add byte ptr [eax*2 + 0x14100000], bl; in al, dx; call dword ptr [edi + 7]; 
0x0016eb84: pop eax; add eax, 0x28150001; cld; dec dword ptr [eax + 0x24000105]; sub ah, bh; call esp; 
0x00054a16: pop eax; add esp, 0x5c; ret; 
0x0016beac: pop eax; dec edi; add al, byte ptr [eax]; xchg eax, esp; sbb bh, al; call eax; 
0x0011fae8: pop eax; hlt; inc dword ptr [ebx - 0x6bf0fe08]; rol byte ptr [ebx - 0x49f0e73c], 0xc0; pop ebx; ret; 
0x00189421: pop eax; hlt; jmp dword ptr [ebx + 1]; 
0x0007da84: pop eax; inc ecx; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00094c83: pop eax; jnp 0x5b1570ce; pop esi; ret; 
0x00091800: pop eax; jnp 0x5e113c4b; ret; 
0x0019aab8: pop eax; lahf; clc; jmp dword ptr [edi]; 
0x00064d80: pop eax; mov dword ptr [ecx + 0xb8], edx; pop ebx; ret; 
0x0011cbb3: pop eax; mov dword ptr [esp + 0x30], edx; mov edx, dword ptr [eax + 8]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x0006d6d3: pop eax; mov dword ptr [esp], ebp; add eax, 0x2c; mov dword ptr [esp + 4], eax; call dword ptr [ebp + 0x18]; 
0x0006dcba: pop eax; mov dword ptr [esp], ecx; add eax, 0x2c; mov dword ptr [esp + 4], eax; call dword ptr [ecx + 0x18]; 
0x0006ccba: pop eax; mov dword ptr [esp], edx; add eax, 0x2c; mov dword ptr [esp + 4], eax; call dword ptr [edx + 4]; 
0x0002df38: pop eax; mov eax, 0x77; int 0x80; 
0x0006cace: pop eax; mov eax, dword ptr [eax + 0xb8]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0006a0bd: pop eax; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x00069f9d: pop eax; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x000e60b0: pop eax; mov edi, dword ptr [esp + 0x5c]; mov ebp, dword ptr [esp + 0x60]; add esp, 0x64; ret; 
0x0007e7dc: pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x0019ac58: pop eax; mov edx, 0xa1240002; clc; jmp dword ptr [edi]; 
0x001949f8: pop eax; movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [ebx]; 
0x000e091a: pop eax; movzx eax, al; pop ebx; ret; 
0x00095ae7: pop eax; nop; lea esi, dword ptr [esi]; xor eax, eax; ret; 
0x0016fdbb: pop eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00171bda: pop eax; or cl, byte ptr [esi]; add al, 0xc7; ret; 
0x0017d9f8: pop eax; or dh, al; call dword ptr [edx]; 
0x00179a35: pop eax; out dx, eax; jmp dword ptr [ebx]; 
0x00183f38: pop eax; outsb dx, byte ptr [esi]; int1; jmp dword ptr [edi]; 
0x0001706b: pop eax; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002fdca: pop eax; pop ebx; pop esi; pop edi; ret; 
0x000a7197: pop eax; pop edi; pop esi; ret; 
0x00195358: pop eax; popal; add al, byte ptr [eax]; inc esp; xor dh, bh; call ebx; 
0x0019752b: pop eax; push cs; add al, 0xc6; ret; 
0x00094c63: pop eax; push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000917e0: pop eax; push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0016a7d4: pop eax; ret 1; 
0x00023be8: pop eax; ret; 
0x0016a9dc: pop eax; rol byte ptr [ecx], 1; add byte ptr [edi + esi*8 - 0xd], dh; call eax; 
0x0013a24a: pop eax; rol byte ptr [edx], 1; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000a5584: pop eax; sbb edi, esi; dec dword ptr [ebx - 0x1d3e57ab]; add al, byte ptr [ebp + 0xfc789c0]; test byte ptr [esi + 0x1fffff7], dh; ret 0x5589; 
0x001677cd: pop eax; std; call dword ptr [eax + 0x59]; 
0x001677cd: pop eax; std; call dword ptr [eax + 0x59]; std; jmp eax; 
0x001677c9: pop eax; std; inc eax; pop eax; std; call dword ptr [eax + 0x59]; 
0x00190f5b: pop eax; xchg byte ptr [edx], al; dec ebp; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0018c0e7: pop eax; xchg byte ptr [edx], al; or cl, byte ptr [0xffffc604]; ret; 
0x0018582f: pop eax; xchg byte ptr [edx], al; pop edx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x001733c7: pop eax; xchg byte ptr [edx], al; push edi; push cs; add al, 0xc6; ret; 
0x00188908: pop eax; xchg eax, edx; add dword ptr [eax], eax; fdivp st(3); hlt; call dword ptr [eax]; 
0x0003f8d2: pop eax; xor al, 0x8b; push eax; cmp byte ptr [ebx + 0x408b3c48], cl; inc eax; ret; 
0x0019454f: pop eax; xor eax, 0xd1cfff6; in al, dx; xor al, 0xf6; jmp dword ptr [edx]; 
0x0016c125: pop ebp; add al, byte ptr [eax]; in al, 0x4e; clc; call esp; 
0x00174f51: pop ebp; add byte ptr [eax], al; pop esp; imul ebp; jmp dword ptr [ebx]; 
0x0016a185: pop ebp; add dword ptr [eax], eax; in al, 0x66; int1; call dword ptr [eax]; 
0x001853d9: pop ebp; add dword ptr [eax], eax; mov byte ptr [edx - 0xe], al; call dword ptr [eax]; 
0x000ca2fb: pop ebp; and eax, 1; neg eax; ret 8; 
0x00199ca9: pop ebp; clc; call dword ptr [eax]; 
0x00199ccd: pop ebp; clc; call dword ptr [ebp]; 
0x0016c1f1: pop ebp; clc; call eax; 
0x0016c1e9: pop ebp; clc; inc dword ptr [ecx + 0x5d740002]; clc; call eax; 
0x0012e799: pop ebp; dec eax; pop es; add byte ptr [ecx - 0x76f3dba4], cl; ret; 
0x0011fa2f: pop ebp; hlt; inc dword ptr [ebx - 0x6bf0fe08]; rol byte ptr [ebx - 0x49f0d73c], 0xc0; pop ebx; ret; 
0x000f1cf6: pop ebp; hlt; mov edi, dword ptr [ebp - 4]; mov esp, ebp; pop ebp; ret; 
0x000b830c: pop ebp; in al, 0x89; ret; 
0x000b819f: pop ebp; inc eax; add al, 0; mov ecx, eax; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x00183bd1: pop ebp; int1; call dword ptr [eax]; 
0x00095302: pop ebp; lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; xor eax, eax; ret; 
0x0011ed32: pop ebp; mov edx, eax; mov eax, edx; ret; 
0x00111f45: pop ebp; movzx eax, ax; ret; 
0x000e0e2b: pop ebp; neg eax; ret; 
0x0008345d: pop ebp; nop; ret; 
0x0019585f: pop ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00188da1: pop ebp; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x0017a59a: pop ebp; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00179af9: pop ebp; out dx, eax; jmp dword ptr [ecx]; 
0x0017b4f9: pop ebp; outsd dx, dword ptr [esi]; out dx, eax; jmp dword ptr [edx]; 
0x0007c79d: pop ebp; pop ebx; pop esi; pop edi; ret; 
0x001321a3: pop ebp; pop ebx; ret; 
0x00145455: pop ebp; pop ebx; xor eax, eax; ret; 
0x000eeaf3: pop ebp; pop edi; pop esi; pop ebx; ret; 
0x0002f818: pop ebp; pop esi; pop edi; ret; 
0x0017138b: pop ebp; push cs; adc al, 0x41; ret; 
0x0017035f: pop ebp; push cs; adc al, 0x43; ret; 
0x00185cbe: pop ebp; push cs; add al, 0xc6; ret; 
0x00187f42: pop ebp; push es; ret; 
0x00094929: pop ebp; pushal; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00017e79: pop ebp; ret 0x10; 
0x000d7aa1: pop ebp; ret 0x14; 
0x000d2eea: pop ebp; ret 0x18; 
0x000db4c2: pop ebp; ret 0x1c; 
0x0001acec: pop ebp; ret 0xc; 
0x0001715f: pop ebp; ret 4; 
0x00027c25: pop ebp; ret 8; 
0x0001706f: pop ebp; ret; 
0x0008d2f5: pop ebp; ror dword ptr [eax + eax], cl; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000cf110: pop ebp; sar eax, 0x1f; and eax, 0xc; ret 8; 
0x00177545: pop ebp; shr esi, 1; jmp dword ptr [edx]; 
0x0016778d: pop ebp; std; call dword ptr [eax + 0x5c]; 
0x00167799: pop ebp; std; call dword ptr [eax + 0x5d]; 
0x00167799: pop ebp; std; call dword ptr [eax + 0x5d]; std; jmp dword ptr [eax + 0x50]; 
0x0016777d: pop ebp; std; call dword ptr [esi + 0x5c]; 
0x00167789: pop ebp; std; call dword ptr [esi + 0x5d]; 
0x001676f9: pop ebp; std; dec dword ptr [ebp + ebx*2 + 0x5c86fffd]; std; jmp esi; 
0x00167709: pop ebp; std; inc dword ptr [esi - 0x7f0002a3]; pop esp; std; jmp eax; 
0x0016779d: pop ebp; std; jmp dword ptr [eax + 0x50]; 
0x0016775d: pop ebp; std; jmp dword ptr [edx + 0x5c]; 
0x00167769: pop ebp; std; jmp dword ptr [edx + 0x5d]; 
0x00167779: pop ebp; std; lcall ptr [ebp + ebx*2 - 3]; call dword ptr [esi + 0x5c]; 
0x00167759: pop ebp; std; ljmp ptr [eax + 0x5d]; std; jmp dword ptr [edx + 0x5c]; 
0x0016772d: pop ebp; std; push dword ptr [esp + ebx*2 - 3]; call esp; 
0x0018a307: pop ebp; xchg byte ptr [edx], al; pushal; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00140513: pop ebp; xor eax, eax; ret; 
0x0004462d: pop ebx; add al, 0; add byte ptr [eax - 0x4ab43], al; call dword ptr [ebx + 0xf]; 
0x00195251: pop ebx; add al, byte ptr [eax]; aas; xor al, 0xf7; call dword ptr [eax]; 
0x0016c0c5: pop ebx; add al, byte ptr [eax]; inc esp; inc edi; clc; jmp dword ptr [eax]; 
0x00194d79: pop ebx; add al, byte ptr [eax]; movsb byte ptr es:[edi], byte ptr [esi]; sub bh, dh; jmp dword ptr [edi]; 
0x00195281: pop ebx; add al, byte ptr [eax]; pop ds; xor al, 0xf7; call dword ptr [eax]; 
0x00195221: pop ebx; add al, byte ptr [eax]; pop edi; xor al, 0xf7; call dword ptr [eax]; 
0x00196ee5: pop ebx; add cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0011da98: pop ebx; add dword ptr [eax], eax; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x75]; 
0x00095121: pop ebx; add dword ptr [eax], eax; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x00184d05: pop ebx; add dword ptr [eax], eax; test al, 0xda; cli; call dword ptr [ecx + 3]; 
0x000343cf: pop ebx; add eax, 0x80000000; pop esi; pop edi; pop ebp; ret; 
0x000eec13: pop ebx; add ebx, 0xb43e1; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x00158920: pop ebx; and dword ptr [esi + ebp*2 - 0x7a], edi; lahf; ret 0x871e; 
0x00001a61: pop ebx; cdq; xchg eax, esp; pop edx; int 0x4f; jmp edx; 
0x00199b65: pop ebx; clc; call dword ptr [ecx]; 
0x0016d801: pop ebx; cli; call eax; 
0x0015891e: pop ebx; cmc; pop ebx; and dword ptr [esi + ebp*2 - 0x7a], edi; lahf; ret 0x871e; 
0x00002255: pop ebx; cmp byte ptr [edi], cl; xchg byte ptr [eax - 0x7f78efd8], al; sub byte ptr [eax], dl; salc; ret; 
0x000b993b: pop ebx; cmp dword ptr gs:[edx], 0x26; mov edx, 0xffffffff; cmovne eax, edx; ret; 
0x0003960b: pop ebx; fchs; pop esi; pop edi; pop ebp; ret; 
0x00149044: pop ebx; lea eax, dword ptr [eax + 8]; pop edi; ret; 
0x001486e4: pop ebx; lea eax, dword ptr [ecx + 9]; ret; 
0x00148024: pop ebx; lea eax, dword ptr [edi + 8]; pop edi; ret; 
0x0003222b: pop ebx; lea eax, dword ptr [edx + 2]; pop esi; pop edi; pop ebp; ret; 
0x00176c0d: pop ebx; leave; out dx, al; jmp dword ptr [edx]; 
0x0019046d: pop ebx; mov ch, dh; jmp dword ptr [edx]; 
0x0006765c: pop ebx; mov eax, dword ptr [esi + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x000347bf: pop ebx; mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x000f7b02: pop ebx; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0005ea5a: pop ebx; mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x000db87d: pop ebx; mov eax, edx; pop esi; pop edi; pop ebp; ret 0x1c; 
0x000d0835: pop ebx; mov eax, edx; pop esi; pop edi; pop ebp; ret 8; 
0x00022e67: pop ebx; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x00055453: pop ebx; mov eax, edx; ret; 
0x00082f66: pop ebx; mov eax, esi; mov edi, dword ptr [esp + 4]; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x000cd550: pop ebx; mov eax, esi; pop esi; pop edi; pop ebp; ret 4; 
0x0002ad60: pop ebx; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x000f722c: pop ebx; mov ecx, dword ptr gs:[ecx]; test byte ptr [ecx + eax*2 + 1], 0x40; cmove eax, edx; ret; 
0x000354e5: pop ebx; mov edx, edi; pop esi; pop edi; pop ebp; ret; 
0x0008e957: pop ebx; mov esi, 0xc03000c; cdq; jmp ecx; 
0x00082ff9: pop ebx; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000eb5bc: pop ebx; movzx eax, al; pop esi; pop edi; pop ebp; ret; 
0x000f44b2: pop ebx; not eax; pop esi; pop edi; pop ebp; ret; 
0x00093491: pop ebx; or byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; mov esp, 0x27; add byte ptr [ebp - 0x7cc78a40], al; ret; 
0x00189972: pop ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018939d: pop ebx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0017c867: pop ebx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0008d451: pop ebx; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ba0e2: pop ebx; or eax, 1; pop esi; pop edi; pop ebp; ret; 
0x000e0e2a: pop ebx; pop ebp; neg eax; ret; 
0x0002f817: pop ebx; pop ebp; pop esi; pop edi; ret; 
0x0002dd6b: pop ebx; pop ebp; ret; 
0x00140512: pop ebx; pop ebp; xor eax, eax; ret; 
0x0002e93f: pop ebx; pop edi; ret; 
0x000fc1ca: pop ebx; pop edx; ret; 
0x00023e03: pop ebx; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x00023efc: pop ebx; pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x000c6b2a: pop ebx; pop esi; mov eax, edx; ret; 
0x000b6a94: pop ebx; pop esi; pop ebp; ret; 
0x001208e6: pop ebx; pop esi; pop edi; mov eax, ecx; pop ebp; ret 0x10; 
0x000d12f4: pop ebx; pop esi; pop edi; mov eax, ecx; pop ebp; ret 4; 
0x000ebe1d: pop ebx; pop esi; pop edi; mov eax, ecx; pop ebp; ret; 
0x000db8d3: pop ebx; pop esi; pop edi; mov eax, edx; pop ebp; ret 0x1c; 
0x000825e1: pop ebx; pop esi; pop edi; mov eax, edx; pop ebp; ret; 
0x0012e533: pop ebx; pop esi; pop edi; neg eax; ret; 
0x00111f42: pop ebx; pop esi; pop edi; pop ebp; movzx eax, ax; ret; 
0x000eeb28: pop ebx; pop esi; pop edi; pop ebp; neg eax; ret; 
0x00017e76: pop ebx; pop esi; pop edi; pop ebp; ret 0x10; 
0x000d7a9e: pop ebx; pop esi; pop edi; pop ebp; ret 0x14; 
0x000d2ee7: pop ebx; pop esi; pop edi; pop ebp; ret 0x18; 
0x000db4bf: pop ebx; pop esi; pop edi; pop ebp; ret 0x1c; 
0x0001ace9: pop ebx; pop esi; pop edi; pop ebp; ret 0xc; 
0x0001715c: pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00027c22: pop ebx; pop esi; pop edi; pop ebp; ret 8; 
0x0001706c: pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00016fe8: pop ebx; pop esi; pop edi; ret; 
0x000725a6: pop ebx; pop esi; pop edi; sub eax, ebp; pop ebp; ret; 
0x00095290: pop ebx; pop esi; pop edi; xor eax, eax; ret; 
0x00019095: pop ebx; pop esi; ret; 
0x00095239: pop ebx; pop esi; sub eax, 0x10; pop edi; ret; 
0x000716ed: pop ebx; pop esi; sub eax, edi; pop edi; pop ebp; ret; 
0x00147640: pop ebx; pop esi; xor eax, eax; pop edi; ret; 
0x0018be9c: pop ebx; push cs; adc al, 0x43; ret; 
0x0019a816: pop ebx; push cs; add al, 0xc6; ret; 
0x00001a1c: pop ebx; ret 0x2a63; 
0x000709e1: pop ebx; ret 0xffff; 
0x0001934e: pop ebx; ret; 
0x00132454: pop ebx; sub eax, edx; pop esi; pop edi; pop ebp; ret; 
0x00098b17: pop ebx; sub eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00130810: pop ebx; xor eax, eax; ret; 
0x00174a51: pop ecx; add al, 0xa; ret; 
0x0010d8f3: pop ecx; add al, byte ptr [eax]; add byte ptr [ecx + 0x71e8243c], cl; adc bh, ch; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x0000a4d5: pop ecx; add byte ptr [eax], al; nop; ret; 
0x00187068: pop ecx; add ebx, esi; call dword ptr [eax]; 
0x0003f941: pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x00024df3: pop ecx; and edi, edi; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x00199a1d: pop ecx; clc; jmp dword ptr [ecx]; 
0x00169d20: pop ecx; das; int1; jmp esp; 
0x001888ce: pop ecx; hlt; jmp dword ptr [edx]; 
0x00168159: pop ecx; in al, dx; call eax; 
0x00040ea3: pop ecx; mov word ptr [0x1cc48300], es; ret; 
0x0017c17c: pop ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00185cb6: pop ecx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0017310d: pop ecx; out 0xeb, al; jmp dword ptr [edx]; 
0x000f2780: pop ecx; pop eax; ret; 
0x00001a1b: pop ecx; pop ebx; ret 0x2a63; 
0x000fc1f2: pop ecx; pop ebx; ret; 
0x0002dc4b: pop ecx; pop edx; ret; 
0x00174507: pop ecx; push cs; add al, 0xc6; ret; 
0x00184d71: pop ecx; push cs; or byte ptr [ebx + 0x40e4902], al; ret; 
0x000cae3b: pop ecx; ret; 
0x001677d1: pop ecx; std; jmp eax; 
0x00185c20: pop ecx; xchg byte ptr [edx], al; add ah, byte ptr [edx + 0xe]; add al, 0xc6; ret; 
0x0019a111: pop edi; add al, 0xa; ret; 
0x0006b89b: pop edi; add byte ptr [eax], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017511d: pop edi; add byte ptr [eax], al; xor ch, bh; in eax, dx; jmp dword ptr [eax + 1]; 
0x00183479: pop edi; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00172531: pop edi; add dword ptr [edx], ecx; ret; 
0x0008ef4d: pop edi; add eax, 0x5e5f0000; pop ebx; ret; 
0x000660ae: pop edi; add ebp, eax; mov eax, ebp; pop ebp; ret; 
0x00134621: pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c9d87: pop edi; and ah, 0xfe; neg eax; pop ebp; ret; 
0x0013caa3: pop edi; call 0x129d73; add ebx, 0x2ac37; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013c999: pop edi; call 0x129d73; add ebx, 0x2ad41; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013c892: pop edi; call 0x129d73; add ebx, 0x2ae48; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013b362: pop edi; call 0x129d73; add ebx, 0x2c1b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013a453: pop edi; call 0x129d73; add ebx, 0x2ce47; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013a349: pop edi; call 0x129d73; add ebx, 0x2cf51; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013a242: pop edi; call 0x129d73; add ebx, 0x2d058; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00139453: pop edi; call 0x129d73; add ebx, 0x2dc87; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00139349: pop edi; call 0x129d73; add ebx, 0x2dd91; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00139242: pop edi; call 0x129d73; add ebx, 0x2de98; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00138473: pop edi; call 0x129d73; add ebx, 0x2eaa7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00138369: pop edi; call 0x129d73; add ebx, 0x2ebb1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00138262: pop edi; call 0x129d73; add ebx, 0x2ecb8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00136c92: pop edi; call 0x129d73; add ebx, 0x300c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00135812: pop edi; call 0x129d73; add ebx, 0x312c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134382: pop edi; call 0x129d73; add ebx, 0x324d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b5f9: pop edi; cmc; call dword ptr [edx]; 
0x0008350b: pop edi; lea esi, dword ptr [esi]; ret; 
0x0008db30: pop edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x000ca08c: pop edi; mov dword ptr [eax + 0x20], edx; pop ebp; ret; 
0x00139f7c: pop edi; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x001339c0: pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001208e8: pop edi; mov eax, ecx; pop ebp; ret 0x10; 
0x000d12f6: pop edi; mov eax, ecx; pop ebp; ret 4; 
0x000ebe1f: pop edi; mov eax, ecx; pop ebp; ret; 
0x000db8d5: pop edi; mov eax, edx; pop ebp; ret 0x1c; 
0x000825e3: pop edi; mov eax, edx; pop ebp; ret; 
0x000c6aa0: pop edi; mov eax, edx; pop ebx; pop esi; ret; 
0x00023e3a: pop edi; mov ebp, eax; mov eax, ebp; pop ebp; ret; 
0x0012e535: pop edi; neg eax; ret; 
0x001447ed: pop edi; or al, 0; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00094994: pop edi; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001701e5: pop edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017473c: pop edi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0017d1dc: pop edi; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x00196d1f: pop edi; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x000ca2fa: pop edi; pop ebp; and eax, 1; neg eax; ret 8; 
0x0011ed31: pop edi; pop ebp; mov edx, eax; mov eax, edx; ret; 
0x00111f44: pop edi; pop ebp; movzx eax, ax; ret; 
0x000eeb2a: pop edi; pop ebp; neg eax; ret; 
0x0008345c: pop edi; pop ebp; nop; ret; 
0x001321a2: pop edi; pop ebp; pop ebx; ret; 
0x00145454: pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x00017e78: pop edi; pop ebp; ret 0x10; 
0x000d7aa0: pop edi; pop ebp; ret 0x14; 
0x000d2ee9: pop edi; pop ebp; ret 0x18; 
0x000db4c1: pop edi; pop ebp; ret 0x1c; 
0x0001aceb: pop edi; pop ebp; ret 0xc; 
0x0001715e: pop edi; pop ebp; ret 4; 
0x00027c24: pop edi; pop ebp; ret 8; 
0x0001706e: pop edi; pop ebp; ret; 
0x000cf10f: pop edi; pop ebp; sar eax, 0x1f; and eax, 0xc; ret 8; 
0x00140511: pop edi; pop ebx; pop ebp; xor eax, eax; ret; 
0x00087132: pop edi; pop ebx; ret; 
0x000b3e31: pop edi; pop es; add byte ptr [ecx + 0xef1c0c3], al; add byte ptr [edi + 0x8db8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e0e28: pop edi; pop esi; pop ebx; pop ebp; neg eax; ret; 
0x0008d3f0: pop edi; pop esi; pop ebx; ret; 
0x0007dc78: pop edi; pop esi; ret; 
0x0008db10: pop edi; push cs; pop edi; pop esi; pop ebx; ret; 
0x00026d97: pop edi; ret 0x17; 
0x00016fea: pop edi; ret; 
0x0001af97: pop edi; sbb byte ptr [eax], 0; mov eax, dword ptr [ecx + 0x36c0]; ret; 
0x001772dd: pop edi; shr dh, 1; jmp dword ptr [edx]; 
0x0016780d: pop edi; std; jmp dword ptr [eax]; 
0x001677fd: pop edi; std; jmp dword ptr [esi]; 
0x000725a8: pop edi; sub eax, ebp; pop ebp; ret; 
0x00195224: pop edi; xor al, 0xf7; call dword ptr [eax]; 
0x000efe97: pop edi; xor dword ptr [ebx], ecx; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00130631: pop edi; xor eax, eax; pop ebp; ret; 
0x00095292: pop edi; xor eax, eax; ret; 
0x00172da0: pop edx; add ah, ch; call dword ptr [eax]; 
0x0016c095: pop edx; add al, byte ptr [eax]; in al, 0x40; clc; jmp esp; 
0x00194c2d: pop edx; add al, byte ptr [eax]; inc eax; sub edi, esi; call dword ptr [ecx]; 
0x00174c01: pop edx; add byte ptr [eax], al; mov word ptr [esi - 3], ds; jmp dword ptr [eax]; 
0x0016a0fd: pop edx; add dword ptr [eax], eax; in al, 0x5c; int1; call dword ptr [eax + 0x5a]; 
0x00196525: pop edx; add dword ptr [edx], ecx; ret; 
0x001945fc: pop edx; and dh, bh; call dword ptr [eax]; 
0x0016cfd0: pop edx; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; jmp dword ptr [eax]; 
0x001785a1: pop edx; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x00168171: pop edx; in al, dx; call dword ptr [eax]; 
0x00001a64: pop edx; int 0x4f; jmp edx; 
0x00003b52: pop edx; int1; mov dl, 0x1e; ret; 
0x00169c98: pop edx; int1; push dword ptr [ebp + esi + 0x2e6a0001]; int1; jmp esp; 
0x0007c90d: pop edx; lea ecx, dword ptr [edx + ecx*8 + 0xb]; jmp ecx; 
0x0006552d: pop edx; mov eax, dword ptr [esi + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x000024f6: pop edx; mov edx, 0xd8f9715c; dec esi; jp 0x24df; jmp dword ptr [ebx]; 
0x001678b0: pop edx; nop; cld; call esi; 
0x00094ec4: pop edx; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001958b8: pop edx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00185832: pop edx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x000d5cf8: pop edx; out 0xff, al; inc dword ptr [ecx]; ret 0x13e9; 
0x000f277f: pop edx; pop ecx; pop eax; ret; 
0x000fc1f1: pop edx; pop ecx; pop ebx; ret; 
0x00171c56: pop edx; push cs; add al, 0xc6; ret; 
0x00001a9e: pop edx; ret; 
0x0015878c: pop edx; rol dword ptr [edx + 0x3c], cl; push cs; push esp; jmp dword ptr [ebx - 0x40]; 
0x0011a92f: pop edx; std; inc dword ptr [ebp - 0x2976f040]; add dword ptr [eax], eax; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x75]; 
0x000a609d: pop edx; sti; inc dword ptr [ecx + 0x184c4]; add byte ptr [ebx + 0x5e], bl; ret; 
0x0009c3f2: pop edx; test al, 0xf8; jmp dword ptr [esi - 0x70]; 
0x001943d9: pop edx; xor al, 0xf6; jmp dword ptr [edx]; 
0x00095555: pop edx; xor eax, eax; pop edi; ret; 
0x00019652: pop es; adc dword ptr [eax], eax; add ecx, 0x18999f; lea eax, dword ptr [ecx - 0x43dee]; ret; 
0x00019632: pop es; adc dword ptr [eax], eax; add ecx, 0x1899bf; lea eax, dword ptr [ecx - 0x46116]; ret; 
0x0013591b: pop es; adc dword ptr [ebx], eax; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001347cf: pop es; add al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001346af: pop es; add bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x000d3df9: pop es; add byte ptr [eax], al; add byte ptr [ecx - 0x2844722a], cl; ret; 
0x00109d01: pop es; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00099a9d: pop es; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x0016f9f5: pop es; add byte ptr [eax], al; clc; ret 0xffea; 
0x00001729: pop es; add byte ptr [eax], al; mov ebp, 0xbe000007; pop es; add byte ptr [eax], al; ret 7; 
0x0014e879: pop es; add byte ptr [eax], al; mov esi, 0xc0000007; pop es; add byte ptr [eax], al; ret 7; 
0x00024a1b: pop es; add byte ptr [eax], al; nop; pop ebx; ret; 
0x00130b5a: pop es; add byte ptr [eax], al; pop ebx; ret; 
0x0008d5cb: pop es; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0016f931: pop es; add byte ptr [eax], al; pop esp; mov dh, 0xea; call dword ptr [edx]; 
0x0016f91d: pop es; add byte ptr [eax], al; push eax; mov dh, 0xea; call dword ptr [edx]; 
0x0019c8d5: pop es; add byte ptr [eax], al; ret 2; 
0x00001731: pop es; add byte ptr [eax], al; ret 7; 
0x0019c9c9: pop es; add byte ptr [eax], al; rol byte ptr [edx], cl; add byte ptr [eax], al; ret 5; 
0x0019e47d: pop es; add byte ptr [eax], al; syscall; 
0x0012baf8: pop es; add byte ptr [ebx + 0x468b1456], cl; adc byte ptr [ecx], bh; ret 0x2477; 
0x0013190a: pop es; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x00127599: pop es; add byte ptr [ebx - 0x1737f], cl; jmp dword ptr [ebp + 3]; 
0x00123df7: pop es; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000b5153: pop es; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp + 3]; 
0x00123ed9: pop es; add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp - 0x39]; 
0x00082c60: pop es; add byte ptr [ecx + 0x24348bd0], cl; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000b9455: pop es; add byte ptr [ecx + 0xe9b9dc3], al; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xd3]; call dword ptr gs:[0x10]; 
0x000b93f5: pop es; add byte ptr [ecx + 0xe9bfdc3], al; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xd1]; call dword ptr gs:[0x10]; 
0x000b93b7: pop es; add byte ptr [ecx + 0xe9c3bc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000b937f: pop es; add byte ptr [ecx + 0xe9c73c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000b92bf: pop es; add byte ptr [ecx + 0xe9d33c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000b90d8: pop es; add byte ptr [ecx + 0xe9f1ac3], al; add byte ptr [ebx - 0x78f7dbac], cl; sar dword ptr [eax + 0xcd], cl; call dword ptr gs:[0x10]; 
0x000b85f5: pop es; add byte ptr [ecx + 0xea9fdc3], al; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xb]; call dword ptr gs:[0x10]; 
0x000b823c: pop es; add byte ptr [ecx + 0xeadb6c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000b81c5: pop es; add byte ptr [ecx + 0xeae2dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000b7eef: pop es; add byte ptr [ecx + 0xeb103c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000b7dcb: pop es; add byte ptr [ecx + 0xeb227c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000b7d50: pop es; add byte ptr [ecx + 0xeb2a2c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000b7bbf: pop es; add byte ptr [ecx + 0xeb433c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000b3ee9: pop es; add byte ptr [ecx + 0xef109c3], al; add byte ptr [edi + 0xdcb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b3e32: pop es; add byte ptr [ecx + 0xef1c0c3], al; add byte ptr [edi + 0x8db8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000aac9f: pop es; add byte ptr [ecx + 0xf8353c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000aac65: pop es; add byte ptr [ecx + 0xf838dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000aac23: pop es; add byte ptr [ecx + 0xf83cfc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0001925a: pop es; add byte ptr [ecx - 0x47fbdbbc], cl; ret 0; 
0x0012e6ab: pop es; add byte ptr [ecx - 0x76f3dba4], cl; ret; 
0x0000422a: pop es; add byte ptr [esi], bl; add byte ptr [eax], al; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0x52; 
0x001737b6: pop es; add cl, byte ptr [edx]; push cs; adc al, 0x45; ret; 
0x0011b2bd: pop es; add dword ptr [eax], eax; add byte ptr [ebx + 0x20508b00], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x0004c43e: pop es; add dword ptr [eax], eax; add byte ptr [ecx + 0x1b802], cl; add byte ptr [eax], al; ret; 
0x000f8b32: pop es; add dword ptr [ebx + 0x5e5b3cc4], eax; pop edi; pop ebp; ret; 
0x0013461f: pop es; add dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x0013485f: pop es; add eax, 0x8b1c035f; jmp ebx; 
0x0013473f: pop es; add ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0008f504: pop es; add edi, 0x10; call 0x129d77; add ecx, 0xcb333; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008de04: pop es; add edi, 0x10; call 0x129d77; add ecx, 0xcc8d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001200ed: pop es; and ecx, 7; mov eax, ebx; sub eax, dword ptr [ebx + ecx*4 - 0x82ef4]; shr edx, 3; jmp eax; 
0x000b849b: pop es; call edx; 
0x001983c5: pop es; clc; call edx; 
0x00191e15: pop es; cli; cmc; jmp dword ptr [edx]; 
0x0008c8bf: pop es; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00194cdd: pop es; cmp esi, esi; jmp dword ptr [edx]; 
0x00088355: pop es; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0010383f: pop es; idiv bh; mov dword ptr [esp], eax; call edx; 
0x001734ad: pop es; in al, dx; call dword ptr [edi]; 
0x00136d9b: pop es; inc dword ptr [edx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00169bc1: pop es; int1; call eax; 
0x0008f137: pop es; lea eax, dword ptr [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x0008f09d: pop es; lea eax, dword ptr [edi + 0xb]; pop edi; pop esi; pop ebx; ret; 
0x0008f121: pop es; lea eax, dword ptr [edi + 0xf]; pop edi; pop esi; pop ebx; ret; 
0x0008f047: pop es; lea eax, dword ptr [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x00149c18: pop es; lea eax, dword ptr [edi - 0x10]; pop edi; ret; 
0x00089acd: pop es; lea eax, dword ptr [edx + 0xa]; pop edi; ret; 
0x00089c0d: pop es; lea eax, dword ptr [edx + 0xa]; ret; 
0x0008c7e4: pop es; lea eax, dword ptr [edx + 0xe]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00089b31: pop es; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x00089c91: pop es; lea eax, dword ptr [edx + 0xe]; ret; 
0x00134dff: pop es; maxps xmm0, xmmword ptr [ebx]; sbb al, 0x8b; jmp ebx; 
0x0008e96c: pop es; mov ah, 9; add byte ptr [ecx + 0xcbe40c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008da6a: pop es; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x0008d97a: pop es; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x0008daca: pop es; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x0008daaa: pop es; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x0008d9ba: pop es; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x0008d9da: pop es; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x0008e33c: pop es; mov dword ptr [edx + 7], eax; lea eax, dword ptr [edx + 0xa]; pop edi; ret; 
0x0008e49c: pop es; mov dword ptr [edx + 7], eax; lea eax, dword ptr [edx + 0xa]; ret; 
0x00093ead: pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x0008ccfc: pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x0008ce5c: pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0006c0c7: pop es; mov dword ptr [esi + 0x30], edi; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0001d790: pop es; mov dword ptr [esp + 4], ebp; mov dword ptr [esp + 8], eax; mov eax, dword ptr [esi + 0xc]; mov dword ptr [esp], eax; call dword ptr [esi + 4]; 
0x00094b00: pop es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009168d: pop es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001200f0: pop es; mov eax, ebx; sub eax, dword ptr [ebx + ecx*4 - 0x82ef4]; shr edx, 3; jmp eax; 
0x00093eb0: pop es; mov eax, edi; pop ebx; pop edi; ret; 
0x000856ed: pop es; mov eax, edi; pop edi; ret; 
0x00088314: pop es; mov eax, edx; pop ebx; ret; 
0x0008582d: pop es; mov eax, edx; ret; 
0x0007b2a0: pop es; mov ebx, dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00126fed: pop es; mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x00142a5d: pop es; mov ecx, dword ptr [ebx + ecx*4 - 0x567f4]; mov eax, dword ptr [ebx + eax*4 - 0x567f4]; sub eax, ecx; pop ebx; ret; 
0x000eb900: pop es; mov edx, edi; call 0xeb8d0; mov eax, dword ptr [esi]; mov dword ptr [esp], eax; call edi; 
0x0008da8b: pop es; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x0008d99b: pop es; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x0008dc4c: pop es; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x0008dbec: pop es; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x0008dc0c: pop es; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x0008dc2c: pop es; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x00091686: pop es; movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00091708: pop es; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008db4c: pop es; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x0008db0c: pop es; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x0008db2c: pop es; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x0008dd53: pop es; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0008d9fc: pop es; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x0008dd63: pop es; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0008da1c: pop es; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x0008da3c: pop es; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x0008e3bc: pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x0008e51c: pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, dword ptr [edx + 0xe]; ret; 
0x00093f2f: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd7c: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x0008cedc: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x00089ac6: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, dword ptr [edx + 0xa]; pop edi; ret; 
0x00089c06: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, dword ptr [edx + 0xa]; ret; 
0x000856e6: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x00085826: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x00089b28: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x00089c88: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, dword ptr [edx + 0xe]; ret; 
0x00085748: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x0008830b: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000858a8: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x001403b0: pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x0013ec03: pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x00134c4f: pop es; or al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134b2f: pop es; or bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x00134a0f: pop es; or byte ptr [edi + 3], bl; sbb al, 0x8b; jmp ebx; 
0x00189c02: pop es; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00134a9f: pop es; or dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x00134cdf: pop es; or eax, 0x8b1c035f; jmp ebx; 
0x00134bbf: pop es; or ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0002fdc9: pop es; pop eax; pop ebx; pop esi; pop edi; ret; 
0x000876b6: pop es; pop ebx; ret; 
0x00134980: pop es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001339bf: pop es; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00133f0f: pop es; pop edi; pop ebx; ret; 
0x0008d967: pop es; pop edi; pop esi; pop ebx; ret; 
0x0008997a: pop es; pop edi; ret; 
0x0013497f: pop es; pop es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00138faa: pop es; pop esi; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013d5ca: pop es; pop esi; pop edi; pop ebx; ret; 
0x00134d6f: pop es; push cs; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001348ef: pop es; push es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0002acc5: pop es; ret 0xfffe; 
0x00001a32: pop es; ret; 
0x00167a20: pop es; scasd eax, dword ptr es:[edi]; cld; call dword ptr [eax]; 
0x001103ec: pop es; shl esi, 4; lea eax, dword ptr [edx + esi + 8]; pop esi; ret; 
0x0010359d: pop es; shr eax, 5; add esp, 0xc; ret; 
0x0016ca81: pop es; stc; call esp; 
0x0017a369: pop es; std; call dword ptr [esi]; 
0x00166e55: pop es; std; jmp eax; 
0x0017ad41: pop es; sti; jmp edx; 
0x001403b4: pop es; sub eax, ecx; pop ebp; ret; 
0x0013ec07: pop es; sub eax, ecx; ret; 
0x000724a2: pop es; xchg eax, esp; add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbac], cl; cmp al, 0x24; call dword ptr [eax + 0xc]; 
0x0007cb47: pop es; xor byte ptr [ebp - 0x6bf080c4], cl; ret 0xed83; 
0x00039439: pop esi; add al, 0; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x0016c155: pop esi; add al, byte ptr [eax]; adc al, 0x57; clc; jmp dword ptr [eax]; 
0x0016c14d: pop esi; add al, byte ptr [eax]; push esi; clc; jmp eax; 
0x001725fc: pop esi; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0018509d: pop esi; add dword ptr [eax], eax; nop; sub dl, dh; jmp dword ptr [ecx]; 
0x001368c4: pop esi; add dword ptr [ebx], eax; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000a6301: pop esi; add eax, 0x8d99eb00; add ch, al; ret; 
0x000a866d: pop esi; add eax, edx; ret; 
0x00095272: pop esi; bsr eax, eax; add eax, edi; sub eax, 0x10; pop edi; ret; 
0x0013d77c: pop esi; call 0x129d73; add ebx, 0x2a05e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013c676: pop esi; call 0x129d73; add ebx, 0x2afa4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013b14c: pop esi; call 0x129d73; add ebx, 0x2c24e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00138046: pop esi; call 0x129d73; add ebx, 0x2ee14; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199d41: pop esi; clc; jmp dword ptr [ebx]; 
0x001780b8: pop esi; daa; sti; call dword ptr [eax]; 
0x001674bc: pop esi; dec ebx; std; jmp esp; 
0x001784e5: pop esi; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x0005f6d9: pop esi; fdivr st(7); dec dword ptr [ecx - 0x10343]; dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0xe343]; jmp dword ptr [ebp - 0x77]; 
0x001894fd: pop esi; hlt; call dword ptr [edx]; 
0x0011f97f: pop esi; hlt; inc dword ptr [ebx - 0x6bf0fe08]; rol byte ptr [ebx - 0x49f0d73c], 0xc0; pop ebx; ret; 
0x0011f9d8: pop esi; hlt; inc dword ptr [ebx - 0x6bf0fe08]; rol byte ptr [ebx - 0x49f0e73c], 0xc0; pop ebx; ret; 
0x001681d1: pop esi; in al, dx; jmp dword ptr [eax - 0x61]; 
0x00149bbe: pop esi; lea eax, dword ptr [edi - 0x10]; pop edi; ret; 
0x000ca088: pop esi; mov dword ptr [eax + 0x1c], edx; pop edi; mov dword ptr [eax + 0x20], edx; pop ebp; ret; 
0x001268ca: pop esi; mov eax, 1; pop edi; pop ebp; ret; 
0x00023e04: pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x00047bf6: pop esi; mov eax, ecx; pop edi; pop ebp; ret; 
0x00023efd: pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x0002f8aa: pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x000c6b2b: pop esi; mov eax, edx; ret; 
0x000dd944: pop esi; mov edi, eax; mov eax, edi; pop edi; pop ebp; ret; 
0x00114a78: pop esi; movzx eax, al; pop edi; pop ebp; ret; 
0x000834aa: pop esi; nop; lea esi, dword ptr [esi]; ret; 
0x000bafdd: pop esi; nop; ret; 
0x00166cfc: pop esi; or al, 0xfd; call esp; 
0x00185ac3: pop esi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00171c4e: pop esi; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x001730ad: pop esi; out 0xeb, al; jmp dword ptr [edx]; 
0x0005d534: pop esi; out 0xff, eax; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x75]; 
0x0014572d: pop esi; pop ebp; pop ebx; ret; 
0x0014571a: pop esi; pop ebp; pop ebx; xor eax, eax; ret; 
0x000b6a95: pop esi; pop ebp; ret; 
0x000e0e29: pop esi; pop ebx; pop ebp; neg eax; ret; 
0x000fc1c9: pop esi; pop ebx; pop edx; ret; 
0x0007dfa0: pop esi; pop ebx; ret; 
0x000660ad: pop esi; pop edi; add ebp, eax; mov eax, ebp; pop ebp; ret; 
0x000c9d86: pop esi; pop edi; and ah, 0xfe; neg eax; pop ebp; ret; 
0x0013caa2: pop esi; pop edi; call 0x129d73; add ebx, 0x2ac37; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013c998: pop esi; pop edi; call 0x129d73; add ebx, 0x2ad41; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013c891: pop esi; pop edi; call 0x129d73; add ebx, 0x2ae48; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013a452: pop esi; pop edi; call 0x129d73; add ebx, 0x2ce47; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013a348: pop esi; pop edi; call 0x129d73; add ebx, 0x2cf51; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013a241: pop esi; pop edi; call 0x129d73; add ebx, 0x2d058; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00139452: pop esi; pop edi; call 0x129d73; add ebx, 0x2dc87; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00139348: pop esi; pop edi; call 0x129d73; add ebx, 0x2dd91; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00139241: pop esi; pop edi; call 0x129d73; add ebx, 0x2de98; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00138472: pop esi; pop edi; call 0x129d73; add ebx, 0x2eaa7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00138368: pop esi; pop edi; call 0x129d73; add ebx, 0x2ebb1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00138261: pop esi; pop edi; call 0x129d73; add ebx, 0x2ecb8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008350a: pop esi; pop edi; lea esi, dword ptr [esi]; ret; 
0x00138fab: pop esi; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001208e7: pop esi; pop edi; mov eax, ecx; pop ebp; ret 0x10; 
0x000d12f5: pop esi; pop edi; mov eax, ecx; pop ebp; ret 4; 
0x000ebe1e: pop esi; pop edi; mov eax, ecx; pop ebp; ret; 
0x000db8d4: pop esi; pop edi; mov eax, edx; pop ebp; ret 0x1c; 
0x000825e2: pop esi; pop edi; mov eax, edx; pop ebp; ret; 
0x00023e39: pop esi; pop edi; mov ebp, eax; mov eax, ebp; pop ebp; ret; 
0x0012e534: pop esi; pop edi; neg eax; ret; 
0x000ca2f9: pop esi; pop edi; pop ebp; and eax, 1; neg eax; ret 8; 
0x0011ed30: pop esi; pop edi; pop ebp; mov edx, eax; mov eax, edx; ret; 
0x00111f43: pop esi; pop edi; pop ebp; movzx eax, ax; ret; 
0x000eeb29: pop esi; pop edi; pop ebp; neg eax; ret; 
0x0008345b: pop esi; pop edi; pop ebp; nop; ret; 
0x001321a1: pop esi; pop edi; pop ebp; pop ebx; ret; 
0x00145453: pop esi; pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x00017e77: pop esi; pop edi; pop ebp; ret 0x10; 
0x000d7a9f: pop esi; pop edi; pop ebp; ret 0x14; 
0x000d2ee8: pop esi; pop edi; pop ebp; ret 0x18; 
0x000db4c0: pop esi; pop edi; pop ebp; ret 0x1c; 
0x0001acea: pop esi; pop edi; pop ebp; ret 0xc; 
0x0001715d: pop esi; pop edi; pop ebp; ret 4; 
0x00027c23: pop esi; pop edi; pop ebp; ret 8; 
0x0001706d: pop esi; pop edi; pop ebp; ret; 
0x000cf10e: pop esi; pop edi; pop ebp; sar eax, 0x1f; and eax, 0xc; ret 8; 
0x00140510: pop esi; pop edi; pop ebx; pop ebp; xor eax, eax; ret; 
0x00131c3d: pop esi; pop edi; pop ebx; ret; 
0x00016fe9: pop esi; pop edi; ret; 
0x000725a7: pop esi; pop edi; sub eax, ebp; pop ebp; ret; 
0x00130630: pop esi; pop edi; xor eax, eax; pop ebp; ret; 
0x00095291: pop esi; pop edi; xor eax, eax; ret; 
0x000b3ee8: pop esi; pop es; add byte ptr [ecx + 0xef109c3], al; add byte ptr [edi + 0xdcb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0018f15b: pop esi; push cs; adc al, 0x41; ret; 
0x0008712e: pop esi; push es; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x001050b3: pop esi; ret 4; 
0x00019096: pop esi; ret; 
0x00167819: pop esi; std; call dword ptr [eax]; 
0x00167861: pop esi; std; call dword ptr [edx + 0x5e]; 
0x00167809: pop esi; std; call dword ptr [esi]; 
0x00167809: pop esi; std; call dword ptr [esi]; pop edi; std; jmp dword ptr [eax]; 
0x001677e5: pop esi; std; call edx; 
0x001677e5: pop esi; std; call edx; pop esi; std; jmp dword ptr [edx]; 
0x001677e1: pop esi; std; inc dword ptr [edx - 0x2d0002a2]; pop esi; std; jmp dword ptr [edx]; 
0x0016785d: pop esi; std; inc dword ptr [edx]; pop esi; std; call dword ptr [edx + 0x5e]; 
0x00167815: pop esi; std; inc eax; pop esi; std; call dword ptr [eax]; 
0x00167805: pop esi; std; inc esi; pop esi; std; call dword ptr [esi]; 
0x00174c05: pop esi; std; jmp dword ptr [eax]; 
0x001677e9: pop esi; std; jmp dword ptr [edx]; 
0x00167899: pop esi; std; jmp eax; 
0x00167889: pop esi; std; jmp esi; 
0x001677f9: pop esi; std; lcall ptr [edi + ebx*2]; std; jmp dword ptr [esi]; 
0x0009523a: pop esi; sub eax, 0x10; pop edi; ret; 
0x00101a32: pop esi; sub eax, 1; pop edi; pop ebp; ret; 
0x00098585: pop esi; sub eax, 4; pop edi; pop ebp; ret; 
0x000716ee: pop esi; sub eax, edi; pop edi; pop ebp; ret; 
0x0017a024: pop esi; xchg eax, ebp; out dx, eax; call dword ptr [eax]; 
0x0017a2f4: pop esi; xchg eax, ebx; out dx, eax; call dword ptr [eax]; 
0x0007dd82: pop esi; xor eax, eax; pop ebx; ret; 
0x001321b0: pop esi; xor eax, eax; pop edi; pop ebp; pop ebx; ret; 
0x0007e728: pop esi; xor eax, eax; pop edi; pop ebp; ret; 
0x00147641: pop esi; xor eax, eax; pop edi; ret; 
0x00096d97: pop esp; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0016c0e5: pop esp; add al, byte ptr [eax]; in al, 0x4a; clc; jmp esp; 
0x0016c0f5: pop esp; add al, byte ptr [eax]; xor al, 0x4b; clc; call dword ptr [eax]; 
0x00177314: pop esp; add byte ptr [eax], al; add byte ptr [edx + ebp], bh; add byte ptr [edi + ecx - 0x11], ah; call dword ptr [esi + 3]; 
0x00074cb3: pop esp; add byte ptr [eax], al; pop ebx; ret; 
0x00076f4c: pop esp; add byte ptr [esp + ecx*4 - 0x75], dh; and dword ptr [esi + edi*8 + 0x4c7ffff], 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [eax]; 
0x000d2ee3: pop esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 0x18; 
0x000fe75b: pop esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00184e8d: pop esp; add dword ptr [eax], eax; mov al, 0x49; cld; call ebx; 
0x00184100: pop esp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0017416a: pop esp; add dword ptr [edx], ecx; push cs; adc al, 0x46; ret; 
0x0011cd58: pop esp; add eax, 0x5e5b0000; pop edi; pop ebp; ret; 
0x000ef6b7: pop esp; and al, 0x10; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000eb2f4: pop esp; and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x000efc47: pop esp; and al, 0x10; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000efd57: pop esp; and al, 0x10; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000efec4: pop esp; and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x000ef8e4: pop esp; and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x000ef754: pop esp; and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x000e7e6e: pop esp; and al, 0x10; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000ef934: pop esp; and al, 0x10; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x000efa94: pop esp; and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x000efa44: pop esp; and al, 0x10; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x00123dd4: pop esp; and al, 0x10; mov eax, 0xbc; call dword ptr gs:[0x10]; 
0x00123e94: pop esp; and al, 0x10; mov eax, 0xbd; call dword ptr gs:[0x10]; 
0x000ed724: pop esp; and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x000ed694: pop esp; and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x000ed4e4: pop esp; and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012e524: pop esp; and al, 0x10; mov eax, 0xfa; call dword ptr gs:[0x10]; 
0x000ddaea: pop esp; and al, 0x10; mov edi, dword ptr [esp + 0x14]; add esp, 0x18; ret; 
0x0007b2a2: pop esp; and al, 0x10; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0001af59: pop esp; and al, 0x10; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00109844: pop esp; and al, 0x14; add esp, 0x1c; ret; 
0x000d94a7: pop esp; and al, 0x14; cmove eax, esi; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000703ca: pop esp; and al, 0x14; mov dword ptr [edx + 0xb8], ecx; add esp, 0x1c; ret; 
0x000d8030: pop esp; and al, 0x14; mov dword ptr [esi + 0x14], 0; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000f70b5: pop esp; and al, 0x14; mov dword ptr [esi + 0xc], edx; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000f7015: pop esp; and al, 0x14; mov dword ptr [esi + 4], edx; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000f7065: pop esp; and al, 0x14; mov dword ptr [esi + 8], edx; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000eb62b: pop esp; and al, 0x14; mov dword ptr gs:[eax], 0x16; add esp, 0x1c; ret; 
0x00032813: pop esp; and al, 0x14; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x0002c8b3: pop esp; and al, 0x14; mov dword ptr gs:[eax], 9; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x000efb43: pop esp; and al, 0x14; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000eeb19: pop esp; and al, 0x14; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000ef399: pop esp; and al, 0x14; mov eax, 0x153; call dword ptr gs:[0x10]; 
0x000effd9: pop esp; and al, 0x14; mov eax, 0x15b; call dword ptr gs:[0x10]; 
0x000f0039: pop esp; and al, 0x14; mov eax, 0x15c; call dword ptr gs:[0x10]; 
0x000e7ea2: pop esp; and al, 0x14; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x00040c45: pop esp; and al, 0x14; mov eax, dword ptr [eax + 0x34]; add esp, 0x1c; ret; 
0x0002391a: pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0011fc63: pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x18]; mov dword ptr [eax], 0; add esp, 0x1c; ret; 
0x000739e5: pop esp; and al, 0x14; or dword ptr [esi], 8; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0002dbfb: pop esp; and al, 0x14; xor eax, eax; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000efb7d: pop esp; and al, 0x18; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000eaea9: pop esp; and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000eebe8: pop esp; and al, 0x18; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x000b7e2c: pop esp; and al, 0x1c; mov ebx, eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000e0d05: pop esp; and al, 0x1c; mov ebx, eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x000f0b7f: pop esp; and al, 0x1c; mov ebx, eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x000f0deb: pop esp; and al, 0x1c; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000c57e0: pop esp; and al, 0x1c; mov ebx, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000c58c0: pop esp; and al, 0x1c; mov ebx, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00019866: pop esp; and al, 0x20; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x00126d32: pop esp; and al, 0x24; mov dword ptr [esi + 0xc], eax; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0012ba7b: pop esp; and al, 0x24; mov eax, esi; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x001007ad: pop esp; and al, 0x24; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret 4; 
0x000caf61: pop esp; and al, 0x24; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000e70a0: pop esp; and al, 0x2c; mov ebx, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000e7600: pop esp; and al, 0x2c; mov ebx, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0006cbcb: pop esp; and al, 0x30; mov esi, dword ptr [esp + 0x34]; mov edi, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x000b94e4: pop esp; and al, 0x34; mov edi, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x00054c7e: pop esp; and al, 0x40; mov esi, dword ptr [esp + 0x44]; mov edi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x00117845: pop esp; and al, 0x44; mov esi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x001121a4: pop esp; and al, 0x50; mov esi, dword ptr [esp + 0x54]; mov edi, dword ptr [esp + 0x58]; add esp, 0x5c; ret; 
0x001127d0: pop esp; and al, 0x60; mov esi, dword ptr [esp + 0x64]; mov edi, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x000b464e: pop esp; and al, 0x70; mov esi, dword ptr [esp + 0x74]; mov edi, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x00019936: pop esp; and al, 0xc; add esp, 0x1c; ret; 
0x000ef689: pop esp; and al, 0xc; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000efc19: pop esp; and al, 0xc; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000efd29: pop esp; and al, 0xc; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000efdef: pop esp; and al, 0xc; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000ef33f: pop esp; and al, 0xc; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000eff3c: pop esp; and al, 0xc; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000b7daf: pop esp; and al, 0xc; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000efadf: pop esp; and al, 0xc; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x000eb21c: pop esp; and al, 0xc; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000e134f: pop esp; and al, 0xc; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000ed52f: pop esp; and al, 0xc; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x000ed5bf: pop esp; and al, 0xc; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x000ed40f: pop esp; and al, 0xc; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x000e139f: pop esp; and al, 0xc; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x000ef62f: pop esp; and al, 0xc; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000dec1c: pop esp; and al, 0xc; mov eax, 3; call dword ptr gs:[0x10]; 
0x000dec9c: pop esp; and al, 0xc; mov eax, 4; call dword ptr gs:[0x10]; 
0x000de77c: pop esp; and al, 0xc; mov eax, 5; call dword ptr gs:[0x10]; 
0x000b7d2c: pop esp; and al, 0xc; mov eax, 7; call dword ptr gs:[0x10]; 
0x000e013f: pop esp; and al, 0xc; mov ebx, eax; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x000e098f: pop esp; and al, 0xc; mov ebx, eax; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x000f0fac: pop esp; and al, 0xc; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000eec9d: pop esp; and al, 0xc; mov ebx, eax; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x00123d7d: pop esp; and al, 0xc; mov ebx, eax; mov eax, 0xbc; call dword ptr gs:[0x10]; 
0x00123e40: pop esp; and al, 0xc; mov ebx, eax; mov eax, 0xbd; call dword ptr gs:[0x10]; 
0x000e0dc7: pop esp; and al, 0xc; mov ebx, eax; mov eax, 0xfa; call dword ptr gs:[0x10]; 
0x00077333: pop esp; and al, 4; mov dword ptr gs:[eax], 0xc; xor eax, eax; add esp, 0xc; ret; 
0x000ef857: pop esp; and al, 4; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x000efc93: pop esp; and al, 4; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x000efda7: pop esp; and al, 4; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x000efe37: pop esp; and al, 4; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000ef5e3: pop esp; and al, 4; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x000df5b7: pop esp; and al, 4; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x000ef813: pop esp; and al, 4; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x000efe77: pop esp; and al, 4; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x000ef4e7: pop esp; and al, 4; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x000e81b3: pop esp; and al, 4; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x000eff87: pop esp; and al, 4; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x000eed03: pop esp; and al, 4; mov eax, 0x16; call dword ptr gs:[0x10]; 
0x000aac83: pop esp; and al, 4; mov eax, 0x19; call dword ptr gs:[0x10]; 
0x000b7ed3: pop esp; and al, 4; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x000ddb17: pop esp; and al, 4; mov eax, 0x1e; call dword ptr gs:[0x10]; 
0x000ded27: pop esp; and al, 4; mov eax, 0x21; call dword ptr gs:[0x10]; 
0x0002e1a7: pop esp; and al, 4; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00055507: pop esp; and al, 4; mov eax, 0x26; call dword ptr gs:[0x10]; 
0x000de6a7: pop esp; and al, 4; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000e0bb3: pop esp; and al, 4; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x000df4b3: pop esp; and al, 4; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x000df573: pop esp; and al, 4; mov eax, 0x2a; call dword ptr gs:[0x10]; 
0x000e8013: pop esp; and al, 4; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x000eed47: pop esp; and al, 4; mov eax, 0x34; call dword ptr gs:[0x10]; 
0x000b92e7: pop esp; and al, 4; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x000de563: pop esp; and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x000de563: pop esp; and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000e8053: pop esp; and al, 4; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x000df4f7: pop esp; and al, 4; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x000e7d47: pop esp; and al, 4; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x000ef2f7: pop esp; and al, 4; mov eax, 0x4b; call dword ptr gs:[0x10]; 
0x000ef2b7: pop esp; and al, 4; mov eax, 0x4c; call dword ptr gs:[0x10]; 
0x000e67c7: pop esp; and al, 4; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000a8467: pop esp; and al, 4; mov eax, 0x4e; call dword ptr gs:[0x10]; 
0x000a84a7: pop esp; and al, 4; mov eax, 0x4f; call dword ptr gs:[0x10]; 
0x000e09d7: pop esp; and al, 4; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x000efcd3: pop esp; and al, 4; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x000e84b7: pop esp; and al, 4; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x000eb167: pop esp; and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x000e97a7: pop esp; and al, 4; mov eax, 0x5c; call dword ptr gs:[0x10]; 
0x000e97e7: pop esp; and al, 4; mov eax, 0x5d; call dword ptr gs:[0x10]; 
0x000de5c7: pop esp; and al, 4; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x000de137: pop esp; and al, 4; mov eax, 0x63; call dword ptr gs:[0x10]; 
0x000de177: pop esp; and al, 4; mov eax, 0x64; call dword ptr gs:[0x10]; 
0x000aac07: pop esp; and al, 4; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x000eea53: pop esp; and al, 4; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x000e8473: pop esp; and al, 4; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x000ef273: pop esp; and al, 4; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x000e84f3: pop esp; and al, 4; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x000efbc3: pop esp; and al, 4; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x000e809d: pop esp; and al, 4; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x000e7e17: pop esp; and al, 4; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000b7ba3: pop esp; and al, 4; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x000ef3e3: pop esp; and al, 4; mov eax, 0x7c; call dword ptr gs:[0x10]; 
0x000ef703: pop esp; and al, 4; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000b92a3: pop esp; and al, 4; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x000df6e3: pop esp; and al, 4; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x000ef427: pop esp; and al, 4; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x000ef9b3: pop esp; and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000df1c7: pop esp; and al, 4; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000b9363: pop esp; and al, 4; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x000e814d: pop esp; and al, 4; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000eb337: pop esp; and al, 4; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x000eb377: pop esp; and al, 4; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000eb3b3: pop esp; and al, 4; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000c53b7: pop esp; and al, 4; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000c53f7: pop esp; and al, 4; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000c5473: pop esp; and al, 4; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000c54f3: pop esp; and al, 4; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000c5533: pop esp; and al, 4; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x000c5577: pop esp; and al, 4; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000b81f1: pop esp; and al, 4; mov eax, 0xa2; call dword ptr gs:[0x10]; 
0x000eea97: pop esp; and al, 4; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x000e0b13: pop esp; and al, 4; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x000ef467: pop esp; and al, 4; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x000ef4a7: pop esp; and al, 4; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0002e777: pop esp; and al, 4; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000df6a3: pop esp; and al, 4; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000ef9f7: pop esp; and al, 4; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x000ed6d7: pop esp; and al, 4; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x000ed647: pop esp; and al, 4; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x000ed497: pop esp; and al, 4; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000de587: pop esp; and al, 4; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x000b85c5: pop esp; and al, 4; mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x000ef5a3: pop esp; and al, 4; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x000dda73: pop esp; and al, 4; mov eax, 1; call dword ptr gs:[0x10]; 
0x000deb7d: pop esp; and al, 4; mov eax, 6; call dword ptr gs:[0x10]; 
0x000df601: pop esp; and al, 4; mov eax, 8; call dword ptr gs:[0x10]; 
0x000e0927: pop esp; and al, 4; mov eax, 9; call dword ptr gs:[0x10]; 
0x00102900: pop esp; and al, 4; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0007a6fb: pop esp; and al, 4; mov esi, dword ptr [esp + 8]; add esp, 0xc; ret 4; 
0x00041893: pop esp; and al, 4; mov esi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000ef79a: pop esp; and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x000decea: pop esp; and al, 8; mov eax, 0x13; call dword ptr gs:[0x10]; 
0x000df53a: pop esp; and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x000eff14: pop esp; and al, 8; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000e6d0a: pop esp; and al, 8; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000e0a7a: pop esp; and al, 8; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000e6aca: pop esp; and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x000eea1a: pop esp; and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x000ef89a: pop esp; and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000aac4a: pop esp; and al, 8; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000ef23a: pop esp; and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x000eb1aa: pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x000ef52a: pop esp; and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000ef56a: pop esp; and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000eb1f4: pop esp; and al, 8; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000c543a: pop esp; and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000b8217: pop esp; and al, 8; mov eax, 0xa2; call dword ptr gs:[0x10]; 
0x000ef97a: pop esp; and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eb2aa: pop esp; and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x000eb26a: pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000ed57a: pop esp; and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x000ed60a: pop esp; and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x000ed45a: pop esp; and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000debf4: pop esp; and al, 8; mov eax, 3; call dword ptr gs:[0x10]; 
0x000dec74: pop esp; and al, 8; mov eax, 4; call dword ptr gs:[0x10]; 
0x000de754: pop esp; and al, 8; mov eax, 5; call dword ptr gs:[0x10]; 
0x000b7d04: pop esp; and al, 8; mov eax, 7; call dword ptr gs:[0x10]; 
0x000df627: pop esp; and al, 8; mov eax, 8; call dword ptr gs:[0x10]; 
0x00187a44: pop esp; and dh, bl; jmp dword ptr [eax + 3]; 
0x00095923: pop esp; bsr edi, edi; add eax, edi; pop edi; ret; 
0x00083090: pop esp; call dword ptr [ecx]; 
0x00199c59: pop esp; clc; call dword ptr [eax]; 
0x00182c05: pop esp; cld; call dword ptr [ebx]; 
0x0000308b: pop esp; dec edx; popal; call dword ptr [ecx]; 
0x0017cd5c: pop esp; fild dword ptr [eax]; add byte ptr [eax], al; int1; out dx, eax; call dword ptr [eax]; 
0x0018d00c: pop esp; fld dword ptr [ecx]; add byte ptr [ecx - 0x22], ah; cmc; call dword ptr [eax]; 
0x00174f54: pop esp; imul ebp; jmp dword ptr [ebx]; 
0x0016a101: pop esp; int1; call dword ptr [eax + 0x5a]; 
0x0016f934: pop esp; mov dh, 0xea; call dword ptr [edx]; 
0x0006cf4b: pop esp; mov dword ptr [esp + 0x10], edi; mov edi, dword ptr [esp + 0x3c]; mov dword ptr [esp], edi; call dword ptr [edi + 0xc]; 
0x001185dd: pop esp; mov dword ptr [esp + 0x2c], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x00118623: pop esp; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x001491d9: pop esp; mov eax, 0x10; pop edi; ret; 
0x000e60b4: pop esp; mov ebp, dword ptr [esp + 0x60]; add esp, 0x64; ret; 
0x0011c31e: pop esp; mov esi, dword ptr [esp + 0x60]; mov edi, dword ptr [esp + 0x64]; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret 0xc; 
0x0002350d: pop esp; mov esi, dword ptr [esp + 0x60]; mov edi, dword ptr [esp + 0x64]; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret 8; 
0x0006633e: pop esp; mov esi, dword ptr [esp + 0x60]; mov edi, dword ptr [esp + 0x64]; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x0017db34: pop esp; or al, 0xf0; jmp dword ptr [ebp]; 
0x0018b269: pop esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00189b70: pop esp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00174226: pop esp; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0016777c: pop esp; pop ebp; std; call dword ptr [esi + 0x5c]; 
0x000cee0d: pop esp; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0001cf09: pop esp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001983c4: pop esp; pop es; clc; call edx; 
0x00166fb4: pop esp; push ds; std; ljmp ptr [esi + ebx + 0x1efcfffd]; std; jmp esi; 
0x00174d0c: pop esp; push esi; add byte ptr [eax], al; outsd dx, dword ptr fs:[esi]; in eax, dx; call dword ptr [eax]; 
0x000031d5: pop esp; ret 0x2ec0; 
0x000038c0: pop esp; ret; 
0x0002a9b0: pop esp; sbb al, 5; add byte ptr [ebx - 0x12f6d], cl; dec dword ptr [ecx - 0x1b37b]; jmp dword ptr [ebp - 0x75]; 
0x00184984: pop esp; sbb dl, dh; call dword ptr [ecx]; 
0x00167765: pop esp; std; call dword ptr [edx]; 
0x00167765: pop esp; std; call dword ptr [edx]; pop ebp; std; jmp dword ptr [edx + 0x5d]; 
0x00167731: pop esp; std; call esp; 
0x00167775: pop esp; std; dec dword ptr [ebx*2 + 0x5d5cfffd]; std; call dword ptr [esi + 0x5c]; 
0x00167795: pop esp; std; inc dword ptr [eax]; pop ebp; std; call dword ptr [eax + 0x5d]; 
0x00167785: pop esp; std; inc dword ptr [esi]; pop ebp; std; call dword ptr [esi + 0x5d]; 
0x00167761: pop esp; std; inc edx; pop esp; std; call dword ptr [edx]; 
0x00167711: pop esp; std; jmp eax; 
0x00167701: pop esp; std; jmp esi; 
0x00167791: pop esp; std; push dword ptr [eax + 0xfffd5c]; pop ebp; std; call dword ptr [eax + 0x5d]; 
0x00167781: pop esp; std; push dword ptr [esi + 0x6fffd5c]; pop ebp; std; call dword ptr [esi + 0x5d]; 
0x0016e0d1: pop esp; sti; call dword ptr [eax + 0x18]; 
0x000696c0: pop esp; xchg eax, esi; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x001852e4: pop esp; xor edx, esi; jmp dword ptr [eax]; 
0x00097cc5: pop ss; add al, 0x83; ret 0x8504; 
0x0003f5b1: pop ss; add byte ptr [eax], al; mov byte ptr [eax + ecx], 0; pop ebx; ret; 
0x00027229: pop ss; add byte ptr [ebx - 0x12f7f], cl; jmp dword ptr [ebp + 3]; 
0x0002728a: pop ss; add byte ptr [ebx - 0x1577d], cl; dec dword ptr [ebx - 0x12f6d]; jmp dword ptr [ebp - 0x75]; 
0x00025d7a: pop ss; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x00023bd9: pop ss; add byte ptr [ebx - 0x1577f], cl; jmp dword ptr [ebp - 0x75]; 
0x00026a89: pop ss; add byte ptr [ebx - 0x74fbdbac], cl; sub dword ptr [eax + 0x65fffffe], 0x448b008b; nop; inc eax; ret; 
0x00027269: pop ss; add byte ptr [ebx - 0x8f7f], cl; jmp dword ptr [ebp + 3]; 
0x00027249: pop ss; add byte ptr [ebx - 0xbf7f], cl; jmp dword ptr [ebp + 3]; 
0x0002e1c9: pop ss; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0002ebb9: pop ss; add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp - 0x39]; 
0x00029191: pop ss; add byte ptr [ecx + 0xfcec], al; add byte ptr [ecx - 0x8f6b], cl; jmp dword ptr [ebp - 0x75]; 
0x0002e9b3: pop ss; add byte ptr [ecx - 0x7afbdb8c], cl; ror byte ptr [ecx + 0xf08247c], cl; test byte ptr [ebx - 0xa000000], al; ret 0x8901; 
0x0002e1f3: pop ss; add byte ptr [edi + 0xb0b8d3], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002e2e3: pop ss; add byte ptr [edi + 0xb3b8d3], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e3468: pop ss; add dword ptr [eax], eax; add byte ptr [ebx - 0xc77b], cl; dec dword ptr [ecx + 0x26e82404]; ret 0xffff; 
0x00176688: pop ss; add edi, ebp; call dword ptr [eax]; 
0x0013448b: pop ss; and eax, dword ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000bb132: pop ss; cld; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x0018898d: pop ss; hlt; jmp dword ptr [eax]; 
0x00192cc0: pop ss; idiv bh; sbb al, 0xd; imul edx, dword ptr [edi], -0xa; jmp dword ptr [edx]; 
0x000a5795: pop ss; idiv edi; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00187295: pop ss; jp 0x18728a; jmp dword ptr [edx]; 
0x0007d4d8: pop ss; lea eax, dword ptr [ebx + 0x19cc]; mov dword ptr [ebx + 0x19b0], eax; add esp, 0x18; pop ebx; ret; 
0x0008f2a7: pop ss; lea eax, dword ptr [edi + 0x1b]; pop edi; pop esi; pop ebx; ret; 
0x0008ef93: pop ss; lea eax, dword ptr [edi + 1]; pop edi; pop esi; pop ebx; ret; 
0x0008efa5: pop ss; lea eax, dword ptr [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x0008efd3: pop ss; lea eax, dword ptr [edi + 4]; pop edi; pop esi; pop ebx; ret; 
0x00149c08: pop ss; lea eax, dword ptr [edi - 0x10]; pop edi; ret; 
0x0008f52b: pop ss; mov bl, 0xc; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008dcd1: pop ss; mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x00112118: pop ss; mov eax, dword ptr [edi + 4]; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x00094d2a: pop ss; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091887: pop ss; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001137b0: pop ss; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000e6640: pop ss; mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0012ea4b: pop ss; mov edx, 9; mov ecx, edx; xchg ebx, ecx; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00074f65: pop ss; mov edx, dword ptr [ebx - 0x15c]; and eax, ecx; sub esi, eax; mov dword ptr [esp], esi; call dword ptr [edx]; 
0x001299b8: pop ss; mov edx, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x20]; mov dword ptr [esp], edx; call eax; 
0x00126629: pop ss; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0008dce1: pop ss; mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x0017b469: pop ss; outsb dx, byte ptr [esi]; out dx, eax; jmp dword ptr [edx]; 
0x0008d8f3: pop ss; pop edi; pop esi; pop ebx; ret; 
0x000b85f4: pop ss; pop es; add byte ptr [ecx + 0xea9fdc3], al; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xb]; call dword ptr gs:[0x10]; 
0x00130899: pop ss; ret 0x2c73; 
0x0013125a: pop ss; ret 0x3273; 
0x00130884: pop ss; ret 0x3e73; 
0x00131240: pop ss; ret 0x4c73; 
0x0013086f: pop ss; ret 0x5073; 
0x0013085a: pop ss; ret 0x6273; 
0x00131226: pop ss; ret 0x6673; 
0x001301f5: pop ss; ret 0x830f; 
0x000c3d2e: pop ss; ret 0xfffb; 
0x0004f555: pop ss; sar edi, cl; dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0x1af73]; jmp dword ptr [ebp - 0x77]; 
0x00166ff9: pop ss; std; call dword ptr [eax]; 
0x00045933: pop ss; std; call dword ptr [edi - 0x77]; 
0x000081a4: pop ss; sub dword ptr [eax], eax; add byte ptr [eax], dl; ret; 
0x000d8914: pop ss; xor eax, eax; pop esi; pop edi; ret; 
0x0008b97b: popal; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; lcall ptr [edi + 0x5b]; ret; 
0x00195359: popal; add al, byte ptr [eax]; inc esp; xor dh, bh; call ebx; 
0x00173982: popal; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0000308e: popal; call dword ptr [ecx]; 
0x00199f0d: popal; clc; call dword ptr [edi]; 
0x0017b538: popal; cmc; out dx, eax; call dword ptr [eax]; 
0x0018d010: popal; fdivrp st(5); call dword ptr [eax]; 
0x00174bf5: popal; inc esp; in eax, dx; jmp dword ptr [edx]; 
0x00087fa3: popal; jmp dword ptr [esi + 0xf]; 
0x0008ea12: popal; mov bl, 9; add byte ptr [ecx + 0xcbd9ac1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0009474c: popal; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0016fe58: popal; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017c5c3: popal; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00172fed: popal; out 0xeb, al; jmp dword ptr [edx]; 
0x001758f1: popal; out dx, al; call edx; 
0x0018f0da: popal; push cs; adc al, 0x41; ret; 
0x00192210: popal; push cs; adc al, 0x43; ret; 
0x0018df6e: popal; push cs; add al, 0xc6; ret; 
0x00187bb6: popal; ret; 
0x00047faf: popfd; add al, 0; add bh, al; add ch, byte ptr [0x83000000]; ret 0x8904; 
0x0016ccd5: popfd; add al, byte ptr [eax]; in al, 0x4e; stc; jmp dword ptr [eax]; 
0x00168155: popfd; add byte ptr [eax], al; aam 0x59; in al, dx; call eax; 
0x0004b2c1: popfd; add byte ptr [eax], al; add byte ptr [ebx + 0x1682454], cl; ret 0x5489; 
0x0016816d: popfd; add byte ptr [eax], al; inc esp; pop edx; in al, dx; call dword ptr [eax]; 
0x00188f4d: popfd; add dword ptr [eax], eax; adc byte ptr [edx], dh; hlt; jmp dword ptr [esi]; 
0x0018bd0d: popfd; cmc; jmp dword ptr [ebx]; 
0x00168999: popfd; in eax, dx; call eax; 
0x00168979: popfd; in eax, dx; jmp dword ptr [eax]; 
0x00184916: popfd; int1; jmp dword ptr [edx]; 
0x00142bd2: popfd; jno 0x142bd3; inc dword ptr [ecx + 0x6041ec3]; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x000b92c4: popfd; push cs; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00097518: popfd; ret 0xea81; 
0x0002d9da: popfd; ret; 
0x0016cf31: popfd; stc; call esp; 
0x0018ff0d: popfd; test ch, dh; jmp dword ptr [edx]; 
0x000b9459: popfd; wait; push cs; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xd3]; call dword ptr gs:[0x10]; 
0x00169619: push -0x10; call dword ptr [eax + 0x19]; 
0x00169601: push -0x10; call dword ptr [eax]; 
0x001695f9: push -0x10; jmp eax; 
0x001682b1: push -0x14; call dword ptr [eax - 0x5d]; 
0x001682a9: push -0x14; ljmp ptr [eax]; mov dword ptr [0x6af40000], eax; in al, dx; call dword ptr [eax - 0x5d]; 
0x00177d11: push -0x26; out dx, al; jmp dword ptr [edx]; 
0x00174344: push -0x2b; in al, dx; call dword ptr [eax]; 
0x001755e5: push -0x2b; in eax, dx; jmp dword ptr [edx]; 
0x001772ad: push -0x30; out dx, al; jmp dword ptr [edx]; 
0x0016d198: push -0x3a; stc; jmp eax; 
0x0008de09: push -0x41; or dword ptr [eax], eax; add ecx, 0xcc8d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0017afb9: push -0x58; cld; jmp dword ptr [edx]; 
0x0008f509: push -0x58; or dword ptr [eax], eax; add ecx, 0xcb333; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00067655: push -0x75; inc esi; push 0x5b7ec085; mov eax, dword ptr [esi + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x0017ca6f: push -0x7a; add dl, byte ptr [esi + 0xa]; push cs; add al, 0xc6; ret; 
0x0008f8c4: push -0xa; ret 0x7520; 
0x0008f8c9: push -0xa; ret 0x7540; 
0x00133318: push -1; inc dword ptr [ecx + 0x32d85c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0017916d: push -1; out dx, al; jmp dword ptr [edx]; 
0x0007b763: push -4; jmp dword ptr [esi - 0x39]; 
0x0016e121: push -5; call dword ptr [eax + 0x1a]; 
0x000644cb: push -5; dec dword ptr [ebx - 0x2517afbb]; push -5; jmp dword ptr [ebp - 0x7d]; 
0x000644d3: push -5; jmp dword ptr [ebp - 0x7d]; 
0x0016d839: push -6; jmp dword ptr [eax]; 
0x000ddc4d: push 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001835db: push 0x140e0a01; inc ecx; ret; 
0x0018a7ac: push 0x140e0a03; inc esi; ret; 
0x00072387: push 0x167ec085; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x34]; 
0x000b8301: push 0x200011b8; add dword ptr [ecx - 0x7629762f], ecx; pop ebp; in al, 0x89; ret; 
0x0009488a: push 0x20c68310; add eax, 0x20; call 0x129d77; add ecx, 0xc606d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009158a: push 0x20c68310; add eax, 0x20; call 0x129d77; add ecx, 0xc92ed; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0017b22a: push 0x22ffef; add byte ptr [eax + eax], ch; add byte ptr [eax], al; test byte ptr [ebx - 0x8930000], bh; out dx, eax; call dword ptr [eax]; 
0x00185268: push 0x24000160; sub al, 0xf2; jmp dword ptr [ebp + 5]; 
0x000f3c96: push 0x24aa448b; add esp, 0x20; pop esi; pop edi; pop ebp; ret; 
0x0003ac9f: push 0x29c0950f; ret 0x448b; 
0x00169ca0: push 0x2e; int1; jmp esp; 
0x0016ac9c: push 0x340001e3; ret 0xfff4; 
0x0016accc: push 0x340001e4; ret; 
0x0016e1a4: push 0x3400031c; jo 0x16e1a6; lcall ptr [eax - 0x5bfffce4]; jno 0x16e1ae; call eax; 
0x000c0a11: push 0x39ffffd7; sal byte ptr [edi + eax*8 - 0x77], 1; ret 0x3a8b; 
0x00081a25: push 0x39ffffff; ret 0x1174; 
0x001715f1: push 0x41140e0a; ret; 
0x00199468: push 0x440002a2; dec ebp; clc; jmp dword ptr [ebx]; 
0x001676bc: push 0x4f; std; jmp dword ptr [eax]; 
0x0016731c: push 0x52fffd3b; cmp bh, ch; inc edx; cmp bh, ch; call dword ptr [edx]; 
0x00198e68: push 0x5400029c; aaa; clc; jmp dword ptr [eax]; 
0x00065529: push 0x5a7ec085; mov eax, dword ptr [esi + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x00067658: push 0x5b7ec085; mov eax, dword ptr [esi + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x00174964: push 0x68000000; push edi; add byte ptr [eax], al; in al, 0x30; in eax, dx; call dword ptr [ebx + 1]; 
0x0018ac68: push 0x740001ba; cmp dh, ch; call dword ptr [ebx]; 
0x00191a68: push 0x74000228; mov bh, 0xf6; jmp dword ptr [edi]; 
0x000e6827: push 0x7401f883; and ecx, dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x0004b1c0: push 0x74c98410; ret 0x55e9; 
0x00194d18: push 0x77000256; sub esi, edi; call dword ptr [eax]; 
0x0016c37d: push 0x79140002; clc; call dword ptr [eax]; 
0x0008bd75: push 0x80fffffe; cmp byte ptr [ecx], al; sbb eax, -1; pop ebx; ret; 
0x00119007: push 0x8100010d; ret; 
0x000e2b07: push 0x81000472; ret; 
0x000da807: push 0x810004f5; ret; 
0x000ba007: push 0x810006fd; ret; 
0x00067b07: push 0x81000c22; ret; 
0x0002e907: push 0x81000fb4; ret; 
0x00131307: push 0x81ffff8a; ret; 
0x000e9264: push 0x83000001; ret 0xf01; 
0x00070d21: push 0x83fffff0; ret 0x8b01; 
0x0004e5a6: push 0x83fffffe; mov byte ptr [ecx], 0x85; ror byte ptr [edi], 0x8e; jmp dword ptr [ecx]; 
0x00187468: push 0x84000182; or ebx, esi; call edi; 
0x0018c068: push 0x840001ce; movsd dword ptr es:[edi], dword ptr [esi]; cmc; jmp esp; 
0x001178b4: push 0x89000003; ret 0x2b8; 
0x0006cbe4: push 0x89000039; ret 0xffb8; 
0x00072104: push 0x89ffff5b; ret 0xb68d; 
0x0006d49a: push 0x8e0fc985; pushfd; add byte ptr [eax], al; add byte ptr [ebx + 0x34890c40], cl; and al, 0x29; ret 0xfac1; 
0x000b9067: push 0x90000000; lea esi, dword ptr [esi]; ret; 
0x00197e39: push 0xa; push cs; adc al, 0x41; ret; 
0x0018bab3: push 0xa; push cs; adc al, 0x43; ret; 
0x00192fc9: push 0xa; push cs; adc al, 0x46; ret; 
0x0018d48a: push 0xa; push cs; add al, 0xc6; ret; 
0x001930e6: push 0xa; push cs; add al, 0xc7; ret; 
0x0016a37d: push 0xae140001; int1; jmp eax; 
0x0016a38d: push 0xae840001; int1; jmp dword ptr [eax]; 
0x00173118: push 0xb500003a; add ch, ah; call dword ptr [eax]; 
0x00167414: push 0xb8fffd3c; cmp al, 0xfd; dec dword ptr [eax]; cmp eax, 0x3c12fffd; std; jmp dword ptr [edx + 0x3c]; 
0x00198c46: push 0xc6040e0a; ret; 
0x00196b09: push 0xc6c7040e; ret; 
0x0002dc80: push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x001866cc: push 0xd1cfff2; adc byte ptr [edi - 0xe], ah; jmp dword ptr [edx]; 
0x00174968: push 0xe4000057; xor ch, ch; call dword ptr [ebx + 1]; 
0x000c0a06: push 0xe8ffffd7; cmp ecx, 0x958bffff; push 0x39ffffd7; sal byte ptr [edi + eax*8 - 0x77], 1; ret 0x3a8b; 
0x00188b1e: push 0xe; add al, 0xc6; ret; 
0x001065c5: push 0xf00002f; test ebp, ebp; add byte ptr [eax], al; add byte ptr [ebx - 0xff7d], cl; jmp dword ptr [ebp + 3]; 
0x000e8422: push 0xf189ffff; mov edx, eax; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x00188a68: push 0xf4000198; sbb esp, esi; call eax; 
0x0012b866: push 0xffffffff; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0016a40d: push 1; add ah, dl; mov dl, 0xf1; call dword ptr [eax]; 
0x0002dc40: push 1; push dword ptr [esp + 8]; call 0x2dbb0; pop ecx; pop edx; ret; 
0x000d6e1a: push 4; mov ecx, ebx; sub ecx, dword ptr [ebx + ebp*4 - 0xcc1cc]; jmp ecx; 
0x000176af: push 6; add byte ptr [ebx - 0x1576d], cl; jmp dword ptr [ebp - 0x75]; 
0x0016faed: push cs; adc al, 0x41; ret; 
0x001702f6: push cs; adc al, 0x43; ret; 
0x001795a2: push cs; adc al, 0x44; ret; 
0x001702e0: push cs; adc al, 0x45; ret; 
0x0016f65a: push cs; adc al, 0x46; ret; 
0x001909d9: push cs; adc al, 0x83; add eax, 0x100e7402; ret; 
0x0017bee1: push cs; adc al, 0x83; add eax, 0x100edf02; ret; 
0x0017176d: push cs; adc al, 0x83; add eax, 0x1c00e46; add bh, byte ptr [edx + 0x43140e0a]; ret; 
0x00185aa5: push cs; adc al, 0x83; add eax, 0x2400e43; ret 0xe0a; 
0x00183e5d: push cs; adc al, 0x83; add eax, 0x3500e43; test eax, 0x140e0a01; inc ecx; ret; 
0x001940bd: push cs; adc al, 0x83; add eax, 0x3600e43; mov eax, dword ptr [0x140e0a01]; inc ecx; ret; 
0x001736c9: push cs; adc al, 0x83; add eax, 0x3700e43; mov eax, 0x140e0a01; inc ecx; ret; 
0x00174980: push cs; adc byte ptr [ebx + 0x300e4304], al; add ah, byte ptr [ecx + 0x43100e0a]; ret; 
0x0018e4f0: push cs; adc byte ptr [ebx + 0xc0e5d04], al; ret; 
0x0018b4a8: push cs; adc byte ptr [ebx + 0xc0e6104], al; ret; 
0x0017cf18: push cs; adc byte ptr [ebx + 0xc0e6704], al; ret; 
0x00198e54: push cs; adc byte ptr [ebx + 0xc0e7e04], al; ret; 
0x0016fc8c: push cs; adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x1800e43], 3; ret 0xa03; 
0x001988ac: push cs; adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x1900e4e], 2; ret; 
0x00171768: push cs; adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x1c00e46], 2; mov edx, 0x43140e0a; ret; 
0x00182602: push cs; adc byte ptr [esi + 0xc0e4204], al; ret; 
0x00182671: push cs; adc byte ptr [esi + 0xc0e4a04], al; ret; 
0x00182660: push cs; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x001826c6: push cs; adc byte ptr [esi + 0xc0e4f04], al; ret; 
0x0018263e: push cs; adc byte ptr [esi + 0xc0e7104], al; ret; 
0x00182904: push cs; adc byte ptr [esi + 0xc0e7204], al; ret; 
0x0018264f: push cs; adc byte ptr [esi + 0xc0e7304], al; ret; 
0x0018262d: push cs; adc byte ptr [esi + 0xc0e7504], al; ret; 
0x00000988: push cs; adc eax, dword ptr [eax]; jo 0x911; add byte ptr [eax], al; ret 0x1010; 
0x00135494: push cs; adc eax, dword ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000bad02: push cs; add ah, al; or dword ptr [esi], 0x2bd88900; test byte ptr [ebx - 0xe82e0], dh; jmp eax; 
0x00170158: push cs; add al, 0x41; or eax, dword ptr [ebx]; add eax, 0x140e0a02; inc ecx; ret; 
0x001841b0: push cs; add al, 0x41; or eax, dword ptr [ebx]; dec byte ptr [0x41140e0a]; ret; 
0x0019b7e0: push cs; add al, 0x41; or eax, dword ptr [ebx]; mov edx, 0x140e0a03; inc ecx; ret; 
0x0016fed9: push cs; add al, 0x41; or eax, dword ptr [edx]; mov esi, 0x41140e0a; ret; 
0x00189b13: push cs; add al, 0x41; or ebp, dword ptr [ebp + 0xa]; push cs; adc al, 0x43; ret; 
0x0016fdb7: push cs; add al, 0x41; or ebx, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00189984: push cs; add al, 0x41; or ecx, dword ptr [edi + 0xa]; push cs; adc al, 0x43; ret; 
0x0018a879: push cs; add al, 0x41; or edi, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0018c0fe: push cs; add al, 0x41; or edi, dword ptr [esi + 0xa]; ret; 
0x0018d457: push cs; add al, 0x41; or edx, dword ptr [eax + 0xe]; adc al, 0x43; ret; 
0x00190acc: push cs; add al, 0x41; or edx, dword ptr [ebp + 0xa]; push cs; adc al, 0x43; ret; 
0x0016ffc0: push cs; add al, 0x41; or edx, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x0016fdcd: push cs; add al, 0x41; or edx, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x0016fcf2: push cs; add al, 0x41; or esp, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0016ffd6: push cs; add al, 0x41; or esp, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0019249c: push cs; add al, 0x41; or esp, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x001879cb: push cs; add al, 0x42; or eax, dword ptr [esi + 0xa]; ret; 
0x001928ee: push cs; add al, 0x42; or ecx, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x0018c0f6: push cs; add al, 0x42; or edx, dword ptr [edi + 0xa]; ret; 
0x0018a7a7: push cs; add al, 0x43; or eax, dword ptr [ebx]; push 0x140e0a03; inc esi; ret; 
0x001702f0: push cs; add al, 0x43; or edi, dword ptr [eax + 0xa]; push cs; adc al, 0x43; ret; 
0x0018a7d5: push cs; add al, 0x43; or esi, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x00183a58: push cs; add al, 0x43; or esp, dword ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x0018a738: push cs; add al, 0x43; or esp, dword ptr [edx + ecx + 0xe]; adc al, 0x46; ret; 
0x0018f157: push cs; add al, 0x44; or ebx, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x001973ae: push cs; add al, 0x44; or edx, dword ptr [eax + 0xa]; ret; 
0x00196309: push cs; add al, 0x45; or eax, dword ptr [ebx]; or eax, 0x140e0a01; inc ebx; ret; 
0x0018a7bf: push cs; add al, 0x45; or eax, dword ptr [esi + 0xa]; push cs; adc al, 0x46; ret; 
0x001886fe: push cs; add al, 0x45; or ebp, dword ptr [ebx + 0xa]; ret; 
0x001993c4: push cs; add al, 0x45; or ebp, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x00174232: push cs; add al, 0x45; or esi, dword ptr [esi + 0xa]; ret; 
0x0016fcc4: push cs; add al, 0x45; or esp, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x00190c9a: push cs; add al, 0x46; or ecx, dword ptr [edi + 0xe]; adc al, 0x41; ret; 
0x00192904: push cs; add al, 0x46; or esi, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0017062a: push cs; add al, 0x47; or ebp, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x0019193f: push cs; add al, 0x47; or ebx, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0018be98: push cs; add al, 0x47; or ebx, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x0018baaf: push cs; add al, 0x48; or ebp, dword ptr [edx + 0xa]; push cs; adc al, 0x43; ret; 
0x00178fa7: push cs; add al, 0x48; or edi, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x001973b6: push cs; add al, 0x48; or edi, dword ptr [esi + 0xa]; ret; 
0x0018571b: push cs; add al, 0x48; or edx, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x001879c4: push cs; add al, 0x54; or ebx, dword ptr [esi + 0xa]; ret; 
0x001986f4: push cs; add al, 0xc5; dec eax; or eax, dword ptr [edx]; mov byte ptr [0x41140e0a], al; ret; 
0x0018d68a: push cs; add al, 0xc5; dec eax; or ebp, dword ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x00197816: push cs; add al, 0xc5; dec eax; or edx, dword ptr [edi + 0xe]; adc al, 0x43; ret; 
0x0019a5be: push cs; add al, 0xc5; dec eax; or esp, dword ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x00197f88: push cs; add al, 0xc5; dec eax; or esp, dword ptr [ecx + 0xe]; adc al, 0x41; ret; 
0x0019903c: push cs; add al, 0xc5; dec eax; or esp, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0018968b: push cs; add al, 0xc5; dec ecx; or edi, dword ptr [edx + ecx + 0xe]; adc al, 0x43; ret; 
0x001981f4: push cs; add al, 0xc5; inc ebp; or eax, dword ptr [ebx]; test dword ptr [ecx], 0x41140e0a; ret; 
0x00174624: push cs; add al, 0xc5; inc ebp; or eax, dword ptr [edx]; push esi; ret; 
0x0019242e: push cs; add al, 0xc5; inc ebp; or edx, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x00193eb2: push cs; add al, 0xc5; inc ebp; or esi, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x001923da: push cs; add al, 0xc5; inc ebx; or ebp, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x0018b264: push cs; add al, 0xc5; inc ebx; or ebx, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0018cb82: push cs; add al, 0xc5; inc ecx; or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x001700b8: push cs; add al, 0xc5; inc ecx; or eax, dword ptr [ebx]; add dword ptr [ecx], 0x41140e0a; ret; 
0x00170238: push cs; add al, 0xc5; inc ecx; or eax, dword ptr [ebx]; test dword ptr [edx], 0x41140e0a; ret; 
0x00197682: push cs; add al, 0xc5; inc ecx; or ebp, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x00171386: push cs; add al, 0xc5; inc ecx; or ebx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x001856af: push cs; add al, 0xc5; inc ecx; or ecx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x00190d9e: push cs; add al, 0xc5; inc ecx; or edx, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x00191a0b: push cs; add al, 0xc5; inc edi; or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x001971be: push cs; add al, 0xc5; inc edi; or eax, dword ptr [ebx + 0xe]; adc al, 0x46; ret; 
0x00170612: push cs; add al, 0xc5; inc edi; or eax, dword ptr [edx]; mov dword ptr [0x41140e0a], eax; ret; 
0x00184466: push cs; add al, 0xc5; inc edi; or eax, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x00172c8e: push cs; add al, 0xc5; inc edi; or ebp, dword ptr [eax + 0xe]; adc al, 0x46; ret; 
0x00189a8b: push cs; add al, 0xc5; inc edi; or ecx, dword ptr [edx + ecx + 0xe]; adc al, 0x43; ret; 
0x001765d6: push cs; add al, 0xc5; inc edi; or esp, dword ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x0018f27e: push cs; add al, 0xc5; inc edx; or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x001726d6: push cs; add al, 0xc5; inc edx; or ebx, dword ptr [edi + 0xa]; ret; 
0x001993ac: push cs; add al, 0xc5; inc esi; or eax, dword ptr [edx]; mov ebp, 0x43140e0a; ret; 
0x0018cd08: push cs; add al, 0xc5; inc esi; or eax, dword ptr [edx]; pushal; ret; 
0x0017035a: push cs; add al, 0xc5; inc esi; or ebx, dword ptr [ebp + 0xe]; adc al, 0x43; ret; 
0x0017067f: push cs; add al, 0xc5; inc esp; or ebp, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x00199e96: push cs; add al, 0xc5; inc esp; or ecx, dword ptr [edi + 0xe]; adc al, 0x43; ret; 
0x00191da6: push cs; add al, 0xc5; inc esp; or ecx, dword ptr [edx + 0xe]; adc al, 0x41; ret; 
0x00177615: push cs; add al, 0xc5; mov esi, 0x1c00c3; add byte ptr [eax], al; and byte ptr [eax + eax - 0x10eae400], al; jmp dword ptr [eax]; 
0x0019b696: push cs; add al, 0xc5; mov esi, 0x4400; add byte ptr [eax + 0x7c0002c4], ah; ret; 
0x0018b588: push cs; add al, 0xc6; add byte ptr [eax + eax], ah; add byte ptr [eax], al; nop; ret; 
0x0019b213: push cs; add al, 0xc6; inc ebp; or esp, dword ptr [esi + 0xe]; or al, 0x41; ret; 
0x001745dd: push cs; add al, 0xc6; inc ebx; or ecx, dword ptr [ebp + 0xe]; or al, 0x43; ret; 
0x0018a2dd: push cs; add al, 0xc6; inc edx; or ebp, dword ptr [ecx + 0xe]; or al, 0x43; ret; 
0x00184710: push cs; add al, 0xc6; inc esi; or ecx, dword ptr [ebp + 0xe]; or al, 0x43; ret; 
0x001704eb: push cs; add al, 0xc6; ret; 
0x00171bdc: push cs; add al, 0xc7; ret; 
0x00079bd9: push cs; add al, byte ptr [eax]; add byte ptr [ebx - 0x1876d], cl; jmp dword ptr [ebp - 0x75]; 
0x001830bc: push cs; add bh, al; inc ecx; adc eax, dword ptr [ecx]; ret; 
0x00027730: push cs; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x00124802: push cs; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00124ab8: push cs; add byte ptr [eax], al; call dword ptr [eax + 0x10]; 
0x00124b11: push cs; add byte ptr [eax], al; call dword ptr [eax + 0x14]; 
0x00124dc4: push cs; add byte ptr [eax], al; call dword ptr [eax + 0xc]; 
0x00124a50: push cs; add byte ptr [eax], al; call dword ptr [eax + 4]; 
0x00124d15: push cs; add byte ptr [eax], al; call dword ptr [eax + 8]; 
0x000d9598: push cs; add byte ptr [eax], al; call dword ptr [eax]; 
0x000d95c8: push cs; add byte ptr [eax], al; mov dword ptr [esp + 0x1c], edx; call dword ptr [eax + 0x14]; 
0x000d95b6: push cs; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0xc]; 
0x00152869: push cs; add byte ptr [eax], al; mov ebp, 0xc000000e; push cs; add byte ptr [eax], al; ret; 
0x000a866a: push cs; add byte ptr [eax], al; pop esi; add eax, edx; ret; 
0x00152871: push cs; add byte ptr [eax], al; ret; 
0x00126290: push cs; add byte ptr [eax], al; xor ebp, ebp; call dword ptr [eax + 0x14]; 
0x000bacfe: push cs; add byte ptr [ebx + eax*4 + 0xe], dh; add ah, al; or dword ptr [esi], 0x2bd88900; test byte ptr [ebx - 0xe82e0], dh; jmp eax; 
0x000b85fb: push cs; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xb]; call dword ptr gs:[0x10]; 
0x000b93fb: push cs; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xd1]; call dword ptr gs:[0x10]; 
0x000b945b: push cs; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xd3]; call dword ptr gs:[0x10]; 
0x000b90de: push cs; add byte ptr [ebx - 0x78f7dbac], cl; sar dword ptr [eax + 0xcd], cl; call dword ptr gs:[0x10]; 
0x000b7bc5: push cs; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0003f9ff: push cs; add byte ptr [ecx + 0x1635f3c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0003f8e1: push cs; add byte ptr [ecx + 0x163711c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0003f874: push cs; add byte ptr [ecx + 0x16377ec1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0003edf2: push cs; add byte ptr [ecx + 0x164200c3], al; add byte ptr [ebx - 0x780d76d0], cl; sar dword ptr [eax + 0x25], cl; call dword ptr gs:[0x10]; 
0x000b9d62: push cs; add byte ptr [ecx + edx*4], bh; push cs; add byte ptr [ecx - 0x4c7bd428], cl; sub byte ptr [ebp - 0xf], 0xff; jmp eax; 
0x000b9d66: push cs; add byte ptr [ecx - 0x4c7bd428], cl; sub byte ptr [ebp - 0xf], 0xff; jmp eax; 
0x00183f56: push cs; add byte ptr [ecx], 3; fiadd word ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x45; ret; 
0x0018ba12: push cs; add byte ptr [ecx], 3; or eax, dword ptr [ebx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0016fc96: push cs; add byte ptr [ecx], 3; ret 0xa03; 
0x000b3e38: push cs; add byte ptr [edi + 0x8db8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b3eef: push cs; add byte ptr [edi + 0xdcb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ba582: push cs; add cl, ah; or dword ptr [esi], 0; ret 0xe87; 
0x0017004a: push cs; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x000b7a08: push cs; add dword ptr [eax], eax; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x0005525a: push cs; add dword ptr [eax], eax; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x7d]; 
0x00033db7: push cs; add dword ptr [eax], eax; xor eax, eax; add esp, 8; ret; 
0x00033d11: push cs; add dword ptr [eax], eax; xor eax, eax; ret; 
0x0017069b: push cs; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0014aba1: push cs; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0006beec: push cs; add esp, 0x18; pop esi; ret; 
0x0007fd19: push cs; add esp, 0x18; xor eax, eax; pop esi; ret; 
0x0006d0f7: push cs; and byte ptr [ebx + 0x5e5b6cc4], al; pop edi; pop ebp; ret; 
0x00198c3e: push cs; and byte ptr [ebx + eax*4 + 3], al; push ebx; xchg byte ptr [edx], al; push 0xc6040e0a; ret; 
0x0017317a: push cs; and byte ptr [edi - 0x7a], cl; add al, byte ptr [ebx + 0xe750203]; add al, 0xc6; ret; 
0x00171ae2: push cs; and byte ptr [edx - 0x7d], cl; add edx, dword ptr [ebx - 0x7a]; add dh, byte ptr [edi + 0xe]; add al, 0xc6; ret; 
0x0018f116: push cs; and byte ptr [edx], al; cwde; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001916eb: push cs; and byte ptr [edx], al; ret 0xe0a; 
0x0007e044: push cs; call ecx; 
0x0018ca1e: push cs; cmc; jmp dword ptr [edx]; 
0x0008c7e7: push cs; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00188d9e: push cs; inc eax; add bl, byte ptr [ebp + 0xa]; push cs; adc al, 0x46; ret; 
0x001715ee: push cs; inc eax; add ch, byte ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0018f556: push cs; inc eax; add dh, byte ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x0019227a: push cs; inc eax; add dl, byte ptr [edx + 0x43140e0a]; ret; 
0x001905de: push cs; inc eax; add ebx, dword ptr [edi + 0x140e0a02]; inc ecx; ret; 
0x00169bd1: push cs; int1; call dword ptr [eax + 0x4a]; 
0x001736ce: push cs; jo 0x1736d4; mov eax, 0x140e0a01; inc ecx; ret; 
0x0008f1f1: push cs; lea eax, dword ptr [edi + 0x16]; pop edi; pop esi; pop ebx; ret; 
0x0008f301: push cs; lea eax, dword ptr [edi + 0x1e]; pop edi; pop esi; pop ebx; ret; 
0x001737b2: push cs; mov al, byte ptr [0x2070301]; or cl, byte ptr [esi]; adc al, 0x45; ret; 
0x000915f1: push cs; mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00129969: push cs; mov eax, dword ptr [esp + 0x1c]; add esp, 0x28; pop ebx; ret; 
0x00094c64: push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00148f11: push cs; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x000917e1: push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00105059: push cs; mov eax, edx; and eax, 0xffffff; ret; 
0x0012c1f9: push cs; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000197e8: push cs; mov edx, dword ptr [esp + 0x20]; mov dword ptr [esp], edx; call eax; 
0x00173dc5: push cs; mov esp, gs; jmp dword ptr [edx]; 
0x000915d2: push cs; mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000918d8: push cs; movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000917d8: push cs; movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00130821: push cs; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x001988b6: push cs; nop; add dword ptr [edx], eax; ret; 
0x0017a50c: push cs; or al, 0x41; ret; 
0x001745e3: push cs; or al, 0x43; ret; 
0x0017403f: push cs; or al, 0x44; ret; 
0x00171f9a: push cs; or al, 0x4b; add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; or cl, byte ptr [0xffffc604]; ret; 
0x001825fe: push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4204], al; ret; 
0x0018266d: push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4a04], al; ret; 
0x0018265c: push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x001826c2: push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4f04], al; ret; 
0x0018263a: push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7104], al; ret; 
0x00182900: push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7204], al; ret; 
0x0018264b: push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7304], al; ret; 
0x00182629: push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7504], al; ret; 
0x0017497b: push cs; or al, 0x86; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0x300e4304], al; add ah, byte ptr [ecx + 0x43100e0a]; ret; 
0x00198e4f: push cs; or al, 0x86; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xc0e7e04], al; ret; 
0x0018e4eb: push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xc0e5d04], al; ret; 
0x0018b4a3: push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xc0e6104], al; ret; 
0x0017cf13: push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xc0e6704], al; ret; 
0x001823f4: push cs; or al, 0x86; add ebp, dword ptr [esi + ecx + 8]; ret; 
0x001822a0: push cs; or al, 0x86; add ebx, dword ptr [esi + ecx + 8]; ret; 
0x0018225c: push cs; or al, 0x86; add edx, dword ptr [esi + ecx + 8]; ret; 
0x001822c2: push cs; or al, 0x86; add esp, dword ptr [esi + ecx + 8]; ret; 
0x0016fc87: push cs; or al, 0x87; add eax, dword ptr [ecx + 0xe]; adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x1800e43], 3; ret 0xa03; 
0x001988a7: push cs; or al, 0x87; add eax, dword ptr [ecx + 0xe]; adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x1900e4e], 2; ret; 
0x001820d3: push cs; or al, 0x87; add ebx, dword ptr [esi + ecx + 8]; ret; 
0x0018206d: push cs; or al, 0x87; add edx, dword ptr [esi + ecx + 8]; ret; 
0x00171b86: push cs; or byte ptr [ebp + 0x50d4202], al; inc ecx; add dword ptr [ebx], 0x78; ret; 
0x001916e6: push cs; or byte ptr [ebx + 0x200e4502], al; add al, dl; or cl, byte ptr [esi]; or byte ptr [esi + ecx + 4], al; ret; 
0x00172e3e: push cs; or byte ptr [ebx + 0x200e4e02], al; imul ecx, dword ptr [esi], 0x40e4108; ret; 
0x00184e4c: push cs; or byte ptr [ebx + 0x40e4502], al; ret; 
0x0017d783: push cs; or byte ptr [ebx + 0x40e4602], al; ret; 
0x0017d713: push cs; or byte ptr [ebx + 0x40e4702], al; ret; 
0x00184d57: push cs; or byte ptr [ebx + 0x40e4802], al; ret; 
0x0017fff6: push cs; or byte ptr [ebx + 0x40e4902], al; ret; 
0x001806a3: push cs; or byte ptr [ebx + 0x40e4b02], al; ret; 
0x001806be: push cs; or byte ptr [ebx + 0x40e4e02], al; ret; 
0x001806eb: push cs; or byte ptr [ebx + 0x40e4f02], al; ret; 
0x00180691: push cs; or byte ptr [ebx + 0x40e5002], al; ret; 
0x00180688: push cs; or byte ptr [ebx + 0x40e5102], al; ret; 
0x0018069a: push cs; or byte ptr [ebx + 0x40e5202], al; ret; 
0x0017fa12: push cs; or byte ptr [ebx + 0x40e5502], al; ret; 
0x0017408f: push cs; or byte ptr [ebx + 0x40e5702], al; ret; 
0x0017ee74: push cs; or byte ptr [ebx + 0x40e5902], al; ret; 
0x00189ca2: push cs; or byte ptr [ebx + 0x40e5a02], al; ret; 
0x0017d77a: push cs; or byte ptr [ebx + 0x40e5b02], al; ret; 
0x00180759: push cs; or byte ptr [ebx + 0x40e5d02], al; ret; 
0x00180786: push cs; or byte ptr [ebx + 0x40e5f02], al; ret; 
0x0017ebd9: push cs; or byte ptr [ebx + 0x40e6002], al; ret; 
0x0016f456: push cs; or byte ptr [ebx + 0x40e6102], al; ret; 
0x0017ebd0: push cs; or byte ptr [ebx + 0x40e6202], al; ret; 
0x0018078f: push cs; or byte ptr [ebx + 0x40e6302], al; ret; 
0x0017eec2: push cs; or byte ptr [ebx + 0x40e6502], al; ret; 
0x00180320: push cs; or byte ptr [ebx + 0x40e6602], al; ret; 
0x00180b04: push cs; or byte ptr [ebx + 0x40e6702], al; ret; 
0x00180b67: push cs; or byte ptr [ebx + 0x40e6902], al; ret; 
0x0017ec35: push cs; or byte ptr [ebx + 0x40e6a02], al; ret; 
0x0017ec11: push cs; or byte ptr [ebx + 0x40e6b02], al; ret; 
0x0017eeb9: push cs; or byte ptr [ebx + 0x40e6c02], al; ret; 
0x00180b1f: push cs; or byte ptr [ebx + 0x40e6d02], al; ret; 
0x0017f11c: push cs; or byte ptr [ebx + 0x40e6e02], al; ret; 
0x00180798: push cs; or byte ptr [ebx + 0x40e6f02], al; ret; 
0x0017ebff: push cs; or byte ptr [ebx + 0x40e7002], al; ret; 
0x0017fce4: push cs; or byte ptr [ebx + 0x40e7102], al; ret; 
0x0017d09a: push cs; or byte ptr [ebx + 0x40e7202], al; ret; 
0x0017eee6: push cs; or byte ptr [ebx + 0x40e7302], al; ret; 
0x0017eedd: push cs; or byte ptr [ebx + 0x40e7502], al; ret; 
0x0017f164: push cs; or byte ptr [ebx + 0x40e7602], al; ret; 
0x0017d70a: push cs; or byte ptr [ebx + 0x40e7802], al; ret; 
0x0017ee6b: push cs; or byte ptr [ebx + 0x40e7902], al; ret; 
0x0017ed15: push cs; or byte ptr [ebx + 0x40e7a02], al; ret; 
0x0017ec59: push cs; or byte ptr [ebx + 0x40e7b02], al; ret; 
0x0017eed4: push cs; or byte ptr [ebx + 0x40e7e02], al; ret; 
0x0017c922: push cs; or byte ptr [ebx + 0x40e7f02], al; ret; 
0x0018b2d2: push cs; or byte ptr [ebx + 0x600e4302], al; push cs; or byte ptr [esi + ecx + 4], al; ret; 
0x001820cf: push cs; or byte ptr [ebx - 0x78f3f1fe], al; add ebx, dword ptr [esi + ecx + 8]; ret; 
0x00182069: push cs; or byte ptr [ebx - 0x78f3f1fe], al; add edx, dword ptr [esi + ecx + 8]; ret; 
0x001823f0: push cs; or byte ptr [ebx - 0x79f3f1fe], al; add ebp, dword ptr [esi + ecx + 8]; ret; 
0x0018229c: push cs; or byte ptr [ebx - 0x79f3f1fe], al; add ebx, dword ptr [esi + ecx + 8]; ret; 
0x00182258: push cs; or byte ptr [ebx - 0x79f3f1fe], al; add edx, dword ptr [esi + ecx + 8]; ret; 
0x001822be: push cs; or byte ptr [ebx - 0x79f3f1fe], al; add esp, dword ptr [esi + ecx + 8]; ret; 
0x0018e4e8: push cs; or byte ptr [ecx + 0xe], al; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xc0e5d04], al; ret; 
0x001886fa: push cs; or byte ptr [ecx - 0x3a], al; push cs; add al, 0x45; or ebp, dword ptr [ebx + 0xa]; ret; 
0x0018e934: push cs; or byte ptr [edi - 0x7a], al; add al, byte ptr [edx + 9]; add eax, dword ptr [edx]; push edi; ret; 
0x0018291e: push cs; or byte ptr [edi - 0x7cf3f1fe], al; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x001828fc: push cs; or byte ptr [edi - 0x7cf3f1fe], al; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7204], al; ret; 
0x00187526: push cs; or byte ptr [edx + 9], al; add eax, dword ptr [edx]; push esi; ret; 
0x00189f06: push cs; or byte ptr [esi + ecx + 4], al; ret; 
0x0000a4d4: push cs; pop ecx; add byte ptr [eax], al; nop; ret; 
0x00134d70: push cs; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008db11: push cs; pop edi; pop esi; pop ebx; ret; 
0x00089b34: push cs; pop edi; ret; 
0x000038bf: push cs; pop esp; ret; 
0x00183e62: push cs; push eax; add ebp, dword ptr [ecx + 0x140e0a01]; inc ecx; ret; 
0x00158790: push cs; push esp; jmp dword ptr [ebx - 0x40]; 
0x001940c2: push cs; pushal; add esp, dword ptr [ecx + 0x140e0a01]; inc ecx; ret; 
0x0018b2d7: push cs; pushal; push cs; or byte ptr [esi + ecx + 4], al; ret; 
0x0001933f: push cs; rdtsc; mov dword ptr [ecx + 0x500], eax; mov dword ptr [ecx + 0x504], edx; pop ebx; ret; 
0x00106de8: push cs; ret 9; 
0x00089c94: push cs; ret; 
0x00171772: push cs; rol byte ptr [ecx], 2; mov edx, 0x43140e0a; ret; 
0x001858ae: push cs; rol byte ptr [ecx], 3; test byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018e714: push cs; sbb byte ptr [ebx + 0x140e6506], al; ret; 
0x00166ddd: push cs; std; call dword ptr [eax + 0xc]; 
0x00166e0d: push cs; std; call dword ptr [eax]; 
0x00166ded: push cs; std; inc dword ptr [eax + 0xf]; std; call eax; 
0x00166dfd: push cs; std; jmp dword ptr [eax]; 
0x00166de9: push cs; std; jmp eax; 
0x00130620: push cs; sub eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0013032c: push cs; sub eax, ecx; pop esi; pop edi; ret; 
0x00193592: push cs; xor byte ptr [eax], bl; add byte ptr [eax], al; add byte ptr [eax - 0x7bfffdbd], bl; add bh, dh; jmp dword ptr [esi]; 
0x0018df86: push cs; xor byte ptr [ebp - 0x7d], cl; add edx, dword ptr [ebx - 0x7a]; add dh, byte ptr [ecx + 0xe]; add al, 0xc6; ret; 
0x0018deae: push cs; xor byte ptr [ecx - 0x7d], dl; add edx, dword ptr [edi - 0x7a]; add ch, byte ptr [ecx + 0xe]; add al, 0xc6; ret; 
0x00190bfc: push cs; xor byte ptr [edx + 0xa], bh; push cs; or al, 0x41; ret; 
0x00199fe3: push cs; xor byte ptr [edx], al; imul ecx, dword ptr [esi], 0x40e4108; ret; 
0x00199c67: push cs; xor byte ptr [edx], al; inc edi; push cs; or byte ptr [esi + ecx + 4], al; ret; 
0x00174985: push cs; xor byte ptr [edx], al; mov eax, dword ptr [0x43100e0a]; ret; 
0x00190836: push cs; xor byte ptr [edx], al; push edx; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x00189f03: push cs; xor byte ptr [esi + 0xe], dh; or byte ptr [esi + ecx + 4], al; ret; 
0x00142bd8: push ds; add al, 6; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x0000422c: push ds; add byte ptr [eax], al; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0x52; 
0x000ea075: push ds; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x000e8abb: push ds; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x00169715: push ds; add dword ptr [eax], eax; ret; 
0x00158d28: push ds; and bh, byte ptr [esi - 0x5e0466e]; xchg dword ptr [esp + eax + 0x6fa9ce9d], esp; ret; 
0x0002d211: push ds; and eax, ecx; ret; 
0x0016bef1: push ds; clc; jmp eax; 
0x0016e809: push ds; cld; call dword ptr [eax + 0x40]; 
0x001888ac: push ds; cld; hlt; call dword ptr [eax]; 
0x0016d6a9: push ds; cli; jmp dword ptr [eax - 0x20]; 
0x0018cf72: push ds; cmc; jmp dword ptr [edx]; 
0x00178541: push ds; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x00188cd1: push ds; hlt; call ecx; 
0x0006867e: push ds; jecxz 0x68680; jmp dword ptr [ecx]; 
0x000b9b38: push ds; lea esi, dword ptr [esi]; xor eax, eax; ret; 
0x00158bed: push ds; mov ah, 0x13; ret; 
0x000b912c: push ds; mov ecx, edx; xchg ebx, ecx; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000b91ac: push ds; mov ecx, edx; xchg ebx, ecx; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x0002d4dd: push ds; not eax; and eax, ecx; ret; 
0x000f10fa: push ds; or eax, dword ptr [eax]; mov dword ptr [esp + 0xc], ebx; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0008f304: push ds; pop edi; pop esi; pop ebx; ret; 
0x00003b55: push ds; ret; 
0x00166f55: push ds; std; call eax; 
0x00166f55: push ds; std; call eax; push ds; std; jmp dword ptr [eax]; 
0x00166f45: push ds; std; call esi; 
0x00166f45: push ds; std; call esi; push ds; std; jmp dword ptr [esi]; 
0x00166f51: push ds; std; inc dword ptr [eax - 0x2f0002e2]; push ds; std; jmp dword ptr [eax]; 
0x00166f41: push ds; std; inc dword ptr [esi - 0x290002e2]; push ds; std; jmp dword ptr [esi]; 
0x00166f59: push ds; std; jmp dword ptr [eax]; 
0x00166f49: push ds; std; jmp dword ptr [esi]; 
0x00166fcd: push ds; std; jmp eax; 
0x00166f25: push ds; std; jmp edx; 
0x00166fbd: push ds; std; jmp esi; 
0x00166f39: push ds; std; ljmp ptr [edi + ebx]; std; call dword ptr [esi]; 
0x00166fb5: push ds; std; ljmp ptr [esi + ebx + 0x1efcfffd]; std; jmp esi; 
0x00166fc9: push ds; std; push esi; push ds; std; jmp eax; 
0x00166757: push dword ptr [0x75fffcdc]; fdiv st(4), st(0); inc dword ptr [eax - 0x4f000327]; frndint; jmp eax; 
0x0016851b: push dword ptr [eax + 0x140000af]; scasd eax, dword ptr es:[edi]; in al, dx; jmp eax; 
0x0016d433: push dword ptr [eax + 0x140002ce]; stc; call esp; 
0x00169f4b: push dword ptr [eax + 0x3400014f]; cmp esi, ecx; call eax; 
0x0016d763: push dword ptr [eax + 0x340002e3]; cmp dl, bh; jmp esp; 
0x0015a69f: push dword ptr [eax + 0x34]; call dword ptr [eax - 0x4f000ccc]; xor al, 0xf3; call eax; 
0x0016737b: push dword ptr [eax + 0x34]; std; inc dword ptr [eax]; xor eax, 0x3590fffd; std; jmp dword ptr [eax]; 
0x001672cf: push dword ptr [eax + 0x3a]; std; jmp eax; 
0x0016694f: push dword ptr [eax + 0x40fffce2]; jecxz 0x166953; call eax; 
0x00166e2b: push dword ptr [eax + 0x40fffd01]; add bh, ch; call eax; 
0x00166f07: push dword ptr [eax + 0x40fffd10]; adc ebp, edi; call dword ptr [eax + 0xf]; 
0x00166fe3: push dword ptr [eax + 0x40fffd14]; adc eax, 0x15d0fffd; std; jmp dword ptr [eax + 0x16]; 
0x0016738b: push dword ptr [eax + 0x40fffd36]; aaa; std; call eax; 
0x00167607: push dword ptr [eax + 0x40fffd44]; inc ebp; std; call eax; 
0x001677a7: push dword ptr [eax + 0x40fffd53]; push esp; std; call eax; 
0x00168e23: push dword ptr [eax + 0x480000e6]; fucomi st(7); jmp eax; 
0x001675d3: push dword ptr [eax + 0x4b]; std; jmp dword ptr [eax]; 
0x001675ab: push dword ptr [eax + 0x4d]; std; call eax; 
0x0016ab6b: push dword ptr [eax + 0x540001dc]; xor dh, ah; call eax; 
0x0016cfcb: push dword ptr [eax + 0x5a0002b3]; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; jmp dword ptr [eax]; 
0x00167813: push dword ptr [eax + 0x5e]; std; inc eax; pop esi; std; call dword ptr [eax]; 
0x00166b8f: push dword ptr [eax + 0x70fffcfc]; cli; cld; jmp dword ptr [eax]; 
0x001675a7: push dword ptr [eax + 0x70fffd4c]; dec ebp; std; call eax; 
0x00166dfb: push dword ptr [eax + 0xe]; std; jmp dword ptr [eax]; 
0x00167197: push dword ptr [eax + 0xfffd2c]; sub eax, 0x2010fffd; std; call eax; 
0x0016728f: push dword ptr [eax + 0xfffd2d]; std; jmp dword ptr [eax + 0x2e]; 
0x00167353: push dword ptr [eax + 0xfffd3a]; cmp edi, ebp; call dword ptr [eax + 0x3b]; 
0x00167793: push dword ptr [eax + 0xfffd5c]; pop ebp; std; call dword ptr [eax + 0x5d]; 
0x001307a3: push dword ptr [eax + 3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00166e5b: push dword ptr [eax + 8]; std; inc dword ptr [esi + 0x8fffd0f]; adc ch, bh; jmp edx; 
0x0017d093: push dword ptr [eax + eax]; add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e7202], al; ret; 
0x000d8a1d: push dword ptr [eax + ecx - 0xd]; ret; 
0x0016ea8b: push dword ptr [eax + ecx*8]; add al, byte ptr [eax]; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; call eax; 
0x00169d1b: push dword ptr [eax + edi + 0x2f590001]; int1; jmp esp; 
0x000f0a3d: push dword ptr [eax + edx - 0x75]; inc esp; and al, 0x1c; add esp, 0x28; pop ebx; ret; 
0x00168ebb: push dword ptr [eax - 0x16]; add byte ptr [eax], al; adc al, 0xe5; out dx, eax; call eax; 
0x0016d5ab: push dword ptr [eax - 0x18fffd29]; or edi, edx; jmp eax; 
0x0016684f: push dword ptr [eax - 0x1a]; cld; call dword ptr [eax]; 
0x0016c123: push dword ptr [eax - 0x1bfffda3]; dec esi; clc; call esp; 
0x001685db: push dword ptr [eax - 0x1bffff4c]; mov ch, 0xec; call eax; 
0x001676cb: push dword ptr [eax - 0x1f0002b1]; dec ebp; std; jmp dword ptr [eax + 0x4e]; 
0x00166763: push dword ptr [eax - 0x1f000327]; frndint; call dword ptr [eax]; 
0x001664df: push dword ptr [eax - 0x1f00032a]; salc; cld; call dword ptr [eax]; 
0x00165fef: push dword ptr [eax - 0x1f000330]; sar ah, 1; call dword ptr [eax]; 
0x0016679b: push dword ptr [eax - 0x24]; cld; jmp edx; 
0x0016adbb: push dword ptr [eax - 0x2afffe15]; fcomi st(4); call dword ptr [eax - 0x15]; 
0x0016630f: push dword ptr [eax - 0x2b]; cld; call dword ptr [eax - 0x4f00032b]; aad 0xfc; call eax; 
0x0015a6a7: push dword ptr [eax - 0x2f000ccc]; xor al, 0xf3; push eax; xor al, 0xf3; call dword ptr [eax]; 
0x0016608f: push dword ptr [eax - 0x2f]; cld; call dword ptr [eax - 0x4f00032f]; sar esp, 1; call eax; 
0x0015a657: push dword ptr [eax - 0x3f000cce]; xor dh, bl; call eax; 
0x0015a657: push dword ptr [eax - 0x3f000cce]; xor dh, bl; call eax; xor dh, bl; jmp eax; 
0x0016d193: push dword ptr [eax - 0x43]; add al, byte ptr [eax]; push -0x3a; stc; jmp eax; 
0x001688a3: push dword ptr [eax - 0x5bffff3c]; jp 0x168898; call esp; 
0x00166b67: push dword ptr [eax - 0x7f000305]; cld; cld; jmp eax; 
0x00166bdb: push dword ptr [eax - 0xa]; cld; jmp dword ptr [esi]; 
0x0016aeab: push dword ptr [eax - 0xe]; add dword ptr [eax], eax; int1; out dx, al; hlt; call dword ptr [eax]; 
0x00166c87: push dword ptr [eax - 2]; cld; jmp dword ptr [eax]; 
0x00166b93: push dword ptr [eax - 6]; cld; jmp dword ptr [eax]; 
0x0016627f: push dword ptr [eax]; aad 0xfc; jmp dword ptr [eax - 0x2b]; 
0x0016626b: push dword ptr [eax]; aam 0xfc; jmp dword ptr [eax - 0x2c]; 
0x0016929b: push dword ptr [eax]; add dword ptr [eax], eax; and eax, esi; jmp dword ptr [eax + 0x4000100]; 
0x0016a303: push dword ptr [eax]; add word ptr [eax], ax; mov ah, 0x89; int1; call dword ptr [eax + 0x66]; 
0x00168e63: push dword ptr [eax]; call 0xdec08e6a; out dx, eax; jmp dword ptr [eax - 0x18]; 
0x0016dba3: push dword ptr [eax]; cld; add al, byte ptr [eax]; in al, 0xc8; cli; call dword ptr [eax - 4]; 
0x001691d3: push dword ptr [eax]; cld; add byte ptr [eax], al; into; adc dh, al; jmp dword ptr [eax - 4]; 
0x001673cf: push dword ptr [eax]; cmp al, 0xfd; inc dword ptr [eax - 0x2f0002c4]; cmp al, 0xfd; jmp dword ptr [eax]; 
0x00166797: push dword ptr [eax]; fdiv st(4), st(0); push dword ptr [eax - 0x24]; cld; jmp edx; 
0x0016692f: push dword ptr [eax]; fdivp st(4); inc eax; fdivp st(4); call dword ptr [eax - 0x21]; 
0x00168de3: push dword ptr [eax]; in eax, 0; add byte ptr [eax - 0x28], bh; out dx, eax; jmp dword ptr [eax - 0x1b]; 
0x00168f2b: push dword ptr [eax]; in eax, dx; add byte ptr [eax], al; aam 0xee; out dx, eax; jmp dword ptr [eax]; 
0x001684fb: push dword ptr [eax]; mov cl, 0; add ah, dl; lodsb al, byte ptr [esi]; in al, dx; jmp dword ptr [eax - 0x4f]; 
0x00168793: push dword ptr [eax]; mov ebp, 0xdf840000; in al, dx; call dword ptr [eax - 0x43]; 
0x00166de3: push dword ptr [eax]; or eax, 0xe00fffd; std; jmp eax; 
0x00166e1b: push dword ptr [eax]; push cs; std; jmp eax; 
0x0016d28b: push dword ptr [eax]; ret 2; 
0x0016888b: push dword ptr [eax]; ret; 
0x0016d223: push dword ptr [eax]; rol byte ptr [edx], 0; xor al, 0xcc; stc; jmp dword ptr [eax - 0x40]; 
0x00168acb: push dword ptr [eax]; rol dword ptr [eax], cl; add ah, dh; dec ecx; out dx, al; call dword ptr [eax - 0x2d]; 
0x00167003: push dword ptr [eax]; sbb ebp, edi; inc eax; sbb ebp, edi; call dword ptr [eax + 0x1a]; 
0x001671bb: push dword ptr [eax]; std; inc eax; std; call dword ptr [eax + 0x27]; 
0x0016e4ab: push dword ptr [eax]; sub eax, 0xccb40003; sti; call dword ptr [eax + 0x2d]; 
0x00167d5b: push dword ptr [eax]; xchg dword ptr [eax], eax; add ah, dl; mov al, 0xeb; call eax; 
0x00168b9b: push dword ptr [eax]; xlatb; add byte ptr [eax], al; xor al, 0xda; out dx, al; call dword ptr [eax - 0x29]; 
0x0015a697: push dword ptr [eax]; xor al, 0xf3; call dword ptr [eax + 0x34]; 
0x0016736b: push dword ptr [eax]; xor bh, ch; inc eax; xor bh, ch; call dword ptr [eax + 0x33]; 
0x0015a63b: push dword ptr [eax]; xor dh, bl; jmp dword ptr [eax + 0x32]; 
0x000b7e26: push dword ptr [ebp + 0x47]; mov eax, ebp; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000eec4f: push dword ptr [ebp + 0xc]; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000eb096: push dword ptr [ebp + 0xf]; shr ebp, 0xc; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x0016e50b: push dword ptr [ebp + ebp + 3]; add byte ptr [eax - 0x5b000430], al; sub eax, 0xd0900003; sti; call esp; 
0x0016754f: push dword ptr [ebp + ecx*2 + 0x4b84fffd]; std; push dword ptr [esp + ecx*2]; std; jmp esp; 
0x0016be13: push dword ptr [ebp + ecx*2 + 0xc140002]; clc; call esp; 
0x00169c9b: push dword ptr [ebp + esi + 0x2e6a0001]; int1; jmp esp; 
0x000cb4ed: push dword ptr [ebp - 0x10]; mov eax, dword ptr [esi + 0x3c]; add esp, 0x14; pop esi; pop edi; ret; 
0x0014a37e: push dword ptr [ebp - 0x11]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0002ed5e: push dword ptr [ebp - 0x11]; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0002f8a7: push dword ptr [ebp - 0x12]; pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x000c9529: push dword ptr [ebp - 0x1c]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0016675b: push dword ptr [ebp - 0x24]; cld; inc dword ptr [eax - 0x4f000327]; frndint; jmp eax; 
0x0014a924: push dword ptr [ebp - 0x27]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00072a63: push dword ptr [ebp - 0x2c]; add esp, 0x18; pop esi; ret; 
0x000716be: push dword ptr [ebp - 0x75]; inc esi; add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x0002fe72: push dword ptr [ebp - 0xd]; mov eax, edx; pop esi; pop edi; ret; 
0x000b819a: push dword ptr [ebx + 0x25]; ret; 
0x000deb92: push dword ptr [ebx + 0x2d]; ret; 
0x000b8206: push dword ptr [ebx + 0x30]; ret; 
0x000b7d18: push dword ptr [ebx + 0x32]; ret; 
0x000ef69e: push dword ptr [ebx + 0x38]; ret; 
0x000e7e84: push dword ptr [ebx + 0x3e]; ret; 
0x000efb5a: push dword ptr [ebx + 0x44]; ret; 
0x0002e1bc: push dword ptr [ebx + 1]; ret; 
0x0016e343: push dword ptr [ebx + 3]; add byte ptr [esp + eax*4], al; sti; call dword ptr [eax + 0x4000323]; test ebx, edi; jmp esp; 
0x00073bed: push dword ptr [ebx + 3]; movzx eax, byte ptr [edx]; pop esi; ret; 
0x0003f86b: push dword ptr [ebx + 3]; xor eax, eax; ret; 
0x00016eb0: push dword ptr [ebx + 4]; jmp dword ptr [ebx + 8]; 
0x0006bfc2: push dword ptr [ebx + eax - 0x7d]; out dx, eax; add esp, 0x18; pop esi; ret; 
0x000b462f: push dword ptr [ebx + ebp - 0x77]; ret 0xe283; 
0x00168f03: push dword ptr [ebx + ebp*8 - 0x131d0000]; out dx, eax; jmp esp; 
0x0010fb1f: push dword ptr [ebx + ebx*8 - 0xd]; ret; 
0x000c8517: push dword ptr [ebx + ecx + 0x31]; rol byte ptr [ebx - 0x6bf0fb08], cl; ret 0x5589; 
0x0016753f: push dword ptr [ebx + ecx*2]; std; jmp esp; 
0x00169d9b: push dword ptr [ebx + edi + 0x30410001]; int1; jmp esp; 
0x0016c71b: push dword ptr [ebx + edi*2]; add al, byte ptr [eax]; add al, 0xbb; clc; jmp dword ptr [eax + 0x7b]; 
0x0016b033: push dword ptr [ebx + edi*8 + 0xfb40001]; cmc; call esp; 
0x0016b02b: push dword ptr [ebx + edi*8 + 1]; add byte ptr [edi + ecx - 0xb], dh; push dword ptr [ebx + edi*8 + 0xfb40001]; cmc; call esp; 
0x00166b17: push dword ptr [ebx + edi*8]; cld; jmp esp; 
0x00120f84: push dword ptr [ebx + edx - 0x75]; dec ebp; nop; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000716a7: push dword ptr [ebx + edx - 0x77]; ret 0xfac1; 
0x001660b3: push dword ptr [ebx - 0x1c00032c]; aam 0xfc; call dword ptr [ebx]; 
0x001660b3: push dword ptr [ebx - 0x1c00032c]; aam 0xfc; call dword ptr [ebx]; aad 0xfc; call dword ptr [ebx - 0x2b]; 
0x001662ff: push dword ptr [ebx - 0x2b]; cld; call dword ptr [ebx - 0x4c00032b]; aad 0xfc; call ebx; 
0x00168d9b: push dword ptr [ebx - 0x2bdc0000]; out dx, eax; call eax; 
0x0016607f: push dword ptr [ebx - 0x2f]; cld; call dword ptr [ebx - 0x4c00032f]; sar esp, 1; call ebx; 
0x000f200f: push dword ptr [ebx - 0x7d]; ret 0x8901; 
0x00165e37: push dword ptr [ebx]; sar esp, 1; jmp dword ptr [ebx - 0x2f]; 
0x00166327: push dword ptr [ebx]; xlatb; cld; jmp dword ptr [ebx - 0x29]; 
0x00169e9b: push dword ptr [ecx + eax*2 + 0x32010001]; int1; jmp esp; 
0x00114264: push dword ptr [ecx + eax*2 - 0x77]; push esi; sub al, 1; ret 0x5689; 
0x00065524: push dword ptr [ecx + ebp*2 - 0x75]; inc esi; push 0x5a7ec085; mov eax, dword ptr [esi + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x0006cac9: push dword ptr [ecx + edx - 0x75]; inc esi; pop eax; mov eax, dword ptr [eax + 0xb8]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0016df63: push dword ptr [ecx + edx]; add eax, dword ptr [eax]; push esp; inc esp; sti; jmp dword ptr [eax + 0x11]; 
0x0016d42b: push dword ptr [ecx*8 - 0xd9bfffe]; stc; push dword ptr [eax + 0x140002ce]; stc; call esp; 
0x000354f5: push dword ptr [ecx]; div byte ptr [ecx]; jmp dword ptr [ebp - 0x39]; 
0x00074d62: push dword ptr [ecx]; in eax, dx; mov dword ptr [esp + 0x18], edx; mov dword ptr [esp], 0; call dword ptr [ecx]; 
0x0002439e: push dword ptr [ecx]; jmp dword ptr [ebp - 0x39]; 
0x0010a351: push dword ptr [ecx]; rol byte ptr [ebx - 0x6bf0fe01], cl; ret 0xd689; 
0x000962ab: push dword ptr [ecx]; rol byte ptr [ecx + 0x450c4], 0; pop esi; pop edi; pop ebp; ret; 
0x0002c87c: push dword ptr [ecx]; ror byte ptr [ebx - 0x74ebdba4], 0x74; and al, 0x18; add esp, 0x1c; ret; 
0x000c560e: push dword ptr [ecx]; ror byte ptr [ebx - 0x74efdba4], 0x74; and al, 0x14; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00079008: push dword ptr [ecx]; ror byte ptr [ebx - 0x74fbdba4], 0x74; and al, 8; add esp, 0xc; ret; 
0x0002e1d0: push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000addee: push dword ptr [ecx]; shr cl, 0x76; fdivr st(7); jmp dword ptr [esi - 0x70]; 
0x0011dbef: push dword ptr [ecx]; shr cl, cl; ret 0xfffe; 
0x000ddae2: push dword ptr [edi + 0x10]; mov eax, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x14]; add esp, 0x18; ret; 
0x000e0158: push dword ptr [edi + 0x10]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x001028fc: push dword ptr [edi + 0x11]; mov ebx, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000ecb50: push dword ptr [edi + 0x19]; pop ebx; ret; 
0x000e9769: push dword ptr [edi + 0x1f]; mov ebx, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0002dea5: push dword ptr [edi + 0x20]; mov ebx, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000e1421: push dword ptr [edi + 0x23]; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000e149d: push dword ptr [edi + 0x24]; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000e7ab4: push dword ptr [edi + 0x25]; mov ebx, dword ptr [esp + 0x34]; mov edi, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x000b9143: push dword ptr [edi + 0x2c]; add esp, 0x38; pop ebx; ret; 
0x000ddf25: push dword ptr [edi + 0x2d]; mov ebx, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000e96ea: push dword ptr [edi + 0x2f]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000b55c5: push dword ptr [edi + 0x30]; add esp, 0x38; pop ebx; ret; 
0x000e9620: push dword ptr [edi + 0x31]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000ddfbd: push dword ptr [edi + 0x31]; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000b94e0: push dword ptr [edi + 0x3b]; mov ebx, dword ptr [esp + 0x34]; mov edi, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x000de645: push dword ptr [edi + 0x3c]; mov ebx, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000b8615: push dword ptr [edi + 0xb]; mov ebx, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000eb127: push dword ptr [edi + 0xc]; ret; 
0x0005557d: push dword ptr [edi + 0xf]; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000eb0b0: push dword ptr [edi + 1]; ret; 
0x0002e209: push dword ptr [edi + 2]; pop ebx; ret; 
0x000f11eb: push dword ptr [edi + 2]; ret; 
0x000eeb97: push dword ptr [edi + 6]; add esp, 0x30; pop ebx; pop edi; ret; 
0x00081b53: push dword ptr [edi + ebx*2 - 9]; ret 0; 
0x0016d71b: push dword ptr [edi + ebx*8 + 0x29e50002]; cli; jmp esp; 
0x000e8926: push dword ptr [edi + ecx + 0x65]; mov dword ptr [eax], 0x26; mov eax, 0xffffffff; ret; 
0x00064f7e: push dword ptr [edi + ecx - 0x75]; inc esp; and al, 0x18; mov edx, dword ptr [esp + 0x1c]; add esp, 0x2c; ret; 
0x000711ff: push dword ptr [edi + ecx - 0x77]; ret 0xfac1; 
0x00064698: push dword ptr [edi - 0x77]; ret 0xe283; 
0x0007143d: push dword ptr [edi - 0x77c0001]; dec dword ptr [edi]; xchg eax, esp; ret 0xd284; 
0x00167163: push dword ptr [edx + 0x2c]; std; inc edx; sub al, 0xfd; call dword ptr [edx]; 
0x00167267: push dword ptr [edx + 0x2e]; std; call edx; 
0x0016709f: push dword ptr [edx + 0x2fffd1f]; and ch, bh; call dword ptr [edx + 0x20]; 
0x0016d74b: push dword ptr [edx + 0x370b0002]; cli; jmp esp; 
0x0006c258: push dword ptr [edx + 0xd]; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x00166a2f: push dword ptr [edx + 0xfffcf8]; stc; cld; call edx; 
0x00166caf: push dword ptr [edx + 0xfffd0a]; or edi, ebp; jmp edx; 
0x00067653: push dword ptr [edx + ebp*2 - 0x75]; inc esi; push 0x5b7ec085; mov eax, dword ptr [esi + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x0016a0fb: push dword ptr [edx + ebx*2]; add dword ptr [eax], eax; in al, 0x5c; int1; call dword ptr [eax + 0x5a]; 
0x00168c33: push dword ptr [edx + ebx*8]; add byte ptr [eax], al; test bh, bl; out dx, al; jmp dword ptr [eax]; 
0x001219db: push dword ptr [edx + edx - 0x77]; rol dword ptr [edi + 0x6b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00120311: push dword ptr [edx + edx - 0x77]; stc; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0016652f: push dword ptr [edx - 0x28]; cld; call dword ptr [edx - 0x4d000328]; fdivr st(4); call edx; 
0x001667ab: push dword ptr [edx - 0x5d000318]; out 0xfc, al; push eax; out 0xfc, al; call edx; 
0x00165db7: push dword ptr [edx]; into; cld; call dword ptr [edx - 0x32]; 
0x00167047: push dword ptr [esi + 0x20]; std; inc esi; and ch, bh; call eax; 
0x001672bf: push dword ptr [esi + 0x3a]; std; jmp esi; 
0x00167803: push dword ptr [esi + 0x5e]; std; inc esi; pop esi; std; call dword ptr [esi]; 
0x00167187: push dword ptr [esi + 0x6fffd2c]; sub eax, 0x2c00fffd; std; jmp dword ptr [eax + 0x2c]; 
0x0016727f: push dword ptr [esi + 0x6fffd2d]; std; jmp dword ptr [esi + 0x2e]; 
0x00167343: push dword ptr [esi + 0x6fffd3a]; cmp edi, ebp; call dword ptr [esi + 0x3b]; 
0x00167783: push dword ptr [esi + 0x6fffd5c]; pop ebp; std; call dword ptr [esi + 0x5d]; 
0x0016c143: push dword ptr [esi + ebx*2 + 2]; add byte ptr [ebx + edx*2 + 0x5ea0fff8], ah; add al, byte ptr [eax]; push esi; clc; jmp eax; 
0x0016e76b: push dword ptr [esi + edi + 0x11f40003]; cld; call esp; 
0x00169e1b: push dword ptr [esi + edi + 0x31290001]; int1; jmp esp; 
0x00166c57: push dword ptr [esi + edi*8]; cld; call esp; 
0x001662ef: push dword ptr [esi - 0x2b]; cld; call dword ptr [esi - 0x4900032b]; aad 0xfc; call esi; 
0x0016606f: push dword ptr [esi - 0x2f]; cld; call dword ptr [esi - 0x4900032f]; sar esp, 1; call esi; 
0x000f204c: push dword ptr [esi - 0x7d]; ret 0x6601; 
0x0010fd77: push dword ptr [esi - 0xa]; ret 0x7507; 
0x001673bf: push dword ptr [esi]; cmp al, 0xfd; inc dword ptr [esi - 0x290002c4]; cmp al, 0xfd; jmp dword ptr [esi]; 
0x001672c7: push dword ptr [esi]; cmp edi, ebp; inc dword ptr [esi + 0x70fffd3b]; cmp bh, ch; jmp eax; 
0x00167203: push dword ptr [esi]; std; call dword ptr [esi - 0x90002d2]; std; jmp eax; 
0x0002dc42: push dword ptr [esp + 8]; call 0x2dbb0; pop ecx; pop edx; ret; 
0x00129ffd: push dword ptr [esp + ebp*4 - 0x77]; ret 0xe283; 
0x001669c7: push dword ptr [esp + ebp*8 - 0x12bb0004]; cld; call dword ptr [ebx + ebp*8 - 4]; call esp; 
0x00095921: push dword ptr [esp + ebx*2 + 0xf]; mov ebp, 0x5ff801ff; ret; 
0x0016772f: push dword ptr [esp + ebx*2 - 3]; call esp; 
0x00167557: push dword ptr [esp + ecx*2]; std; jmp esp; 
0x001682eb: push dword ptr [esp]; add byte ptr [eax], al; add al, 0x6e; in al, dx; call dword ptr [eax - 0x5c]; 
0x0017c750: push eax; aad 0; add byte ptr [esp + edx*8], bl; out dx, eax; call dword ptr [edi + 2]; 
0x00189c20: push eax; aam 0xf4; call dword ptr [edx]; 
0x0016627b: push eax; aam 0xfc; push dword ptr [eax]; aad 0xfc; jmp dword ptr [eax - 0x2b]; 
0x0011f55e: push eax; adc al, 0x5b; ret; 
0x0006bee4: push eax; adc al, 0x89; push eax; or al, 0x31; ror byte ptr [ecx + 0x18c4830e], 0x5e; ret; 
0x0011f729: push eax; adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x00047fab: push eax; adc al, 0xf; sbb dword ptr [ebp - 0x38fffffc], 2; sub eax, 0x83000000; ret 0x8904; 
0x00094cc6: push eax; adc byte ptr [eax + 0x448b1870], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x00091840: push eax; adc byte ptr [eax + 0x448b1870], cl; and al, 8; pop esi; ret; 
0x0011bbd8: push eax; adc byte ptr [ebx + 0x4508b06], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x00095ae1: push eax; adc byte ptr [ebx + 0x58ebf0e2], al; nop; lea esi, dword ptr [esi]; xor eax, eax; ret; 
0x00094ca3: push eax; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x00091820: push eax; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x000720be: push eax; adc byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00112658: push eax; adc byte ptr [ebx - 0x76e7dbb4], cl; ret 0x442b; 
0x00094d26: push eax; adc byte ptr [ecx + 0x448b1748], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x00091883: push eax; adc byte ptr [ecx + 0x448b1748], cl; and al, 8; pop esi; ret; 
0x00094d56: push eax; adc byte ptr [ecx + 0x448b1848], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000918a3: push eax; adc byte ptr [ecx + 0x448b1848], cl; and al, 8; pop esi; ret; 
0x0008060c: push eax; adc byte ptr [ecx - 0x3b7cf7b8], cl; and al, 0x5e; pop edi; pop ebp; ret; 
0x00112636: push eax; adc byte ptr [ecx - 0x74e3dbbc], cl; inc edi; adc byte ptr [ecx + 0x44892434], cl; and al, 4; call dword ptr [edi + 0x14]; 
0x0006dbe1: push eax; adc byte ptr [ecx], bh; push eax; or al, 0xf; xchg eax, esp; ret 0xb60f; 
0x00094cf7: push eax; adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x00091864: push eax; adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x00166f1b: push eax; adc ch, bh; jmp dword ptr [edx]; 
0x001694eb: push eax; adc dword ptr [ecx], eax; add byte ptr [edi + eax*2 - 0x10], dl; call dword ptr [eax]; 
0x00166fdf: push eax; adc ebp, edi; push dword ptr [eax + 0x40fffd14]; adc eax, 0x15d0fffd; std; jmp dword ptr [eax + 0x16]; 
0x0007f453: push eax; add al, 0; add byte ptr [ecx + 0x5d5f5ed0], cl; ret; 
0x0007f355: push eax; add al, 0; add byte ptr [ecx], dh; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x0007f49a: push eax; add al, 0; add byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x000410a5: push eax; add al, 0x31; rol byte ptr [ebx + 0x5e5b20c4], 0x5f; ret; 
0x000ce00b: push eax; add al, 0x7c; int1; pop esi; ret; 
0x000fc2ef: push eax; add al, 0x89; adc al, 0x24; call dword ptr [eax]; 
0x000fc2ef: push eax; add al, 0x89; adc al, 0x24; call dword ptr [eax]; add esp, 0x1c; ret; 
0x00111bde: push eax; add al, 0x89; add al, 0x24; call dword ptr [edx + 0x10]; 
0x00071ed1: push eax; add al, 0x89; dec eax; and al, 0x5e; ret; 
0x0011f0b9: push eax; add al, 0x89; dec esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0x20]; 
0x0011f0a1: push eax; add al, 0x89; dec esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0x24]; 
0x001140c1: push eax; add al, 0x89; dec esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x001140d9: push eax; add al, 0x89; dec esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx]; 
0x00124a54: push eax; add al, 0x89; ret 0x8365; 
0x00114136: push eax; add al, 0x89; ret 0xc031; 
0x00126f3e: push eax; add al, 0x89; ret 0xebeb; 
0x0006745f: push eax; add al, 0x8b; inc ebp; push esp; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x0009160a: push eax; add al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x00173270: push eax; add al, 0xec; call dword ptr [edi + 1]; 
0x0016faac: push eax; add byte ptr [eax], al; add byte ptr [eax + 0x3c000008], dh; ret; 
0x00027210: push eax; add byte ptr [ecx], al; add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x001984b5: push eax; add dword ptr [edx], ecx; ret; 
0x00183e63: push eax; add ebp, dword ptr [ecx + 0x140e0a01]; inc ecx; ret; 
0x00094a7b: push eax; add ecx, dword ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x00091628: push eax; add ecx, dword ptr [ebx + 0x5e082444]; ret; 
0x0001d708: push eax; add ecx, dword ptr [edi]; dec eax; ret 0xe083; 
0x000ecdac: push eax; add ecx, dword ptr [edi]; dec eax; ret 0xf8c1; 
0x0018689f: push eax; add esi, dword ptr [ecx]; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x0002c67c: push eax; add esi, esi; ret 0x6601; 
0x0006f2ea: push eax; add esp, 0x18; pop esi; ret; 
0x0006fbaf: push eax; add esp, 0x20; pop esi; pop edi; pop ebp; ret; 
0x000f3b61: push eax; add esp, 0xc; and eax, 0x1000; ret; 
0x000f3ac1: push eax; add esp, 0xc; and eax, 0x100; ret; 
0x000f3a21: push eax; add esp, 0xc; and eax, 0x2000; ret; 
0x000f37a1: push eax; add esp, 0xc; and eax, 0x200; ret; 
0x000f38e1: push eax; add esp, 0xc; and eax, 0x4000; ret; 
0x000f3521: push eax; add esp, 0xc; and eax, 0x400; ret; 
0x000f3841: push eax; add esp, 0xc; and eax, 0x8000; ret; 
0x000f35c1: push eax; add esp, 0xc; and eax, 1; ret; 
0x000f3661: push eax; add esp, 0xc; and eax, 2; ret; 
0x000f3981: push eax; add esp, 0xc; and eax, 4; ret; 
0x000f3481: push eax; add esp, 0xc; and eax, 8; ret; 
0x000f1d81: push eax; add word ptr [edx], 1; add esp, 8; pop ebx; ret; 
0x0002607b: push eax; and al, 0x81; ret 0x100; 
0x000cc899: push eax; and byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x0006b5f7: push eax; and byte ptr [ecx + 0x488b0448], cl; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x0011188f: push eax; and byte ptr [ecx - 0x76fbdb84], cl; add al, 0x24; call dword ptr [edx + 4]; 
0x0011acb0: push eax; and byte ptr [ecx - 0x76fbdb84], cl; add al, 0x24; call dword ptr [edx + 8]; 
0x00116495: push eax; and byte ptr [ecx - 0x76fbdb94], cl; add al, 0x24; call dword ptr [edx + 8]; 
0x0011a76e: push eax; and byte ptr [ecx - 0x76fbdbb4], cl; add al, 0x24; call dword ptr [edx + 4]; 
0x001119b4: push eax; and byte ptr [ecx - 0x76fbdbb4], cl; dec esp; and al, 0x18; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x00111955: push eax; and byte ptr [edi + esi - 0x77], dh; add al, 0x24; call dword ptr [edx + 0xc]; 
0x00026f3b: push eax; and eax, 0x1000; ret; 
0x00026f0b: push eax; and eax, 0x100; ret; 
0x00026edb: push eax; and eax, 0x2000; ret; 
0x00026e2b: push eax; and eax, 0x200; ret; 
0x00026e8b: push eax; and eax, 0x4000; ret; 
0x00026dab: push eax; and eax, 0x400; ret; 
0x00026e5b: push eax; and eax, 0x8000; ret; 
0x00026dfb: push eax; and eax, 0x800; ret; 
0x00026fcb: push eax; and eax, 1; ret; 
0x00026ddb: push eax; and eax, 2; ret; 
0x00026ebb: push eax; and eax, 4; ret; 
0x00026d8b: push eax; and eax, 8; ret; 
0x00188d30: push eax; and esp, esi; jmp dword ptr [edi]; 
0x00168e83: push eax; call 0xe16d8e8a; out dx, eax; jmp dword ptr [eax]; 
0x00166bd4: push eax; cmc; cld; jmp eax; 
0x0016e6d3: push eax; cmp al, byte ptr [ebx]; add byte ptr [ebx + edi*8], ah; sti; call dword ptr [eax]; 
0x0003f8d5: push eax; cmp byte ptr [ebx + 0x408b3c48], cl; inc eax; ret; 
0x0016e9cb: push eax; cmp eax, 0x22a70002; cld; call dword ptr [eax + 0x47]; 
0x0016735c: push eax; cmp edi, ebp; call dword ptr [eax + 0x2e]; 
0x0016735c: push eax; cmp edi, ebp; call dword ptr [eax + 0x2e]; std; call dword ptr [eax]; 
0x00183440: push eax; cmp esi, ecx; jmp edx; 
0x001671c4: push eax; daa; std; jmp eax; 
0x00064195: push eax; dec dword ptr [ecx + 0x558b2056]; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x4589; 
0x00183980: push eax; dec esp; int1; jmp dword ptr [edx + 1]; 
0x00129919: push eax; dec esp; ret; 
0x001675b8: push eax; dec esp; std; call dword ptr [eax]; 
0x0016ab7b: push eax; fadd qword ptr [ecx]; add byte ptr [ebx + esi], dl; hlt; jmp dword ptr [eax]; 
0x0018d050: push eax; fiadd word ptr [ecx]; add byte ptr [esp + edx*8], bh; cmc; jmp dword ptr [eax]; 
0x00166a18: push eax; in al, dx; cld; jmp eax; 
0x001675f0: push eax; inc ecx; std; jmp eax; 
0x00173e00: push eax; inc edi; add byte ptr [eax], al; leave; mov cl, 0xec; call dword ptr [eax]; 
0x0006ab09: push eax; inc esi; mov edx, dword ptr [eax + edx + 0x94]; mov dword ptr [esp], eax; call dword ptr [edx + 0x30]; 
0x0003f9b3: push eax; insb byte ptr es:[edi], dx; lea ecx, dword ptr [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0003f851: push eax; insb byte ptr es:[edi], dx; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0016a95b: push eax; int 1; add ch, dh; out 0xf3, al; jmp dword ptr [eax - 0x33]; 
0x0016d45b: push eax; int 2; add al, dl; hlt; stc; jmp dword ptr [eax]; 
0x00165fdf: push eax; iretd; cld; jmp dword ptr [eax]; 
0x000e3f14: push eax; jmp dword ptr [esi - 0x7d]; 
0x00094dc3: push eax; jnp 0x5b15720e; pop esi; ret; 
0x00091900: push eax; jnp 0x5e113d4b; ret; 
0x00001a30: push eax; jns 0x1a3a; ret; 
0x000a546e: push eax; lcall ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x00119cd9: push eax; lea edx, dword ptr [esp + 0x84]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 4]; 
0x0016d0b3: push eax; mov bh, 2; add ah, dh; mov dl, 0xf9; call dword ptr [eax - 0x48]; 
0x0019043d: push eax; mov ch, dh; jmp dword ptr [edx]; 
0x0017a850: push eax; mov dh, 0; add ah, cl; test bh, ch; jmp dword ptr [ecx + 1]; 
0x0016f920: push eax; mov dh, 0xea; call dword ptr [edx]; 
0x0016cfab: push eax; mov dl, 2; add byte ptr [ecx], bl; cmpsb byte ptr [esi], byte ptr es:[edi]; stc; jmp dword ptr [eax - 0x4e]; 
0x000e5024: push eax; mov dword ptr [eax + 0x54], edx; xor eax, eax; pop ebx; ret; 
0x000eeb7e: push eax; mov dword ptr [esp + 0x1c], eax; xchg ebx, ecx; mov eax, 0x95; call dword ptr gs:[0x10]; 
0x0007b935: push eax; mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp + 4], esi; mov dword ptr [esp], ecx; call eax; 
0x000e73fb: push eax; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000e791b: push eax; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00119cbc: push eax; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x28]; mov dword ptr [esp], edi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x0011a1d4: push eax; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x0018aa50: push eax; mov eax, 0x351c0001; cmc; call dword ptr [ecx]; 
0x000e7367: push eax; mov ecx, dword ptr [esp + 0x54]; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000e7887: push eax; mov ecx, dword ptr [esp + 0x54]; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000e7134: push eax; mov edi, dword ptr [esp + 0x14]; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000e7694: push eax; mov edi, dword ptr [esp + 0x14]; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00054a0e: push eax; mov edi, dword ptr [esp + 0x54]; mov ebp, dword ptr [esp + 0x58]; add esp, 0x5c; ret; 
0x000b820f: push eax; mov edx, ebx; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa2; call dword ptr gs:[0x10]; 
0x000df61f: push eax; mov edx, ebx; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 8; call dword ptr gs:[0x10]; 
0x0016d1d3: push eax; mov esi, 0xc8fa0002; stc; jmp dword ptr [eax - 0x42]; 
0x0019b500: push eax; mov esi, 0xda480002; clc; call dword ptr [eax]; 
0x001121a6: push eax; mov esi, dword ptr [esp + 0x54]; mov edi, dword ptr [esp + 0x58]; add esp, 0x5c; ret; 
0x0016ce2b: push eax; movsb byte ptr es:[edi], byte ptr [esi]; add al, byte ptr [eax]; cmc; test ecx, edi; jmp dword ptr [eax]; 
0x000c68f7: push eax; or al, 0x31; rol byte ptr [ebx - 0x6bf09f02], cl; ret 0x5408; 
0x0006bee7: push eax; or al, 0x31; ror byte ptr [ecx + 0x18c4830e], 0x5e; ret; 
0x00033db2: push eax; or al, 0x66; mov dword ptr [eax + 0xe], 0xc0310001; add esp, 8; ret; 
0x00124dc8: push eax; or al, 0x89; ret 0x8365; 
0x0011ea64: push eax; or al, 0x89; ret 0xc031; 
0x0006dbe4: push eax; or al, 0xf; xchg eax, esp; ret 0xb60f; 
0x00166de0: push eax; or al, 0xfd; push dword ptr [eax]; or eax, 0xe00fffd; std; jmp eax; 
0x000fc2e8: push eax; or byte ptr [ebp - 0x74f78b2e], al; push eax; add al, 0x89; adc al, 0x24; call dword ptr [eax]; 
0x000ce0d1: push eax; or byte ptr [ebp - 0x74f98b2e], al; inc eax; adc byte ptr [ecx - 0x3fceefbe], cl; pop esi; ret; 
0x00094ae1: push eax; or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x0009166e: push eax; or byte ptr [ebx + 0x5e082444], cl; ret; 
0x00073181: push eax; or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x00069103: push eax; or byte ptr [ecx + 0x180c4], al; add byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x00071ecb: push eax; or byte ptr [ecx + 0x50890c70], cl; add al, 0x89; dec eax; and al, 0x5e; ret; 
0x0011c999: push eax; or byte ptr [ecx - 0x76fbdbb4], cl; add al, 0x24; call dword ptr [edx + 0xc]; 
0x0011c999: push eax; or byte ptr [ecx - 0x76fbdbb4], cl; add al, 0x24; call dword ptr [edx + 0xc]; add esp, 0x4c; ret; 
0x0019291f: push eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018d42e: push eax; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00111f8f: push eax; or dh, dh; ret 0x7401; 
0x000918c0: push eax; or eax, 0x824448b; pop esi; ret; 
0x00094d83: push eax; or eax, 0xc24448b; pop ebx; pop esi; ret; 
0x0017304d: push eax; out 0xeb, al; jmp dword ptr [edx]; 
0x001667b3: push eax; out 0xfc, al; call edx; 
0x001667b3: push eax; out 0xfc, al; call edx; out 0xfc, eax; jmp dword ptr [edx - 0x18]; 
0x00166847: push eax; out 0xfc, eax; inc dword ptr [eax + 0x70fffce8]; out 0xfc, al; call dword ptr [eax]; 
0x001791ad: push eax; out dx, eax; call dword ptr [ecx]; 
0x0017b13a: push eax; out dx, eax; jmp dword ptr [edx]; 
0x00166f10: push eax; paddw mm7, mm7; ror byte ptr [edi], 1; std; jmp dword ptr [eax + 0x10]; 
0x00174f50: push eax; pop ebp; add byte ptr [eax], al; pop esp; imul ebp; jmp dword ptr [ebx]; 
0x0016a183: push eax; pop ebp; add dword ptr [eax], eax; in al, 0x66; int1; call dword ptr [eax]; 
0x0016779c: push eax; pop ebp; std; jmp dword ptr [eax + 0x50]; 
0x001677d0: push eax; pop ecx; std; jmp eax; 
0x00123ef7: push eax; pop es; add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp - 0x39]; 
0x00094aff: push eax; pop es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009168c: push eax; pop es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00166e54: push eax; pop es; std; jmp eax; 
0x0007f65f: push eax; pop esi; pop edi; pop ebp; ret; 
0x00192433: push eax; push cs; adc al, 0x41; ret; 
0x0018d45b: push eax; push cs; adc al, 0x43; ret; 
0x00185be2: push eax; push cs; add al, 0xc6; ret; 
0x00094da3: push eax; push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000918e0: push eax; push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ce09b: push eax; push eax; xor eax, eax; pop esi; ret; 
0x00094923: push eax; push esp; or dword ptr [eax], eax; add ecx, 0xc605d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000e5026: push eax; push esp; xor eax, eax; pop ebx; ret; 
0x001853f7: push eax; ret 0xfff1; 
0x0006ba1c: push eax; ret 0xffff; 
0x00129926: push eax; ret; 
0x000ad91e: push eax; rol byte ptr [eax - 0x78f0f606], 1; ret; 
0x0004b2a1: push eax; rol byte ptr [ebx - 0x68f0f606], 1; ret 0xe083; 
0x00168b8b: push eax; salc; add byte ptr [eax], al; xchg eax, esp; fldz; call dword ptr [eax]; 
0x00165fe8: push eax; sar ah, 1; inc dword ptr [eax - 0x4f000330]; sar ah, 1; jmp eax; 
0x000ca08a: push eax; sbb al, 0x5f; mov dword ptr [eax + 0x20], edx; pop ebp; ret; 
0x00056a63: push eax; sbb al, 0x89; ret 0x478b; 
0x0016700c: push eax; sbb bh, ch; jmp eax; 
0x000729ff: push eax; sbb byte ptr [ebx + 0x374fff8], al; and dword ptr [esi], 0xffffffef; add esp, 0x18; pop esi; ret; 
0x00072a5f: push eax; sbb byte ptr [ebx - 0x2b8a0008], al; add esp, 0x18; pop esi; ret; 
0x0016cf13: push eax; scasb al, byte ptr es:[edi]; add al, byte ptr [eax]; mov ah, 0x9b; stc; jmp dword ptr [eax]; 
0x00167360: push eax; std; call dword ptr [eax]; 
0x001677a1: push eax; std; jmp dword ptr [eax]; 
0x00166b78: push eax; sti; cld; call dword ptr [eax]; 
0x0002bd04: push eax; sti; jmp dword ptr [esi + 0x39]; 
0x000e5917: push eax; sub al, 0xf6; ret 0x7420; 
0x0011c9e2: push eax; sub byte ptr [ecx - 0x74dbdbac], cl; push eax; or byte ptr [ecx - 0x76fbdbb4], cl; add al, 0x24; call dword ptr [edx + 0xc]; 
0x000f06a6: push eax; sub dword ptr [ebx], ecx; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0018a8d0: push eax; xchg dword ptr [edx], eax; add dword ptr [ebx], 0x71; or cl, byte ptr [esi]; add al, 0xc7; ret; 
0x000e5e8b: push eax; xor al, 0x75; fild dword ptr [ecx + 8]; xor byte ptr [ecx], 0xc0; pop ebx; ret; 
0x0015a6af: push eax; xor al, 0xf3; call dword ptr [eax]; 
0x0015a69c: push eax; xor al, 0xf3; push dword ptr [eax + 0x34]; call dword ptr [eax - 0x4f000ccc]; xor al, 0xf3; call eax; 
0x00169acb: push eax; xor byte ptr [ecx], al; add byte ptr [ecx + eax*8 - 0x10], al; call dword ptr [eax]; 
0x0015a667: push eax; xor dh, bl; inc dword ptr [eax]; xor esi, ebx; call dword ptr [eax]; 
0x00169ae4: push eax; xor dword ptr [ecx], eax; add ah, ah; ret; 
0x000ce09c: push eax; xor eax, eax; pop esi; ret; 
0x00167374: push eax; xor edi, ebp; jmp eax; 
0x000c8107: push ebp; aam 0x8b; adc dh, dh; ret 0xf01; 
0x00033e30: push ebp; add al, 0x8b; insb byte ptr es:[edi], dx; and al, 0x10; add esp, 0x14; ret; 
0x00194c89: push ebp; add al, byte ptr [eax]; xlatb; sub esi, edi; call dword ptr [eax]; 
0x00174bd1: push ebp; add byte ptr [eax], al; fsubr qword ptr [edi - 0x13]; call dword ptr [eax]; 
0x00035cd5: push ebp; add byte ptr [ebp - 0x9ea8a40], al; ret 0x7501; 
0x0003c450: push ebp; add byte ptr [ecx + 0x10fcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0009c193: push ebp; add byte ptr [ecx + 0x1ecc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000394b0: push ebp; add byte ptr [ecx + 0x1fcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000a18dc: push ebp; add byte ptr [ecx + 0xfcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0006412b: push ebp; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x4589; 
0x000cf63b: push ebp; add dh, dh; inc esp; ret 0x804; 
0x00184725: push ebp; add dword ptr [eax], eax; clc; adc dl, dh; jmp dword ptr [eax]; 
0x0016a065: push ebp; add dword ptr [eax], eax; movsb byte ptr es:[edi], byte ptr [esi]; dec edi; int1; call eax; 
0x0008b887: push ebp; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; lcall ptr [edi + 0x5b]; ret; 
0x0017302c: push ebp; add ebp, esp; call dword ptr [eax]; 
0x001962f6: push ebp; add ecx, dword ptr [edx]; push cs; adc al, 0x43; ret; 
0x000c6beb: push ebp; and ch, byte ptr [eax + 0x33850f01]; add al, byte ptr [eax]; add dh, dh; ret 0xf01; 
0x001664db: push ebp; frndint; push dword ptr [eax - 0x1f00032a]; salc; cld; call dword ptr [eax]; 
0x0017b6b8: push ebp; hlt; out dx, eax; call dword ptr [eax]; 
0x001959e4: push ebp; idiv bh; sbb al, 0xd; adc byte ptr [ebp - 0xa], cl; jmp dword ptr [edx]; 
0x00195a44: push ebp; idiv bh; sbb al, 0xd; mov dword ptr [ebp - 0xa], ecx; jmp dword ptr [edx]; 
0x0001a668: push ebp; in al, 0x89; adc al, 0x24; call eax; 
0x00174a7d: push ebp; in eax, dx; call dword ptr [eax]; 
0x00174ec6: push ebp; in eax, dx; jmp dword ptr [edx]; 
0x00165dac: push ebp; into; cld; push edx; int 0xfc; call dword ptr [edx]; 
0x000a5447: push ebp; mov ah, 0x83; ret 0x3901; 
0x00103b1a: push ebp; mov ah, 0x83; ret 0x3b10; 
0x000c88db: push ebp; mov ah, 0x83; ret 0x8901; 
0x00120c70: push ebp; mov ah, 1; ret 0xd639; 
0x00175a8d: push ebp; mov bh, 0xee; jmp dword ptr [edx]; 
0x00042a66: push ebp; mov eax, 0x2b9; add byte ptr [ecx - 0x4a75b], cl; jmp dword ptr [ebp - 0x75]; 
0x00098d2d: push ebp; mov esp, 0x4245489; mov eax, dword ptr [eax + 8]; mov dword ptr [esp], eax; call edi; 
0x00098cbe: push ebp; mov esp, 0x830002c6; ret 0x8901; 
0x000a5162: push ebp; mov esp, 0x83bc4d8b; rol byte ptr [ecx], 0x83; ret 0x3901; 
0x0005670f: push ebp; movsb byte ptr es:[edi], byte ptr [esi]; mov dword ptr [esp], edx; call eax; 
0x000428b7: push ebp; nop; mov dword ptr [esp], edx; call eax; 
0x000dda58: push ebp; or al, 0; mov eax, dword ptr [ecx - 0xf8]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x000ddacb: push ebp; or al, 0; xchg edi, ebx; mov eax, 0x13e; call dword ptr gs:[0x10]; 
0x00129218: push ebp; or al, 0x81; ret 0x94; 
0x0004260d: push ebp; or al, 0x89; xor al, 0x24; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x000f7a71: push ebp; or al, 0x8b; inc ecx; or al, 0x39; ret 0x1474; 
0x000f7a85: push ebp; or al, 0x8b; inc ecx; or al, 0x39; ret 0xf275; 
0x00025fad: push ebp; or al, 0xe8; mov edi, 0x8100103d; ret; 
0x000264bc: push ebp; or byte ptr [ebp - 0x5cf000ba], cl; ret 0x8a72; 
0x001191c9: push ebp; or byte ptr [ebp - 0xc37b], cl; jmp dword ptr [esi - 0x39]; 
0x000ebc4b: push ebp; or byte ptr [ecx + 0x4489c84d], cl; and al, 4; mov dword ptr [esp], edx; call dword ptr [ebp + 0x10]; 
0x00190ad0: push ebp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0009486f: push ebp; or dword ptr [eax], eax; add ecx, 0xc6092; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00094845: push ebp; or dword ptr [eax], eax; add ecx, 0xc60bc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009482c: push ebp; or dword ptr [eax], eax; add ecx, 0xc60d5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009480b: push ebp; or dword ptr [eax], eax; add ecx, 0xc60f6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000947e7: push ebp; or dword ptr [eax], eax; add ecx, 0xc611a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000947c9: push ebp; or dword ptr [eax], eax; add ecx, 0xc6138; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00193fa3: push ebp; push cs; add al, 0xc6; ret; 
0x0006d911: push ebp; push esp; mov dword ptr [esp + 0x48], edx; mov dword ptr [esp], edx; call dword ptr [edx + 0x10]; 
0x0004e38f: push ebp; pushfd; mov dword ptr [esp], edx; call eax; 
0x0011aa92: push ebp; ret 0x850f; 
0x00082079: push ebp; rol byte ptr [ecx], 1; ret 0x1403; 
0x001941e0: push ebp; sbb dh, bh; call dword ptr [eax]; 
0x000e8bf1: push ebp; stc; jmp dword ptr [esi - 0x39]; 
0x0016e061: push ebp; sti; jmp dword ptr [eax + 0x16]; 
0x0017981f: push ebp; xchg byte ptr [edx], al; bound ecx, qword ptr [edx]; push cs; add al, 0xc6; ret; 
0x00190d1f: push ebp; xchg byte ptr [edx], al; jp 0x190d2e; push cs; add al, 0xc6; ret; 
0x00191b63: push ebp; xchg byte ptr [edx], al; outsd dx, dword ptr [esi]; push cs; add al, 0xc6; ret; 
0x0018f00f: push ebp; xchg byte ptr [edx], al; push cs; add al, 0xc6; ret; 
0x00198d83: push ebp; xchg byte ptr [edx], al; push edx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0018c718: push ebp; xchg dword ptr [edx], eax; add dword ptr [ebx], 0x6c; or cl, byte ptr [esi]; add al, 0xc7; ret; 
0x001930e3: push ebp; xchg dword ptr [edx], eax; push 0xa; push cs; add al, 0xc7; ret; 
0x00091531: push ebp; xchg eax, ebx; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00003d96: push ebp; xchg eax, ebx; push ebx; inc eax; or byte ptr fs:[ebx + 0x4e], ch; ret 0x6bba; 
0x001660ac: push ebx; aam 0xfc; inc dword ptr [ebx - 0x4c00032c]; aam 0xfc; jmp ebx; 
0x001945d5: push ebx; add al, byte ptr [eax]; test al, 0xa7; stc; call dword ptr [ebx]; 
0x001745b9: push ebx; add byte ptr [eax], al; mov ah, 0xd7; in al, dx; jmp dword ptr [edx]; 
0x00174aa9: push ebx; add byte ptr [eax], al; push esp; push ebp; in eax, dx; call dword ptr [eax]; 
0x00187f71: push ebx; add cl, byte ptr [edx]; ret; 
0x000def01: push ebx; add dword ptr [eax], eax; add byte ptr [ebp - 0x76b88a13], al; xchg edi, ebx; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x000e23b0: push ebx; add dword ptr [eax], eax; add byte ptr [ebx - 0xab7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000e3530: push ebx; add dword ptr [eax], eax; add byte ptr [ebx - 0xbb7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000d96d1: push ebx; add dword ptr [eax], eax; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x7d]; 
0x0018453d: push ebx; add dword ptr [eax], eax; cmp bh, 0xf1; call edi; 
0x00195fb9: push ebx; add dword ptr [edx], ecx; ret; 
0x0004bc30: push ebx; add esp, 0x18; mov eax, edx; pop ebx; ret; 
0x00001fab: push ebx; cmp byte ptr [edi - 0x19ade7f3], dl; ret; 
0x00166350: push ebx; frndint; call dword ptr [ebx - 0x2c000327]; frndint; call dword ptr [ebx]; 
0x001892cd: push ebx; hlt; jmp dword ptr [esi + 1]; 
0x00003d98: push ebx; inc eax; or byte ptr fs:[ebx + 0x4e], ch; ret 0x6bba; 
0x00183abd: push ebx; int1; call dword ptr [eax]; 
0x0016aa39: push ebx; jmp dword ptr [eax]; 
0x00158844: push ebx; jno 0x158843; out 0x95, eax; push es; cld; ret; 
0x0003f9b1: push ebx; lea edx, dword ptr [eax + 0x6c]; lea ecx, dword ptr [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0003f84f: push ebx; lea edx, dword ptr [eax + 0x6c]; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00176bdd: push ebx; leave; out dx, al; jmp dword ptr [edx]; 
0x0001b429: push ebx; mov eax, 0x458b0010; pushfd; mov dword ptr [esp], esi; call eax; 
0x000e7a98: push ebx; mov edx, 0xffffffff; mov edi, edx; xchg edi, ebx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000e7b58: push ebx; mov edx, 0xffffffff; mov edi, edx; xchg edi, ebx; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000ef790: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x000dece0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x13; call dword ptr gs:[0x10]; 
0x000df530: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x000eff0a: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000e6d00: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000e0a70: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000e6ac0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x000eea10: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x000ef890: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000aac40: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000ef230: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x000eb1a0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x000ef520: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000ef560: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000eb1ea: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000c5430: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000ef970: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eb2a0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x000eb260: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000ed570: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x000ed600: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x000ed450: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000debea: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 3; call dword ptr gs:[0x10]; 
0x000dec6a: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 4; call dword ptr gs:[0x10]; 
0x000de74a: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 5; call dword ptr gs:[0x10]; 
0x000b7cfa: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 7; call dword ptr gs:[0x10]; 
0x000eff32: push ebx; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000eb212: push ebx; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000dec12: push ebx; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 3; call dword ptr gs:[0x10]; 
0x000dec92: push ebx; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 4; call dword ptr gs:[0x10]; 
0x000de772: push ebx; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 5; call dword ptr gs:[0x10]; 
0x000b7d22: push ebx; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 7; call dword ptr gs:[0x10]; 
0x0008de8b: push ebx; movq qword ptr [edi + 0x30], mm7; pop edi; pop esi; pop ebx; ret; 
0x00172c47: push ebx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x000949b3: push ebx; or dword ptr [eax], eax; add ecx, 0xc5fce; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009498e: push ebx; or dword ptr [eax], eax; add ecx, 0xc5ff3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000edc28: push ebx; or eax, dword ptr [eax]; mov eax, dword ptr [ecx - 0xf8]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0000c6f9: push ebx; or eax, dword ptr [eax]; mov edx, 0x12000000; add byte ptr [eax + eax], cl; ret 0x59; 
0x00183596: push ebx; push cs; add al, 0xc6; ret; 
0x001830bb: push ebx; push cs; add bh, al; inc ecx; adc eax, dword ptr [ecx]; ret; 
0x0002ee5c: push ebx; ret; 
0x00165e47: push ebx; sar esp, 1; jmp dword ptr [ebx]; 
0x001660a3: push ebx; sar esp, cl; jmp dword ptr [ebx]; 
0x00158caf: push ebx; sbb eax, edx; cdq; iretd; dec ebx; ret 0xde9e; 
0x001677a9: push ebx; std; inc dword ptr [eax + 0x54]; std; call eax; 
0x001677a5: push ebx; std; push dword ptr [eax + 0x40fffd53]; push esp; std; call eax; 
0x00170993: push ebx; xchg byte ptr [edx], al; add al, byte ptr [edx + 0xa]; push cs; add al, 0xc6; ret; 
0x0017c863: push ebx; xchg byte ptr [edx], al; add bl, byte ptr [ebx + 0xa]; push cs; add al, 0xc6; ret; 
0x001907db: push ebx; xchg byte ptr [edx], al; add cl, byte ptr [esi + 0xe]; add al, 0xc6; ret; 
0x0019b19f: push ebx; xchg byte ptr [edx], al; add dl, byte ptr [ebp + 0xe]; add al, 0xc6; ret; 
0x001741d3: push ebx; xchg byte ptr [edx], al; add dl, byte ptr [edx + 0xa]; push cs; add al, 0xc6; ret; 
0x00171fe7: push ebx; xchg byte ptr [edx], al; imul ecx, dword ptr [edx], 0xe; add al, 0xc6; ret; 
0x0018df8b: push ebx; xchg byte ptr [edx], al; jno 0x18df9e; add al, 0xc6; ret; 
0x00175213: push ebx; xchg byte ptr [edx], al; jnp 0x175226; add al, 0xc6; ret; 
0x001734bb: push ebx; xchg byte ptr [edx], al; jo 0x1734ca; push cs; add al, 0xc6; ret; 
0x00178ebf: push ebx; xchg byte ptr [edx], al; jo 0x178ed2; add al, 0xc6; ret; 
0x00179c6f: push ebx; xchg byte ptr [edx], al; jp 0x179c7e; push cs; add al, 0xc6; ret; 
0x0017ad2b: push ebx; xchg byte ptr [edx], al; jp 0x17ad3a; push cs; add al, 0xc6; ret; 
0x0019aa1f: push ebx; xchg byte ptr [edx], al; jp 0x19aa2e; push cs; add al, 0xc6; ret; 
0x0019aa47: push ebx; xchg byte ptr [edx], al; jp 0x19aa56; push cs; add al, 0xc6; ret; 
0x00171f9f: push ebx; xchg byte ptr [edx], al; or cl, byte ptr [0xffffc604]; ret; 
0x001715bb: push ebx; xchg byte ptr [edx], al; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0017427b: push ebx; xchg byte ptr [edx], al; or cl, byte ptr gs:[esi]; add al, 0xc6; ret; 
0x0017ab87: push ebx; xchg byte ptr [edx], al; outsd dx, dword ptr [esi]; push cs; add al, 0xc6; ret; 
0x0019816b: push ebx; xchg byte ptr [edx], al; pop ebp; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00185cb3: push ebx; xchg byte ptr [edx], al; pop ecx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00171c4b: push ebx; xchg byte ptr [edx], al; pop esi; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00174223: push ebx; xchg byte ptr [edx], al; pop esp; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00183583: push ebx; xchg byte ptr [edx], al; popal; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00198c43: push ebx; xchg byte ptr [edx], al; push 0xc6040e0a; ret; 
0x0017c5ef: push ebx; xchg byte ptr [edx], al; pushal; push cs; add al, 0xc6; ret; 
0x0018cc27: push ebx; xchg dword ptr [edx], eax; or cl, byte ptr gs:[esi]; add al, 0xc7; ret; 
0x00196b06: push ebx; xchg dword ptr [edx], eax; push 0xc6c7040e; ret; 
0x00166337: push ebx; xlatb; cld; jmp dword ptr [ebx]; 
0x000ff0c9: push ebx; xlatb; idiv edi; add esp, 0x18; pop ebx; ret; 
0x0003f894: push ebx; xor edx, edx; lea ecx, dword ptr [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000f7a52: push ecx; adc al, 0x39; ret 0xa7d; 
0x000bdaef: push ecx; adc al, 0x89; ret 0x76e9; 
0x00087653: push ecx; add al, 0x5b; ret; 
0x000c7361: push ecx; add al, 0x85; ror byte ptr [ecx - 0x77f04fab], cl; ret; 
0x0016beed: push ecx; add al, byte ptr [eax]; adc al, 0x1e; clc; jmp eax; 
0x000bb20e: push ecx; add al, byte ptr [ebx - 0x377cfe3f]; add ch, bl; ret; 
0x00183fe8: push ecx; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00186545: push ecx; add dword ptr [edx], ecx; ret; 
0x00184d6b: push ecx; add eax, 0x59000000; push cs; or byte ptr [ebx + 0x40e4902], al; ret; 
0x001327de: push ecx; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c5dba: push ecx; add esp, 0x28; pop esi; pop edi; pop ebp; ret; 
0x00184541: push ecx; call edi; 
0x0013a351: push ecx; iretd; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00002832: push ecx; mov edi, 0xa9011612; ret; 
0x000dde2d: push ecx; or al, 0; mov edx, dword ptr [esp + 0xc]; xchg ebx, edx; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ddead: push ecx; or al, 0; mov edx, dword ptr [esp + 0xc]; xchg ebx, edx; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000dde6d: push ecx; or al, 0; mov edx, dword ptr [esp + 0xc]; xchg ebx, edx; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x0004acac: push ecx; or byte ptr [ebx - 0x7c9fdb84], cl; ret 0x850f; 
0x00189637: push ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00196a2f: push ecx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x001792a1: push ecx; out dx, eax; jmp dword ptr [ebx]; 
0x000876b5: push ecx; pop es; pop ebx; ret; 
0x000fac8b: push ecx; ret 0xfff1; 
0x000b6ca5: push ecx; ret; 
0x00042467: push ecx; sbb al, 0x89; ret 0x408d; 
0x00195af7: push ecx; xchg byte ptr [edx], al; add cl, byte ptr [esi + 0xa]; push cs; add al, 0xc6; ret; 
0x00195b43: push ecx; xchg byte ptr [edx], al; jo 0x195b56; add al, 0xc6; ret; 
0x001924cf: push ecx; xchg byte ptr [edx], al; outsd dx, dword ptr [esi]; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00188b1b: push ecx; xchg byte ptr [edx], al; push 0xe; add al, 0xc6; ret; 
0x0008daf2: push edi; adc al, 0x5f; pop esi; pop ebx; ret; 
0x000e3e66: push edi; adc al, 1; ret 0x2c6; 
0x0008f253: push edi; adc byte ptr [eax + 0x478d184f], cl; sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x0008db73: push edi; adc byte ptr [eax + 0x5e5f184f], cl; pop ebx; ret; 
0x0008dc73: push edi; adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x0008f230: push edi; adc byte ptr [ebp + 0x5e5f1847], cl; pop ebx; ret; 
0x0008f340: push edi; adc byte ptr [ebp + 0x5e5f2047], cl; pop ebx; ret; 
0x0008f2c3: push edi; adc byte ptr [ecx + 0x478d184f], cl; sbb al, 0x5f; pop esi; pop ebx; ret; 
0x0008dbb3: push edi; adc byte ptr [ecx + 0x5e5f174f], cl; pop ebx; ret; 
0x0008dbd3: push edi; adc byte ptr [ecx + 0x5e5f184f], cl; pop ebx; ret; 
0x0008db50: push edi; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008f274: push edi; adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x0008db94: push edi; adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008d938: push edi; add al, 0x5f; pop esi; pop ebx; ret; 
0x001127b9: push edi; add al, 0x89; cmp al, 0x24; mov dword ptr [esp + 0x2c], eax; call dword ptr [edx + 0x10]; 
0x0011412c: push edi; add al, 0x89; push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x0011415c: push edi; add al, 0x89; push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x0016bfed: push edi; add al, byte ptr [eax]; adc al, 0x36; clc; jmp dword ptr [eax + 0x57]; 
0x0016c005: push edi; add al, byte ptr [eax]; adc al, 0x37; clc; jmp esp; 
0x001949a5: push edi; add al, byte ptr [eax]; cmp byte ptr [edi + esi*8], ah; jmp dword ptr [ebx]; 
0x00194981: push edi; add al, byte ptr [eax]; lodsb al, byte ptr [esi]; and esi, edi; jmp dword ptr [edi]; 
0x001949f5: push edi; add al, byte ptr [eax]; pop eax; movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [ebx]; 
0x0016c00d: push edi; add al, byte ptr [eax]; xchg eax, esp; aaa; clc; call dword ptr [eax]; 
0x0008d91a: push edi; add bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x00174969: push edi; add byte ptr [eax], al; in al, 0x30; in eax, dx; call dword ptr [ebx + 1]; 
0x0008efba: push edi; add cl, byte ptr [ebp + 0x5e5f0347]; pop ebx; ret; 
0x0016a095: push edi; add dword ptr [eax], eax; aam 0x54; int1; jmp esp; 
0x0000d0ac: push edi; add dword ptr [eax], eax; add byte ptr [edx], ah; add byte ptr [eax + eax], cl; ret; 
0x0016fda4: push edi; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0008d958: push edi; add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x0008f028: push edi; add ecx, dword ptr [ebp + 0x5e5f0747]; pop ebx; ret; 
0x00176628: push edi; add edi, ebp; call dword ptr [eax]; 
0x000036a3: push edi; call dword ptr [esi + 0x6f]; 
0x0016c159: push edi; clc; jmp dword ptr [eax]; 
0x0018b3ad: push edi; cmc; call dword ptr [ebx]; 
0x0007e761: push edi; cmp dword ptr [esi + esi + 0x10000], 0; add byte ptr [esi + eax - 0x73], dh; or dword ptr [ecx + edx*2 - 7], 0xffffffff; pop ebx; ret; 
0x0007e281: push edi; cmp dword ptr [esi + esi + 0x10000], 0; add byte ptr [esi + eax - 0x73], dh; sbb dword ptr [ebp + ecx - 7], -1; pop ebx; ret; 
0x0007e1e1: push edi; cmp dword ptr [esi + esi + 0x10000], 0; add byte ptr [esi + eax - 0x73], dh; sub dword ptr [edi + edx*4 - 7], -1; pop ebx; ret; 
0x001780d9: push edi; fdivr st(2); jmp dword ptr [edx]; 
0x0018889e: push edi; hlt; jmp dword ptr [edx]; 
0x001893bd: push edi; hlt; jmp esi; 
0x0008dcb1: push edi; lcall ptr [edi + 0x5e]; pop ebx; ret; 
0x00168e88: push edi; loope 0x168e7a; jmp dword ptr [eax]; 
0x0008dc30: push edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x0008f05c: push edi; or byte ptr [ebp + 0x5e5f0947], cl; pop ebx; ret; 
0x0008f07e: push edi; or byte ptr [ebp + 0x5e5f0a47], cl; pop ebx; ret; 
0x0008f0bc: push edi; or byte ptr [ebp + 0x5e5f0c47], cl; pop ebx; ret; 
0x0008d97c: push edi; or byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00187eb0: push edi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0019b971: push edi; or cl, byte ptr [esi]; or al, 0x43; ret; 
0x0001fbac: push edi; or dh, dh; ret 0x7501; 
0x0008f2e0: push edi; or eax, 0x5f1d478d; pop esi; pop ebx; ret; 
0x00179811: push edi; out dx, eax; call dword ptr [ecx]; 
0x0008d9bc: push edi; pop es; pop edi; pop esi; pop ebx; ret; 
0x0019781b: push edi; push cs; adc al, 0x43; ret; 
0x001733ca: push edi; push cs; add al, 0xc6; ret; 
0x0017fff5: push edi; push cs; or byte ptr [ebx + 0x40e4902], al; ret; 
0x0008dc10: push edi; push cs; pop edi; pop esi; pop ebx; ret; 
0x0018583a: push edi; ret; 
0x000e5f9f: push edi; ror byte ptr [ebx], 1; add byte ptr [edi + 0x36b8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ce789: push edi; sbb al, byte ptr [ebx + 0x5f5e20c4]; pop ebp; ret; 
0x0007dcb1: push edi; sbb dword ptr [esi + esi], 0x10; add byte ptr [esi + eax - 0x73], dh; cmp dword ptr [edi + edx*8 - 8], -1; pop ebx; ret; 
0x0016e081: push edi; sti; jmp esp; 
0x000ac90d: push edi; str word ptr [edi]; mov dh, 0xc0; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0xf66d4]; jmp ecx; 
0x0018793b: push edi; xchg dword ptr [edx], eax; insb byte ptr es:[edi], dx; or cl, byte ptr [esi]; add al, 0xc7; ret; 
0x000021cd: push edi; xor ebp, esp; adc dword ptr [si], eax; ret; 
0x0011b2ca: push edx; adc byte ptr [ebx + 0x4508b06], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x001480d8: push edx; adc byte ptr [ecx], ch; ret 0xe183; 
0x00130866: push edx; adc byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x000828f3: push edx; add al, 0x89; xor byte ptr [ebp + 0x75490440], cl; pop esi; ret; 
0x0008753a: push edx; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00082d0f: push edx; add dword ptr [eax + eax*8 - 0x2dce0c8b], eax; mov eax, edx; ret; 
0x00169f85: push edx; add dword ptr [eax], eax; aam 0x41; int1; call dword ptr [eax + 0x52]; 
0x0007350c: push edx; add dword ptr [eax], eax; add bl, dh; ret; 
0x00169f9d: push edx; add dword ptr [eax], eax; and al, 0x44; int1; jmp esp; 
0x00184431: push edx; add dword ptr [eax], eax; fdivr st(5), st(0); int1; call dword ptr [ebx]; 
0x001844fd: push edx; add dword ptr [eax], eax; sar dl, 1; int1; jmp esi; 
0x0017c55d: push edx; add dword ptr [edx], ecx; push cs; adc al, 0x46; ret; 
0x00179f85: push edx; and bh, ch; jmp dword ptr [edx]; 
0x0013087b: push edx; and byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x00186e69: push edx; call dword ptr [eax]; 
0x00187111: push edx; call ecx; 
0x00158bea: push edx; cdq; inc esp; push ds; mov ah, 0x13; ret; 
0x0018b289: push edx; cmc; jmp esp; 
0x00167320: push edx; cmp bh, ch; inc edx; cmp bh, ch; call dword ptr [edx]; 
0x00167628: push edx; dec edi; std; jmp edx; 
0x00130c0b: push edx; fisub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x001309cb: push edx; fisub word ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00130c9b: push edx; fldenv dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00130a6b: push edx; frstor dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00130d3b: push edx; fsub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00165daf: push edx; int 0xfc; call dword ptr [edx]; 
0x001870ed: push edx; jmp dword ptr [ebx]; 
0x00130c29: push edx; ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x0011e665: push edx; mov eax, edx; mov esi, dword ptr [esp + 0x34]; mov edi, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x000cfa79: push edx; or byte ptr [ebp + 0x348d7604], cl; ret 0x558b; 
0x000c6b28: push edx; or byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x0016ffc4: push edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00190839: push edx; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x001741d7: push edx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0017b409: push edx; outsb dx, byte ptr [esi]; out dx, eax; jmp dword ptr [edx]; 
0x0006a0bc: push edx; pop eax; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x00069f9c: push edx; pop eax; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x00189dc3: push edx; push cs; add al, 0xc6; ret; 
0x001310a8: push edx; ret 0xc2bb; 
0x00131008: push edx; ret; 
0x0006bfbe: push edx; sbb byte ptr [ebx + 0x374fff8], al; and dword ptr [esi], 0xffffffef; add esp, 0x18; pop esi; ret; 
0x001310cb: push edx; shl byte ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0013117b: push edx; shl dword ptr [esi + 0xf], 1; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0013102b: push edx; shl dword ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00177515: push edx; shr esi, 1; jmp dword ptr [edx]; 
0x00027221: push edx; sub edx, dword ptr [eax]; add byte ptr [ecx + 0x17bdcfc1], al; add byte ptr [ebx - 0x12f7f], cl; jmp dword ptr [ebp + 3]; 
0x00001a15: push edx; test dword ptr [ebx + 0x59e7c8ee], esi; pop ebx; ret 0x2a63; 
0x00193fa0: push edx; xchg byte ptr [edx], al; push ebp; push cs; add al, 0xc6; ret; 
0x00047cc5: push edx; xor al, 0x85; ror byte ptr [ecx - 0x8b6b], cl; dec dword ptr [edi]; xchg eax, esp; ret 0xd284; 
0x0006ab16: push edx; xor byte ptr [ebx - 0x3fe6fe08], al; add esp, 0x18; not eax; pop ebx; ret; 
0x00130890: push edx; xor byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x0016b21d: push es; add al, byte ptr [eax]; test al, bl; cmc; call dword ptr [eax]; 
0x0001ba64: push es; add bl, ch; ret; 
0x0000583a: push es; add byte ptr [eax + 0x22000001], bl; add byte ptr [eax + eax], cl; ret; 
0x00001589: push es; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret 6; 
0x0019d5a5: push es; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000eb60d: push es; add byte ptr [eax], al; add byte ptr [eax], al; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0010babb: push es; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; xchg ebx, ecx; ret; 
0x000d3b0e: push es; add byte ptr [eax], al; add byte ptr [ecx - 0x2744722a], cl; ret; 
0x000d3ce3: push es; add byte ptr [eax], al; add byte ptr [ecx - 0x2e44722a], cl; ret; 
0x000d3c56: push es; add byte ptr [eax], al; add byte ptr [ecx - 0x3444722a], cl; ret; 
0x000d3bad: push es; add byte ptr [eax], al; add byte ptr [ecx - 0x3a44722a], cl; ret; 
0x000d3a42: push es; add byte ptr [eax], al; add byte ptr [ecx - 0x4044722a], cl; ret; 
0x000d39e1: push es; add byte ptr [eax], al; add byte ptr [ecx - 0x4644722a], cl; ret; 
0x000d3a31: push es; add byte ptr [eax], al; add byte ptr [ecx - 0x5244722a], cl; ret; 
0x000d3934: push es; add byte ptr [eax], al; add byte ptr [ecx - 0x5844722a], cl; ret; 
0x000d3afd: push es; add byte ptr [eax], al; add byte ptr [ecx - 0x5e44722a], cl; ret; 
0x00035a45: push es; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00033f3d: push es; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x0016f819: push es; add byte ptr [eax], al; and al, 0xab; std; call dword ptr [edx]; 
0x0016f851: push es; add byte ptr [eax], al; dec esp; stosd dword ptr es:[edi], eax; std; jmp dword ptr [ebp]; 
0x0014e679: push es; add byte ptr [eax], al; mov esi, 0xc0000006; push es; add byte ptr [eax], al; ret 6; 
0x00130c62: push es; add byte ptr [eax], al; pop ebx; ret; 
0x0008712f: push es; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0008d6ca: push es; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0014e681: push es; add byte ptr [eax], al; ret 6; 
0x00001591: push es; add byte ptr [eax], al; ret; 
0x000176b0: push es; add byte ptr [ebx - 0x1576d], cl; jmp dword ptr [ebp - 0x75]; 
0x001406ca: push es; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x000c5593: push es; add byte ptr [ecx + 0xdda5fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000c554f: push es; add byte ptr [ecx + 0xddaa3c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000c550f: push es; add byte ptr [ecx + 0xddae3c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000c54c7: push es; add byte ptr [ecx + 0xddb2bc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000c548f: push es; add byte ptr [ecx + 0xddb63c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000c5455: push es; add byte ptr [ecx + 0xddb9dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000c5413: push es; add byte ptr [ecx + 0xddbdfc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000c53d3: push es; add byte ptr [ecx + 0xddc1fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0014913b: push es; add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x000038b6: push es; add byte ptr [edx - 0x6a8b6174], al; and dword ptr [ecx], edi; push cs; pop esp; ret; 
0x0007ad7d: push es; add byte ptr [edx], bh; cmp eax, -1; cmove eax, edx; add esp, 0x1c; ret; 
0x0006bde1: push es; add dh, byte ptr [ebp + 0x14]; mov eax, dword ptr [eax + 0xb8]; mov dword ptr [esp], esi; call dword ptr [eax + 0x34]; 
0x00175bc3: push es; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x0011424d: push es; add edx, ecx; mov dword ptr [esp + 4], edx; mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x000650c5: push es; add esp, 0x14; pop ebx; pop esi; ret; 
0x000ca951: push es; add esp, 0x18; pop ebx; ret; 
0x001147c7: push es; add esp, 0x24; mov eax, edx; pop esi; pop edi; ret; 
0x0011e61d: push es; add esp, 0x28; mov eax, 1; pop esi; ret; 
0x0011e930: push es; add esp, 0x28; mov eax, edx; pop esi; ret; 
0x000eeb99: push es; add esp, 0x30; pop ebx; pop edi; ret; 
0x0011b800: push es; add esp, 0x34; mov eax, edx; pop ebx; pop esi; ret; 
0x0014a74a: push es; call edx; 
0x00158849: push es; cld; ret; 
0x0016d559: push es; cli; call dword ptr [eax]; 
0x00167440: push es; cmp al, 0xfd; call dword ptr [esi + 0x3c]; 
0x00167348: push es; cmp edi, ebp; call dword ptr [esi + 0x3b]; 
0x0005debe: push es; fdivp st(7); dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x00173419: push es; in al, dx; jmp dword ptr [edi]; 
0x0017b379: push es; insd dword ptr es:[edi], dx; out dx, eax; jmp dword ptr [edx]; 
0x00165df4: push es; into; cld; jmp dword ptr [esi]; 
0x0007d0e9: push es; lea eax, dword ptr [ebx - 0x1116b4]; pop ebx; ret; 
0x0007c3f9: push es; lea eax, dword ptr [ebx - 0x1139b4]; pop ebx; ret; 
0x0007e499: push es; lea eax, dword ptr [ebx - 0x119344]; pop ebx; ret; 
0x0007e3a9: push es; lea eax, dword ptr [ebx - 0x11abb4]; pop ebx; ret; 
0x0007d199: push es; lea eax, dword ptr [ebx - 0x11d724]; pop ebx; ret; 
0x0007c8d9: push es; lea eax, dword ptr [ebx - 0x11ef74]; pop ebx; ret; 
0x00097d8b: push es; lea eax, dword ptr [ebx - 0x59314]; pop ebx; ret; 
0x0009812b: push es; lea eax, dword ptr [ebx - 0x595d4]; pop ebx; ret; 
0x00097d0b: push es; lea eax, dword ptr [ebx - 0x597b4]; pop ebx; ret; 
0x0007d08b: push es; lea eax, dword ptr [ebx - 0x5a4a4]; pop ebx; ret; 
0x0007d1ed: push es; lea eax, dword ptr [ebx - 0x5bb04]; pop ebx; ret; 
0x0007c5fd: push es; lea eax, dword ptr [ebx - 0x5bee4]; pop ebx; ret; 
0x0007cf8d: push es; lea eax, dword ptr [ebx - 0x5c204]; pop ebx; ret; 
0x0007e1ed: push es; lea eax, dword ptr [ebx - 0x66894]; pop ebx; ret; 
0x0007dfed: push es; lea eax, dword ptr [ebx - 0x68ee4]; pop ebx; ret; 
0x0010158d: push es; lea eax, dword ptr [ebx - 0x68ef4]; pop ebx; ret; 
0x0007e15d: push es; lea eax, dword ptr [ebx - 0x69ed4]; pop ebx; ret; 
0x001015dd: push es; lea eax, dword ptr [ebx - 0x69ee4]; pop ebx; ret; 
0x0007e76d: push es; lea eax, dword ptr [ebx - 0x6aeb4]; pop ebx; ret; 
0x0010153d: push es; lea eax, dword ptr [ebx - 0x6aec4]; pop ebx; ret; 
0x0007e28d: push es; lea eax, dword ptr [ebx - 0x6f2a4]; pop ebx; ret; 
0x0007e0ad: push es; lea eax, dword ptr [ebx - 0x6f824]; pop ebx; ret; 
0x0010162d: push es; lea eax, dword ptr [ebx - 0x6f834]; pop ebx; ret; 
0x0009848d: push es; lea eax, dword ptr [ebx - 0x70844]; pop ebx; ret; 
0x0007d79b: push es; lea eax, dword ptr [ebx - 0x70974]; pop ebx; ret; 
0x0007d3eb: push es; lea eax, dword ptr [ebx - 0x70ad4]; pop ebx; ret; 
0x0007c9ab: push es; lea eax, dword ptr [ebx - 0x70c44]; pop ebx; ret; 
0x0007e6ad: push es; lea eax, dword ptr [ebx - 0x711c4]; pop ebx; ret; 
0x0007e5dd: push es; lea eax, dword ptr [ebx - 0x711f4]; pop ebx; ret; 
0x0007e62d: push es; lea eax, dword ptr [ebx - 0x716c4]; pop ebx; ret; 
0x0007e58d: push es; lea eax, dword ptr [ebx - 0x716f4]; pop ebx; ret; 
0x0007dcbd: push es; lea eax, dword ptr [ebx - 0x72884]; pop ebx; ret; 
0x0007d13d: push es; lea eax, dword ptr [ebx - 0x72bc4]; pop ebx; ret; 
0x0007c80d: push es; lea eax, dword ptr [ebx - 0x72e54]; pop ebx; ret; 
0x00097e6b: push es; lea eax, dword ptr [ebx - 0xfbd84]; pop ebx; ret; 
0x00097d4b: push es; lea eax, dword ptr [ebx - 0xfcaa4]; pop ebx; ret; 
0x00095899: push es; lea eax, dword ptr [ecx + eax + 0x30]; ret; 
0x0008f101: push es; lea eax, dword ptr [edi + 0xe]; pop edi; pop esi; pop ebx; ret; 
0x000955d9: push es; lea eax, dword ptr [edi + eax + 0x30]; pop edi; ret; 
0x00089b11: push es; lea eax, dword ptr [edx + 0xd]; pop edi; ret; 
0x00089c71: push es; lea eax, dword ptr [edx + 0xd]; ret; 
0x001769d1: push es; leave; out dx, al; jmp dword ptr [edx]; 
0x00091643: push es; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0013d5c8: push es; mov byte ptr [edi], al; pop esi; pop edi; pop ebx; ret; 
0x0014b3c8: push es; mov dword ptr [eax + 8], 0; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00040cec: push es; mov dword ptr [edx], 0; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0007c01c: push es; mov dword ptr [esi + 0x18], edi; mov dword ptr [esp], eax; call edx; 
0x001144ed: push es; mov dword ptr [esp + 8], edi; mov dword ptr [esp], eax; call dword ptr [esi + 8]; 
0x0011496a: push es; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x000eb909: push es; mov dword ptr [esp], eax; call edi; 
0x001103b9: push es; mov eax, 0xffffffff; ret; 
0x0011f404: push es; mov eax, 1; mov dword ptr [edx + 0xc], ecx; pop esi; ret; 
0x000ce0d6: push es; mov eax, dword ptr [eax + 0x10]; mov dword ptr [edx + 0x10], eax; xor eax, eax; pop esi; ret; 
0x0011b43a: push es; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x00112588: push es; mov eax, dword ptr [esi + 8]; mov dword ptr [esp], edi; mov dword ptr [esp + 4], eax; call dword ptr [esi + 0xc]; 
0x00094b64: push es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000916f1: push es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00093f14: push es; mov eax, edi; pop ebx; pop edi; ret; 
0x00085731: push es; mov eax, edi; pop edi; ret; 
0x00085891: push es; mov eax, edx; ret; 
0x001050f9: push es; mov eax, edx; shr eax, 0x18; ret; 
0x00033a7e: push es; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00142b37: push es; mov ecx, dword ptr [ebx + ecx*4 - 0x567f4]; mov eax, dword ptr [ebx + eax*4 - 0x567f4]; sub eax, ecx; pop ebx; ret; 
0x0011b2cd: push es; mov edx, dword ptr [eax + 4]; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x0007e9e5: push es; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; mov ebp, dword ptr [esp + 0x1c]; add esp, 0x20; ret; 
0x00026925: push es; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00091733: push es; movdqu xmmword ptr [eax], xmm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094b96: push es; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091723: push es; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008da53: push es; movdqu xmmword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x00094a96: push es; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091633: push es; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000916e8: push es; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008d963: push es; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0008e39c: push es; movlpd qword ptr [edx + 6], xmm0; lea eax, dword ptr [edx + 0xd]; pop edi; ret; 
0x0008e4fc: push es; movlpd qword ptr [edx + 6], xmm0; lea eax, dword ptr [edx + 0xd]; ret; 
0x00093f0f: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd5c: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x0008cebc: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x00089b08: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; pop edi; ret; 
0x00089c68: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x00085728: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x00085888: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x0014048c: push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x0013ec73: push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0016f6e5: push es; or eax, 0xffeac46e; sbb al, 0xd; test cl, 0xea; jmp dword ptr [edx]; 
0x00171019: push es; or eax, 0xffeb751d; sbb al, 0xd; adc dword ptr [ecx - 0x15], ebp; jmp dword ptr [edx]; 
0x00170fb9: push es; or eax, 0xffeb7585; sbb al, 0xd; fisubr dword ptr [eax - 0x15]; jmp dword ptr [edx]; 
0x00172db9: push es; or eax, 0xffebe67a; sbb al, 0xd; aaa; in eax, 0xeb; jmp dword ptr [edx]; 
0x00173135: push es; or eax, 0xffebe6c9; sbb al, 0xd; aas; out 0xeb, al; jmp dword ptr [edx]; 
0x00173105: push es; or eax, 0xffebe6fd; sbb al, 0xd; pop ecx; out 0xeb, al; jmp dword ptr [edx]; 
0x001730d5: push es; or eax, 0xffebe731; sbb al, 0xd; push esi; out 0xeb, al; jmp dword ptr [edx]; 
0x001730a5: push es; or eax, 0xffebe765; sbb al, 0xd; pop esi; out 0xeb, al; jmp dword ptr [edx]; 
0x00173075: push es; or eax, 0xffebe799; sbb al, 0xd; push eax; out 0xeb, al; jmp dword ptr [edx]; 
0x00173045: push es; or eax, 0xffebe7cd; sbb al, 0xd; push eax; out 0xeb, al; jmp dword ptr [edx]; 
0x00173015: push es; or eax, 0xffebe801; sbb al, 0xd; dec ebx; out 0xeb, al; jmp dword ptr [edx]; 
0x00172fe5: push es; or eax, 0xffebe835; sbb al, 0xd; popal; out 0xeb, al; jmp dword ptr [edx]; 
0x00173dbd: push es; or eax, 0xffec8f29; sbb al, 0xd; push cs; mov esp, gs; jmp dword ptr [edx]; 
0x00173d8d: push es; or eax, 0xffec8f5d; sbb al, 0xd; cld; mov ebp, esp; jmp dword ptr [edx]; 
0x00173d2d: push es; or eax, 0xffec8fc5; sbb al, 0xd; inc eax; mov ebp, esp; jmp dword ptr [edx]; 
0x00173ccd: push es; or eax, 0xffec902d; sbb al, 0xd; push esp; mov ch, ah; jmp dword ptr [edx]; 
0x00174805: push es; or eax, 0xffed0a48; sbb al, 0xd; scasb al, byte ptr es:[edi]; or ebp, ebp; jmp dword ptr [edx]; 
0x001747d5: push es; or eax, 0xffed0a80; sbb al, 0xd; aaa; or ebp, ebp; jmp dword ptr [edx]; 
0x00174775: push es; or eax, 0xffed0af0; sbb al, 0xd; in eax, 0xb6; in al, dx; jmp dword ptr [edx]; 
0x00174ac5: push es; or eax, 0xffed2cf4; sbb al, 0xd; inc eax; sub al, 0xed; jmp dword ptr [edx]; 
0x00174a95: push es; or eax, 0xffed2d28; sbb al, 0xd; dec esp; sub al, 0xed; jmp dword ptr [edx]; 
0x00174eed: push es; or eax, 0xffedccf8; sbb al, 0xd; aad 0x55; in eax, dx; jmp dword ptr [edx]; 
0x001755dd: push es; or eax, 0xffedd594; sbb al, 0xd; push -0x2b; in eax, dx; jmp dword ptr [edx]; 
0x00175521: push es; or eax, 0xffedd5b8; sbb al, 0xd; mov ss, ebp; in eax, dx; jmp dword ptr [edx]; 
0x001752fd: push es; or eax, 0xffedd5b9; sbb al, 0xd; stosb byte ptr es:[edi], al; aad 0xed; jmp dword ptr [edx]; 
0x001754f1: push es; or eax, 0xffedd5f3; sbb al, 0xd; mov ebp, ss; in eax, dx; jmp dword ptr [edx]; 
0x001753a1: push es; or eax, 0xffedd5fa; sbb al, 0xd; rcl ch, 1; in eax, dx; jmp dword ptr [edx]; 
0x0017557d: push es; or eax, 0xffedd607; sbb al, 0xd; dec edx; aad 0xed; jmp dword ptr [edx]; 
0x00175431: push es; or eax, 0xffedd61d; sbb al, 0xd; mov dl, 0xd5; in eax, dx; jmp dword ptr [edx]; 
0x001754c1: push es; or eax, 0xffedd62b; sbb al, 0xd; outsb dx, byte ptr [esi]; aad 0xed; jmp dword ptr [edx]; 
0x00175401: push es; or eax, 0xffedd655; sbb al, 0xd; xchg eax, ecx; aad 0xed; jmp dword ptr [edx]; 
0x00175341: push es; or eax, 0xffedd66d; sbb al, 0xd; test al, 0xd5; in eax, dx; jmp dword ptr [edx]; 
0x00175739: push es; or eax, 0xffee3263; sbb al, 0xd; cmp byte ptr [ecx], dh; out dx, al; jmp dword ptr [edx]; 
0x001756d9: push es; or eax, 0xffee32d3; sbb al, 0xd; mov bl, 0xdc; in eax, dx; jmp dword ptr [edx]; 
0x00175b45: push es; or eax, 0xffeeb81c; sbb al, 0xd; iretd; mov bh, 0xee; jmp dword ptr [edx]; 
0x00175b15: push es; or eax, 0xffeeb854; sbb al, 0xd; dec ebp; mov bh, 0xee; jmp dword ptr [edx]; 
0x00175ab5: push es; or eax, 0xffeeb8bc; sbb al, 0xd; pushal; mov bh, 0xee; jmp dword ptr [edx]; 
0x00175a85: push es; or eax, 0xffeeb8f4; sbb al, 0xd; push ebp; mov bh, 0xee; jmp dword ptr [edx]; 
0x00175d19: push es; or eax, 0xffeebaa8; sbb al, 0xd; jnp 0x175cdd; out dx, al; jmp dword ptr [edx]; 
0x00175da9: push es; or eax, 0xffeebb43; sbb al, 0xd; mov ch, 0xba; out dx, al; jmp dword ptr [edx]; 
0x0017601d: push es; or eax, 0xffeebe0c; sbb al, 0xd; jns 0x175fe4; out dx, al; jmp dword ptr [edx]; 
0x001761cd: push es; or eax, 0xffeebe14; sbb al, 0xd; out 0xbd, eax; out dx, al; jmp dword ptr [edx]; 
0x00175fed: push es; or eax, 0xffeebe44; sbb al, 0xd; xor al, 0xbd; out dx, al; jmp dword ptr [edx]; 
0x0017652d: push es; or eax, 0xffeec22c; sbb al, 0xd; test al, 0xc1; out dx, al; jmp dword ptr [edx]; 
0x001764fd: push es; or eax, 0xffeec264; sbb al, 0xd; sub al, cl; out dx, al; jmp dword ptr [edx]; 
0x001767ed: push es; or eax, 0xffeec7d8; sbb al, 0xd; sub al, 0xc7; out dx, al; jmp dword ptr [edx]; 
0x00176671: push es; or eax, 0xffeec7ef; sbb al, 0xd; pop ds; ret; 
0x001767bd: push es; or eax, 0xffeec810; sbb al, 0xd; mov al, 0xc6; out dx, al; jmp dword ptr [edx]; 
0x00176641: push es; or eax, 0xffeec823; sbb al, 0xd; cmp al, dl; out dx, al; jmp dword ptr [edx]; 
0x0017687d: push es; or eax, 0xffeec93f; sbb al, 0xd; or al, 0xee; jmp dword ptr [edx]; 
0x00176999: push es; or eax, 0xffeec96b; sbb al, 0xd; add cl, cl; out dx, al; jmp dword ptr [edx]; 
0x00176b75: push es; or eax, 0xffeec9b8; sbb al, 0xd; mov ecx, ecx; out dx, al; jmp dword ptr [edx]; 
0x00176d15: push es; or eax, 0xffeecb4e; sbb al, 0xd; and ebx, ecx; out dx, al; jmp dword ptr [edx]; 
0x00176eb5: push es; or eax, 0xffeecb5e; sbb al, 0xd; xor al, 0xcb; out dx, al; jmp dword ptr [edx]; 
0x00176e85: push es; or eax, 0xffeecb99; sbb al, 0xd; sbb al, 0xcb; out dx, al; jmp dword ptr [edx]; 
0x00176dc5: push es; or eax, 0xffeecba8; sbb al, 0xd; add ebx, ecx; out dx, al; jmp dword ptr [edx]; 
0x00176e55: push es; or eax, 0xffeecbd1; sbb al, 0xd; or cl, bl; out dx, al; jmp dword ptr [edx]; 
0x00177215: push es; or eax, 0xffeed033; sbb al, 0xd; mov dh, 0xcf; out dx, al; jmp dword ptr [edx]; 
0x0017756d: push es; or eax, 0xffeed195; sbb al, 0xd; imul edx, ecx, -0x12; jmp dword ptr [edx]; 
0x0017753d: push es; or eax, 0xffeed1d0; sbb al, 0xd; pop ebp; shr esi, 1; jmp dword ptr [edx]; 
0x001773f5: push es; or eax, 0xffeed1e0; sbb al, 0xd; mov dh, 0xd1; out dx, al; jmp dword ptr [edx]; 
0x00177481: push es; or eax, 0xffeed1f2; sbb al, 0xd; adc ecx, -0x12; jmp dword ptr [edx]; 
0x0017750d: push es; or eax, 0xffeed208; sbb al, 0xd; push edx; shr esi, 1; jmp dword ptr [edx]; 
0x00177305: push es; or eax, 0xffeed22e; sbb al, 0xd; add edx, edx; out dx, al; jmp dword ptr [edx]; 
0x00177395: push es; or eax, 0xffeed253; sbb al, 0xd; xchg eax, edx; shr esi, 1; jmp dword ptr [edx]; 
0x001772d5: push es; or eax, 0xffeed266; sbb al, 0xd; pop edi; shr dh, 1; jmp dword ptr [edx]; 
0x0017777d: push es; or eax, 0xffeed26b; sbb al, 0xd; inc ecx; shr dh, cl; jmp dword ptr [edx]; 
0x001776bd: push es; or eax, 0xffeed290; sbb al, 0xd; shr dh, cl; jmp dword ptr [edx]; 
0x001772a5: push es; or eax, 0xffeed29e; sbb al, 0xd; push -0x30; out dx, al; jmp dword ptr [edx]; 
0x0017774d: push es; or eax, 0xffeed2a6; sbb al, 0xd; inc ebp; shr dh, cl; jmp dword ptr [edx]; 
0x0017768d: push es; or eax, 0xffeed2cb; sbb al, 0xd; dec esi; shr dh, cl; jmp dword ptr [edx]; 
0x0017771d: push es; or eax, 0xffeed2de; sbb al, 0xd; and dl, dl; out dx, al; jmp dword ptr [edx]; 
0x0017765d: push es; or eax, 0xffeed303; sbb al, 0xd; inc edx; shr dh, cl; jmp dword ptr [edx]; 
0x0017871d: push es; or eax, 0xffeed736; sbb al, 0xd; or al, 0xd7; out dx, al; jmp dword ptr [edx]; 
0x00177a11: push es; or eax, 0xffeed834; sbb al, 0xd; or bl, al; out dx, al; jmp dword ptr [edx]; 
0x001779e1: push es; or eax, 0xffeed86f; sbb al, 0xd; or al, 0xd8; out dx, al; jmp dword ptr [edx]; 
0x00177acd: push es; or eax, 0xffeed8a5; sbb al, 0xd; jnp 0x177aaf; out dx, al; jmp dword ptr [edx]; 
0x001779b1: push es; or eax, 0xffeed8a7; sbb al, 0xd; out 0xd7, al; out dx, al; jmp dword ptr [edx]; 
0x00177a9d: push es; or eax, 0xffeed8e0; sbb al, 0xd; outsb dx, byte ptr [esi]; fsubr st(6); jmp dword ptr [edx]; 
0x00177c49: push es; or eax, 0xffeeda82; sbb al, 0xd; sbb ebx, edx; out dx, al; jmp dword ptr [edx]; 
0x00177b5d: push es; or eax, 0xffeedab7; sbb al, 0xd; mov bl, cl; out dx, al; jmp dword ptr [edx]; 
0x00177c19: push es; or eax, 0xffeedaba; sbb al, 0xd; cli; fldz; jmp dword ptr [edx]; 
0x00177d09: push es; or eax, 0xffeedabe; sbb al, 0xd; push -0x26; out dx, al; jmp dword ptr [edx]; 
0x00177b2d: push es; or eax, 0xffeedaef; sbb al, 0xd; dec eax; fsubr st(6); jmp dword ptr [edx]; 
0x00177cd9: push es; or eax, 0xffeedaf6; sbb al, 0xd; jecxz 0x177cbc; out dx, al; jmp dword ptr [edx]; 
0x00178131: push es; or eax, 0xffeedeaa; sbb al, 0xd; xchg eax, edi; fsubp st(6); jmp dword ptr [edx]; 
0x00179165: push es; or eax, 0xffeeff94; sbb al, 0xd; push -1; out dx, al; jmp dword ptr [edx]; 
0x0017925d: push es; or eax, 0xffeeff9b; sbb al, 0xd; jno 0x179266; out dx, al; jmp dword ptr [edx]; 
0x001792cd: push es; or eax, 0xffeeffe8; sbb al, 0xd; xor bh, bh; out dx, al; jmp dword ptr [edx]; 
0x00178e69: push es; or eax, 0xffeeffec; sbb al, 0xd; out dx, al; jmp dword ptr [edx]; 
0x00179105: push es; or eax, 0xffef0007; sbb al, 0xd; xor bh, bh; out dx, al; jmp dword ptr [edx]; 
0x001794f9: push es; or eax, 0xffef005c; sbb al, 0xd; xor al, byte ptr [eax]; out dx, eax; jmp dword ptr [edx]; 
0x001797c9: push es; or eax, 0xffef01ff; sbb al, 0xd; aad 1; out dx, eax; jmp dword ptr [edx]; 
0x0017990d: push es; or eax, 0xffef0203; sbb al, 0xd; insb byte ptr es:[edi], dx; add edi, ebp; jmp dword ptr [edx]; 
0x0017962d: push es; or eax, 0xffef0212; sbb al, 0xd; out 1, al; out dx, eax; jmp dword ptr [edx]; 
0x001796e5: push es; or eax, 0xffef0219; sbb al, 0xd; out dx, eax; add edi, ebp; jmp dword ptr [edx]; 
0x00179799: push es; or eax, 0xffef023a; sbb al, 0xd; ret; 
0x001796b5: push es; or eax, 0xffef0254; sbb al, 0xd; fld qword ptr [ecx]; out dx, eax; jmp dword ptr [edx]; 
0x00179769: push es; or eax, 0xffef0272; sbb al, 0xd; mov dl, 1; out dx, eax; jmp dword ptr [edx]; 
0x00179685: push es; or eax, 0xffef028c; sbb al, 0xd; rol byte ptr [ecx], cl; out dx, eax; jmp dword ptr [edx]; 
0x001799f9: push es; or eax, 0xffef25e9; sbb al, 0xd; out dx, eax; and bh, ch; jmp dword ptr [edx]; 
0x001799c9: push es; or eax, 0xffef2621; sbb al, 0xd; pop ds; out dx, eax; jmp dword ptr [edx]; 
0x0017a2ad: push es; or eax, 0xffef39da; sbb al, 0xd; insd dword ptr es:[edi], dx; xor ebp, edi; jmp dword ptr [edx]; 
0x0017a27d: push es; or eax, 0xffef3a12; sbb al, 0xd; arpl word ptr [ebx], si; out dx, eax; jmp dword ptr [edx]; 
0x0017a24d: push es; or eax, 0xffef3a4a; sbb al, 0xd; xor esi, dword ptr [ebx]; out dx, eax; jmp dword ptr [edx]; 
0x0017a21d: push es; or eax, 0xffef3a7e; sbb al, 0xd; sal byte ptr [edx], cl; out dx, eax; jmp dword ptr [edx]; 
0x0017a1ed: push es; or eax, 0xffef3ab6; sbb al, 0xd; mov dword ptr [ecx], esi; out dx, eax; jmp dword ptr [edx]; 
0x0017a1bd: push es; or eax, 0xffef3aea; sbb al, 0xd; and dh, byte ptr [ecx]; out dx, eax; jmp dword ptr [edx]; 
0x0017a18d: push es; or eax, 0xffef3b22; sbb al, 0xd; xlatb; xor bh, ch; jmp dword ptr [edx]; 
0x0017a15d: push es; or eax, 0xffef3b5a; sbb al, 0xd; xchg eax, edi; xor bh, ch; jmp dword ptr [edx]; 
0x0017a12d: push es; or eax, 0xffef3b8e; sbb al, 0xd; sub ah, byte ptr [edx]; out dx, eax; jmp dword ptr [edx]; 
0x0017a06d: push es; or eax, 0xffef3c66; sbb al, 0xd; and ah, byte ptr [ecx]; out dx, eax; jmp dword ptr [edx]; 
0x0017a03d: push es; or eax, 0xffef3c9e; sbb al, 0xd; shl dword ptr [eax], cl; out dx, eax; jmp dword ptr [edx]; 
0x00179fdd: push es; or eax, 0xffef3d0a; sbb al, 0xd; jo 0x17a007; out dx, eax; jmp dword ptr [edx]; 
0x00179fad: push es; or eax, 0xffef3d3e; sbb al, 0xd; inc ebx; and bh, ch; jmp dword ptr [edx]; 
0x00179f7d: push es; or eax, 0xffef3d72; sbb al, 0xd; push edx; and bh, ch; jmp dword ptr [edx]; 
0x0017beb1: push es; or eax, 0xffef8da5; sbb al, 0xd; aaa; xchg edi, ebp; jmp dword ptr [edx]; 
0x0017be81: push es; or eax, 0xffef8dd9; sbb al, 0xd; push esi; xchg edi, ebp; jmp dword ptr [edx]; 
0x0017be21: push es; or eax, 0xffef8e45; sbb al, 0xd; dec ebx; xchg bh, ch; jmp dword ptr [edx]; 
0x0017bdf1: push es; or eax, 0xffef8e7d; sbb al, 0xd; xchg eax, edx; test bh, ch; jmp dword ptr [edx]; 
0x0017bbe1: push es; or eax, 0xffef90d5; sbb al, 0xd; xor al, 0x81; out dx, eax; jmp dword ptr [edx]; 
0x0017cbf1: push es; or eax, 0xffef913c; sbb al, 0xd; loope 0x17cb88; out dx, eax; jmp dword ptr [edx]; 
0x0017bb81: push es; or eax, 0xffef913d; sbb al, 0xd; jno 0x17bb0c; out dx, eax; jmp dword ptr [edx]; 
0x0017cbc1: push es; or eax, 0xffef9170; sbb al, 0xd; out 0x8c, al; out dx, eax; jmp dword ptr [edx]; 
0x0017cb61: push es; or eax, 0xffef91d8; sbb al, 0xd; sbb al, 0x8d; out dx, eax; jmp dword ptr [edx]; 
0x0017bac1: push es; or eax, 0xffef921d; sbb al, 0xd; in al, 0x80; out dx, eax; jmp dword ptr [edx]; 
0x0017cad1: push es; or eax, 0xffef9274; sbb al, 0xd; cli; mov edi, ebp; jmp dword ptr [edx]; 
0x0017ba31: push es; or eax, 0xffef92b9; sbb al, 0xd; mov ch, 0x80; out dx, eax; jmp dword ptr [edx]; 
0x0017b911: push es; or eax, 0xffef9400; sbb al, 0xd; test dword ptr [edi - 0x11], edi; jmp dword ptr [edx]; 
0x0017b851: push es; or eax, 0xffef94d9; sbb al, 0xd; adc al, 0x7d; out dx, eax; jmp dword ptr [edx]; 
0x0017b821: push es; or eax, 0xffef9511; sbb al, 0xd; sub byte ptr [ebp - 0x11], bh; jmp dword ptr [edx]; 
0x0017b7f1: push es; or eax, 0xffef9549; sbb al, 0xd; in eax, 0x7b; out dx, eax; jmp dword ptr [edx]; 
0x0017b791: push es; or eax, 0xffef95b1; sbb al, 0xd; hlt; jns 0x17b78b; jmp dword ptr [edx]; 
0x0017b761: push es; or eax, 0xffef95e5; sbb al, 0xd; and byte ptr [edx - 0x11], bh; jmp dword ptr [edx]; 
0x0017b731: push es; or eax, 0xffef9619; sbb al, 0xd; fdivr qword ptr [ecx - 0x11]; jmp dword ptr [edx]; 
0x0017b701: push es; or eax, 0xffef9651; sbb al, 0xd; in al, dx; jns 0x17b6fb; jmp dword ptr [edx]; 
0x0017b6d1: push es; or eax, 0xffef9685; sbb al, 0xd; sar dword ptr [ecx - 0x11], 1; jmp dword ptr [edx]; 
0x0017b641: push es; or eax, 0xffef9725; sbb al, 0xd; bnd jns 0x17b63b; jmp dword ptr [edx]; 
0x0017b611: push es; or eax, 0xffef975d; sbb al, 0xd; adc edi, dword ptr [edx - 0x11]; jmp dword ptr [edx]; 
0x0017b5b1: push es; or eax, 0xffef97c9; sbb al, 0xd; sub al, 0x76; out dx, eax; jmp dword ptr [edx]; 
0x0017b581: push es; or eax, 0xffef97fd; sbb al, 0xd; mov bl, 0x74; out dx, eax; jmp dword ptr [edx]; 
0x0017b4c1: push es; or eax, 0xffef98cd; sbb al, 0xd; test dword ptr [edi - 0x11], ebp; jmp dword ptr [edx]; 
0x0017b431: push es; or eax, 0xffef9975; sbb al, 0xd; cmp al, 0x6e; out dx, eax; jmp dword ptr [edx]; 
0x0017b3d1: push es; or eax, 0xffef99dd; sbb al, 0xd; insd dword ptr es:[edi], dx; out dx, eax; jmp dword ptr [edx]; 
0x0017b3a1: push es; or eax, 0xffef9a11; sbb al, 0xd; and byte ptr [ebp - 0x11], ch; jmp dword ptr [edx]; 
0x0017b341: push es; or eax, 0xffef9a79; sbb al, 0xd; and ebp, dword ptr [ebp - 0x11]; jmp dword ptr [edx]; 
0x0017b311: push es; or eax, 0xffef9aad; sbb al, 0xd; out 0x6c, eax; out dx, eax; jmp dword ptr [edx]; 
0x0017b2b1: push es; or eax, 0xffef9b15; sbb al, 0xd; sbb ebp, dword ptr [ebp - 0x11]; jmp dword ptr [edx]; 
0x0017b281: push es; or eax, 0xffef9b49; sbb al, 0xd; and byte ptr [ebp - 0x11], ch; jmp dword ptr [edx]; 
0x0017b221: push es; or eax, 0xffef9bb1; sbb al, 0xd; sub dword ptr [eax - 0x11], ebp; jmp dword ptr [edx]; 
0x0017b1f1: push es; or eax, 0xffef9be5; sbb al, 0xd; pushal; out dx, eax; jmp dword ptr [edx]; 
0x0017b1c1: push es; or eax, 0xffef9c19; sbb al, 0xd; jno 0x17b230; out dx, eax; jmp dword ptr [edx]; 
0x0017b161: push es; or eax, 0xffef9c85; sbb al, 0xd; add al, 0x50; out dx, eax; jmp dword ptr [edx]; 
0x0017b0d1: push es; or eax, 0xffef9d2b; sbb al, 0xd; mov dword ptr [ebp - 0x11], ecx; jmp dword ptr [edx]; 
0x0017b0a1: push es; or eax, 0xffef9d62; sbb al, 0xd; loope 0x17b0eb; out dx, eax; jmp dword ptr [edx]; 
0x0017b071: push es; or eax, 0xffef9d96; sbb al, 0xd; add eax, dword ptr [ecx - 0x11]; jmp dword ptr [edx]; 
0x0017b011: push es; or eax, 0xffef9e06; sbb al, 0xd; test dword ptr [ebx], edi; out dx, eax; jmp dword ptr [edx]; 
0x00184a2d: push es; or eax, 0xfff19e1c; sbb al, 0xd; popfd; int1; jmp dword ptr [edx]; 
0x0018496d: push es; or eax, 0xfff19e46; sbb al, 0xd; sbb al, 0x9e; int1; jmp dword ptr [edx]; 
0x001848ad: push es; or eax, 0xfff19e5e; sbb al, 0xd; xor al, 0x9e; int1; jmp dword ptr [edx]; 
0x0018487d: push es; or eax, 0xfff19e99; sbb al, 0xd; sahf; int1; jmp dword ptr [edx]; 
0x0018484d: push es; or eax, 0xfff19ed1; sbb al, 0xd; or al, 0x9e; int1; jmp dword ptr [edx]; 
0x00185455: push es; or eax, 0xfff1c1e8; sbb al, 0xd; test al, 0xf1; jmp dword ptr [edx]; 
0x00185365: push es; or eax, 0xfff1c2ec; sbb al, 0xd; in eax, 0xbf; int1; jmp dword ptr [edx]; 
0x00185e25: push es; or eax, 0xfff25a5d; sbb al, 0xd; add ebx, dword ptr [edx - 0xe]; jmp dword ptr [edx]; 
0x0018663d: push es; or eax, 0xfff267b1; sbb al, 0xd; cmp ah, byte ptr [edi - 0xe]; jmp dword ptr [edx]; 
0x001866c9: push es; or eax, 0xfff26828; sbb al, 0xd; adc byte ptr [edi - 0xe], ah; jmp dword ptr [edx]; 
0x00186809: push es; or eax, 0xfff269bd; sbb al, 0xd; adc ch, byte ptr [eax - 0xe]; jmp dword ptr [edx]; 
0x00186bed: push es; or eax, 0xfff27122; sbb al, 0xd; nop; jo 0x186bea; jmp dword ptr [edx]; 
0x00186cfd: push es; or eax, 0xfff27159; sbb al, 0xd; sbb byte ptr [eax - 0xe], dh; jmp dword ptr [edx]; 
0x00186bbd: push es; or eax, 0xfff2715a; sbb al, 0xd; xchg eax, ebp; jo 0x186bba; jmp dword ptr [edx]; 
0x00186e25: push es; or eax, 0xfff27232; sbb al, 0xd; or dword ptr [edx - 0xe], esi; jmp dword ptr [edx]; 
0x00186df5: push es; or eax, 0xfff27269; sbb al, 0xd; bnd jno 0x186df2; jmp dword ptr [edx]; 
0x00187021: push es; or eax, 0xfff27449; sbb al, 0xd; sal dword ptr [edx - 0xe], cl; jmp dword ptr [edx]; 
0x0018728d: push es; or eax, 0xfff27aec; sbb al, 0xd; pop ss; jp 0x18728a; jmp dword ptr [edx]; 
0x0018a339: push es; or eax, 0xfff45a40; sbb al, 0xd; rcl byte ptr [esi - 0xc], 1; jmp dword ptr [edx]; 
0x00188925: push es; or eax, 0xfff4635e; sbb al, 0xd; fldenv dword ptr [eax - 0xc]; jmp dword ptr [edx]; 
0x001888c5: push es; or eax, 0xfff463c6; sbb al, 0xd; test byte ptr [ecx - 0xc], bl; jmp dword ptr [edx]; 
0x0018ca45: push es; or eax, 0xfff5168e; sbb al, 0xd; test al, 0x10; cmc; jmp dword ptr [edx]; 
0x0018ca15: push es; or eax, 0xfff516c6; sbb al, 0xd; xor ecx, dword ptr [esi]; cmc; jmp dword ptr [edx]; 
0x0018d029: push es; or eax, 0xfff52729; sbb al, 0xd; cmc; jmp dword ptr [edx]; 
0x0018cff9: push es; or eax, 0xfff5275d; sbb al, 0xd; inc eax; cmc; jmp dword ptr [edx]; 
0x0018cf99: push es; or eax, 0xfff527c5; sbb al, 0xd; ret 0xf522; 
0x0018cf69: push es; or eax, 0xfff527f9; sbb al, 0xd; cmp bl, byte ptr [esi]; cmc; jmp dword ptr [edx]; 
0x0018f909: push es; or eax, 0xfff579fa; sbb al, 0xd; sar dword ptr [ecx - 0xb], 1; jmp dword ptr [edx]; 
0x0018f995: push es; or eax, 0xfff57a74; sbb al, 0xd; std; jns 0x18f995; jmp dword ptr [edx]; 
0x0018f965: push es; or eax, 0xfff57aa8; sbb al, 0xd; nop; jns 0x18f965; jmp dword ptr [edx]; 
0x0018fa35: push es; or eax, 0xfff57afb; sbb al, 0xd; insb byte ptr es:[edi], dx; jp 0x18fa35; jmp dword ptr [edx]; 
0x0018fa05: push es; or eax, 0xfff57b2f; sbb al, 0xd; cld; jns 0x18fa05; jmp dword ptr [edx]; 
0x0018fad5: push es; or eax, 0xfff57bb1; sbb al, 0xd; dec edx; jnp 0x18fad5; jmp dword ptr [edx]; 
0x0018faa5: push es; or eax, 0xfff57be5; sbb al, 0xd; movsb byte ptr es:[edi], byte ptr [esi]; jp 0x18faa5; jmp dword ptr [edx]; 
0x0018fb45: push es; or eax, 0xfff57f10; sbb al, 0xd; dec esi; jnp 0x18fb45; jmp dword ptr [edx]; 
0x0018fcd5: push es; or eax, 0xfff57f6d; sbb al, 0xd; add dword ptr [edi - 0xb], edi; jmp dword ptr [edx]; 
0x0018fc15: push es; or eax, 0xfff5803d; sbb al, 0xd; mov byte ptr [esi - 0xb], bh; jmp dword ptr [edx]; 
0x0018ff05: push es; or eax, 0xfff584ec; sbb al, 0xd; popfd; test ch, dh; jmp dword ptr [edx]; 
0x001901b5: push es; or eax, 0xfff5862c; sbb al, 0xd; mov ch, 0x85; cmc; jmp dword ptr [edx]; 
0x00190185: push es; or eax, 0xfff58660; sbb al, 0xd; dec eax; test ebp, esi; jmp dword ptr [edx]; 
0x0019001d: push es; or eax, 0xfff58665; sbb al, 0xd; out dx, eax; test ebp, esi; jmp dword ptr [edx]; 
0x0018ffed: push es; or eax, 0xfff58699; sbb al, 0xd; in al, dx; test ebp, esi; jmp dword ptr [edx]; 
0x00190255: push es; or eax, 0xfff586cc; sbb al, 0xd; inc edi; xchg ch, dh; jmp dword ptr [edx]; 
0x00190225: push es; or eax, 0xfff58700; sbb al, 0xd; mov ah, 0x85; cmc; jmp dword ptr [edx]; 
0x0018ff8d: push es; or eax, 0xfff58701; sbb al, 0xd; jnp 0x18ff1b; cmc; jmp dword ptr [edx]; 
0x001902c5: push es; or eax, 0xfff587ad; sbb al, 0xd; insb byte ptr es:[edi], dx; xchg ch, dh; jmp dword ptr [edx]; 
0x001904f5: push es; or eax, 0xfff58935; sbb al, 0xd; leave; mov ch, dh; jmp dword ptr [edx]; 
0x00190465: push es; or eax, 0xfff589d1; sbb al, 0xd; pop ebx; mov ch, dh; jmp dword ptr [edx]; 
0x00190435: push es; or eax, 0xfff58a05; sbb al, 0xd; push eax; mov ch, dh; jmp dword ptr [edx]; 
0x00191689: push es; or eax, 0xfff5da3a; sbb al, 0xd; xchg eax, edi; fprem1; jmp dword ptr [edx]; 
0x00191659: push es; or eax, 0xfff5da6e; sbb al, 0xd; dec ecx; fprem1; jmp dword ptr [edx]; 
0x00191765: push es; or eax, 0xfff5da8c; sbb al, 0xd; xlatb; fprem1; jmp dword ptr [edx]; 
0x00191735: push es; or eax, 0xfff5dac0; sbb al, 0xd; rcr cl, 0xf5; jmp dword ptr [edx]; 
0x00191e6d: push es; or eax, 0xfff5fb86; sbb al, 0xd; mov dh, 0xfa; cmc; jmp dword ptr [edx]; 
0x00191bb9: push es; or eax, 0xfff5fc25; sbb al, 0xd; adc ecx, edi; cmc; jmp dword ptr [edx]; 
0x00191fdd: push es; or eax, 0xfff60a55; sbb al, 0xd; add dh, dh; jmp dword ptr [edx]; 
0x00191fad: push es; or eax, 0xfff60a89; sbb al, 0xd; out dx, al; add esi, esi; jmp dword ptr [edx]; 
0x00192cbd: push es; or eax, 0xfff617d6; sbb al, 0xd; imul edx, dword ptr [edi], -0xa; jmp dword ptr [edx]; 
0x00193031: push es; or eax, 0xfff61a1d; sbb al, 0xd; xchg eax, ecx; sbb esi, esi; jmp dword ptr [edx]; 
0x001932dd: push es; or eax, 0xfff61ad8; sbb al, 0xd; stosd dword ptr es:[edi], eax; sbb dh, dh; jmp dword ptr [edx]; 
0x0019327d: push es; or eax, 0xfff61b48; sbb al, 0xd; pushal; sbb dh, dh; jmp dword ptr [edx]; 
0x001937cd: push es; or eax, 0xfff625ba; sbb al, 0xd; out dx, al; and al, 0xf6; jmp dword ptr [edx]; 
0x0019370d: push es; or eax, 0xfff625c1; sbb al, 0xd; and al, 0xf6; jmp dword ptr [edx]; 
0x00193a0d: push es; or eax, 0xfff6261d; sbb al, 0xd; clc; and al, 0xf6; jmp dword ptr [edx]; 
0x0019404d: push es; or eax, 0xfff62a52; sbb al, 0xd; iretd; sub esi, esi; jmp dword ptr [edx]; 
0x001943d1: push es; or eax, 0xfff634da; sbb al, 0xd; pop edx; xor al, 0xf6; jmp dword ptr [edx]; 
0x0019454d: push es; or eax, 0xfff63558; sbb al, 0xd; in al, dx; xor al, 0xf6; jmp dword ptr [edx]; 
0x00194ad1: push es; or eax, 0xfff63a60; sbb al, 0xd; dec eax; cmp esi, esi; jmp dword ptr [edx]; 
0x00194cd5: push es; or eax, 0xfff63c7f; sbb al, 0xd; pop es; cmp esi, esi; jmp dword ptr [edx]; 
0x00194f39: push es; or eax, 0xfff63df0; sbb al, 0xd; sar byte ptr [esi + esi*8], 1; jmp dword ptr [edx]; 
0x001952fd: push es; or eax, 0xfff6422f; sbb al, 0xd; ret; 
0x00195445: push es; or eax, 0xfff64248; sbb al, 0xd; xor byte ptr [ecx - 0xa], al; jmp dword ptr [edx]; 
0x00195515: push es; or eax, 0xfff64280; sbb al, 0xd; or dword ptr [edx - 0xa], eax; jmp dword ptr [edx]; 
0x001955e5: push es; or eax, 0xfff643b3; sbb al, 0xd; cmp eax, dword ptr [edx - 0xa]; jmp dword ptr [edx]; 
0x001955b5: push es; or eax, 0xfff643e7; sbb al, 0xd; xor al, byte ptr [edx - 0xa]; jmp dword ptr [edx]; 
0x00195a41: push es; or eax, 0xfff6553d; sbb al, 0xd; mov dword ptr [ebp - 0xa], ecx; jmp dword ptr [edx]; 
0x001959e1: push es; or eax, 0xfff655a5; sbb al, 0xd; adc byte ptr [ebp - 0xa], cl; jmp dword ptr [edx]; 
0x001989a9: push es; or eax, 0xfff73179; sbb al, 0xd; cvttps2pi mm6, xmm7; jmp dword ptr [edx]; 
0x00186209: push es; or eax, 0xfff9d89f; sbb al, 0xd; dec ebx; fdivr st(1); jmp dword ptr [edx]; 
0x00186099: push es; or eax, 0xfff9d930; sbb al, 0xd; xchg eax, esi; fdivr st(1); jmp dword ptr [edx]; 
0x001915f9: push es; or eax, 0xfffac46c; sbb al, 0xd; add al, ah; cli; jmp dword ptr [edx]; 
0x00178075: push es; or eax, 0xfffad8ad; sbb al, 0xd; sbb eax, -6; jmp dword ptr [edx]; 
0x00178045: push es; or eax, 0xfffad8e8; sbb al, 0xd; imul ebx, eax, -6; jmp dword ptr [edx]; 
0x00178191: push es; or eax, 0xfffadc4a; sbb al, 0xd; out dx, al; fsqrt; jmp dword ptr [edx]; 
0x00178359: push es; or eax, 0xfffadc5a; sbb al, 0xd; xor ah, bl; cli; jmp dword ptr [edx]; 
0x00178161: push es; or eax, 0xfffadc7e; sbb al, 0xd; out dx, al; fsqrt; jmp dword ptr [edx]; 
0x00178599: push es; or eax, 0xfffadc84; sbb al, 0xd; pop edx; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x001784dd: push es; or eax, 0xfffadc88; sbb al, 0xd; pop esi; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x0017841d: push es; or eax, 0xfffadc8f; sbb al, 0xd; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x00178329: push es; or eax, 0xfffadc95; sbb al, 0xd; inc edx; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x00178569: push es; or eax, 0xfffadcbf; sbb al, 0xd; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x001784ad: push es; or eax, 0xfffadcc3; sbb al, 0xd; inc esp; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x001782f9: push es; or eax, 0xfffadccd; sbb al, 0xd; mov dh, 0xdb; cli; jmp dword ptr [edx]; 
0x00178101: push es; or eax, 0xfffadcf6; sbb al, 0xd; xchg eax, esi; fdivr st(2); jmp dword ptr [edx]; 
0x00178539: push es; or eax, 0xfffadcf7; sbb al, 0xd; push ds; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x0017847d: push es; or eax, 0xfffadcfb; sbb al, 0xd; and bl, ah; cli; jmp dword ptr [edx]; 
0x001780d1: push es; or eax, 0xfffadd2a; sbb al, 0xd; push edi; fdivr st(2); jmp dword ptr [edx]; 
0x0017afe1: push es; or eax, 0xfffca86c; sbb al, 0xd; dec esp; test al, 0xfc; jmp dword ptr [edx]; 
0x0017afb1: push es; or eax, 0xfffca8a3; sbb al, 0xd; push -0x58; cld; jmp dword ptr [edx]; 
0x00176c71: push es; out dx, eax; jmp dword ptr [esi]; 
0x00167788: push es; pop ebp; std; call dword ptr [esi + 0x5d]; 
0x000876e8: push es; pop ebx; ret; 
0x001348f0: push es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008da21: push es; pop edi; pop esi; pop ebx; ret; 
0x00089a7c: push es; pop edi; ret; 
0x00145719: push es; pop esi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0009496d: push es; push esp; or dword ptr [eax], eax; add ecx, 0xc6013; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00089bac: push es; ret; 
0x00166e51: push es; std; call dword ptr [eax + 7]; 
0x00166e51: push es; std; call dword ptr [eax + 7]; std; jmp eax; 
0x00166e4d: push es; std; inc eax; push es; std; call dword ptr [eax + 7]; 
0x00167284: push es; std; jmp dword ptr [esi + 0x2e]; 
0x0004fea3: push es; sub al, 0; add byte ptr [ebx - 0x1cb73], cl; call ecx; 
0x00167180: push es; sub al, 0xfd; jmp dword ptr [esi + 0x2c]; 
0x0016718c: push es; sub eax, 0x2c00fffd; std; jmp dword ptr [eax + 0x2c]; 
0x00140490: push es; sub eax, ecx; pop ebp; ret; 
0x0013ec77: push es; sub eax, ecx; ret; 
0x0006b95b: push es; xchg eax, esp; add byte ptr [eax], al; add byte ptr [ecx + 0x54892434], cl; and al, 4; call dword ptr [eax + 0xc]; 
0x0006428f: push es; xchg eax, esp; add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbac], cl; xor al, 0x24; call dword ptr [eax + 0x48]; 
0x000729f2: push es; xchg eax, esp; add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbb4], cl; xor al, 0x24; call dword ptr [eax + 0x18]; 
0x000ca0f9: push es; xor eax, eax; ret; 
0x0012bafb: push esi; adc al, 0x8b; inc esi; adc byte ptr [ecx], bh; ret 0x2477; 
0x00070205: push esi; adc al, 0x8b; inc esi; adc byte ptr [ecx], bh; ret 0x3776; 
0x000b37ed: push esi; adc byte ptr [ebx + 0x9824b4], cl; add byte ptr [eax], al; add esp, 0x9c; ret; 
0x0007c377: push esi; adc byte ptr [ecx - 0x3b7cfbba], cl; adc byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x001234a4: push esi; add al, 0x39; ret 0x3676; 
0x0011887b: push esi; add al, 0x83; ret 0x8901; 
0x00103788: push esi; add al, 0x83; ret 0xb801; 
0x0006d0b0: push esi; add al, 0x89; cmp al, 0x24; mov dword ptr [esp + 4], eax; mov dword ptr [esp + 8], edx; call dword ptr [edi + 0xc]; 
0x00073ba4: push esi; add al, 0x89; inc esi; adc al, 0xe9; sar esi, -1; jmp dword ptr [esi - 0x70]; 
0x0008d944: push esi; add al, 0x89; pcmpgtd mm1, qword ptr [ecx + 0x5e5f0457]; pop ebx; ret; 
0x0007331a: push esi; add al, 0xeb; ret 0x9066; 
0x00009f8c: push esi; add al, byte ptr [eax]; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0x11; 
0x00194ce9: push esi; add al, byte ptr [eax]; xchg eax, edi; sub esi, edi; call dword ptr [eax]; 
0x00174d0d: push esi; add byte ptr [eax], al; outsd dx, dword ptr fs:[esi]; in eax, dx; call dword ptr [eax]; 
0x00117647: push esi; add ch, al; and eax, 0x81000127; ret; 
0x000cb3ae: push esi; add dword ptr [ecx], edi; ret 0xd689; 
0x00094a76: push esi; add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00091623: push esi; add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008d953: push esi; add ecx, dword ptr [ecx + 0x357890f]; pop edi; pop esi; pop ebx; ret; 
0x0012b744: push esi; and byte ptr [ebx + 0x46894c4e], cl; add al, 0x29; ret 0x4689; 
0x000711d9: push esi; and byte ptr [ecx - 0x76fbdbbc], cl; xor al, 0x24; sub edx, eax; mov dword ptr [esp + 8], edx; call dword ptr [ecx + 0x38]; 
0x00071636: push esi; and byte ptr [ecx], ch; ret 0xd739; 
0x00002bdd: push esi; call 0xf3f8f45c; ret; 
0x0016c151: push esi; clc; jmp eax; 
0x00140703: push esi; cmc; call dword ptr [ebx - 0x18]; 
0x0018b335: push esi; cmc; call dword ptr [ebx]; 
0x0016744b: push esi; cmp al, 0xfd; inc dword ptr [eax]; cmp al, 0xfd; call dword ptr [eax + 0x3c]; 
0x0011484f: push esi; cmp al, 1; ret 0x4689; 
0x0008f61d: push esi; cmpsd dword ptr [esi], dword ptr es:[edi]; or dword ptr [eax], eax; add ecx, 0xcb18f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00119bf3: push esi; dec esp; mov dword ptr [esp], edx; call eax; 
0x0018a342: push esi; hlt; jmp dword ptr [edx]; 
0x001468f6: push esi; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x00146887: push esi; imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0008e81d: push esi; mov ch, 9; add byte ptr [ecx + 0xcbf0fc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0011aa8e: push esi; or ah, byte ptr [esi + 0x39]; push ebp; ret 0x850f; 
0x0001961a: push esi; or al, 0; add esp, 0x18; pop ebx; ret; 
0x0001a93d: push esi; or al, 0x89; adc al, 0x24; call eax; 
0x0008d556: push esi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000716c5: push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x0016fdd1: push esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00198078: push esi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x001795a0: push esi; or cl, byte ptr [esi]; adc al, 0x44; ret; 
0x00179d87: push esi; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0008eb56: push esi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00094746: push esi; or dword ptr [eax], eax; add ecx, 0xc61bb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000918b7: push esi; or eax, 0x7f0ff3; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001730dd: push esi; out 0xeb, al; jmp dword ptr [edx]; 
0x0016778c: push esi; pop ebp; std; call dword ptr [eax + 0x5c]; 
0x00190da3: push esi; push cs; adc al, 0x41; ret; 
0x00166fcb: push esi; push ds; std; jmp eax; 
0x0006f2e9: push esi; push eax; add esp, 0x18; pop esi; ret; 
0x00005839: push esi; push es; add byte ptr [eax + 0x22000001], bl; add byte ptr [eax + eax], cl; ret; 
0x00148f35: push esi; ret 0xf02; 
0x001589ee: push esi; ret; 
0x000636fc: push esi; sbb al, 0x83; ret 0x8901; 
0x0007c016: push esi; sbb al, 0x89; dec esi; and byte ptr [ecx + 0x187e8906], cl; mov dword ptr [esp], eax; call edx; 
0x000f6ce3: push esi; sbb al, 0x8b; inc esi; sbb byte ptr [ecx], bh; ret 0x2176; 
0x000e5914: push esi; sbb al, 0x8b; push eax; sub al, 0xf6; ret 0x7420; 
0x000e1875: push esi; sbb al, 0xf6; ret 0x7501; 
0x00023190: push esi; sbb byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x00075487: push esi; sbb byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x000e5911: push esi; sbb byte ptr [ecx + 0x508b1c56], cl; sub al, 0xf6; ret 0x7420; 
0x001677bd: push esi; std; call dword ptr [eax]; 
0x0016720b: push esi; std; jmp eax; 
0x000f03a0: push esi; sub al, 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00114268: push esi; sub al, 1; ret 0x5689; 
0x000e5a5f: push esi; sub byte ptr [ebx + 0x56892c4e], cl; xor byte ptr [ebx + 0x4e894050], cl; xor al, 0xf6; ret 0x7420; 
0x0007c21e: push esi; sub byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x000f05a0: push esi; sub cl, byte ptr [ebx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x001468b6: push esi; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x000f04a0: push esi; sub ecx, dword ptr [ebx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0017be89: push esi; xchg edi, ebp; jmp dword ptr [edx]; 
0x000e5a65: push esi; xor byte ptr [ebx + 0x4e894050], cl; xor al, 0xf6; ret 0x7420; 
0x00198e6c: push esp; aaa; clc; jmp dword ptr [eax]; 
0x00119598: push esp; add al, 0; add byte ptr [ebx + 0x45824ac], cl; add byte ptr [eax], al; add esp, 0x45c; ret; 
0x001194ea: push esp; add al, 0; add byte ptr [ecx - 0x76fbdbb4], cl; add al, 0x24; mov dword ptr [esp + 0x458], ebp; call dword ptr [edx + 8]; 
0x00126091: push esp; add al, byte ptr [eax]; add byte ptr [ebp - 0x76de872e], al; rol dword ptr [edi + 0x6b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002f3b7: push esp; add al, byte ptr [eax]; add byte ptr [ebx + 0x25824ac], cl; add byte ptr [eax], al; add esp, 0x25c; ret; 
0x001946f1: push esp; add al, byte ptr [eax]; in al, dx; cmpsb byte ptr [esi], byte ptr es:[edi]; stc; jmp dword ptr [edi]; 
0x0019409c: push esp; add byte ptr [eax], al; add byte ptr [eax + 0x4c00024e], ah; adc al, 0xf7; call dword ptr [edx + 3]; 
0x001874a4: push esp; add byte ptr [eax], al; add byte ptr [eax + 0x64000182], ch; or dh, bl; jmp dword ptr [ebp + 2]; 
0x0017d19c: push esp; add byte ptr [eax], al; add byte ptr [eax - 0x33ffff21], ah; clc; out dx, eax; call dword ptr [ecx + 1]; 
0x0019649c: push esp; add byte ptr [eax], al; add byte ptr [eax - 0x73fffd8e], ah; xchg edi, esi; call edi; 
0x0019940c: push esp; add byte ptr [eax], al; add byte ptr [eax], dl; mov byte ptr [0x4abc0002], al; clc; call edx; 
0x00198778: push esp; add byte ptr [eax], al; add byte ptr [ebp + edx*4 + 2], bh; add byte ptr [eax + 0x19], ah; clc; call edx; 
0x001986b8: push esp; add byte ptr [eax], al; add byte ptr [esp + edx*4 + 0x15700002], bh; clc; call dword ptr [esi]; 
0x00174ba1: push esp; add byte ptr [eax], al; cld; outsd dx, dword ptr [esi]; in eax, dx; call dword ptr [eax]; 
0x000e6357: push esp; add byte ptr [eax], al; mov esi, eax; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00174641: push esp; add byte ptr [eax], al; pushfd; fsubr st(4); jmp dword ptr [edi]; 
0x000e631e: push esp; add byte ptr [eax], al; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00186c6d: push esp; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x0017f754: push esp; add eax, 0xa9b80001; sti; call dword ptr [ecx]; 
0x000b39b5: push esp; and al, 0x10; call 0xb3930; add esp, 8; pop ebx; ret; 
0x0011ba76: push esp; and al, 0x10; lea edx, dword ptr [ebx - 0x84aa4]; mov dword ptr [esp + 8], edx; call dword ptr [eax]; 
0x00129b39: push esp; and al, 0x10; mov dword ptr [edx], edi; pop esi; pop edi; ret; 
0x00066c7e: push esp; and al, 0x10; mov dword ptr [esp + 0xc], 0; call dword ptr [eax + 0x24]; 
0x001092a7: push esp; and al, 0x10; mov dword ptr [esp], esi; call eax; 
0x000ef792: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x000dece2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x13; call dword ptr gs:[0x10]; 
0x000df532: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x000eff0c: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000e6d02: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000e0a72: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000e6ac2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x000eea12: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x000ef892: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000aac42: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000ef232: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x000eb1a2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x000ef522: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000ef562: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000eb1ec: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000c5432: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000ef972: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eb2a2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x000eb262: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000ed572: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x000ed602: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x000ed452: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000debec: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 3; call dword ptr gs:[0x10]; 
0x000dec6c: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 4; call dword ptr gs:[0x10]; 
0x000de74c: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 5; call dword ptr gs:[0x10]; 
0x000b7cfc: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 7; call dword ptr gs:[0x10]; 
0x000a7b39: push esp; and al, 0x10; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; imul eax, edx; ret; 
0x000478ea: push esp; and al, 0x14; mov dword ptr [esp + 4], eax; mov dword ptr [esp], esi; call dword ptr [ecx + 0x1c]; 
0x0011266e: push esp; and al, 0x14; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x00079df7: push esp; and al, 0x14; mov dword ptr [esp + 4], edx; call eax; 
0x000ef681: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000efc11: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000efd21: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000efde7: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000ef337: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000eff34: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000b7da7: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000efad7: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x000eb214: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000e1347: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000ed527: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x000ed5b7: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x000ed407: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x000e1397: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x000ef627: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000dec14: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 3; call dword ptr gs:[0x10]; 
0x000dec94: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 4; call dword ptr gs:[0x10]; 
0x000de774: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 5; call dword ptr gs:[0x10]; 
0x000b7d24: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 7; call dword ptr gs:[0x10]; 
0x000e1484: push esp; and al, 0x14; mov esi, ecx; xchg edi, ebx; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x000c5b7c: push esp; and al, 0x18; add esp, 0x28; pop ebx; mov eax, edx; ret; 
0x0005b99d: push esp; and al, 0x18; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x00079860: push esp; and al, 0x18; mov dword ptr [esp + 4], edx; call eax; 
0x0007b842: push esp; and al, 0x18; mov dword ptr [esp + 8], esi; mov dword ptr [esp + 4], ecx; call eax; 
0x00074d66: push esp; and al, 0x18; mov dword ptr [esp], 0; call dword ptr [ecx]; 
0x000ef6af: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000eb2ec: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x000efc3f: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000efd4f: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000efebc: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x000ef8dc: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x000ef74c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x000e7e66: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000ef92c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x000efa8c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x000efa3c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x00123dcc: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xbc; call dword ptr gs:[0x10]; 
0x00123e8c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xbd; call dword ptr gs:[0x10]; 
0x000ed71c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x000ed68c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x000ed4dc: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012e51c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xfa; call dword ptr gs:[0x10]; 
0x000e1406: push esp; and al, 0x18; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x000f11cd: push esp; and al, 0x18; mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x1c]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00074d43: push esp; and al, 0x18; neg eax; mov dword ptr [esp], eax; call dword ptr [ecx]; 
0x000b308d: push esp; and al, 0x18; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], ecx; call eax; 
0x00019f3c: push esp; and al, 0x1c; add esp, 0x24; ret; 
0x001247af: push esp; and al, 0x1c; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x0005544d: push esp; and al, 0x1c; add esp, 0x28; pop ebx; mov eax, edx; ret; 
0x000fc900: push esp; and al, 0x1c; add esp, 0x2c; mov eax, edx; ret; 
0x00064f86: push esp; and al, 0x1c; add esp, 0x2c; ret; 
0x000d95cc: push esp; and al, 0x1c; call dword ptr [eax + 0x14]; 
0x000d8460: push esp; and al, 0x1c; mov dword ptr [eax + 8], edx; add esp, 8; ret; 
0x000317c9: push esp; and al, 0x1c; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], edi; mov dword ptr [esp + 8], edx; call esi; 
0x0011f03f: push esp; and al, 0x1c; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x0011ef57: push esp; and al, 0x1c; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x20]; 
0x0011e6d6: push esp; and al, 0x1c; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x00111857: push esp; and al, 0x1c; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x0007b937: push esp; and al, 0x1c; mov dword ptr [esp + 4], esi; mov dword ptr [esp], ecx; call eax; 
0x0007b3be: push esp; and al, 0x1c; mov dword ptr [esp + 8], ecx; lea ecx, dword ptr [edi + 0x19]; mov dword ptr [esp + 4], ecx; call eax; 
0x00114255: push esp; and al, 0x1c; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x000792af: push esp; and al, 0x1c; mov dword ptr [esp], ecx; mov dword ptr [esp + 4], edx; call eax; 
0x0007a107: push esp; and al, 0x1c; mov dword ptr [esp], edx; call eax; 
0x00126cae: push esp; and al, 0x1c; mov eax, dword ptr [eax + 0x1a0]; mov dword ptr [esp], edx; call eax; 
0x00126c58: push esp; and al, 0x1c; mov eax, dword ptr [ebx - 0xfc]; mov dword ptr [esp], edx; mov eax, dword ptr [eax + 0x1a0]; call eax; 
0x000efb3b: push esp; and al, 0x1c; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000eeb11: push esp; and al, 0x1c; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000ef391: push esp; and al, 0x1c; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x153; call dword ptr gs:[0x10]; 
0x000effd1: push esp; and al, 0x1c; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x15b; call dword ptr gs:[0x10]; 
0x000f0031: push esp; and al, 0x1c; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x15c; call dword ptr gs:[0x10]; 
0x000e7e9a: push esp; and al, 0x1c; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000eb108: push esp; and al, 0x1c; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x000eeae2: push esp; and al, 0x1c; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; int 0x80; 
0x000b3756: push esp; and al, 0x20; mov dword ptr [esi + 0xc], edx; mov esi, dword ptr [esp + 0x98]; add esp, 0x9c; ret; 
0x0003165d: push esp; and al, 0x20; mov dword ptr [esp + 4], esi; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], edx; call edi; 
0x000197ea: push esp; and al, 0x20; mov dword ptr [esp], edx; call eax; 
0x0006428a: push esp; and al, 0x20; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x48]; 
0x000efb75: push esp; and al, 0x20; mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000eaea1: push esp; and al, 0x20; mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0011cac8: push esp; and al, 0x20; mov edx, dword ptr [eax + 8]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x001117d9: push esp; and al, 0x24; add esp, 0x18; pop ebx; ret; 
0x00115f35: push esp; and al, 0x24; add esp, 0x1c; ret; 
0x000fbea4: push esp; and al, 0x24; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x20]; mov dword ptr [esp], edx; call eax; 
0x0006f2d0: push esp; and al, 0x24; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x40]; 
0x0006f5e3: push esp; and al, 0x24; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x20]; 
0x0007b289: push esp; and al, 0x24; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call eax; 
0x0011c9e5: push esp; and al, 0x24; mov edx, dword ptr [eax + 8]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x000df7a8: push esp; and al, 0x24; xchg ebx, edx; mov eax, 0xb7; call dword ptr gs:[0x10]; 
0x00076e26: push esp; and al, 0x28; call dword ptr [ebp]; 
0x00076d05: push esp; and al, 0x28; call eax; 
0x0011efed: push esp; and al, 0x28; lea edx, dword ptr [esp + 0x28]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x0011ef05: push esp; and al, 0x28; lea edx, dword ptr [esp + 0x28]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x0011e685: push esp; and al, 0x28; lea edx, dword ptr [esp + 0x28]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x00076e47: push esp; and al, 0x28; mov dword ptr [esp + 0x2c], ecx; call eax; 
0x00076ce1: push esp; and al, 0x28; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x0011f024: push esp; and al, 0x28; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x0011eff1: push esp; and al, 0x28; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x0011ef3c: push esp; and al, 0x28; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x20]; 
0x0011ef09: push esp; and al, 0x28; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x0011e689: push esp; and al, 0x28; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x0011e6bc: push esp; and al, 0x28; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x0011625a: push esp; and al, 0x28; mov dword ptr [esp], edi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x00076ce5: push esp; and al, 0x2c; call dword ptr [eax]; 
0x00118604: push esp; and al, 0x2c; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x001185df: push esp; and al, 0x2c; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x0011b5e6: push esp; and al, 0x2c; mov dword ptr [esp + 4], edi; mov dword ptr [esp], eax; call edx; 
0x0011f008: push esp; and al, 0x2c; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x0011ef20: push esp; and al, 0x2c; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x0011e6a0: push esp; and al, 0x2c; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x000a5eb8: push esp; and al, 0x2c; mov dword ptr [esp], edx; call edi; 
0x000e88b1: push esp; and al, 0x2c; mov eax, edx; add esp, 0x3c; ret; 
0x0011d945: push esp; and al, 0x30; mov dword ptr [esp + 4], 0; call dword ptr [eax + 0x14]; 
0x0012b1c4: push esp; and al, 0x30; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x48]; 
0x000988a8: push esp; and al, 0x30; mov dword ptr [esp + 4], edx; mov eax, dword ptr [eax + 8]; mov dword ptr [esp], eax; call esi; 
0x000a5eb0: push esp; and al, 0x30; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x2c]; mov dword ptr [esp], edx; call edi; 
0x0001985d: push esp; and al, 0x30; mov dword ptr [esp], edx; call eax; 
0x0006febd: push esp; and al, 0x30; mov eax, dword ptr [ebp + eax + 0x94]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x48]; 
0x0014a46e: push esp; and al, 0x30; mov eax, esi; add eax, dword ptr [edx + 8]; mov dword ptr [esp], eax; call edi; 
0x0011c995: push esp; and al, 0x30; mov edx, dword ptr [eax + 8]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x0007b121: push esp; and al, 0x34; mov dword ptr [esp + 4], edx; lea edx, dword ptr [edi + 0x19]; mov dword ptr [esp], edx; call eax; 
0x00019855: push esp; and al, 0x34; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x30]; mov dword ptr [esp], edx; call eax; 
0x00067046: push esp; and al, 0x34; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x2c]; 
0x00019e3b: push esp; and al, 0x34; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x40]; add esp, 0x44; ret; 
0x0010e2a4: push esp; and al, 0x38; mov dword ptr [esp + 8], edx; call 0x10d6a0; add esp, 0x2c; ret; 
0x0007a0ff: push esp; and al, 0x3c; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp], edx; call eax; 
0x00078f03: push esp; and al, 0x3c; mov dword ptr [esp], ebp; mov dword ptr [esp + 4], edx; call eax; 
0x0007952b: push esp; and al, 0x3c; mov dword ptr [esp], esi; mov dword ptr [esp + 4], ebp; mov dword ptr [esp + 8], edx; call eax; 
0x0011e53b: push esp; and al, 0x40; add esp, 0x3c; ret; 
0x00079b5f: push esp; and al, 0x40; mov dword ptr [esp + 4], edx; call eax; 
0x00065887: push esp; and al, 0x40; mov dword ptr [esp + 8], edi; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x0006d914: push esp; and al, 0x48; mov dword ptr [esp], edx; call dword ptr [edx + 0x10]; 
0x000b37e9: push esp; and al, 0x60; mov dword ptr [esi + 0x10], edx; mov esi, dword ptr [esp + 0x98]; add esp, 0x9c; ret; 
0x00114b75: push esp; and al, 0x60; mov dword ptr [esp], edx; call eax; 
0x0006db8d: push esp; and al, 0x60; mov eax, dword ptr [ebp + eax + 0x94]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x48]; 
0x00114b6d: push esp; and al, 0x64; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x60]; mov dword ptr [esp], edx; call eax; 
0x0011f725: push esp; and al, 0xc; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x0012b1f7: push esp; and al, 0xc; call dword ptr [eax + 0x40]; 
0x001298ec: push esp; and al, 0xc; mov dword ptr [eax], edx; ret; 
0x0006ff04: push esp; and al, 0xc; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x0002da13: push esp; and al, 0xc; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0002e27f: push esp; and al, 0xc; mov esi, eax; xchg ebx, edx; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000dde31: push esp; and al, 0xc; xchg ebx, edx; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ddeb1: push esp; and al, 0xc; xchg ebx, edx; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000dde71: push esp; and al, 0xc; xchg ebx, edx; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x0002de8e: push esp; and al, 0xc; xchg edi, ebx; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0002dadc: push esp; and al, 4; add esp, 0x10; and eax, 0x8000; ret; 
0x0003301a: push esp; and al, 4; add esp, 0x14; ret; 
0x0002df01: push esp; and al, 4; call 0x2e1a0; add esp, 0x18; pop ebx; ret; 
0x00102eac: push esp; and al, 4; call 0xb90d0; add esp, 0x18; pop ebx; ret; 
0x0014a56d: push esp; and al, 4; call 0xeb160; add esp, 0x18; pop ebx; ret; 
0x00042613: push esp; and al, 4; call dword ptr [eax + 0x1c]; 
0x0006f5ea: push esp; and al, 4; call dword ptr [eax + 0x20]; 
0x0006f5ea: push esp; and al, 4; call dword ptr [eax + 0x20]; add esp, 0x18; pop esi; ret; 
0x0006704d: push esp; and al, 4; call dword ptr [eax + 0x2c]; 
0x0006f2db: push esp; and al, 4; call dword ptr [eax + 0x40]; 
0x0006b964: push esp; and al, 4; call dword ptr [eax + 0xc]; 
0x000b4e83: push esp; and al, 4; call dword ptr [ebp - 0x34]; 
0x00127395: push esp; and al, 4; call dword ptr [ebp - 0x7c]; 
0x00032aed: push esp; and al, 4; call eax; 
0x00031169: push esp; and al, 4; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0001a664: push esp; and al, 4; lea edx, dword ptr [ebp - 0x1c]; mov dword ptr [esp], edx; call eax; 
0x0005d6f6: push esp; and al, 4; lea edx, dword ptr [ebp - 0x34]; mov dword ptr [esp + 8], edi; mov dword ptr [esp], edx; call eax; 
0x0005670b: push esp; and al, 4; lea edx, dword ptr [ebp - 0x5c]; mov dword ptr [esp], edx; call eax; 
0x0004e38b: push esp; and al, 4; lea edx, dword ptr [ebp - 0x64]; mov dword ptr [esp], edx; call eax; 
0x000428b3: push esp; and al, 4; lea edx, dword ptr [ebp - 0x70]; mov dword ptr [esp], edx; call eax; 
0x0007b125: push esp; and al, 4; lea edx, dword ptr [edi + 0x19]; mov dword ptr [esp], edx; call eax; 
0x000479a3: push esp; and al, 4; lea edx, dword ptr [esp + 0x20d0]; mov dword ptr [esp], edx; call eax; 
0x0005ba5b: push esp; and al, 4; lea edx, dword ptr [esp + 0x8190]; mov dword ptr [esp], edx; call eax; 
0x00114251: push esp; and al, 4; mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x00070001: push esp; and al, 4; mov dword ptr [esp + 8], eax; mov dword ptr [esp], ebp; call ecx; 
0x0006fad7: push esp; and al, 4; mov dword ptr [esp + 8], eax; mov dword ptr [esp], esi; call dword ptr [ecx + 0x40]; 
0x000e1907: push esp; and al, 4; mov dword ptr [esp + 8], eax; mov eax, dword ptr [esi + 0xc]; mov dword ptr [esp], eax; call dword ptr [esi + 0x24]; 
0x0012b2a3: push esp; and al, 4; mov dword ptr [esp + 8], ecx; call dword ptr [eax + 0x40]; 
0x0006d8fc: push esp; and al, 4; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x00066a37: push esp; and al, 4; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x000562fc: push esp; and al, 4; mov dword ptr [esp + 8], esi; mov dword ptr [esp], ecx; call dword ptr [eax + 0x1c]; 
0x000e229f: push esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [ebp - 0x28]; 
0x00126ecd: push esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [esi]; 
0x00115f2e: push esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x000b518f: push esp; and al, 4; mov dword ptr [esp], eax; call edi; 
0x000c8bbd: push esp; and al, 4; mov dword ptr [esp], eax; call esi; 
0x00118a9c: push esp; and al, 4; mov dword ptr [esp], eax; mov dword ptr [esp + 8], esi; call dword ptr [ecx + 0xc]; 
0x0006ad77: push esp; and al, 4; mov dword ptr [esp], ebp; call dword ptr [eax + 0x1c]; 
0x0006db98: push esp; and al, 4; mov dword ptr [esp], ebp; call dword ptr [eax + 0x48]; 
0x0011c34d: push esp; and al, 4; mov dword ptr [esp], ebp; call dword ptr [eax + 8]; 
0x0011a751: push esp; and al, 4; mov dword ptr [esp], ecx; call dword ptr [eax + 4]; 
0x0002155e: push esp; and al, 4; mov dword ptr [esp], ecx; mov dword ptr [esp + 8], eax; call dword ptr [edi]; 
0x001110dc: push esp; and al, 4; mov dword ptr [esp], ecx; mov dword ptr [esp + 8], esi; call dword ptr [eax + 0xc]; 
0x0011f028: push esp; and al, 4; mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x0011eff5: push esp; and al, 4; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x000724a8: push esp; and al, 4; mov dword ptr [esp], edi; call dword ptr [eax + 0xc]; 
0x00111874: push esp; and al, 4; mov dword ptr [esp], edi; call dword ptr [eax + 4]; 
0x0011269b: push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x00043cd5: push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0011ef40: push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x20]; 
0x0011ef0d: push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x00064295: push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x48]; 
0x0011cded: push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0xc]; 
0x0011412f: push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x0011ead5: push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 8]; 
0x0011415f: push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x0001f9ca: push esp; and al, 4; mov dword ptr [esp], esi; mov dword ptr [esp + 8], eax; call dword ptr [ebp]; 
0x000271d5: push esp; and al, 4; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000271e5: push esp; and al, 4; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00098ca9: push esp; and al, 4; mov eax, dword ptr [eax + 8]; mov dword ptr [esp], eax; call edi; 
0x000988ac: push esp; and al, 4; mov eax, dword ptr [eax + 8]; mov dword ptr [esp], eax; call esi; 
0x000e1dfe: push esp; and al, 4; mov eax, dword ptr [ecx + 0xc]; mov dword ptr [esp], eax; call dword ptr [ecx + 0x24]; 
0x00026a8c: push esp; and al, 4; mov eax, dword ptr [ecx - 0x158]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0011f331: push esp; and al, 4; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0007c2ae: push esp; and al, 4; mov eax, dword ptr [esi + 0x24]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x0002d65c: push esp; and al, 4; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000a8443: push esp; and al, 4; mov ecx, eax; xchg ebx, ecx; mov eax, 0xd; call dword ptr gs:[0x10]; 
0x000b7be1: push esp; and al, 4; mov ecx, edx; xchg ebx, ecx; mov eax, 0x2b; call dword ptr gs:[0x10]; 
0x000eede1: push esp; and al, 4; mov ecx, edx; xchg ebx, ecx; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x000eee01: push esp; and al, 4; mov ecx, edx; xchg ebx, ecx; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0011a72f: push esp; and al, 4; mov edx, dword ptr [ebp - 0xbc]; mov dword ptr [esp], edx; call dword ptr [eax + 0x14]; 
0x00064f16: push esp; and al, 4; mov edx, dword ptr [esi + 0x98]; mov dword ptr [esp], edx; call eax; 
0x0007a103: push esp; and al, 4; mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp], edx; call eax; 
0x00126caa: push esp; and al, 4; mov edx, dword ptr [esp + 0x1c]; mov eax, dword ptr [eax + 0x1a0]; mov dword ptr [esp], edx; call eax; 
0x000fb893: push esp; and al, 4; mov edx, dword ptr [esp + 0x20]; mov dword ptr [esp], edx; call eax; 
0x00113e50: push esp; and al, 4; mov edx, dword ptr [esp + 0x22a4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x00113cfb: push esp; and al, 4; mov edx, dword ptr [esp + 0x22a4]; mov dword ptr [esp], edx; call dword ptr [eax + 8]; 
0x000a5eb4: push esp; and al, 4; mov edx, dword ptr [esp + 0x2c]; mov dword ptr [esp], edx; call edi; 
0x00019859: push esp; and al, 4; mov edx, dword ptr [esp + 0x30]; mov dword ptr [esp], edx; call eax; 
0x00114b71: push esp; and al, 4; mov edx, dword ptr [esp + 0x60]; mov dword ptr [esp], edx; call eax; 
0x00033016: push esp; and al, 4; mov edx, dword ptr [esp + 4]; add esp, 0x14; ret; 
0x000413af: push esp; and al, 4; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], 1; call eax; 
0x0002db5c: push esp; and al, 8; add esp, 0x10; pop ebx; ret; 
0x0010e2a8: push esp; and al, 8; call 0x10d6a0; add esp, 0x2c; ret; 
0x00033bc3: push esp; and al, 8; call 0x33be0; add esp, 0x18; pop ebx; ret; 
0x00033c63: push esp; and al, 8; call 0x33c80; add esp, 0x18; pop ebx; ret; 
0x0012af1f: push esp; and al, 8; call dword ptr [eax + 0x3c]; 
0x0011ba80: push esp; and al, 8; call dword ptr [eax]; 
0x000711e5: push esp; and al, 8; call dword ptr [ecx + 0x38]; 
0x0006cb8a: push esp; and al, 8; call dword ptr [edi + 0xc]; 
0x00079536: push esp; and al, 8; call eax; 
0x000317d4: push esp; and al, 8; call esi; 
0x0011fc16: push esp; and al, 8; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0xc], edx; ret; 
0x000d8a55: push esp; and al, 8; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x000568c2: push esp; and al, 8; mov dword ptr [ebp - 0x1120], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x000478e6: push esp; and al, 8; mov dword ptr [esp + 0x14], edx; mov dword ptr [esp + 4], eax; mov dword ptr [esp], esi; call dword ptr [ecx + 0x1c]; 
0x0005b999: push esp; and al, 8; mov dword ptr [esp + 0x18], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x001127a8: push esp; and al, 8; mov dword ptr [esp + 4], 5; mov dword ptr [esp], edi; call dword ptr [eax]; 
0x0012b75e: push esp; and al, 8; mov dword ptr [esp + 4], eax; mov dword ptr [esp], esi; call dword ptr [ecx + 0x38]; 
0x0011ea59: push esp; and al, 8; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0xc]; 
0x0011eaac: push esp; and al, 8; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 8]; 
0x00042cab: push esp; and al, 8; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; mov dword ptr [ebp - 0x57c], edx; call dword ptr [eax + 0x1c]; 
0x0006fa57: push esp; and al, 8; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; call dword ptr [eax + 0x3c]; 
0x00044119: push esp; and al, 8; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; mov dword ptr [ebp - 0x57c], edx; call dword ptr [eax + 0x1c]; 
0x0006f9eb: push esp; and al, 8; mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x00042fd7: push esp; and al, 8; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0006d641: push esp; and al, 8; mov dword ptr [esp], esi; call dword ptr [eax + 0x40]; 
0x00073155: push esp; and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00025205: push esp; and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0002d404: push esp; and al, 8; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00129911: push esp; and al, 8; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x4c], edx; ret; 
0x001298c1: push esp; and al, 8; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00042609: push esp; and al, 8; mov edx, dword ptr [ebp + 0xc]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x00079df3: push esp; and al, 8; mov edx, dword ptr [esp + 0x14]; mov dword ptr [esp + 4], edx; call eax; 
0x0007985c: push esp; and al, 8; mov edx, dword ptr [esp + 0x18]; mov dword ptr [esp + 4], edx; call eax; 
0x00111853: push esp; and al, 8; mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x0006f5df: push esp; and al, 8; mov edx, dword ptr [esp + 0x24]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x20]; 
0x00116256: push esp; and al, 8; mov edx, dword ptr [esp + 0x28]; mov dword ptr [esp], edi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x00067042: push esp; and al, 8; mov edx, dword ptr [esp + 0x34]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x2c]; 
0x00079b5b: push esp; and al, 8; mov edx, dword ptr [esp + 0x40]; mov dword ptr [esp + 4], edx; call eax; 
0x000e4d75: push esp; and al, 8; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x000e9571: push esp; and al, 8; xchg ebx, edx; mov eax, 0x10f; call dword ptr gs:[0x10]; 
0x000e65c1: push esp; and al, 8; xchg ebx, edx; mov eax, 0x4b; call dword ptr gs:[0x10]; 
0x000e6a81: push esp; and al, 8; xchg ebx, edx; mov eax, 0x60; call dword ptr gs:[0x10]; 
0x000e6581: push esp; and al, 8; xchg ebx, edx; mov eax, 0xbf; call dword ptr gs:[0x10]; 
0x000b90e1: push esp; and al, 8; xchg ebx, edx; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0018da54: push esp; call 0xf8b0da5b; cmc; jmp esi; 
0x0012e4f7: push esp; clc; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x0017d03c: push esp; clc; out dx, eax; call dword ptr [edx]; 
0x000a3dc7: push esp; cmp eax, 0x83fa8900; ret 0x8901; 
0x001891bc: push esp; dec edi; hlt; call dword ptr [ebx + 1]; 
0x00168e30: push esp; fucomi st(7); call eax; 
0x00174add: push esp; in eax, dx; call esp; 
0x0016df68: push esp; inc esp; sti; jmp dword ptr [eax + 0x11]; 
0x0016edc8: push esp; insd dword ptr es:[edi], dx; cld; jmp esp; 
0x0016a099: push esp; int1; jmp esp; 
0x00158791: push esp; jmp dword ptr [ebx - 0x40]; 
0x0016c3c8: push esp; jnp 0x16c3c3; call esp; 
0x00173cd5: push esp; mov ch, ah; jmp dword ptr [edx]; 
0x0019a904: push esp; mov dl, 2; add byte ptr [edx - 8], dh; call dword ptr [eax]; 
0x000e736b: push esp; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000e788b: push esp; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0011c993: push esp; mov dword ptr [esp + 0x30], edx; mov edx, dword ptr [eax + 8]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x0006d912: push esp; mov dword ptr [esp + 0x48], edx; mov dword ptr [esp], edx; call dword ptr [edx + 0x10]; 
0x00067b70: push esp; mov dword ptr [esp + 4], eax; mov dword ptr [esp], ebp; call edi; 
0x00064a6c: push esp; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x0006d612: push esp; mov dword ptr [esp], ebp; call dword ptr [ebp + 0x10]; 
0x0007b83d: push esp; mov dword ptr [esp], edi; mov dword ptr [esp + 0x18], edx; mov dword ptr [esp + 8], esi; mov dword ptr [esp + 4], ecx; call eax; 
0x00175b17: push esp; mov eax, 0xd1cffee; dec ebp; mov bh, 0xee; jmp dword ptr [edx]; 
0x00054a12: push esp; mov ebp, dword ptr [esp + 0x58]; add esp, 0x5c; ret; 
0x0018ad54: push esp; mov ebx, 0x3c980001; cmc; jmp dword ptr [edx]; 
0x0017b204: push esp; mov ebx, 0xf78d0000; out dx, eax; call dword ptr [eax]; 
0x00068d45: push esp; mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x001121aa: push esp; mov edi, dword ptr [esp + 0x58]; add esp, 0x5c; ret; 
0x0017b504: push esp; mov esi, 0xf5810000; out dx, eax; call dword ptr [eax]; 
0x000e60ac: push esp; mov esi, dword ptr [esp + 0x58]; mov edi, dword ptr [esp + 0x5c]; mov ebp, dword ptr [esp + 0x60]; add esp, 0x64; ret; 
0x0001a660: push esp; or dl, byte ptr [eax]; mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x1c]; mov dword ptr [esp], edx; call eax; 
0x0009496e: push esp; or dword ptr [eax], eax; add ecx, 0xc6013; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094951: push esp; or dword ptr [eax], eax; add ecx, 0xc6030; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000948b2: push esp; or dword ptr [eax], eax; add ecx, 0xc604f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00094924: push esp; or dword ptr [eax], eax; add ecx, 0xc605d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094894: push esp; or dword ptr [eax], eax; add ecx, 0xc606d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009490d: push esp; or dword ptr [eax], eax; add ecx, 0xc6074; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000948f2: push esp; or dword ptr [eax], eax; add ecx, 0xc608f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000948d0: push esp; or dword ptr [eax], eax; add ecx, 0xc60b1; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001879c6: push esp; or ebx, dword ptr [esi + 0xa]; ret; 
0x0011f91d: push esp; pop ebx; pop esi; mov eax, edx; ret; 
0x0016ccd3: push esp; popfd; add al, byte ptr [eax]; in al, 0x4e; stc; jmp dword ptr [eax]; 
0x0016e120: push esp; push -5; call dword ptr [eax + 0x1a]; 
0x0016a40b: push esp; push 1; add ah, dl; mov dl, 0xf1; call dword ptr [eax]; 
0x0016e808: push esp; push ds; cld; call dword ptr [eax + 0x40]; 
0x00174aac: push esp; push ebp; in eax, dx; call dword ptr [eax]; 
0x0016d558: push esp; push es; cli; call dword ptr [eax]; 
0x001686f8: push esp; ret 0xffec; 
0x000c5f05: push esp; ret 0xfffb; 
0x0018b454: push esp; ret 1; 
0x0016d294: push esp; ret 2; 
0x00129996: push esp; ret; 
0x000c6af4: push esp; rol byte ptr [0x5e5bd089], cl; ret; 
0x0013a14e: push esp; rol dword ptr [edx], 1; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00165efc: push esp; sar esp, 1; inc dword ptr [ecx + edx*8 - 0x2e4b0004]; cld; jmp esp; 
0x00167b50: push esp; sbb bl, ch; call dword ptr [eax]; 
0x00074026: push esp; sbb dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0014ac29: push esp; sbb eax, dword ptr [eax]; add al, ch; push ds; ret; 
0x001677ad: push esp; std; call eax; 
0x001677ad: push esp; std; call eax; push esp; std; jmp dword ptr [eax + 0x55]; 
0x00166c40: push esp; std; cld; jmp esp; 
0x001677b1: push esp; std; jmp dword ptr [eax + 0x55]; 
0x0016e051: push esp; sti; jmp dword ptr [eax]; 
0x00170527: push esp; xchg byte ptr [edx], al; add al, byte ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x00196a2b: push esp; xchg byte ptr [edx], al; add dl, byte ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x0017c89b: push esp; xchg byte ptr [edx], al; dec ebx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0018ab0c: push esp; xchg dword ptr [edx], eax; add dword ptr [ebx], 0x6c; or cl, byte ptr [esi]; add al, 0xc7; ret; 
0x0018bbac: push esp; xchg eax, ebx; cmc; call dword ptr [ecx]; 
0x001663ec: push esp; xlatb; cld; inc dword ptr [edi + edx*8 - 0x284b0004]; cld; jmp esp; 
0x0016ab70: push esp; xor dh, ah; call eax; 
0x000e5027: push esp; xor eax, eax; pop ebx; ret; 
0x00168090: push esp; xor ebp, esp; call dword ptr [ecx + ebx*4 + 0x347e0000]; in al, dx; call esp; 
0x0001ced7: push ss; add al, 0x83; ret 0x3b01; 
0x000e4d89: push ss; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x00032819: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; add esp, 0x1c; ret; 
0x000ddfe4: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; add esp, 0xc; ret; 
0x000ddf48: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; add esp, 8; ret; 
0x000e4f84: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0002ed07: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0014ab66: push ss; add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add bl, dh; ret; 
0x0017fff1: push ss; add byte ptr [eax], al; add byte ptr [edi + 0xe], dl; or byte ptr [ebx + 0x40e4902], al; ret; 
0x00124242: push ss; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x8965; 
0x000d8a15: push ss; add byte ptr [eax], al; add byte ptr [esi - 9], ah; ret 0xff80; 
0x0003edf8: push ss; add byte ptr [ebx - 0x780d76d0], cl; sar dword ptr [eax + 0x25], cl; call dword ptr gs:[0x10]; 
0x0003f87a: push ss; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000424df: push ss; add byte ptr [ecx + 0x59cec], al; add byte ptr [ebx + 0x7e800875], cl; inc esi; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x000d7158: push ss; add dword ptr [eax + edx - 0x75], esi; xor dword ptr [eax - 1], 0xffffffff; jmp dword ptr [ebp - 0x75]; 
0x000f5068: push ss; add dword ptr [eax], eax; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x0016e05d: push ss; add eax, dword ptr [eax]; and al, 0x55; sti; jmp dword ptr [eax + 0x16]; 
0x0016e07d: push ss; add eax, dword ptr [eax]; and al, 0x57; sti; jmp esp; 
0x00071f14: push ss; add esp, 0x18; pop esi; ret; 
0x00095b19: push ss; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x0016b089: push ss; cmc; jmp dword ptr [eax]; 
0x000ef6e0: push ss; cmp dword ptr [ebx], ecx; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00133259: push ss; imul edi, edi, -1; add ebx, 0x32e43; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00168069: push ss; in al, dx; call dword ptr [eax - 0x68]; 
0x00095889: push ss; lea eax, dword ptr [ecx + eax + 0x20]; ret; 
0x000955c9: push ss; lea eax, dword ptr [edi + eax + 0x20]; pop edi; ret; 
0x00126626: push ss; mov byte ptr [edi + edx], al; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000d8911: push ss; mov byte ptr [edi + edx], al; xor eax, eax; pop esi; pop edi; ret; 
0x0008d8f1: push ss; mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x00094a24: push ss; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000915e1: push ss; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008d921: push ss; mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x0007249f: push ss; mov eax, dword ptr [edi + eax + 0x94]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 0xc]; 
0x000c9b88: push ss; mov ecx, dword ptr [ebp - 0x100]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x00025767: push ss; mov ecx, dword ptr [ebp - 0x1d4]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0010f941: push ss; mov edi, dword ptr [esp + 0x28]; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; ret; 
0x000b3d62: push ss; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00026961: push ss; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000949f5: push ss; mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000915c2: push ss; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008d902: push ss; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x0007238b: push ss; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x34]; 
0x0008f1f4: push ss; pop edi; pop esi; pop ebx; ret; 
0x0016780c: push ss; pop edi; std; jmp dword ptr [eax]; 
0x00131909: push ss; pop es; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x00184945: push ss; sahf; int1; jmp dword ptr [edx]; 
0x0006bfb1: push ss; xchg eax, esp; add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbbc], cl; xor al, 0x24; call dword ptr [edx + 0x18]; 
0x0018cf20: pushal; aam 0xf5; call edi; 
0x0016e7a0: pushal; adc al, 0xfc; call eax; 
0x00166f18: pushal; adc ch, bh; push eax; adc ch, bh; jmp dword ptr [edx]; 
0x00175201: pushal; add byte ptr [eax], al; pushfd; add ch, dh; call dword ptr [esi]; 
0x001852e1: pushal; add dword ptr [eax], eax; pop esp; xor edx, esi; jmp dword ptr [eax]; 
0x000e60b8: pushal; add esp, 0x64; ret; 
0x001940c3: pushal; add esp, dword ptr [ecx + 0x140e0a01]; inc ecx; ret; 
0x00113c3e: pushal; and al, byte ptr [eax]; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000023fa: pushal; and dword ptr [eax + 0x63], ecx; xchg eax, esp; or dword ptr [eax + 0x41001835], 0xffffffdd; out 0xa9, al; ret 0xbd07; 
0x00168e6c: pushal; call 0xdeca8e72; out dx, eax; call dword ptr [eax - 0x17]; 
0x00007968: pushal; clc; adc dword ptr [eax], eax; ret; 
0x001676d4: pushal; dec esi; std; jmp eax; 
0x00174310: pushal; dec esp; add byte ptr [eax], al; mov dl, ch; in al, dx; call dword ptr [eax]; 
0x001888fe: pushal; hlt; jmp dword ptr [edx]; 
0x0008c0dc: pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00087bec: pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x00172a00: pushal; imul ebx; call ebx; 
0x00168f14: pushal; in eax, dx; add byte ptr [eax], al; mov al, 0xee; out dx, eax; call eax; 
0x00007138: pushal; jp 0x7145; add byte ptr [0x22000000], dl; add byte ptr [eax + eax], cl; ret; 
0x00197110: pushal; mov al, 0xf7; call dword ptr [eax]; 
0x00175abd: pushal; mov bh, 0xee; jmp dword ptr [edx]; 
0x000dea0f: pushal; mov bl, 4; add byte ptr [ecx + 0xc45e1c3], al; add byte ptr [eax - 0x20787f32], al; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000b37eb: pushal; mov dword ptr [esi + 0x10], edx; mov esi, dword ptr [esp + 0x98]; add esp, 0x9c; ret; 
0x00114b77: pushal; mov dword ptr [esp], edx; call eax; 
0x0006db8f: pushal; mov eax, dword ptr [ebp + eax + 0x94]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x48]; 
0x001184a9: pushal; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x001286a1: pushal; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x0019b410: pushal; mov ebp, 0xdae80002; clc; call dword ptr [eax]; 
0x0011c322: pushal; mov edi, dword ptr [esp + 0x64]; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret 0xc; 
0x00023511: pushal; mov edi, dword ptr [esp + 0x64]; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret 8; 
0x00066342: pushal; mov edi, dword ptr [esp + 0x64]; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x001127d2: pushal; mov esi, dword ptr [esp + 0x64]; mov edi, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x0010b2ec: pushal; mov esp, 0xc483fff0; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000948d6: pushal; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094811: pushal; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00193be0: pushal; or al, 0xf7; call dword ptr [esi]; 
0x0008ea4c: pushal; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0016fcf6: pushal; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017467c: pushal; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00178b6e: pushal; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0016ebfc: pushal; or dword ptr [ecx], eax; add byte ptr [esi + 0x31], ch; cld; call eax; 
0x00166e18: pushal; or eax, 0xe30fffd; std; jmp eax; 
0x00179b89: pushal; out dx, eax; call dword ptr [eax]; 
0x00179b9d: pushal; out dx, eax; call dword ptr [ebx]; 
0x00179bbd: pushal; out dx, eax; jmp dword ptr [edx + 5]; 
0x0017b1f9: pushal; out dx, eax; jmp dword ptr [edx]; 
0x000ae95c: pushal; pop ds; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x0007a7e8: pushal; pop ebx; pop esi; pop edi; ret; 
0x00099aec: pushal; pop es; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x00118599: pushal; pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x000cc95c: pushal; pop esi; pop edi; pop ebp; ret; 
0x0017c5f2: pushal; push cs; add al, 0xc6; ret; 
0x0018b2d8: pushal; push cs; or byte ptr [esi + ecx + 4], al; ret; 
0x001677a0: pushal; push eax; std; jmp dword ptr [eax]; 
0x00186e68: pushal; push edx; call dword ptr [eax]; 
0x0000057c: pushal; ret 0x2096; 
0x0012f502: pushal; ret 0xf66; 
0x000d904c: pushal; ret; 
0x0017c460: pushal; rol byte ptr [eax], cl; add byte ptr [edx + edi*4], bh; out dx, eax; jmp dword ptr [ebx]; 
0x00193285: pushal; sbb dh, dh; jmp dword ptr [edx]; 
0x00170d60: pushal; sbb eax, dword ptr [eax]; add byte ptr [ebx - 0x15], cl; call dword ptr [ebx]; 
0x0014ac38: pushal; sbb eax, dword ptr [eax]; add byte ptr [ecx + 0xce82404], cl; ret; 
0x00198780: pushal; sbb eax, edi; call edx; 
0x0011c30c: pushal; sub ah, bh; jmp dword ptr [esi - 0x39]; 
0x00167194: pushal; sub al, 0xfd; push dword ptr [eax + 0xfffd2c]; sub eax, 0x2010fffd; std; call eax; 
0x000e32f7: pushal; test bl, bh; dec dword ptr [ebp - 0x47bbb7d]; dec dword ptr [edi]; inc esp; ret 0x45f6; 
0x00199b60: pushal; test eax, 0x5bbc0002; clc; call dword ptr [ecx]; 
0x0019a813: pushal; xchg byte ptr [edx], al; pop ebx; push cs; add al, 0xc6; ret; 
0x0007a8cd: pushal; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000974a8: pushfd; aas; out dx, eax; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x0016f16d: pushfd; add al, byte ptr [eax]; inc esp; xor edi, esi; jmp eax; 
0x00198e69: pushfd; add al, byte ptr [eax]; push esp; aaa; clc; jmp dword ptr [eax]; 
0x0016ed64: pushfd; add al, byte ptr es:[eax]; mov ah, 0x65; cld; jmp dword ptr [eax]; 
0x0006d49f: pushfd; add byte ptr [eax], al; add byte ptr [ebx + 0x34890c40], cl; and al, 0x29; ret 0xfac1; 
0x0012e2a8: pushfd; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 0x10; 
0x0012e4b3: pushfd; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 0x18; 
0x0005534b: pushfd; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000dc01d: pushfd; add byte ptr [eax], al; add cl, ch; ret 0xfffe; 
0x00175204: pushfd; add ch, dh; call dword ptr [esi]; 
0x000eae2b: pushfd; add dword ptr [eax], eax; add bl, dh; ret; 
0x00173f05: pushfd; add dword ptr [edx], ecx; ret; 
0x001194c5: pushfd; and al, 0x4c; add al, 0; add al, ch; mov dword ptr [0x81000108], eax; ret; 
0x001155c7: pushfd; and al, 0x7c; add al, 0; add al, ch; mov eax, dword ptr [0x81000147]; ret; 
0x000231c7: pushfd; and al, 0x8c; add byte ptr [eax], al; add al, ch; mov eax, dword ptr [0x8100106b]; ret; 
0x000c38ae: pushfd; and al, 0x8c; add byte ptr [eax], al; add al, ch; mov edx, 0x81000664; ret; 
0x000e38aa: pushfd; and al, 0x8c; add byte ptr [eax], al; add al, ch; mov esi, 0x81000464; ret; 
0x000e10a5: pushfd; and al, 0xc; add dword ptr [eax], eax; add al, ch; ret; 
0x00101ac5: pushfd; and al, 0xcc; add byte ptr [eax], al; add al, ch; mov dword ptr [0x81000282], eax; ret; 
0x0001b427: pushfd; call 0x126c80; mov eax, dword ptr [ebp - 0x64]; mov dword ptr [esp], esi; call eax; 
0x0016d488: pushfd; clc; stc; jmp esp; 
0x0018ec9c: pushfd; cli; add dword ptr [eax], eax; nop; and dh, dh; jmp dword ptr [edi]; 
0x0016edfc: pushfd; cwde; add al, byte ptr [eax]; outsd dx, dword ptr fs:[esi]; cld; jmp dword ptr [eax]; 
0x0018cf4c: pushfd; fadd dword ptr [ecx]; add cl, ah; fdivrp st(5); call dword ptr [eax]; 
0x00077bc0: pushfd; fcos; jmp dword ptr [ebp - 0x7d]; 
0x00174644: pushfd; fsubr st(4); jmp dword ptr [edi]; 
0x001725c4: pushfd; fucomp st(3); call dword ptr [ebp + 4]; 
0x0018a34c: pushfd; lodsb al, byte ptr [esi]; add dword ptr [eax], eax; mov ah, 0xf5; hlt; call dword ptr [eax]; 
0x0017929c: pushfd; mov al, byte ptr [0x51700000]; out dx, eax; jmp dword ptr [ebx]; 
0x0017a49c: pushfd; mov dl, 0; add al, al; jp 0x17a492; call dword ptr [ebp]; 
0x0004e390: pushfd; mov dword ptr [esp], edx; call eax; 
0x0001b42f: pushfd; mov dword ptr [esp], esi; call eax; 
0x0016b31c: pushfd; or al, 2; add ah, ah; div ebp; call eax; 
0x000c1f67: pushfd; or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 0x10; 
0x0017da14: pushfd; or dh, al; call dword ptr [ecx]; 
0x00189f94: pushfd; out 0xf4, al; jmp dword ptr [eax]; 
0x0018509c: pushfd; pop esi; add dword ptr [eax], eax; nop; sub dl, dh; jmp dword ptr [ecx]; 
0x000b9308: pushfd; push cs; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0016d2a4: pushfd; ret 2; 
0x00169614: pushfd; sbb byte ptr [ecx], al; add ah, dl; push -0x10; call dword ptr [eax + 0x19]; 
0x0014ac9f: pushfd; sbb eax, 0x4890000; and al, 0xe8; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xffec; 
0x0016cf21: pushfd; stc; call dword ptr [eax - 0x51]; 
0x0016cf29: pushfd; stc; dec dword ptr [eax - 0x1bfffd51]; popfd; stc; call esp; 
0x00119483: pushfd; sti; inc dword ptr [ebx]; xchg eax, esp; ret; 
0x00112a88: pushfd; sub byte ptr [eax], al; add byte ptr [ebp + 0x28982494], cl; add byte ptr [eax], al; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x000c5c68: pushfd; sub esi, edx; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x00166278: rcl ah, 0xfc; push eax; aam 0xfc; push dword ptr [eax]; aad 0xfc; jmp dword ptr [eax - 0x2b]; 
0x001884f0: rcl bh, 0xf3; jmp dword ptr [eax]; 
0x000792ba: rcl byte ptr [eax + 0x26748d], 1; add esp, 0x18; pop ebx; ret; 
0x00115fee: rcl byte ptr [eax - 0x74dbe375], 0x74; and al, 4; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00083fa9: rcl byte ptr [eax], 0x5f; pop esi; ret; 
0x0013d96f: rcl byte ptr [eax], 0x83; ret 0x5310; 
0x001407c5: rcl byte ptr [eax], 0x83; ret 0x5710; 
0x00126ad3: rcl byte ptr [eax], 0x83; ret 0x8304; 
0x00138e7d: rcl byte ptr [eax], 0x83; ret 0x8310; 
0x000a65a9: rcl byte ptr [eax], 0x83; ret 0x8910; 
0x0012f5a5: rcl byte ptr [eax], 0x89; ret 0xe281; 
0x0009486b: rcl byte ptr [eax], 0xe8; add eax, 0x81000955; rcl dword ptr [edx + 0x3000c60], 0xc; xchg eax, ecx; jmp ecx; 
0x0009156b: rcl byte ptr [eax], 0xe8; add eax, 0x81000988; rcl dword ptr [edx], -0x6d; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00094804: rcl byte ptr [eax], 0xf; mov esp, 0x5569e8d2; or dword ptr [eax], eax; add ecx, 0xc60f6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00091504: rcl byte ptr [eax], 0xf; mov esp, 0x8869e8d2; or dword ptr [eax], eax; add ecx, 0xc9376; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00135a22: rcl byte ptr [eax], 3; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000a8668: rcl byte ptr [eax], cl; push cs; add byte ptr [eax], al; pop esi; add eax, edx; ret; 
0x0013079d: rcl byte ptr [ebp - 0x3c7e0001], cl; push dword ptr [eax + 3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001983c0: rcl byte ptr [ecx + 0x75c0002], 0xf8; call edx; 
0x0007aa0c: rcl byte ptr [edi], 8; add cl, ch; ret 0xffd2; 
0x00025d79: rcl byte ptr [edi], cl; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x00167974: rcl byte ptr [edx - 0x6cbf0004], 0xfc; call eax; 
0x0018a341: rcl byte ptr [esi - 0xc], 1; jmp dword ptr [edx]; 
0x0016631c: rcl ch, 1; cld; call ebx; 
0x001753a9: rcl ch, 1; in eax, dx; jmp dword ptr [edx]; 
0x000f06a5: rcl dword ptr [eax + 0x29], 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000f02a5: rcl dword ptr [eax + 0x2d], 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00098527: rcl dword ptr [eax], -0x7b; div byte ptr [ebx + esi - 0x7d]; ret 0x8310; 
0x00095635: rcl dword ptr [eax], -0x7d; ret 0x2910; 
0x000a751a: rcl dword ptr [eax], -0x7d; ret 0x8310; 
0x00091530: rcl dword ptr [ebp - 0x6d], 0xc; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000949b2: rcl dword ptr [ebx + 9], 0; add ecx, 0xc5fce; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00135721: rcl dword ptr [ebx + eax], 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000aaca2: rcl dword ptr [ebx - 0x7d], 0xf; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00094972: rcl dword ptr [ebx], 0x60; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0003f8e4: rcl dword ptr [ecx], 0x37; push ss; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000740c2: rcl dword ptr [edi + 0x56], 0x31; not byte ptr [ebx - 0x7d]; in al, dx; adc al, 0xe8; mov dword ptr [0x81000b5c], eax; ret; 
0x0008f52a: rcl dword ptr [edi], -0x4d; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094873: rcl dword ptr [edx + 0x3000c60], 0xc; xchg eax, ecx; jmp ecx; 
0x000de7a3: rcl dword ptr [edx + 0x48], 0xc; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00091573: rcl dword ptr [edx], -0x6d; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000f059f: rcl dword ptr [esi + 0x2a], 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000f049f: rcl dword ptr [esi + 0x2b], 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000f039f: rcl dword ptr [esi + 0x2c], 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000f019f: rcl dword ptr [esi + 0x2e], 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00094830: rcl ebp, 0x60; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008de0e: rcl ebx, -0x38; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000914b1: rcl esp, -0x6d; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001696fc: rcr byte ptr [0x76440001], 0xf0; jmp eax; 
0x001677cc: rcr byte ptr [eax - 3], 0xff; push eax; pop ecx; std; jmp eax; 
0x000d9f3f: rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret 0x14; 
0x000dacef: rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret 0xc; 
0x000d037d: rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret 4; 
0x00017791: rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0002ed62: rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000d7a9d: rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret 0x14; 
0x000db4be: rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret 0x1c; 
0x000d0824: rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret 8; 
0x00022c9d: rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000c6aa2: rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0011b784: rcr byte ptr [ebx + 0x5f], 1; ret; 
0x00195280: rcr byte ptr [ebx + 2], 1; add byte ptr [edi], bl; xor al, 0xf7; call dword ptr [eax]; 
0x000e091d: rcr byte ptr [ebx - 0x3d], 0x89; fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 9; call dword ptr gs:[0x10]; 
0x00126f33: rcr byte ptr [ebx - 0x3d], 1; mov dword ptr [esp], edx; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 4]; 
0x000d0834: rcr byte ptr [ebx - 0x77], cl; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret 8; 
0x000da781: rcr byte ptr [ebx - 0x77], cl; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x0016cc34: rcr byte ptr [ecx + 0x46340002], 0xf9; jmp eax; 
0x00167008: rcr byte ptr [ecx], 0xfd; call dword ptr [eax + 0x1a]; 
0x00167008: rcr byte ptr [ecx], 0xfd; call dword ptr [eax + 0x1a]; std; jmp eax; 
0x001321b2: rcr byte ptr [edi + 0x5d], 0x5b; ret; 
0x0002f8ac: rcr byte ptr [edi + 0x5d], 1; ret; 
0x0014688a: rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x00083f9d: rcr byte ptr [edi + 0x5e], 1; ret; 
0x00167050: rcr byte ptr [edi], 1; std; jmp dword ptr [eax]; 
0x0006b89a: rcr byte ptr [edi], cl; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000ca2eb: rcr byte ptr [esi + 0x5f], 0x5d; ret 8; 
0x0007f35a: rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x000db87f: rcr byte ptr [esi + 0x5f], 1; pop ebp; ret 0x1c; 
0x000d0837: rcr byte ptr [esi + 0x5f], 1; pop ebp; ret 8; 
0x00022e69: rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x0002fe76: rcr byte ptr [esi + 0x5f], 1; ret; 
0x0009818d: rcr byte ptr [esi + 0x5f], cl; pop ebp; ret; 
0x001677e8: rcr byte ptr [esi - 3], cl; jmp dword ptr [edx]; 
0x00166f58: rcr byte ptr [esi], 1; std; jmp dword ptr [eax]; 
0x0019173d: rcr cl, 0xf5; jmp dword ptr [edx]; 
0x00166934: rcr dh, 0xfc; call dword ptr [eax - 0x21]; 
0x00166934: rcr dh, 0xfc; call dword ptr [eax - 0x21]; cld; jmp eax; 
0x000e0a98: rcr dword ptr [ebp + 0x25], 0xc; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef998: rcr dword ptr [ebp + 0x36], 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ed598: rcr dword ptr [ebp + 0x5a], 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00094928: rcr dword ptr [ebp + 0x60], 0xc; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008d2f4: rcr dword ptr [ebp - 0x2d], 0xc; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000e8198: rcr dword ptr [ebp - 0x52], 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0008e956: rcr dword ptr [ebx - 0x42], 0xc; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000f7b01: rcr dword ptr [ebx - 0x77], -0x38; pop esi; pop edi; pop ebp; ret; 
0x0008e916: rcr dword ptr [ebx], -0x42; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0002f84b: rcr dword ptr [ecx], -0x40; and eax, 2; sub eax, 1; pop esi; pop edi; ret; 
0x0008d3b2: rcr dword ptr [edi + 0x3000cd2], 0xc; cdq; jmp ecx; 
0x000efe96: rcr dword ptr [edi + 0x31], 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000de196: rcr dword ptr [edi + 0x4e], 0xc; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eb396: rcr dword ptr [edi + 0x7c], 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000c5596: rcr dword ptr [edi - 0x26], 0xd; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00127596: rcr dword ptr [edi - 0x46], 7; add byte ptr [ebx - 0x1737f], cl; jmp dword ptr [ebp + 3]; 
0x00023bd6: rcr dword ptr [edi], -0xc; pop ss; add byte ptr [ebx - 0x1577f], cl; jmp dword ptr [ebp - 0x75]; 
0x00123ed6: rcr dword ptr [edi], -0xf; pop es; add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp - 0x39]; 
0x000914eb: rcr dword ptr [edx + 0x3000c93], 0xc; xchg eax, ecx; jmp ecx; 
0x0008ea17: rcr dword ptr [edx + 0x3000cbd], 0xc; cdq; jmp ecx; 
0x000947eb: rcr dword ptr [edx], 0x61; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0018484f: rcr dword ptr [esi + 0xd1cfff1], 1; or al, 0x9e; int1; jmp dword ptr [edx]; 
0x00047bf5: rcr dword ptr [esi - 0x77], -0x38; pop edi; pop ebp; ret; 
0x00166348: rcr eax, cl; cld; call dword ptr [ebx]; 
0x00166348: rcr eax, cl; cld; call dword ptr [ebx]; frndint; call dword ptr [ebx - 0x27]; 
0x00166358: rcr ecx, cl; cld; call dword ptr [ebx]; 
0x0008d1f2: rcr edi, -0x2d; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008e9d2: rcr edi, -0x43; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0018cf80: rcr esi, -0xb; call dword ptr [eax]; 
0x0008d375: rcr esp, -0x2e; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00019340: rdtsc; mov dword ptr [ecx + 0x500], eax; mov dword ptr [ecx + 0x504], edx; pop ebx; ret; 
0x00117aea: rdtsc; ret 0x1689; 
0x0007e7da: rep movsb byte ptr es:[edi], byte ptr [esi]; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x00082974: rep movsd dword ptr es:[edi], dword ptr [esi]; mov eax, edi; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0008278a: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0007e249: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; cld; pop edi; ret; 
0x0007e05d: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x0007e033: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0007e223: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; pop edi; ret; 
0x0007e19c: rep movsd dword ptr es:[edi], dword ptr [esi]; xchg eax, edi; mov esi, edx; ret; 
0x0007e10b: rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0007e2d2: rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x000827bc: rep stosd dword ptr es:[edi], eax; mov eax, edx; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0007e107: rep stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0007e2ce: rep stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x00008fec: ret 0; 
0x0002607e: ret 0x100; 
0x0000098f: ret 0x1010; 
0x00025330: ret 0x101; 
0x00026fb1: ret 0x102d; 
0x000abd15: ret 0x103; 
0x000300b3: ret 0x104; 
0x00109c2b: ret 0x1079; 
0x0007c03b: ret 0x1089; 
0x0001806b: ret 0x108; 
0x000006de: ret 0x1092; 
0x00017e7a: ret 0x10; 
0x000aa077: ret 0x10e9; 
0x000d17bb: ret 0x1103; 
0x0013447e: ret 0x110; 
0x00054f30: ret 0x1174; 
0x0001cf00: ret 0x1189; 
0x00009f84: ret 0x11; 
0x00000209: ret 0x120; 
0x00005379: ret 0x12; 
0x00072434: ret 0x130b; 
0x000d45a9: ret 0x133c; 
0x000a544d: ret 0x1375; 
0x000ccec8: ret 0x137d; 
0x000753fa: ret 0x138; 
0x0004eaa7: ret 0x13; 
0x00068e34: ret 0x13a1; 
0x000d5cfd: ret 0x13e9; 
0x000bc5f5: ret 0x13eb; 
0x000632d4: ret 0x13ff; 
0x0008207c: ret 0x1403; 
0x0011c76c: ret 0x1421; 
0x000adbc0: ret 0x1474; 
0x000caac5: ret 0x1489; 
0x000e20aa: ret 0x148d; 
0x000d7aa2: ret 0x14; 
0x00054b34: ret 0x14e4; 
0x0006ddc9: ret 0x1574; 
0x0008664a: ret 0x15; 
0x000955c7: ret 0x1676; 
0x00095887: ret 0x167c; 
0x0011080e: ret 0x1688; 
0x00117aec: ret 0x1689; 
0x00045368: ret 0x16eb; 
0x0001c4ff: ret 0x172b; 
0x000ecd62: ret 0x1789; 
0x00056106: ret 0x178b; 
0x00026d78: ret 0x17; 
0x0011371e: ret 0x17e9; 
0x000e6162: ret 0x180; 
0x000b7cbf: ret 0x1877; 
0x0003064c: ret 0x189; 
0x0005d339: ret 0x18; 
0x000a8538: ret 0x18b; 
0x00038350: ret 0x18e9; 
0x00056a71: ret 0x1974; 
0x00159506: ret 0x198; 
0x00031efb: ret 0x1a73; 
0x0007d932: ret 0x1a74; 
0x000860ca: ret 0x1a; 
0x00036b9d: ret 0x1abe; 
0x000b9ed8: ret 0x1ae9; 
0x00074d1a: ret 0x1b74; 
0x0002b303: ret 0x1b8; 
0x00001b15: ret 0x1bb7; 
0x000261d5: ret 0x1be; 
0x000034ff: ret 0x1bf9; 
0x0007da19: ret 0x1c74; 
0x0005972b: ret 0x1c77; 
0x000a39ef: ret 0x1c8b; 
0x000d7dd8: ret 0x1c; 
0x00127180: ret 0x1d0; 
0x00150860: ret 0x1d4; 
0x00150ff8: ret 0x1d5; 
0x0013a11e: ret 0x1d72; 
0x000adaf0: ret 0x1d74; 
0x0009505e: ret 0x1d75; 
0x00002141: ret 0x1dd4; 
0x00136b6e: ret 0x1e72; 
0x000ad8c0: ret 0x1e74; 
0x000f7a63: ret 0x1e7e; 
0x0005cced: ret 0x1ee9; 
0x000305de: ret 0x1f74; 
0x0014993e: ret 0x1f75; 
0x000a7dc1: ret 0x1fb8; 
0x0002608a: ret 0x200; 
0x0012bbe3: ret 0x202; 
0x0011c7ed: ret 0x2074; 
0x0000057d: ret 0x2096; 
0x00108bad: ret 0x211; 
0x000836d4: ret 0x2174; 
0x000f6ce9: ret 0x2176; 
0x0002e29a: ret 0x2177; 
0x001085ad: ret 0x217; 
0x000003cc: ret 0x224; 
0x00120335: ret 0x2275; 
0x000c9000: ret 0x22e9; 
0x001065ad: ret 0x237; 
0x00113a5f: ret 0x2394; 
0x00002583: ret 0x23cb; 
0x00002798: ret 0x244f; 
0x0007cfaa: ret 0x2474; 
0x0012bb01: ret 0x2477; 
0x0003c01a: ret 0x24; 
0x0002d099: ret 0x24e9; 
0x00081cd8: ret 0x2501; 
0x000f0ac5: ret 0x2530; 
0x000d9520: ret 0x2574; 
0x0004b4fa: ret 0x25e9; 
0x000955b7: ret 0x2676; 
0x00095877: ret 0x267c; 
0x0003f3bc: ret 0x26e9; 
0x00095079: ret 0x275; 
0x000843fa: ret 0x280f; 
0x00042cc5: ret 0x2874; 
0x0019154b: ret 0x28; 
0x000d529f: ret 0x28b; 
0x0008d208: ret 0x2910; 
0x00095708: ret 0x2940; 
0x0010c754: ret 0x2974; 
0x00063cb3: ret 0x29e9; 
0x00045241: ret 0x29eb; 
0x00001a1d: ret 0x2a63; 
0x00097c52: ret 0x2a76; 
0x000d65fc: ret 0x2a7f; 
0x000a8b92: ret 0x2b3c; 
0x000583fe: ret 0x2b74; 
0x0002ba67: ret 0x2b8; 
0x000e3e69: ret 0x2c6; 
0x0010fc26: ret 0x2c72; 
0x0013089a: ret 0x2c73; 
0x000031d6: ret 0x2ec0; 
0x00041d2c: ret 0x2ee9; 
0x000ccf5c: ret 0x301; 
0x00001a94: ret 0x306a; 
0x0001c405: ret 0x3101; 
0x000b8c88: ret 0x311e; 
0x0002659b: ret 0x3166; 
0x00083639: ret 0x3174; 
0x0013125b: ret 0x3273; 
0x00045865: ret 0x3274; 
0x0002aeba: ret 0x3377; 
0x0014fd58: ret 0x33; 
0x000026d4: ret 0x33b1; 
0x00017f26: ret 0x348d; 
0x000db480: ret 0x34eb; 
0x0001bb30: ret 0x3574; 
0x0006f35f: ret 0x3675; 
0x001234a7: ret 0x3676; 
0x00095867: ret 0x367c; 
0x0010fce1: ret 0x3772; 
0x00107f66: ret 0x3775; 
0x0007020b: ret 0x3776; 
0x00095043: ret 0x3875; 
0x00009444: ret 0x38; 
0x00159386: ret 0x38ae; 
0x0001ed62: ret 0x3901; 
0x00021c33: ret 0x3902; 
0x0001d265: ret 0x3904; 
0x000790fc: ret 0x3908; 
0x000aa911: ret 0x3909; 
0x00043257: ret 0x390c; 
0x00025723: ret 0x3910; 
0x00071949: ret 0x3934; 
0x0010ca6c: ret 0x3974; 
0x000955a4: ret 0x3976; 
0x00042db0: ret 0x3977; 
0x000419b3: ret 0x3a74; 
0x00149923: ret 0x3a75; 
0x000429f2: ret 0x3a77; 
0x000c0a1a: ret 0x3a8b; 
0x0001ceda: ret 0x3b01; 
0x000f172a: ret 0x3b02; 
0x00056cea: ret 0x3b0c; 
0x00103ad4: ret 0x3b10; 
0x000eeab1: ret 0x3b2; 
0x00075750: ret 0x3b30; 
0x000b3533: ret 0x3b34; 
0x000f75b4: ret 0x3b74; 
0x000282c9: ret 0x3c01; 
0x000ed4b1: ret 0x3c8; 
0x000a8876: ret 0x3c8d; 
0x0004c3ca: ret 0x3ce9; 
0x0004c60a: ret 0x3d; 
0x0000044f: ret 0x3e00; 
0x00130885: ret 0x3e73; 
0x0005ad92: ret 0x3e77; 
0x000406c2: ret 0x3ee9; 
0x00095b97: ret 0x3f; 
0x0003113d: ret 0x3ff; 
0x000311a7: ret 0x3fff; 
0x000db3f1: ret 0x403c; 
0x00105f7e: ret 0x4075; 
0x000008f5: ret 0x4081; 
0x00027d40: ret 0x408b; 
0x0004246a: ret 0x408d; 
0x0002952c: ret 0x40c7; 
0x0005971c: ret 0x4177; 
0x000a85a1: ret 0x4240; 
0x000a89f1: ret 0x428b; 
0x000b9eb0: ret 0x42e9; 
0x0011df79: ret 0x430f; 
0x0011423a: ret 0x4375; 
0x00096bc1: ret 0x4401; 
0x000965ab: ret 0x4403; 
0x00077929: ret 0x440b; 
0x0008022e: ret 0x442b; 
0x001025b8: ret 0x4439; 
0x000fb84b: ret 0x443b; 
0x00021653: ret 0x4489; 
0x0001f290: ret 0x448b; 
0x0004ff35: ret 0x448d; 
0x00036265: ret 0x44c7; 
0x000371c8: ret 0x44f6; 
0x0011077f: ret 0x4539; 
0x0001f069: ret 0x4574; 
0x0004972d: ret 0x4589; 
0x00017596: ret 0x458b; 
0x0003f188: ret 0x458d; 
0x000c91a4: ret 0x45c7; 
0x000e2183: ret 0x45f6; 
0x00114680: ret 0x463b; 
0x00053ea3: ret 0x4674; 
0x000e0677: ret 0x4676; 
0x000d191d: ret 0x4689; 
0x0006cccc: ret 0x468b; 
0x00098a9e: ret 0x474; 
0x000760db: ret 0x475; 
0x0007c2e1: ret 0x476; 
0x000d1f3a: ret 0x4789; 
0x00025805: ret 0x478b; 
0x0002aaaa: ret 0x4872; 
0x00100fd1: ret 0x488d; 
0x0015948e: ret 0x48; 
0x000365fe: ret 0x48b; 
0x0002b2cb: ret 0x48d; 
0x000836aa: ret 0x4974; 
0x00147ce3: ret 0x498d; 
0x00022f4a: ret 0x49e9; 
0x00003987: ret 0x49ec; 
0x000543d0: ret 0x4a74; 
0x0006d684: ret 0x4ae9; 
0x000a15d6: ret 0x4aeb; 
0x0006de81: ret 0x4b73; 
0x000e6b42: ret 0x4b74; 
0x000cd065: ret 0x4c0f; 
0x00131241: ret 0x4c73; 
0x00052791: ret 0x4c74; 
0x0002e25f: ret 0x4c77; 
0x00030305: ret 0x4c7; 
0x00019d2c: ret 0x4c89; 
0x00025bbb: ret 0x4d0f; 
0x000a50af: ret 0x4d89; 
0x000b8dec: ret 0x4d8b; 
0x0001d701: ret 0x4e0f; 
0x000f95fe: ret 0x4e74; 
0x000b342a: ret 0x4e89; 
0x000ce9e5: ret 0x4e8b; 
0x00097cab: ret 0x4eb; 
0x0002d0d4: ret 0x4ee9; 
0x0001cd27: ret 0x4f0f; 
0x0004c71b: ret 0x4f8b; 
0x000ce076: ret 0x5021; 
0x0019c060: ret 0x502; 
0x00130870: ret 0x5073; 
0x00027dea: ret 0x508b; 
0x00039fed: ret 0x508d; 
0x0004b59a: ret 0x50e9; 
0x00000356: ret 0x510; 
0x000545cd: ret 0x5174; 
0x00025bbe: ret 0x518b; 
0x000ab135: ret 0x528; 
0x00074346: ret 0x528b; 
0x0008437e: ret 0x528d; 
0x00004234: ret 0x52; 
0x0013d972: ret 0x5310; 
0x00095028: ret 0x5375; 
0x0004c3b3: ret 0x53e9; 
0x00076aa4: ret 0x5403; 
0x000c6900: ret 0x5408; 
0x0001f2d7: ret 0x542b; 
0x000acb43: ret 0x5439; 
0x0007ee49: ret 0x5474; 
0x00074245: ret 0x5488; 
0x00019e0d: ret 0x5489; 
0x00034df4: ret 0x548b; 
0x0006527b: ret 0x548d; 
0x0015930c: ret 0x5508; 
0x00120920: ret 0x5539; 
0x0001fdb1: ret 0x5574; 
0x00149908: ret 0x5575; 
0x000023e2: ret 0x5576; 
0x000a5599: ret 0x5589; 
0x000cfa80: ret 0x558b; 
0x0004b1c5: ret 0x55e9; 
0x00131b54: ret 0x5608; 
0x0002d9df: ret 0x5616; 
0x00069576: ret 0x562b; 
0x000a75f5: ret 0x5657; 
0x0007454f: ret 0x5675; 
0x0011426b: ret 0x5689; 
0x000f976c: ret 0x568d; 
0x001302b5: ret 0x5708; 
0x001407c8: ret 0x5710; 
0x000d720f: ret 0x5739; 
0x0006f86e: ret 0x5774; 
0x000714ea: ret 0x57e9; 
0x00158fe0: ret 0x591c; 
0x0000c704: ret 0x59; 
0x0002d627: ret 0x59ce; 
0x000032c9: ret 0x5a51; 
0x00060d03: ret 0x5a74; 
0x00002fbf: ret 0x5bdb; 
0x0002d3cd: ret 0x5c28; 
0x00040c04: ret 0x5c8b; 
0x00085b7a: ret 0x5c8d; 
0x00003089: ret 0x5cbe; 
0x0014572c: ret 0x5d5e; 
0x00095300: ret 0x5deb; 
0x0006cfc7: ret 0x5e75; 
0x000d08bc: ret 0x5ee9; 
0x000ea67a: ret 0x5f; 
0x0001c25a: ret 0x605; 
0x0001b55a: ret 0x612; 
0x000026cd: ret 0x617e; 
0x0013085b: ret 0x6273; 
0x00038b57: ret 0x62e9; 
0x000e1e2b: ret 0x64e9; 
0x000e92c5: ret 0x658d; 
0x0002c67f: ret 0x6601; 
0x0008cae3: ret 0x6640; 
0x000027eb: ret 0x6642; 
0x00131227: ret 0x6673; 
0x0006031c: ret 0x6674; 
0x0001bbdf: ret 0x66e9; 
0x000a8999: ret 0x673; 
0x000955d7: ret 0x676; 
0x00158fff: ret 0x67b2; 
0x00095897: ret 0x67c; 
0x000a88e4: ret 0x67d; 
0x00101dc8: ret 0x67e; 
0x000371fd: ret 0x688d; 
0x00038a64: ret 0x689; 
0x00021693: ret 0x68b; 
0x00038200: ret 0x68e9; 
0x00054240: ret 0x6974; 
0x000aa6a1: ret 0x6a8d; 
0x00097702: ret 0x6ae9; 
0x000ba75d: ret 0x6b8; 
0x00003d9e: ret 0x6bba; 
0x00077ba9: ret 0x6c74; 
0x00019c6a: ret 0x6c89; 
0x00021f5c: ret 0x6c8b; 
0x000d53d7: ret 0x6d74; 
0x000e3fa7: ret 0x6e73; 
0x000a3285: ret 0x6ee9; 
0x00123840: ret 0x7089; 
0x00132534: ret 0x70a; 
0x0007b0b1: ret 0x70e9; 
0x0011c5a1: ret 0x7239; 
0x000ab6bf: ret 0x728d; 
0x000560bf: ret 0x72e9; 
0x000d95c2: ret 0x7378; 
0x000201c4: ret 0x737e; 
0x00049c8c: ret 0x73e9; 
0x00111f92: ret 0x7401; 
0x000cb62d: ret 0x7402; 
0x0007a744: ret 0x7403; 
0x000cb759: ret 0x7404; 
0x000cb766: ret 0x7408; 
0x000958eb: ret 0x7410; 
0x00064c59: ret 0x7420; 
0x000d5b19: ret 0x7439; 
0x000e4973: ret 0x7440; 
0x00048a91: ret 0x7450; 
0x00020035: ret 0x7480; 
0x000962fa: ret 0x7489; 
0x000268c9: ret 0x748b; 
0x0002d5cb: ret 0x748d; 
0x0001fbaf: ret 0x7501; 
0x0008f8a7: ret 0x7502; 
0x0010387c: ret 0x7503; 
0x0008f8ac: ret 0x7504; 
0x0010fd7b: ret 0x7507; 
0x00069fbc: ret 0x7508; 
0x0008f8c1: ret 0x7510; 
0x000ad9a7: ret 0x7518; 
0x0008f8c6: ret 0x7520; 
0x0008f8cb: ret 0x7540; 
0x00020012: ret 0x7580; 
0x000b9df4: ret 0x768d; 
0x000a796b: ret 0x76c; 
0x000bdaf2: ret 0x76e9; 
0x00065aeb: ret 0x774; 
0x00073132: ret 0x775; 
0x000faecb: ret 0x77e; 
0x000ee232: ret 0x7801; 
0x000a3cee: ret 0x788b; 
0x000dac46: ret 0x789; 
0x00074d14: ret 0x78b; 
0x00002efc: ret 0x793b; 
0x001486c1: ret 0x7c06; 
0x001486d1: ret 0x7c07; 
0x001486e1: ret 0x7c09; 
0x001486f1: ret 0x7c0a; 
0x00148701: ret 0x7c0b; 
0x00148711: ret 0x7c0d; 
0x00148721: ret 0x7c0e; 
0x00148731: ret 0x7c0f; 
0x00040066: ret 0x7c83; 
0x0006c36c: ret 0x7c89; 
0x0001f5c7: ret 0x7c8b; 
0x00101957: ret 0x7c8d; 
0x000df02e: ret 0x7ce9; 
0x00059342: ret 0x7d77; 
0x00017700: ret 0x7d80; 
0x000cfbc1: ret 0x7d83; 
0x0004c412: ret 0x7de9; 
0x001302f5: ret 0x7e10; 
0x0002bff0: ret 0x8001; 
0x0004f8ef: ret 0x8004; 
0x000aab51: ret 0x8008; 
0x000cf63f: ret 0x804; 
0x0010b15e: ret 0x8080; 
0x00074009: ret 0x808b; 
0x00132d35: ret 0x80; 
0x00003944: ret 0x80fc; 
0x000c2b03: ret 0x8101; 
0x0007515c: ret 0x8108; 
0x0011bcb1: ret 0x8112; 
0x00047031: ret 0x8120; 
0x000ad151: ret 0x8166; 
0x000b9a86: ret 0x81c3; 
0x0003a0af: ret 0x820f; 
0x00127171: ret 0x828b; 
0x0001dc70: ret 0x8301; 
0x0002c742: ret 0x8302; 
0x001105f3: ret 0x8303; 
0x0001aad6: ret 0x8304; 
0x000c3496: ret 0x8305; 
0x00098381: ret 0x8308; 
0x0010c949: ret 0x830c; 
0x0003d04d: ret 0x830f; 
0x00097c67: ret 0x8310; 
0x000f9338: ret 0x8318; 
0x00017a7c: ret 0x831e; 
0x000bbb92: ret 0x831f; 
0x0007df55: ret 0x8320; 
0x0012526d: ret 0x8328; 
0x000ab918: ret 0x8334; 
0x0008cb34: ret 0x8340; 
0x00029580: ret 0x8360; 
0x0001bbb5: ret 0x8365; 
0x0007b514: ret 0x8389; 
0x00028cd6: ret 0x838b; 
0x000243c2: ret 0x838d; 
0x000e68fe: ret 0x8390; 
0x000a85ec: ret 0x83b8; 
0x000702b6: ret 0x83eb; 
0x0002831e: ret 0x8401; 
0x0007c4c5: ret 0x8404; 
0x00017a69: ret 0x840f; 
0x00035577: ret 0x843b; 
0x000fd88f: ret 0x8448; 
0x000d25bd: ret 0x8488; 
0x000d3464: ret 0x8489; 
0x000ac63b: ret 0x848b; 
0x00038467: ret 0x848d; 
0x0006adad: ret 0x84eb; 
0x0001b2f4: ret 0x8501; 
0x00043429: ret 0x8503; 
0x0004be45: ret 0x8504; 
0x000d52a7: ret 0x8505; 
0x000a74b1: ret 0x8506; 
0x00029aac: ret 0x8508; 
0x000a4cad: ret 0x850; 
0x0014b112: ret 0x850c; 
0x0001bb8e: ret 0x850f; 
0x00098036: ret 0x8510; 
0x000afede: ret 0x8530; 
0x0004eb83: ret 0x8539; 
0x00095bea: ret 0x8540; 
0x00045082: ret 0x8588; 
0x000185a4: ret 0x8589; 
0x000b194d: ret 0x858b; 
0x000c8ebc: ret 0x85c7; 
0x000aa314: ret 0x85e9; 
0x00021aa4: ret 0x860f; 
0x000e6117: ret 0x8675; 
0x000244f0: ret 0x870f; 
0x00158926: ret 0x871e; 
0x00019fc6: ret 0x8801; 
0x000c10cb: ret 0x8804; 
0x00024eaf: ret 0x880f; 
0x0000254c: ret 0x88ad; 
0x0001f276: ret 0x8901; 
0x0002c269: ret 0x8902; 
0x0001ef64: ret 0x8904; 
0x000a7909: ret 0x8907; 
0x0005d751: ret 0x8908; 
0x0002318d: ret 0x8909; 
0x0004a2f4: ret 0x890c; 
0x000a65ac: ret 0x8910; 
0x00118a99: ret 0x891c; 
0x000ec24e: ret 0x891e; 
0x00117a82: ret 0x891f; 
0x00043410: ret 0x8920; 
0x0001ee41: ret 0x8924; 
0x000b3329: ret 0x8934; 
0x0001bd2a: ret 0x893c; 
0x000d442f: ret 0x8940; 
0x000fd571: ret 0x8948; 
0x000e8ae2: ret 0x8957; 
0x000a565d: ret 0x895e; 
0x000af3df: ret 0x8964; 
0x0002e1d4: ret 0x8965; 
0x000e45cf: ret 0x8966; 
0x000e3d86: ret 0x8975; 
0x0007d90d: ret 0x8a04; 
0x000024eb: ret 0x8a4c; 
0x000264c3: ret 0x8a72; 
0x0002d108: ret 0x8ae9; 
0x0001ccc1: ret 0x8b01; 
0x000ff401: ret 0x8b02; 
0x00029a92: ret 0x8b04; 
0x000ac31d: ret 0x8b08; 
0x000c8a83: ret 0x8b0c; 
0x0007c461: ret 0x8b10; 
0x000fa61c: ret 0x8b18; 
0x00043190: ret 0x8b1e; 
0x001110d6: ret 0x8b28; 
0x00031c9e: ret 0x8b90; 
0x0001c75e: ret 0x8b; 
0x0001b3cf: ret 0x8beb; 
0x00117da3: ret 0x8c0b; 
0x0000382e: ret 0x8cba; 
0x00019ff4: ret 0x8d01; 
0x00055e05: ret 0x8d04; 
0x00095b31: ret 0x8d10; 
0x000ce5ae: ret 0x8d38; 
0x00051f74: ret 0x8d3b; 
0x0001b327: ret 0x8d3c; 
0x000265a0: ret 0x8d74; 
0x0004d256: ret 0x8d89; 
0x0004bc5a: ret 0x8d90; 
0x000b9947: ret 0x8dc3; 
0x0006e40a: ret 0x8dd; 
0x0004948d: ret 0x8e0f; 
0x0003f563: ret 0x901; 
0x00018750: ret 0x904; 
0x0003f785: ret 0x9066; 
0x000a7b45: ret 0x90c3; 
0x000fd33e: ret 0x9188; 
0x000e5604: ret 0x920f; 
0x00074361: ret 0x933b; 
0x000a9a2f: ret 0x9389; 
0x0006589c: ret 0x940f; 
0x00035790: ret 0x942b; 
0x00149959: ret 0x9474; 
0x0009a7d7: ret 0x948b; 
0x0012921b: ret 0x94; 
0x000aa2ac: ret 0x950f; 
0x00053782: ret 0x9520; 
0x000490a9: ret 0x952b; 
0x0004e823: ret 0x9539; 
0x0004e8d6: ret 0x953b; 
0x000948b1: ret 0x954; 
0x000cd1b9: ret 0x9574; 
0x00053712: ret 0x9588; 
0x000431ce: ret 0x9589; 
0x00050850: ret 0x958b; 
0x0002cfc8: ret 0x95e9; 
0x000b5b76: ret 0x95eb; 
0x0010c934: ret 0x966; 
0x0004998e: ret 0x974; 
0x00003810: ret 0x975; 
0x000dffdf: ret 0x9775; 
0x0004b645: ret 0x97e9; 
0x0012f8d3: ret 0x99e9; 
0x0002d143: ret 0x9ae9; 
0x000e0f19: ret 0x9b8; 
0x001300db: ret 0x9be9; 
0x00073934: ret 0x9beb; 
0x0010c07c: ret 0x9c; 
0x0006af22: ret 0x9ceb; 
0x00074d7b: ret 0x9f74; 
0x0016fc9a: ret 0xa03; 
0x0002cc5c: ret 0xa1eb; 
0x000f945b: ret 0xa274; 
0x000585fe: ret 0xa477; 
0x000c8d7d: ret 0xa5e9; 
0x000a7928: ret 0xa5eb; 
0x0009f87d: ret 0xa72; 
0x000bd49e: ret 0xa74; 
0x000f7a55: ret 0xa7d; 
0x0007da93: ret 0xa; 
0x0011f01b: ret 0xaaeb; 
0x0002aef1: ret 0xab89; 
0x000a3148: ret 0xabe9; 
0x000e6556: ret 0xac75; 
0x000d631f: ret 0xac8b; 
0x000d9837: ret 0xace9; 
0x00000532: ret 0xad0; 
0x000ab11f: ret 0xad5; 
0x0011ef33: ret 0xaeeb; 
0x001135fa: ret 0xaf; 
0x0011e6b3: ret 0xb0eb; 
0x000dffc5: ret 0xb175; 
0x000513cb: ret 0xb375; 
0x00020f0e: ret 0xb48b; 
0x0007cb78: ret 0xb48d; 
0x0002d177: ret 0xb4e9; 
0x0004e2a2: ret 0xb5e9; 
0x0002e736: ret 0xb60f; 
0x00072109: ret 0xb68d; 
0x00021c85: ret 0xb70f; 
0x000a7e71: ret 0xb801; 
0x0002d243: ret 0xb8; 
0x0013258a: ret 0xb9; 
0x000a662a: ret 0xb; 
0x000031cd: ret 0xba88; 
0x00051592: ret 0xbb74; 
0x000ed8d5: ret 0xbb8d; 
0x00117e46: ret 0xbc80; 
0x0009a9dc: ret 0xbc83; 
0x000201c8: ret 0xbc8b; 
0x00002408: ret 0xbd07; 
0x00077399: ret 0xbd0b; 
0x00018f7b: ret 0xbd80; 
0x000429ac: ret 0xbd83; 
0x0004662c: ret 0xbd89; 
0x00042c9c: ret 0xbe0f; 
0x000e71d2: ret 0xbf04; 
0x0007cbbe: ret 0xbfeb; 
0x00019549: ret 0xc031; 
0x0007e2ec: ret 0xc083; 
0x0001d704: ret 0xc085; 
0x000842af: ret 0xc0be; 
0x00194ddb: ret 0xc0e; 
0x000205d1: ret 0xc101; 
0x000376b6: ret 0xc102; 
0x000553b0: ret 0xc110; 
0x00019fe6: ret 0xc129; 
0x00019fd8: ret 0xc183; 
0x0006f757: ret 0xc189; 
0x0003363a: ret 0xc269; 
0x000af3dd: ret 0xc26b; 
0x00072337: ret 0xc281; 
0x00062eeb: ret 0xc283; 
0x0006d936: ret 0xc289; 
0x001310a9: ret 0xc2bb; 
0x00085cfe: ret 0xc301; 
0x000f0d1a: ret 0xc35e; 
0x000d8745: ret 0xc374; 
0x000d1cb2: ret 0xc375; 
0x00067900: ret 0xc3f3; 
0x000db4b6: ret 0xc481; 
0x00022e5f: ret 0xc483; 
0x00157a62: ret 0xc4c3; 
0x000de334: ret 0xc4c; 
0x00019a32: ret 0xc589; 
0x000518d9: ret 0xc5e9; 
0x000497a6: ret 0xc5eb; 
0x0006fb61: ret 0xc601; 
0x000c3b5a: ret 0xc616; 
0x0006ff69: ret 0xc621; 
0x000ffc1d: ret 0xc674; 
0x00081ede: ret 0xc683; 
0x000d8e7f: ret 0xc689; 
0x0003f206: ret 0xc6; 
0x0001ad69: ret 0xc701; 
0x00082a84: ret 0xc702; 
0x00117833: ret 0xc707; 
0x00124539: ret 0xc709; 
0x00029535: ret 0xc740; 
0x00073139: ret 0xc74; 
0x000ba240: ret 0xc75; 
0x0004acdb: ret 0xc783; 
0x00127ee9: ret 0xc789; 
0x00041d59: ret 0xc7; 
0x0002aca8: ret 0xc801; 
0x000774a5: ret 0xc883; 
0x00048906: ret 0xc889; 
0x00063887: ret 0xc89; 
0x0002aabc: ret 0xc8d; 
0x0002ae9e: ret 0xc984; 
0x000291dd: ret 0xc985; 
0x00007aa4: ret 0xc; 
0x0012889d: ret 0xca39; 
0x0002e051: ret 0xca81; 
0x0012f492: ret 0xca85; 
0x000ee2ce: ret 0xcad8; 
0x0002cd9a: ret 0xcae9; 
0x000b9e4d: ret 0xcb87; 
0x000d86c1: ret 0xcb8; 
0x000ee8fd: ret 0xcbeb; 
0x00075659: ret 0xcc75; 
0x0015934a: ret 0xcca7; 
0x0010cd0c: ret 0xcd89; 
0x00053c41: ret 0xce01; 
0x001313a5: ret 0xce89; 
0x000a5656: ret 0xcf74; 
0x0012f343: ret 0xcf89; 
0x000e2aa3: ret 0xcfe9; 
0x00029a2b: ret 0xd001; 
0x001210e0: ret 0xd008; 
0x00037ead: ret 0xd009; 
0x000a9515: ret 0xd021; 
0x000b984f: ret 0xd028; 
0x000a4c65: ret 0xd029; 
0x000305e4: ret 0xd039; 
0x0001ed19: ret 0xd089; 
0x0004a4d4: ret 0xd0f7; 
0x000c6fd9: ret 0xd101; 
0x00018f14: ret 0xd104; 
0x000ab3cd: ret 0xd129; 
0x000a8157: ret 0xd138; 
0x0011aae9: ret 0xd139; 
0x0001a02a: ret 0xd1eb; 
0x000a77ac: ret 0xd269; 
0x000af70c: ret 0xd26b; 
0x00037895: ret 0xd274; 
0x00047cd1: ret 0xd284; 
0x0002312e: ret 0xd285; 
0x000370c7: ret 0xd2f7; 
0x000a2791: ret 0xd318; 
0x0003d663: ret 0xd340; 
0x000f71f3: ret 0xd3eb; 
0x0003f249: ret 0xd476; 
0x000d2e68: ret 0xd4eb; 
0x000c31ad: ret 0xd501; 
0x0004ab75: ret 0xd589; 
0x000fc23e: ret 0xd5eb; 
0x000807ee: ret 0xd601; 
0x000bc8c6: ret 0xd639; 
0x00049051: ret 0xd689; 
0x000490bc: ret 0xd701; 
0x00071639: ret 0xd739; 
0x000f1d76: ret 0xd73; 
0x000d0810: ret 0xd75; 
0x000d6966: ret 0xd772; 
0x0003f348: ret 0xd77; 
0x00027928: ret 0xd789; 
0x0005cd34: ret 0xd7e9; 
0x0007a7bb: ret 0xd8eb; 
0x0006a360: ret 0xd8f7; 
0x00056f7d: ret 0xd; 
0x0002d791: ret 0xdaf7; 
0x0004bf31: ret 0xdb01; 
0x0008c9fa: ret 0xdb31; 
0x000f7ae2: ret 0xdb74; 
0x000d99d3: ret 0xdbeb; 
0x00158cb5: ret 0xde9e; 
0x00064946: ret 0xdeeb; 
0x0004b5fd: ret 0xdfe9; 
0x00125fa6: ret 0xdfeb; 
0x000003b9: ret 0xe000; 
0x000fc43d: ret 0xe075; 
0x0001d70c: ret 0xe083; 
0x00185aad: ret 0xe0a; 
0x0006c70f: ret 0xe0c1; 
0x0010506c: ret 0xe181; 
0x00095b01: ret 0xe183; 
0x000477ad: ret 0xe25; 
0x00147815: ret 0xe280; 
0x0001fe62: ret 0xe281; 
0x00017572: ret 0xe283; 
0x000bcb3c: ret 0xe289; 
0x00032abb: ret 0xe2c1; 
0x000d3b50: ret 0xe2d3; 
0x0019156f: ret 0xe41; 
0x000d2d19: ret 0xe577; 
0x000ed29d: ret 0xe74; 
0x0004042e: ret 0xe75; 
0x000740fd: ret 0xe783; 
0x000459a1: ret 0xe7e9; 
0x000cf156: ret 0xe801; 
0x000ba588: ret 0xe87; 
0x0003f7a5: ret 0xe883; 
0x0004a845: ret 0xe889; 
0x0010c8b8: ret 0xe89; 
0x0006f221: ret 0xe8b; 
0x0002f767: ret 0xe8c1; 
0x0002847b: ret 0xe901; 
0x0002849d: ret 0xe902; 
0x000e8b8f: ret 0xe903; 
0x00115846: ret 0xe904; 
0x0002853a: ret 0xe90a; 
0x000e83b0: ret 0xe910; 
0x000c3ebc: ret 0xe912; 
0x00159427: ret 0xe970; 
0x0001f1d0: ret 0xe983; 
0x000963e9: ret 0xe989; 
0x0004b52b: ret 0xe9; 
0x0005b412: ret 0xe9c1; 
0x0009fc0d: ret 0xe; 
0x00076e07: ret 0xea01; 
0x000a77e0: ret 0xea6b; 
0x00097519: ret 0xea81; 
0x0002811b: ret 0xea83; 
0x0001914f: ret 0xeac1; 
0x000205f1: ret 0xead3; 
0x000822f9: ret 0xeb01; 
0x000e8b31: ret 0xeb03; 
0x0005c125: ret 0xeb04; 
0x000c5e66: ret 0xeb18; 
0x00126f41: ret 0xebeb; 
0x00047ae9: ret 0xec75; 
0x000dad1e: ret 0xec83; 
0x0014b48a: ret 0xecba; 
0x0006fabf: ret 0xed31; 
0x00042168: ret 0xed72; 
0x000a9ab8: ret 0xed75; 
0x0007cb4e: ret 0xed83; 
0x000a8852: ret 0xed85; 
0x000979d5: ret 0xedc1; 
0x00019cba: ret 0xee39; 
0x000826e7: ret 0xeec1; 
0x00177468: ret 0xef13; 
0x00177c30: ret 0xef21; 
0x0012381a: ret 0xef36; 
0x000aaa52: ret 0xef39; 
0x00179f94: ret 0xef95; 
0x00046622: ret 0xefc1; 
0x000e5df5: ret 0xeff0; 
0x0017b058: ret 0xeff8; 
0x00169000: ret 0xeffa; 
0x0007fda1: ret 0xf001; 
0x0014851f: ret 0xf00; 
0x001691d0: ret 0xf012; 
0x00019fa8: ret 0xf01; 
0x0006d9dd: ret 0xf021; 
0x0002c695: ret 0xf02; 
0x001025a3: ret 0xf03; 
0x0004141c: ret 0xf04; 
0x001486b1: ret 0xf05; 
0x0001cd4d: ret 0xf075; 
0x000783dc: ret 0xf07; 
0x00041215: ret 0xf089; 
0x0004142f: ret 0xf08; 
0x0014866c: ret 0xf0c; 
0x001498d3: ret 0xf0f; 
0x00147243: ret 0xf10; 
0x0009cbb6: ret 0xf129; 
0x000368d4: ret 0xf175; 
0x0001f6e1: ret 0xf189; 
0x000ae159: ret 0xf18; 
0x000fe35a: ret 0xf18b; 
0x0018539d: ret 0xf1bf; 
0x00147254: ret 0xf20; 
0x000c73b4: ret 0xf229; 
0x001107fb: ret 0xf24; 
0x00185d87: ret 0xf25a; 
0x000cc38f: ret 0xf275; 
0x000d344b: ret 0xf289; 
0x000f798a: ret 0xf2f2; 
0x0002e932: ret 0xf302; 
0x000c5c2b: ret 0xf304; 
0x0003363c: ret 0xf31d; 
0x000e381a: ret 0xf336; 
0x000d41e2: ret 0xf375; 
0x000c5682: ret 0xf377; 
0x000dc21a: ret 0xf3ac; 
0x00147265: ret 0xf40; 
0x0018cfa1: ret 0xf522; 
0x000bd78a: ret 0xf597; 
0x0001bf3c: ret 0xf601; 
0x0013ec84: ret 0xf608; 
0x000f7530: ret 0xf618; 
0x000f8322: ret 0xf631; 
0x00084203: ret 0xf66; 
0x000f7a5f: ret 0xf67c; 
0x0007bd11: ret 0xf685; 
0x000b33b1: ret 0xf703; 
0x000765bd: ret 0xf708; 
0x000fc22b: ret 0xf75; 
0x000eca4a: ret 0xf76d; 
0x000e9996: ret 0xf783; 
0x0006a1b8: ret 0xf789; 
0x000484d5: ret 0xf7e9; 
0x00081b42: ret 0xf800; 
0x000202c1: ret 0xf80; 
0x000fe2d6: ret 0xf829; 
0x00158b94: ret 0xf869; 
0x00098fbc: ret 0xf883; 
0x000202ca: ret 0xf889; 
0x000785fc: ret 0xf8b8; 
0x000320c5: ret 0xf8c1; 
0x0012ff4b: ret 0xf8d3; 
0x0008000a: ret 0xf96e; 
0x0016cda0: ret 0xf974; 
0x0004b31d: ret 0xf980; 
0x000fcbd9: ret 0xf989; 
0x0007854b: ret 0xf9b8; 
0x0002d566: ret 0xf9c1; 
0x0002db04: ret 0xf; 
0x000b33ad: ret 0xfa29; 
0x0007160e: ret 0xfa39; 
0x000d644b: ret 0xfa73; 
0x000320ad: ret 0xfa83; 
0x001313bb: ret 0xfa85; 
0x0007867f: ret 0xfab8; 
0x0002b2ba: ret 0xfac1; 
0x000d0f0a: ret 0xfad1; 
0x000cf8ca: ret 0xfaee; 
0x0002ebb1: ret 0xfb1; 
0x0005ea0a: ret 0xfb84; 
0x00078f18: ret 0xfbba; 
0x00100c36: ret 0xfbcd; 
0x00055e5a: ret 0xfbd2; 
0x000786ab: ret 0xfcb8; 
0x00166038: ret 0xfcd1; 
0x001662b8: ret 0xfcd5; 
0x00166cac: ret 0xfd0c; 
0x0011dcfa: ret 0xfd27; 
0x00167168: ret 0xfd2c; 
0x00167260: ret 0xfd2d; 
0x00167324: ret 0xfd3a; 
0x000a89da: ret 0xfd45; 
0x00167470: ret 0xfd49; 
0x0016746c: ret 0xfd4b; 
0x00167764: ret 0xfd5c; 
0x000784ee: ret 0xfdb8; 
0x000407a6: ret 0xfde9; 
0x000b247a: ret 0xfe57; 
0x000985ba: ret 0xfe5b; 
0x00023cda: ret 0xfe83; 
0x00149a7a: ret 0xfe89; 
0x00063cdd: ret 0xfe9; 
0x0002c98a: ret 0xfea5; 
0x0002d79d: ret 0xfeb8; 
0x0003868a: ret 0xfee5; 
0x0002d3a9: ret 0xff25; 
0x001310a4: ret 0xff3; 
0x00107e6a: ret 0xff7f; 
0x000d8a1b: ret 0xff80; 
0x00097c7e: ret 0xff85; 
0x0005b631: ret 0xffb2; 
0x0002de35: ret 0xffb8; 
0x0003ddc1: ret 0xffbe; 
0x0003b98b: ret 0xffbf; 
0x0005268c: ret 0xffc1; 
0x0007aa11: ret 0xffd2; 
0x00037fca: ret 0xffdb; 
0x00044a79: ret 0xffdf; 
0x0007f20a: ret 0xffea; 
0x00171bc9: ret 0xffeb; 
0x00030a7a: ret 0xffec; 
0x00176500: ret 0xffee; 
0x0002a5e9: ret 0xfff0; 
0x000fac8c: ret 0xfff1; 
0x00037157: ret 0xfff2; 
0x000f1e0a: ret 0xfff3; 
0x00037502: ret 0xfff4; 
0x000d6e13: ret 0xfff5; 
0x00074baa: ret 0xfff7; 
0x000504ff: ret 0xfff8; 
0x000e211a: ret 0xfff9; 
0x00072339: ret 0xfff; 
0x0001b78e: ret 0xfffa; 
0x0001965e: ret 0xfffb; 
0x0001f5ef: ret 0xfffc; 
0x00025187: ret 0xfffd; 
0x0001a723: ret 0xfffe; 
0x00031aca: ret 0xffff; 
0x000045ac: ret 1; 
0x00000ec0: ret 2; 
0x00006104: ret 3; 
0x0000122c: ret 4; 
0x000013e8: ret 5; 
0x00001590: ret 6; 
0x00001734: ret 7; 
0x000018c4: ret 8; 
0x00106d43: ret 9; 
0x00000417: ret; 
0x0012e62b: rol bh, 0x46; or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x0004c43c: rol byte ptr [0x107], 0x89; add bh, byte ptr [eax + 1]; ret; 
0x000aad0c: rol byte ptr [0x16e], 1; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000c6af5: rol byte ptr [0x5e5bd089], cl; ret; 
0x000d1924: rol byte ptr [eax + 0x740c187e], 0xd; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00127848: rol byte ptr [eax + 0x747a097e], 9; add esp, 0x24; pop esi; pop edi; ret; 
0x0014e280: rol byte ptr [eax + eax], 0; ret 4; 
0x000ddcbb: rol byte ptr [eax + eax], 0x81; ret; 
0x0004c908: rol byte ptr [eax + eax], 0x85; ror byte ptr [edi], 0x8e; ret 5; 
0x0011cc26: rol byte ptr [eax + eax], 1; add byte ptr [ecx - 0x76fbdbac], cl; xor al, 0x24; call dword ptr [eax]; 
0x0008d8da: rol byte ptr [eax + eax], cl; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00017f20: rol byte ptr [eax - 0x6bf0a2c8], cl; ret 0x348d; 
0x000ad91f: rol byte ptr [eax - 0x78f0f606], 1; ret; 
0x001675ec: rol byte ptr [eax - 3], 0xff; push eax; inc ecx; std; jmp eax; 
0x001047eb: rol byte ptr [eax*4 + 0x750889c9], 0xed; add esp, 8; pop esi; ret; 
0x00023e5d: rol byte ptr [eax], 0; add al, ch; or eax, 0x8100105f; ret; 
0x000672c8: rol byte ptr [eax], 0; add byte ptr [ebx + 0xc424b4], cl; add byte ptr [eax], al; mov edi, dword ptr [esp + 0xc8]; add esp, 0xcc; ret; 
0x000de306: rol byte ptr [eax], 0; add byte ptr [ebx + 0xc424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xc8]; add esp, 0xcc; ret; 
0x000c5fdb: rol byte ptr [eax], 0; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x000205bd: rol byte ptr [eax], 0; add byte ptr [ebx - 0x7af07f39], al; ret 3; 
0x0017b745: rol byte ptr [eax], 0; int1; out dx, eax; call dword ptr [eax]; 
0x0017b7a5: rol byte ptr [eax], 0; mov cl, 0xf3; out dx, eax; call dword ptr [eax]; 
0x0017b6b5: rol byte ptr [eax], 0; push ebp; hlt; out dx, eax; call dword ptr [eax]; 
0x0017b775: rol byte ptr [eax], 0; sal ebx, 1; out dx, eax; call dword ptr [eax]; 
0x00133227: rol byte ptr [eax], 0xf7; ret 0xf; 
0x000b94cf: rol byte ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0006d7bf: rol byte ptr [eax], 1; add byte ptr [eax], al; mov edi, dword ptr [esp + 0xd4]; mov ebp, dword ptr [esp + 0xd8]; add esp, 0xdc; ret; 
0x0017c48d: rol byte ptr [eax], cl; add byte ptr [eax - 0x43], al; out dx, eax; jmp dword ptr [ebx]; 
0x000b955f: rol byte ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0017c461: rol byte ptr [eax], cl; add byte ptr [edx + edi*4], bh; out dx, eax; jmp dword ptr [ebx]; 
0x00019eb9: rol byte ptr [eax], cl; add esp, 0x44; neg edx; ret; 
0x00095c40: rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x000d67c6: rol byte ptr [ebp - 0x14f38b40], cl; sbb dword ptr [ebp + 0x148b0076], ecx; xchg byte ptr [ecx], bh; ret 0x775; 
0x000eb50d: rol byte ptr [ebp - 0x7cda8b37], 0xc4; sbb al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x00167610: rol byte ptr [ebp - 3], 1; jmp dword ptr [eax + 0x46]; 
0x0012ba62: rol byte ptr [ebx + 0x2074fff0], 1; mov eax, esi; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x00087847: rol byte ptr [ebx + 0x4a8d02eb], 1; add cl, byte ptr [edi]; test dword ptr [0x5bffffff], edi; ret; 
0x0008796f: rol byte ptr [ebx + 0x4a8d0beb], 1; or ecx, dword ptr [edi]; test dword ptr [0x5bfffffe], edx; ret; 
0x0002dd67: rol byte ptr [ebx + 0x5d5b14c4], 1; ret; 
0x0004bb8d: rol byte ptr [ebx + 0x5e5b14c4], 0x5f; pop ebp; ret; 
0x0004ba96: rol byte ptr [ebx + 0x5e5b18c4], 0x5f; pop ebp; ret; 
0x0007fbc4: rol byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x0013242b: rol byte ptr [ebx + 0x5e5b1cc4], 1; pop edi; pop ebp; ret; 
0x000410a8: rol byte ptr [ebx + 0x5e5b20c4], 0x5f; ret; 
0x000eca94: rol byte ptr [ebx + 0x5e5b20c4], 1; pop edi; ret; 
0x0002ba3f: rol byte ptr [ebx + 0x5e5b2cc4], 0x5f; pop ebp; ret; 
0x0002743f: rol byte ptr [ebx + 0x5e5b2cc4], 1; pop edi; pop ebp; ret; 
0x000d06c1: rol byte ptr [ebx + 0x5e5b3cc4], 0x5f; pop ebp; ret 4; 
0x00024e05: rol byte ptr [ebx + 0x5e5b3cc4], 0x5f; pop ebp; ret; 
0x00073056: rol byte ptr [ebx + 0x5e5b3cc4], 1; pop edi; pop ebp; ret; 
0x0011baa2: rol byte ptr [ebx + 0x5e5b40c4], 1; pop edi; ret; 
0x000cf711: rol byte ptr [ebx + 0x5e5b4cc4], 0x5f; pop ebp; ret 4; 
0x000342be: rol byte ptr [ebx + 0x5e5b4cc4], 0x5f; pop ebp; ret; 
0x0006cd40: rol byte ptr [ebx + 0x5e5b4cc4], 1; pop edi; pop ebp; ret; 
0x00109a31: rol byte ptr [ebx + 0x5e5b5cc4], 0x5f; pop ebp; ret; 
0x00034d88: rol byte ptr [ebx + 0x5e5b6cc4], 0x5f; pop ebp; ret; 
0x000d0d54: rol byte ptr [ebx + 0x5e5b7cc4], 0x5f; pop ebp; ret 0x10; 
0x000fc9ec: rol byte ptr [ebx + 0x5e5b7cc4], 0x5f; pop ebp; ret; 
0x00083fa7: rol byte ptr [ebx + 0x5e5f10c0], 1; ret; 
0x00083fb4: rol byte ptr [ebx + 0x5e5f20c0], 1; ret; 
0x00083fc1: rol byte ptr [ebx + 0x5e5f30c0], 1; ret; 
0x000fcd31: rol byte ptr [ebx + 0x5f5e14c4], 0x5d; ret; 
0x000ce2d1: rol byte ptr [ebx + 0x5f5e20c4], 0x5d; ret; 
0x000ca2c5: rol byte ptr [ebx + 0x5f5e40c4], 0x5d; ret 8; 
0x0011036d: rol byte ptr [ebx + 0x5f5e40c4], 0x5d; ret; 
0x000cc959: rol byte ptr [ebx + 0x5f5e60c4], 0x5d; ret; 
0x0011bb06: rol byte ptr [ebx - 0x157cfd1e], cl; add dword ptr [ebx - 0x2f76d73c], eax; pop ebx; ret; 
0x0002f84d: rol byte ptr [ebx - 0x177cfd20], 1; pop esi; pop edi; ret; 
0x000fc3c4: rol byte ptr [ebx - 0x1f7ce73c], 0xc; pop ebx; ret; 
0x0010916e: rol byte ptr [ebx - 0x27ca817], 1; or dword ptr [edi], ecx; inc esi; int 0x80; 
0x000a1afd: rol byte ptr [ebx - 0x2d7c0040], cl; dec dword ptr [ebx + 0xf68246c]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000376ad: rol byte ptr [ebx - 0x2d7c0040], cl; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0006ab1c: rol byte ptr [ebx - 0x2f08e73c], 0x5b; ret; 
0x0002e35e: rol byte ptr [ebx - 0x2f767f14], cl; pop esi; pop edi; pop ebp; ret; 
0x0011b718: rol byte ptr [ebx - 0x2f76d73c], cl; pop ebx; ret; 
0x00116d91: rol byte ptr [ebx - 0x3b7cfd40], 0x1c; ret; 
0x000710c5: rol byte ptr [ebx - 0x3b7cfe18], 0x18; pop esi; ret; 
0x000e8440: rol byte ptr [ebx - 0x3b7cfe18], 0x24; pop ebx; pop esi; ret; 
0x00095872: rol byte ptr [ebx - 0x3dfecf16], 0x7c; lea eax, dword ptr es:[ecx + eax + 0x10]; ret; 
0x00095882: rol byte ptr [ebx - 0x3dfedf16], 0x7c; push ss; lea eax, dword ptr [ecx + eax + 0x20]; ret; 
0x00095892: rol byte ptr [ebx - 0x3dfeef16], 0x7c; push es; lea eax, dword ptr [ecx + eax + 0x30]; ret; 
0x000e0917: rol byte ptr [ebx - 0x49f0a73c], 0xc0; pop ebx; ret; 
0x000ef0e4: rol byte ptr [ebx - 0x49f0d33c], 0xc0; sub eax, 1; ret; 
0x000d84b1: rol byte ptr [ebx - 0x49f0d73c], 0xc0; pop ebx; ret; 
0x00114e7b: rol byte ptr [ebx - 0x49f0e33c], 0xc0; ret; 
0x000ef0a4: rol byte ptr [ebx - 0x49f0e33c], 0xc0; sub eax, 1; ret; 
0x0011f9e0: rol byte ptr [ebx - 0x49f0e73c], 0xc0; pop ebx; ret; 
0x000ed9f1: rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x000bd62c: rol byte ptr [ebx - 0x49f0f73c], 0xc0; ret; 
0x0004b2a2: rol byte ptr [ebx - 0x68f0f606], 1; ret 0xe083; 
0x000c68fa: rol byte ptr [ebx - 0x6bf09f02], cl; ret 0x5408; 
0x000ad6c6: rol byte ptr [ebx - 0x6bf0df1a], cl; ret 0xd789; 
0x000c8207: rol byte ptr [ebx - 0x6bf0fb08], cl; ret 0x5589; 
0x001140b5: rol byte ptr [ebx - 0x6bf0fd06], 0xc0; add esp, 0x1c; ret; 
0x0011e5d6: rol byte ptr [ebx - 0x6bf0fd06], 0xc0; add esp, 0x28; pop esi; ret; 
0x0011eedd: rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xd089; 
0x0011e65a: rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x0010a353: rol byte ptr [ebx - 0x6bf0fe01], cl; ret 0xd689; 
0x0011f09b: rol byte ptr [ebx - 0x743ce33c], 0x50; add al, 0x89; dec esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0x24]; 
0x001140bb: rol byte ptr [ebx - 0x743ce33c], 0x50; add al, 0x89; dec esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x000adde2: rol byte ptr [ebx - 0x77cce18], 1; or ecx, dword ptr [edi]; xchg byte ptr [ecx + 0x31ffffdd], cl; shr cl, 0x76; fdivr st(7); jmp dword ptr [esi - 0x70]; 
0x000fc2d1: rol byte ptr [ebx - 0x77cf320], 1; add al, 0x75; ret 0xdeeb; 
0x00148e36: rol byte ptr [ebx], 0x5f; ret; 
0x0004365c: rol byte ptr [ecx + 0x1000fa], cl; add byte ptr [edi], cl; xchg dword ptr [eax - 0x7cfffffc], esi; ret 0x830f; 
0x00125f7a: rol byte ptr [ecx + 0x14cc4], 0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00125d08: rol byte ptr [ecx + 0x15cc4], 0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00188531: rol byte ptr [ecx + 0x22fff3], 1; add byte ptr [eax + eax], ch; add byte ptr [eax], al; mov word ptr [esi + 0x1a850001], cs; hlt; call dword ptr [eax]; 
0x000962ad: rol byte ptr [ecx + 0x450c4], 0; pop esi; pop edi; pop ebp; ret; 
0x00096d94: rol byte ptr [ecx + 0x45cc4], 0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000e9a75: rol byte ptr [ecx + 0x80000a], 1; add byte ptr [ebx + 0x1b018c4], al; pop ebx; ret; 
0x0012e2a5: rol byte ptr [ecx + 0x9cc4], 0; pop ebx; pop esi; pop edi; pop ebp; ret 0x10; 
0x00055348: rol byte ptr [ecx + 0x9cc4], 0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000ab66b: rol byte ptr [ecx + 0xacc4], 0; pop ebx; pop esi; pop edi; pop ebp; ret 8; 
0x00097510: rol byte ptr [ecx + 0xbfff], cl; add byte ptr [edi], cl; popfd; ret 0xea81; 
0x000c6ae9: rol byte ptr [ecx + 0xc0fefe], cl; add byte ptr [edi], cl; xchg eax, ebp; ret 0x548d; 
0x00105072: rol byte ptr [ecx + 0xffe2], 0; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0011451b: rol byte ptr [ecx + ecx*4], 0x46; adc byte ptr [eax + 1], bh; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x0018aed0: rol byte ptr [ecx - 0xb], 1; call dword ptr [ebx]; 
0x0007fd9e: rol byte ptr [ecx], 0x29; ret 0xf001; 
0x000a093a: rol byte ptr [ecx], 0x39; call 0xfff3f7b7; idiv edi; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x000419b0: rol byte ptr [ecx], 0x39; ret 0x3a74; 
0x0003f1de: rol byte ptr [ecx], 0x39; ret 0x870f; 
0x0003f246: rol byte ptr [ecx], 0x39; ret 0xd476; 
0x0003f345: rol byte ptr [ecx], 0x39; ret 0xd77; 
0x0001cd4a: rol byte ptr [ecx], 0x39; ret 0xf075; 
0x000cc38c: rol byte ptr [ecx], 0x39; ret 0xf275; 
0x000c567f: rol byte ptr [ecx], 0x39; ret 0xf377; 
0x0002f549: rol byte ptr [ecx], 0x39; sal byte ptr [ebp - 0xf], 1; xor eax, eax; pop esi; pop edi; ret; 
0x0003f774: rol byte ptr [ecx], 0x5b; pop esi; ret; 
0x001491f1: rol byte ptr [ecx], 0x5f; ret; 
0x0010c079: rol byte ptr [ecx], 0x81; ret 0x9c; 
0x000969c3: rol byte ptr [ecx], 0x83; ret 0x3901; 
0x00043254: rol byte ptr [ecx], 0x83; ret 0x390c; 
0x000f230c: rol byte ptr [ecx], 0x83; ret 0x3910; 
0x00128185: rol byte ptr [ecx], 0x83; ret 0x3b01; 
0x00056ce7: rol byte ptr [ecx], 0x83; ret 0x3b0c; 
0x000d7314: rol byte ptr [ecx], 0x83; ret 0x8301; 
0x000fa619: rol byte ptr [ecx], 0x83; ret 0x8b18; 
0x000979ce: rol byte ptr [ecx], 0x83; ret 0xf01; 
0x0004ba3e: rol byte ptr [ecx], 0x83; ret 0xf04; 
0x00122c7c: rol byte ptr [ecx], 0x85; test byte ptr [edi], 0x84; ret 1; 
0x0001ed5c: rol byte ptr [ecx], 0x88; dec edx; add al, 0x83; ret 0x3901; 
0x0004838c: rol byte ptr [ecx], 0x89; inc edi; adc al, 0x83; ret 0x8301; 
0x0004a68d: rol byte ptr [ecx], 0x89; inc esi; adc al, 0x83; ret 0x8301; 
0x0012bc20: rol byte ptr [ecx], 0x89; inc esi; adc al, 0xf6; ret 0x7502; 
0x0007135d: rol byte ptr [ecx], 0x89; inc esi; adc al, 0xf6; ret 0xf02; 
0x001098b6: rol byte ptr [ecx], 0x89; inc esi; sbb byte ptr [eax + 1], bh; add esp, 0x18; pop esi; ret; 
0x0001c4fc: rol byte ptr [ecx], 0x89; ret 0x172b; 
0x000faa09: rol byte ptr [ecx], 0x89; ret 0xe2c1; 
0x000b33aa: rol byte ptr [ecx], 0x89; ret 0xfa29; 
0x001702dd: rol byte ptr [ecx], 0xa; push cs; adc al, 0x45; ret; 
0x00095786: rol byte ptr [ecx], 0xc8; ret; 
0x00095b1c: rol byte ptr [ecx], 0xd0; add eax, ecx; ret; 
0x00095c82: rol byte ptr [ecx], 0xd0; ret; 
0x00176920: rol byte ptr [ecx], 0xef; call dword ptr [ebx]; 
0x00095127: rol byte ptr [ecx], 0xf8; pop edi; ret; 
0x00095275: rol byte ptr [ecx], 0xf8; sub eax, 0x10; pop edi; ret; 
0x000bcb38: rol byte ptr [ecx], 0xf; inc esp; ret 0xe289; 
0x0004b4f6: rol byte ptr [ecx], 0xf; xchg eax, esp; ret 0x25e9; 
0x0004c3c6: rol byte ptr [ecx], 0xf; xchg eax, esp; ret 0x3ce9; 
0x0004b596: rol byte ptr [ecx], 0xf; xchg eax, esp; ret 0x50e9; 
0x0004c3af: rol byte ptr [ecx], 0xf; xchg eax, esp; ret 0x53e9; 
0x00049c88: rol byte ptr [ecx], 0xf; xchg eax, esp; ret 0x73e9; 
0x0004c40e: rol byte ptr [ecx], 0xf; xchg eax, esp; ret 0x7de9; 
0x0004b641: rol byte ptr [ecx], 0xf; xchg eax, esp; ret 0x97e9; 
0x000497a2: rol byte ptr [ecx], 0xf; xchg eax, esp; ret 0xc5eb; 
0x0004b5f9: rol byte ptr [ecx], 0xf; xchg eax, esp; ret 0xdfe9; 
0x0004b527: rol byte ptr [ecx], 0xf; xchg eax, esp; ret 0xe9; 
0x00104e4c: rol byte ptr [ecx], 1; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0014730c: rol byte ptr [ecx], 1; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xf]; pop edi; ret; 
0x000875bc: rol byte ptr [ecx], 1; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0016a9dd: rol byte ptr [ecx], 1; add byte ptr [edi + esi*8 - 0xd], dh; call eax; 
0x0016dcb4: rol byte ptr [ecx], 1; add eax, dword ptr [eax]; test ah, ah; cli; jmp esp; 
0x001989df: rol byte ptr [ecx], 1; add edi, dword ptr [edx]; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x0008207a: rol byte ptr [ecx], 1; ret 0x1403; 
0x000dab67: rol byte ptr [ecx], 1; ret 0x5489; 
0x000d720c: rol byte ptr [ecx], 1; ret 0x5739; 
0x00171773: rol byte ptr [ecx], 2; mov edx, 0x43140e0a; ret; 
0x001858af: rol byte ptr [ecx], 3; test byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0018c481: rol byte ptr [ecx], cl; add ah, cl; mov bl, 0xf5; call dword ptr [ebx]; 
0x0016ff96: rol byte ptr [ecx], cl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017968d: rol byte ptr [ecx], cl; out dx, eax; jmp dword ptr [edx]; 
0x00083f9b: rol byte ptr [ecx], cl; rcr byte ptr [edi + 0x5e], 1; ret; 
0x00083fa5: rol byte ptr [ecx], cl; rol byte ptr [ebx + 0x5e5f10c0], 1; ret; 
0x00083fb2: rol byte ptr [ecx], cl; rol byte ptr [ebx + 0x5e5f20c0], 1; ret; 
0x00083fbf: rol byte ptr [ecx], cl; rol byte ptr [ebx + 0x5e5f30c0], 1; ret; 
0x000ecfb2: rol byte ptr [edi + 0x6b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000fc1c2: rol byte ptr [edi + 0x75c08503], 1; in al, dx; pop esi; pop ebx; pop edx; ret; 
0x0002dfcd: rol byte ptr [edi + 0xaeb8df], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00148e5c: rol byte ptr [edi], 0x5f; ret; 
0x000ab247: rol byte ptr [edi], 0x89; ret 0xfac1; 
0x0017ad40: rol byte ptr [edi], 1; sti; jmp edx; 
0x0019b271: rol byte ptr [edx], 0; fdiv st(6), st(0); cli; call dword ptr [ebx + 1]; 
0x0016d225: rol byte ptr [edx], 0; xor al, 0xcc; stc; jmp dword ptr [eax - 0x40]; 
0x001491f6: rol byte ptr [edx], 0x5f; ret; 
0x00082938: rol byte ptr [edx], 0x8b; xor al, 0x24; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0018cb39: rol byte ptr [edx], 0xa; ret; 
0x0013a24b: rol byte ptr [edx], 1; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00172430: rol byte ptr [edx], 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00166e34: rol byte ptr [edx], 1; std; jmp dword ptr [eax + 3]; 
0x0019c9cc: rol byte ptr [edx], cl; add byte ptr [eax], al; ret 5; 
0x0002f76d: rol byte ptr [esi], 0; add byte ptr [eax], al; call 0x2f730; jmp eax; 
0x0014920a: rol byte ptr [esi], 0x5f; ret; 
0x00166e50: rol byte ptr [esi], 0xfd; call dword ptr [eax + 7]; 
0x00166e50: rol byte ptr [esi], 0xfd; call dword ptr [eax + 7]; std; jmp eax; 
0x00157a60: rol cl, 0xc2; ret; 
0x0002e92d: rol cl, 0xe9; add dh, dh; ret 0xf302; 
0x00105109: rol cl, 0xea; or cl, al; call 0x109d223; add byte ptr [eax], al; or byte ptr [edi], 0x45; ret 0x90c3; 
0x00051e03: rol cl, 0xff; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x75]; 
0x000709d8: rol cl, 1; clc; add cl, byte ptr [ecx - 0x17f7dbbc]; pop ebx; ret 0xffff; 
0x0002d20e: rol cl, 1; stc; push ds; and eax, ecx; ret; 
0x000d7155: rol dh, 4; push ss; add dword ptr [eax + edx - 0x75], esi; xor dword ptr [eax - 1], 0xffffffff; jmp dword ptr [ebp - 0x75]; 
0x0016d2ac: rol dl, 2; add ah, dl; sar cl, cl; jmp esp; 
0x000a73aa: rol dword ptr [eax + 0x20740fe1], 1; ret; 
0x0013ebfc: rol dword ptr [eax + 0x75], 0x70; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x000ddbfb: rol dword ptr [eax + eax], -0x7f; ret; 
0x0019ca64: rol dword ptr [eax + eax], 1; add byte ptr [ecx - 0x20ffffff], bh; add eax, 0x1250000; add byte ptr [eax], al; ret; 
0x0008e971: rol dword ptr [eax - 0x42], 0xc; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000301f4: rol dword ptr [eax*4 - 0x76198b0a], 0x45; fsub st(1), st(0); ret 0xfffe; 
0x0016881d: rol dword ptr [eax], 0; and al, 0x6c; in eax, dx; jmp dword ptr [eax]; 
0x00168825: rol dword ptr [eax], 0; in al, 0x6c; in eax, dx; jmp dword ptr [eax - 0x3f]; 
0x00168855: rol dword ptr [eax], 0; mov eax, dword ptr [0x10ffed74]; ret 0; 
0x0017b7d5: rol dword ptr [eax], 0; xchg eax, ecx; out dx, eax; call dword ptr [eax]; 
0x00168a85: rol dword ptr [eax], 1; add ah, dl; inc eax; out dx, al; call eax; 
0x0017c339: rol dword ptr [eax], 1; add byte ptr [eax + esi*4], dl; out dx, eax; jmp dword ptr [eax + 2]; 
0x000b9404: rol dword ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0017c371: rol dword ptr [eax], 1; add byte ptr [edx + esi*4], bh; out dx, eax; jmp dword ptr [edi]; 
0x00168acd: rol dword ptr [eax], cl; add ah, dh; dec ecx; out dx, al; call dword ptr [eax - 0x2d]; 
0x000b9464: rol dword ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001482b7: rol dword ptr [ebp + 0x30850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x00095551: rol dword ptr [ebp + 0x315a75c0], -0x40; pop edi; ret; 
0x00095816: rol dword ptr [ebp + 0x316575c0], -0x40; ret; 
0x000957e7: rol dword ptr [ebp + 0x317475c0], -0x40; ret; 
0x001482f6: rol dword ptr [ebp + 0x71850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x00095517: rol dword ptr [ebp - 0x4f7af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0011c59b: rol dword ptr [ebp - 0x76f18b40], 1; ret 0x7239; 
0x000f0118: rol dword ptr [ebx + 0x17383f8], cl; ret; 
0x000f00a2: rol dword ptr [ebx + 0x317383f8], cl; ret; 
0x000efcb2: rol dword ptr [ebx + 0x33], 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0010b937: rol dword ptr [ebx + 0x5b760ff9], 1; ret 0x28b; 
0x0008f53d: rol dword ptr [ebx + esi*4], 0xc; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b7ef2: rol dword ptr [ebx], -0x4f; push cs; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000efab4: rol dword ptr [ecx + 0x35], 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ed6b4: rol dword ptr [ecx + 0x59], 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00191573: rol dword ptr [ecx + 0xe], 4; ret; 
0x0006e586: rol dword ptr [ecx + ecx*4], 0xa; add esp, 0x18; pop ebx; ret; 
0x0006e425: rol dword ptr [ecx + ecx*4], 0xa; ret; 
0x0006b90b: rol dword ptr [ecx + ecx*4], 8; add esp, 0x18; mov eax, edx; pop esi; ret; 
0x0003f5a8: rol dword ptr [ecx], -0x7b; sal byte ptr [ebp - 0x1e], cl; lea eax, dword ptr [ebx + 0x1778]; mov byte ptr [eax + ecx], 0; pop ebx; ret; 
0x000bb1dc: rol dword ptr [ecx], -0x7c; sal byte ptr [ebp - 0x20], cl; pop esi; ret; 
0x0001d262: rol dword ptr [ecx], -0x7d; ret 0x3904; 
0x00123df4: rol dword ptr [ecx], -0xe; pop es; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0016a7bd: rol dword ptr [ecx], 0; and al, 0x21; lcall ptr [eax]; ret 1; 
0x0018b331: rol dword ptr [ecx], 0; fcom qword ptr [esi - 0xb]; call dword ptr [ebx]; 
0x0018b3a9: rol dword ptr [ecx], 0; movsb byte ptr es:[edi], byte ptr [esi]; push edi; cmc; call dword ptr [ebx]; 
0x00042165: rol dword ptr [ecx], 0x39; ret 0xed72; 
0x0016fef5: rol dword ptr [ecx], 0xa; push cs; adc al, 0x41; ret; 
0x000678b4: rol dword ptr [ecx], 0xf; mov dh, 0xc0; mov dword ptr [edx + 0x14], ecx; add esp, 0x18; pop ebx; ret; 
0x0006aa73: rol dword ptr [ecx], 0xf; mov dh, 0xc0; mov dword ptr [edx + 0x14], ecx; ret; 
0x0018c5fd: rol dword ptr [ecx], cl; add byte ptr [eax - 0x48], dl; cmc; call dword ptr [edx]; 
0x000ef041: rol dword ptr [edi + 0x143b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012ea52: rol dword ptr [edi + 0x25b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b7be5: rol dword ptr [edi + 0x2bb8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e6bea: rol dword ptr [edi + 0x2db8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0015912a: rol dword ptr [edi + 0x42923bbd], 1; jmp dword ptr [edx - 0x71]; 
0x00024f4e: rol dword ptr [edi + 0x6b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010bab7: rol dword ptr [edi + 0x6b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; xchg ebx, ecx; ret; 
0x0002e332: rol dword ptr [edi + 0xb1b8df], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b912e: rol dword ptr [edi + 0xd5b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b91ae: rol dword ptr [edi + 0xd6b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000eede5: rol dword ptr [edi + 0xd7b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000eede5: rol dword ptr [edi + 0xd7b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; xchg ebx, ecx; ret; 
0x000eee05: rol dword ptr [edi + 0xd8b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000eee05: rol dword ptr [edi + 0xd8b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; xchg ebx, ecx; ret; 
0x0011f3ff: rol dword ptr [edi + ecx], -0x38; mov dword ptr [esi], eax; mov eax, 1; mov dword ptr [edx + 0xc], ecx; pop esi; ret; 
0x0008ecdb: rol dword ptr [edi], 1; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0015878d: rol dword ptr [edx + 0x3c], cl; push cs; push esp; jmp dword ptr [ebx - 0x40]; 
0x000eed23: rol dword ptr [edx + 0xb], cl; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0013b270: rol dword ptr [edx], 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0016d275: rol dword ptr [edx], 0; mov ah, 0xcf; stc; jmp eax; 
0x00139f41: rol dword ptr [edx], 1; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013a19c: rol dword ptr [edx], 1; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0017d774: rol dword ptr [edx], cl; add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e5b02], al; ret; 
0x0016d515: rol dword ptr [edx], cl; add byte ptr [edi + edi*8 - 7], al; call esp; 
0x0003f560: rol dword ptr [esi], -0x7d; ret 0x901; 
0x0008d1cd: rol dword ptr [esp + edx*8], 0xc; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0016d514: rol dword ptr fs:[edx], cl; add byte ptr [edi + edi*8 - 7], al; call esp; 
0x00094ec2: rol ebx, 0x5a; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00117cee: rol ecx, -0x20; or byte ptr [ecx], dh; ror byte ptr [ecx + 0x31ead1ca], 1; ret 0xe281; 
0x0002dc79: rol ecx, 9; mov dword ptr [edx + 0x14], ecx; mov dword ptr [edx + 0xc], ebp; mov dword ptr [edx + 0x18], eax; ret; 
0x0016ea94: ror al, 1; add al, byte ptr [eax]; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; call dword ptr [eax - 0x34]; 
0x00105049: ror ax, 8; ret; 
0x00172010: ror bl, 0xeb; jmp dword ptr [eax]; 
0x00197650: ror bl, 0xf7; jmp dword ptr [edx]; 
0x00166e08: ror byte ptr [0xea0fffd], 1; std; call dword ptr [eax]; 
0x0008d377: ror byte ptr [eax + eax], cl; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d2d8: ror byte ptr [eax + eax], cl; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001016c7: ror byte ptr [eax - 0x7c138aff], 0xc4; add al, 0x89; clc; pop esi; pop edi; ret; 
0x00149214: ror byte ptr [eax], 0x5f; ret; 
0x00131b51: ror byte ptr [eax], 0x83; ret 0x5608; 
0x001302b2: ror byte ptr [eax], 0x83; ret 0x5708; 
0x001404a1: ror byte ptr [eax], 0x83; ret 0x8308; 
0x0013ec81: ror byte ptr [eax], 0x83; ret 0xf608; 
0x000c5d8b: ror byte ptr [eax], 0x89; add al, 0x24; call 0x7dcd0; add esp, 0x1c; ret; 
0x00116b23: ror byte ptr [eax], 0x89; add al, 0x24; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x00119678: ror byte ptr [ebp + 0x26b4], 0; add byte ptr [ebx], bh; lodsb al, byte ptr [esi]; ret; 
0x0003f896: ror byte ptr [ebp + 0x2bb6c48], cl; add byte ptr [eax], al; add byte ptr [eax + 0x7e], bh; call dword ptr gs:[0x10]; 
0x000320bf: ror byte ptr [ebp + 0x490f0342], cl; ret 0xf8c1; 
0x000dac54: ror byte ptr [ebp + 0x5e5bf465], 0x5f; pop ebp; ret 0xc; 
0x00032490: ror byte ptr [ebp + 0x5e5bf465], 0x5f; pop ebp; ret; 
0x000e7530: ror byte ptr [ebp + 0x5e5bf465], 1; pop edi; pop ebp; ret 4; 
0x00070ba0: ror byte ptr [ebp + 0x5e5bf465], 1; pop edi; pop ebp; ret; 
0x000a7268: ror byte ptr [ebp + 0x5eff0044], 0x5f; ret; 
0x000ad413: ror byte ptr [ebp + 0x6c8b0014], 0x24; sub al, 1; ret 0x48d; 
0x000e2174: ror byte ptr [ebp - 0x47bd76d], 1; dec dword ptr [ebp - 0x47bf37d]; dec dword ptr [edi]; inc esp; ret 0x45f6; 
0x00082073: ror byte ptr [ebp - 0x74ffd98c], 0x55; rol byte ptr [ecx], 1; ret 0x1403; 
0x0008f7c7: ror byte ptr [ebp - 0x7af0efc0], cl; ret; 
0x0001ad63: ror byte ptr [ebp - 0x7cffd98c], cl; ret 0xc701; 
0x0016ca04: ror byte ptr [ebp - 0xb5bfffe], 0xf8; jmp esp; 
0x00173fc0: ror byte ptr [ebp], 0; cld; mov ch, 0xec; jmp dword ptr [ebx]; 
0x00097cbf: ror byte ptr [ebx + 0x4c89160c], cl; pop ss; add al, 0x83; ret 0x8504; 
0x00082e50: ror byte ptr [ebx + 0x6c8b2434], 1; and al, 8; add esp, 0xc; ret; 
0x00078771: ror byte ptr [ebx + 0x748b241c], 1; and al, 4; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0005567d: ror byte ptr [ebx + 0x7c8b2434], 0x24; add al, 0x8b; insb byte ptr es:[edi], dx; and al, 8; add esp, 0xc; ret; 
0x000827bf: ror byte ptr [ebx + 0x7c8b2434], 1; and al, 4; add esp, 8; ret; 
0x000ffd04: ror byte ptr [ebx + 0x7d8bf875], 1; cld; mov esp, ebp; pop ebp; ret; 
0x000f0d94: ror byte ptr [ebx + 0x842494], 1; add byte ptr [eax], al; shl edx, 0x18; or eax, edx; add esp, 0x7c; ret; 
0x000d8279: ror byte ptr [ebx + 0xf302474], cl; xchg eax, ebp; ror byte ptr [ebx - 0x74cbdb84], 0x6c; and al, 0x38; add esp, 0x3c; ret; 
0x000dab62: ror byte ptr [ebx - 0x2f083b83], 1; ret 0x5489; 
0x000f071e: ror byte ptr [ebx - 0x748fdba4], 0x74; and al, 0x74; mov edi, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x000d8280: ror byte ptr [ebx - 0x74cbdb84], 0x6c; and al, 0x38; add esp, 0x3c; ret; 
0x000da577: ror byte ptr [ebx - 0x74dfdb8c], 0x7c; and al, 0x24; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 8; 
0x00033b79: ror byte ptr [ebx - 0x74dfdba4], 0x74; and al, 0x24; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x001123d4: ror byte ptr [ebx - 0x74ebdb8c], 0x7c; and al, 0x18; add esp, 0x1c; ret; 
0x0002c87e: ror byte ptr [ebx - 0x74ebdba4], 0x74; and al, 0x18; add esp, 0x1c; ret; 
0x0011d2c3: ror byte ptr [ebx - 0x74efdb8c], 0x7c; and al, 0x14; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0006c186: ror byte ptr [ebx - 0x74efdba4], 0x74; and al, 0x14; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0007900a: ror byte ptr [ebx - 0x74fbdba4], 0x74; and al, 8; add esp, 0xc; ret; 
0x000a8441: ror byte ptr [ebx - 0x76fbdbac], 0xc1; xchg ebx, ecx; mov eax, 0xd; call dword ptr gs:[0x10]; 
0x000f0d4d: ror byte ptr [ebx - 0x79936e7c], cl; sti; push ebx; ret; 
0x000812d0: ror byte ptr [ebx - 0x7cf7dbb4], cl; ret 0x8b01; 
0x00038a41: ror byte ptr [ebx - 0x9e58aea], cl; ret 0x7501; 
0x0015a864: ror byte ptr [ebx - 0xd], 0xff; ror byte ptr [ebx - 0xd], 1; jmp eax; 
0x0015a868: ror byte ptr [ebx - 0xd], 1; jmp eax; 
0x000b3c40: ror byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x000e8920: ror byte ptr [ebx - 0xf77f], cl; push dword ptr [edi + ecx + 0x65]; mov dword ptr [eax], 0x26; mov eax, 0xffffffff; ret; 
0x00148e83: ror byte ptr [ebx], 0x5f; ret; 
0x00076081: ror byte ptr [ebx], 0x89; ret 0xe283; 
0x000e5fa0: ror byte ptr [ebx], 1; add byte ptr [edi + 0x36b8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e5ded: ror byte ptr [ebx], cl; add byte ptr [ebx - 0x8f7dbb4], cl; ret 0xeff0; 
0x000650c3: ror byte ptr [ecx + 0x14c48306], 1; pop ebx; pop esi; ret; 
0x0006beea: ror byte ptr [ecx + 0x18c4830e], 0x5e; ret; 
0x00071f12: ror byte ptr [ecx + 0x18c48316], 0x5e; ret; 
0x00129e3c: ror byte ptr [ecx + 0x1ffac1c2], 1; add esp, 0x18; pop esi; ret; 
0x00118c94: ror byte ptr [ecx + 0x24748be8], 1; pushal; mov edi, dword ptr [esp + 0x64]; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x0011e9f2: ror byte ptr [ecx + 0x28c48306], 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; ret; 
0x00074340: ror byte ptr [ecx + 0x291b75f2], cl; ret 0x528b; 
0x000e241a: ror byte ptr [ecx + 0x2de82404], 0x4b; dec dword ptr [ebx - 0xb36b]; dec dword ptr [ebx - 0xab7b]; jmp dword ptr [ebp - 0x77]; 
0x00117cf3: ror byte ptr [ecx + 0x31ead1ca], 1; ret 0xe281; 
0x0011b7fe: ror byte ptr [ecx + 0x34c48306], cl; mov eax, edx; pop ebx; pop esi; ret; 
0x00031e83: ror byte ptr [ecx + 0x3bf1f7f0], cl; sub dword ptr [eax + 0xf000011], -0x79; insb byte ptr es:[edi], dx; add dword ptr [eax], eax; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x75]; 
0x000b905f: ror byte ptr [ecx + 0x65da75c1], cl; mov dword ptr [0x68], ecx; nop; lea esi, dword ptr [esi]; ret; 
0x00042437: ror byte ptr [ecx + 0x748b144e], 0x24; and byte ptr [ebx - 0x74dbdb84], cl; insb byte ptr es:[edi], dx; and al, 0x28; add esp, 0x2c; ret; 
0x0002e9ba: ror byte ptr [ecx + 0xf08247c], cl; test byte ptr [ebx - 0xa000000], al; ret 0x8901; 
0x000f71ec: ror byte ptr [ecx + 0xf202444], 0x94; ret 0xd3eb; 
0x001199d6: ror byte ptr [ecx + ecx*4 + 0x54], 0x24; add al, 0x89; add al, 0x24; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x0006047f: ror byte ptr [ecx - 0x1037b], 1; jmp dword ptr [ebp - 0x75]; 
0x000c384a: ror byte ptr [ecx - 0x217dbfc], 1; cmc; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x0002d284: ror byte ptr [ecx - 0x22f7dbbc], 1; inc esp; and al, 4; ret; 
0x000e5e89: ror byte ptr [ecx - 0x248acbb0], cl; or dword ptr [eax], 0x80000000; xor eax, eax; pop ebx; ret; 
0x0002d7d4: ror byte ptr [ecx - 0x24f3dbbc], 1; insb byte ptr es:[edi], dx; and al, 4; ret; 
0x0002d544: ror byte ptr [ecx - 0x26fbdbbc], 1; inc esp; and al, 4; ret; 
0x000276d7: ror byte ptr [ecx - 0x3776dbfc], cl; call 0x272d0; mov eax, dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x000678b8: ror byte ptr [ecx - 0x3b7cebb6], 0x18; pop ebx; ret; 
0x000e5e13: ror byte ptr [ecx - 0x3fcef7bf], 1; pop ebx; ret; 
0x0002efee: ror byte ptr [ecx - 0x47207839], cl; mov cl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e359a: ror byte ptr [ecx - 0x5217dbfc], 0x39; dec dword ptr [ebx - 0xc36b]; dec dword ptr [ebx - 0xbb7b]; jmp dword ptr [ebp - 0x77]; 
0x000e2171: ror byte ptr [ecx - 0x6c722fbb], cl; sub byte ptr [ebx + edi*8 + 0xc838dff], al; test bl, bh; dec dword ptr [edi]; inc esp; ret 0x45f6; 
0x000a87bd: ror byte ptr [ecx - 0x6f3f960e], 1; add dword ptr [eax], eax; add byte ptr [ecx], ch; ret 0xfa83; 
0x0007b283: ror byte ptr [ecx - 0x74c78bf9], 0x54; and al, 0x24; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call eax; 
0x00114960: ror byte ptr [ecx - 0x76f7dbbc], 1; insb byte ptr es:[edi], dx; and al, 4; mov eax, dword ptr [esi]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x0006ffff: ror byte ptr [ecx - 0x76fbdbac], 1; inc esp; and al, 8; mov dword ptr [esp], ebp; call ecx; 
0x000c7364: ror byte ptr [ecx - 0x77f04fab], cl; ret; 
0x0007ba41: ror byte ptr [ecx - 0x7bf0ffbb], 0x85; add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdb84], cl; xor al, 0x24; call eax; 
0x00047cc8: ror byte ptr [ecx - 0x8b6b], cl; dec dword ptr [edi]; xchg eax, esp; ret 0xd284; 
0x000484cc: ror byte ptr [ecx - 0x8b6b], cl; dec dword ptr [edi]; xchg eax, esp; ret 0xf7e9; 
0x000984cf: ror byte ptr [ecx - 0xc0b8af0], cl; ret; 
0x00149219: ror byte ptr [ecx], 0x5f; ret; 
0x0017399a: ror byte ptr [ecx], 0xa; push cs; adc al, 0x41; ret; 
0x00176f20: ror byte ptr [ecx], 0xef; jmp dword ptr [ebx]; 
0x000eee73: ror byte ptr [ecx], 0xf0; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x000ca35b: ror byte ptr [ecx], cl; ljmp 0x1024:0x748b1875; mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret 0xc; 
0x00166df4: ror byte ptr [edi*8 - 0x2f25f01], 1; push dword ptr [eax + 0xe]; std; jmp dword ptr [eax]; 
0x000fb848: ror byte ptr [edi], 0x44; ret 0x443b; 
0x000f433f: ror byte ptr [edi], 0x44; ret 0x4489; 
0x000ed3fa: ror byte ptr [edi], 0x44; ret 0x90c3; 
0x0012476b: ror byte ptr [edi], 0x44; salc; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; mov eax, edx; ret; 
0x000fc8fd: ror byte ptr [edi], 0x45; push esp; and al, 0x1c; add esp, 0x2c; mov eax, edx; ret; 
0x0012c19d: ror byte ptr [edi], 0x45; ret 0xc483; 
0x00040c01: ror byte ptr [edi], 0x48; ret 0x5c8b; 
0x00040d2c: ror byte ptr [edi], 0x48; ret 0xc483; 
0x00148eac: ror byte ptr [edi], 0x5f; ret; 
0x00080222: ror byte ptr [edi], 0x84; aaa; add dword ptr [eax], eax; add byte ptr [ebx + 0x1242454], cl; ret 0x442b; 
0x000eca1c: ror byte ptr [edi], 0x84; aad 0; add byte ptr [eax], al; call eax; 
0x0002cd92: ror byte ptr [edi], 0x84; call 0x8a02cd95; ret 0xcae9; 
0x000e02c7: ror byte ptr [edi], 0x84; dec edx; add dword ptr [eax], eax; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x77]; 
0x00118f2e: ror byte ptr [edi], 0x84; mov byte ptr [eax], 0; add byte ptr [ebx + 0x1c42484], cl; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x00116931: ror byte ptr [edi], 0x84; mov byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ebp + 0xb0]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x001118b9: ror byte ptr [edi], 0x84; mov eax, 0x8b000000; inc esi; adc byte ptr [ebp - 0x76dbdb94], cl; cmp al, 0x24; call dword ptr [eax + 0x10]; 
0x0002cfc0: ror byte ptr [edi], 0x84; mov edx, 0x89fffff9; ret 0x95e9; 
0x000e3465: ror byte ptr [edi], 0x84; pop ss; add dword ptr [eax], eax; add byte ptr [ebx - 0xc77b], cl; dec dword ptr [ecx + 0x26e82404]; ret 0xffff; 
0x0004fea0: ror byte ptr [edi], 0x84; push es; sub al, 0; add byte ptr [ebx - 0x1cb73], cl; call ecx; 
0x0001b0ca: ror byte ptr [edi], 0x84; ret 0; 
0x0003c284: ror byte ptr [edi], 0x84; ret; 
0x00113d0c: ror byte ptr [edi], 0x84; sbb al, byte ptr [ecx]; add byte ptr [eax], al; mov dword ptr [esp], edi; call dword ptr [esi]; 
0x000dc0d6: ror byte ptr [edi], 0x84; xchg eax, ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x76d3db94], cl; ret 0x748b; 
0x001481f8: ror byte ptr [edi], 0x85; add dword ptr [ecx], 0xf660000; xlatb; ret; 
0x00087c04: ror byte ptr [edi], 0x85; add eax, 0xe9fffff6; inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x0008c0d4: ror byte ptr [edi], 0x85; and eax, 0xe9fffff5; pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00087be4: ror byte ptr [edi], 0x85; and eax, 0xe9fffff6; pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x00095754: ror byte ptr [edi], 0x85; cmc; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00087a9e: ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x001482f8: ror byte ptr [edi], 0x85; jno 0x1482ff; add byte ptr [eax], al; xor eax, eax; ret; 
0x00095519: ror byte ptr [edi], 0x85; mov al, 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x00078d6b: ror byte ptr [edi], 0x85; nop; add dword ptr [eax], eax; add byte ptr [ebx - 0x1876d], cl; jmp dword ptr [ebp - 0x75]; 
0x0009547b: ror byte ptr [edi], 0x85; out dx, al; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x00079bd6: ror byte ptr [edi], 0x85; push cs; add al, byte ptr [eax]; add byte ptr [ebx - 0x1876d], cl; jmp dword ptr [ebp - 0x75]; 
0x000d5778: ror byte ptr [edi], 0x85; ret 2; 
0x000a25bf: ror byte ptr [edi], 0x85; ret; 
0x001482b9: ror byte ptr [edi], 0x85; xor byte ptr [edx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0003f1b0: ror byte ptr [edi], 0x88; ret 1; 
0x00123097: ror byte ptr [edi], 0x88; xchg eax, edx; add dword ptr [eax], eax; add byte ptr [ebp - 0x9d7b], cl; dec dword ptr [ecx - 0xbb6b]; jmp dword ptr [esi - 0x39]; 
0x00055257: ror byte ptr [edi], 0x89; push cs; add dword ptr [eax], eax; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x7d]; 
0x0011a933: ror byte ptr [edi], 0x89; salc; add dword ptr [eax], eax; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x75]; 
0x001236e1: ror byte ptr [edi], 0x8e; add byte ptr [ecx], 0; add byte ptr [ebx - 0xdb43], cl; jmp dword ptr [esi - 0x70]; 
0x0004e5ae: ror byte ptr [edi], 0x8e; jmp dword ptr [ecx]; 
0x0004c90c: ror byte ptr [edi], 0x8e; ret 5; 
0x000b984c: ror byte ptr [edi], 0x92; ret 0xd028; 
0x000c8ffd: ror byte ptr [edi], 0x94; ret 0x22e9; 
0x0001bbdc: ror byte ptr [edi], 0x94; ret 0x66e9; 
0x0009a06c: ror byte ptr [edi], 0x94; ret 0x7c83; 
0x0011b694: ror byte ptr [edi], 0x94; ret 0x8365; 
0x000c8eb9: ror byte ptr [edi], 0x94; ret 0x85c7; 
0x000c821e: ror byte ptr [edi], 0x94; ret 0x8d89; 
0x000c8d7a: ror byte ptr [edi], 0x94; ret 0xa5e9; 
0x0009a9d9: ror byte ptr [edi], 0x94; ret 0xbc83; 
0x000db4b3: ror byte ptr [edi], 0x94; ret 0xc481; 
0x000f8aa7: ror byte ptr [edi], 0x94; ret 0xc683; 
0x0012f48f: ror byte ptr [edi], 0x94; ret 0xca85; 
0x0003ef26: ror byte ptr [edi], 0x94; ret 0xd089; 
0x00023cd7: ror byte ptr [edi], 0x94; ret 0xfe83; 
0x000e0914: ror byte ptr [edi], 0x94; rol byte ptr [ebx - 0x49f0a73c], 0xc0; pop ebx; ret; 
0x000d84ae: ror byte ptr [edi], 0x94; rol byte ptr [ebx - 0x49f0d73c], 0xc0; pop ebx; ret; 
0x0011371b: ror byte ptr [edi], 0x95; ret 0x17e9; 
0x0006d681: ror byte ptr [edi], 0x95; ret 0x4ae9; 
0x00116419: ror byte ptr [edi], 0x95; ret 0x5489; 
0x000e92c2: ror byte ptr [edi], 0x95; ret 0x658d; 
0x000f7c58: ror byte ptr [edi], 0x95; ret 0x7c8b; 
0x000702b3: ror byte ptr [edi], 0x95; ret 0x83eb; 
0x00060ee0: ror byte ptr [edi], 0x95; ret 0x8589; 
0x0005377f: ror byte ptr [edi], 0x95; ret 0x9520; 
0x0011f018: ror byte ptr [edi], 0x95; ret 0xaaeb; 
0x0011ef30: ror byte ptr [edi], 0x95; ret 0xaeeb; 
0x0011e6b0: ror byte ptr [edi], 0x95; ret 0xb0eb; 
0x00118593: ror byte ptr [edi], 0x95; ret 0xc483; 
0x000a9512: ror byte ptr [edi], 0x95; ret 0xd021; 
0x00114e47: ror byte ptr [edi], 0x95; ret 0xd089; 
0x0006d5d0: ror byte ptr [edi], 0x95; ret 0xd284; 
0x000a5d60: ror byte ptr [edi], 0x95; ret 0xd589; 
0x00027925: ror byte ptr [edi], 0x95; ret 0xd789; 
0x00098fb9: ror byte ptr [edi], 0x95; ret 0xf883; 
0x000a7ece: ror byte ptr [edi], 0x95; ret 0xf8c1; 
0x00114e78: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0e33c], 0xc0; ret; 
0x000ed9ee: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x00113bbc: ror byte ptr [edi], 0x95; ror byte ptr [edi], 0xb6; ror byte ptr [ebx - 0x74ebdba4], 0x74; and al, 0x18; add esp, 0x1c; ret; 
0x000d9829: ror byte ptr [edi], 0x9e; ret 0xf883; 
0x0002fe00: ror byte ptr [edi], 0xad; fadd dword ptr [edx + 0x74]; sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x0012fa0a: ror byte ptr [edi], 0xb6; or cl, byte ptr [ebx - 0x8f6d]; jmp dword ptr [ebp - 0x75]; 
0x000710c2: ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfe18], 0x18; pop esi; ret; 
0x000a7265: ror byte ptr [edi], 0xb6; ror byte ptr [ebp + 0x5eff0044], 0x5f; ret; 
0x000f071b: ror byte ptr [edi], 0xb6; ror byte ptr [ebx - 0x748fdba4], 0x74; and al, 0x74; mov edi, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x00114111: ror byte ptr [edi], 0xb6; ror byte ptr [ebx - 0x74ebdb8c], 0x7c; and al, 0x18; add esp, 0x1c; ret; 
0x00113bbf: ror byte ptr [edi], 0xb6; ror byte ptr [ebx - 0x74ebdba4], 0x74; and al, 0x18; add esp, 0x1c; ret; 
0x000d3448: ror byte ptr [edi], 1; dec esp; ret 0xf289; 
0x0006412e: ror byte ptr [edi], 1; inc edx; ret 0x4589; 
0x0011c4cb: ror byte ptr [edi], 1; inc esp; and dword ptr [edi + edi*8 - 0x3b7c0001], 8; pop ebx; ret; 
0x00166f14: ror byte ptr [edi], 1; std; jmp dword ptr [eax + 0x10]; 
0x000951a0: ror byte ptr [edi], 1; test cl, bl; add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x000b3f56: ror byte ptr [edi], 1; xchg byte ptr [ebx], bl; add dword ptr [eax], eax; add byte ptr [ebx - 0x20783b83], cl; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x00056d43: ror byte ptr [edi], 1; xchg dword ptr [ecx + eax], esp; add byte ptr [ecx], al; test dword ptr [eax - 0x16000011], esi; ret 0xfffc; 
0x00056bca: ror byte ptr [edi], cl; dec ecx; ret 0x189; 
0x000739c4: ror byte ptr [edi], cl; dec ecx; ret 0x4489; 
0x0005894d: ror byte ptr [edi], cl; dec ecx; ret 0x8589; 
0x00146857: ror byte ptr [edi], cl; test byte ptr [edx - 0xa000000], ah; ret 0x7501; 
0x00043b8f: ror byte ptr [edi], cl; test dh, bl; add al, byte ptr [eax]; add byte ptr [eax - 0x53843], al; call dword ptr [ebx + 0xf]; 
0x000dbd4b: ror byte ptr [edi], cl; test dword ptr [edx - 0x74fffffc], ebx; mov ah, 0x24; call 0x850dbd5a; test byte ptr [edi], 0x94; ret 0xc984; 
0x000daaa4: ror byte ptr [edi], cl; xchg eax, ebp; ret 0x840f; 
0x0002e733: ror byte ptr [edi], cl; xchg eax, ebp; ret 0xb60f; 
0x000c7a17: ror byte ptr [edi], cl; xchg eax, ebp; ret 0xd021; 
0x000a8154: ror byte ptr [edi], cl; xchg eax, ebp; ret 0xd138; 
0x000f12af: ror byte ptr [edx - 0x3c7efffd], 0x41; sbb eax, 0x5c89000b; and al, 0xc; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0007dd04: ror byte ptr [edx], 0; add ebx, 0xdc81d; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x0014921e: ror byte ptr [edx], 0x5f; ret; 
0x001987b9: ror byte ptr [edx], cl; push cs; adc al, 0x43; ret; 
0x0010fc23: ror byte ptr [esi], 0x39; ret 0x2c72; 
0x0010fcde: ror byte ptr [esi], 0x39; ret 0x3772; 
0x00149232: ror byte ptr [esi], 0x5f; ret; 
0x00041ed0: ror dword ptr [eax + 0x5be37506], 1; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x0012e723: ror dword ptr [eax + 7], cl; add byte ptr [ecx - 0x76f3dba4], cl; ret; 
0x0002f0bb: ror dword ptr [eax + eax], 1; mov eax, esi; mov edi, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x0008d2f6: ror dword ptr [eax + eax], cl; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d1f4: ror dword ptr [eax + eax], cl; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008ebd9: ror dword ptr [eax], cl; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00147bd7: ror dword ptr [ebp + 0xf661049], 1; xlatb; ret 0xc085; 
0x0007da27: ror dword ptr [ebx + 0x10c248c], 1; add byte ptr [eax], al; mov dword ptr [ecx], edx; add esp, 0x100; ret; 
0x0002e13a: ror dword ptr [ebx + 0x9024bc], 0; add byte ptr [edi + 0xafb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013141c: ror dword ptr [ebx + 0xf082474], -0x6e; ret 0xb60f; 
0x0004c828: ror dword ptr [ebx - 0x1af6b], cl; dec dword ptr [ebx - 0xf745]; jmp dword ptr [ebp - 0x77]; 
0x00029454: ror dword ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x7d]; 
0x000b42e8: ror dword ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x000e5e4d: ror dword ptr [ebx], 1; add byte ptr [ebx - 0x8f7dbbc], cl; ret 0xeff0; 
0x000e80bc: ror dword ptr [ecx + 0x245c8bda], 4; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x000e816c: ror dword ptr [ecx + 0x245c8bda], 4; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000deb9c: ror dword ptr [ecx + 0x245c8bda], 4; mov eax, 6; call dword ptr gs:[0x10]; 
0x000f7a81: ror dword ptr [ecx + 0xc558bd5], -0x75; inc ecx; or al, 0x39; ret 0xf275; 
0x00190467: ror dword ptr [ecx + 0xd1cfff5], 1; pop ebx; mov ch, dh; jmp dword ptr [edx]; 
0x000b8308: ror dword ptr [ecx - 0x1ba2762a], 1; mov ebx, eax; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x000e5e7a: ror dword ptr [ecx - 0x3fcef7b8], 1; pop ebx; ret; 
0x0002da11: ror dword ptr [ecx - 0x74f3dbac], 0x44; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0002d402: ror dword ptr [ecx - 0x74f7dbac], 0x44; and al, 0xc; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0002d65a: ror dword ptr [ecx - 0x74fbdbac], 0x44; and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000ccb43: ror dword ptr [ecx - 0x76cfdbbc], 1; ret 0xf089; 
0x0008d348: ror dword ptr [ecx], -0x2d; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0002dc7a: ror dword ptr [ecx], -0x77; dec edx; adc al, 0x89; push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x000948f6: ror dword ptr [edi + 0x3000c60], 0xc; cdq; jmp ecx; 
0x0008f622: ror dword ptr [edi + 0x3000cb1], 0xc; cdq; jmp ecx; 
0x000effa6: ror dword ptr [edi + 0x30], 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000de5a6: ror dword ptr [edi + 0x4a], 0xc; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000948b6: ror dword ptr [edi + 0x60], 0xc; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0012f582: ror dword ptr [edi + ecx], 1; xchg eax, edx; ret 0xcf89; 
0x0008e822: ror dword ptr [edi], -0x41; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00095783: ror dword ptr [edi], -0x43; rol byte ptr [ecx], 0xc8; ret; 
0x000a7262: ror dword ptr [edi], -0x62; ror byte ptr [edi], 0xb6; ror byte ptr [ebp + 0x5eff0044], 0x5f; ret; 
0x0012ff05: ror dword ptr [edi], -0x6e; ret 0xb60f; 
0x000d3e0e: ror dword ptr [edi], -0x6e; ret 0xd138; 
0x000e14e6: ror dword ptr [edi], 0x1b; or al, 0; mov eax, dword ptr [ecx - 0xf8]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0011c3e6: ror dword ptr [edi], 0x6c; or byte ptr [eax], al; mov eax, dword ptr [ecx - 0x58]; lea edx, dword ptr [ecx + 0x33ac]; mov dword ptr gs:[eax], edx; ret; 
0x00149c79: ror dword ptr [edi], 0x74; adc eax, dword ptr [ebx - 0x218bfe20]; lea eax, dword ptr [edi - 0x10]; pop edi; ret; 
0x000dab59: ror dword ptr [edi], 1; test byte ptr [eax - 0x74ffffff], bl; inc ebp; ror byte ptr [ebx - 0x2f083b83], 1; ret 0x5489; 
0x0003f943: ror dword ptr [edx], 0; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x0017c4db: ror dword ptr [edx], 1; push cs; adc al, 0x41; ret; 
0x0019a38e: ror dword ptr [edx], cl; push cs; adc al, 0x43; ret; 
0x0007b979: ror dword ptr [edx], cl; std; jmp dword ptr [ebp - 0x7d]; 
0x000efba7: ror dword ptr [esi + 0x34], 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0010504a: ror eax, 8; ret; 
0x00019528: ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000fe8a9: ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; add esp, 0x18; pop ebx; ret; 
0x000fc0e1: ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; add esp, 8; pop ebx; ret; 
0x00032ae2: ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp + 4], edx; call eax; 
0x00056700: ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x5c]; mov dword ptr [esp], edx; call eax; 
0x0004e380: ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x64]; mov dword ptr [esp], edx; call eax; 
0x000428a8: ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x70]; mov dword ptr [esp], edx; call eax; 
0x00047998: ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp + 4], edx; lea edx, dword ptr [esp + 0x20d0]; mov dword ptr [esp], edx; call eax; 
0x0005ba50: ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp + 4], edx; lea edx, dword ptr [esp + 0x8190]; mov dword ptr [esp], edx; call eax; 
0x000fb888: ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x20]; mov dword ptr [esp], edx; call eax; 
0x0003ec16: ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp + 8], esi; mov dword ptr [esp], edx; call eax; 
0x00026c03: ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], 1; call eax; 
0x00028d0f: ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], ecx; call eax; 
0x0001ba7e: ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0008de0f: ror eax, cl; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00027226: ror edi, -0x43; pop ss; add byte ptr [ebx - 0x12f7f], cl; jmp dword ptr [ebp + 3]; 
0x000aac26: ror edi, -0x7d; str word ptr [ebx - 0xf777]; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0012ea6b: ror edx, 9; xor edx, dword ptr gs:[0x18]; call edx; 
0x000ff6fb: ror edx, 9; xor edx, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000949b7: ror esi, 0x5f; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001890f5: sahf; add dword ptr [eax], eax; or byte ptr [edx - 0xc], al; call edi; 
0x0008b83e: sahf; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; lcall ptr [edi + 0x5b]; ret; 
0x0019a9e9: sahf; clc; jmp dword ptr [edi]; 
0x0017b088: sahf; clc; out dx, eax; call dword ptr [eax]; 
0x001591d2: sahf; int 0xe0; fdivr st(4); test al, 0x97; xchg eax, esp; ret; 
0x00184856: sahf; int1; jmp dword ptr [edx]; 
0x000c5c09: sahf; pop esi; pop edi; ret; 
0x00029190: sahf; pop ss; add byte ptr [ecx + 0xfcec], al; add byte ptr [ecx - 0x8f6b], cl; jmp dword ptr [ebp - 0x75]; 
0x00159385: sahf; ret 0x38ae; 
0x000ab3cc: sahf; ret 0xd129; 
0x000d982b: sahf; ret 0xf883; 
0x000c89b3: sahf; ret 0xfffb; 
0x00026c58: sahf; ret; 
0x000a7264: sahf; ror byte ptr [edi], 0xb6; ror byte ptr [ebp + 0x5eff0044], 0x5f; ret; 
0x000023df: sahf; sbb byte ptr [eax], cl; ret 0x5576; 
0x00166bd0: sal ah, 0xfc; call dword ptr [eax - 0xb]; 
0x00166bd0: sal ah, 0xfc; call dword ptr [eax - 0xb]; cld; jmp eax; 
0x0005df6a: sal ah, 0xff; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x75]; 
0x0016d460: sal ah, 1; stc; jmp dword ptr [eax]; 
0x000d9a0b: sal ah, cl; jmp dword ptr [esi - 0x70]; 
0x00175ee0: sal al, 0xee; jmp dword ptr [edx]; 
0x00169ac9: sal al, 0xff; lock xor byte ptr [ecx], al; add byte ptr [ecx + eax*8 - 0x10], al; call dword ptr [eax]; 
0x00166bb4: sal al, 1; cld; jmp dword ptr [eax - 0xf]; 
0x000aad0a: sal bh, 0xd0; add eax, 0x16e; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0011baa0: sal bh, 0xd0; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x0001a401: sal bh, 0xd0; add esp, 8; pop ebx; ret; 
0x0002f7d2: sal bh, 0xd8; pop esi; pop edi; ret; 
0x000b8579: sal bh, 1; fdiv dword ptr [ebp + 5]; mov eax, 0x80000000; mov dword ptr gs:[0x6c], eax; mov eax, 0xbe; int 0x80; 
0x0011b716: sal bh, cl; rol byte ptr [ebx - 0x2f76d73c], cl; pop ebx; ret; 
0x00188131: sal bl, 1; call dword ptr [eax]; 
0x000b903d: sal bl, 1; ret; 
0x000d0a47: sal byte ptr [eax + ebx - 0x7d], cl; ret 0x8d04; 
0x00119bef: sal byte ptr [eax + ecx - 0x73], 0x56; dec esp; mov dword ptr [esp], edx; call eax; 
0x000fc2eb: sal byte ptr [eax + ecx - 0x75], cl; push eax; add al, 0x89; adc al, 0x24; call dword ptr [eax]; 
0x0014a530: sal byte ptr [eax + ecx - 0x77], 1; add al, 0x24; call 0x16f50; add esp, 0x18; pop ebx; ret; 
0x00023876: sal byte ptr [eax + ecx - 0x77], cl; add al, 0x24; call 0x16f50; add esp, 0x18; pop ebx; ret; 
0x0006c205: sal byte ptr [eax + ecx - 0x77], cl; add al, 0x24; call 0x6bf30; add esp, 0x18; pop ebx; ret; 
0x00073255: sal byte ptr [eax + ecx - 0x77], cl; add al, 0x24; call 0x71f60; add esp, 0x18; pop ebx; ret; 
0x0010370d: sal byte ptr [eax + ecx - 0x7d], 0xc4; adc al, 0x5b; pop ebp; ret; 
0x0001959e: sal byte ptr [eax + edx - 0x75], 0x4c; and al, 0x18; lea edx, dword ptr [ecx + ebp*8 + 0x258]; mov dword ptr [esp], edx; call eax; 
0x00083fc3: sal byte ptr [eax], 0x5f; pop esi; ret; 
0x0004c43a: sal byte ptr [eax], 0xc0; add eax, 0x107; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00094742: sal byte ptr [eax], 0xe8; push esi; or dword ptr [eax], eax; add ecx, 0xc61bb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0015a61c: sal byte ptr [eax], 0xf3; jmp eax; 
0x0006b67d: sal byte ptr [ebp + 0x10], cl; or dword ptr [esi + 0x3c], 8; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000720ac: sal byte ptr [ebp + 0x11], cl; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000721fc: sal byte ptr [ebp + 0x11], cl; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x001123d0: sal byte ptr [ebp + 0x15], 0x31; ror byte ptr [ebx - 0x74ebdb8c], 0x7c; and al, 0x18; add esp, 0x1c; ret; 
0x00035cd8: sal byte ptr [ebp + 0x15], 0xf6; ret 0x7501; 
0x00112116: sal byte ptr [ebp + 0x17], 0x8b; inc edi; add al, 0x89; cmp al, 0x24; call dword ptr [eax + 0x10]; 
0x0007c322: sal byte ptr [ebp + 0x1a], 0xeb; cmp dword ptr [eax + 0x4244489], edx; mov eax, dword ptr [esi + 0x24]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x000e798e: sal byte ptr [ebp + 0x1c], 0x87; sar dword ptr [eax + 0xcb], cl; call dword ptr gs:[0x10]; 
0x000e7a0e: sal byte ptr [ebp + 0x1c], 0x87; sar dword ptr [eax + 0xcc], cl; call dword ptr gs:[0x10]; 
0x000b55ae: sal byte ptr [ebp + 0x1c], 0x87; sar dword ptr [eax + 0xce], cl; call dword ptr gs:[0x10]; 
0x000b912a: sal byte ptr [ebp + 0x1e], 0x89; rol dword ptr [edi + 0xd5b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b91aa: sal byte ptr [ebp + 0x1e], 0x89; rol dword ptr [edi + 0xd6b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ecb35: sal byte ptr [ebp + 0x20], 0x8b; dec esp; and al, 0x10; xchg ebx, edx; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x000b94c9: sal byte ptr [ebp + 0x23], 0x87; fistp qword ptr [eax + 0xd0]; call dword ptr gs:[0x10]; 
0x000b9559: sal byte ptr [ebp + 0x23], 0x87; fistp qword ptr [eax + 0xd2]; call dword ptr gs:[0x10]; 
0x000e6d6d: sal byte ptr [ebp + 0x2b], 0x87; fistp qword ptr [eax + 0x91]; call dword ptr gs:[0x10]; 
0x000e6e2d: sal byte ptr [ebp + 0x2b], 0x87; fistp qword ptr [eax + 0x92]; call dword ptr gs:[0x10]; 
0x000e0c1d: sal byte ptr [ebp + 0x2b], 0x87; fistp qword ptr [eax + 0xa8]; call dword ptr gs:[0x10]; 
0x000df12d: sal byte ptr [ebp + 0x2b], 0x87; fistp qword ptr [eax + 0xdd]; call dword ptr gs:[0x10]; 
0x0002e241: sal byte ptr [ebp + 0x2c], 0xb9; or byte ptr [eax], al; add byte ptr [eax], al; xchg ebx, edx; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000de7f3: sal byte ptr [ebp + 0x2e], 0x80; int 0x80; 
0x000de7f3: sal byte ptr [ebp + 0x2e], 0x80; int 0x80; xchg edi, ebx; mov eax, 5; call dword ptr gs:[0x10]; 
0x000de91b: sal byte ptr [ebp + 0x2f], 0x87; fistp qword ptr [eax + 0x127]; call dword ptr gs:[0x10]; 
0x000f0c55: sal byte ptr [ebp + 0x2f], 0x87; fistp qword ptr [eax + 0x159]; call dword ptr gs:[0x10]; 
0x000b7c5a: sal byte ptr [ebp + 0x36], cl; mov edi, 0xffffffff; mov esi, edx; xchg edi, ebx; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x00074d5a: sal byte ptr [ebp + 0x37], 0x8b; mov esp, dword ptr [esi + edi*8 - 0x12ce0001]; mov dword ptr [esp + 0x18], edx; mov dword ptr [esp], 0; call dword ptr [ecx]; 
0x00087a51: sal byte ptr [ebp + 0x38], 0x83; ret; 
0x00095c60: sal byte ptr [ebp + 0x3d], 0x66; pmovmskb eax, mm1; bsf eax, eax; lea eax, dword ptr [edx + eax + 0x30]; ret; 
0x00112338: sal byte ptr [ebp + 0x3d], 0x8b; inc edi; add al, 0x89; cmp al, 0x24; call dword ptr [eax + 0x10]; 
0x000c5999: sal byte ptr [ebp + 0x47], 0x89; call 0x1c30b62b; mov ebx, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000c5a79: sal byte ptr [ebp + 0x47], 0x89; call 0x1c30b70b; mov ebx, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000f0b79: sal byte ptr [ebp + 0x47], 0x89; call 0x1c33680b; mov ebx, eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x000f0de5: sal byte ptr [ebp + 0x47], 0xb0; or ecx, dword ptr [ecx - 0x76e3dba4]; ret; 
0x00126e33: sal byte ptr [ebp + 0xa], cl; add esp, 0x34; pop ebx; pop esi; ret; 
0x000fc1b2: sal byte ptr [ebp + 0xc], 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0011f9a9: sal byte ptr [ebp + 0xc], cl; add esp, 0x18; pop ebx; ret; 
0x00148f0f: sal byte ptr [ebp + 0xe], cl; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x000cb74c: sal byte ptr [ebp + 9], cl; add esp, 0x10; pop esi; pop edi; pop ebp; ret; 
0x000ddc30: sal byte ptr [ebp + eax*2 - 0x75], 0x5c; and al, 0x70; mov esi, dword ptr [esp + 0x74]; mov edi, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x0011c420: sal byte ptr [ebp + ecx - 0x75], 0x5c; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000fc1c6: sal byte ptr [ebp - 0x14], 0x5e; pop ebx; pop edx; ret; 
0x000ca5d2: sal byte ptr [ebp - 0x15], cl; add esp, 0x10; pop esi; pop edi; pop ebp; ret; 
0x0011cfc9: sal byte ptr [ebp - 0x1c], cl; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003f5ab: sal byte ptr [ebp - 0x1e], cl; lea eax, dword ptr [ebx + 0x1778]; mov byte ptr [eax + ecx], 0; pop ebx; ret; 
0x000bb1df: sal byte ptr [ebp - 0x20], cl; pop esi; ret; 
0x00077fd7: sal byte ptr [ebp - 0x22], 0x8b; cmp dword ptr [eax - 2], -1; jmp dword ptr [ebp - 0x77]; 
0x0011e4f9: sal byte ptr [ebp - 0x24], 0x31; rol byte ptr [ebx + 0x5f5e20c4], 0x5d; ret; 
0x000dab55: sal byte ptr [ebp - 0x28], 0x39; ror dword ptr [edi], 1; test byte ptr [eax - 0x74ffffff], bl; inc ebp; ror byte ptr [ebx - 0x2f083b83], 1; ret 0x5489; 
0x0002f566: sal byte ptr [ebp - 0x37], 0x83; ljmp 1:0xb8ea7501; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x00099966: sal byte ptr [ebp - 0x41], 0x89; clc; pop esi; pop edi; ret; 
0x000ed067: sal byte ptr [ebp - 0x42], 0x8b; dec ebp; rol byte ptr [edi + 0x6b8cb], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00024445: sal byte ptr [ebp - 0x50], 0x83; ret 0x8901; 
0x001241d7: sal byte ptr [ebp - 0x5d], 0x8d; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0xf74d], cl; jmp dword ptr [ebp - 0x39]; 
0x00098db1: sal byte ptr [ebp - 0x79], 0x8b; push ebp; mov esp, 0x830002c6; ret 0x8901; 
0x00129a49: sal byte ptr [ebp - 0xa], 0xb8; add al, 0; add byte ptr [eax], al; add esp, 0xc; ret; 
0x00073141: sal byte ptr [ebp - 0xc], 0xf3; ret; 
0x00082d52: sal byte ptr [ebp - 0xd], 0x4a; mov eax, edx; ret; 
0x0002f54c: sal byte ptr [ebp - 0xf], 1; xor eax, eax; pop esi; pop edi; ret; 
0x000faec7: sal byte ptr [ebx + ecx + 0x39], cl; ret 0x77e; 
0x0014ab62: sal byte ptr [ebx + ecx - 0x17], 0x16; add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add bl, dh; ret; 
0x00064fb0: sal byte ptr [ebx + ecx - 0x75], cl; sbb dword ptr [eax - 0x77000000], 0xd2ff2404; add esp, 0x1c; ret; 
0x000a7cc2: sal byte ptr [ebx + ecx - 0x7d], 0xc4; and byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x0015a6ac: sal byte ptr [ebx + esi*8], 1; push eax; xor al, 0xf3; call dword ptr [eax]; 
0x0010fcda: sal byte ptr [ebx - 0x7d], cl; ror byte ptr [esi], 0x39; ret 0x3772; 
0x0015a688: sal byte ptr [ebx], 0xf3; jmp eax; 
0x0006ab04: sal byte ptr [ecx + 0xf], 0xbe; push eax; inc esi; mov edx, dword ptr [eax + edx + 0x94]; mov dword ptr [esp], eax; call dword ptr [edx + 0x30]; 
0x00083635: sal byte ptr [ecx + ebp + 0x38], cl; ret 0x3174; 
0x000bfd81: sal byte ptr [ecx + ebx*2 - 0x75], 0xb5; sar dh, 0xff; jmp dword ptr [ebp - 0x7d]; 
0x00111e18: sal byte ptr [ecx + ecx - 0x75], 0x50; add al, 0x89; add al, 0x24; call dword ptr [edx + 0x10]; 
0x001189e2: sal byte ptr [ecx + edi*2 - 0x77], 0xb4; and al, 0x2c; add al, 0; add byte ptr [ecx - 0x7cf5740e], cl; ret 0x8d04; 
0x00023929: sal byte ptr [ecx + edi*4 - 0x75], 0x5c; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00113114: sal byte ptr [ecx + edx + 0x31], 0xc0; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0001aef4: sal byte ptr [ecx + edx - 0x75], 0; mov eax, dword ptr [eax + 4]; add esp, 0x28; pop ebx; ret; 
0x0015a634: sal byte ptr [ecx], 1; inc dword ptr [eax]; xor dh, bl; push dword ptr [eax]; xor dh, bl; jmp dword ptr [eax + 0x32]; 
0x0003a0ab: sal byte ptr [ecx], 1; sar byte ptr [ecx], cl; ret 0x820f; 
0x0003d049: sal byte ptr [ecx], 1; sar byte ptr [ecx], cl; ret 0x830f; 
0x000833d0: sal byte ptr [edi + eax + 0xf], cl; mov esi, 0x75f239d2; out 0x5e, al; pop edi; pop ebp; ret; 
0x00083350: sal byte ptr [edi + eax + 0xf], cl; mov esi, 0x75f239d2; out dx, al; pop esi; ret; 
0x000eb8fe: sal byte ptr [edi + eax - 0x77], 0xfa; call 0xeb8d0; mov eax, dword ptr [esi]; mov dword ptr [esp], eax; call edi; 
0x000c0a16: sal byte ptr [edi + eax*8 - 0x77], 1; ret 0x3a8b; 
0x0007c2dc: sal byte ptr [edi + ebx - 0x70], 0x39; ret 0x476; 
0x0007039e: sal byte ptr [edi + ecx - 0x75], 0x5c; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000e3e62: sal byte ptr [edi + ecx - 0x75], cl; push edi; adc al, 1; ret 0x2c6; 
0x001299b6: sal byte ptr [edi + edx - 0x75], 0x54; and al, 0x24; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x20]; mov dword ptr [esp], edx; call eax; 
0x000ea066: sal byte ptr [edi + edx - 0x75], cl; add al, byte ptr [ebp - 0x7cf68b40]; ret 0x8904; 
0x000a73a6: sal byte ptr [edi + edx - 0x78], cl; rol dword ptr [eax + 0x20740fe1], 1; ret; 
0x00167394: sal byte ptr [edi], 1; std; jmp dword ptr [eax + 0x38]; 
0x000a8459: sal byte ptr [edx + eax - 0x77], cl; add dh, bl; ret; 
0x0016b98c: sal byte ptr [edx + eax], 0; jp 0x16b98a; call esp; 
0x000eaf2b: sal byte ptr [edx + ebp - 0x77], 0xf0; mov ebx, dword ptr [esp + 0x70]; mov esi, dword ptr [esp + 0x74]; mov edi, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x0011b1e3: sal byte ptr [edx + ebx*2 - 0x75], 0x50; or dh, dh; ret 0x7401; 
0x0011262c: sal byte ptr [edx + ebx*4 - 0x75], 0x46; add al, 0x89; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x00076d01: sal byte ptr [edx + ecx - 0x77], 0x54; and al, 0x28; call eax; 
0x00074f82: sal byte ptr [edx + ecx - 0x77], cl; inc esp; and al, 0x1c; call edx; 
0x00111bda: sal byte ptr [edx + edx - 0x75], 0x50; add al, 0x89; add al, 0x24; call dword ptr [edx + 0x10]; 
0x0014adf6: sal byte ptr [edx + edx - 0x75], 0x83; cmp al, 0x39; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00103703: sal byte ptr [edx + edx - 0x75], 0x83; mov esp, 0x8500002e; sal byte ptr [eax + ecx - 0x7d], 0xc4; adc al, 0x5b; pop ebp; ret; 
0x000fc0d8: sal byte ptr [edx + edx - 0x75], cl; cmp eax, 0x38; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00076e43: sal byte ptr [edx + edx - 0x77], 0x54; and al, 0x28; mov dword ptr [esp + 0x2c], ecx; call eax; 
0x00066746: sal byte ptr [edx + edx - 0x77], 0xf0; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000fffd3: sal byte ptr [edx + edx - 0x7d], 0xc4; and byte ptr [eax - 1], bh; pop esi; pop edi; pop ebp; ret; 
0x00111f8b: sal byte ptr [edx + edx*2 - 0x75], 0x50; or dh, dh; ret 0x7401; 
0x000fb761: sal byte ptr [edx - 0xc], 1; xor eax, eax; pop esi; ret; 
0x0015a65c: sal byte ptr [edx], 0xf3; call eax; 
0x0015a65c: sal byte ptr [edx], 0xf3; call eax; xor dh, bl; jmp eax; 
0x00167370: sal byte ptr [edx], 0xfd; call dword ptr [eax + 0x33]; 
0x00167370: sal byte ptr [edx], 0xfd; call dword ptr [eax + 0x33]; std; jmp eax; 
0x0017a225: sal byte ptr [edx], cl; out dx, eax; jmp dword ptr [edx]; 
0x0018a8c0: sal byte ptr [esi + 0x31ec0001], 0xf5; call dword ptr [ebp]; 
0x0001bd26: sal byte ptr [esi + 0x6b], cl; ret 0x893c; 
0x000ce0d4: sal byte ptr [esi + eax - 0x75], cl; inc eax; adc byte ptr [ecx - 0x3fceefbe], cl; pop esi; ret; 
0x0010fc1f: sal byte ptr [esi + eax*2 - 0x7d], cl; ror byte ptr [esi], 0x39; ret 0x2c72; 
0x00129967: sal byte ptr [esi + ecx - 0x75], 0x44; and al, 0x1c; add esp, 0x28; pop ebx; ret; 
0x000197e6: sal byte ptr [esi + ecx - 0x75], 0x54; and al, 0x20; mov dword ptr [esp], edx; call eax; 
0x0014ac7c: sal byte ptr [esi + ecx - 0x77], 1; xchg eax, ebx; cwde; sbb eax, 0x4890000; and al, 0xe8; ret; 
0x000836a6: sal byte ptr [esi + edi + 0x38], cl; ret 0x4974; 
0x00095b17: sal byte ptr [esi + edx + 0xf], 0xbc; rol byte ptr [ecx], 0xd0; add eax, ecx; ret; 
0x0007312b: sal byte ptr [esi + edx - 0x7d], 0xc1; xor byte ptr [ecx], bh; ret 0x775; 
0x00097dcf: sal byte ptr [esi - 0x7d], 0xc4; adc byte ptr [ecx + 0x5d5f5ef0], cl; ret; 
0x0000d0a8: sal byte ptr [esi], 3; add byte ptr [edi + 1], dl; add byte ptr [eax], al; and al, byte ptr [eax]; or al, 0; ret; 
0x0007c5ad: sal byte ptr [esp + eax - 0x78], 0x64; adc dword ptr [ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000f1779: sal byte ptr [esp + ebx - 0x75], cl; mov ebp, 0xfffffbf4; mov ecx, dword ptr [ebp - 0x3fc]; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0006bdd1: sal byte ptr [esp + ecx - 0x75], cl; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000dfcb1: sal byte ptr [esp + edx - 0x75], cl; dec esp; and al, 0x2c; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000d0b69: sal byte ptr [esp + edx - 0x7d], cl; ret 0x8d04; 
0x000fab61: sal byte ptr [esp - 0x77], 0x74; and al, 4; mov edx, dword ptr [esi + 0x30]; mov dword ptr [esp], edx; call eax; 
0x0018ca5d: sal ch, 0xff; ret 0; 
0x0016da7c: sal ch, 1; add al, byte ptr [eax]; inc esp; movsd dword ptr es:[edi], dword ptr [esi]; cli; call dword ptr [eax]; 
0x000b3e36: sal cl, 0xe; add byte ptr [edi + 0x8db8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008c07c: sal dh, 0xff; jmp dword ptr [esi + 0xf]; 
0x0017b8f8: sal dl, 0xef; call dword ptr [eax]; 
0x00186a40: sal dl, 0xf2; call ecx; 
0x00094911: sal dword ptr [eax + 0xc], 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0007312f: sal dword ptr [eax], 0x39; ret 0x775; 
0x00094955: sal dword ptr [eax], 0x60; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00168868: sal dword ptr [ebp + ebp*8 - 1], 0x70; ret 0; 
0x000b9061: sal dword ptr [ebp - 0x26], 0x65; mov dword ptr [0x68], ecx; nop; lea esi, dword ptr [esi]; ret; 
0x000b9382: sal dword ptr [ebx - 0x64], 0xe; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000b7bc2: sal dword ptr [ebx], -0x4c; push cs; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0008f50e: sal dword ptr [ebx], -0x4d; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b92c2: sal dword ptr [ebx], -0x63; push cs; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000948d4: sal dword ptr [ecx + 0x3000c60], 0xc; cdq; jmp ecx; 
0x0007fa59: sal dword ptr [ecx + eax + 0x40], 1; pop edi; ret; 
0x0002d25a: sal dword ptr [ecx], -0x38; shr eax, 0x1f; ret; 
0x0002e92b: sal dword ptr [ecx], 1; rol cl, 0xe9; add dh, dh; ret 0xf302; 
0x0008de2a: sal dword ptr [edi + 0x3000cc8], 0xc; cdq; jmp ecx; 
0x0008e7fd: sal dword ptr [edi + edi*4], 0xc; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0013289c: sal dword ptr [edi + edi*8 - 1], cl; add ebx, 0x35104; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0006c059: sal dword ptr [edx - 0xc], 1; mov eax, dword ptr [esp + 8]; add eax, esi; pop esi; ret; 
0x00187029: sal dword ptr [edx - 0xe], cl; jmp dword ptr [edx]; 
0x000efd7f: sal dword ptr [esi + 0x32], 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0009150f: sal dword ptr [esi - 0x6d], 0xc; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0017bbc8: sal eax, -0x11; call dword ptr [eax]; 
0x00169ad9: sal eax, -1; and al, 0x31; add dword ptr [eax], eax; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x0007e7d9: sal ebx, -0x5c; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x0003fa02: sal ebx, 0x35; push ss; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00094992: sal ebx, 0x5f; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001881c1: sal ebx, 1; call dword ptr [eax]; 
0x0017b778: sal ebx, 1; out dx, eax; call dword ptr [eax]; 
0x000b9a66: sal ebx, 1; ret; 
0x0007e10a: sal ebx, 1; stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0007e2d1: sal ebx, 1; stosb byte ptr es:[edi], al; pop edi; ret; 
0x0018830d: sal ebx, cl; call dword ptr [ebp + 1]; 
0x00185458: sal ecx, -1; sbb al, 0xd; test al, 0xf1; jmp dword ptr [edx]; 
0x0017ba48: sal ecx, 1; out dx, eax; call dword ptr [eax]; 
0x000d4f9a: sal edi, -1; jmp dword ptr [esi - 0x70]; 
0x0019797d: sal edi, 1; call dword ptr [esi]; 
0x0009480f: sal esi, 0x60; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00191ba1: sal esi, 1; call dword ptr [eax]; 
0x00192155: sal esi, cl; call dword ptr [ecx + 2]; 
0x0016ac89: sal esp, -1; cwde; jecxz 0x16ac90; add byte ptr [eax], ah; ret 0xfff4; 
0x00168b7d: salc; add byte ptr [eax], al; add al, 0xd9; out dx, al; call eax; 
0x001498c6: salc; add byte ptr [eax], al; add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x000f7e9d: salc; add byte ptr [eax], al; add byte ptr [eax - 0x7bf0ffc8], al; ret; 
0x0017c80d: salc; add byte ptr [eax], al; nop; fsub st(7), st(0); jmp edx; 
0x0017c8b5: salc; add byte ptr [eax], al; or bh, bl; out dx, eax; jmp dword ptr [esi]; 
0x00168b8d: salc; add byte ptr [eax], al; xchg eax, esp; fldz; call dword ptr [eax]; 
0x0013550e: salc; add cl, byte ptr [ebx + 0x5b082444]; ret; 
0x00198881: salc; add cl, byte ptr [edx]; ret; 
0x0011a936: salc; add dword ptr [eax], eax; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x75]; 
0x001664e5: salc; cld; call dword ptr [eax]; 
0x00166291: salc; cld; jmp dword ptr [eax - 0x2a]; 
0x00166251: salc; cld; jmp dword ptr [ebp - 0x2a]; 
0x00166299: salc; cld; jmp eax; 
0x0007e24c: salc; cld; pop edi; ret; 
0x001673c8: salc; cmp al, 0xfd; jmp dword ptr [esi]; 
0x001335f5: salc; inc edx; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013630f: salc; inc edx; clc; mov eax, edx; pop ebx; ret; 
0x00132fb5: salc; inc edx; clc; pop ebx; ret; 
0x00133085: salc; inc edx; hlt; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x001330b5: salc; inc edx; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001330e5: salc; inc edx; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0013be55: salc; inc edx; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00133665: salc; inc edx; mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00134f2f: salc; inc edx; test dword ptr [edi], 0x88ff48b6; dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x000b830a: salc; mov dword ptr [ebp - 0x1c], ebx; mov ebx, eax; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0010b6fe: salc; mov dword ptr [edx + ecx], esi; pop esi; pop edi; pop ebp; ret 4; 
0x000df7a2: salc; mov dword ptr [esp + 0x24], esi; mov edx, dword ptr [esp + 0x24]; xchg ebx, edx; mov eax, 0xb7; call dword ptr gs:[0x10]; 
0x0007c351: salc; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x0007e7e0: salc; mov eax, dword ptr [esp + 4]; ret; 
0x0007e060: salc; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x0007e036: salc; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00001b10: salc; mov ebp, dword ptr [esi + ebx*8 + 0x6d]; ret 0x1bb7; 
0x000b7ca6: salc; mov ebp, eax; xchg edi, ebx; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x0012476e: salc; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; mov eax, edx; ret; 
0x0013300d: salc; movdqa xmmword ptr [edx - 0x1a], xmm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0016cf98: salc; movsb byte ptr es:[edi], byte ptr [esi]; stc; call eax; 
0x001678b4: salc; nop; cld; jmp dword ptr [esi - 0x6f]; 
0x0005de91: salc; out 0xff, al; dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0xe373]; jmp dword ptr [ebp - 0x77]; 
0x001786c6: salc; out dx, al; jmp dword ptr [edx]; 
0x0017c781: salc; out dx, eax; call dword ptr [ebx + 3]; 
0x00167040: salc; pop ds; std; jmp dword ptr [esi]; 
0x0007e226: salc; pop edi; ret; 
0x00192cbf: salc; pop ss; idiv bh; sbb al, 0xd; imul edx, dword ptr [edi], -0xa; jmp dword ptr [edx]; 
0x00166f48: salc; push ds; std; jmp dword ptr [esi]; 
0x0012e4f6: salc; push esp; clc; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x00002582: salc; ret 0x23cb; 
0x00002260: salc; ret; 
0x000f0320: salc; sub al, 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000f0520: salc; sub cl, byte ptr [ebx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000f0420: salc; sub ecx, dword ptr [ebx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0017a0e4: salc; xchg eax, esp; out dx, eax; call dword ptr [eax]; 
0x000b7c63: salc; xchg edi, ebx; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x00136b99: salc; xor edi, edi; inc dword ptr [ecx + 0x30103c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00165fe5: sar ah, 1; call dword ptr [eax - 0x30]; 
0x00165fe5: sar ah, 1; call dword ptr [eax - 0x30]; cld; inc dword ptr [eax - 0x4f000330]; sar ah, 1; jmp eax; 
0x00165ff5: sar ah, 1; call dword ptr [eax]; 
0x00165fa5: sar ah, 1; call dword ptr [ebp - 0x30]; 
0x00165e2d: sar ah, 1; call ebx; 
0x00165fe9: sar ah, 1; inc dword ptr [eax - 0x4f000330]; sar ah, 1; jmp eax; 
0x00165e31: sar ah, 1; inc dword ptr [ebx]; sar esp, 1; push dword ptr [ebx]; sar esp, 1; jmp dword ptr [ebx - 0x2f]; 
0x00165ff1: sar ah, 1; jmp eax; 
0x00165fed: sar ah, 1; push dword ptr [eax - 0x1f000330]; sar ah, 1; call dword ptr [eax]; 
0x0011c672: sar ah, 1; ret; 
0x00165e4d: sar ah, cl; jmp dword ptr [ebx - 0x2e]; 
0x00166019: sar ah, cl; jmp eax; 
0x00165fdd: sar ah, cl; push eax; iretd; cld; jmp dword ptr [eax]; 
0x00166ac0: sar al, 0xfc; jmp dword ptr [eax - 7]; 
0x0006f767: sar bh, 0x21; ret 0x468b; 
0x0013121b: sar bh, 0xff; jmp dword ptr [esi + 0xf]; 
0x0015a075: sar bh, 1; call dword ptr [ecx + 0x34ffffc3]; aad 0xff; call dword ptr [ecx - 0x2a]; 
0x00050ed5: sar bh, 1; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x75]; 
0x0005ec52: sar bh, 1; inc dword ptr [ebx - 0xbf43]; call dword ptr [eax]; 
0x0015a071: sar bh, 1; inc dword ptr [ecx - 0x6e000030]; ret; 
0x00078fdb: sar bh, 1; jmp dword ptr [esi - 0x70]; 
0x0015a085: sar bh, cl; call dword ptr [ebp - 0x2d]; 
0x0007aa02: sar bh, cl; dec dword ptr [ebp + 0x44c83]; add al, ch; rcl byte ptr [edi], 8; add cl, ch; ret 0xffd2; 
0x000bcee4: sar bh, cl; dec dword ptr [ebx - 0xf775]; dec dword ptr [ecx - 0x12f73]; jmp dword ptr [ebp - 0x75]; 
0x0005013a: sar bh, cl; dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0x1af73]; jmp dword ptr [ebp - 0x77]; 
0x0006974f: sar bh, cl; jmp dword ptr [ecx]; 
0x0016e549: sar bl, 1; call dword ptr [eax + 0x30]; 
0x0016e519: sar bl, 1; call esp; 
0x00166b9c: sar bl, 1; cld; jmp eax; 
0x00109973: sar bl, 1; dec dword ptr [ecx - 0x72cbdbac]; xchg eax, ebx; call eax; 
0x0016e541: sar bl, 1; inc esp; add eax, dword ptr cs:[eax]; hlt; sar bl, 1; call dword ptr [eax + 0x30]; 
0x0018dc85: sar bl, 1; jmp dword ptr [edx]; 
0x0016e509: sar bl, 1; push dword ptr [ebp + ebp + 3]; add byte ptr [eax - 0x5b000430], al; sub eax, 0xd0900003; sti; call esp; 
0x0011e241: sar bl, cl; dec dword ptr [ecx - 0x17fbdbbc]; ret; 
0x000e20f0: sar byte ptr [0x1000], 0xf; inc edx; ret 0x4589; 
0x00126096: sar byte ptr [eax + 0x21], cl; mov ecx, edx; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000ce9e1: sar byte ptr [eax + 0x2c], 0x89; ret 0x4e8b; 
0x0010b24c: sar byte ptr [eax + 0x31], 0x89; int1; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0006f2e2: sar byte ptr [eax + 0xb], cl; mov dword ptr [esi + 0x4c], eax; mov dword ptr [esi + 0x50], edx; add esp, 0x18; pop esi; ret; 
0x00105057: sar byte ptr [eax + 0xe], cl; mov eax, edx; and eax, 0xffffff; ret; 
0x0004507a: sar byte ptr [eax + 1], 0xf; inc ebp; ret 0x8588; 
0x0006812a: sar byte ptr [eax + 3], 0xf3; ret; 
0x001050f7: sar byte ptr [eax + 6], cl; mov eax, edx; shr eax, 0x18; ret; 
0x000e62ac: sar byte ptr [eax + 9], 0x8b; inc esp; and al, 0x1c; add esp, 0x28; pop ebx; ret; 
0x00129b35: sar byte ptr [eax - 0x18], cl; mov edx, dword ptr [esp + 0x10]; mov dword ptr [edx], edi; pop esi; pop edi; ret; 
0x000c322c: sar byte ptr [ebp + 4], 1; ret 0xc083; 
0x0019b470: sar byte ptr [ebp - 0x2557fffe], 0xf8; call dword ptr [eax]; 
0x00176fd0: sar byte ptr [ebp], 1; add ah, ch; or ebp, edi; jmp dword ptr [ebx]; 
0x0010e726: sar byte ptr [ecx + 0x6f], 0x83; call dword ptr [eax]; 
0x0005d396: sar byte ptr [ecx + 1], 0x29; mov edi, 0xfffef885; jmp dword ptr [ebp]; 
0x000eebfc: sar byte ptr [ecx + ebp + 0x74], 1; ret; 
0x000d5294: sar byte ptr [ecx - 0x37], 0x8b; xchg eax, esp; and al, 0x88; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x28b; 
0x00083355: sar byte ptr [ecx], cl; bnd jne 0x83348; pop esi; ret; 
0x00083391: sar byte ptr [ecx], cl; bnd jne 0x83380; pop esi; pop edi; ret; 
0x000833d5: sar byte ptr [ecx], cl; bnd jne 0x833c0; pop esi; pop edi; pop ebp; ret; 
0x000948c9: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x1e]; call 0x129d77; add ecx, 0xc60b1; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e929: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x1e]; call 0x129d77; add ecx, 0xcbe7d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d2e9: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x1e]; call 0x129d77; add ecx, 0xcd35d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094906: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x5b]; call 0x129d77; add ecx, 0xc6074; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e966: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x5b]; call 0x129d77; add ecx, 0xcbe40; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d326: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x5b]; call 0x129d77; add ecx, 0xcd320; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e97d: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x72]; call 0x129d77; add ecx, 0xcbe29; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d33d: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x72]; call 0x129d77; add ecx, 0xcd309; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0003a0ad: sar byte ptr [ecx], cl; ret 0x820f; 
0x0003d04b: sar byte ptr [ecx], cl; ret 0x830f; 
0x0009f87b: sar byte ptr [ecx], cl; ret 0xa72; 
0x00051590: sar byte ptr [ecx], cl; ret 0xbb74; 
0x000cd6c2: sar byte ptr [edi + 4], 1; ret 0xc083; 
0x0019b1d0: sar byte ptr [edi - 0x4413fffe], 1; clc; jmp dword ptr [edi]; 
0x00069eec: sar byte ptr [edi - 0x46], 0x8b; inc ebp; sub al, 0x2b; inc ebp; and al, 0x89; ret 0xfac1; 
0x000698e4: sar byte ptr [edi - 0x4e], 0x8b; inc ebp; sub al, 0x2b; inc ebp; and al, 0x89; ret 0xfac1; 
0x0016e7cc: sar byte ptr [edx], 3; add ah, al; adc al, 0xfc; jmp dword ptr [eax + 0x3f]; 
0x00002b7d: sar byte ptr [edx], cl; adc al, 0xe7; ret; 
0x0006552b: sar byte ptr [esi + 0x5a], 0x8b; inc esi; push esp; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x0006765a: sar byte ptr [esi + 0x5b], 0x8b; inc esi; push esp; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x0002e32b: sar byte ptr [esi + 8], cl; mov ecx, edx; xchg edi, ebx; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x00194f41: sar byte ptr [esi + esi*8], 1; jmp dword ptr [edx]; 
0x0018a170: sar byte ptr [esi], 0xfa; call dword ptr [eax]; 
0x001930d0: sar byte ptr [esi], 1; add al, byte ptr [eax]; in al, dx; div esi; jmp dword ptr [eax]; 
0x00166c84: sar ch, 1; cld; push dword ptr [eax - 2]; cld; jmp dword ptr [eax]; 
0x000b8c1c: sar cl, 0xff; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x7d]; 
0x00166a38: sar cl, cl; cld; jmp dword ptr [edx - 6]; 
0x0016d2a9: sar cl, cl; inc eax; ret 2; 
0x0016d2b1: sar cl, cl; jmp esp; 
0x000197cc: sar dh, 0xff; call dword ptr [ebx - 0x18]; 
0x000d72dc: sar dh, 0xff; dec dword ptr [ecx - 0x16f4b]; jmp dword ptr [esi - 0x70]; 
0x000d7323: sar dh, 0xff; jmp dword ptr [eax]; 
0x000bfc6f: sar dh, 0xff; jmp dword ptr [ebp - 0x75]; 
0x000bf668: sar dh, 0xff; jmp dword ptr [ebp - 0x77]; 
0x000bf6a3: sar dh, 0xff; jmp dword ptr [ebp - 0x7d]; 
0x0016b0fc: sar dh, 1; add dword ptr [eax], eax; adc al, 0x1f; cmc; jmp dword ptr [eax]; 
0x00136ea2: sar dh, 2; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013caa6: sar dh, cl; inc dword ptr [ecx + 0x2ac37c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00043f16: sar dl, 0xff; jmp dword ptr [eax]; 
0x00184500: sar dl, 1; int1; jmp esi; 
0x0016dc19: sar dl, cl; ljmp ptr [eax]; inc dword ptr [edx]; add byte ptr [ebx + edx*8], dh; cli; call dword ptr [eax - 1]; 
0x000ba6ba: sar dword ptr [eax + 0x10a], cl; call dword ptr gs:[0x10]; 
0x000e9575: sar dword ptr [eax + 0x10f], cl; call dword ptr gs:[0x10]; 
0x000ef002: sar dword ptr [eax + 0x148], cl; call dword ptr gs:[0x10]; 
0x0003edff: sar dword ptr [eax + 0x25], cl; call dword ptr gs:[0x10]; 
0x000914cd: sar dword ptr [eax + 0x3000c93], 0xc; xchg eax, ecx; jmp ecx; 
0x000ecb3d: sar dword ptr [eax + 0x3e], cl; call dword ptr gs:[0x10]; 
0x000e65c5: sar dword ptr [eax + 0x4b], cl; call dword ptr gs:[0x10]; 
0x000e6a85: sar dword ptr [eax + 0x60], cl; call dword ptr gs:[0x10]; 
0x000ddc4b: sar dword ptr [eax + 0x6a], cl; call dword ptr gs:[0x10]; 
0x000dddcb: sar dword ptr [eax + 0x6b], cl; call dword ptr gs:[0x10]; 
0x000ddd0b: sar dword ptr [eax + 0x6c], cl; call dword ptr gs:[0x10]; 
0x0002e1f6: sar dword ptr [eax + 0xb0], cl; call dword ptr gs:[0x10]; 
0x0002e24a: sar dword ptr [eax + 0xb3], cl; call dword ptr gs:[0x10]; 
0x000df7ac: sar dword ptr [eax + 0xb7], cl; call dword ptr gs:[0x10]; 
0x000e6585: sar dword ptr [eax + 0xbf], cl; call dword ptr gs:[0x10]; 
0x00094849: sar dword ptr [eax + 0xc03000c], -0x6f; jmp ecx; 
0x000ddc19: sar dword ptr [eax + 0xc3], cl; call dword ptr gs:[0x10]; 
0x000ddd99: sar dword ptr [eax + 0xc4], cl; call dword ptr gs:[0x10]; 
0x000ddcd9: sar dword ptr [eax + 0xc5], cl; call dword ptr gs:[0x10]; 
0x000e7992: sar dword ptr [eax + 0xcb], cl; call dword ptr gs:[0x10]; 
0x000e7a12: sar dword ptr [eax + 0xcc], cl; call dword ptr gs:[0x10]; 
0x000b90e5: sar dword ptr [eax + 0xcd], cl; call dword ptr gs:[0x10]; 
0x000b55b2: sar dword ptr [eax + 0xce], cl; call dword ptr gs:[0x10]; 
0x000947cd: sar dword ptr [eax], 0x61; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ed478: sar dword ptr [ebp + 0x5b], 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0008e934: sar dword ptr [ebp - 0x42], 0xc; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0009474a: sar dword ptr [ebx + 0x3000c61], 0xc; xchg eax, ecx; jmp ecx; 
0x00091549: sar dword ptr [ebx + edx*4], 0xc; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0008d316: sar dword ptr [ebx], -0x2d; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b93ba: sar dword ptr [ebx], -0x64; push cs; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0017b6d9: sar dword ptr [ecx - 0x11], 1; jmp dword ptr [edx]; 
0x0018f911: sar dword ptr [ecx - 0xb], 1; jmp dword ptr [edx]; 
0x000f0d10: sar dword ptr [ecx], -0x36; mov edx, 0; cmovb eax, edx; pop esi; ret; 
0x0008e9f2: sar dword ptr [edi + 0x3000cbd], 0xc; cdq; jmp ecx; 
0x0008d392: sar dword ptr [edi + 0x3000cd2], 0xc; cdq; jmp ecx; 
0x0008d212: sar dword ptr [edi + 0x3000cd3], 0xc; xchg eax, ecx; jmp ecx; 
0x000ef876: sar dword ptr [edi + 0x37], 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0002ebb6: sar dword ptr [edi], 0x44; pop ss; add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp - 0x39]; 
0x0008d3d7: sar dword ptr [edx - 0x2e], 0xc; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0012f33b: sar dword ptr [edx], 0xf; xchg eax, edx; ret 0xcf89; 
0x0003f877: sar dword ptr [esi + 0x37], 0x16; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0002d7a5: sar eax, 0x10; ret; 
0x000e6a67: sar eax, 0x1f; add esp, 0xc; ret; 
0x000cf111: sar eax, 0x1f; and eax, 0xc; ret 8; 
0x0002d20a: sar eax, 0x1f; not eax; sar ecx, 0x1e; and eax, ecx; ret; 
0x00123d4a: sar eax, 0x1f; ret; 
0x0002d4d8: sar eax, 0x1f; sar ecx, 0x1e; not eax; and eax, ecx; ret; 
0x0002d74e: sar eax, 0x1f; sub edx, ecx; not eax; and eax, edx; ret; 
0x00003ba9: sar eax, 1; cmp eax, ecx; mov bl, 0xf7; adc bh, byte ptr [eax]; cwde; ret; 
0x0006df4d: sar eax, 2; mov dword ptr [ecx], eax; xor eax, eax; add esp, 0x1c; ret; 
0x00069fa4: sar eax, 2; ret; 
0x0006c06a: sar eax, 2; sub eax, 1; pop esi; ret; 
0x0019b989: sar eax, cl; jmp dword ptr [eax]; 
0x0008d2d6: sar ebx, -0x2e; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0016e431: sar ebx, -1; mov eax, 0x6400032a; ret 0xfffb; 
0x0010f48c: sar ebx, cl; dec dword ptr [ecx + 0x39e82404]; adc bh, bh; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x0002d20f: sar ecx, 0x1e; and eax, ecx; ret; 
0x0002d4db: sar ecx, 0x1e; not eax; and eax, ecx; ret; 
0x0016d289: sar ecx, 1; push dword ptr [eax]; ret 2; 
0x00123ef6: sar edi, -0x10; pop es; add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp - 0x39]; 
0x0013115b: sar edi, -1; jmp dword ptr [esi + 0xf]; 
0x000e355b: sar edi, -1; mov ecx, dword ptr [ebp - 0xc0]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000c57dc: sar edi, 0x1f; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000c58bc: sar edi, 0x1f; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0005094d: sar edi, 1; dec dword ptr [ebx - 0xf77d]; dec dword ptr [ecx - 0x19b73]; dec dword ptr [ebx - 0x21f73]; jmp dword ptr [ebp - 0x75]; 
0x00050e84: sar edi, 1; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x75]; 
0x000590c7: sar edi, 2; mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x000e23db: sar edi, cl; dec dword ptr [ebx - 0xaf73]; inc dword ptr [edi + 0x6b8cb]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0004f556: sar edi, cl; dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0x1af73]; jmp dword ptr [ebp - 0x77]; 
0x00129e3f: sar edx, 0x1f; add esp, 0x18; pop esi; ret; 
0x000eecf0: sar edx, 0x1f; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00032fc6: sar edx, 0x1f; xor eax, edx; sub eax, edx; ret; 
0x00059253: sar edx, 2; mov dword ptr [esp + 8], edx; mov dword ptr [ebp - 0x1120], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x00056a58: sar edx, 2; mov dword ptr [esp + 8], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0006c11d: sar edx, 2; sub eax, edx; ret; 
0x0016dc21: sar edx, cl; call dword ptr [eax - 1]; 
0x00076ec8: sar esi, -1; inc edi; add al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [ebp]; 
0x00073baa: sar esi, -1; jmp dword ptr [esi - 0x70]; 
0x0013c99c: sar esi, cl; inc dword ptr [ecx + 0x2ad41c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0008e9b5: sar esp, -0x43; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00166091: sar esp, 1; call dword ptr [eax - 0x4f00032f]; sar esp, 1; call eax; 
0x00166081: sar esp, 1; call dword ptr [ebx - 0x4c00032f]; sar esp, 1; call ebx; 
0x00165ef9: sar esp, 1; call dword ptr [ecx + edx*8 - 4]; inc dword ptr [ecx + edx*8 - 0x2e4b0004]; cld; jmp esp; 
0x00166071: sar esp, 1; call dword ptr [esi - 0x4900032f]; sar esp, 1; call esi; 
0x00166005: sar esp, 1; call eax; 
0x00166089: sar esp, 1; call ebx; 
0x00166079: sar esp, 1; call esi; 
0x00165efd: sar esp, 1; inc dword ptr [ecx + edx*8 - 0x2e4b0004]; cld; jmp esp; 
0x0016602d: sar esp, 1; inc dword ptr [edx - 0x5d00032f]; sar esp, 1; inc edx; sar esp, 1; jmp edx; 
0x00165e41: sar esp, 1; inc ebx; sar esp, 1; push ebx; sar esp, 1; jmp dword ptr [ebx]; 
0x0016609d: sar esp, 1; inc ebx; sar esp, cl; push ebx; sar esp, cl; jmp dword ptr [ebx]; 
0x00166035: sar esp, 1; inc edx; sar esp, 1; jmp edx; 
0x00165e39: sar esp, 1; jmp dword ptr [ebx - 0x2f]; 
0x00165e49: sar esp, 1; jmp dword ptr [ebx]; 
0x00166039: sar esp, 1; jmp edx; 
0x00165f05: sar esp, 1; jmp esp; 
0x0016608d: sar esp, 1; push dword ptr [eax - 0x2f]; cld; call dword ptr [eax - 0x4f00032f]; sar esp, 1; call eax; 
0x0016607d: sar esp, 1; push dword ptr [ebx - 0x2f]; cld; call dword ptr [ebx - 0x4c00032f]; sar esp, 1; call ebx; 
0x00165e35: sar esp, 1; push dword ptr [ebx]; sar esp, 1; jmp dword ptr [ebx - 0x2f]; 
0x0016606d: sar esp, 1; push dword ptr [esi - 0x2f]; cld; call dword ptr [esi - 0x4900032f]; sar esp, 1; call esi; 
0x00165e45: sar esp, 1; push ebx; sar esp, 1; jmp dword ptr [ebx]; 
0x00166261: sar esp, cl; call eax; 
0x00166221: sar esp, cl; call ebp; sar esp, cl; inc dword ptr [0x35fffcd4]; aam 0xfc; jmp dword ptr [ebp - 0x2c]; 
0x00166225: sar esp, cl; inc dword ptr [0x35fffcd4]; aam 0xfc; jmp dword ptr [ebp - 0x2c]; 
0x00166265: sar esp, cl; inc dword ptr [eax]; aam 0xfc; push dword ptr [eax]; aam 0xfc; jmp dword ptr [eax - 0x2c]; 
0x001660a5: sar esp, cl; jmp dword ptr [ebx]; 
0x00166161: sar esp, cl; jmp esp; 
0x001660a1: sar esp, cl; push ebx; sar esp, cl; jmp dword ptr [ebx]; 
0x00166924: sbb ah, 0xfc; call dword ptr [eax]; 
0x00166834: sbb ah, bh; cld; ljmp ptr [edx + 0x3afffce7]; call 0xe6c7683e; cld; jmp dword ptr [eax - 0x19]; 
0x00003083: sbb ah, bh; sub byte ptr [esi - 0x413d9d76], ch; pop esp; dec edx; popal; call dword ptr [ecx]; 
0x000947ec: sbb ah, byte ptr [ecx + 0xc]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0017cae8: sbb ah, dh; out dx, eax; call dword ptr [eax]; 
0x00071869: sbb al, 0; add bl, dh; ret; 
0x00124391: sbb al, 0; add byte ptr [eax], al; add byte ptr [ebx - 0xf74d], cl; jmp dword ptr [ebp - 0x75]; 
0x00189c9c: sbb al, 0; add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e5a02], al; ret; 
0x0006fcad: sbb al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x870f; 
0x000c745b: sbb al, 0; add byte ptr [eax], al; add dh, dh; ret 0xc740; 
0x0017761c: sbb al, 0; add byte ptr [eax], al; and byte ptr [eax + eax - 0x10eae400], al; jmp dword ptr [eax]; 
0x00199d38: sbb al, 0; add byte ptr [eax], al; cmp al, 0xab; add al, byte ptr [eax]; and byte ptr [esi - 8], bl; jmp dword ptr [ebx]; 
0x00179b94: sbb al, 0; add byte ptr [eax], al; cwde; test eax, 0x60440000; out dx, eax; call dword ptr [ebx]; 
0x0017aad8: sbb al, 0; add byte ptr [eax], al; fdivr qword ptr [eax - 0x74600000]; out dx, eax; call dword ptr [edx]; 
0x0019afe8: sbb al, 0; add byte ptr [eax], al; in al, dx; mov ebp, 0xb5800002; clc; jmp dword ptr [eax]; 
0x00195d3c: sbb al, 0; add byte ptr [eax], al; inc eax; imul eax, dword ptr [edx], 0; mov word ptr [edi - 9], es; jmp dword ptr [esi]; 
0x0019afa8: sbb al, 0; add byte ptr [eax], al; lodsb al, byte ptr [esi]; mov ebp, 0xb5800002; clc; jmp dword ptr [eax]; 
0x001991b0: sbb al, 0; add byte ptr [eax], al; mov ah, 0x9f; add al, byte ptr [eax]; cmp byte ptr [eax - 8], al; call dword ptr [ecx]; 
0x00183ab4: sbb al, 0; add byte ptr [eax], al; mov eax, 0x44000148; push ebx; int1; call dword ptr [eax]; 
0x00172008: sbb al, 0; add byte ptr [eax], al; or al, 0x2e; add byte ptr [eax], al; ror bl, 0xeb; jmp dword ptr [eax]; 
0x0019b1cc: sbb al, 0; add byte ptr [eax], al; sar byte ptr [edi - 0x4413fffe], 1; clc; jmp dword ptr [edi]; 
0x0018dc7c: sbb al, 0; add byte ptr [eax], al; sub dl, 1; add byte ptr [eax + edx*8 - 5], bh; jmp dword ptr [edx]; 
0x001437be: sbb al, 0; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000dfedc: sbb al, 0x10; add byte ptr [eax], al; ret; 
0x00177624: sbb al, 0x15; out dx, eax; jmp dword ptr [eax]; 
0x0009703d: sbb al, 0x21; ret 0xd789; 
0x00177d94: sbb al, 0x22; out dx, eax; jmp dword ptr [esi]; 
0x00025f8b: sbb al, 0x24; add esp, 8; ret; 
0x000268c5: sbb al, 0x24; cmove eax, edx; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00113217: sbb al, 0x24; mov dword ptr [edx], 0x10; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000ddf43: sbb al, 0x24; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; add esp, 8; ret; 
0x0002e0df: sbb al, 0x24; mov dword ptr gs:[eax], 0x16; or eax, 0xffffffff; add esp, 8; ret; 
0x0002d4a8: sbb al, 0x24; mov eax, dword ptr [esp + 4]; add esp, 0xc; and eax, 0x80000000; ret; 
0x0002dea9: sbb al, 0x24; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000ddfdb: sbb al, 0x24; mov edi, dword ptr [esp + 8]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x00025f76: sbb al, 0x24; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0002e9ff: sbb al, 0x24; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0007ebf4: sbb al, 0x24; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; mov ebp, dword ptr [esp + 0xc]; add esp, 0x10; ret; 
0x0007d861: sbb al, 0x24; ret; 
0x00191bcc: sbb al, 0x25; add al, byte ptr [eax]; dec ebp; sal esi, 1; call dword ptr [eax]; 
0x000c5c62: sbb al, 0x2c; dec dword ptr [ebp - 0xdd4636d]; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x0018b194: sbb al, 0x2f; cli; call dword ptr [ebp + 2]; 
0x00001a27: sbb al, 0x30; mov eax, dword ptr [0x3a6d4813]; ret; 
0x00169e18: sbb al, 0x31; int1; push dword ptr [esi + edi + 0x31290001]; int1; jmp esp; 
0x0001bd6e: sbb al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0011eedb: sbb al, 0x31; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xd089; 
0x00111e60: sbb al, 0x33; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0018aa54: sbb al, 0x35; cmc; call dword ptr [ecx]; 
0x0000282c: sbb al, 0x35; mov esi, dword ptr [ebx - 0x5e]; dec esi; push ecx; mov edi, 0xa9011612; ret; 
0x0007d748: sbb al, 0x39; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000a7142: sbb al, 0x39; dec edi; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000ccec6: sbb al, 0x39; ret 0x137d; 
0x000a5654: sbb al, 0x39; ret 0xcf74; 
0x00002fbc: sbb al, 0x44; nop; ret 0x5bdb; 
0x0017371c: sbb al, 0x45; add byte ptr [eax], al; adc byte ptr [esp + ebp*8], dl; call dword ptr [edi + 7]; 
0x0018a8cf: sbb al, 0x50; xchg dword ptr [edx], eax; add dword ptr [ebx], 0x71; or cl, byte ptr [esi]; add al, 0xc7; ret; 
0x000eb5bb: sbb al, 0x5b; movzx eax, al; pop esi; pop edi; pop ebp; ret; 
0x000f44b1: sbb al, 0x5b; not eax; pop esi; pop edi; pop ebp; ret; 
0x000190cc: sbb al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0017511c: sbb al, 0x5f; add byte ptr [eax], al; xor ch, bh; in eax, dx; jmp dword ptr [eax + 1]; 
0x000ca08b: sbb al, 0x5f; mov dword ptr [eax + 0x20], edx; pop ebp; ret; 
0x0008f2ca: sbb al, 0x5f; pop esi; pop ebx; ret; 
0x001677fc: sbb al, 0x5f; std; jmp dword ptr [esi]; 
0x0011e863: sbb al, 0x66; mov dword ptr [esi], eax; add esp, 0x28; mov eax, 1; pop esi; ret; 
0x0002c689: sbb al, 0x79; add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edx - 0xa000000], edi; ret 0xf02; 
0x0011cf39: sbb al, 0x7c; mov esp, 0x5e20c483; pop edi; pop ebp; ret; 
0x00176f1c: sbb al, 0x7d; add byte ptr [eax], al; ror byte ptr [ecx], 0xef; jmp dword ptr [ebx]; 
0x0016c7a4: sbb al, 0x7e; add al, byte ptr [eax]; xchg eax, esp; ret; 
0x00114261: sbb al, 0x83; clc; push dword ptr [ecx + eax*2 - 0x77]; push esi; sub al, 1; ret 0x5689; 
0x00097b34: sbb al, 0x83; ret 0x3901; 
0x000aab4f: sbb al, 0x83; ret 0x8008; 
0x0007e887: sbb al, 0x83; ret 0x8320; 
0x000c9642: sbb al, 0x83; ret 0x8501; 
0x000636fd: sbb al, 0x83; ret 0x8901; 
0x00127bda: sbb al, 0x83; ret 0x8904; 
0x000d1684: sbb al, 0x83; ret 0x8910; 
0x0006a64e: sbb al, 0x85; jmp dword ptr [esi - 0x43]; 
0x000ed3f8: sbb al, 0x85; ror byte ptr [edi], 0x44; ret 0x90c3; 
0x000dc0d4: sbb al, 0x85; ror byte ptr [edi], 0x84; xchg eax, ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x76d3db94], cl; ret 0x748b; 
0x00119bed: sbb al, 0x85; sal byte ptr [eax + ecx - 0x73], 0x56; dec esp; mov dword ptr [esp], edx; call eax; 
0x00024443: sbb al, 0x85; sal byte ptr [ebp - 0x50], 0x83; ret 0x8901; 
0x0007236c: sbb al, 0x85; sal byte ptr [edi + ecx - 0x75], 0x5c; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000e7990: sbb al, 0x87; sar dword ptr [eax + 0xcb], cl; call dword ptr gs:[0x10]; 
0x000e7a10: sbb al, 0x87; sar dword ptr [eax + 0xcc], cl; call dword ptr gs:[0x10]; 
0x000b55b0: sbb al, 0x87; sar dword ptr [eax + 0xce], cl; call dword ptr gs:[0x10]; 
0x0011f284: sbb al, 0x88; push es; add esp, 0x28; mov eax, 1; pop esi; ret; 
0x0007a109: sbb al, 0x89; adc al, 0x24; call eax; 
0x0007a7ac: sbb al, 0x89; adc al, 0x24; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 8], esi; call eax; 
0x000a580f: sbb al, 0x89; adc byte ptr [ebx - 0xf76db3c], al; pop ebx; pop esi; ret; 
0x00114257: sbb al, 0x89; add al, 0x24; call dword ptr [esi + 0x20]; 
0x00197b1c: sbb al, 0x89; add al, byte ptr [eax]; nop; aad 0xf7; jmp dword ptr [ebx]; 
0x000ffbfa: sbb al, 0x89; call 0x5d6f5a5c; ret; 
0x000ffc68: sbb al, 0x89; call 0x5d6f5aca; ret; 
0x0007c017: sbb al, 0x89; dec esi; and byte ptr [ecx + 0x187e8906], cl; mov dword ptr [esp], eax; call edx; 
0x000f831a: sbb al, 0x89; dec esp; and al, 4; call edx; 
0x0011f16e: sbb al, 0x89; dec esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0x20]; 
0x0011e9bb: sbb al, 0x89; dec esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x0011e606: sbb al, 0x89; dec esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx]; 
0x0011f041: sbb al, 0x89; dec esp; and al, 4; mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x0011ef59: sbb al, 0x89; dec esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x20]; 
0x0011e6d8: sbb al, 0x89; dec esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x0007b3c0: sbb al, 0x89; dec esp; and al, 8; lea ecx, dword ptr [edi + 0x19]; mov dword ptr [esp + 4], ecx; call eax; 
0x000317cb: sbb al, 0x89; insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp], edi; mov dword ptr [esp + 8], edx; call esi; 
0x000792b1: sbb al, 0x89; or al, 0x24; mov dword ptr [esp + 4], edx; call eax; 
0x0011e61b: sbb al, 0x89; push es; add esp, 0x28; mov eax, 1; pop esi; ret; 
0x00112586: sbb al, 0x89; push es; mov eax, dword ptr [esi + 8]; mov dword ptr [esp], edi; mov dword ptr [esp + 4], eax; call dword ptr [esi + 0xc]; 
0x00111859: sbb al, 0x89; push esp; and al, 4; call dword ptr [eax + 0xc]; 
0x0012b2df: sbb al, 0x89; push esp; and al, 4; mov dword ptr [esp + 8], eax; mov dword ptr [esp], ebp; call ecx; 
0x00118a9a: sbb al, 0x89; push esp; and al, 4; mov dword ptr [esp], eax; mov dword ptr [esp + 8], esi; call dword ptr [ecx + 0xc]; 
0x0006ad75: sbb al, 0x89; push esp; and al, 4; mov dword ptr [esp], ebp; call dword ptr [eax + 0x1c]; 
0x001127a6: sbb al, 0x89; push esp; and al, 8; mov dword ptr [esp + 4], 5; mov dword ptr [esp], edi; call dword ptr [eax]; 
0x00032cca: sbb al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x00042468: sbb al, 0x89; ret 0x408d; 
0x00056a64: sbb al, 0x89; ret 0x478b; 
0x000fa034: sbb al, 0x89; ret 0x562b; 
0x00115d17: sbb al, 0x89; ret 0x808b; 
0x0006adab: sbb al, 0x89; ret 0x84eb; 
0x0012fde3: sbb al, 0x89; ret 0xe281; 
0x000d78d7: sbb al, 0x89; ret 0xeac1; 
0x0007042d: sbb al, 0x89; ret 0xfac1; 
0x000b7e2e: sbb al, 0x89; ret; 
0x001111d3: sbb al, 0x89; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x0007dd0e: sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x00132b70: sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x000efb3d: sbb al, 0x8b; dec esp; and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000eeb13: sbb al, 0x8b; dec esp; and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000ef393: sbb al, 0x8b; dec esp; and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x153; call dword ptr gs:[0x10]; 
0x000effd3: sbb al, 0x8b; dec esp; and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x15b; call dword ptr gs:[0x10]; 
0x000f0033: sbb al, 0x8b; dec esp; and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x15c; call dword ptr gs:[0x10]; 
0x000e7e9c: sbb al, 0x8b; dec esp; and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x0011263b: sbb al, 0x8b; inc edi; adc byte ptr [ecx + 0x44892434], cl; and al, 4; call dword ptr [edi + 0x14]; 
0x000f6ce4: sbb al, 0x8b; inc esi; sbb byte ptr [ecx], bh; ret 0x2176; 
0x0003105d: sbb al, 0x8b; insb byte ptr es:[edi], dx; and al, 0x20; add esp, 0x24; ret; 
0x001307a8: sbb al, 0x8b; jmp ebx; 
0x000f177b: sbb al, 0x8b; mov ebp, 0xfffffbf4; mov ecx, dword ptr [ebp - 0x3fc]; xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00074d3b: sbb al, 0x8b; mov esp, dword ptr [esi + edi*8 + 0x5489ffff]; and al, 0x18; neg eax; mov dword ptr [esp], eax; call dword ptr [ecx]; 
0x000efb7b: sbb al, 0x8b; pop esp; and al, 0x18; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000eaea7: sbb al, 0x8b; pop esp; and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000ed987: sbb al, 0x8b; pop esp; and al, 0x24; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000e5915: sbb al, 0x8b; push eax; sub al, 0xf6; ret 0x7420; 
0x00064129: sbb al, 0x8b; push ebp; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x4589; 
0x0012b742: sbb al, 0x8b; push esi; and byte ptr [ebx + 0x46894c4e], cl; add al, 0x29; ret 0x4689; 
0x0017cb69: sbb al, 0x8d; out dx, eax; jmp dword ptr [edx]; 
0x00184975: sbb al, 0x9e; int1; jmp dword ptr [edx]; 
0x001681cc: sbb al, 0x9f; add byte ptr [eax], al; aam 0x5e; in al, dx; jmp dword ptr [eax - 0x61]; 
0x0019aa94: sbb al, 0x9f; clc; call dword ptr [ebx]; 
0x00189c1c: sbb al, 0xaa; add dword ptr [eax], eax; push eax; aam 0xf4; call dword ptr [edx]; 
0x0011e92c: sbb al, 0xb2; add dword ptr [eax + 0x28c48306], ecx; mov eax, edx; pop esi; ret; 
0x000f139a: sbb al, 0xb; add byte ptr [eax + 0x5c8901ce], al; and al, 0xc; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000f132a: sbb al, 0xb; add byte ptr [ecx - 0x76f3dba4], cl; ret; 
0x001342e0: sbb al, 0xbb; jmp ebx; 
0x00123d49: sbb al, 0xc1; clc; pop ds; ret; 
0x0012bd67: sbb al, 0xc3; lea esi, dword ptr [esi]; mov eax, dword ptr [esi + 0x4c]; mov dword ptr [esp], esi; call dword ptr [eax + 0x44]; 
0x00097580: sbb al, 0xc3; lea esi, dword ptr [esi]; mov eax, ebx; sub eax, dword ptr [ebx + edi*4 - 0x10ba60]; jmp eax; 
0x0011f09e: sbb al, 0xc3; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 0x24]; 
0x001140be: sbb al, 0xc3; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x000eecfd: sbb al, 0xc3; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x16; call dword ptr gs:[0x10]; 
0x00070a04: sbb al, 0xc3; nop; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x44]; 
0x0010aa32: sbb al, 0xc6; inc esp; xor bh, bh; add byte ptr [ebx - 0x1e77b], cl; dec dword ptr [ebx - 0xf74d]; jmp dword ptr [ebp - 0x77]; 
0x00079071: sbb al, 0xc7; add al, 0x24; pop eax; add al, 0; add al, ch; ret 0xfffc; 
0x000e1370: sbb al, 0xc; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00176e8d: sbb al, 0xcb; out dx, al; jmp dword ptr [edx]; 
0x0017c754: sbb al, 0xd4; out dx, eax; call dword ptr [edi + 2]; 
0x00172dbf: sbb al, 0xd; aaa; in eax, 0xeb; jmp dword ptr [edx]; 
0x001747db: sbb al, 0xd; aaa; or ebp, ebp; jmp dword ptr [edx]; 
0x0017beb7: sbb al, 0xd; aaa; xchg edi, ebp; jmp dword ptr [edx]; 
0x00174ef3: sbb al, 0xd; aad 0x55; in eax, dx; jmp dword ptr [edx]; 
0x001797cf: sbb al, 0xd; aad 1; out dx, eax; jmp dword ptr [edx]; 
0x0017313b: sbb al, 0xd; aas; out 0xeb, al; jmp dword ptr [edx]; 
0x0017b857: sbb al, 0xd; adc al, 0x7d; out dx, eax; jmp dword ptr [edx]; 
0x001959e7: sbb al, 0xd; adc byte ptr [ebp - 0xa], cl; jmp dword ptr [edx]; 
0x001866cf: sbb al, 0xd; adc byte ptr [edi - 0xe], ah; jmp dword ptr [edx]; 
0x0018680f: sbb al, 0xd; adc ch, byte ptr [eax - 0xe]; jmp dword ptr [edx]; 
0x0017101f: sbb al, 0xd; adc dword ptr [ecx - 0x15], ebp; jmp dword ptr [edx]; 
0x00177487: sbb al, 0xd; adc ecx, -0x12; jmp dword ptr [edx]; 
0x00191bbf: sbb al, 0xd; adc ecx, edi; cmc; jmp dword ptr [edx]; 
0x0017b617: sbb al, 0xd; adc edi, dword ptr [edx - 0x11]; jmp dword ptr [edx]; 
0x0017b167: sbb al, 0xd; add al, 0x50; out dx, eax; jmp dword ptr [edx]; 
0x001915ff: sbb al, 0xd; add al, ah; cli; jmp dword ptr [edx]; 
0x0017699f: sbb al, 0xd; add cl, cl; out dx, al; jmp dword ptr [edx]; 
0x00191fe3: sbb al, 0xd; add dh, dh; jmp dword ptr [edx]; 
0x0018fcdb: sbb al, 0xd; add dword ptr [edi - 0xb], edi; jmp dword ptr [edx]; 
0x0017b077: sbb al, 0xd; add eax, dword ptr [ecx - 0x11]; jmp dword ptr [edx]; 
0x00185e2b: sbb al, 0xd; add ebx, dword ptr [edx - 0xe]; jmp dword ptr [edx]; 
0x00176dcb: sbb al, 0xd; add ebx, ecx; out dx, al; jmp dword ptr [edx]; 
0x0017730b: sbb al, 0xd; add edx, edx; out dx, al; jmp dword ptr [edx]; 
0x0017a073: sbb al, 0xd; and ah, byte ptr [ecx]; out dx, eax; jmp dword ptr [edx]; 
0x00193713: sbb al, 0xd; and al, 0xf6; jmp dword ptr [edx]; 
0x00178483: sbb al, 0xd; and bl, ah; cli; jmp dword ptr [edx]; 
0x0017b287: sbb al, 0xd; and byte ptr [ebp - 0x11], ch; jmp dword ptr [edx]; 
0x0017b767: sbb al, 0xd; and byte ptr [edx - 0x11], bh; jmp dword ptr [edx]; 
0x0017a1c3: sbb al, 0xd; and dh, byte ptr [ecx]; out dx, eax; jmp dword ptr [edx]; 
0x00177723: sbb al, 0xd; and dl, dl; out dx, al; jmp dword ptr [edx]; 
0x0017b347: sbb al, 0xd; and ebp, dword ptr [ebp - 0x11]; jmp dword ptr [edx]; 
0x00176d1b: sbb al, 0xd; and ebx, ecx; out dx, al; jmp dword ptr [edx]; 
0x0017a283: sbb al, 0xd; arpl word ptr [ebx], si; out dx, eax; jmp dword ptr [edx]; 
0x00186dfb: sbb al, 0xd; bnd jno 0x186df2; jmp dword ptr [edx]; 
0x0017b647: sbb al, 0xd; bnd jns 0x17b63b; jmp dword ptr [edx]; 
0x00193a13: sbb al, 0xd; clc; and al, 0xf6; jmp dword ptr [edx]; 
0x0018fa0b: sbb al, 0xd; cld; jns 0x18fa05; jmp dword ptr [edx]; 
0x00173d93: sbb al, 0xd; cld; mov ebp, esp; jmp dword ptr [edx]; 
0x00177c1f: sbb al, 0xd; cli; fldz; jmp dword ptr [edx]; 
0x0017cad7: sbb al, 0xd; cli; mov edi, ebp; jmp dword ptr [edx]; 
0x001786c3: sbb al, 0xd; cli; salc; out dx, al; jmp dword ptr [edx]; 
0x0018d02f: sbb al, 0xd; cmc; jmp dword ptr [edx]; 
0x00184913: sbb al, 0xd; cmc; popfd; int1; jmp dword ptr [edx]; 
0x00186643: sbb al, 0xd; cmp ah, byte ptr [edi - 0xe]; jmp dword ptr [edx]; 
0x0017b437: sbb al, 0xd; cmp al, 0x6e; out dx, eax; jmp dword ptr [edx]; 
0x00176647: sbb al, 0xd; cmp al, dl; out dx, al; jmp dword ptr [edx]; 
0x0018cf6f: sbb al, 0xd; cmp bl, byte ptr [esi]; cmc; jmp dword ptr [edx]; 
0x0017573f: sbb al, 0xd; cmp byte ptr [ecx], dh; out dx, al; jmp dword ptr [edx]; 
0x001955eb: sbb al, 0xd; cmp eax, dword ptr [edx - 0xa]; jmp dword ptr [edx]; 
0x001989af: sbb al, 0xd; cvttps2pi mm6, xmm7; jmp dword ptr [edx]; 
0x00194ad7: sbb al, 0xd; dec eax; cmp esi, esi; jmp dword ptr [edx]; 
0x00177b33: sbb al, 0xd; dec eax; fsubr st(6); jmp dword ptr [edx]; 
0x0019018b: sbb al, 0xd; dec eax; test ebp, esi; jmp dword ptr [edx]; 
0x00175b1b: sbb al, 0xd; dec ebp; mov bh, 0xee; jmp dword ptr [edx]; 
0x0018620f: sbb al, 0xd; dec ebx; fdivr st(1); jmp dword ptr [edx]; 
0x0017301b: sbb al, 0xd; dec ebx; out 0xeb, al; jmp dword ptr [edx]; 
0x0017be27: sbb al, 0xd; dec ebx; xchg bh, ch; jmp dword ptr [edx]; 
0x0019165f: sbb al, 0xd; dec ecx; fprem1; jmp dword ptr [edx]; 
0x00175583: sbb al, 0xd; dec edx; aad 0xed; jmp dword ptr [edx]; 
0x0018fadb: sbb al, 0xd; dec edx; jnp 0x18fad5; jmp dword ptr [edx]; 
0x0018fb4b: sbb al, 0xd; dec esi; jnp 0x18fb45; jmp dword ptr [edx]; 
0x00177693: sbb al, 0xd; dec esi; shr dh, cl; jmp dword ptr [edx]; 
0x00174a9b: sbb al, 0xd; dec esp; sub al, 0xed; jmp dword ptr [edx]; 
0x0017afe7: sbb al, 0xd; dec esp; test al, 0xfc; jmp dword ptr [edx]; 
0x00178423: sbb al, 0xd; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x0017b737: sbb al, 0xd; fdivr qword ptr [ecx - 0x11]; jmp dword ptr [edx]; 
0x00170fbf: sbb al, 0xd; fisubr dword ptr [eax - 0x15]; jmp dword ptr [edx]; 
0x001796bb: sbb al, 0xd; fld qword ptr [ecx]; out dx, eax; jmp dword ptr [edx]; 
0x0018892b: sbb al, 0xd; fldenv dword ptr [eax - 0xc]; jmp dword ptr [edx]; 
0x0017b797: sbb al, 0xd; hlt; jns 0x17b78b; jmp dword ptr [edx]; 
0x0017804b: sbb al, 0xd; imul ebx, eax, -6; jmp dword ptr [edx]; 
0x00192cc3: sbb al, 0xd; imul edx, dword ptr [edi], -0xa; jmp dword ptr [edx]; 
0x00177573: sbb al, 0xd; imul edx, ecx, -0x12; jmp dword ptr [edx]; 
0x0017bac7: sbb al, 0xd; in al, 0x80; out dx, eax; jmp dword ptr [edx]; 
0x0017b707: sbb al, 0xd; in al, dx; jns 0x17b6fb; jmp dword ptr [edx]; 
0x0018fff3: sbb al, 0xd; in al, dx; test ebp, esi; jmp dword ptr [edx]; 
0x00194553: sbb al, 0xd; in al, dx; xor al, 0xf6; jmp dword ptr [edx]; 
0x0017b7f7: sbb al, 0xd; in eax, 0x7b; out dx, eax; jmp dword ptr [edx]; 
0x0017477b: sbb al, 0xd; in eax, 0xb6; in al, dx; jmp dword ptr [edx]; 
0x0018536b: sbb al, 0xd; in eax, 0xbf; int1; jmp dword ptr [edx]; 
0x0018a36f: sbb al, 0xd; in eax, dx; push esi; hlt; jmp dword ptr [edx]; 
0x0018cfff: sbb al, 0xd; inc eax; cmc; jmp dword ptr [edx]; 
0x00173d33: sbb al, 0xd; inc eax; mov ebp, esp; jmp dword ptr [edx]; 
0x00174acb: sbb al, 0xd; inc eax; sub al, 0xed; jmp dword ptr [edx]; 
0x00177753: sbb al, 0xd; inc ebp; shr dh, cl; jmp dword ptr [edx]; 
0x00179fb3: sbb al, 0xd; inc ebx; and bh, ch; jmp dword ptr [edx]; 
0x0017b527: sbb al, 0xd; inc ebx; outsd dx, dword ptr [esi]; out dx, eax; jmp dword ptr [edx]; 
0x00177783: sbb al, 0xd; inc ecx; shr dh, cl; jmp dword ptr [edx]; 
0x0019025b: sbb al, 0xd; inc edi; xchg ch, dh; jmp dword ptr [edx]; 
0x0017832f: sbb al, 0xd; inc edx; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x00177663: sbb al, 0xd; inc edx; shr dh, cl; jmp dword ptr [edx]; 
0x0017b107: sbb al, 0xd; inc esp; dec esi; out dx, eax; jmp dword ptr [edx]; 
0x001784b3: sbb al, 0xd; inc esp; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x00179913: sbb al, 0xd; insb byte ptr es:[edi], dx; add edi, ebp; jmp dword ptr [edx]; 
0x0018fa3b: sbb al, 0xd; insb byte ptr es:[edi], dx; jp 0x18fa35; jmp dword ptr [edx]; 
0x001902cb: sbb al, 0xd; insb byte ptr es:[edi], dx; xchg ch, dh; jmp dword ptr [edx]; 
0x0017b3d7: sbb al, 0xd; insd dword ptr es:[edi], dx; out dx, eax; jmp dword ptr [edx]; 
0x0017a2b3: sbb al, 0xd; insd dword ptr es:[edi], dx; xor ebp, edi; jmp dword ptr [edx]; 
0x0017724b: sbb al, 0xd; into; iretd; out dx, al; jmp dword ptr [edx]; 
0x00184aef: sbb al, 0xd; into; popfd; int1; jmp dword ptr [edx]; 
0x00175b4b: sbb al, 0xd; iretd; mov bh, 0xee; jmp dword ptr [edx]; 
0x00194053: sbb al, 0xd; iretd; sub esi, esi; jmp dword ptr [edx]; 
0x00177cdf: sbb al, 0xd; jecxz 0x177cbc; out dx, al; jmp dword ptr [edx]; 
0x00179263: sbb al, 0xd; jno 0x179266; out dx, al; jmp dword ptr [edx]; 
0x0017b1c7: sbb al, 0xd; jno 0x17b230; out dx, eax; jmp dword ptr [edx]; 
0x0017bb87: sbb al, 0xd; jno 0x17bb0c; out dx, eax; jmp dword ptr [edx]; 
0x00175d1f: sbb al, 0xd; jnp 0x175cdd; out dx, al; jmp dword ptr [edx]; 
0x00177ad3: sbb al, 0xd; jnp 0x177aaf; out dx, al; jmp dword ptr [edx]; 
0x0018ff93: sbb al, 0xd; jnp 0x18ff1b; cmc; jmp dword ptr [edx]; 
0x00176023: sbb al, 0xd; jns 0x175fe4; out dx, al; jmp dword ptr [edx]; 
0x00179fe3: sbb al, 0xd; jo 0x17a007; out dx, eax; jmp dword ptr [edx]; 
0x0017a313: sbb al, 0xd; leave; aaa; out dx, eax; jmp dword ptr [edx]; 
0x001904fb: sbb al, 0xd; leave; mov ch, dh; jmp dword ptr [edx]; 
0x0017b0a7: sbb al, 0xd; loope 0x17b0eb; out dx, eax; jmp dword ptr [edx]; 
0x0017cbf7: sbb al, 0xd; loope 0x17cb88; out dx, eax; jmp dword ptr [edx]; 
0x0019022b: sbb al, 0xd; mov ah, 0x85; cmc; jmp dword ptr [edx]; 
0x001767c3: sbb al, 0xd; mov al, 0xc6; out dx, al; jmp dword ptr [edx]; 
0x0017b587: sbb al, 0xd; mov bl, 0x74; out dx, eax; jmp dword ptr [edx]; 
0x001756df: sbb al, 0xd; mov bl, 0xdc; in eax, dx; jmp dword ptr [edx]; 
0x00177b63: sbb al, 0xd; mov bl, cl; out dx, al; jmp dword ptr [edx]; 
0x0018fc1b: sbb al, 0xd; mov byte ptr [esi - 0xb], bh; jmp dword ptr [edx]; 
0x0017ba37: sbb al, 0xd; mov ch, 0x80; out dx, eax; jmp dword ptr [edx]; 
0x001901bb: sbb al, 0xd; mov ch, 0x85; cmc; jmp dword ptr [edx]; 
0x00175daf: sbb al, 0xd; mov ch, 0xba; out dx, al; jmp dword ptr [edx]; 
0x0017721b: sbb al, 0xd; mov dh, 0xcf; out dx, al; jmp dword ptr [edx]; 
0x001773fb: sbb al, 0xd; mov dh, 0xd1; out dx, al; jmp dword ptr [edx]; 
0x001782ff: sbb al, 0xd; mov dh, 0xdb; cli; jmp dword ptr [edx]; 
0x00191e73: sbb al, 0xd; mov dh, 0xfa; cmc; jmp dword ptr [edx]; 
0x00175437: sbb al, 0xd; mov dl, 0xd5; in eax, dx; jmp dword ptr [edx]; 
0x0017976f: sbb al, 0xd; mov dl, 1; out dx, eax; jmp dword ptr [edx]; 
0x0017b0d7: sbb al, 0xd; mov dword ptr [ebp - 0x11], ecx; jmp dword ptr [edx]; 
0x00195a47: sbb al, 0xd; mov dword ptr [ebp - 0xa], ecx; jmp dword ptr [edx]; 
0x0017a1f3: sbb al, 0xd; mov dword ptr [ecx], esi; out dx, eax; jmp dword ptr [edx]; 
0x001754f7: sbb al, 0xd; mov ebp, ss; in eax, dx; jmp dword ptr [edx]; 
0x00176b7b: sbb al, 0xd; mov ecx, ecx; out dx, al; jmp dword ptr [edx]; 
0x00175527: sbb al, 0xd; mov ss, ebp; in eax, dx; jmp dword ptr [edx]; 
0x0018faab: sbb al, 0xd; movsb byte ptr es:[edi], byte ptr [esi]; jp 0x18faa5; jmp dword ptr [edx]; 
0x0018f96b: sbb al, 0xd; nop; jns 0x18f965; jmp dword ptr [edx]; 
0x00186bf3: sbb al, 0xd; nop; jo 0x186bea; jmp dword ptr [edx]; 
0x00184853: sbb al, 0xd; or al, 0x9e; int1; jmp dword ptr [edx]; 
0x00178723: sbb al, 0xd; or al, 0xd7; out dx, al; jmp dword ptr [edx]; 
0x001779e7: sbb al, 0xd; or al, 0xd8; out dx, al; jmp dword ptr [edx]; 
0x00176883: sbb al, 0xd; or al, 0xee; jmp dword ptr [edx]; 
0x00177a17: sbb al, 0xd; or bl, al; out dx, al; jmp dword ptr [edx]; 
0x00176e5b: sbb al, 0xd; or cl, bl; out dx, al; jmp dword ptr [edx]; 
0x0019551b: sbb al, 0xd; or dword ptr [edx - 0xa], eax; jmp dword ptr [edx]; 
0x00186e2b: sbb al, 0xd; or dword ptr [edx - 0xe], esi; jmp dword ptr [edx]; 
0x0017b317: sbb al, 0xd; out 0x6c, eax; out dx, eax; jmp dword ptr [edx]; 
0x0017cbc7: sbb al, 0xd; out 0x8c, al; out dx, eax; jmp dword ptr [edx]; 
0x001761d3: sbb al, 0xd; out 0xbd, eax; out dx, al; jmp dword ptr [edx]; 
0x001779b7: sbb al, 0xd; out 0xd7, al; out dx, al; jmp dword ptr [edx]; 
0x00179633: sbb al, 0xd; out 1, al; out dx, eax; jmp dword ptr [edx]; 
0x00191fb3: sbb al, 0xd; out dx, al; add esi, esi; jmp dword ptr [edx]; 
0x001937d3: sbb al, 0xd; out dx, al; and al, 0xf6; jmp dword ptr [edx]; 
0x00178167: sbb al, 0xd; out dx, al; fsqrt; jmp dword ptr [edx]; 
0x00178e6f: sbb al, 0xd; out dx, al; jmp dword ptr [edx]; 
0x001796eb: sbb al, 0xd; out dx, eax; add edi, ebp; jmp dword ptr [edx]; 
0x001799ff: sbb al, 0xd; out dx, eax; and bh, ch; jmp dword ptr [edx]; 
0x00190023: sbb al, 0xd; out dx, eax; test ebp, esi; jmp dword ptr [edx]; 
0x001754c7: sbb al, 0xd; outsb dx, byte ptr [esi]; aad 0xed; jmp dword ptr [edx]; 
0x00177aa3: sbb al, 0xd; outsb dx, byte ptr [esi]; fsubr st(6); jmp dword ptr [edx]; 
0x001743c3: sbb al, 0xd; outsd dx, dword ptr [esi]; scasb al, byte ptr es:[edi]; in al, dx; jmp dword ptr [edx]; 
0x001799cf: sbb al, 0xd; pop ds; out dx, eax; jmp dword ptr [edx]; 
0x00176677: sbb al, 0xd; pop ds; ret; 
0x0017b4f7: sbb al, 0xd; pop ebp; outsd dx, dword ptr [esi]; out dx, eax; jmp dword ptr [edx]; 
0x00177543: sbb al, 0xd; pop ebp; shr esi, 1; jmp dword ptr [edx]; 
0x00176c0b: sbb al, 0xd; pop ebx; leave; out dx, al; jmp dword ptr [edx]; 
0x0019046b: sbb al, 0xd; pop ebx; mov ch, dh; jmp dword ptr [edx]; 
0x0017310b: sbb al, 0xd; pop ecx; out 0xeb, al; jmp dword ptr [edx]; 
0x001772db: sbb al, 0xd; pop edi; shr dh, 1; jmp dword ptr [edx]; 
0x0017859f: sbb al, 0xd; pop edx; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x001943d7: sbb al, 0xd; pop edx; xor al, 0xf6; jmp dword ptr [edx]; 
0x00191e13: sbb al, 0xd; pop es; cli; cmc; jmp dword ptr [edx]; 
0x00194cdb: sbb al, 0xd; pop es; cmp esi, esi; jmp dword ptr [edx]; 
0x001784e3: sbb al, 0xd; pop esi; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x001730ab: sbb al, 0xd; pop esi; out 0xeb, al; jmp dword ptr [edx]; 
0x00187293: sbb al, 0xd; pop ss; jp 0x18728a; jmp dword ptr [edx]; 
0x0017b467: sbb al, 0xd; pop ss; outsb dx, byte ptr [esi]; out dx, eax; jmp dword ptr [edx]; 
0x00174bf3: sbb al, 0xd; popal; inc esp; in eax, dx; jmp dword ptr [edx]; 
0x00172feb: sbb al, 0xd; popal; out 0xeb, al; jmp dword ptr [edx]; 
0x00184a33: sbb al, 0xd; popfd; int1; jmp dword ptr [edx]; 
0x0018ff0b: sbb al, 0xd; popfd; test ch, dh; jmp dword ptr [edx]; 
0x00177d0f: sbb al, 0xd; push -0x26; out dx, al; jmp dword ptr [edx]; 
0x001755e3: sbb al, 0xd; push -0x2b; in eax, dx; jmp dword ptr [edx]; 
0x001772ab: sbb al, 0xd; push -0x30; out dx, al; jmp dword ptr [edx]; 
0x0017afb7: sbb al, 0xd; push -0x58; cld; jmp dword ptr [edx]; 
0x0017916b: sbb al, 0xd; push -1; out dx, al; jmp dword ptr [edx]; 
0x00173dc3: sbb al, 0xd; push cs; mov esp, gs; jmp dword ptr [edx]; 
0x0017853f: sbb al, 0xd; push ds; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x0019043b: sbb al, 0xd; push eax; mov ch, dh; jmp dword ptr [edx]; 
0x0017304b: sbb al, 0xd; push eax; out 0xeb, al; jmp dword ptr [edx]; 
0x00175a8b: sbb al, 0xd; push ebp; mov bh, 0xee; jmp dword ptr [edx]; 
0x00176bdb: sbb al, 0xd; push ebx; leave; out dx, al; jmp dword ptr [edx]; 
0x001780d7: sbb al, 0xd; push edi; fdivr st(2); jmp dword ptr [edx]; 
0x00179f83: sbb al, 0xd; push edx; and bh, ch; jmp dword ptr [edx]; 
0x0017b407: sbb al, 0xd; push edx; outsb dx, byte ptr [esi]; out dx, eax; jmp dword ptr [edx]; 
0x00177513: sbb al, 0xd; push edx; shr esi, 1; jmp dword ptr [edx]; 
0x0017b377: sbb al, 0xd; push es; insd dword ptr es:[edi], dx; out dx, eax; jmp dword ptr [edx]; 
0x001769cf: sbb al, 0xd; push es; leave; out dx, al; jmp dword ptr [edx]; 
0x001730db: sbb al, 0xd; push esi; out 0xeb, al; jmp dword ptr [edx]; 
0x0017be87: sbb al, 0xd; push esi; xchg edi, ebp; jmp dword ptr [edx]; 
0x00173cd3: sbb al, 0xd; push esp; mov ch, ah; jmp dword ptr [edx]; 
0x00184943: sbb al, 0xd; push ss; sahf; int1; jmp dword ptr [edx]; 
0x00175abb: sbb al, 0xd; pushal; mov bh, 0xee; jmp dword ptr [edx]; 
0x0017b1f7: sbb al, 0xd; pushal; out dx, eax; jmp dword ptr [edx]; 
0x00193283: sbb al, 0xd; pushal; sbb dh, dh; jmp dword ptr [edx]; 
0x0018a33f: sbb al, 0xd; rcl byte ptr [esi - 0xc], 1; jmp dword ptr [edx]; 
0x001753a7: sbb al, 0xd; rcl ch, 1; in eax, dx; jmp dword ptr [edx]; 
0x0019173b: sbb al, 0xd; rcr cl, 0xf5; jmp dword ptr [edx]; 
0x0018539b: sbb al, 0xd; ret 0xf1bf; 
0x0018cf9f: sbb al, 0xd; ret 0xf522; 
0x0017979f: sbb al, 0xd; ret; 
0x0017968b: sbb al, 0xd; rol byte ptr [ecx], cl; out dx, eax; jmp dword ptr [edx]; 
0x00184883: sbb al, 0xd; sahf; int1; jmp dword ptr [edx]; 
0x0017a223: sbb al, 0xd; sal byte ptr [edx], cl; out dx, eax; jmp dword ptr [edx]; 
0x00187027: sbb al, 0xd; sal dword ptr [edx - 0xe], cl; jmp dword ptr [edx]; 
0x00194f3f: sbb al, 0xd; sar byte ptr [esi + esi*8], 1; jmp dword ptr [edx]; 
0x0017b6d7: sbb al, 0xd; sar dword ptr [ecx - 0x11], 1; jmp dword ptr [edx]; 
0x0018f90f: sbb al, 0xd; sar dword ptr [ecx - 0xb], 1; jmp dword ptr [edx]; 
0x0017cb67: sbb al, 0xd; sbb al, 0x8d; out dx, eax; jmp dword ptr [edx]; 
0x00184973: sbb al, 0xd; sbb al, 0x9e; int1; jmp dword ptr [edx]; 
0x00176e8b: sbb al, 0xd; sbb al, 0xcb; out dx, al; jmp dword ptr [edx]; 
0x00186d03: sbb al, 0xd; sbb byte ptr [eax - 0xe], dh; jmp dword ptr [edx]; 
0x0017807b: sbb al, 0xd; sbb eax, -6; jmp dword ptr [edx]; 
0x0017b2b7: sbb al, 0xd; sbb ebp, dword ptr [ebp - 0x11]; jmp dword ptr [edx]; 
0x00177c4f: sbb al, 0xd; sbb ebx, edx; out dx, al; jmp dword ptr [edx]; 
0x00191ea3: sbb al, 0xd; scasb al, byte ptr es:[edi]; cli; cmc; jmp dword ptr [edx]; 
0x0017480b: sbb al, 0xd; scasb al, byte ptr es:[edi]; or ebp, ebp; jmp dword ptr [edx]; 
0x0017b497: sbb al, 0xd; scasb al, byte ptr es:[edi]; outsb dx, byte ptr [esi]; out dx, eax; jmp dword ptr [edx]; 
0x00184a8f: sbb al, 0xd; scasb al, byte ptr es:[edi]; popfd; int1; jmp dword ptr [edx]; 
0x0017a043: sbb al, 0xd; shl dword ptr [eax], cl; out dx, eax; jmp dword ptr [edx]; 
0x001776c3: sbb al, 0xd; shr dh, cl; jmp dword ptr [edx]; 
0x001786f3: sbb al, 0xd; stc; salc; out dx, al; jmp dword ptr [edx]; 
0x0017b197: sbb al, 0xd; std; dec edi; out dx, eax; jmp dword ptr [edx]; 
0x0018f99b: sbb al, 0xd; std; jns 0x18f995; jmp dword ptr [edx]; 
0x0017801b: sbb al, 0xd; std; xlatb; cli; jmp dword ptr [edx]; 
0x0017b2e7: sbb al, 0xd; sti; insb byte ptr es:[edi], dx; out dx, eax; jmp dword ptr [edx]; 
0x0018889b: sbb al, 0xd; sti; push edi; hlt; jmp dword ptr [edx]; 
0x00175303: sbb al, 0xd; stosb byte ptr es:[edi], al; aad 0xed; jmp dword ptr [edx]; 
0x001771eb: sbb al, 0xd; stosb byte ptr es:[edi], al; iretd; out dx, al; jmp dword ptr [edx]; 
0x001932e3: sbb al, 0xd; stosd dword ptr es:[edi], eax; sbb dh, dh; jmp dword ptr [edx]; 
0x0017a133: sbb al, 0xd; sub ah, byte ptr [edx]; out dx, eax; jmp dword ptr [edx]; 
0x0017b5b7: sbb al, 0xd; sub al, 0x76; out dx, eax; jmp dword ptr [edx]; 
0x001767f3: sbb al, 0xd; sub al, 0xc7; out dx, al; jmp dword ptr [edx]; 
0x00176503: sbb al, 0xd; sub al, cl; out dx, al; jmp dword ptr [edx]; 
0x0017b827: sbb al, 0xd; sub byte ptr [ebp - 0x11], bh; jmp dword ptr [edx]; 
0x0017b227: sbb al, 0xd; sub dword ptr [eax - 0x11], ebp; jmp dword ptr [edx]; 
0x0018ca4b: sbb al, 0xd; test al, 0x10; cmc; jmp dword ptr [edx]; 
0x00176533: sbb al, 0xd; test al, 0xc1; out dx, al; jmp dword ptr [edx]; 
0x00175347: sbb al, 0xd; test al, 0xd5; in eax, dx; jmp dword ptr [edx]; 
0x0018545b: sbb al, 0xd; test al, 0xf1; jmp dword ptr [edx]; 
0x001888cb: sbb al, 0xd; test byte ptr [ecx - 0xc], bl; jmp dword ptr [edx]; 
0x0016f6eb: sbb al, 0xd; test cl, 0xea; jmp dword ptr [edx]; 
0x0017b017: sbb al, 0xd; test dword ptr [ebx], edi; out dx, eax; jmp dword ptr [edx]; 
0x0017b4c7: sbb al, 0xd; test dword ptr [edi - 0x11], ebp; jmp dword ptr [edx]; 
0x0017b917: sbb al, 0xd; test dword ptr [edi - 0x11], edi; jmp dword ptr [edx]; 
0x00177077: sbb al, 0xd; wait; iretd; out dx, al; jmp dword ptr [edx]; 
0x0017717f: sbb al, 0xd; xchg eax, ebp; iretd; out dx, al; jmp dword ptr [edx]; 
0x00186bc3: sbb al, 0xd; xchg eax, ebp; jo 0x186bba; jmp dword ptr [edx]; 
0x00175407: sbb al, 0xd; xchg eax, ecx; aad 0xed; jmp dword ptr [edx]; 
0x00193037: sbb al, 0xd; xchg eax, ecx; sbb esi, esi; jmp dword ptr [edx]; 
0x0019168f: sbb al, 0xd; xchg eax, edi; fprem1; jmp dword ptr [edx]; 
0x00178137: sbb al, 0xd; xchg eax, edi; fsubp st(6); jmp dword ptr [edx]; 
0x0017714f: sbb al, 0xd; xchg eax, edi; iretd; out dx, al; jmp dword ptr [edx]; 
0x00174ec3: sbb al, 0xd; xchg eax, edi; push ebp; in eax, dx; jmp dword ptr [edx]; 
0x0017a163: sbb al, 0xd; xchg eax, edi; xor bh, ch; jmp dword ptr [edx]; 
0x00174393: sbb al, 0xd; xchg eax, edx; scasb al, byte ptr es:[edi]; in al, dx; jmp dword ptr [edx]; 
0x0017739b: sbb al, 0xd; xchg eax, edx; shr esi, 1; jmp dword ptr [edx]; 
0x0017bdf7: sbb al, 0xd; xchg eax, edx; test bh, ch; jmp dword ptr [edx]; 
0x0018609f: sbb al, 0xd; xchg eax, esi; fdivr st(1); jmp dword ptr [edx]; 
0x00178107: sbb al, 0xd; xchg eax, esi; fdivr st(2); jmp dword ptr [edx]; 
0x0019176b: sbb al, 0xd; xlatb; fprem1; jmp dword ptr [edx]; 
0x00177a73: sbb al, 0xd; xlatb; xlatb; out dx, al; jmp dword ptr [edx]; 
0x0017a193: sbb al, 0xd; xlatb; xor bh, ch; jmp dword ptr [edx]; 
0x0017835f: sbb al, 0xd; xor ah, bl; cli; jmp dword ptr [edx]; 
0x0017bbe7: sbb al, 0xd; xor al, 0x81; out dx, eax; jmp dword ptr [edx]; 
0x001848b3: sbb al, 0xd; xor al, 0x9e; int1; jmp dword ptr [edx]; 
0x00175ff3: sbb al, 0xd; xor al, 0xbd; out dx, al; jmp dword ptr [edx]; 
0x00176ebb: sbb al, 0xd; xor al, 0xcb; out dx, al; jmp dword ptr [edx]; 
0x001794ff: sbb al, 0xd; xor al, byte ptr [eax]; out dx, eax; jmp dword ptr [edx]; 
0x001955bb: sbb al, 0xd; xor al, byte ptr [edx - 0xa]; jmp dword ptr [edx]; 
0x0017910b: sbb al, 0xd; xor bh, bh; out dx, al; jmp dword ptr [edx]; 
0x0019544b: sbb al, 0xd; xor byte ptr [ecx - 0xa], al; jmp dword ptr [edx]; 
0x0018ca1b: sbb al, 0xd; xor ecx, dword ptr [esi]; cmc; jmp dword ptr [edx]; 
0x0017a253: sbb al, 0xd; xor esi, dword ptr [ebx]; out dx, eax; jmp dword ptr [edx]; 
0x0018cf1c: sbb al, 0xdd; add dword ptr [eax], eax; pushal; aam 0xf5; call edi; 
0x0017d21c: sbb al, 0xe0; add byte ptr [eax], al; adc dl, bh; out dx, eax; jmp dword ptr [edi]; 
0x0017d31c: sbb al, 0xe1; add byte ptr [eax], al; xor dh, bh; out dx, eax; call dword ptr [edx]; 
0x0018d51c: sbb al, 0xe3; add dword ptr [eax], eax; mov al, 0xe3; cmc; call dword ptr [edi]; 
0x00068b6e: sbb al, 0xe8; call dword ptr [ecx]; 
0x001342d3: sbb al, 0xe8; lcall 0x47c3:0x81ffff5a; add eax, dword ptr es:[eax]; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0010c9cb: sbb al, 0xe8; mov byte ptr [0x810001d3], al; ret; 
0x000981ae: sbb al, 0xe8; mov edi, 0x8100091b; ret; 
0x000654ae: sbb al, 0xe8; mov edi, 0x81000c48; ret; 
0x000277ae: sbb al, 0xe8; mov edi, 0x81001025; ret; 
0x0013b2b3: sbb al, 0xe8; mov edx, 0x81fffeea; ret; 
0x001381b3: sbb al, 0xe8; mov edx, 0x81ffff1b; ret; 
0x00135763: sbb al, 0xe8; or al, byte ptr [esi - 1]; inc dword ptr [ecx + 0x31437c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x000fe358: sbb al, 0xe8; ret 0xf18b; 
0x00116daa: sbb al, 0xe8; ret; 
0x0009a5bd: sbb al, 0xe9; ret 0xfffc; 
0x0012fe5a: sbb al, 0xe9; ret; 
0x0011718d: sbb al, 0xeb; adc cl, byte ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x0018d6f4: sbb al, 0xeb; cmc; call dword ptr [edx]; 
0x000342ad: sbb al, 0xeb; jnp 0x24b38; jmp dword ptr [ebp - 0x39]; 
0x000a7d00: sbb al, 0xeb; ret 0x8d90; 
0x0018d7e4: sbb al, 0xee; cmc; jmp dword ptr [ebx]; 
0x0017df2d: sbb al, 0xf0; call esp; 
0x0017deed: sbb al, 0xf0; jmp dword ptr [edx]; 
0x00188bbd: sbb al, 0xf4; jmp dword ptr [ebp]; 
0x00188c19: sbb al, 0xf4; jmp dword ptr [ecx]; 
0x000e1876: sbb al, 0xf6; ret 0x7501; 
0x00198819: sbb al, 0xf8; jmp esp; 
0x0003f6b6: sbb al, 0xf; inc ebp; ret 0x548b; 
0x00114e7e: sbb al, 0xf; mov dh, 0xc0; ret; 
0x000ef0a7: sbb al, 0xf; mov dh, 0xc0; sub eax, 1; ret; 
0x000a7145: sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x0008d81d: sbb al, 0xf; test dword ptr [ebp + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x0008eec0: sbb al, 0xf; test ecx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x0016701d: sbb al, 0xfd; jmp eax; 
0x0013815c: sbb al, 0xff; inc dword ptr [ecx + 0x2edc1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013816c: sbb al, 0xff; inc dword ptr [ecx + 0x2eeb1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001145f9: sbb al, 1; add byte ptr [eax], al; add al, ch; mov ebp, 0x89fffffe; ret 0xc031; 
0x00114589: sbb al, 1; add byte ptr [eax], al; add al, ch; sub eax, 0x89ffffff; ret 0xc031; 
0x000b7e32: sbb al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00148f80: sbb al, 1; add byte ptr [eax], al; lea eax, dword ptr [eax + 7]; pop edi; ret; 
0x000e113f: sbb al, 1; add byte ptr [eax], al; ret; 
0x000ab390: sbb al, 1; add byte ptr [eax], al; sub esp, 8; add esp, 0x18; pop ebx; ret; 
0x00081194: sbb al, 1; ret 0x448b; 
0x000d1801: sbb al, 1; ret 0x5439; 
0x00190e1d: sbb al, 2; add byte ptr [eax], al; xchg eax, esi; idiv bh; ret 0; 
0x00049c84: sbb al, 2; add byte ptr [ebx - 0x6bf0fe40], al; ret 0x73e9; 
0x00190ee9: sbb al, 2; add byte ptr [ecx + ebx*4], al; idiv bh; ret; 
0x0016b55d: sbb al, 2; add byte ptr [esi + ecx*4 - 0xa], al; jmp eax; 
0x0016b555: sbb al, 2; add byte ptr [esp + ecx*4], al; idiv bh; mov byte ptr [edx + eax], bl; add byte ptr [esi + ecx*4 - 0xa], al; jmp eax; 
0x0016e1a5: sbb al, 3; add byte ptr [eax + esi*2], dh; sti; lcall ptr [eax - 0x5bfffce4]; jno 0x16e1ae; call eax; 
0x00087470: sbb al, 3; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000e8116: sbb al, 4; add byte ptr [ecx + 0xbaedbc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e80e4: sbb al, 4; add byte ptr [ecx + 0xbaf0dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0002a9b1: sbb al, 5; add byte ptr [ebx - 0x12f6d], cl; dec dword ptr [ecx - 0x1b37b]; jmp dword ptr [ebp - 0x75]; 
0x0016f91c: sbb al, 7; add byte ptr [eax], al; push eax; mov dh, 0xea; call dword ptr [edx]; 
0x000b9453: sbb al, 9; pop es; add byte ptr [ecx + 0xe9b9dc3], al; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xd3]; call dword ptr gs:[0x10]; 
0x00125265: sbb al, byte ptr [eax + 0x7400287a]; adc al, 0x83; ret 0x8328; 
0x000e89c8: sbb al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00143a0e: sbb al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0009895f: sbb al, byte ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x00170c71: sbb al, byte ptr [eax]; add byte ptr [edx - 0x15], bh; jmp dword ptr [edx]; 
0x00170c49: sbb al, byte ptr [eax]; add byte ptr [edx - 0x15], dl; jmp dword ptr [eax]; 
0x00016eaa: sbb al, byte ptr [eax]; sub al, byte ptr [eax]; add byte ptr [eax], al; push dword ptr [ebx + 4]; jmp dword ptr [ebx + 8]; 
0x000ce78a: sbb al, byte ptr [ebx + 0x5f5e20c4]; pop ebp; ret; 
0x0016e11d: sbb al, byte ptr [ebx]; add byte ptr [edx + ebp*2 - 5], dl; call dword ptr [eax + 0x1a]; 
0x00113d0f: sbb al, byte ptr [ecx]; add byte ptr [eax], al; mov dword ptr [esp], edi; call dword ptr [esi]; 
0x00087172: sbb al, byte ptr [esi]; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00102bb3: sbb al, ch; mov edx, 0x81000271; ret; 
0x000c6bb7: sbb al, ch; ret; 
0x000e8209: sbb ax, word ptr [eax + eax]; add ebx, 0xbade7; xchg edi, ebx; mov eax, 0x58; call dword ptr gs:[0x10]; 
0x00074d68: sbb bh, al; add al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [ecx]; 
0x0016beb1: sbb bh, al; call eax; 
0x0016bea9: sbb bh, al; lcall ptr [eax + 0x4f]; add al, byte ptr [eax]; xchg eax, esp; sbb bh, al; call eax; 
0x00138476: sbb bh, bh; inc dword ptr [ecx + 0x2eaa7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013836c: sbb bh, bh; inc dword ptr [ecx + 0x2ebb1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0016700d: sbb bh, ch; jmp eax; 
0x0016b731: sbb bh, dh; call esp; 
0x0010e722: sbb bh, dh; inc dword ptr [ebp - 0x7c908640]; call dword ptr [eax]; 
0x0016aa7c: sbb bh, dl; add dword ptr [eax], eax; test byte ptr [edx], al; hlt; call dword ptr [eax - 0x29]; 
0x0019c055: sbb bl, byte ptr [0x73000005]; ret 0x8d01; 
0x000b90dc: sbb bl, byte ptr [edi + 0x548b000e]; and al, 8; xchg ebx, edx; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0008f27c: sbb bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0015880d: sbb bl, byte ptr [esi]; ret; 
0x0003175d: sbb bl, ch; and byte ptr [ecx + 0x140c4], al; add byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x00167b51: sbb bl, ch; call dword ptr [eax]; 
0x0011fd5f: sbb bl, ch; mov cs, word ptr [ebp + 0xb6]; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x7d]; 
0x0003087f: sbb bl, ch; ret 0x4c7; 
0x0019b988: sbb bl, dl; clc; jmp dword ptr [eax]; 
0x000efb7f: sbb byte ptr [eax + 0x139], bh; call dword ptr gs:[0x10]; 
0x00199a18: sbb byte ptr [eax + 0x59640002], ch; clc; jmp dword ptr [ecx]; 
0x001098ba: sbb byte ptr [eax + 1], bh; add esp, 0x18; pop esi; ret; 
0x00114acb: sbb byte ptr [eax + 1], bh; add esp, 8; ret; 
0x000e8c51: sbb byte ptr [eax + 1], bh; pop ebx; ret; 
0x00175ac8: sbb byte ptr [eax + eax], ah; or bl, ch; out dx, al; call dword ptr [eax]; 
0x00099d74: sbb byte ptr [eax + eax], dh; add esp, 0x18; pop ebx; ret; 
0x00170f58: sbb byte ptr [eax - 0x15], ch; jmp dword ptr [ebx]; 
0x00186d05: sbb byte ptr [eax - 0xe], dh; jmp dword ptr [edx]; 
0x0001af98: sbb byte ptr [eax], 0; mov eax, dword ptr [ecx + 0x36c0]; ret; 
0x0001af78: sbb byte ptr [eax], 0; mov eax, dword ptr [ecx + 0x36c8]; ret; 
0x0001952e: sbb byte ptr [eax], al; add byte ptr [eax], al; call eax; 
0x000fe8af: sbb byte ptr [eax], al; add byte ptr [eax], al; call eax; add esp, 0x18; pop ebx; ret; 
0x000fc0e7: sbb byte ptr [eax], al; add byte ptr [eax], al; call eax; add esp, 8; pop ebx; ret; 
0x0012ea71: sbb byte ptr [eax], al; add byte ptr [eax], al; call edx; 
0x0017d99c: sbb byte ptr [eax], al; add byte ptr [eax], al; mov al, byte ptr [0xbc0000e7]; or eax, esi; call dword ptr [edx]; 
0x00032ae8: sbb byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; call eax; 
0x00056706: sbb byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x5c]; mov dword ptr [esp], edx; call eax; 
0x0004e386: sbb byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x64]; mov dword ptr [esp], edx; call eax; 
0x000428ae: sbb byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x70]; mov dword ptr [esp], edx; call eax; 
0x0004799e: sbb byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; lea edx, dword ptr [esp + 0x20d0]; mov dword ptr [esp], edx; call eax; 
0x0005ba56: sbb byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; lea edx, dword ptr [esp + 0x8190]; mov dword ptr [esp], edx; call eax; 
0x000fb88e: sbb byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x20]; mov dword ptr [esp], edx; call eax; 
0x0003ec1c: sbb byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 8], esi; mov dword ptr [esp], edx; call eax; 
0x00026c09: sbb byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], 1; call eax; 
0x00028d15: sbb byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], ecx; call eax; 
0x0001afec: sbb byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], edi; call 0x126c80; mov dword ptr [esp], esi; call edi; 
0x0001ba84: sbb byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], edx; call eax; 
0x00199a14: sbb byte ptr [eax], al; add byte ptr [eax], al; sbb byte ptr [eax + 0x59640002], ch; clc; jmp dword ptr [ecx]; 
0x0014ab3c: sbb byte ptr [eax], al; add byte ptr [ebp - 0x31], dh; add esp, 0x18; pop ebx; ret; 
0x000734bd: sbb byte ptr [eax], al; add byte ptr [ebx + 0x18a083], al; add byte ptr [ecx], al; pop ebx; ret; 
0x000734c3: sbb byte ptr [eax], al; add byte ptr [ecx], al; pop ebx; ret; 
0x00041d54: sbb byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0xc7; 
0x00019659: sbb byte ptr [eax], al; lea eax, dword ptr [ecx - 0x43dee]; ret; 
0x00019639: sbb byte ptr [eax], al; lea eax, dword ptr [ecx - 0x46116]; ret; 
0x0001af99: sbb byte ptr [eax], al; mov eax, dword ptr [ecx + 0x36c0]; ret; 
0x0001af79: sbb byte ptr [eax], al; mov eax, dword ptr [ecx + 0x36c8]; ret; 
0x00019b59: sbb byte ptr [eax], al; mov eax, dword ptr [ecx - 0xf8]; add eax, dword ptr gs:[0]; ret; 
0x000a9361: sbb byte ptr [eax], bh; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x000a84c2: sbb byte ptr [eax], cl; add byte ptr [ecx + 0xfab2fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000a8482: sbb byte ptr [eax], cl; add byte ptr [ecx + 0xfab6fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000023e0: sbb byte ptr [eax], cl; ret 0x5576; 
0x00116005: sbb byte ptr [eax], dh; idiv edi; jmp ecx; 
0x000dfed6: sbb byte ptr [eax], dl; add byte ptr [eax], al; add esp, 0x101c; ret; 
0x000195a4: sbb byte ptr [ebp + 0x258e994], cl; add byte ptr [eax], al; mov dword ptr [esp], edx; call eax; 
0x00074d75: sbb byte ptr [ebp + 0x29a374c0], al; ret 0x9f74; 
0x00023191: sbb byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x0008f257: sbb byte ptr [ebp + 0x5e5f1947], cl; pop ebx; ret; 
0x0008f279: sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x0008f2c7: sbb byte ptr [ebp + 0x5e5f1c47], cl; pop ebx; ret; 
0x000eeaf2: sbb byte ptr [ebp + 0x5f], 0x5e; pop ebx; ret; 
0x0007375e: sbb byte ptr [ebp + 0x74c789c0], al; ret; 
0x000e3c2f: sbb byte ptr [ebp - 0x39], ah; add byte ptr [eax + eax], ah; add byte ptr [eax], al; mov eax, 1; add esp, 0x1c; ret; 
0x00040d2a: sbb byte ptr [ebp - 0x3db7f040], al; add esp, 0x1c; ret; 
0x0006bdcf: sbb byte ptr [ebp - 0x74f38b2e], al; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000b5695: sbb byte ptr [ebp - 0x77], ah; xor al, byte ptr [ebx - 0x3776db3c]; pop ebx; pop esi; ret; 
0x0016f044: sbb byte ptr [ebp - 0xcdbffff], al; std; jmp eax; 
0x00167758: sbb byte ptr [ebp - 3], bl; ljmp ptr [eax + 0x5d]; std; jmp dword ptr [edx + 0x5c]; 
0x000406bc: sbb byte ptr [ebx + 0x114244c], cl; ret 0x3ee9; 
0x00034f35: sbb byte ptr [ebx + 0x1402444], cl; ret 0x448b; 
0x0018e715: sbb byte ptr [ebx + 0x140e6506], al; ret; 
0x0014ad0e: sbb byte ptr [ebx + 0x1fd083], cl; add byte ptr [ecx + 0x33e82404], cl; ret 0xffec; 
0x00198518: sbb byte ptr [ebx + 0x2a440002], dl; sti; jmp dword ptr [edi]; 
0x0006bfbf: sbb byte ptr [ebx + 0x374fff8], al; and dword ptr [esi], 0xffffffef; add esp, 0x18; pop esi; ret; 
0x0010aa2f: sbb byte ptr [ebx + 0x44c61c75], cl; xor bh, bh; add byte ptr [ebx - 0x1e77b], cl; dec dword ptr [ebx - 0xf74d]; jmp dword ptr [ebp - 0x77]; 
0x0006a052: sbb byte ptr [ebx + 0x4508910], cl; mov edx, dword ptr [eax + 0xc]; mov dword ptr [eax + 0x10], edx; add esp, 0x1c; ret; 
0x00114519: sbb byte ptr [ebx + 0x468904c0], al; adc byte ptr [eax + 1], bh; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x00094cca: sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x00199d18: sbb byte ptr [ebx + 0x5de40002], ch; clc; call dword ptr [ebp]; 
0x00091844: sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x0006bd7c: sbb byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x001114ee: sbb byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x0004ba99: sbb byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000eb629: sbb byte ptr [ebx + 0x6514245c], cl; mov dword ptr [eax], 0x16; add esp, 0x1c; ret; 
0x00032811: sbb byte ptr [ebx + 0x6514245c], cl; mov dword ptr [eax], 0x16; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x0002c8b1: sbb byte ptr [ebx + 0x6514245c], cl; mov dword ptr [eax], 9; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x00070a01: sbb byte ptr [ebx + 0x66c31cc4], al; nop; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x44]; 
0x0007e881: sbb byte ptr [ebx + 0x72891c79], cl; sbb al, 0x83; ret 0x8320; 
0x0002dd0f: sbb byte ptr [ebx + 0x788b0470], cl; or byte ptr [ebx + 0x448b0c68], cl; and al, 8; mov esp, ecx; jmp edx; 
0x0008ee27: sbb byte ptr [ebx + 0x7f8d19eb], al; sbb dword ptr [edi], ecx; test dword ptr [esi + eax], edi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008d7b9: sbb byte ptr [ebx + 0x7f8d1aeb], al; sbb cl, byte ptr [edi]; test edx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x0008d817: sbb byte ptr [ebx + 0x7f8d1ceb], al; sbb al, 0xf; test dword ptr [ebp + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x0002e937: sbb byte ptr [ebx + 0xb7501e2], al; xor eax, eax; pop ebx; pop edi; ret; 
0x0006aa6d: sbb byte ptr [ebx + 0xc], dh; mov byte ptr [ecx], al; add ecx, 1; movzx eax, al; mov dword ptr [edx + 0x14], ecx; ret; 
0x00127a0a: sbb byte ptr [ebx + 0xf28246c], cl; inc esi; ret 0xc483; 
0x000197de: sbb byte ptr [ebx + 0xfcc83], cl; add byte ptr [ebp - 0x74f18b40], al; push esp; and al, 0x20; mov dword ptr [esp], edx; call eax; 
0x0016e704: sbb byte ptr [ebx + eax], bh; add byte ptr [edx + eax], ah; cld; call dword ptr [eax + 0x3c]; 
0x000fd414: sbb byte ptr [ebx + edi*8 + 0xcc483ff], bh; and eax, 0xffff; ret; 
0x0014b3a5: sbb byte ptr [ebx - 0x134d], cl; jmp dword ptr [ebp - 0x75]; 
0x00025efe: sbb byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x0007926c: sbb byte ptr [ebx - 0x17], bl; in eax, dx; ret 0xffff; 
0x0004b9a6: sbb byte ptr [ebx - 0x17d3dbbc], cl; ret; 
0x00072a60: sbb byte ptr [ebx - 0x2b8a0008], al; add esp, 0x18; pop esi; ret; 
0x00124772: sbb byte ptr [ebx - 0x2f76e33c], al; ret; 
0x000b3c34: sbb byte ptr [ebx - 0x38b7dbbc], cl; add byte ptr [eax], al; add byte ptr [eax], al; add bl, ch; ror byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x000b42dc: sbb byte ptr [ebx - 0x38b7dbbc], cl; add byte ptr [eax], al; add byte ptr [eax], al; add bl, ch; ror dword ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x000efb41: sbb byte ptr [ebx - 0x47ebdba4], cl; cmp dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e7ea0: sbb byte ptr [ebx - 0x47ebdba4], cl; mov es, word ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011c415: sbb byte ptr [ebx - 0x574d], cl; jmp dword ptr [ebp - 0x75]; 
0x000eecfa: sbb byte ptr [ebx - 0x6f3ce33c], al; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x16; call dword ptr gs:[0x10]; 
0x00031059: sbb byte ptr [ebx - 0x74e3db84], cl; insb byte ptr es:[edi], dx; and al, 0x20; add esp, 0x24; ret; 
0x000f11cf: sbb byte ptr [ebx - 0x74ebdb84], cl; insb byte ptr es:[edi], dx; and al, 0x1c; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000ef67f: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000efc0f: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000efd1f: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000efde5: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000ef335: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000b7da5: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000efad5: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x000e1345: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000ed525: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x000ed5b5: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x000ed405: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x000e1395: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x000ef625: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000ef6b1: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000eb2ee: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x000efc41: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000efd51: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000efebe: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x000ef8de: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x000ef74e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x000e7e68: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000ef92e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x000efa8e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x000efa3e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x00123dce: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xbc; call dword ptr gs:[0x10]; 
0x00123e8e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xbd; call dword ptr gs:[0x10]; 
0x000ed71e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x000ed68e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x000ed4de: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012e51e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xfa; call dword ptr gs:[0x10]; 
0x000eeb7a: sbb byte ptr [ebx - 0x76afdbbc], cl; inc esp; and al, 0x1c; xchg ebx, ecx; mov eax, 0x95; call dword ptr gs:[0x10]; 
0x000319cb: sbb byte ptr [ebx - 0x76dfdb84], cl; xor al, 0x24; mov dword ptr [esp + 8], ecx; mov ecx, dword ptr [esp + 0x2c]; mov dword ptr [esp + 4], ecx; call edi; 
0x000a3dc1: sbb byte ptr [ebx - 0x77e7dbb4], cl; push esp; cmp eax, 0x83fa8900; ret 0x8901; 
0x000ddfa4: sbb byte ptr [ebx - 0x78ebdb84], cl; fistp qword ptr [eax + 0x129]; call dword ptr gs:[0x10]; 
0x000e1408: sbb byte ptr [ebx - 0x78efdb84], cl; fistp qword ptr [eax + 0x140]; call dword ptr gs:[0x10]; 
0x000c55d6: sbb byte ptr [ebx - 0x7adfdb84], cl; test byte ptr [edi], 0x49; into; xchg edi, ebx; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000739be: sbb byte ptr [ebx - 0x7adfdb8c], cl; ror byte ptr [edi], cl; dec ecx; ret 0x4489; 
0x0002443f: sbb byte ptr [ebx - 0x7ae3dbb4], cl; sal byte ptr [ebp - 0x50], 0x83; ret 0x8901; 
0x00034673: sbb byte ptr [ebx - 0x7cbfdbac], cl; ret 0xf01; 
0x0010939f: sbb byte ptr [ebx - 0x8f6d], cl; dec dword ptr [ebx - 0x12f45]; jmp dword ptr [ebp - 0x75]; 
0x0006bddb: sbb byte ptr [ebx - 0x93ce33c], al; push es; add dh, byte ptr [ebp + 0x14]; mov eax, dword ptr [eax + 0xb8]; mov dword ptr [esp], esi; call dword ptr [eax + 0x34]; 
0x000e6b19: sbb byte ptr [ebx - 0xf74d], cl; jmp dword ptr [ebp - 0x75]; 
0x0002870f: sbb byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x7d]; 
0x000fc742: sbb byte ptr [ebx - 0xff7d], cl; jmp dword ptr [ebp - 0x75]; 
0x0016e0cd: sbb byte ptr [ebx], al; add ah, al; pop esp; sti; call dword ptr [eax + 0x18]; 
0x001753b8: sbb byte ptr [ebx], al; out dx, al; call dword ptr [ecx]; 
0x00167318: sbb byte ptr [ebx], bh; std; ljmp ptr [eax + 0x3b]; std; call dword ptr [edx + 0x3a]; 
0x00056a69: sbb byte ptr [ebx], ch; inc edi; adc al, 0xc1; clc; add bh, byte ptr [ecx]; ret 0x1974; 
0x001753b4: sbb byte ptr [ebx], cl; add byte ptr [eax], al; sbb byte ptr [ebx], al; out dx, al; call dword ptr [ecx]; 
0x0012500f: sbb byte ptr [ecx + 0x15cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000b995f: sbb byte ptr [ecx + 0x2478f9], al; add byte ptr [ebp - 0x46], dh; mov eax, 0xfffa; pop ebx; ret; 
0x001144d5: sbb byte ptr [ecx + 0x295674fa], cl; ret 0xea83; 
0x000792a5: sbb byte ptr [ecx + 0x2e95bd0], cl; ret 0xffff; 
0x00178b18: sbb byte ptr [ecx + 0x31c40000], bl; out dx, eax; call eax; 
0x0007f497: sbb byte ptr [ecx + 0x450c4], al; add byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x000e5912: sbb byte ptr [ecx + 0x508b1c56], cl; sub al, 0xf6; ret 0x7420; 
0x0011e536: sbb byte ptr [ecx + 0x54ff2404], cl; and al, 0x40; add esp, 0x3c; ret; 
0x000cf02b: sbb byte ptr [ecx + 0xce8242c], cl; ret 0xffff; 
0x0012fe56: sbb byte ptr [ecx - 0x16e3dbac], cl; ret; 
0x001028c6: sbb byte ptr [ecx - 0x17fbdba4], cl; mov dword ptr [0x81000274], eax; ret; 
0x0002ba62: sbb byte ptr [ecx - 0x3d76dbec], cl; mov eax, 2; call 0x2b9b0; add esp, 0x2c; ret; 
0x00071f0d: sbb byte ptr [ecx - 0x3fceefba], cl; mov dword ptr [esi], edx; add esp, 0x18; pop esi; ret; 
0x00073207: sbb byte ptr [ecx - 0x3fcefbba], cl; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x000cefa1: sbb byte ptr [ecx - 0x6917dbd4], cl; ret 0xffff; 
0x00111d3e: sbb byte ptr [ecx - 0x74f7dbb4], cl; dec ebp; adc al, 0x89; dec esp; and al, 4; call dword ptr [edx]; 
0x0010513e: sbb byte ptr [ecx - 0x76e7dbac], cl; ret 0xeac1; 
0x0007b844: sbb byte ptr [ecx - 0x76f7db8c], cl; dec esp; and al, 4; call eax; 
0x00031624: sbb byte ptr [ecx - 0x76fbdb8c], cl; dec esp; and al, 8; mov ecx, dword ptr [esp + 0x30]; mov dword ptr [esp], ecx; call edi; 
0x0003167f: sbb byte ptr [ecx - 0x76fbdb94], cl; xor al, 0x24; mov dword ptr [esp + 8], ecx; call edi; 
0x0005b99f: sbb byte ptr [ecx - 0x76fbdbb4], cl; xor al, 0x24; call dword ptr [eax + 0x1c]; 
0x0007bbe2: sbb byte ptr [ecx], 0; add byte ptr [ecx + 0x62e82404], cl; or ch, bh; jmp dword ptr [ebp - 0x7d]; 
0x00169615: sbb byte ptr [ecx], al; add ah, dl; push -0x10; call dword ptr [eax + 0x19]; 
0x000e1139: sbb byte ptr [ecx], al; add byte ptr [eax], al; add esp, 0x11c; ret; 
0x00107767: sbb byte ptr [ecx], al; add byte ptr [eax], al; mov dword ptr gs:[edx], ecx; add esp, 0x28; pop ebx; ret; 
0x0002e44a: sbb byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; ret; 
0x0007f369: sbb byte ptr [ecx], al; ret 0x5489; 
0x000d2010: sbb byte ptr [ecx], al; ret 0xe889; 
0x000cd6c0: sbb byte ptr [ecx], al; sar byte ptr [edi + 4], 1; ret 0xc083; 
0x00172fc8: sbb byte ptr [ecx], bh; add byte ptr [eax], al; xchg eax, ebp; add ebp, esp; call dword ptr [eax]; 
0x000a7127: sbb byte ptr [ecx], bh; dec edi; sbb byte ptr [edi], cl; test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x000f6ce7: sbb byte ptr [ecx], bh; ret 0x2176; 
0x000b3428: sbb byte ptr [ecx], bh; ret 0x4e89; 
0x00122445: sbb byte ptr [ecx], bh; ret 0x870f; 
0x00098567: sbb byte ptr [ecx], ch; ret 0xd089; 
0x00117c7b: sbb byte ptr [ecx], cl; ret 0xb60f; 
0x00033b77: sbb byte ptr [ecx], dh; ror byte ptr [ebx - 0x74dfdba4], 0x74; and al, 0x24; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000de0d3: sbb byte ptr [edi + 0x12cb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008db77: sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000e0df5: sbb byte ptr [edi], cl; inc edi; ret 0xc483; 
0x0011f9e3: sbb byte ptr [edi], cl; mov dh, 0xc0; pop ebx; ret; 
0x000a712a: sbb byte ptr [edi], cl; test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x000c6f0b: sbb byte ptr [edi], cl; test ebp, esi; add dword ptr [eax], eax; add byte ptr [ebx - 0x76d3db94], cl; imul ebp, dword ptr [eax], 0xfffe8ae9; jmp dword ptr [esi - 0x70]; 
0x0010a9df: sbb byte ptr [edi], cl; xchg eax, ebp; ret 0xc085; 
0x0016cc54: sbb byte ptr [edx + 0x47340002], 0xf9; ljmp ptr [edx + ebx*4 + 0x47940002]; stc; call eax; 
0x00126bfb: sbb byte ptr [edx + edx*8 - 0x75], dh; dec eax; or bl, ch; ret; 
0x00001faf: sbb byte ptr [edx - 0x1a], dl; ret; 
0x0019a418: sbb byte ptr [edx - 0x742bfffe], dh; clc; jmp dword ptr [ebx]; 
0x0008ea94: sbb byte ptr [edx], cl; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000343d4: sbb byte ptr [esi + 0x5f], 0x5d; ret; 
0x0007f0ee: sbb byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x0012fa06: sbb byte ptr [esi + 0xf], ah; out dx, eax; ror byte ptr [edi], 0xb6; or cl, byte ptr [ebx - 0x8f6d]; jmp dword ptr [ebp - 0x75]; 
0x001954c8: sbb byte ptr [esi + 2], bl; add byte ptr [ebp + esi - 9], cl; call dword ptr [eax]; 
0x0011e581: sbb byte ptr [esi - 0x3d], bl; lea esi, dword ptr [esi]; mov eax, dword ptr [ecx + 4]; mov dword ptr [esp + 4], esi; mov dword ptr [esp], ecx; call dword ptr [eax + 4]; 
0x0011e597: sbb byte ptr [esi - 0x3d], bl; lea esi, dword ptr [esi]; mov eax, dword ptr [ecx + 4]; mov dword ptr [esp + 4], esi; mov dword ptr [esp], ecx; call dword ptr [eax]; 
0x00166f54: sbb byte ptr [esi], 0xfd; call eax; 
0x00166f54: sbb byte ptr [esi], 0xfd; call eax; push ds; std; jmp dword ptr [eax]; 
0x0016f818: sbb byte ptr [esi], al; add byte ptr [eax], al; and al, 0xab; std; call dword ptr [edx]; 
0x000d1927: sbb byte ptr [esp + esi*2], cl; or eax, 0x424748b; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00167001: sbb ch, bh; push dword ptr [eax]; sbb ebp, edi; inc eax; sbb ebp, edi; call dword ptr [eax + 0x1a]; 
0x0007c324: sbb ch, bl; cmp dword ptr [eax + 0x4244489], edx; mov eax, dword ptr [esi + 0x24]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x0007b762: sbb ch, byte ptr [edx - 4]; jmp dword ptr [esi - 0x39]; 
0x0016b0b9: sbb ch, dh; call eax; 
0x001921c0: sbb cl, 0xf6; call dword ptr [ebp]; 
0x00166760: sbb cl, 0xfc; push dword ptr [eax - 0x1f000327]; frndint; call dword ptr [eax]; 
0x000ca10b: sbb cl, byte ptr [eax]; xor eax, eax; ret; 
0x0008d7bc: sbb cl, byte ptr [ebp - 0x7af0e581]; ljmp 0x5b5e:0x5f000005; ret; 
0x000f7225: sbb cl, byte ptr [ebx - 0x12f75]; lcall ptr [ebx + 0x65]; mov ecx, dword ptr [ecx]; test byte ptr [ecx + eax*2 + 1], 0x40; cmove eax, edx; ret; 
0x00126e2d: sbb cl, byte ptr [ebx - 0x7ad7dbac]; sal byte ptr [ebp + 0xa], cl; add esp, 0x34; pop ebx; pop esi; ret; 
0x000fc9dd: sbb cl, byte ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x00166dd0: sbb cl, byte ptr [edi]; std; lcall ptr [edx + 0x6afffd0c]; or eax, 0xe3afffd; std; call dword ptr [eax + 0xc]; 
0x0008d7bf: sbb cl, byte ptr [edi]; test edx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x00188511: sbb dh, ah; call dword ptr [eax]; 
0x00188aa5: sbb dh, ah; call dword ptr [edi]; 
0x001941e1: sbb dh, bh; call dword ptr [eax]; 
0x001878e5: sbb dh, bl; call dword ptr [ebx]; 
0x00158cad: sbb dh, byte ptr [esi + 0x53]; sbb eax, edx; cdq; iretd; dec ebx; ret 0xde9e; 
0x0016b329: sbb dh, dh; call dword ptr [eax]; 
0x00193286: sbb dh, dh; jmp dword ptr [edx]; 
0x0007a742: sbb dh, dh; ret 0x7403; 
0x00064c57: sbb dh, dh; ret 0x7420; 
0x00038a45: sbb dh, dh; ret 0x7501; 
0x00149977: sbb dh, dh; ret 0xf0f; 
0x00184b2d: sbb dh, dl; jmp ebx; 
0x00184985: sbb dl, dh; call dword ptr [ecx]; 
0x00095d2e: sbb dword ptr [eax - 0x72fffc86], eax; inc edx; add esi, dword ptr [eax + edx - 0x7d]; ret 0x3904; 
0x00064fb4: sbb dword ptr [eax - 0x77000000], 0xd2ff2404; add esp, 0x1c; ret; 
0x00116004: sbb dword ptr [eax], 0x30; idiv edi; jmp ecx; 
0x000a9360: sbb dword ptr [eax], 0x38; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0002ee64: sbb dword ptr [eax], 0xd0890000; ret; 
0x00074027: sbb dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000aac87: sbb dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00074c50: sbb dword ptr [eax], eax; add byte ptr [ebp + 0x44c8b], cl; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x77]; 
0x0005d331: sbb dword ptr [eax], eax; add byte ptr [ebx - 0x7af0cf02], al; ret 0x18; 
0x0007bee0: sbb dword ptr [eax], eax; add byte ptr [ebx - 0xc37d], cl; dec dword ptr [ecx + 0x18c48310]; pop ebx; ret; 
0x0007bbe3: sbb dword ptr [eax], eax; add byte ptr [ecx + 0x62e82404], cl; or ch, bh; jmp dword ptr [ebp - 0x7d]; 
0x0008ec93: sbb dword ptr [eax], ecx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000d67cc: sbb dword ptr [ebp + 0x148b0076], ecx; xchg byte ptr [ecx], bh; ret 0x775; 
0x0007e28f: sbb dword ptr [ebp + ecx - 7], -1; pop ebx; ret; 
0x00097d4d: sbb dword ptr [ebp + esi - 0x10], -1; pop ebx; ret; 
0x00047fae: sbb dword ptr [ebp - 0x38fffffc], 2; sub eax, 0x83000000; ret 0x8904; 
0x0018ffd4: sbb dword ptr [ebp - 0xa], edx; call dword ptr [eax]; 
0x001083f3: sbb dword ptr [ebp - 1], edi; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x0007d08d: sbb dword ptr [ebx + ebx*2 - 6], -1; pop ebx; ret; 
0x0012e5d3: sbb dword ptr [ebx + edi*8 - 1], ecx; sub esp, 8; add esp, 0x1c; ret; 
0x00074d03: sbb dword ptr [ebx - 0x15b6d], ecx; inc edi; add al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [edx]; 
0x0012869e: sbb dword ptr [ebx - 0xf769f3c], eax; pop esi; pop edi; pop ebp; ret; 
0x001842b2: sbb dword ptr [ebx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000974a1: sbb dword ptr [ecx + ecx*8 - 8], -1; lea edx, dword ptr [ebx - 0x10c064]; cmove eax, edx; add esp, 8; pop ebx; ret; 
0x000a74b6: sbb dword ptr [ecx - 0x6e8b743e], ecx; or al, 0x8d; inc edx; add eax, dword ptr [ebp + 0x5ed475f6]; ret; 
0x0008f25a: sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x0017b1c3: sbb dword ptr [edi + ebp*8 + 0x710d1cff], ebx; out dx, eax; jmp dword ptr [edx]; 
0x000340ec: sbb dword ptr [edi + ecx], -0x7f; ret; 
0x000060f9: sbb dword ptr [edi], ecx; add byte ptr [ebx + 0x22000000], dl; add byte ptr [eax + eax], cl; ret 3; 
0x0008ee2d: sbb dword ptr [edi], ecx; test dword ptr [esi + eax], edi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00195a88: sbb dword ptr [edx - 9], ecx; call dword ptr [eax]; 
0x00148523: sbb dword ptr [edx], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0017b733: sbb dword ptr [esi + 0xd1cffef], edx; fdivr qword ptr [ecx - 0x11]; jmp dword ptr [edx]; 
0x0007d0df: sbb dword ptr [esi + esi + 0x2000000], 0; add byte ptr [esi + eax - 0x73], dh; or dword ptr [ecx + ebp*8 - 0x12], 0xffffffff; pop ebx; ret; 
0x0007c3ef: sbb dword ptr [esi + esi + 0x2000000], 0; add byte ptr [esi + eax - 0x73], dh; or dword ptr [esi + eax*8 - 0x12], 0xffffffff; pop ebx; ret; 
0x0007e39f: sbb dword ptr [esi + esi + 0x2000000], 0; add byte ptr [esi + eax - 0x73], dh; or dword ptr [esp + edx*2 - 0x12], 0xffffffff; pop ebx; ret; 
0x0007dcb3: sbb dword ptr [esi + esi], 0x10; add byte ptr [esi + eax - 0x73], dh; cmp dword ptr [edi + edx*8 - 8], -1; pop ebx; ret; 
0x000c5c5a: sbb dword ptr [esi - 0x7fffffca], -0x73; sbb dword ptr [esp + ebp], -0xe; dec dword ptr [ebp - 0xdd4636d]; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x000f1173: sbb dword ptr [esi], 0xb; add byte ptr [ecx + 0x100ce], al; add byte ptr [ecx - 0x76f3dba4], cl; ret; 
0x0008ee93: sbb dword ptr [esi], eax; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00033015: sbb dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 4]; add esp, 0x14; ret; 
0x000c5c61: sbb dword ptr [esp + ebp], -0xe; dec dword ptr [ebp - 0xdd4636d]; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x00104ba9: sbb eax, -1; call dword ptr [eax - 0x17ac6f70]; mov ebp, 0x81000251; ret; 
0x00094200: sbb eax, -1; mov byte ptr [eax], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x0007dcef: sbb eax, -1; pop ebx; ret; 
0x0008b516: sbb eax, -1; pop edi; pop ebx; ret; 
0x0007df9d: sbb eax, -1; pop esi; pop ebx; ret; 
0x0017807d: sbb eax, -6; jmp dword ptr [edx]; 
0x00166fb1: sbb eax, 0x1e5cfffd; std; ljmp ptr [esi + ebx + 0x1efcfffd]; std; jmp esi; 
0x00132e05: sbb eax, 0x3000330; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0007dd09: sbb eax, 0x3000dc8; sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x0015878b: sbb eax, 0x3c42d35a; push cs; push esp; jmp dword ptr [ebx - 0x40]; 
0x001111cd: sbb eax, 0x448b0000; and al, 0x1c; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0014aca0: sbb eax, 0x4890000; and al, 0xe8; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xffec; 
0x0014ac82: sbb eax, 0x4890000; and al, 0xe8; ret; 
0x000c322a: sbb eax, 0x4bdc001; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0xc083; 
0x0002c678: sbb eax, 0x508d0005; add esi, esi; ret 0x6601; 
0x0016bee9: sbb eax, 0x51bcfff8; add al, byte ptr [eax]; adc al, 0x1e; clc; jmp eax; 
0x0008d847: sbb eax, 0x562850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0008eeea: sbb eax, 0x5bf850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00076f48: sbb eax, 0x5c247c80; add byte ptr [esp + ecx*4 - 0x75], dh; and dword ptr [esi + edi*8 + 0x4c7ffff], 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [eax]; 
0x000f123c: sbb eax, 0x5c89000b; and al, 0xc; mov ebx, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0008d48f: sbb eax, 0x5f000009; pop esi; pop ebx; ret; 
0x0019c056: sbb eax, 0x73000005; ret 0x8d01; 
0x0016e1dd: sbb eax, 0x74d40003; sti; ljmp ptr [ebp + ebx + 0x75a40003]; sti; call esp; 
0x0016e1e5: sbb eax, 0x75a40003; sti; call esp; 
0x00128b52: sbb eax, 0x81000012; ret; 
0x00126f52: sbb eax, 0x8100002e; ret; 
0x00126552: sbb eax, 0x81000038; ret; 
0x00101552: sbb eax, 0x81000288; ret; 
0x000fe852: sbb eax, 0x810002b5; ret; 
0x000ea052: sbb eax, 0x810003fd; ret; 
0x000e8a52: sbb eax, 0x81000413; ret; 
0x000df352: sbb eax, 0x810004aa; ret; 
0x000c5b52: sbb eax, 0x81000642; ret; 
0x000b5c52: sbb eax, 0x81000741; ret; 
0x0009e652: sbb eax, 0x810008b7; ret; 
0x00099b52: sbb eax, 0x81000902; ret; 
0x00098452: sbb eax, 0x81000919; ret; 
0x0007e552: sbb eax, 0x81000ab8; ret; 
0x0007e452: sbb eax, 0x81000ab9; ret; 
0x0007e252: sbb eax, 0x81000abb; ret; 
0x0007d152: sbb eax, 0x81000acc; ret; 
0x0007cf52: sbb eax, 0x81000ace; ret; 
0x0007c852: sbb eax, 0x81000ad5; ret; 
0x00035b52: sbb eax, 0x81000f42; ret; 
0x00035a52: sbb eax, 0x81000f43; ret; 
0x00033f52: sbb eax, 0x81000f5e; ret; 
0x00032f52: sbb eax, 0x81000f6e; ret; 
0x00032d52: sbb eax, 0x81000f70; ret; 
0x00026c52: sbb eax, 0x81001031; ret; 
0x0014b052: sbb eax, 0x81fffded; ret; 
0x0012ee52: sbb eax, 0x81ffffaf; ret; 
0x000ec3f7: sbb eax, 0x830a02c6; ret 0x8b01; 
0x000a5445: sbb eax, 0x83b4558b; ret 0x3901; 
0x0011aac9: sbb eax, 0x83fffffe; ret 0x8303; 
0x000e802e: sbb eax, 0xc1810004; ret; 
0x00138049: sbb eax, 0xc381ffff; adc al, 0xee; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000251d4: sbb eax, 0xc483ffff; adc al, 0x5b; pop esi; ret; 
0x0013c792: sbb eax, 0xc801ca01; call 0x129d73; add ebx, 0x2af44; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013a142: sbb eax, 0xc801ca01; call 0x129d73; add ebx, 0x2d154; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c9cb3: sbb eax, 0xc8c10000; or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr [esp], edx; call eax; 
0x0016d6a1: sbb eax, 0xe03cfffa; add al, byte ptr [eax]; add al, 0x1e; cli; jmp dword ptr [eax - 0x20]; 
0x0008eee7: sbb eax, 0xf1d7f8d; test dword ptr [edi + 0x5f000005], edi; pop esi; pop ebx; ret; 
0x0016b0f9: sbb eax, 0xfed0fff5; add dword ptr [eax], eax; adc al, 0x1f; cmc; jmp dword ptr [eax]; 
0x0000369e: sbb eax, dword ptr [0x572808a8]; call dword ptr [esi + 0x6f]; 
0x000e820a: sbb eax, dword ptr [eax + eax]; add ebx, 0xbade7; xchg edi, ebx; mov eax, 0x58; call dword ptr gs:[0x10]; 
0x0014ac2a: sbb eax, dword ptr [eax]; add al, ch; push ds; ret; 
0x000a9a27: sbb eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x9389; 
0x000b7ed7: sbb eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00170d25: sbb eax, dword ptr [eax]; add byte ptr [eax], ch; arpl bx, bp; call dword ptr [ebx]; 
0x00170d61: sbb eax, dword ptr [eax]; add byte ptr [ebx - 0x15], cl; call dword ptr [ebx]; 
0x0014ac39: sbb eax, dword ptr [eax]; add byte ptr [ecx + 0xce82404], cl; ret; 
0x000a9827: sbb eax, dword ptr [eax]; add byte ptr [ecx], cl; ret 0x840f; 
0x000a9f77: sbb eax, dword ptr [eax]; add byte ptr [ecx], cl; ret 0x850f; 
0x000aa072: sbb eax, dword ptr [eax]; add byte ptr [edi], cl; xchg eax, ebp; ret 0x10e9; 
0x000ca94c: sbb eax, dword ptr [ebx + 0x67403fa]; add esp, 0x18; pop ebx; ret; 
0x0008eeba: sbb eax, dword ptr [ebx + 0x7f8d1ceb]; sbb al, 0xf; test ecx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x00146ae4: sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x0016e175: sbb eax, dword ptr [ebx]; add byte ptr [ebp + ebp*2 + 0x1bacfffb], dh; add eax, dword ptr [eax]; xor al, 0x6e; sti; jmp eax; 
0x0016e17d: sbb eax, dword ptr [ebx]; add byte ptr [esi + ebp*2], dh; sti; jmp eax; 
0x00147d31: sbb eax, dword ptr [ecx]; add byte ptr [eax], al; lea eax, dword ptr [edi + 3]; pop edi; ret; 
0x000b3f59: sbb eax, dword ptr [ecx]; add byte ptr [eax], al; mov edi, dword ptr [ebp - 0x3c]; xchg edi, ebx; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000b5152: sbb eax, dword ptr [edi]; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp + 3]; 
0x000b823b: sbb eax, dword ptr [edi]; add byte ptr [ecx + 0xeadb6c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000b81c4: sbb eax, dword ptr [edi]; add byte ptr [ecx + 0xeae2dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00116d90: sbb eax, eax; add eax, 2; add esp, 0x1c; ret; 
0x000fc3c3: sbb eax, eax; add esp, 0x18; and eax, 0xc; pop ebx; ret; 
0x0006ab1b: sbb eax, eax; add esp, 0x18; not eax; pop ebx; ret; 
0x00055496: sbb eax, eax; add esp, 0x18; pop ebx; ret; 
0x0002f84c: sbb eax, eax; and eax, 2; sub eax, 1; pop esi; pop edi; ret; 
0x000e15fd: sbb eax, eax; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000ca616: sbb eax, eax; mov esi, dword ptr [esp + 0x18]; and eax, 0xc; add esp, 0x1c; ret; 
0x0002f7d1: sbb eax, eax; neg eax; pop esi; pop edi; ret; 
0x0001a400: sbb eax, eax; not eax; add esp, 8; pop ebx; ret; 
0x000974d2: sbb eax, eax; or eax, 1; pop esi; ret; 
0x0007dced: sbb eax, eax; sbb eax, -1; pop ebx; ret; 
0x0007df9b: sbb eax, eax; sbb eax, -1; pop esi; pop ebx; ret; 
0x0004c439: sbb eax, eax; xor al, al; add eax, 0x107; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00198781: sbb eax, edi; call edx; 
0x00158cb0: sbb eax, edx; cdq; iretd; dec ebx; ret 0xde9e; 
0x0017b2b9: sbb ebp, dword ptr [ebp - 0x11]; jmp dword ptr [edx]; 
0x00074344: sbb ebp, dword ptr [ecx]; ret 0x528b; 
0x00167b81: sbb ebp, ebx; jmp dword ptr [eax]; 
0x00167009: sbb ebp, edi; call dword ptr [eax + 0x1a]; 
0x00167009: sbb ebp, edi; call dword ptr [eax + 0x1a]; std; jmp eax; 
0x00167005: sbb ebp, edi; inc eax; sbb ebp, edi; call dword ptr [eax + 0x1a]; 
0x00167005: sbb ebp, edi; inc eax; sbb ebp, edi; call dword ptr [eax + 0x1a]; std; jmp eax; 
0x0016b0d1: sbb ebp, esi; call dword ptr [eax]; 
0x0008f2aa: sbb ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x00177c51: sbb ebx, edx; out dx, al; jmp dword ptr [edx]; 
0x0013c3ee: sbb ecx, 0xc381fffe; outsb dx, byte ptr [esi]; mov al, 2; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000e14e8: sbb ecx, dword ptr [eax + eax]; mov eax, dword ptr [ecx - 0xf8]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0008d7ea: sbb ecx, dword ptr [ebp - 0x7af0e481]; mov esp, 0x5f000005; pop esi; pop ebx; ret; 
0x0006297c: sbb ecx, dword ptr [ebx - 0x1574d]; jmp dword ptr [ebp - 0x75]; 
0x000e504c: sbb ecx, dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x0008d7ed: sbb ecx, dword ptr [edi]; test dword ptr [ebp + eax + 0x5e5f0000], edi; pop ebx; ret; 
0x0008e917: sbb edi, dword ptr [esi + 0xc03000c]; xchg eax, ecx; jmp ecx; 
0x001987ed: sbb edi, eax; jmp dword ptr [edi]; 
0x001778ad: sbb edi, ebp; call dword ptr [esi]; 
0x0007a8c8: sbb edi, ebp; inc dword ptr [ebx - 0x3fce9f3c]; pop ebx; pop esi; pop edi; ret; 
0x00138265: sbb edi, edi; inc dword ptr [ecx + 0x2ecb8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001381b6: sbb edi, edi; inc dword ptr [ecx + 0x2ee27c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x00194141: sbb edi, esi; call dword ptr [eax]; 
0x000a5585: sbb edi, esi; dec dword ptr [ebx - 0x1d3e57ab]; add al, byte ptr [ebp + 0xfc789c0]; test byte ptr [esi + 0x1fffff7], dh; ret 0x5589; 
0x000bb131: sbb edx, dword ptr [edi]; cld; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x0011b715: sbb edx, edx; not edx; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x00187909: sbb esi, ebx; call dword ptr [ebx]; 
0x0019300a: sbb esi, esi; jmp dword ptr [edx]; 
0x0007b52c: sbb esi, esi; mov eax, esi; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00188b81: sbb esi, esp; call ecx; 
0x00188b2d: sbb esi, esp; jmp dword ptr [ebx]; 
0x000fbede: sbb esp, 0x38; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0011d1a0: sbb esp, edi; jmp dword ptr [esi - 0x7d]; 
0x00188a6d: sbb esp, esi; call eax; 
0x0013c89b: scasb al, byte ptr es:[edi]; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0016cf05: scasb al, byte ptr es:[edi]; add al, byte ptr [eax]; and al, 0x9b; stc; call esp; 
0x0016cf15: scasb al, byte ptr es:[edi]; add al, byte ptr [eax]; mov ah, 0x9b; stc; jmp dword ptr [eax]; 
0x00148f6e: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x0018a0ed: scasb al, byte ptr es:[edi]; add dword ptr [eax], eax; jo 0x18a0db; hlt; call dword ptr [eax]; 
0x000eef56: scasb al, byte ptr es:[edi]; add eax, dword ptr [eax]; add ebx, 0xb409b; xchg edi, ebx; mov eax, 0x147; call dword ptr gs:[0x10]; 
0x0013d587: scasb al, byte ptr es:[edi]; clc; call 0x129d73; add ebx, 0x2a152; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013c3eb: scasb al, byte ptr es:[edi]; clc; call 0x129d73; add ebx, 0x2b06e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013af47: scasb al, byte ptr es:[edi]; clc; call 0x129d73; add ebx, 0x2c352; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00139f37: scasb al, byte ptr es:[edi]; clc; call 0x129d73; add ebx, 0x2d1a2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00138f67: scasb al, byte ptr es:[edi]; clc; call 0x129d73; add ebx, 0x2dfb2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00137d9b: scasb al, byte ptr es:[edi]; clc; call 0x129d73; add ebx, 0x2eefe; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001368bb: scasb al, byte ptr es:[edi]; clc; call 0x129d73; add ebx, 0x3015e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013548b: scasb al, byte ptr es:[edi]; clc; call 0x129d73; add ebx, 0x3130e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191ea5: scasb al, byte ptr es:[edi]; cli; cmc; jmp dword ptr [edx]; 
0x00174396: scasb al, byte ptr es:[edi]; in al, dx; jmp dword ptr [edx]; 
0x0016a391: scasb al, byte ptr es:[edi]; int1; jmp dword ptr [eax]; 
0x0016a381: scasb al, byte ptr es:[edi]; int1; jmp eax; 
0x00003086: scasb al, byte ptr es:[edi]; mov ah, byte ptr [edx - 0x3e]; mov esi, 0x614a3e5c; call dword ptr [ecx]; 
0x0007b79e: scasb al, byte ptr es:[edi]; or al, 0xfd; dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x0016ffae: scasb al, byte ptr es:[edi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0017480d: scasb al, byte ptr es:[edi]; or ebp, ebp; jmp dword ptr [edx]; 
0x0017b499: scasb al, byte ptr es:[edi]; outsb dx, byte ptr [esi]; out dx, eax; jmp dword ptr [edx]; 
0x00184a91: scasb al, byte ptr es:[edi]; popfd; int1; jmp dword ptr [edx]; 
0x000b81ca: scasb al, byte ptr es:[edi]; push cs; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0002db5b: scasb al, byte ptr es:[edi]; push esp; and al, 8; add esp, 0x10; pop ebx; ret; 
0x00126c48: scasb al, byte ptr es:[edi]; ret; 
0x0017af38: scasb al, byte ptr es:[edi]; stc; out dx, eax; call dword ptr [eax]; 
0x00002fba: scasb al, byte ptr es:[edi]; sub ebx, dword ptr [esp + eax*2]; nop; ret 0x5bdb; 
0x0016cf1d: scasd eax, dword ptr es:[edi]; add al, byte ptr [eax]; adc al, 0x9c; stc; call dword ptr [eax - 0x51]; 
0x0013c67f: scasd eax, dword ptr es:[edi]; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013c7ec: scasd eax, dword ptr es:[edi]; add al, byte ptr [eax]; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0016cf2d: scasd eax, dword ptr es:[edi]; add al, byte ptr [eax]; in al, 0x9d; stc; call esp; 
0x0016851d: scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; adc al, 0xaf; in al, dx; jmp eax; 
0x000fd045: scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebx - 0xbf75], cl; jmp dword ptr [ebp - 0x75]; 
0x00168525: scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; and al, 0xaf; in al, dx; call dword ptr [eax]; 
0x0018a1d9: scasd eax, dword ptr es:[edi]; add dword ptr [eax], eax; mov ah, 0xe9; hlt; call dword ptr [eax + 6]; 
0x0018a16d: scasd eax, dword ptr es:[edi]; add dword ptr [eax], eax; sar byte ptr [esi], 0xfa; call dword ptr [eax]; 
0x00167a21: scasd eax, dword ptr es:[edi]; cld; call dword ptr [eax]; 
0x00167a1d: scasd eax, dword ptr es:[edi]; cld; inc dword ptr [edi]; scasd eax, dword ptr es:[edi]; cld; call dword ptr [eax]; 
0x0018c3ad: scasd eax, dword ptr es:[edi]; cmc; call dword ptr [ebx]; 
0x000ef447: scasd eax, dword ptr es:[edi]; cmp ecx, dword ptr [ebx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00168529: scasd eax, dword ptr es:[edi]; in al, dx; call dword ptr [eax]; 
0x00168549: scasd eax, dword ptr es:[edi]; in al, dx; call eax; 
0x00168559: scasd eax, dword ptr es:[edi]; in al, dx; jmp dword ptr [eax]; 
0x00168521: scasd eax, dword ptr es:[edi]; in al, dx; jmp eax; 
0x00168519: scasd eax, dword ptr es:[edi]; in al, dx; push dword ptr [eax + 0x140000af]; scasd eax, dword ptr es:[edi]; in al, dx; jmp eax; 
0x0016a3b1: scasd eax, dword ptr es:[edi]; int1; ljmp ptr [ecx + ebp*2 - 0x4f8bffff]; int1; call esp; 
0x00109a95: scasd eax, dword ptr es:[edi]; mov dword ptr [esp], eax; call 0x126c80; mov dword ptr [esp], esi; call edi; 
0x0017c315: scasd eax, dword ptr es:[edi]; out dx, eax; jmp dword ptr [ebx]; 
0x000bafdc: scasd eax, dword ptr es:[edi]; pop esi; nop; ret; 
0x0003edf1: scasd eax, dword ptr es:[edi]; push cs; add byte ptr [ecx + 0x164200c3], al; add byte ptr [ebx - 0x780d76d0], cl; sar dword ptr [eax + 0x25], cl; call dword ptr gs:[0x10]; 
0x000a7b44: scasd eax, dword ptr es:[edi]; ret 0x90c3; 
0x0006d935: scasd eax, dword ptr es:[edi]; ret 0xc289; 
0x000979d4: scasd eax, dword ptr es:[edi]; ret 0xedc1; 
0x0002f7d0: scasd eax, dword ptr es:[edi]; sbb eax, eax; neg eax; pop esi; pop edi; ret; 
0x000fb850: setae al; movzx eax, al; ret; 
0x000f36ff: setbe al; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0011f9de: sete al; add esp, 0x18; movzx eax, al; pop ebx; ret; 
0x000ef0a2: sete al; add esp, 0x1c; movzx eax, al; sub eax, 1; ret; 
0x001140b9: sete al; add esp, 0x1c; ret; 
0x000d84af: sete al; add esp, 0x28; movzx eax, al; pop ebx; ret; 
0x0011e5da: sete al; add esp, 0x28; pop esi; ret; 
0x000ef0e2: sete al; add esp, 0x2c; movzx eax, al; sub eax, 1; ret; 
0x000e0915: sete al; add esp, 0x58; movzx eax, al; pop ebx; ret; 
0x000bd62a: sete al; add esp, 8; movzx eax, al; ret; 
0x0011ea8f: sete al; mov esi, dword ptr [esp + 0x14]; movzx eax, al; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0012529c: sete al; movzx eax, al; add esp, 0x18; pop esi; ret; 
0x000b9b6a: sete al; movzx eax, al; lea eax, dword ptr [eax + eax - 1]; ret; 
0x0011410f: sete al; movzx eax, al; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00069ff7: sete al; movzx eax, al; ret; 
0x000710c0: sete al; movzx eax, al; sub eax, 1; add esp, 0x18; pop esi; ret; 
0x000c5ce6: sete al; movzx eax, al; sub eax, 1; pop esi; ret; 
0x0002704a: sete al; ret; 
0x000e843e: sete al; sub eax, 1; add esp, 0x24; pop ebx; pop esi; ret; 
0x00054e41: sete dl; mov eax, edx; add esp, 0x7c; ret; 
0x0011eee1: sete dl; mov eax, edx; mov esi, dword ptr [esp + 0x34]; mov edi, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x000a752e: setg al; movzx eax, al; lea eax, dword ptr [eax + eax - 1]; pop esi; pop edi; ret; 
0x000a7263: setle al; movzx eax, al; lea eax, dword ptr [eax + eax - 1]; pop esi; pop edi; ret; 
0x00114e79: setne al; add esp, 0x1c; movzx eax, al; ret; 
0x000ca2c3: setne al; add esp, 0x40; pop esi; pop edi; pop ebp; ret 8; 
0x000ed9ef: setne al; add esp, 0xc; movzx eax, al; ret; 
0x0011e9f0: setne al; mov dword ptr [esi], eax; add esp, 0x28; mov eax, 1; pop esi; ret; 
0x000d827e: setne al; mov edi, dword ptr [esp + 0x34]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x000e9dc3: setne al; movzx eax, al; add esp, 0x18; pop ebx; ret; 
0x00113bbd: setne al; movzx eax, al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0002eb7c: setne al; movzx eax, al; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000fb7e4: setne al; movzx eax, al; pop ebx; ret; 
0x0002e89a: setne al; movzx eax, al; ret; 
0x000c6af0: setne dl; lea edx, dword ptr [edx + edx*8 + 5]; mov eax, edx; pop ebx; pop esi; ret; 
0x00114e48: setne dl; mov eax, edx; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0013d586: sfence; call 0x129d73; add ebx, 0x2a152; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013c3ea: sfence; call 0x129d73; add ebx, 0x2b06e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013af46: sfence; call 0x129d73; add ebx, 0x2c352; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00139f36: sfence; call 0x129d73; add ebx, 0x2d1a2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00138f66: sfence; call 0x129d73; add ebx, 0x2dfb2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00137d9a: sfence; call 0x129d73; add ebx, 0x2eefe; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001368ba: sfence; call 0x129d73; add ebx, 0x3015e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013548a: sfence; call 0x129d73; add ebx, 0x3130e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001667b8: shl bh, cl; cld; jmp dword ptr [edx - 0x18]; 
0x00166958: shl bl, 1; cld; jmp dword ptr [eax - 0x1c]; 
0x0010505b: shl byte ptr [0xffffff], 1; ret; 
0x00083fb6: shl byte ptr [eax], 0x5f; pop esi; ret; 
0x000479a9: shl byte ptr [eax], 1; add byte ptr [eax], al; mov dword ptr [esp], edx; call eax; 
0x000ef7b3: shl byte ptr [ebp - 0x3e7efffd], 0x3d; cmp byte ptr [ebx], cl; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000f0b26: shl byte ptr [ebx + ecx], 1; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0002e8e9: shl byte ptr [ecx], 1; add al, 0xb2; xor eax, eax; pop esi; ret; 
0x00076aa2: shl byte ptr [ecx], 1; ret 0x5403; 
0x0010b14d: shl byte ptr [ecx], 1; ret 0xe281; 
0x0016a33c: shl byte ptr [edi + 1], 0; inc esp; lodsb al, byte ptr [esi]; int1; jmp eax; 
0x000b4079: shl byte ptr [edx], 0x83; ret 0x8304; 
0x00134592: shl byte ptr [edx], 1; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001671a4: shl byte ptr [edx], 1; std; jmp dword ptr [eax + 0x23]; 
0x00133223: shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x001301f1: shl byte ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00095746: shl byte ptr [esi + 0xf], 1; xlatb; ret 0xc085; 
0x001310cc: shl byte ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0010b3f0: shl byte ptr [esi - 0x7d], cl; std; adc byte ptr [edi], cl; xchg eax, esp; ret 0xd589; 
0x00110f04: shl byte ptr [esi - 0x7f], cl; dec byte ptr [eax]; add ecx, dword ptr [edi]; xchg eax, ebp; ret 0xd021; 
0x001671c0: shl byte ptr [esi], 0xfd; call dword ptr [eax + 0x27]; 
0x001671c0: shl byte ptr [esi], 0xfd; call dword ptr [eax + 0x27]; std; jmp eax; 
0x00055dfc: shl ch, 0; add byte ptr [ecx - 0x7cf57416], cl; ret 0x8d04; 
0x0013425a: shl cl, cl; cld; jmp dword ptr [esi - 0x70]; 
0x00186430: shl dh, 0xf2; jmp dword ptr [edx]; 
0x0019370f: shl dword ptr [0xd1cfff6], -0xe; and al, 0xf6; jmp dword ptr [edx]; 
0x0014f860: shl dword ptr [eax + eax], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret 0x24; 
0x0008de3d: shl dword ptr [eax + ecx*8 + 0xc03000c], -0x67; jmp ecx; 
0x0008d331: shl dword ptr [eax], -0x2d; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0017a045: shl dword ptr [eax], cl; out dx, eax; jmp dword ptr [edx]; 
0x0002de84: shl dword ptr [ebp - 0x5d], 0x68; add byte ptr [eax], al; add byte ptr [ecx + 0x24548bc7], cl; or al, 0x87; fistp qword ptr [eax + 0x10e]; call dword ptr gs:[0x10]; 
0x000df592: shl dword ptr [ebx + 0x3a], 0xc; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef292: shl dword ptr [ebx + 0x3d], 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000c5492: shl dword ptr [ebx - 0x25], 0xd; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000e8492: shl dword ptr [ebx - 0x55], 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000b7dce: shl dword ptr [edi], -0x4e; push cs; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00130895: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x00131256: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3273; 
0x00130880: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x0013123c: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x4c73; 
0x0013086b: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x00130856: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x00131222: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6673; 
0x00130922: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0013117c: shl dword ptr [esi + 0xf], 1; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00095385: shl dword ptr [esi + 0xf], 1; xlatb; ret 0xc085; 
0x0013102c: shl dword ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0002c879: shl dword ptr [esi - 0x3fce0002], cl; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00134291: shl dword ptr [esi], 1; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00033885: shl eax, 0xa; and edx, 0x3ff; xor eax, edx; mov dword ptr [ecx], esi; pop esi; ret; 
0x000c5c99: shl eax, 2; mov dword ptr [esp], eax; call 0x16ee0; add esp, 0x18; pop ebx; ret; 
0x00110175: shl eax, 4; add eax, 8; ret; 
0x0002e8e6: shl eax, cl; not eax; and dword ptr [edx + esi*4], eax; xor eax, eax; pop esi; ret; 
0x0002e8c6: shl eax, cl; or dword ptr [edx + esi*4], eax; xor eax, eax; pop esi; ret; 
0x0002fdcf: shl ebx, cl; mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x001050aa: shl ecx, 0x18; or edx, ecx; bswap edx; mov dword ptr [eax], edx; pop esi; ret 4; 
0x000f0d9c: shl edx, 0x18; or eax, edx; add esp, 0x7c; ret; 
0x000ce098: shl edx, cl; or dword ptr [eax + 0x50], edx; xor eax, eax; pop esi; ret; 
0x000eeebb: shl esi, 0xc; or edx, ecx; or eax, esi; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x001103ed: shl esi, 4; lea eax, dword ptr [edx + esi + 8]; pop esi; ret; 
0x00166968: shr ah, cl; cld; jmp dword ptr [edx - 0x13]; 
0x0008e94f: shr al, 0x22; mov ah, 9; add byte ptr [ecx + 0xcbe5bc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000948ef: shr al, 0x82; push esp; or dword ptr [eax], eax; add ecx, 0xc608f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00091508: shr al, cl; imul ecx, dword ptr [eax - 0x3e7efff7], 0xc9376; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00094808: shr al, cl; imul edx, dword ptr [ebp + 9], 0xf6c18100; pushal; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008e7f6: shr al, cl; jnp 0x8e7af; or dword ptr [eax], eax; add ecx, 0xcbf34; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000914e4: shr al, cl; lea ecx, dword ptr [eax - 0x3e7efff7]; lcall 0x910c:0x3000c93; jmp ecx; 
0x000947e4: shr al, cl; lea edx, dword ptr [ebp + 9]; add byte ptr [ecx + 0xc611ac1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0008d1eb: shr al, cl; xchg bl, cl; or dword ptr [eax], eax; add ecx, 0xcd3df; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0007a7a6: shr bl, 0x9f; mov esi, dword ptr [esp + 0x1c]; mov dword ptr [esp], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 8], esi; call eax; 
0x00129979: shr bl, 0xf2; lea esi, dword ptr [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x00166a14: shr bl, 0xfc; call dword ptr [eax - 0x14]; 
0x00166a14: shr bl, 0xfc; call dword ptr [eax - 0x14]; cld; jmp eax; 
0x0016d3c0: shr bl, 1; stc; call eax; 
0x001722ad: shr bl, cl; call dword ptr [edx]; 
0x0017227d: shr bl, cl; jmp dword ptr [esi]; 
0x000e9639: shr bl, cl; ret 0x748d; 
0x00169944: shr byte ptr [0xb3e40001], 0xf0; jmp eax; 
0x00189fc0: shr byte ptr [ebp - 0x18f3ffff], 0xf4; call esi; 
0x0016c3c4: shr byte ptr [ecx + 2], 0; push esp; jnp 0x16c3c3; call esp; 
0x0006d6d8: shr byte ptr [ecx + ecx*4], 0x44; and al, 4; call dword ptr [ebp + 0x18]; 
0x0006dcbf: shr byte ptr [ecx + ecx*4], 0x44; and al, 4; call dword ptr [ecx + 0x18]; 
0x0006ccbf: shr byte ptr [ecx + ecx*4], 0x44; and al, 4; call dword ptr [edx + 4]; 
0x0017a080: shr byte ptr [ecx - 0x6ae60000], 1; out dx, eax; call dword ptr [eax]; 
0x000a5421: shr byte ptr [ecx], 1; ret 0x48b; 
0x0002e1d2: shr byte ptr [ecx], cl; ret 0x8965; 
0x0016e4ec: shr byte ptr [edi], 3; add byte ptr [edi + ecx*8 - 5], al; jmp esp; 
0x000addf0: shr cl, 0x76; fdivr st(7); jmp dword ptr [esi - 0x70]; 
0x000ec980: shr cl, 1; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x0011dbf1: shr cl, cl; ret 0xfffe; 
0x00029fb0: shr cl, cl; stc; idiv bh; jmp dword ptr [esi - 0x70]; 
0x001772ae: shr dh, 1; jmp dword ptr [edx]; 
0x0017730e: shr dh, cl; jmp dword ptr [edx]; 
0x00168b59: shr dh, cl; jmp esp; 
0x0016fa35: shr dl, 1; call dword ptr [eax]; 
0x000ef588: shr dword ptr [ebp + 0x3a], 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00094898: shr dword ptr [ebp + 0x60], 0xc; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000eb288: shr dword ptr [ebp + 0x7d], 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eaec9: shr dword ptr [ecx + eax*4], 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000a8666: shr dword ptr [ecx - 0x2e], 1; adc byte ptr [esi], cl; add byte ptr [eax], al; pop esi; add eax, edx; ret; 
0x0008e988: shr dword ptr [ecx], -0x42; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ef486: shr dword ptr [edi + 0x3b], 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000eb186: shr dword ptr [edi + 0x7e], 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00026a86: shr dword ptr [edi - 0x3b], 0x17; add byte ptr [ebx - 0x74fbdbac], cl; sub dword ptr [eax + 0x65fffffe], 0x448b008b; nop; inc eax; ret; 
0x000a8486: shr dword ptr [edi - 0x55], 0xf; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0008df22: shr dword ptr [edi], -0x39; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000a84c6: shr dword ptr [edi], -0x55; str word ptr [ebx - 0xf777]; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000fefc6: shr dword ptr [edi], 0x40; or al, byte ptr [eax]; mov eax, dword ptr [ecx - 0x14]; mov eax, dword ptr gs:[eax]; ret; 
0x000b4629: shr dword ptr [edx - 0x77cfffe], cl; push dword ptr [ebx + ebp - 0x77]; ret 0xe283; 
0x0010510d: shr eax, 0x10; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x001050fc: shr eax, 0x18; ret; 
0x0002d24b: shr eax, 0x1f; ret; 
0x00031608: shr eax, 1; imul eax, dword ptr [esp + 0x158]; add esi, eax; mov dword ptr [esp], esi; call edi; 
0x001103c4: shr eax, 1; ret; 
0x0002f768: shr eax, 2; lea eax, dword ptr [eax + eax*8 + 6]; call 0x2f730; jmp eax; 
0x0010359e: shr eax, 5; add esp, 0xc; ret; 
0x00091598: shr ebp, -0x6e; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000eb099: shr ebp, 0xc; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x00138161: shr ebp, 2; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00172309: shr ebx, cl; call dword ptr [edx]; 
0x0017286e: shr ebx, cl; jmp dword ptr [edx]; 
0x001722d9: shr ebx, cl; jmp dword ptr [esi]; 
0x0002fe2f: shr ebx, cl; mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x000e6882: shr ecx, 9; cmp edx, -1; cmovne eax, ecx; add esp, 0x2c; ret; 
0x0008e842: shr edi, -0x42; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0017bd18: shr edi, 1; out dx, eax; call dword ptr [eax]; 
0x00168d99: shr edi, cl; push dword ptr [ebx - 0x2bdc0000]; out dx, eax; call eax; 
0x0002d23f: shr edx, 0x1f; or edx, eax; mov eax, 0x7ff00000; sub eax, edx; shr eax, 0x1f; ret; 
0x0002d799: shr edx, 0x1f; or edx, eax; mov eax, 0xfffe; sub eax, edx; sar eax, 0x10; ret; 
0x001200fa: shr edx, 3; jmp eax; 
0x0010fd87: shr edx, 3; mov eax, 2; sub edx, 1; mov byte ptr [ecx + 1], dl; ret; 
0x0002e894: shr edx, 5; test dword ptr [ecx + edx*4], eax; setne al; movzx eax, al; ret; 
0x0010510a: shr edx, 8; shr eax, 0x10; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0017739e: shr esi, 1; jmp dword ptr [edx]; 
0x0002e8c3: shr esi, 5; shl eax, cl; or dword ptr [edx + esi*4], eax; xor eax, eax; pop esi; ret; 
0x00168f00: shr esp, cl; out dx, eax; push dword ptr [ebx + ebp*8 - 0x131d0000]; out dx, eax; jmp esp; 
0x00170852: sidt ptr [edx]; ret; 
0x0002bf85: sldt word ptr [eax]; add al, ch; ret 0xfffa; 
0x0014a5ba: sldt word ptr [eax]; add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000c6a9b: sldt word ptr [eax]; add byte ptr [edi + ebx*2 - 0x77], dh; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00016fe2: sldt word ptr [eax]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000e8a3e: sldt word ptr [eax]; add esp, 0x18; pop ebx; ret; 
0x00023992: sldt word ptr [eax]; mov dword ptr [esp], eax; call 0xec0b0; add esp, 0x18; pop ebx; ret; 
0x001529bd: sldt word ptr [eax]; mov esp, 0xbf00000f; sldt word ptr [eax]; ret 0xf; 
0x000eee44: sldt word ptr [eax]; or eax, esi; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x001529c5: sldt word ptr [eax]; ret 0xf; 
0x000231ae: sldt word ptr [eax]; ret; 
0x0001ba7b: sldt word ptr [eax]; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000ab3bb: sldt word ptr [ebx - 0x72feef82]; mov byte ptr [edi + eax], ch; add byte ptr [ecx + 0xf14247c], cl; sahf; ret 0xd129; 
0x000e88ae: sldt word ptr [ebx]; push esp; and al, 0x2c; mov eax, edx; add esp, 0x3c; ret; 
0x0002ebb3: sldt word ptr [ecx + 0x17443fc1]; add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp - 0x39]; 
0x0002e2dd: sldt word ptr [ecx + 0x174d15c3]; add byte ptr [edi + 0xb3b8d3], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002e1ed: sldt word ptr [ecx + 0x174e05c3]; add byte ptr [edi + 0xb0b8d3], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000eeffd: stc; aas; or eax, dword ptr [eax]; xchg ebx, edx; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0017ebb9: stc; add byte ptr [eax], al; xchg eax, esp; aas; sti; jmp esp; 
0x0007d051: stc; add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x00131fdd: stc; add byte ptr [edi], cl; test ah, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x001302a9: stc; add byte ptr [edi], cl; test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x0006a0f5: stc; add cl, byte ptr [ecx + 0x5e057432]; ret; 
0x001202f7: stc; add dword ptr [edi], ecx; test cl, bl; add byte ptr [eax], al; add byte ptr [ebx - 0xf755], cl; jmp dword ptr [ebp - 0x39]; 
0x0003f568: stc; and al, 0x75; fstp dword ptr [ebx + 0x5e]; ret; 
0x0016cec2: stc; call dword ptr [eax - 0x1bfffd54]; xchg eax, edx; stc; jmp eax; 
0x0016d46a: stc; call dword ptr [eax - 0x32]; 
0x0016d202: stc; call dword ptr [eax - 0x41]; 
0x0016d182: stc; call dword ptr [eax - 0x44]; 
0x0016d0ba: stc; call dword ptr [eax - 0x48]; 
0x0016cfda: stc; call dword ptr [eax - 0x4d]; 
0x0016cf22: stc; call dword ptr [eax - 0x51]; 
0x0016ce3a: stc; call dword ptr [eax - 0x5b]; 
0x0016cdba: stc; call dword ptr [eax - 0x5c]; 
0x0016cda2: stc; call dword ptr [eax - 0x5d]; 
0x0016cd3a: stc; call dword ptr [eax - 0x5f]; 
0x0016ca92: stc; call dword ptr [eax - 0x6f]; 
0x0016cd92: stc; call dword ptr [eax]; 
0x001945da: stc; call dword ptr [ebx]; 
0x0016cc62: stc; call eax; 
0x0016ca82: stc; call esp; 
0x00166a35: stc; cld; call edx; 
0x00166a35: stc; cld; call edx; stc; cld; jmp dword ptr [edx - 6]; 
0x00166a79: stc; cld; dec dword ptr [esi - 6]; cld; call esp; 
0x00166ac9: stc; cld; inc dword ptr [eax - 0x7f000306]; clc; cld; call dword ptr [eax]; 
0x00166a39: stc; cld; jmp dword ptr [edx - 6]; 
0x00166a25: stc; cld; jmp dword ptr [edx]; 
0x00191bc2: stc; cmc; jmp dword ptr [edx]; 
0x0016cf2a: stc; dec dword ptr [eax - 0x1bfffd51]; popfd; stc; call esp; 
0x0016d2d2: stc; dec dword ptr [eax]; ret; 
0x0011b434: stc; dec dword ptr [ecx + 0x68b0846]; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x0016d2e2: stc; dec dword ptr [esp + eax*8 + 2]; add byte ptr [ebp + edx*8 - 7], dh; jmp dword ptr [eax - 0x3c]; 
0x0016d272: stc; dec eax; rol dword ptr [edx], 0; mov ah, 0xcf; stc; jmp eax; 
0x00029fb2: stc; idiv bh; jmp dword ptr [esi - 0x70]; 
0x0016ceda: stc; inc dword ptr [eax - 0x3bfffd53]; xchg eax, esp; stc; call eax; 
0x0016cc12: stc; inc dword ptr [eax - 0x67]; add al, byte ptr [eax]; and al, 0x45; stc; jmp dword ptr [eax - 0x67]; 
0x0007bd0a: stc; inc dword ptr [ebp + 0x74c789c0]; ret 0xf685; 
0x0016d382: stc; inc dword ptr [ecx + ecx*8 + 2]; add byte ptr [esi - 0x17], cl; stc; jmp esp; 
0x0016d0e2: stc; inc dword ptr [ecx + edi*4]; add al, byte ptr [eax]; mov ah, 0xb4; stc; jmp dword ptr [eax]; 
0x0016d2aa: stc; inc eax; ret 2; 
0x0016d3da: stc; jmp dword ptr [eax - 0x36]; 
0x0016d332: stc; jmp dword ptr [eax - 0x3b]; 
0x0016d2ea: stc; jmp dword ptr [eax - 0x3c]; 
0x0016d22a: stc; jmp dword ptr [eax - 0x40]; 
0x0016d1da: stc; jmp dword ptr [eax - 0x42]; 
0x0016cfb2: stc; jmp dword ptr [eax - 0x4e]; 
0x0016cc1a: stc; jmp dword ptr [eax - 0x67]; 
0x0016cc0a: stc; jmp dword ptr [eax]; 
0x001942da: stc; jmp dword ptr [edi]; 
0x001860a3: stc; jmp dword ptr [edx]; 
0x000e8bf2: stc; jmp dword ptr [esi - 0x39]; 
0x0016cc3a: stc; jmp eax; 
0x0016d2b2: stc; jmp esp; 
0x0016ca7a: stc; ljmp ptr [eax - 0x7bfffd70]; pop es; stc; call esp; 
0x0016cd32: stc; ljmp ptr [ecx]; add al, byte ptr [eax]; xor al, 0x66; stc; call dword ptr [eax - 0x5f]; 
0x0016d092: stc; ljmp ptr [edi + esi*4 + 2]; add byte ptr [ecx + esi*4 - 7], ah; jmp dword ptr [eax]; 
0x0016cc5a: stc; ljmp ptr [edx + ebx*4 + 0x47940002]; stc; call eax; 
0x000ed340: stc; mov edx, eax; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x00133204: stc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132bf4: stc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0012fd56: stc; or al, 0xf; xchg eax, edx; ret 0xb60f; 
0x0017af39: stc; out dx, eax; call dword ptr [eax]; 
0x0010b939: stc; pcmpeqd mm3, qword ptr [ebx + 1]; ret 0x28b; 
0x00147912: stc; pop edi; ret; 
0x0007e53e: stc; pop esi; ret; 
0x0002d210: stc; push ds; and eax, ecx; ret; 
0x0002d4dc: stc; push ds; not eax; and eax, ecx; ret; 
0x0016d432: stc; push dword ptr [eax + 0x140002ce]; stc; call esp; 
0x0016cfca: stc; push dword ptr [eax + 0x5a0002b3]; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; jmp dword ptr [eax]; 
0x0016d192: stc; push dword ptr [eax - 0x43]; add al, byte ptr [eax]; push -0x3a; stc; jmp eax; 
0x0016d28a: stc; push dword ptr [eax]; ret 2; 
0x0016d222: stc; push dword ptr [eax]; rol byte ptr [edx], 0; xor al, 0xcc; stc; jmp dword ptr [eax - 0x40]; 
0x0002fe71: stc; push dword ptr [ebp - 0xd]; mov eax, edx; pop esi; pop edi; ret; 
0x0016d42a: stc; push dword ptr [ecx*8 - 0xd9bfffe]; stc; push dword ptr [eax + 0x140002ce]; stc; call esp; 
0x0016d0b2: stc; push eax; mov bh, 2; add ah, dh; mov dl, 0xf9; call dword ptr [eax - 0x48]; 
0x0016d1d2: stc; push eax; mov esi, 0xc8fa0002; stc; jmp dword ptr [eax - 0x42]; 
0x000f3e13: stc; ret 0; 
0x000a8544: stc; ret 0x10; 
0x0005aaf3: stc; ret; 
0x001786f5: stc; salc; out dx, al; jmp dword ptr [edx]; 
0x00146ae1: stc; sub al, 0x74; sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x000bafd9: stc; sub al, 0x75; scasd eax, dword ptr es:[edi]; pop esi; nop; ret; 
0x0002cce2: stc; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000ddc49: stc; xchg ebx, edx; mov eax, 0x6a; call dword ptr gs:[0x10]; 
0x000dddc9: stc; xchg ebx, edx; mov eax, 0x6b; call dword ptr gs:[0x10]; 
0x000ddd09: stc; xchg ebx, edx; mov eax, 0x6c; call dword ptr gs:[0x10]; 
0x00144346: std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x0013f242: std; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0010b3f3: std; adc byte ptr [edi], cl; xchg eax, esp; ret 0xd589; 
0x001321ea: std; add al, 0x76; ret; 
0x001490f9: std; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x0016b0cd: std; add dword ptr [eax], eax; adc al, 0x19; cmc; call dword ptr [eax]; 
0x0014724f: std; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x0018efc5: std; add dword ptr [eax], eax; clc; sub esi, esi; call dword ptr [edi + 1]; 
0x0013fd3d: std; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0016700a: std; call dword ptr [eax + 0x1a]; 
0x0016700a: std; call dword ptr [eax + 0x1a]; std; jmp eax; 
0x00166fd2: std; call dword ptr [eax + 0x1e]; 
0x001671c2: std; call dword ptr [eax + 0x27]; 
0x001671c2: std; call dword ptr [eax + 0x27]; std; jmp eax; 
0x001670f2: std; call dword ptr [eax + 0x2c]; 
0x0016735e: std; call dword ptr [eax + 0x2e]; 
0x0016735e: std; call dword ptr [eax + 0x2e]; std; call dword ptr [eax]; 
0x00167372: std; call dword ptr [eax + 0x33]; 
0x00167372: std; call dword ptr [eax + 0x33]; std; jmp eax; 
0x0016735a: std; call dword ptr [eax + 0x3b]; 
0x0016735a: std; call dword ptr [eax + 0x3b]; std; call dword ptr [eax + 0x2e]; std; call dword ptr [eax]; 
0x00167452: std; call dword ptr [eax + 0x3c]; 
0x001672b2: std; call dword ptr [eax + 0x3cfffd3a]; cmp edi, ebp; dec dword ptr [ebx + edi + 0x3a76fffd]; std; jmp esi; 
0x001675ee: std; call dword ptr [eax + 0x41]; 
0x001675ee: std; call dword ptr [eax + 0x41]; std; jmp eax; 
0x001675b6: std; call dword ptr [eax + 0x4c]; 
0x001675b6: std; call dword ptr [eax + 0x4c]; std; call dword ptr [eax]; 
0x001677ce: std; call dword ptr [eax + 0x59]; 
0x001677ce: std; call dword ptr [eax + 0x59]; std; jmp eax; 
0x0016778e: std; call dword ptr [eax + 0x5c]; 
0x0016779a: std; call dword ptr [eax + 0x5d]; 
0x0016779a: std; call dword ptr [eax + 0x5d]; std; jmp dword ptr [eax + 0x50]; 
0x00166e12: std; call dword ptr [eax + 0x60fffd0c]; or eax, 0xe30fffd; std; jmp eax; 
0x00166dde: std; call dword ptr [eax + 0xc]; 
0x00166f0e: std; call dword ptr [eax + 0xf]; 
0x00166f0e: std; call dword ptr [eax + 0xf]; std; call eax; 
0x00166e52: std; call dword ptr [eax + 7]; 
0x00166e52: std; call dword ptr [eax + 7]; std; jmp eax; 
0x0016750a: std; call dword ptr [eax - 0x6f0002b5]; dec ecx; std; jmp dword ptr [eax]; 
0x00166d4a: std; call dword ptr [eax - 0x7f0002f4]; or bh, ch; jmp dword ptr [eax]; 
0x00166e0e: std; call dword ptr [eax]; 
0x0016719e: std; call dword ptr [eax]; and ch, bh; call eax; 
0x0016719e: std; call dword ptr [eax]; and ch, bh; call eax; and bh, ch; jmp dword ptr [eax + 0x23]; 
0x001675ba: std; call dword ptr [eax]; dec ebp; std; jmp dword ptr [eax]; 
0x00167472: std; call dword ptr [eax]; dec edx; std; jmp edx; 
0x00166e0e: std; call dword ptr [eax]; paddw mm7, mm7; nop; or al, 0xfd; jmp dword ptr [eax + 0xd]; 
0x00045934: std; call dword ptr [edi - 0x77]; 
0x001670a6: std; call dword ptr [edx + 0x20]; 
0x0016731e: std; call dword ptr [edx + 0x3a]; 
0x0016731e: std; call dword ptr [edx + 0x3a]; std; inc edx; cmp bh, ch; call dword ptr [edx]; 
0x00167626: std; call dword ptr [edx + 0x4f]; 
0x00167626: std; call dword ptr [edx + 0x4f]; std; jmp edx; 
0x00167862: std; call dword ptr [edx + 0x5e]; 
0x0016715e: std; call dword ptr [edx]; 
0x0016741e: std; call dword ptr [edx]; cmp al, 0xfd; jmp dword ptr [edx + 0x3c]; 
0x00167326: std; call dword ptr [edx]; cmp edi, ebp; jmp dword ptr [edx + 0x3b]; 
0x00167766: std; call dword ptr [edx]; pop ebp; std; jmp dword ptr [edx + 0x5d]; 
0x00167262: std; call dword ptr [edx]; std; push dword ptr [edx + 0x2e]; std; call edx; 
0x00166fc2: std; call dword ptr [esi + 0x1e]; 
0x0016734a: std; call dword ptr [esi + 0x3b]; 
0x00167442: std; call dword ptr [esi + 0x3c]; 
0x0016777e: std; call dword ptr [esi + 0x5c]; 
0x0016778a: std; call dword ptr [esi + 0x5d]; 
0x00167206: std; call dword ptr [esi - 0x90002d2]; std; jmp eax; 
0x00166f3e: std; call dword ptr [esi]; 
0x0016780a: std; call dword ptr [esi]; pop edi; std; jmp dword ptr [eax]; 
0x00166df2: std; call eax; 
0x00167392: std; call eax; aaa; std; jmp dword ptr [eax + 0x38]; 
0x00166e32: std; call eax; add bh, ch; jmp dword ptr [eax + 3]; 
0x001671a2: std; call eax; and bh, ch; jmp dword ptr [eax + 0x23]; 
0x001673d6: std; call eax; cmp al, 0xfd; jmp dword ptr [eax]; 
0x0016760e: std; call eax; inc ebp; std; jmp dword ptr [eax + 0x46]; 
0x00166e06: std; call eax; or eax, 0xea0fffd; std; call dword ptr [eax]; 
0x0016704e: std; call eax; pop ds; std; jmp dword ptr [eax]; 
0x00166f56: std; call eax; push ds; std; jmp dword ptr [eax]; 
0x001677ae: std; call eax; push esp; std; jmp dword ptr [eax + 0x55]; 
0x0016702a: std; call edx; 
0x001677e6: std; call edx; pop esi; std; jmp dword ptr [edx]; 
0x00166f46: std; call esi; 
0x001673c6: std; call esi; cmp al, 0xfd; jmp dword ptr [esi]; 
0x0016703e: std; call esi; pop ds; std; jmp dword ptr [esi]; 
0x00166f46: std; call esi; push ds; std; jmp dword ptr [esi]; 
0x00166cfe: std; call esp; 
0x00166c51: std; cld; call dword ptr [ebp + edi*8 - 0x1cb0004]; cld; call esp; 
0x00166bf5: std; cld; call dword ptr [edx - 2]; 
0x00166c81: std; cld; call eax; 
0x00166c95: std; cld; jmp dword ptr [eax]; 
0x00166c41: std; cld; jmp esp; 
0x00166c85: std; cld; push dword ptr [eax - 2]; cld; jmp dword ptr [eax]; 
0x00166c55: std; cld; push dword ptr [esi + edi*8]; cld; call esp; 
0x0018de59: std; cmc; call ecx; 
0x000c384f: std; cmc; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x00166e62: std; dec dword ptr [eax]; adc ch, bh; jmp edx; 
0x0016741a: std; dec dword ptr [eax]; cmp eax, 0x3c12fffd; std; jmp dword ptr [edx + 0x3c]; 
0x0016717a: std; dec dword ptr [ebp + 0x2c06fffd]; std; jmp dword ptr [esi + 0x2c]; 
0x000638c4: std; dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x001676fa: std; dec dword ptr [ebp + ebx*2 + 0x5c86fffd]; std; jmp esi; 
0x000560ff: std; dec dword ptr [ebx + 0x39242454]; ret 0x178b; 
0x001672ba: std; dec dword ptr [ebx + edi + 0x3a76fffd]; std; jmp esi; 
0x0010d8fd: std; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x00167776: std; dec dword ptr [ebx*2 + 0x5d5cfffd]; std; call dword ptr [esi + 0x5c]; 
0x000d90c5: std; dec dword ptr [ecx - 0x783e7606]; fistp qword ptr [eax + 0xd2]; call dword ptr gs:[0x10]; 
0x001674fa: std; dec dword ptr [edx + 0x4b]; std; call eax; 
0x00167226: std; dec dword ptr [edx - 0x150002d2]; std; call esp; 
0x0017b199: std; dec edi; out dx, eax; jmp dword ptr [edx]; 
0x00166cf6: std; dec esi; or edi, ebp; lcall ptr [esi + 0xc]; std; call esp; 
0x0016703a: std; dec esp; and ch, bh; call esi; 
0x0016727a: std; dec esp; std; push dword ptr [esi + 0x6fffd2d]; std; jmp dword ptr [esi + 0x2e]; 
0x000bc7ff: std; fdivr st(7); dec dword ptr [ebx - 0xf775]; jmp dword ptr [ebp - 0x75]; 
0x0002d399: std; fstp st(1); ret; 
0x00175121: std; in eax, dx; jmp dword ptr [eax + 1]; 
0x00166f0a: std; inc dword ptr [eax + 0x11]; std; call dword ptr [eax + 0xf]; 
0x00166f0a: std; inc dword ptr [eax + 0x11]; std; call dword ptr [eax + 0xf]; std; call eax; 
0x00166fe6: std; inc dword ptr [eax + 0x15]; std; call eax; 
0x0016738e: std; inc dword ptr [eax + 0x37]; std; call eax; 
0x0016734e: std; inc dword ptr [eax + 0x3a]; std; push dword ptr [eax + 0xfffd3a]; cmp edi, ebp; call dword ptr [eax + 0x3b]; 
0x0016760a: std; inc dword ptr [eax + 0x45]; std; call eax; 
0x001677aa: std; inc dword ptr [eax + 0x54]; std; call eax; 
0x00166dee: std; inc dword ptr [eax + 0xf]; std; call eax; 
0x00166e2e: std; inc dword ptr [eax + 2]; std; call eax; 
0x00166e2e: std; inc dword ptr [eax + 2]; std; call eax; add bh, ch; jmp dword ptr [eax + 3]; 
0x001673d2: std; inc dword ptr [eax - 0x2f0002c4]; cmp al, 0xfd; jmp dword ptr [eax]; 
0x00166f52: std; inc dword ptr [eax - 0x2f0002e2]; push ds; std; jmp dword ptr [eax]; 
0x0016744e: std; inc dword ptr [eax]; cmp al, 0xfd; call dword ptr [eax + 0x3c]; 
0x00167356: std; inc dword ptr [eax]; cmp edi, ebp; call dword ptr [eax + 0x3b]; 
0x00166d46: std; inc dword ptr [eax]; or al, 0xfd; call dword ptr [eax - 0x7f0002f4]; or bh, ch; jmp dword ptr [eax]; 
0x00166cb2: std; inc dword ptr [eax]; or edi, ebp; jmp edx; 
0x00167796: std; inc dword ptr [eax]; pop ebp; std; call dword ptr [eax + 0x5d]; 
0x00166de6: std; inc dword ptr [eax]; push cs; std; jmp eax; 
0x00167292: std; inc dword ptr [eax]; std; jmp dword ptr [eax + 0x2e]; 
0x0016718e: std; inc dword ptr [eax]; sub al, 0xfd; jmp dword ptr [eax + 0x2c]; 
0x0016719a: std; inc dword ptr [eax]; sub eax, 0x2010fffd; std; call eax; 
0x0016737e: std; inc dword ptr [eax]; xor eax, 0x3590fffd; std; jmp dword ptr [eax]; 
0x0011a930: std; inc dword ptr [ebp - 0x2976f040]; add dword ptr [eax], eax; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x75]; 
0x0010b249: std; inc dword ptr [ebp - 0x76ce8740]; int1; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x00167552: std; inc dword ptr [ebx + ecx*2 + 0x4c34fffd]; std; jmp esp; 
0x0007a8c9: std; inc dword ptr [ebx - 0x3fce9f3c]; pop ebx; pop esi; pop edi; ret; 
0x000410c0: std; inc dword ptr [ebx - 0x3fcedf3c]; pop ebx; pop esi; pop edi; ret; 
0x0014b2b4: std; inc dword ptr [ecx + 0x57d3ec3]; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x75]; 
0x001677e2: std; inc dword ptr [edx - 0x2d0002a2]; pop esi; std; jmp dword ptr [edx]; 
0x001670a2: std; inc dword ptr [edx]; and ch, bh; call dword ptr [edx + 0x20]; 
0x0016785e: std; inc dword ptr [edx]; pop esi; std; call dword ptr [edx + 0x5e]; 
0x0016733e: std; inc dword ptr [esi + 0x3a]; std; push dword ptr [esi + 0x6fffd3a]; cmp edi, ebp; call dword ptr [esi + 0x3b]; 
0x001672ca: std; inc dword ptr [esi + 0x70fffd3b]; cmp bh, ch; jmp eax; 
0x00166e5e: std; inc dword ptr [esi + 0x8fffd0f]; adc ch, bh; jmp edx; 
0x001673c2: std; inc dword ptr [esi - 0x290002c4]; cmp al, 0xfd; jmp dword ptr [esi]; 
0x00166f42: std; inc dword ptr [esi - 0x290002e2]; push ds; std; jmp dword ptr [esi]; 
0x0016770a: std; inc dword ptr [esi - 0x7f0002a3]; pop esp; std; jmp eax; 
0x0016743e: std; inc dword ptr [esi]; cmp al, 0xfd; call dword ptr [esi + 0x3c]; 
0x00167346: std; inc dword ptr [esi]; cmp edi, ebp; call dword ptr [esi + 0x3b]; 
0x00167786: std; inc dword ptr [esi]; pop ebp; std; call dword ptr [esi + 0x5d]; 
0x00167282: std; inc dword ptr [esi]; std; jmp dword ptr [esi + 0x2e]; 
0x0016717e: std; inc dword ptr [esi]; sub al, 0xfd; jmp dword ptr [esi + 0x2c]; 
0x0016718a: std; inc dword ptr [esi]; sub eax, 0x2c00fffd; std; jmp dword ptr [eax + 0x2c]; 
0x001675ea: std; inc eax; inc eax; std; call dword ptr [eax + 0x41]; 
0x001677ca: std; inc eax; pop eax; std; call dword ptr [eax + 0x59]; 
0x00167816: std; inc eax; pop esi; std; call dword ptr [eax]; 
0x00166e4e: std; inc eax; push es; std; call dword ptr [eax + 7]; 
0x00167006: std; inc eax; sbb ebp, edi; call dword ptr [eax + 0x1a]; 
0x00167006: std; inc eax; sbb ebp, edi; call dword ptr [eax + 0x1a]; std; jmp eax; 
0x001671be: std; inc eax; std; call dword ptr [eax + 0x27]; 
0x001671be: std; inc eax; std; call dword ptr [eax + 0x27]; std; jmp eax; 
0x0016736e: std; inc eax; xor bh, ch; call dword ptr [eax + 0x33]; 
0x0016736e: std; inc eax; xor bh, ch; call dword ptr [eax + 0x33]; std; jmp eax; 
0x00167322: std; inc edx; cmp bh, ch; call dword ptr [edx]; 
0x00167322: std; inc edx; cmp bh, ch; call dword ptr [edx]; cmp edi, ebp; jmp dword ptr [edx + 0x3b]; 
0x0016746e: std; inc edx; dec ecx; std; call dword ptr [eax]; 
0x00166caa: std; inc edx; or al, 0xfd; push dword ptr [edx + 0xfffd0a]; or edi, ebp; jmp edx; 
0x00167762: std; inc edx; pop esp; std; call dword ptr [edx]; 
0x00167166: std; inc edx; sub al, 0xfd; call dword ptr [edx]; 
0x0016704a: std; inc esi; and ch, bh; call eax; 
0x00167806: std; inc esi; pop esi; std; call dword ptr [esi]; 
0x0016728a: std; inc esi; std; push dword ptr [eax + 0xfffd2d]; std; jmp dword ptr [eax + 0x2e]; 
0x00166f16: std; jmp dword ptr [eax + 0x10]; 
0x00166fee: std; jmp dword ptr [eax + 0x16]; 
0x001671a6: std; jmp dword ptr [eax + 0x23]; 
0x00167192: std; jmp dword ptr [eax + 0x2c]; 
0x00167296: std; jmp dword ptr [eax + 0x2e]; 
0x00167396: std; jmp dword ptr [eax + 0x38]; 
0x00167612: std; jmp dword ptr [eax + 0x46]; 
0x00167532: std; jmp dword ptr [eax + 0x4b]; 
0x001676d2: std; jmp dword ptr [eax + 0x4e]; 
0x001676da: std; jmp dword ptr [eax + 0x4f]; 
0x0016779e: std; jmp dword ptr [eax + 0x50]; 
0x001677b2: std; jmp dword ptr [eax + 0x55]; 
0x00166e16: std; jmp dword ptr [eax + 0xd]; 
0x00166e36: std; jmp dword ptr [eax + 3]; 
0x00166d52: std; jmp dword ptr [eax]; 
0x0007b893: std; jmp dword ptr [ebp - 0x7d]; 
0x0016f856: std; jmp dword ptr [ebp]; 
0x00166fa2: std; jmp dword ptr [edx + 0x1e]; 
0x0016732a: std; jmp dword ptr [edx + 0x3b]; 
0x00167422: std; jmp dword ptr [edx + 0x3c]; 
0x0016775e: std; jmp dword ptr [edx + 0x5c]; 
0x0016776a: std; jmp dword ptr [edx + 0x5d]; 
0x00166e7a: std; jmp dword ptr [edx]; 
0x00167182: std; jmp dword ptr [esi + 0x2c]; 
0x00167286: std; jmp dword ptr [esi + 0x2e]; 
0x0010eb35: std; jmp dword ptr [esi - 0x39]; 
0x00166f4a: std; jmp dword ptr [esi]; 
0x00166dea: std; jmp eax; 
0x00166cb6: std; jmp edx; 
0x00166fbe: std; jmp esi; 
0x00166d86: std; jmp esp; 
0x0018f99d: std; jns 0x18f995; jmp dword ptr [edx]; 
0x00167622: std; lcall ptr [eax + 0x52fffd4e]; dec edi; std; jmp edx; 
0x00167316: std; lcall ptr [eax]; cmp edi, ebp; ljmp ptr [eax + 0x3b]; std; call dword ptr [edx + 0x3a]; 
0x0016f042: std; lcall ptr [eax]; test dword ptr [ecx], eax; add byte ptr [ebx + esi*8], ah; std; jmp eax; 
0x0016777a: std; lcall ptr [ebp + ebx*2 - 3]; call dword ptr [esi + 0x5c]; 
0x001677fa: std; lcall ptr [edi + ebx*2]; std; jmp dword ptr [esi]; 
0x00166dd2: std; lcall ptr [edx + 0x6afffd0c]; or eax, 0xe3afffd; std; call dword ptr [eax + 0xc]; 
0x001674ba: std; lcall ptr [esi + 0x4b]; std; jmp esp; 
0x00166cfa: std; lcall ptr [esi + 0xc]; std; call esp; 
0x001671f6: std; lcall ptr [esi + ebp + 0x2efcfffd]; std; jmp esi; 
0x00166fb2: std; lcall ptr [esi + ebx - 3]; ljmp ptr [esi + ebx + 0x1efcfffd]; std; jmp esi; 
0x000e85af: std; leave; idiv bh; add esp, 0x18; pop ebx; ret; 
0x0016731a: std; ljmp ptr [eax + 0x3b]; std; call dword ptr [edx + 0x3a]; 
0x0016775a: std; ljmp ptr [eax + 0x5d]; std; jmp dword ptr [edx + 0x5c]; 
0x00166f3a: std; ljmp ptr [edi + ebx]; std; call dword ptr [esi]; 
0x001676ba: std; ljmp ptr [edx + 0x4f]; std; jmp dword ptr [eax]; 
0x0015afa4: std; ljmp ptr [edx]; add bh, bh; dec dword ptr [edi]; cld; jmp dword ptr [esi]; 
0x00167222: std; ljmp ptr [edx]; std; dec dword ptr [edx - 0x150002d2]; std; call esp; 
0x00166fb6: std; ljmp ptr [esi + ebx + 0x1efcfffd]; std; jmp esi; 
0x00167436: std; ljmp ptr [esp + edi + 0x3cfcfffd]; std; inc dword ptr [esi]; cmp al, 0xfd; call dword ptr [esi + 0x3c]; 
0x00133208: std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00136493: std; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x00132bf8: std; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0013bfdb: std; movzx eax, byte ptr [eax - 1]; mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0008eaaf: std; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00109173: std; or dword ptr [edi], ecx; inc esi; int 0x80; 
0x0017d2e9: std; out dx, eax; call dword ptr [edx]; 
0x00147942: std; pop edi; ret; 
0x00095a77: std; pop esi; pop edi; pop ebp; ret; 
0x001672ce: std; push dword ptr [eax + 0x3a]; std; jmp eax; 
0x00166e2a: std; push dword ptr [eax + 0x40fffd01]; add bh, ch; call eax; 
0x00166f06: std; push dword ptr [eax + 0x40fffd10]; adc ebp, edi; call dword ptr [eax + 0xf]; 
0x00166fe2: std; push dword ptr [eax + 0x40fffd14]; adc eax, 0x15d0fffd; std; jmp dword ptr [eax + 0x16]; 
0x0016738a: std; push dword ptr [eax + 0x40fffd36]; aaa; std; call eax; 
0x00167606: std; push dword ptr [eax + 0x40fffd44]; inc ebp; std; call eax; 
0x001677a6: std; push dword ptr [eax + 0x40fffd53]; push esp; std; call eax; 
0x001675d2: std; push dword ptr [eax + 0x4b]; std; jmp dword ptr [eax]; 
0x001675aa: std; push dword ptr [eax + 0x4d]; std; call eax; 
0x001675a6: std; push dword ptr [eax + 0x70fffd4c]; dec ebp; std; call eax; 
0x00166dfa: std; push dword ptr [eax + 0xe]; std; jmp dword ptr [eax]; 
0x00167196: std; push dword ptr [eax + 0xfffd2c]; sub eax, 0x2010fffd; std; call eax; 
0x0016728e: std; push dword ptr [eax + 0xfffd2d]; std; jmp dword ptr [eax + 0x2e]; 
0x00167352: std; push dword ptr [eax + 0xfffd3a]; cmp edi, ebp; call dword ptr [eax + 0x3b]; 
0x00167792: std; push dword ptr [eax + 0xfffd5c]; pop ebp; std; call dword ptr [eax + 0x5d]; 
0x00166e5a: std; push dword ptr [eax + 8]; std; inc dword ptr [esi + 0x8fffd0f]; adc ch, bh; jmp edx; 
0x001676ca: std; push dword ptr [eax - 0x1f0002b1]; dec ebp; std; jmp dword ptr [eax + 0x4e]; 
0x001673ce: std; push dword ptr [eax]; cmp al, 0xfd; inc dword ptr [eax - 0x2f0002c4]; cmp al, 0xfd; jmp dword ptr [eax]; 
0x00166de2: std; push dword ptr [eax]; or eax, 0xe00fffd; std; jmp eax; 
0x00166e1a: std; push dword ptr [eax]; push cs; std; jmp eax; 
0x00167002: std; push dword ptr [eax]; sbb ebp, edi; inc eax; sbb ebp, edi; call dword ptr [eax + 0x1a]; 
0x001671ba: std; push dword ptr [eax]; std; inc eax; std; call dword ptr [eax + 0x27]; 
0x0016736a: std; push dword ptr [eax]; xor bh, ch; inc eax; xor bh, ch; call dword ptr [eax + 0x33]; 
0x0016754e: std; push dword ptr [ebp + ecx*2 + 0x4b84fffd]; std; push dword ptr [esp + ecx*2]; std; jmp esp; 
0x0016753e: std; push dword ptr [ebx + ecx*2]; std; jmp esp; 
0x00167162: std; push dword ptr [edx + 0x2c]; std; inc edx; sub al, 0xfd; call dword ptr [edx]; 
0x00167266: std; push dword ptr [edx + 0x2e]; std; call edx; 
0x0016709e: std; push dword ptr [edx + 0x2fffd1f]; and ch, bh; call dword ptr [edx + 0x20]; 
0x00166cae: std; push dword ptr [edx + 0xfffd0a]; or edi, ebp; jmp edx; 
0x00167046: std; push dword ptr [esi + 0x20]; std; inc esi; and ch, bh; call eax; 
0x001672be: std; push dword ptr [esi + 0x3a]; std; jmp esi; 
0x00167186: std; push dword ptr [esi + 0x6fffd2c]; sub eax, 0x2c00fffd; std; jmp dword ptr [eax + 0x2c]; 
0x0016727e: std; push dword ptr [esi + 0x6fffd2d]; std; jmp dword ptr [esi + 0x2e]; 
0x00167342: std; push dword ptr [esi + 0x6fffd3a]; cmp edi, ebp; call dword ptr [esi + 0x3b]; 
0x00167782: std; push dword ptr [esi + 0x6fffd5c]; pop ebp; std; call dword ptr [esi + 0x5d]; 
0x001673be: std; push dword ptr [esi]; cmp al, 0xfd; inc dword ptr [esi - 0x290002c4]; cmp al, 0xfd; jmp dword ptr [esi]; 
0x001672c6: std; push dword ptr [esi]; cmp edi, ebp; inc dword ptr [esi + 0x70fffd3b]; cmp bh, ch; jmp eax; 
0x00167202: std; push dword ptr [esi]; std; call dword ptr [esi - 0x90002d2]; std; jmp eax; 
0x0016772e: std; push dword ptr [esp + ebx*2 - 3]; call esp; 
0x00167556: std; push dword ptr [esp + ecx*2]; std; jmp esp; 
0x00166f1a: std; push eax; adc ch, bh; jmp dword ptr [edx]; 
0x0016744a: std; push esi; cmp al, 0xfd; inc dword ptr [eax]; cmp al, 0xfd; call dword ptr [eax + 0x3c]; 
0x00166fca: std; push esi; push ds; std; jmp eax; 
0x0016720a: std; push esi; std; jmp eax; 
0x000b85f9: std; test eax, 0x7c8b000e; and al, 0xc; xchg edi, ebx; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x000b93f9: std; wait; push cs; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xd1]; call dword ptr gs:[0x10]; 
0x0017801d: std; xlatb; cli; jmp dword ptr [edx]; 
0x00073438: sti; adc al, byte ptr [eax]; mov eax, dword ptr [ecx + 0x96c]; ret; 
0x00132c55: sti; add byte ptr [eax], al; add al, ch; adc eax, 0x81ffff71; ret; 
0x0016b035: sti; add dword ptr [eax], eax; mov ah, 0xf; cmc; call esp; 
0x000024c4: sti; arpl cx, bx; mov ah, 0xc6; ret; 
0x0016df92: sti; call dword ptr [eax + 0x12]; 
0x0016e0d2: sti; call dword ptr [eax + 0x18]; 
0x0016e122: sti; call dword ptr [eax + 0x1a]; 
0x0016e162: sti; call dword ptr [eax + 0x1b]; 
0x0016e4b2: sti; call dword ptr [eax + 0x2d]; 
0x0016e54a: sti; call dword ptr [eax + 0x30]; 
0x0016e5f2: sti; call dword ptr [eax + 0x34]; 
0x0016e34a: sti; call dword ptr [eax + 0x4000323]; test ebx, edi; jmp esp; 
0x0017dc16: sti; call dword ptr [eax + 8]; 
0x0016ddc2: sti; call dword ptr [eax]; 
0x0017f75a: sti; call dword ptr [ecx]; 
0x000fc570: sti; call dword ptr gs:[0x10]; 
0x0016e1b2: sti; call eax; 
0x00182e3a: sti; call edx; 
0x0016e012: sti; call esp; 
0x00166b79: sti; cld; call dword ptr [eax]; 
0x00166b99: sti; cld; call eax; 
0x00166b99: sti; cld; call eax; sti; cld; jmp eax; 
0x00166b9d: sti; cld; jmp eax; 
0x00166b19: sti; cld; jmp esp; 
0x00166b65: sti; cld; push dword ptr [eax - 0x7f000305]; cld; cld; jmp eax; 
0x0016d748: sti; cli; push dword ptr [edx + 0x370b0002]; cli; jmp esp; 
0x0018dc59: sti; cmc; jmp dword ptr [edi]; 
0x0016e11a: sti; dec dword ptr [eax]; sbb al, byte ptr [ebx]; add byte ptr [edx + ebp*2 - 5], dl; call dword ptr [eax + 0x1a]; 
0x000bd7f3: sti; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x000eca2b: sti; dec dword ptr [ebp - 0x4385d7d]; dec dword ptr [edi]; inc esp; ret 0x7c89; 
0x000e32f9: sti; dec dword ptr [ebp - 0x47bbb7d]; dec dword ptr [edi]; inc esp; ret 0x45f6; 
0x000e2179: sti; dec dword ptr [ebp - 0x47bf37d]; dec dword ptr [edi]; inc esp; ret 0x45f6; 
0x000644cc: sti; dec dword ptr [ebx - 0x2517afbb]; push -5; jmp dword ptr [ebp - 0x7d]; 
0x00025f84: sti; dec dword ptr [ebx - 0x74fbdb8c]; sbb al, 0x24; add esp, 8; ret; 
0x0012387a: sti; dec dword ptr [ebx - 0xeb6b]; dec dword ptr [ebx - 0xdf7b]; dec dword ptr [ebx - 0xf775]; jmp dword ptr [ebp - 0x77]; 
0x0012a6c8: sti; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x000fc779: sti; dec dword ptr [ecx + 0x2bf0847]; add byte ptr [eax], al; add byte ptr [edi + 0x92b8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010f48d: sti; dec dword ptr [ecx + 0x39e82404]; adc bh, bh; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x000599f0: sti; dec dword ptr [ecx - 0x10537b]; call dword ptr [ecx - 0x17]; 
0x00059a96: sti; dec dword ptr [ecx - 0x10537b]; call dword ptr [edx - 0x17]; 
0x0005a788: sti; dec dword ptr [ecx - 0x106b7b]; call dword ptr [ecx - 0x17]; 
0x0005b331: sti; dec dword ptr [ecx - 0x106b7b]; call dword ptr [edx - 0x17]; 
0x000fe242: sti; dec dword ptr [ecx - 0x17fbdbbc]; ret; 
0x000fdbb5: sti; dec dword ptr [ecx - 0x5e17dbfc]; inc ebp; inc dword ptr [ebp - 0x76eb8b40]; ret 0x848b; 
0x00109974: sti; dec dword ptr [ecx - 0x72cbdbac]; xchg eax, ebx; call eax; 
0x0011eae7: sti; dec dword ptr [ecx - 0x76f7db84]; push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0xc]; 
0x000a7924: sti; dec dword ptr [edi]; inc ebp; ret 0xa5eb; 
0x000e217f: sti; dec dword ptr [edi]; inc esp; ret 0x45f6; 
0x000eca31: sti; dec dword ptr [edi]; inc esp; ret 0x7c89; 
0x0016e462: sti; dec esp; sub eax, dword ptr [ebx]; add byte ptr [esp + eax*8], ah; sti; jmp eax; 
0x001888dd: sti; hlt; call dword ptr [eax]; 
0x000e1e24: sti; inc dword ptr [eax + 0x440f0038]; ret 0x64e9; 
0x00123d45: sti; inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x000ed2dc: sti; inc dword ptr [ebx - 0xf76eb3c]; pop ebx; pop esi; ret; 
0x00119484: sti; inc dword ptr [ebx]; xchg eax, esp; ret; 
0x000a609e: sti; inc dword ptr [ecx + 0x184c4]; add byte ptr [ebx + 0x5e], bl; ret; 
0x0015afb8: sti; inc ebx; add dh, bh; jmp edi; 
0x000752f2: sti; inc edi; add al, 0x24; ret 0x10; 
0x0016dfaa: sti; inc esp; adc al, byte ptr [ebx]; add byte ptr [edx + ecx*2], dl; sti; jmp esp; 
0x0016e542: sti; inc esp; add eax, dword ptr cs:[eax]; hlt; sar bl, 1; call dword ptr [eax + 0x30]; 
0x0017b2e9: sti; insb byte ptr es:[edi], dx; out dx, eax; jmp dword ptr [edx]; 
0x000b84c5: sti; int 0x80; 
0x0005e7ac: sti; jecxz 0x5e7ae; dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0xe373]; jmp dword ptr [ebp - 0x77]; 
0x0016df6a: sti; jmp dword ptr [eax + 0x11]; 
0x0016e062: sti; jmp dword ptr [eax + 0x16]; 
0x0016e052: sti; jmp dword ptr [eax]; 
0x000b82d2: sti; jmp dword ptr [ebp - 0x5f]; 
0x0004bcd8: sti; jmp dword ptr [ebp - 0x75]; 
0x000644d4: sti; jmp dword ptr [ebp - 0x7d]; 
0x0017adfa: sti; jmp dword ptr [ebx]; 
0x0017f8d2: sti; jmp dword ptr [ecx]; 
0x0019851e: sti; jmp dword ptr [edi]; 
0x0018dc86: sti; jmp dword ptr [edx]; 
0x0002bd05: sti; jmp dword ptr [esi + 0x39]; 
0x0012f79e: sti; jmp dword ptr [esi + 0xf]; 
0x0010d728: sti; jmp dword ptr [esi - 0x3f]; 
0x0016de3a: sti; jmp eax; 
0x0017fef6: sti; jmp ecx; 
0x0017ad42: sti; jmp edx; 
0x00177fbe: sti; jmp esi; 
0x0016dfb2: sti; jmp esp; 
0x0016e1aa: sti; lcall ptr [eax - 0x5bfffce4]; jno 0x16e1ae; call eax; 
0x0016e1e2: sti; ljmp ptr [ebp + ebx + 0x75a40003]; sti; call esp; 
0x0016e17a: sti; ljmp ptr [ebx + ebx + 0x6e340003]; sti; jmp eax; 
0x0016e15a: sti; ljmp ptr [ebx + ebx]; add eax, dword ptr [eax]; adc al, 0x6d; sti; call dword ptr [eax + 0x1b]; 
0x0016e6f2: sti; ljmp ptr [ebx + edi - 0xabfffd]; sti; call eax; 
0x001331c4: sti; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00132bb4: sti; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00134e98: sti; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00136328: sti; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x0013be78: sti; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0013beb4: sti; mov dword ptr [edx - 5], ecx; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x0013be72: sti; mov eax, dword ptr [eax - 4]; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x000fc792: sti; mov ebx, dword ptr [esp + 0x30]; mov esi, dword ptr [esp + 0x34]; mov edi, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x00134ee7: sti; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00136367: sti; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x0013beb7: sti; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x000c5b43: sti; neg eax; pop edi; ret; 
0x00147932: sti; pop edi; ret; 
0x0016e4aa: sti; push dword ptr [eax]; sub eax, 0xccb40003; sti; call dword ptr [eax + 0x2d]; 
0x0016e50a: sti; push dword ptr [ebp + ebp + 3]; add byte ptr [eax - 0x5b000430], al; sub eax, 0xd0900003; sti; call esp; 
0x0016e6d2: sti; push eax; cmp al, byte ptr [ebx]; add byte ptr [ebx + edi*8], ah; sti; call dword ptr [eax]; 
0x000f0d53: sti; push ebx; ret; 
0x0018889d: sti; push edi; hlt; jmp dword ptr [edx]; 
0x000e18e1: sti; ret 0xffff; 
0x0008d2d7: sti; ror byte ptr [eax + eax], cl; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0016e6d9: sti; sti; call dword ptr [eax]; 
0x00175305: stosb byte ptr es:[edi], al; aad 0xed; jmp dword ptr [edx]; 
0x0016ee15: stosb byte ptr es:[edi], al; add al, byte ptr [eax]; adc al, 0x70; cld; jmp dword ptr [eax - 0x56]; 
0x00199ca5: stosb byte ptr es:[edi], al; add al, byte ptr [eax]; dec eax; pop ebp; clc; call dword ptr [eax]; 
0x0017a0e1: stosb byte ptr es:[edi], al; add byte ptr [eax], al; salc; xchg eax, esp; out dx, eax; call dword ptr [eax]; 
0x0017a141: stosb byte ptr es:[edi], al; add byte ptr [eax], al; xchg eax, edx; xchg eax, esp; out dx, eax; call dword ptr [eax]; 
0x00189c1d: stosb byte ptr es:[edi], al; add dword ptr [eax], eax; push eax; aam 0xf4; call dword ptr [edx]; 
0x00168e68: stosb byte ptr es:[edi], al; fsubp st(7); jmp dword ptr [eax - 0x18]; 
0x001771ed: stosb byte ptr es:[edi], al; iretd; out dx, al; jmp dword ptr [edx]; 
0x0007e10c: stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0007e2d3: stosb byte ptr es:[edi], al; pop edi; ret; 
0x000b85ac: stosb byte ptr es:[edi], al; push cs; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00140702: stosb byte ptr es:[edi], al; push esi; cmc; call dword ptr [ebx - 0x18]; 
0x00050f9a: stosb byte ptr es:[edi], al; ret; 
0x000e5e4c: stosb byte ptr es:[edi], al; ror dword ptr [ebx], 1; add byte ptr [ebx - 0x8f7dbbc], cl; ret 0xeff0; 
0x0016fa34: stosb byte ptr es:[edi], al; shr dl, 1; call dword ptr [eax]; 
0x001711cf: stosd dword ptr es:[edi], eax; add al, 0xa; ret; 
0x00199d3d: stosd dword ptr es:[edi], eax; add al, byte ptr [eax]; and byte ptr [esi - 8], bl; jmp dword ptr [ebx]; 
0x00199d75: stosd dword ptr es:[edi], eax; add al, byte ptr [eax]; dec eax; pop esi; clc; jmp dword ptr [ebx]; 
0x00199d19: stosd dword ptr es:[edi], eax; add al, byte ptr [eax]; in al, 0x5d; clc; call dword ptr [ebp]; 
0x0016843d: stosd dword ptr es:[edi], eax; add byte ptr [eax], al; add al, 0x92; in al, dx; jmp eax; 
0x0017a231: stosd dword ptr es:[edi], eax; add byte ptr [eax], al; out 0x93, al; out dx, eax; call dword ptr [eax]; 
0x00189dcd: stosd dword ptr es:[edi], eax; add dword ptr [eax], eax; add byte ptr [edi], cl; cld; jmp dword ptr [edx]; 
0x00189d29: stosd dword ptr es:[edi], eax; add dword ptr [eax], eax; movsb byte ptr es:[edi], byte ptr [esi]; fcompi st(4); call dword ptr [edx]; 
0x00189dad: stosd dword ptr es:[edi], eax; add dword ptr [eax], eax; xor dl, ah; hlt; jmp dword ptr [edx]; 
0x00133177: stosd dword ptr es:[edi], eax; add eax, dword ptr cs:[eax]; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0016dab9: stosd dword ptr es:[edi], eax; cli; jmp dword ptr [eax - 9]; 
0x00173e35: stosd dword ptr es:[edi], eax; in al, dx; call dword ptr [edi + 4]; 
0x000914c8: stosd dword ptr es:[edi], eax; mov byte ptr [ecx], cl; add byte ptr [ecx + 0xc93b8c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000827bd: stosd dword ptr es:[edi], eax; mov eax, edx; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0007e108: stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0007e2cf: stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x000947c8: stosd dword ptr es:[edi], eax; push ebp; or dword ptr [eax], eax; add ecx, 0xc6138; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0017fff0: stosd dword ptr es:[edi], eax; push ss; add byte ptr [eax], al; add byte ptr [edi + 0xe], dl; or byte ptr [ebx + 0x40e4902], al; ret; 
0x000ddac4: stosd dword ptr es:[edi], eax; ret 4; 
0x001932e5: stosd dword ptr es:[edi], eax; sbb dh, dh; jmp dword ptr [edx]; 
0x0016f81d: stosd dword ptr es:[edi], eax; std; call dword ptr [edx]; 
0x0016f855: stosd dword ptr es:[edi], eax; std; jmp dword ptr [ebp]; 
0x000a8488: stosd dword ptr es:[edi], eax; str word ptr [ebx - 0xf777]; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x001337f7: stosd dword ptr es:[edi], eax; sub al, byte ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x000827ee: stosw word ptr es:[edi], ax; mov eax, edx; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000a7b23: str word ptr [ebx - 0x76dfdba4]; ret 0x7c8b; 
0x000a8489: str word ptr [ebx - 0xf777]; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00009f7a: str word ptr [ecx]; add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; ret 0x11; 
0x00031164: str word ptr [ecx]; ret 0x5489; 
0x000ac90e: str word ptr [edi]; mov dh, 0xc0; mov ecx, ebx; sub ecx, dword ptr [ebx + eax*4 - 0xf66d4]; jmp ecx; 
0x00166978: sub ah, 0xfc; call dword ptr [edx]; 
0x0016eb91: sub ah, bh; call esp; 
0x0016eb89: sub ah, bh; dec dword ptr [eax + 0x24000105]; sub ah, bh; call esp; 
0x0011c30d: sub ah, bh; jmp dword ptr [esi - 0x39]; 
0x0017a135: sub ah, byte ptr [edx]; out dx, eax; jmp dword ptr [edx]; 
0x0017cb10: sub al, 0; add byte ptr [eax], al; aam 0; add al, bh; out dx, eax; call dword ptr [eax]; 
0x00195a80: sub al, 0; add byte ptr [eax], al; aam 0x63; add al, byte ptr [eax]; sbb dword ptr [edx - 9], ecx; call dword ptr [eax]; 
0x0017bbc0: sub al, 0; add byte ptr [eax], al; adc al, 0xc5; add byte ptr [eax], al; sal eax, -0x11; call dword ptr [eax]; 
0x0017a2bc: sub al, 0; add byte ptr [eax], al; adc byte ptr [eax + eax - 0x106c8200], ch; call dword ptr [eax]; 
0x00179fbc: sub al, 0; add byte ptr [eax], al; adc byte ptr [ecx - 0x6a5e0000], ch; out dx, eax; call dword ptr [eax]; 
0x0006a646: sub al, 0; add byte ptr [eax], al; add byte ptr [ebp - 0x7ae38a37], al; jmp dword ptr [esi - 0x43]; 
0x00176918: sub al, 0; add byte ptr [eax], al; and byte ptr [eax], 0; add al, al; add edi, ebp; call dword ptr [ebx]; 
0x0017a1cc: sub al, 0; add byte ptr [eax], al; and byte ptr [ebx - 0x6bd60000], ch; out dx, eax; call dword ptr [eax]; 
0x0018ffcc: sub al, 0; add byte ptr [eax], al; and byte ptr [ecx], cl; add al, byte ptr [eax]; sbb dword ptr [ebp - 0xa], edx; call dword ptr [eax]; 
0x00173dcc: sub al, 0; add byte ptr [eax], al; and byte ptr [edi], al; add cl, ch; mov cl, 0xec; call dword ptr [eax]; 
0x001944cc: sub al, 0; add byte ptr [eax], al; and byte ptr [esi + 2], cl; add al, bl; and edi, esi; call dword ptr [eax]; 
0x0019b4cc: sub al, 0; add byte ptr [eax], al; and byte ptr [esi - 0x2597fffe], bh; clc; call dword ptr [eax]; 
0x0019ae94: sub al, 0; add byte ptr [eax], al; call 0xb719b154; mov ah, 0xf8; call dword ptr [eax]; 
0x0019b52c: sub al, 0; add byte ptr [eax], al; cmp byte ptr [esi - 0x25d7fffe], 0xf8; call dword ptr [eax]; 
0x0018f944: sub al, 0; add byte ptr [eax], al; cwde; add al, byte ptr [edx]; add byte ptr [esi + eax*2 - 0xa], cl; call dword ptr [eax]; 
0x0018fa84: sub al, 0; add byte ptr [eax], al; fadd dword ptr [ebx]; add al, byte ptr [eax]; xor dword ptr [eax - 0xa], ecx; call dword ptr [eax]; 
0x0017adf0: sub al, 0; add byte ptr [eax], al; hlt; mov ebx, 0xc080000; sti; jmp dword ptr [ebx]; 
0x0017b1a0: sub al, 0; add byte ptr [eax], al; hlt; mov edx, 0xf7cd0000; out dx, eax; call dword ptr [eax]; 
0x0017baa0: sub al, 0; add byte ptr [eax], al; hlt; ret; 
0x00192cfc: sub al, 0; add byte ptr [eax], al; in al, 1; add byte ptr [ecx + esi*8 - 0xa], bh; call dword ptr [esi]; 
0x00187a3c: sub al, 0; add byte ptr [eax], al; inc eax; mov byte ptr [ecx], al; add byte ptr [edx - 0xd], bl; jmp dword ptr [eax + 3]; 
0x0017b2f0: sub al, 0; add byte ptr [eax], al; inc esp; mov esp, 0xf6ed0000; out dx, eax; call dword ptr [eax]; 
0x0017b8f0: sub al, 0; add byte ptr [eax], al; inc esp; ret 0; 
0x00175d58: sub al, 0; add byte ptr [eax], al; lodsb al, byte ptr [esi]; add byte ptr [eax], al; ret; 
0x00177460: sub al, 0; add byte ptr [eax], al; mov ah, 0x7d; add byte ptr [eax], al; ret 0xef13; 
0x0019524c: sub al, 0; add byte ptr [eax], al; mov al, byte ptr [0x3f00025b]; xor al, 0xf7; call dword ptr [eax]; 
0x00191e4c: sub al, 0; add byte ptr [eax], al; mov al, byte ptr [0x4a000227]; sal esi, 1; call dword ptr [eax]; 
0x00196084: sub al, 0; add byte ptr [eax], al; mov byte ptr [esi + 2], ch; add byte ptr [esi - 9], al; call dword ptr [ebx]; 
0x0017bd10: sub al, 0; add byte ptr [eax], al; mov byte ptr fs:[eax], 0; shr edi, 1; out dx, eax; call dword ptr [eax]; 
0x001891b4: sub al, 0; add byte ptr [eax], al; mov eax, 0x5400019f; dec edi; hlt; call dword ptr [ebx + 1]; 
0x0017b410: sub al, 0; add byte ptr [eax], al; mov ebp, 0xf62d0000; out dx, eax; call dword ptr [eax]; 
0x00172d68: sub al, 0; add byte ptr [eax], al; mov esp, 0x7a000036; add ah, ch; call dword ptr [eax]; 
0x00188538: sub al, 0; add byte ptr [eax], al; mov word ptr [esi + 0x1a850001], cs; hlt; call dword ptr [eax]; 
0x0017b350: sub al, 0; add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; mov esp, 0xf6ad0000; out dx, eax; call dword ptr [eax]; 
0x0017b950: sub al, 0; add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; ret 0; 
0x0019b43c: sub al, 0; add byte ptr [eax], al; nop; mov ebp, 0xdac80002; clc; call dword ptr [eax]; 
0x0017923c: sub al, 0; add byte ptr [eax], al; nop; wait; add byte ptr [eax], al; ret; 
0x00194d14: sub al, 0; add byte ptr [eax], al; push 0x77000256; sub esi, edi; call dword ptr [eax]; 
0x00173114: sub al, 0; add byte ptr [eax], al; push 0xb500003a; add ch, ah; call dword ptr [eax]; 
0x0018aa4c: sub al, 0; add byte ptr [eax], al; push eax; mov eax, 0x351c0001; cmc; call dword ptr [ecx]; 
0x0019b4fc: sub al, 0; add byte ptr [eax], al; push eax; mov esi, 0xda480002; clc; call dword ptr [eax]; 
0x0019a900: sub al, 0; add byte ptr [eax], al; push esp; mov dl, 2; add byte ptr [edx - 8], dh; call dword ptr [eax]; 
0x0017b200: sub al, 0; add byte ptr [eax], al; push esp; mov ebx, 0xf78d0000; out dx, eax; call dword ptr [eax]; 
0x0017b500: sub al, 0; add byte ptr [eax], al; push esp; mov esi, 0xf5810000; out dx, eax; call dword ptr [eax]; 
0x0019b40c: sub al, 0; add byte ptr [eax], al; pushal; mov ebp, 0xdae80002; clc; call dword ptr [eax]; 
0x0019b46c: sub al, 0; add byte ptr [eax], al; sar byte ptr [ebp - 0x2557fffe], 0xf8; call dword ptr [eax]; 
0x00175ac4: sub al, 0; add byte ptr [eax], al; sbb byte ptr [eax + eax], ah; or bl, ch; out dx, al; call dword ptr [eax]; 
0x0019a414: sub al, 0; add byte ptr [eax], al; sbb byte ptr [edx - 0x742bfffe], dh; clc; jmp dword ptr [ebx]; 
0x001954c4: sub al, 0; add byte ptr [eax], al; sbb byte ptr [esi + 2], bl; add byte ptr [ebp + esi - 9], cl; call dword ptr [eax]; 
0x0017a07c: sub al, 0; add byte ptr [eax], al; shr byte ptr [ecx - 0x6ae60000], 1; out dx, eax; call dword ptr [eax]; 
0x0017a22c: sub al, 0; add byte ptr [eax], al; sub byte ptr [ebx - 0x6c1a0000], 0xef; call dword ptr [eax]; 
0x001888d4: sub al, 0; add byte ptr [eax], al; sub byte ptr [edx - 0x401ffff], dl; hlt; call dword ptr [eax]; 
0x0017af30: sub al, 0; add byte ptr [eax], al; test byte ptr [eax - 0x6520000], bh; out dx, eax; call dword ptr [eax]; 
0x0017b230: sub al, 0; add byte ptr [eax], al; test byte ptr [ebx - 0x8930000], bh; out dx, eax; call dword ptr [eax]; 
0x0019a930: sub al, 0; add byte ptr [eax], al; test byte ptr [edx - 0x5dabfffe], dh; clc; call dword ptr [eax]; 
0x0017b530: sub al, 0; add byte ptr [eax], al; test byte ptr [esi - 0xa9f0000], bh; out dx, eax; call dword ptr [eax]; 
0x0017ba40: sub al, 0; add byte ptr [eax], al; xchg eax, esp; ret; 
0x0005e462: sub al, 0; add byte ptr [ebx - 0x15775], cl; jmp dword ptr [ebp - 0x75]; 
0x0004fea4: sub al, 0; add byte ptr [ebx - 0x1cb73], cl; call ecx; 
0x000fe8a3: sub al, 0; add byte ptr [ecx - 0x373edbec], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x000fe880: sub al, 0; add byte ptr [edx], al; add esp, 0x18; pop ebx; ret; 
0x0011ba71: sub al, 0; idiv edi; mov dword ptr [esp + 0x10], edx; lea edx, dword ptr [ebx - 0x84aa4]; mov dword ptr [esp + 8], edx; call dword ptr [eax]; 
0x00054e05: sub al, 0x10; add byte ptr [eax], al; ret; 
0x0019052c: sub al, 0x13; add al, byte ptr [eax]; add byte ptr [eax - 0xa], bl; jmp dword ptr [ebx]; 
0x0004174a: sub al, 0x18; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0016e15c: sub al, 0x1b; add eax, dword ptr [eax]; adc al, 0x6d; sti; call dword ptr [eax + 0x1b]; 
0x00166f3c: sub al, 0x1f; std; call dword ptr [esi]; 
0x0006d6d5: sub al, 0x24; add eax, 0x2c; mov dword ptr [esp + 4], eax; call dword ptr [ebp + 0x18]; 
0x000311c7: sub al, 0x24; add esp, 0x10; ret; 
0x00118f3d: sub al, 0x24; call dword ptr [eax + 0x10]; 
0x0011dc43: sub al, 0x24; call dword ptr [eax + 0x14]; 
0x0006ad7b: sub al, 0x24; call dword ptr [eax + 0x1c]; 
0x00067e3f: sub al, 0x24; call dword ptr [eax + 0x40]; 
0x0006db9c: sub al, 0x24; call dword ptr [eax + 0x48]; 
0x000d95ba: sub al, 0x24; call dword ptr [eax + 0xc]; 
0x0011c351: sub al, 0x24; call dword ptr [eax + 8]; 
0x0011c2da: sub al, 0x24; call dword ptr [eax]; 
0x0006d614: sub al, 0x24; call dword ptr [ebp + 0x10]; 
0x0007c261: sub al, 0x24; call dword ptr [esi + 0x1c]; 
0x0007bb5c: sub al, 0x24; call eax; 
0x00070009: sub al, 0x24; call ecx; 
0x000679c6: sub al, 0x24; call edi; 
0x0012b1f4: sub al, 0x24; mov dword ptr [esp + 0xc], edx; call dword ptr [eax + 0x40]; 
0x0011385b: sub al, 0x24; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x18]; 
0x00078f07: sub al, 0x24; mov dword ptr [esp + 4], edx; call eax; 
0x0012b2a0: sub al, 0x24; mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], ecx; call dword ptr [eax + 0x40]; 
0x000f7e16: sub al, 0x24; mov dword ptr [esp + 8], eax; call dword ptr [edi + 0x14]; 
0x00079df0: sub al, 0x24; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x14]; mov dword ptr [esp + 4], edx; call eax; 
0x00079b58: sub al, 0x24; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x40]; mov dword ptr [esp + 4], edx; call eax; 
0x000965a9: sub al, 0x29; ret 0x4403; 
0x00064aca: sub al, 0x2b; inc ebp; and al, 0x89; ret 0xfac1; 
0x000328f2: sub al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000ad6c4: sub al, 0x31; rol byte ptr [ebx - 0x6bf0df1a], cl; ret 0xd789; 
0x001941dc: sub al, 0x4b; add al, byte ptr [eax]; push ebp; sbb dh, bh; call dword ptr [eax]; 
0x000ddaca: sub al, 0x55; or al, 0; xchg edi, ebx; mov eax, 0x13e; call dword ptr gs:[0x10]; 
0x00194c2c: sub al, 0x5a; add al, byte ptr [eax]; inc eax; sub edi, esi; call dword ptr [ecx]; 
0x0003222a: sub al, 0x5b; lea eax, dword ptr [edx + 2]; pop esi; pop edi; pop ebp; ret; 
0x000e49ae: sub al, 0x5b; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x000f5c05: sub al, 0x5b; not eax; pop esi; pop edi; pop ebp; ret; 
0x0001ae59: sub al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x000725a5: sub al, 0x5b; pop esi; pop edi; sub eax, ebp; pop ebp; ret; 
0x000716ec: sub al, 0x5b; pop esi; sub eax, edi; pop edi; pop ebp; ret; 
0x00182c04: sub al, 0x5c; cld; call dword ptr [ebx]; 
0x0016a41c: sub al, 0x6b; add dword ptr [eax], eax; inc esp; mov bl, 0xf1; call dword ptr [eax + 0x6b]; 
0x0018642c: sub al, 0x72; add dword ptr [eax], eax; shl dh, 0xf2; jmp dword ptr [edx]; 
0x0002c4ca: sub al, 0x74; ret; 
0x00146ae2: sub al, 0x74; sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x000a7195: sub al, 0x75; pop eax; pop edi; pop esi; ret; 
0x000bafda: sub al, 0x75; scasd eax, dword ptr es:[edi]; pop esi; nop; ret; 
0x0017b5b9: sub al, 0x76; out dx, eax; jmp dword ptr [edx]; 
0x000cb2e0: sub al, 0x82; mov esi, dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000cb44b: sub al, 0x83; ret 0x3901; 
0x001302f3: sub al, 0x83; ret 0x7e10; 
0x000d01a3: sub al, 0x83; ret 0x8901; 
0x0004b63f: sub al, 0x83; rol byte ptr [ecx], 0xf; xchg eax, esp; ret 0x97e9; 
0x0004b5f7: sub al, 0x83; rol byte ptr [ecx], 0xf; xchg eax, esp; ret 0xdfe9; 
0x0004b525: sub al, 0x83; rol byte ptr [ecx], 0xf; xchg eax, esp; ret 0xe9; 
0x00116b21: sub al, 0x83; ror byte ptr [eax], 0x89; add al, 0x24; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x000f71ea: sub al, 0x85; ror byte ptr [ecx + 0xf202444], 0x94; ret 0xd3eb; 
0x000e89c4: sub al, 0x87; fistp qword ptr [eax + 0x1a]; call dword ptr gs:[0x10]; 
0x000a5eba: sub al, 0x89; adc al, 0x24; call edi; 
0x000e465d: sub al, 0x89; call 0x5d6da4bf; ret; 
0x000e46b1: sub al, 0x89; call 0x5d6da513; ret; 
0x000e46e9: sub al, 0x89; call 0x5d6da54b; ret; 
0x000319da: sub al, 0x89; dec esp; and al, 4; call edi; 
0x001185e1: sub al, 0x89; dec esp; and al, 4; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x0011b489: sub al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], 0xd; mov dword ptr [esp], eax; call dword ptr [edx + 0x14]; 
0x000c6f15: sub al, 0x89; imul ebp, dword ptr [eax], 0xfffe8ae9; jmp dword ptr [esi - 0x70]; 
0x0006d6d9: sub al, 0x89; inc esp; and al, 4; call dword ptr [ebp + 0x18]; 
0x0006dcc0: sub al, 0x89; inc esp; and al, 4; call dword ptr [ecx + 0x18]; 
0x0006ccc0: sub al, 0x89; inc esp; and al, 4; call dword ptr [edx + 4]; 
0x00118606: sub al, 0x89; insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x000eec9b: sub al, 0x89; pop esp; and al, 0xc; mov ebx, eax; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x00123d7b: sub al, 0x89; pop esp; and al, 0xc; mov ebx, eax; mov eax, 0xbc; call dword ptr gs:[0x10]; 
0x00123e3e: sub al, 0x89; pop esp; and al, 0xc; mov ebx, eax; mov eax, 0xbd; call dword ptr gs:[0x10]; 
0x000e5a63: sub al, 0x89; push esi; xor byte ptr [ebx + 0x4e894050], cl; xor al, 0xf6; ret 0x7420; 
0x0011f03d: sub al, 0x89; push esp; and al, 0x1c; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edi; call dword ptr [eax + 0x20]; 
0x0011ef55: sub al, 0x89; push esp; and al, 0x1c; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x20]; 
0x0011e6d4: sub al, 0x89; push esp; and al, 0x1c; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x0011f00a: sub al, 0x89; push esp; and al, 4; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x0011ef22: sub al, 0x89; push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x0011e6a2: sub al, 0x89; push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x00065b74: sub al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000d4215: sub al, 0x89; ret 0x448b; 
0x000ce9e3: sub al, 0x89; ret 0x4e8b; 
0x000dc0e0: sub al, 0x89; ret 0x748b; 
0x000cc32d: sub al, 0x89; ret 0x850f; 
0x0010cd0a: sub al, 0x89; ret 0xcd89; 
0x0011f6fe: sub al, 0x89; ret 0xd089; 
0x0009b0da: sub al, 0x89; ret 0xfac1; 
0x000e70a2: sub al, 0x89; ret; 
0x000ed7c5: sub al, 0x89; xor byte ptr [ebx - 0x2f76cb3c], al; pop ebx; pop esi; ret; 
0x000ca9a8: sub al, 0x8b; add al, ch; ret; 
0x000ef1d3: sub al, 0x8b; insb byte ptr es:[edi], dx; and al, 0x30; add esp, 0x34; ret; 
0x0018812c: sub al, 0x8f; add dword ptr [eax], eax; adc al, 0xf3; call dword ptr [eax]; 
0x0017abe4: sub al, 0x90; out dx, eax; call dword ptr [edx]; 
0x00188d2c: sub al, 0x9b; add dword ptr [eax], eax; push eax; and esp, esi; jmp dword ptr [edi]; 
0x0016cd34: sub al, 0xa1; add al, byte ptr [eax]; xor al, 0x66; stc; call dword ptr [eax - 0x5f]; 
0x0002e243: sub al, 0xb9; or byte ptr [eax], al; add byte ptr [eax], al; xchg ebx, edx; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000f0321: sub al, 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00113b3b: sub al, 0xc3; lea esi, dword ptr [esi]; mov eax, dword ptr [esi + 0x2398]; mov bp, 1; mov dword ptr [esp], edi; call dword ptr [eax + 0x10]; 
0x0012be4b: sub al, 0xc3; lea esi, dword ptr [esi]; mov eax, dword ptr [esi + 0x4c]; mov dword ptr [esp], esi; call dword ptr [eax + 0x44]; 
0x00126eca: sub al, 0xc3; mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call dword ptr [esi]; 
0x001767f5: sub al, 0xc7; out dx, al; jmp dword ptr [edx]; 
0x000705b0: sub al, 0xe8; mov ebp, 0x81000b97; ret; 
0x000649ae: sub al, 0xe8; mov edi, 0x81000c53; ret; 
0x000f80af: sub al, 0xe8; mov esi, 0x8100031c; ret; 
0x0004b9aa: sub al, 0xe8; ret; 
0x000d31fc: sub al, 0xe9; ret; 
0x00129d6d: sub al, 0xe9; sub eax, 0x8bfffffe; sbb al, 0x24; ret; 
0x00174a9e: sub al, 0xed; jmp dword ptr [edx]; 
0x0018a244: sub al, 0xf0; hlt; call dword ptr [ebx]; 
0x00169c69: sub al, 0xf1; jmp esp; 
0x000c5c63: sub al, 0xf2; dec dword ptr [ebp - 0xdd4636d]; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x0018526d: sub al, 0xf2; jmp dword ptr [ebp + 5]; 
0x00194162: sub al, 0xf6; jmp dword ptr [edx]; 
0x000e5918: sub al, 0xf6; ret 0x7420; 
0x001989b2: sub al, 0xf7; jmp dword ptr [edx]; 
0x000eb0eb: sub al, 0xf7; ret 0xfff; 
0x00198a45: sub al, 0xf8; call dword ptr [eax]; 
0x000e8a3d: sub al, 0xf; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000aeb21: sub al, 0xf; dec ecx; ret 0x4403; 
0x000ef0e7: sub al, 0xf; mov dh, 0xc0; sub eax, 1; ret; 
0x000a7b42: sub al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x90c3; 
0x0002fa1d: sub al, 0xf; xchg eax, edx; ret 0xd789; 
0x00166914: sub al, 0xfc; call dword ptr [eax - 0x17]; 
0x00166914: sub al, 0xfc; call dword ptr [eax - 0x17]; cld; jmp dword ptr [eax]; 
0x0016684c: sub al, 0xfc; push dword ptr [eax - 0x1a]; cld; call dword ptr [eax]; 
0x001670f1: sub al, 0xfd; call dword ptr [eax + 0x2c]; 
0x00167169: sub al, 0xfd; call dword ptr [edx]; 
0x00167135: sub al, 0xfd; call esp; 
0x00167179: sub al, 0xfd; dec dword ptr [ebp + 0x2c06fffd]; std; jmp dword ptr [esi + 0x2c]; 
0x00167199: sub al, 0xfd; inc dword ptr [eax]; sub eax, 0x2010fffd; std; call eax; 
0x00167189: sub al, 0xfd; inc dword ptr [esi]; sub eax, 0x2c00fffd; std; jmp dword ptr [eax + 0x2c]; 
0x00167165: sub al, 0xfd; inc edx; sub al, 0xfd; call dword ptr [edx]; 
0x00167191: sub al, 0xfd; jmp dword ptr [eax + 0x2c]; 
0x00167181: sub al, 0xfd; jmp dword ptr [esi + 0x2c]; 
0x00167115: sub al, 0xfd; jmp eax; 
0x00167105: sub al, 0xfd; jmp esi; 
0x00167195: sub al, 0xfd; push dword ptr [eax + 0xfffd2c]; sub eax, 0x2010fffd; std; call eax; 
0x00167161: sub al, 0xfd; push dword ptr [edx + 0x2c]; std; inc edx; sub al, 0xfd; call dword ptr [edx]; 
0x00167185: sub al, 0xfd; push dword ptr [esi + 0x6fffd2c]; sub eax, 0x2c00fffd; std; jmp dword ptr [eax + 0x2c]; 
0x0016b15c: sub al, 1; add al, byte ptr [eax]; aaa; cmc; call dword ptr [eax + 1]; 
0x0002e03e: sub al, 1; add byte ptr [eax], al; add esp, 0x130; ret; 
0x000de046: sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00069306: sub al, 1; add byte ptr [eax], al; ret; 
0x000305dc: sub al, 1; ret 0x1f74; 
0x000ad41a: sub al, 1; ret 0x48d; 
0x00114269: sub al, 1; ret 0x5689; 
0x0016e48d: sub al, 3; add byte ptr [eax + ecx*8 + 0x2cbcfffb], ah; add eax, dword ptr [eax]; adc al, 0xc9; sti; jmp eax; 
0x00133436: sub al, 3; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0016e495: sub al, 3; add byte ptr [ecx + ecx*8], dl; sti; jmp eax; 
0x0011ac92: sub al, 4; add byte ptr [eax], al; add byte ptr [ecx + 0x4b83046], cl; add byte ptr [eax], al; add cl, ch; ret 0xfffc; 
0x0017c23d: sub al, 4; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0019eae4: sub al, 6; add byte ptr [eax], al; ret; 
0x00198909: sub al, bh; call dword ptr [ebx]; 
0x000df577: sub al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00016eac: sub al, byte ptr [eax]; add byte ptr [eax], al; push dword ptr [ebx + 4]; jmp dword ptr [ebx + 8]; 
0x00171c0d: sub al, byte ptr [eax]; add byte ptr [eax], dh; ret; 
0x00177319: sub al, byte ptr [eax]; add byte ptr [edi + ecx - 0x11], ah; call dword ptr [esi + 3]; 
0x001337f8: sub al, byte ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x000e0145: sub al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010b28a: sub al, byte ptr [edi + 0x6b8cb]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0016ad3c: sub al, ch; add dword ptr [eax], eax; in al, 0xca; hlt; call dword ptr [eax - 0x18]; 
0x000cf130: sub al, ch; cmp eax, 0x810005ac; ret; 
0x00176505: sub al, cl; out dx, al; jmp dword ptr [edx]; 
0x0016ae74: sub al, dh; add dword ptr [eax], eax; and al, 0xe8; hlt; jmp dword ptr [eax - 0xf]; 
0x0017ba9a: sub bh, 0xff; and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; hlt; ret; 
0x0017ba3a: sub bh, 0xff; and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; xchg eax, esp; ret; 
0x00058904: sub bh, 0xff; dec dword ptr [ebp - 0x7c2ffebc]; ret 0x8b04; 
0x0016dc1c: sub bh, bh; add al, byte ptr [eax]; xor al, 0xd3; cli; call dword ptr [eax - 1]; 
0x0019851d: sub bh, bl; jmp dword ptr [edi]; 
0x001759e8: sub bh, bl; out dx, al; jmp dword ptr [esi]; 
0x00177f29: sub bh, ch; call edx; 
0x00194ab9: sub bh, dh; call dword ptr [eax]; 
0x00194b59: sub bh, dh; call esi; 
0x0018a488: sub bh, dh; hlt; call dword ptr [esi]; 
0x00194d7d: sub bh, dh; jmp dword ptr [edi]; 
0x0016f0c9: sub bh, dh; jmp esp; 
0x00166a00: sub bl, 0xfc; call dword ptr [eax]; 
0x0018d4f8: sub bl, ah; cmc; jmp dword ptr [edx]; 
0x00129b95: sub bl, byte ptr [esi + 0x5f]; pop ebp; ret; 
0x00174a97: sub byte ptr [0xd1cffed], ch; dec esp; sub al, 0xed; jmp dword ptr [edx]; 
0x000e0e1b: sub byte ptr [eax + 0x110], bh; call dword ptr gs:[0x10]; 
0x000e4f1b: sub byte ptr [eax + 0x13a], bh; call dword ptr gs:[0x10]; 
0x000eebee: sub byte ptr [eax + 0x78], bh; mov dword ptr [ecx], ebx; int 0x80; 
0x0011e620: sub byte ptr [eax + 1], bh; pop esi; ret; 
0x0002fe06: sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x001960f8: sub byte ptr [eax - 9], ch; call dword ptr [ecx]; 
0x0000225d: sub byte ptr [eax], 0x10; salc; ret; 
0x00197410: sub byte ptr [eax], al; add byte ptr [eax], al; adc al, 0x82; add al, byte ptr [eax]; dec eax; ret; 
0x0018c47c: sub byte ptr [eax], al; add byte ptr [eax], al; adc dl, 1; add ah, cl; mov bl, 0xf5; call dword ptr [ebx]; 
0x000fc7c9: sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x75]; 
0x000e0bb7: sub byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00186a38: sub byte ptr [eax], al; add byte ptr [eax], al; cmp al, 0x78; add dword ptr [eax], eax; sal dl, 0xf2; call ecx; 
0x001769d8: sub byte ptr [eax], al; add byte ptr [eax], al; fdiv qword ptr [edi]; add byte ptr [eax + 2], al; out dx, eax; call dword ptr [ecx]; 
0x0019ae68: sub byte ptr [eax], al; add byte ptr [eax], al; insb byte ptr es:[edi], dx; mov esp, 0xb2800002; clc; call dword ptr [esi + 1]; 
0x0018ae9c: sub byte ptr [eax], al; add byte ptr [eax], al; mov al, byte ptr [0xc0001bc]; inc eax; cmc; jmp ecx; 
0x001893b4: sub byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x640001a1; push edi; hlt; jmp esi; 
0x00177fb4: sub byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xa400008d; pop ds; sti; jmp esi; 
0x0018b48c: sub byte ptr [eax], al; add byte ptr [eax], al; nop; ret 1; 
0x00187464: sub byte ptr [eax], al; add byte ptr [eax], al; push 0x84000182; or ebx, esi; call edi; 
0x001778a4: sub byte ptr [eax], al; add byte ptr [eax], al; test al, 0x86; add byte ptr [eax], al; sbb edi, ebp; call dword ptr [esi]; 
0x00178d80: sub byte ptr [eax], al; add byte ptr [eax], al; test byte ptr [ebx + 0x37a80000], bl; out dx, eax; call dword ptr [edx]; 
0x00112a89: sub byte ptr [eax], al; add byte ptr [ebp + 0x28982494], cl; add byte ptr [eax], al; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x00054dff: sub byte ptr [eax], dl; add byte ptr [eax], al; add esp, 0x102c; ret; 
0x0000225e: sub byte ptr [eax], dl; salc; ret; 
0x000a718a: sub byte ptr [ebp + 0x63], dh; pop edi; pop esi; ret; 
0x0017b829: sub byte ptr [ebp - 0x11], bh; jmp dword ptr [edx]; 
0x0016cedc: sub byte ptr [ebp - 0x6b3bfffe], 0xf9; call eax; 
0x0011efef: sub byte ptr [ebp - 0x76d7dbac], cl; push esp; and al, 4; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x0011ef07: sub byte ptr [ebp - 0x76d7dbac], cl; push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x0011e687: sub byte ptr [ebp - 0x76d7dbac], cl; push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x000b9d6d: sub byte ptr [ebp - 0xf], 0xff; jmp eax; 
0x00083b42: sub byte ptr [ebx + 0x15e91cc4], al; ret 0xffff; 
0x0002701c: sub byte ptr [ebx + 0x2009084], cl; add byte ptr [eax], al; ret; 
0x000e5a60: sub byte ptr [ebx + 0x56892c4e], cl; xor byte ptr [ebx + 0x4e894050], cl; xor al, 0xf6; ret 0x7420; 
0x0007c21f: sub byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x000969e2: sub byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0011d353: sub byte ptr [ebx + 0x5f5e10c4], al; pop ebp; ret; 
0x0007f65c: sub byte ptr [ebx + 0x5f5e50c4], al; pop ebp; ret; 
0x001682ac: sub byte ptr [ebx + 0x6af40000], ah; in al, dx; call dword ptr [eax - 0x5d]; 
0x000e2177: sub byte ptr [ebx + edi*8 + 0xc838dff], al; test bl, bh; dec dword ptr [edi]; inc esp; ret 0x45f6; 
0x001215dd: sub byte ptr [ebx - 0x137d], cl; jmp dword ptr [ebp - 0x75]; 
0x00033e6e: sub byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x00170d28: sub byte ptr [ebx - 0x15], ah; call dword ptr [ebx]; 
0x001095ae: sub byte ptr [ebx - 0x17cbdb8c], cl; mov ebx, 0x81000207; ret; 
0x00189d28: sub byte ptr [ebx - 0x205bffff], ch; hlt; call dword ptr [edx]; 
0x0011f6fb: sub byte ptr [ebx - 0x3d76d33c], al; mov eax, edx; ret; 
0x0017a230: sub byte ptr [ebx - 0x6c1a0000], 0xef; call dword ptr [eax]; 
0x000ef1cf: sub byte ptr [ebx - 0x74d3db84], cl; insb byte ptr es:[edi], dx; and al, 0x30; add esp, 0x34; ret; 
0x00126ec7: sub byte ptr [ebx - 0x763cd33c], al; push esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [esi]; 
0x000edda6: sub byte ptr [ebx - 0x7cc3db8c], cl; cli; adc dword ptr [edi], ecx; dec esi; ret 0x4489; 
0x000eb0e7: sub byte ptr [ebx - 0x8d3dbb4], cl; ret 0xfff; 
0x0012ed8e: sub byte ptr [ebx - 0xff7d], cl; jmp dword ptr [ebp + 3]; 
0x000a3974: sub byte ptr [ebx], dl; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0007f0e9: sub byte ptr [ecx + 0x18c4830a], cl; pop esi; pop edi; pop ebp; ret; 
0x00188b28: sub byte ptr [ecx + 0x1b040001], bl; hlt; jmp dword ptr [ebx]; 
0x000e66f8: sub byte ptr [ecx + 0x3673e8f7], cl; add al, 0; add ebx, 0xbc8f4; xchg edi, ebx; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000e6608: sub byte ptr [ecx + 0x3763e8d7], cl; add al, 0; add ebx, 0xbc9e4; xchg edi, ebx; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x001100ff: sub byte ptr [ecx + 0x4c48311], cl; pop esi; pop edi; pop ebp; ret; 
0x0011625c: sub byte ptr [ecx + 0x5489243c], cl; and al, 4; call dword ptr [eax + 0xc]; 
0x001098f4: sub byte ptr [ecx + 0x73e82404], cl; arpl di, di; inc dword ptr [ebp - 0x76fa8b40]; xor al, 0x24; call eax; 
0x0006946e: sub byte ptr [ecx + 0x748b0c56], cl; and al, 0x24; add esp, 0x2c; ret; 
0x000e687f: sub byte ptr [ecx + 0x9e9c1d1], cl; cmp edx, -1; cmovne eax, ecx; add esp, 0x2c; ret; 
0x000cb7ab: sub byte ptr [ecx - 0x17b3dba4], cl; mov esi, 0x810005e5; ret; 
0x000739ab: sub byte ptr [ecx - 0x17ebdba4], cl; mov esi, 0x81000b63; ret; 
0x0012b4a6: sub byte ptr [ecx - 0x17ebdba4], cl; ret; 
0x00030a74: sub byte ptr [ecx - 0x17f7dbbc], cl; ret 0xffec; 
0x00024390: sub byte ptr [ecx - 0x4817dbfc], cl; sub edi, edi; dec dword ptr [ebx - 0xf77d]; push dword ptr [ecx]; jmp dword ptr [ebp - 0x39]; 
0x00033c24: sub byte ptr [ecx - 0x743fcefe], cl; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0011c9e3: sub byte ptr [ecx - 0x74dbdbac], cl; push eax; or byte ptr [ecx - 0x76fbdbb4], cl; add al, 0x24; call dword ptr [edx + 0xc]; 
0x00126f31: sub byte ptr [ecx - 0x763ca430], cl; adc al, 0x24; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 4]; 
0x0010994d: sub byte ptr [ecx - 0x76cfdbbc], cl; ret 0x448d; 
0x0009b0d6: sub byte ptr [ecx - 0x76d3db84], cl; ret 0xfac1; 
0x0011f026: sub byte ptr [ecx - 0x76fbdbac], cl; cmp al, 0x24; call dword ptr [eax + 0x20]; 
0x0011eff3: sub byte ptr [ecx - 0x76fbdbac], cl; cmp al, 0x24; call dword ptr [eax + 0x24]; 
0x0011ef3e: sub byte ptr [ecx - 0x76fbdbac], cl; xor al, 0x24; call dword ptr [eax + 0x20]; 
0x0011ef0b: sub byte ptr [ecx - 0x76fbdbac], cl; xor al, 0x24; call dword ptr [eax + 0x24]; 
0x0011e68b: sub byte ptr [ecx - 0x76fbdbac], cl; xor al, 0x24; call dword ptr [eax + 4]; 
0x0011e6be: sub byte ptr [ecx - 0x76fbdbac], cl; xor al, 0x24; call dword ptr [eax]; 
0x000d58a2: sub byte ptr [ecx - 0x76fbdbb4], cl; ret 0x478b; 
0x00113361: sub byte ptr [ecx - 0x76fbdbbc], cl; cmp al, 0x24; call dword ptr [edx + 0x18]; 
0x000679c0: sub byte ptr [ecx - 0x76fbdbbc], cl; sub al, 0x24; call edi; 
0x001139bf: sub byte ptr [ecx], al; add byte ptr [eax], al; add cl, ch; ret 0xfffe; 
0x00069300: sub byte ptr [ecx], al; add byte ptr [eax], al; add esp, 0x12c; ret; 
0x000de704: sub byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00147d54: sub byte ptr [ecx], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 7]; pop edi; ret; 
0x0002e037: sub byte ptr [ecx], al; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x12c]; add esp, 0x130; ret; 
0x000a7e7b: sub byte ptr [ecx], al; add byte ptr [eax], al; or byte ptr [edi], 0x4e; ret 0xc483; 
0x0017375a: sub byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000a7187: sub byte ptr [ecx], bh; dec edi; sub byte ptr [ebp + 0x63], dh; pop edi; pop esi; ret; 
0x00103d8c: sub byte ptr [ecx], ch; ret 0x4489; 
0x000ce2cf: sub byte ptr [ecx], dh; rol byte ptr [ebx + 0x5f5e20c4], 0x5d; ret; 
0x00178928: sub byte ptr [edi + 0x2a440000], dl; out dx, eax; jmp dword ptr [ebx]; 
0x000a71c7: sub byte ptr [edi + 0x5e], bl; ret; 
0x0018b128: sub byte ptr [edi - 0xb], cl; call dword ptr [ebx]; 
0x00127a0e: sub byte ptr [edi], cl; inc esi; ret 0xc483; 
0x000d84b4: sub byte ptr [edi], cl; mov dh, 0xc0; pop ebx; ret; 
0x000dc79c: sub byte ptr [edi], cl; test byte ptr [0x89ffffff], dh; ret 0x848b; 
0x000243ba: sub byte ptr [edi], cl; test byte ptr [ebp - 0x76000003], dl; ret 0x838d; 
0x000cff4d: sub byte ptr [edi], cl; xchg eax, esp; ret 0xb60f; 
0x00169bcc: sub byte ptr [edx + 1], cl; add byte ptr [esi + ecx], al; int1; call dword ptr [eax + 0x4a]; 
0x000fab43: sub byte ptr [edx + edx - 0x75], dh; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x001707a8: sub byte ptr [edx - 0x15], al; call dword ptr [edx]; 
0x001888d8: sub byte ptr [edx - 0x401ffff], dl; hlt; call dword ptr [eax]; 
0x00191aa9: sub byte ptr [edx], al; add byte ptr [ecx + edi*4 - 0xa], ah; call dword ptr [ecx]; 
0x00191a69: sub byte ptr [edx], al; add byte ptr [edi + esi*4 - 0xa], dh; jmp dword ptr [edi]; 
0x000c5dbd: sub byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x000de1ce: sub byte ptr [esi + 0xc], cl; add byte ptr [edi + 0x10cb8df], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0018e1d8: sub byte ptr [esi + esi*8], cl; call dword ptr [edi]; 
0x0011e5df: sub byte ptr [esi - 0x3d], bl; lea esi, dword ptr [esi]; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], esi; mov dword ptr [esp], eax; call dword ptr [edx + 4]; 
0x00003085: sub byte ptr [esi - 0x413d9d76], ch; pop esp; dec edx; popal; call dword ptr [ecx]; 
0x0017892d: sub ch, bh; jmp dword ptr [ebx]; 
0x00167224: sub ch, byte ptr [esi]; std; dec dword ptr [edx - 0x150002d2]; std; call esp; 
0x0017df28: sub ch, ch; add byte ptr [eax], al; hlt; sbb al, 0xf0; call esp; 
0x000eeaf0: sub ch, cl; sbb byte ptr [ebp + 0x5f], 0x5e; pop ebx; ret; 
0x001668dc: sub ch, dl; cld; inc dword ptr [eax - 0x18]; cld; jmp dword ptr [eax]; 
0x000a7f30: sub cl, al; cli; add eax, 0x291ff8c1; ret 0x1b8; 
0x000fe0c3: sub cl, byte ptr [ebx - 0x12f75]; jmp dword ptr [ebp - 0x75]; 
0x00110d77: sub cl, byte ptr [ebx - 0xf775]; jmp dword ptr [ebp - 0x7d]; 
0x000f0521: sub cl, byte ptr [ebx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000db3ee: sub cl, byte ptr [edi]; xchg eax, esp; ret 0x403c; 
0x00182891: sub cl, dh; jmp esi; 
0x0012b69f: sub dh, ch; dec dword ptr [ebx - 0x76bfdbb4]; inc ecx; adc al, 0xe9; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x0016b389: sub dh, dh; call eax; 
0x0016b379: sub dh, dh; jmp dword ptr [eax + 0xf]; 
0x00071327: sub dh, dh; ret 0xf08; 
0x00149c77: sub dh, dh; ror dword ptr [edi], 0x74; adc eax, dword ptr [ebx - 0x218bfe20]; lea eax, dword ptr [edi - 0x10]; pop edi; ret; 
0x0018dc80: sub dl, 1; add byte ptr [eax + edx*8 - 5], bh; jmp dword ptr [edx]; 
0x0019b534: sub dl, bl; clc; call dword ptr [eax]; 
0x00027283: sub dl, byte ptr [eax]; add byte ptr [ecx + 0x17bd6ec3], al; add byte ptr [ebx - 0x1577d], cl; dec dword ptr [ebx - 0x12f6d]; jmp dword ptr [ebp - 0x75]; 
0x001850a1: sub dl, dh; jmp dword ptr [ecx]; 
0x00026a90: sub dword ptr [eax + 0x65fffffe], 0x448b008b; nop; inc eax; ret; 
0x00027010: sub dword ptr [eax + 0x65fffffe], 0x8b008b; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00026fe0: sub dword ptr [eax + 0x65fffffe], 0x8b008b; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00023bdc: sub dword ptr [eax + 0x65fffffe], 0x8b008b; mov eax, dword ptr [eax + 0x58]; ret; 
0x00031e89: sub dword ptr [eax + 0xf000011], -0x79; insb byte ptr es:[edi], dx; add dword ptr [eax], eax; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x75]; 
0x000fbd70: sub dword ptr [eax + edi - 0x373f0000], 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000fb8d0: sub dword ptr [eax + edi], 0; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x00057886: sub dword ptr [eax + esi*2 - 5], -1; add edx, dword ptr [ebp - 0x106c]; mov dword ptr [ebp - 0x10c8], 1; mov dword ptr [ebp - 0x1080], ecx; jmp edx; 
0x0017b229: sub dword ptr [eax - 0x11], ebp; jmp dword ptr [edx]; 
0x000fbd30: sub dword ptr [eax - 0x3effffc8], -0x38; or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr [esp], edx; call eax; 
0x00042a60: sub dword ptr [eax - 0x72000002], 0x55; mov eax, 0x2b9; add byte ptr [ecx - 0x4a75b], cl; jmp dword ptr [ebp - 0x75]; 
0x00171be9: sub dword ptr [eax], eax; add ah, dh; ret 0xffeb; 
0x0000c975: sub dword ptr [eax], eax; add byte ptr [eax], ah; xchg eax, esp; add dword ptr [eax], eax; ret 1; 
0x000df4b7: sub dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010fb0a: sub dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [edx + 8], ecx; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000081a5: sub dword ptr [eax], eax; add byte ptr [eax], dl; ret; 
0x00112b90: sub dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00083637: sub dword ptr [eax], edi; ret 0x3174; 
0x000cbb57: sub dword ptr [ebx + ecx*4 - 0xe], -1; jmp ecx; 
0x00096fd1: sub dword ptr [ebx - 0x8f75], ecx; jmp dword ptr [ebp - 0x75]; 
0x00133990: sub dword ptr [ebx], eax; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x000f0627: sub dword ptr [ebx], ecx; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0001908c: sub dword ptr [ecx + ecx], 0; mov byte ptr [eax + 0x46], 0xb8; pop ebx; pop esi; ret; 
0x000ddfac: sub dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00169885: sub dword ptr [ecx], eax; add byte ptr [ebp - 0x10], ah; call dword ptr [eax]; 
0x0010eb33: sub dword ptr [ecx], eax; std; jmp dword ptr [esi - 0x39]; 
0x00169e20: sub dword ptr [ecx], esi; int1; jmp esp; 
0x00173dbf: sub dword ptr [edi + 0xd1cffec], ecx; push cs; mov esp, gs; jmp dword ptr [edx]; 
0x0007e1ef: sub dword ptr [edi + edx*4 - 7], -1; pop ebx; ret; 
0x00131f1c: sub dword ptr [edi - 0x7cfffffe], -0x13; adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cfffffe], al; ret 0x8310; 
0x00000444: sub dword ptr [edx], eax; or al, ah; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret 0x3e00; 
0x0008e989: sub dword ptr [esi + 0xc03000c], edi; cdq; jmp ecx; 
0x001406c9: sub dword ptr [esi], eax; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x001406c8: sub dword ptr cs:[esi], eax; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x0009523b: sub eax, 0x10; pop edi; ret; 
0x0016719d: sub eax, 0x2010fffd; std; call eax; 
0x0016719d: sub eax, 0x2010fffd; std; call eax; and bh, ch; jmp dword ptr [eax + 0x23]; 
0x000e6030: sub eax, 0x2346b60f; mov byte ptr [esp + 0x2f], al; xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0016718d: sub eax, 0x2c00fffd; std; jmp dword ptr [eax + 0x2c]; 
0x0016717d: sub eax, 0x2c06fffd; std; jmp dword ptr [esi + 0x2c]; 
0x001670ed: sub eax, 0x2c3cfffd; std; call dword ptr [eax + 0x2c]; 
0x00167291: sub eax, 0x2e00fffd; std; jmp dword ptr [eax + 0x2e]; 
0x00167281: sub eax, 0x2e06fffd; std; jmp dword ptr [esi + 0x2e]; 
0x00167261: sub eax, 0x2e12fffd; std; push dword ptr [edx + 0x2e]; std; call edx; 
0x00167221: sub eax, 0x2e2afffd; std; dec dword ptr [edx - 0x150002d2]; std; call esp; 
0x00167201: sub eax, 0x2e36fffd; std; call dword ptr [esi - 0x90002d2]; std; jmp eax; 
0x001671f1: sub eax, 0x2e3cfffd; std; lcall ptr [esi + ebp + 0x2efcfffd]; std; jmp esi; 
0x0015a651: sub eax, 0x32a0fff3; push dword ptr [eax - 0x3f000cce]; xor dh, bl; call eax; 
0x000fbfd0: sub eax, 0x38; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000ec4c2: sub eax, 0x489fffc; and al, 0xe8; mov bl, 0x24; clc; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x77]; 
0x00070201: sub eax, 0x568b0013; adc al, 0x8b; inc esi; adc byte ptr [ecx], bh; ret 0x3776; 
0x00077bd9: sub eax, 0x5c8b0000; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00126c42: sub eax, 0x81000031; ret; 
0x0011c542: sub eax, 0x810000d8; ret; 
0x00111e42: sub eax, 0x8100017f; ret; 
0x0010f342: sub eax, 0x810001aa; ret; 
0x000f1d42: sub eax, 0x81000380; ret; 
0x000e7c42: sub eax, 0x81000421; ret; 
0x000e5142: sub eax, 0x8100044c; ret; 
0x000c5c42: sub eax, 0x81000641; ret; 
0x000b8a42: sub eax, 0x81000713; ret; 
0x000b8742: sub eax, 0x81000716; ret; 
0x000a3942: sub eax, 0x81000864; ret; 
0x00099d42: sub eax, 0x81000900; ret; 
0x00099c42: sub eax, 0x81000901; ret; 
0x00098942: sub eax, 0x81000914; ret; 
0x00097e42: sub eax, 0x8100091f; ret; 
0x00068b42: sub eax, 0x81000c12; ret; 
0x00034042: sub eax, 0x81000f5d; ret; 
0x0014a542: sub eax, 0x81fffdf8; ret; 
0x00133e42: sub eax, 0x81ffff5f; ret; 
0x00047fb5: sub eax, 0x83000000; ret 0x8904; 
0x0004c3ef: sub eax, 0x830001f5; rol byte ptr [ecx], 0xf; xchg eax, esp; ret 0x97e9; 
0x0003877b: sub eax, 0x83d9fffc; xor al, 0x2d; cld; jmp dword ptr [ebp - 0x39]; 
0x0005cd2f: sub eax, 0x890003cd; ret 0xd7e9; 
0x00116d4f: sub eax, 0x89ffffdd; clc; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0011458f: sub eax, 0x89ffffff; ret 0xc031; 
0x00129d6f: sub eax, 0x8bfffffe; sbb al, 0x24; ret; 
0x0011e5d2: sub eax, 0xc0311372; cmp edx, 2; sete al; add esp, 0x28; pop esi; ret; 
0x0016e4a5: sub eax, 0xcc640003; sti; push dword ptr [eax]; sub eax, 0xccb40003; sti; call dword ptr [eax + 0x2d]; 
0x0016e4ad: sub eax, 0xccb40003; sti; call dword ptr [eax + 0x2d]; 
0x0016e515: sub eax, 0xd0900003; sti; call esp; 
0x00174a98: sub eax, 0xd1cffed; dec esp; sub al, 0xed; jmp dword ptr [edx]; 
0x000710c6: sub eax, 1; add esp, 0x18; pop esi; ret; 
0x000e8441: sub eax, 1; add esp, 0x24; pop ebx; pop esi; ret; 
0x000f6f5a: sub eax, 1; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00101a33: sub eax, 1; pop edi; pop ebp; ret; 
0x0002f851: sub eax, 1; pop esi; pop edi; ret; 
0x0006c06d: sub eax, 1; pop esi; ret; 
0x00082891: sub eax, 1; ret; 
0x00098586: sub eax, 4; pop edi; pop ebp; ret; 
0x0007a48d: sub eax, 8; pop esi; ret; 
0x000b7be9: sub eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00077f39: sub eax, dword ptr [eax]; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x77]; 
0x000278dc: sub eax, dword ptr [ebx + ebp*4 - 0x17b70c]; jmp eax; 
0x00063d3a: sub eax, dword ptr [ebx + ecx*4 - 0x13f2b0]; jmp eax; 
0x000631d2: sub eax, dword ptr [ebx + ecx*4 - 0x13fe18]; jmp eax; 
0x0005c1ba: sub eax, dword ptr [ebx + ecx*4 - 0x146e30]; jmp eax; 
0x001200f3: sub eax, dword ptr [ebx + ecx*4 - 0x82ef4]; shr edx, 3; jmp eax; 
0x000b0c7a: sub eax, dword ptr [ebx + ecx*4 - 0xf2370]; jmp eax; 
0x0009758a: sub eax, dword ptr [ebx + edi*4 - 0x10ba60]; jmp eax; 
0x000dc3a9: sub eax, dword ptr [ebx + edi*4 - 0xc6c40]; jmp eax; 
0x000dbb2a: sub eax, dword ptr [ebx + edi*4 - 0xc74c0]; jmp eax; 
0x0004cb6e: sub eax, dword ptr [ebx + edx*4 - 0x15647c]; jmp eax; 
0x000cb895: sub eax, dword ptr [ebx + edx*4 - 0xd7754]; jmp eax; 
0x0007878a: sub eax, dword ptr [ebx + esi*4 - 0x12a860]; jmp eax; 
0x000bad0a: sub eax, dword ptr [ebx + esi*4 - 0xe82e0]; jmp eax; 
0x000bacaa: sub eax, dword ptr [ebx + esi*4 - 0xe8340]; jmp eax; 
0x000ba2b2: sub eax, dword ptr [ebx + esi*4 - 0xe8d38]; jmp eax; 
0x000b9d6a: sub eax, dword ptr [ebx + esi*4 - 0xe9280]; jmp eax; 
0x000b9d0a: sub eax, dword ptr [ebx + esi*4 - 0xe92e0]; jmp eax; 
0x0016e445: sub eax, dword ptr [ebx]; add ah, dh; ret 0xfffb; 
0x0016e465: sub eax, dword ptr [ebx]; add byte ptr [esp + eax*8], ah; sti; jmp eax; 
0x000e9758: sub eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e6d6f: sub eax, dword ptr [edi + 0x91b8df]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e6e2f: sub eax, dword ptr [edi + 0x92b8df]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e0c1f: sub eax, dword ptr [edi + 0xa8b8df]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000df12f: sub eax, dword ptr [edi + 0xddb8df]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0006a0cb: sub eax, dword ptr [edx + 0x10]; ret; 
0x00069fa1: sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x00069fab: sub eax, dword ptr [edx + 0x1c]; ret; 
0x00073c1e: sub eax, dword ptr [edx + 0xc]; ret; 
0x0006df4a: sub eax, dword ptr [edx + 0xc]; sar eax, 2; mov dword ptr [ecx], eax; xor eax, eax; add esp, 0x1c; ret; 
0x0006a0c1: sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x0007315b: sub eax, dword ptr [edx + 8]; ret; 
0x0006c821: sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x0004b4f1: sub eax, dword ptr [edx + eax]; add byte ptr [ebx - 0x6bf0fe40], al; ret 0x25e9; 
0x0002520a: sub eax, dword ptr [edx]; ret; 
0x0006899d: sub eax, dword ptr [esi + 0x10]; mov esi, dword ptr [esp + 0x18]; mov dword ptr [edx], eax; xor eax, eax; add esp, 0x1c; ret; 
0x00114410: sub eax, dword ptr [esi + 0x30]; mov edi, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; add eax, edx; ret; 
0x001143f1: sub eax, dword ptr [esi + 0xc]; add eax, edx; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0007d056: sub eax, dword ptr [esp + 4]; ret; 
0x0006cebd: sub eax, ebp; mov dword ptr [esp + 8], eax; call dword ptr [edx + 0x38]; 
0x00082dff: sub eax, ebp; mov esi, dword ptr [esp]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000725a9: sub eax, ebp; pop ebp; ret; 
0x00145279: sub eax, ecx; pop ebp; pop ebx; ret; 
0x001403b5: sub eax, ecx; pop ebp; ret; 
0x00142a6c: sub eax, ecx; pop ebx; ret; 
0x0013d77a: sub eax, ecx; pop esi; call 0x129d73; add ebx, 0x2a05e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013c674: sub eax, ecx; pop esi; call 0x129d73; add ebx, 0x2afa4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013b14a: sub eax, ecx; pop esi; call 0x129d73; add ebx, 0x2c24e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00138044: sub eax, ecx; pop esi; call 0x129d73; add ebx, 0x2ee14; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013219f: sub eax, ecx; pop esi; pop edi; pop ebp; pop ebx; ret; 
0x00130621: sub eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x00131c3b: sub eax, ecx; pop esi; pop edi; pop ebx; ret; 
0x0013032d: sub eax, ecx; pop esi; pop edi; ret; 
0x0013ec08: sub eax, ecx; ret; 
0x00083f97: sub eax, edi; bsf edx, edx; add eax, edx; pop edi; pop esi; ret; 
0x000e154d: sub eax, edi; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000716ef: sub eax, edi; pop edi; pop ebp; ret; 
0x00095d4d: sub eax, edi; pop esi; pop edi; ret; 
0x0006fffe: sub eax, edx; mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], eax; mov dword ptr [esp], ebp; call ecx; 
0x0011495f: sub eax, edx; mov dword ptr [esp + 8], eax; mov dword ptr [esp + 4], ebp; mov eax, dword ptr [esi]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x00082e4f: sub eax, edx; mov esi, dword ptr [esp]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00146889: sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00132455: sub eax, edx; pop esi; pop edi; pop ebp; ret; 
0x00032fcb: sub eax, edx; ret; 
0x0002d7a3: sub eax, edx; sar eax, 0x10; ret; 
0x0006c068: sub eax, edx; sar eax, 2; sub eax, 1; pop esi; ret; 
0x0002d249: sub eax, edx; shr eax, 0x1f; ret; 
0x00072aa8: sub eax, edx; sub eax, 1; pop esi; ret; 
0x0008288f: sub eax, edx; sub eax, 1; ret; 
0x000ab499: sub eax, edx; sub ecx, eax; mov dword ptr [esi + 0x18], ecx; mov esi, dword ptr [esp + 0x10]; add esp, 0x1c; ret; 
0x000e2694: sub eax, esi; mov esi, dword ptr [esp + 8]; mov edi, dword ptr [esp + 0xc]; mov ebp, dword ptr [esp + 0x10]; add esp, 0x14; ret; 
0x00067c5d: sub eax, esi; pop esi; pop edi; pop ebp; ret; 
0x000a572e: sub ebp, eax; mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x0016d178: sub ebp, eax; stc; jmp dword ptr [eax]; 
0x001671d5: sub ebp, edi; jmp dword ptr [eax]; 
0x0008d1e6: sub ebx, 0x10; bsf edx, edx; call 0x129d77; add ecx, 0xcd3df; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0017b0d3: sub ebx, dword ptr [ebp + 0xd1cffef]; mov dword ptr [ebp - 0x11], ecx; jmp dword ptr [edx]; 
0x0015891d: sub ebx, dword ptr [ebx - 0xb]; pop ebx; and dword ptr [esi + ebp*2 - 0x7a], edi; lahf; ret 0x871e; 
0x000b5151: sub ebx, dword ptr [ebx]; pop es; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp + 3]; 
0x00002fbb: sub ebx, dword ptr [esp + eax*2]; nop; ret 0x5bdb; 
0x00094988: sub ebx, ecx; add esi, ecx; call 0x129d77; add ecx, 0xc5ff3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094968: sub ebx, ecx; add esi, ecx; call 0x129d77; add ecx, 0xc6013; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e9e8: sub ebx, ecx; add esi, ecx; call 0x129d77; add ecx, 0xcbdbf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008e9c8: sub ebx, ecx; add esi, ecx; call 0x129d77; add ecx, 0xcbddf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d3a8: sub ebx, ecx; add esi, ecx; call 0x129d77; add ecx, 0xcd29f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d388: sub ebx, ecx; add esi, ecx; call 0x129d77; add ecx, 0xcd2bf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0007841e: sub ecx, dword ptr [ebx + eax*4 - 0x12abcc]; jmp ecx; 
0x00129bea: sub ecx, dword ptr [ebx + eax*4 - 0x79400]; jmp ecx; 
0x00116002: sub ecx, dword ptr [ebx + eax*4 - 0x8cfe8]; jmp ecx; 
0x000cbb55: sub ecx, dword ptr [ebx + eax*4 - 0xd7494]; jmp ecx; 
0x000c1f7d: sub ecx, dword ptr [ebx + eax*4 - 0xe106c]; jmp ecx; 
0x000c06a2: sub ecx, dword ptr [ebx + eax*4 - 0xe2948]; jmp ecx; 
0x000ac915: sub ecx, dword ptr [ebx + eax*4 - 0xf66d4]; jmp ecx; 
0x000ac83d: sub ecx, dword ptr [ebx + eax*4 - 0xf67ac]; jmp ecx; 
0x000d6e1e: sub ecx, dword ptr [ebx + ebp*4 - 0xcc1cc]; jmp ecx; 
0x000d436d: sub ecx, dword ptr [ebx + edx*4 - 0xcec7c]; jmp ecx; 
0x00100ff4: sub ecx, dword ptr [ebx - 0x136d]; jmp dword ptr [ebp - 0x75]; 
0x000f0421: sub ecx, dword ptr [ebx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ab49b: sub ecx, eax; mov dword ptr [esi + 0x18], ecx; mov esi, dword ptr [esp + 0x10]; add esp, 0x1c; ret; 
0x0002d259: sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x00095094: sub edi, 0x10; add eax, edi; pop edi; ret; 
0x001144e6: sub edi, eax; mov dword ptr [esp + 4], eax; mov eax, dword ptr [esi]; mov dword ptr [esp + 8], edi; mov dword ptr [esp], eax; call dword ptr [esi + 8]; 
0x0014b3c3: sub edi, ebx; jmp dword ptr [ebp - 0x75]; 
0x00024396: sub edi, edi; dec dword ptr [ebx - 0xf77d]; push dword ptr [ecx]; jmp dword ptr [ebp - 0x39]; 
0x00194c31: sub edi, esi; call dword ptr [ecx]; 
0x00194dc5: sub edi, esi; call ebx; 
0x00194da1: sub edi, esi; jmp dword ptr [ebx]; 
0x000a7b0d: sub edi, esi; mov esi, dword ptr [esp + 0x24]; div edi; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000f7321: sub edi, esp; int1; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0011bb0a: sub edx, 1; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x0010fd8f: sub edx, 1; mov byte ptr [ecx + 1], dl; ret; 
0x00073175: sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0006c128: sub edx, dword ptr [eax + 4]; mov eax, dword ptr [ecx + 8]; sar edx, 2; sub eax, edx; ret; 
0x0006c117: sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sar edx, 2; sub eax, edx; ret; 
0x00073180: sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x00027262: sub edx, dword ptr [eax]; add byte ptr [ecx + 0x17bd8fc1], al; add byte ptr [ebx - 0x8f7f], cl; jmp dword ptr [ebp + 3]; 
0x00027242: sub edx, dword ptr [eax]; add byte ptr [ecx + 0x17bdafc1], al; add byte ptr [ebx - 0xbf7f], cl; jmp dword ptr [ebp + 3]; 
0x00027222: sub edx, dword ptr [eax]; add byte ptr [ecx + 0x17bdcfc1], al; add byte ptr [ebx - 0x12f7f], cl; jmp dword ptr [ebp + 3]; 
0x0001a2ea: sub edx, dword ptr [ebx + eax*4 - 0x188d00]; jmp edx; 
0x001195b9: sub edx, dword ptr [ebx + eax*4 - 0x89a30]; jmp edx; 
0x00083069: sub edx, dword ptr [ebx + edi*4 - 0x11ff80]; jmp edx; 
0x000711e2: sub edx, eax; mov dword ptr [esp + 8], edx; call dword ptr [ecx + 0x38]; 
0x000e6aa4: sub edx, eax; mov eax, edx; pop ebx; ret; 
0x000a565c: sub edx, eax; pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x0002f766: sub edx, eax; shr eax, 2; lea eax, dword ptr [eax + eax*8 + 6]; call 0x2f730; jmp eax; 
0x00094828: sub edx, ecx; call 0x129d77; add ecx, 0xc60d5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00091528: sub edx, ecx; call 0x129d77; add ecx, 0xc9355; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008e83a: sub edx, ecx; call 0x129d77; add ecx, 0xcbeef; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008d20a: sub edx, ecx; call 0x129d77; add ecx, 0xcd3bf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00042fd4: sub edx, ecx; mov dword ptr [esp + 8], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0002d751: sub edx, ecx; not eax; and eax, edx; ret; 
0x00056a56: sub edx, ecx; sar edx, 2; mov dword ptr [esp + 8], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x0016d721: sub edx, edi; jmp esp; 
0x00044116: sub edx, edi; mov dword ptr [esp + 8], edx; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; mov dword ptr [ebp - 0x57c], edx; call dword ptr [eax + 0x1c]; 
0x0016d719: sub edx, edi; push dword ptr [edi + ebx*8 + 0x29e50002]; cli; jmp esp; 
0x001850f5: sub edx, esi; call dword ptr [edi]; 
0x001115de: sub edx, esi; dec dword ptr [ebx - 0x12f6d]; jmp dword ptr [ebp - 0x75]; 
0x001850e1: sub edx, esi; jmp dword ptr [edx]; 
0x00119a42: sub esi, dword ptr [ebx + eax*4 - 0x895a8]; jmp esi; 
0x0011a462: sub esi, dword ptr [ebx + ecx*4 - 0x88b88]; jmp esi; 
0x00113262: sub esi, dword ptr [ebx + ecx*4 - 0x8fd88]; jmp esi; 
0x00074f6e: sub esi, eax; mov dword ptr [esp], esi; call dword ptr [edx]; 
0x0002f764: sub esi, eax; sub edx, eax; shr eax, 2; lea eax, dword ptr [eax + eax*8 + 6]; call 0x2f730; jmp eax; 
0x0016a811: sub esi, ebx; dec eax; ret; 
0x0014a2a4: sub esi, ebx; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00165de8: sub esi, ecx; cld; dec dword ptr [ecx - 0x32]; cld; jmp esi; 
0x0011f395: sub esi, ecx; mov dword ptr [edx + 0x14], esi; add ecx, eax; mov dword ptr [edx + 0xc], ecx; pop esi; ret; 
0x00194c5d: sub esi, edi; call dword ptr [eax]; 
0x00194ea9: sub esi, edi; call esi; 
0x00198982: sub esi, edi; jmp dword ptr [edx]; 
0x000c5c69: sub esi, edx; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x0018ef9d: sub esi, esi; call dword ptr [ebx]; 
0x0018efc9: sub esi, esi; call dword ptr [edi + 1]; 
0x00194026: sub esi, esi; jmp dword ptr [edx]; 
0x0016b381: sub esi, esi; lcall ptr [eax + 0x6400020f]; sub dh, dh; call eax; 
0x0002e35f: sub esp, -0x80; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0012061f: sub esp, 0x10; add esp, 0x18; pop esi; ret; 
0x00120697: sub esp, 0x10; add esp, 0x28; pop ebx; ret; 
0x001216a3: sub esp, 0x14; add esp, 0x24; pop esi; pop edi; ret; 
0x000d82f7: sub esp, 0x14; add esp, 0x2c; ret; 
0x0006b8e1: sub esp, 0x18; mov esi, dword ptr [esp + 0x20]; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000d838b: sub esp, 0x1c; add esp, 0x2c; ret; 
0x000ea0f5: sub esp, 0x1e; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x000fefcc: sub esp, 0x65ffffff; mov eax, dword ptr [eax]; ret; 
0x0011c3cb: sub esp, 0xc; add esp, 0x1c; ret; 
0x000fd410: sub esp, 0xc; call 0xb9030; add esp, 0xc; and eax, 0xffff; ret; 
0x00103522: sub esp, 0xc; xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000b3977: sub esp, 4; add esp, 0x18; pop ebx; ret; 
0x0012eacd: sub esp, 4; add esp, 0x1c; ret; 
0x000f2090: sub esp, 4; xor edx, edx; mov eax, dword ptr [esp + 0x44]; call 0xf1f70; add esp, 4; ret; 
0x000ab394: sub esp, 8; add esp, 0x18; pop ebx; ret; 
0x000e25c1: sub esp, 8; add esp, 0x1c; ret; 
0x001264fc: sub esp, 8; call 0x124780; add esp, 8; pop ebx; ret; 
0x001264dc: sub esp, 8; call 0x1249b0; add esp, 8; pop ebx; ret; 
0x0012651c: sub esp, 8; call 0x124ae0; add esp, 8; pop ebx; ret; 
0x0003382c: sub esp, 8; call 0x33300; add esp, 8; pop ebx; ret; 
0x000ea0ec: sub esp, 8; call 0xe9e20; mov dword ptr [ebx + 0x1eec], eax; add esp, 8; pop ebx; ret; 
0x000b39b1: sub esp, 8; mov edx, dword ptr [esp + 0x10]; call 0xb3930; add esp, 8; pop ebx; ret; 
0x00127552: sub esp, 8; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 4; 
0x0002b8d0: syscall; 
0x0008ed9d: sysret; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0016dcb8: test ah, ah; cli; jmp esp; 
0x000f7a49: test ah, al; add byte ptr [eax], al; add byte ptr [ebx + 0x518b1445], cl; adc al, 0x39; ret 0xa7d; 
0x0004c6f3: test ah, ch; add byte ptr [eax], al; add dh, dh; ret 0xf80; 
0x000a3a39: test ah, cl; add byte ptr [eax], al; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x00131fe0: test ah, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x00179a31: test al, 0; add ah, cl; pop eax; out dx, eax; jmp dword ptr [ebx]; 
0x00179af5: test al, 0; add al, ch; pop ebp; out dx, eax; jmp dword ptr [ecx]; 
0x0002e84f: test al, 0; add byte ptr [eax], al; add esp, 0xac; ret; 
0x000e0c23: test al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00148a24: test al, 0; add byte ptr [eax], al; lea eax, dword ptr [edx + 7]; ret; 
0x0002f13a: test al, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x14], eax; xchg edi, ebx; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0011b3d6: test al, 0; add byte ptr [eax], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], 6; mov dword ptr [esp], eax; call dword ptr [edx + 0x14]; 
0x001683cd: test al, 0; add byte ptr [esp + edi*2 - 0x14], dh; jmp dword ptr [eax - 0x58]; 
0x00179f91: test al, 0; add dl, al; xchg eax, ebp; out dx, eax; call dword ptr [eax]; 
0x0018ca4d: test al, 0x10; cmc; jmp dword ptr [edx]; 
0x00188c18: test al, 0x1c; hlt; jmp dword ptr [ecx]; 
0x0016709c: test al, 0x20; std; push dword ptr [edx + 0x2fffd1f]; and ch, bh; call dword ptr [edx + 0x20]; 
0x0016e2e4: test al, 0x21; add eax, dword ptr [eax]; and al, 0x7f; sti; call esp; 
0x000ff6f7: test al, 0x2e; add byte ptr [eax], al; ror edx, 9; xor edx, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x00003d92: test al, 0x35; mov byte ptr [0x5393558d], al; inc eax; or byte ptr fs:[ebx + 0x4e], ch; ret 0x6bba; 
0x00178d88: test al, 0x37; out dx, eax; call dword ptr [edx]; 
0x000fbd31: test al, 0x38; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x00000572: test al, 0x39; mov al, 4; or byte ptr [eax - 0x7f7fdec0], al; pushal; ret 0x2096; 
0x0016e85c: test al, 0x41; add eax, dword ptr [eax]; inc esp; and bh, ah; call esp; 
0x001734a8: test al, 0x42; add byte ptr [eax], al; aam 7; in al, dx; call dword ptr [edi]; 
0x00035b44: test al, 0x63; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0011fda4: test al, 0x71; out dx, eax; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00176fa8: test al, 0x7d; add byte ptr [eax], al; xor al, 0xb; out dx, eax; call esp; 
0x001874a8: test al, 0x82; add dword ptr [eax], eax; or dh, bl; jmp dword ptr [ebp + 2]; 
0x001778a8: test al, 0x86; add byte ptr [eax], al; sbb edi, ebp; call dword ptr [esi]; 
0x0002e979: test al, 0x8d; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x0009dda4: test al, 0x8e; clc; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x0016ca7c: test al, 0x90; add al, byte ptr [eax]; test byte ptr [edi], al; stc; call esp; 
0x001591d7: test al, 0x97; xchg eax, esp; ret; 
0x001791a8: test al, 0x9f; add byte ptr [eax], al; mov ah, 0x50; out dx, eax; call dword ptr [ecx]; 
0x001945d8: test al, 0xa7; stc; call dword ptr [ebx]; 
0x00168464: test al, 0xac; add byte ptr [eax], al; add al, 0x96; in al, dx; call eax; 
0x0018a3a8: test al, 0xb1; add dword ptr [eax], eax; aam 0xf2; hlt; jmp dword ptr [ebx]; 
0x0018b3a8: test al, 0xc1; add dword ptr [eax], eax; movsb byte ptr es:[edi], byte ptr [esi]; push edi; cmc; call dword ptr [ebx]; 
0x00176535: test al, 0xc1; out dx, al; jmp dword ptr [edx]; 
0x0018bba8: test al, 0xc9; add dword ptr [eax], eax; push esp; xchg eax, ebx; cmc; call dword ptr [ecx]; 
0x00175349: test al, 0xd5; in eax, dx; jmp dword ptr [edx]; 
0x0019b474: test al, 0xda; clc; call dword ptr [eax]; 
0x00184d08: test al, 0xda; cli; call dword ptr [ecx + 3]; 
0x00184d08: test al, 0xda; cli; call dword ptr [ecx + 3]; bound ecx, qword ptr [esi]; or byte ptr [ebx + 0x40e5f02], al; ret; 
0x0016eacc: test al, 0xdc; add al, byte ptr [eax]; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; jmp dword ptr [eax]; 
0x00174366: test al, 0xec; jmp dword ptr [edx]; 
0x0018545d: test al, 0xf1; jmp dword ptr [edx]; 
0x0009c3f3: test al, 0xf8; jmp dword ptr [esi - 0x70]; 
0x000eca2a: test al, 0xfb; dec dword ptr [ebp - 0x4385d7d]; dec dword ptr [edi]; inc esp; ret 0x7c89; 
0x00066a7a: test al, 0xfc; dec dword ptr [ebp + 0x468b0076]; or byte ptr [ebx], ch; inc esi; add al, 0x89; ret 0xfac1; 
0x0017afba: test al, 0xfc; jmp dword ptr [edx]; 
0x00051ff3: test al, 0xff; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x000bc916: test al, 0xff; inc dword ptr [ebp - 0x147bf040]; add al, byte ptr [eax]; add byte ptr [ebx - 0x12f73], cl; jmp dword ptr [ebp - 0x7d]; 
0x000e7e05: test al, 1; add byte ptr [eax], al; add esp, 0x1ac; ret; 
0x0016ce5d: test al, 2; add ah, ah; xchg ecx, edi; call esp; 
0x00199a19: test al, 2; add byte ptr [ecx + ebx*2 - 8], ah; jmp dword ptr [ecx]; 
0x000ef544: test al, 3; add byte ptr [ecx + 0xb3aadc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef502: test al, 3; add byte ptr [ecx + 0xb3aefc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef4c2: test al, 3; add byte ptr [ecx + 0xb3b2fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef482: test al, 3; add byte ptr [ecx + 0xb3b6fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000df554: test al, 4; add byte ptr [ecx + 0xc3a9dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000df512: test al, 4; add byte ptr [ecx + 0xc3adfc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000df4ce: test al, 4; add byte ptr [ecx + 0xc3b23c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00173518: test al, 8; in al, dx; call dword ptr [esi]; 
0x0008f539: test al, 9; add byte ptr [ecx + 0xcb304c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008f526: test al, 9; add byte ptr [ecx + 0xcb317c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008f50a: test al, 9; add byte ptr [ecx + 0xcb333c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000d2487: test al, ah; add eax, dword ptr [eax]; add dh, dh; ret 0xf08; 
0x001687b8: test al, ah; in al, dx; call eax; 
0x000b5148: test al, bh; add byte ptr [eax], al; add byte ptr [ecx + 0x2be82404], cl; sbb eax, dword ptr [edi]; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp + 3]; 
0x0016c4b9: test al, bh; jmp eax; 
0x000ad9a1: test al, bh; or dword ptr [eax], eax; add dh, dh; ret 0x7518; 
0x0016b220: test al, bl; cmc; call dword ptr [eax]; 
0x00168df0: test al, bl; out dx, eax; call dword ptr [eax - 0x1a]; 
0x001229a0: test al, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0xf775], cl; push dword ptr [ecx]; jmp dword ptr [ebp - 0x39]; 
0x0019b984: test bh, al; add al, byte ptr [eax]; sbb bl, dl; clc; jmp dword ptr [eax]; 
0x00131903: test bh, bh; inc dword ptr [ecx + 0x716eec3]; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x00168798: test bh, bl; in al, dx; call dword ptr [eax - 0x43]; 
0x00168c38: test bh, bl; out dx, al; jmp dword ptr [eax]; 
0x0017a855: test bh, ch; jmp dword ptr [ecx + 1]; 
0x0017bdfa: test bh, ch; jmp dword ptr [edx]; 
0x000882f4: test bh, dl; idiv bh; inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0016e349: test bl, bh; call dword ptr [eax + 0x4000323]; test ebx, edi; jmp esp; 
0x000e32f8: test bl, bh; dec dword ptr [ebp - 0x47bbb7d]; dec dword ptr [edi]; inc esp; ret 0x45f6; 
0x000e2178: test bl, bh; dec dword ptr [ebp - 0x47bf37d]; dec dword ptr [edi]; inc esp; ret 0x45f6; 
0x000e217e: test bl, bh; dec dword ptr [edi]; inc esp; ret 0x45f6; 
0x000c25da: test bl, bl; add al, 0; add byte ptr [ecx], bh; ret 0x860f; 
0x000bc91c: test bl, ch; add al, byte ptr [eax]; add byte ptr [ebx - 0x12f73], cl; jmp dword ptr [ebp - 0x7d]; 
0x000bf69c: test bl, ch; add al, byte ptr [eax]; add byte ptr [ebx - 0x13f73], cl; jmp dword ptr [ebp - 0x7d]; 
0x00169c94: test byte ptr [0x2e5a0001], dh; int1; push dword ptr [ebp + esi + 0x2e6a0001]; int1; jmp esp; 
0x000dc79e: test byte ptr [0x89ffffff], dh; ret 0x848b; 
0x0006db91: test byte ptr [0x94], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x48]; 
0x0006fef5: test byte ptr [0x94], al; mov dword ptr [esp + 4], esi; mov dword ptr [esp + 8], edi; mov dword ptr [esp + 0xc], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x0016d6a0: test byte ptr [0xe03cfffa], bl; add al, byte ptr [eax]; add al, 0x1e; cli; jmp dword ptr [eax - 0x20]; 
0x00026fee: test byte ptr [eax + 0x200], dl; ret; 
0x00130591: test byte ptr [eax + eax - 0x127d0000], bl; or byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x0007c440: test byte ptr [eax + eax - 0x8be0000], dl; ret 3; 
0x0004b4a0: test byte ptr [eax + eax*4], ah; add byte ptr [eax], al; add byte ptr [ebp - 0x57c2fb0], cl; or dword ptr [edi], ecx; xchg eax, edi; ret 0xe083; 
0x0003833f: test byte ptr [eax + eax*4], ah; add byte ptr [eax], al; add byte ptr [ecx], ch; mov dword ptr [ebp - 0x5a71f001], 0x89fffffe; ret 0x18e9; 
0x000da728: test byte ptr [eax + eax], 0x81; ret; 
0x0011565b: test byte ptr [eax + eax], al; add byte ptr [ebx + 0x48824ac], cl; add byte ptr [eax], al; add esp, 0x48c; ret; 
0x001491a1: test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x0002f138: test byte ptr [eax + ebp*4], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x78ebdbbc], cl; fistp qword ptr [eax + 0xb2]; call dword ptr gs:[0x10]; 
0x00069522: test byte ptr [eax + ecx*8], ah; add byte ptr [eax], al; add byte ptr [ebx + 0x468b0c4e], cl; or byte ptr [ecx + 0x29cd29d5], cl; ret 0xe75; 
0x000e5326: test byte ptr [eax + edi], ah; add al, 0; add byte ptr [ecx], cl; ret 0x850f; 
0x000fb7df: test byte ptr [eax + edx*2 + 1], 0x40; setne al; movzx eax, al; pop ebx; ret; 
0x0017deec: test byte ptr [eax + esi*8], bl; jmp dword ptr [edx]; 
0x00179bbc: test byte ptr [eax - 0x11], ah; jmp dword ptr [edx + 5]; 
0x0005fc1f: test byte ptr [eax - 0x1600002b], ch; ret; 
0x00149151: test byte ptr [eax - 0x48000000], bh; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0017af34: test byte ptr [eax - 0x6520000], bh; out dx, eax; call dword ptr [eax]; 
0x000dab5b: test byte ptr [eax - 0x74ffffff], bl; inc ebp; ror byte ptr [ebx - 0x2f083b83], 1; ret 0x5489; 
0x001118bb: test byte ptr [eax - 0x75000000], bh; inc esi; adc byte ptr [ebp - 0x76dbdb94], cl; cmp al, 0x24; call dword ptr [eax + 0x10]; 
0x00116933: test byte ptr [eax - 0x75000000], cl; test dword ptr [eax - 0x77000000], esi; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x00110a3b: test byte ptr [eax - 0x77000000], dh; stc; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000ba1ca: test byte ptr [eax], 0; add byte ptr [edi], cl; xchg ah, bl; add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x0006aa44: test byte ptr [eax], 0x10; setne al; movzx eax, al; ret; 
0x0006aa54: test byte ptr [eax], 0x20; setne al; movzx eax, al; ret; 
0x00069ff4: test byte ptr [eax], 4; sete al; movzx eax, al; ret; 
0x0006a004: test byte ptr [eax], 8; sete al; movzx eax, al; ret; 
0x00131318: test byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [ebx - 0x8f55], cl; jmp dword ptr [ebp - 0x75]; 
0x000b92a7: test byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011186f: test byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 4]; 
0x0011b77f: test byte ptr [eax], al; add byte ptr [eax], al; mov eax, edx; pop ebx; pop edi; ret; 
0x000987cf: test byte ptr [eax], al; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x88]; add esp, 0x8c; ret; 
0x000196d9: test byte ptr [eax], al; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x88]; add esp, 0x8c; ret; 
0x000f0d98: test byte ptr [eax], al; add byte ptr [eax], al; shl edx, 0x18; or eax, edx; add esp, 0x7c; ret; 
0x0007a048: test byte ptr [eax], al; add cl, ch; ret 0xfffe; 
0x0000052c: test byte ptr [eax], al; and esp, dword ptr [eax]; add dh, ah; ret 0xad0; 
0x00047358: test byte ptr [eax], bh; ret 0xffff; 
0x0002720f: test byte ptr [eax], dl; add dword ptr [eax], eax; add byte ptr [ebx], ah; inc esp; and al, 8; ret; 
0x001199e8: test byte ptr [ebp + 0x27bc], 0; add bl, dh; ret; 
0x00032d48: test byte ptr [ebp + 0x27bc], 0; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000f70; ret; 
0x00087678: test byte ptr [ebp + 0x27bc], 0; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; pop ebx; ret; 
0x0011d1c8: test byte ptr [ebp + 0x5c8bffef], bl; and al, 0x10; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0011abcc: test byte ptr [ebp - 0x74000003], dl; dec ebp; or byte ptr [ebx + 0x20508b01], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x000243bc: test byte ptr [ebp - 0x76000003], dl; ret 0x838d; 
0x000eaf29: test byte ptr [ebp - 0x76d58b40], 0xf0; mov ebx, dword ptr [esp + 0x70]; mov esi, dword ptr [esp + 0x74]; mov edi, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x0007562b: test byte ptr [ebp - 0x76fffffb], bh; ret 0xd285; 
0x000e681e: test byte ptr [ebp - 0x7d000000], al; clc; add al, 0x74; push 0x7401f883; and ecx, dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x00178d84: test byte ptr [ebx + 0x37a80000], bl; out dx, eax; call dword ptr [edx]; 
0x00095120: test byte ptr [ebx + 1], bl; add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x0011a798: test byte ptr [ebx + 3], bl; add byte ptr [eax], al; mov eax, dword ptr [esi + 0x3c]; mov ecx, dword ptr [ebp - 0xbc]; mov dword ptr [esp], ecx; call dword ptr [eax + 0x10]; 
0x0016e048: test byte ptr [ebx + edi*8 - 1], dl; cld; adc eax, 0x54c40003; sti; jmp dword ptr [eax]; 
0x0009758b: test byte ptr [ebx - 0x10ba60], bh; jmp eax; 
0x0007878b: test byte ptr [ebx - 0x12a860], dh; jmp eax; 
0x00063d3b: test byte ptr [ebx - 0x13f2b0], cl; jmp eax; 
0x000631d3: test byte ptr [ebx - 0x13fe18], cl; jmp eax; 
0x0005c1bb: test byte ptr [ebx - 0x146e30], cl; jmp eax; 
0x0004cb6f: test byte ptr [ebx - 0x15647c], dl; jmp eax; 
0x000278dd: test byte ptr [ebx - 0x17b70c], ch; jmp eax; 
0x0002e1eb: test byte ptr [ebx - 0x3c7efff1], bh; add eax, 0x8700174e; sar dword ptr [eax + 0xb0], cl; call dword ptr gs:[0x10]; 
0x00145273: test byte ptr [ebx - 0x567f4], al; sub eax, ecx; pop ebp; pop ebx; ret; 
0x00142a66: test byte ptr [ebx - 0x567f4], al; sub eax, ecx; pop ebx; ret; 
0x0001b31e: test byte ptr [ebx - 0x74fffffa], cl; dec ebp; aam 0x6b; ret 0x8d3c; 
0x0012ba79: test byte ptr [ebx - 0x76dbdba4], 0xf0; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x0013059a: test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x001200f4: test byte ptr [ebx - 0x82ef4], cl; shr edx, 3; jmp eax; 
0x0017b234: test byte ptr [ebx - 0x8930000], bh; out dx, eax; call dword ptr [eax]; 
0x0002e9c0: test byte ptr [ebx - 0xa000000], al; ret 0x8901; 
0x000dc3aa: test byte ptr [ebx - 0xc6c40], bh; jmp eax; 
0x000dbb2b: test byte ptr [ebx - 0xc74c0], bh; jmp eax; 
0x000cb896: test byte ptr [ebx - 0xd7754], dl; jmp eax; 
0x000bad0b: test byte ptr [ebx - 0xe82e0], dh; jmp eax; 
0x000bacab: test byte ptr [ebx - 0xe8340], dh; jmp eax; 
0x000ba2b3: test byte ptr [ebx - 0xe8d38], dh; jmp eax; 
0x000b9d6b: test byte ptr [ebx - 0xe9280], dh; jmp eax; 
0x000b9d0b: test byte ptr [ebx - 0xe92e0], dh; jmp eax; 
0x000b0c7b: test byte ptr [ebx - 0xf2370], cl; jmp eax; 
0x000ba019: test byte ptr [ebx - 0xf76d], cl; dec dword ptr [ebp - 0x43f737d]; jmp dword ptr [ebp - 0x75]; 
0x00128c6b: test byte ptr [ebx - 0xf76eb3c], 0x5b; pop esi; ret; 
0x000980f1: test byte ptr [ebx - 0xf76eb3c], 0x5e; pop edi; ret; 
0x000ceca1: test byte ptr [ebx - 0xf76ef3c], 0x5e; pop edi; pop ebp; ret 8; 
0x000b691b: test byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x75]; 
0x00167554: test byte ptr [ebx - 3], cl; push dword ptr [esp + ecx*2]; std; jmp esp; 
0x0019601c: test byte ptr [ebx - 9], bl; jmp esp; 
0x00182d84: test byte ptr [ebx], bh; add dword ptr [eax], eax; cmp byte ptr [edi], ch; int1; call dword ptr [esi]; 
0x0012f79a: test byte ptr [ebx], cl; mov al, 0x75; sti; jmp dword ptr [esi + 0xf]; 
0x0007b52d: test byte ptr [ecx + 0x245c8bf0], 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00082f16: test byte ptr [ecx + 0x247c8bf0], 4; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x00179b84: test byte ptr [ecx + 0x60480000], ch; out dx, eax; call dword ptr [eax]; 
0x0016a300: test byte ptr [ecx + 0x6630fff1], cl; add dword ptr [eax], eax; mov ah, 0x89; int1; call dword ptr [eax + 0x66]; 
0x0016c1ec: test byte ptr [ecx + 2], ah; add byte ptr [ebp + ebx*2 - 8], dh; call eax; 
0x0004b638: test byte ptr [ecx + 2], ch; add byte ptr [ebx - 0x7cd3dbb4], cl; rol byte ptr [ecx], 0xf; xchg eax, esp; ret 0x97e9; 
0x000f7230: test byte ptr [ecx + eax*2 + 1], 0x40; cmove eax, edx; ret; 
0x0012bbda: test byte ptr [ecx - 0x75000000], bh; dec esi; or bh, dh; ret 0x202; 
0x001331e1: test byte ptr [ecx - 0x769905be], 0x42; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00099332: test byte ptr [ecx - 0x7b000000], cl; ror byte ptr [edi], 0x95; ret 0xf883; 
0x000b352a: test byte ptr [ecx - 0x7d000000], cl; mov byte ptr [ecx], 0x83; ret 0x3b34; 
0x00045262: test byte ptr [ecx - 0x7d000000], dh; ret 0x8301; 
0x001888cd: test byte ptr [ecx - 0xc], bl; jmp dword ptr [edx]; 
0x0016af2d: test byte ptr [ecx], 0; mov ch, 0xf6; hlt; call esp; 
0x00047bf3: test byte ptr [ecx], 0xc1; pop esi; mov eax, ecx; pop edi; pop ebp; ret; 
0x000b937d: test byte ptr [ecx], 7; add byte ptr [ecx + 0xe9c73c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0006b35a: test byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00146c58: test byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; ret; 
0x000d31f1: test byte ptr [ecx], al; add dword ptr [eax], eax; add byte ptr [eax - 0x74808bfe], ch; outsb dx, byte ptr [esi]; sub al, 0xe9; ret; 
0x001858b2: test byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00199f8e: test byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0008834a: test byte ptr [ecx], dl; idiv bh; inc dword ptr [eax + 0xf000a79]; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0012fd19: test byte ptr [edi - 0x76ffffff], bl; ret 0xe281; 
0x001302ac: test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x0002848b: test byte ptr [edi - 0x7d000000], dl; ret 0xe901; 
0x0008ecb6: test byte ptr [edi], 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0007fd51: test byte ptr [edi], 0x45; ret 0xc483; 
0x000c55dc: test byte ptr [edi], 0x49; into; xchg edi, ebx; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000e23ad: test byte ptr [edi], 0x84; push ebx; add dword ptr [eax], eax; add byte ptr [ebx - 0xab7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000e352d: test byte ptr [edi], 0x84; push ebx; add dword ptr [eax], eax; add byte ptr [ebx - 0xbb7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0006ea4a: test byte ptr [edi], 0x84; ret 0; 
0x00122c7f: test byte ptr [edi], 0x84; ret 1; 
0x000d9dd0: test byte ptr [edi], 0x84; ret; 
0x000194b7: test byte ptr [edi], 0x85; ret 0; 
0x000d3ac4: test byte ptr [edi], 0x85; ret; 
0x000dbd5a: test byte ptr [edi], 0x94; ret 0xc984; 
0x000c8b1c: test byte ptr [edi], 0x95; ret 0xd021; 
0x000a4c62: test byte ptr [edi], 0x95; ret 0xd029; 
0x000d6da2: test byte ptr [edi], 0x95; ret 0xe083; 
0x001468f3: test byte ptr [edi], 0xb6; push esi; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0011b2bc: test byte ptr [edi], al; add dword ptr [eax], eax; add byte ptr [ebx + 0x20508b00], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x00088354: test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0016ca80: test byte ptr [edi], al; stc; call esp; 
0x000724a1: test byte ptr [edi], al; xchg eax, esp; add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbac], cl; cmp al, 0x24; call dword ptr [eax + 0xc]; 
0x001680d8: test byte ptr [edi], bh; in al, dx; call dword ptr [eax - 0x65]; 
0x00123def: test byte ptr [edi], bl; add byte ptr [ecx + 0x7f201c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00059906: test byte ptr [edi], bl; add dword ptr [eax], eax; add byte ptr [ebx - 0x10a343], al; call dword ptr [eax]; 
0x00080224: test byte ptr [edi], dh; add dword ptr [eax], eax; add byte ptr [ebx + 0x1242454], cl; ret 0x442b; 
0x000e3467: test byte ptr [edi], dl; add dword ptr [eax], eax; add byte ptr [ebx - 0xc77b], cl; dec dword ptr [ecx + 0x26e82404]; ret 0xffff; 
0x00029faa: test byte ptr [edx + 0x31000003], bl; shr cl, cl; stc; idiv bh; jmp dword ptr [esi - 0x70]; 
0x000db3e0: test byte ptr [edx + 0x3c00000e], al; and al, 0xf; test byte ptr [esi + 0x3c000014], bl; sub cl, byte ptr [edi]; xchg eax, esp; ret 0x403c; 
0x001202f1: test byte ptr [edx + eax - 0x67d0000], cl; add dword ptr [edi], ecx; test cl, bl; add byte ptr [eax], al; add byte ptr [ebx - 0xf755], cl; jmp dword ptr [ebp - 0x39]; 
0x000ff27f: test byte ptr [edx + eax], bh; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x0007a476: test byte ptr [edx + ecx - 4], 1; lea esi, dword ptr [ecx - 4]; cmovne eax, esi; pop esi; ret; 
0x00168580: test byte ptr [edx - 0x4cc30014], dh; add byte ptr [eax], al; in al, 0xb2; in al, dx; jmp dword ptr [eax - 0x4d]; 
0x0019a934: test byte ptr [edx - 0x5dabfffe], dh; clc; call dword ptr [eax]; 
0x000d08b6: test byte ptr [edx - 0x76000002], ch; ret 0x5ee9; 
0x0002cfc2: test byte ptr [edx - 0x76000007], bh; ret 0x95e9; 
0x0018a484: test byte ptr [edx - 0x8d7ffff], dh; hlt; call dword ptr [esi]; 
0x0007c41d: test byte ptr [edx - 0x8ffffff], dl; ret 3; 
0x00146859: test byte ptr [edx - 0xa000000], ah; ret 0x7501; 
0x00087496: test byte ptr [edx], 0; add byte ptr [edi + 0x5b], bl; ret; 
0x0016aa80: test byte ptr [edx], al; hlt; call dword ptr [eax - 0x29]; 
0x0017a546: test byte ptr [edx], cl; push cs; or al, 0x41; ret; 
0x0005e460: test byte ptr [edx], dh; sub al, 0; add byte ptr [ebx - 0x15775], cl; jmp dword ptr [ebp - 0x75]; 
0x000a5593: test byte ptr [esi + 0x1fffff7], dh; ret 0x5589; 
0x000db3e8: test byte ptr [esi + 0x3c000014], bl; sub cl, byte ptr [edi]; xchg eax, esp; ret 0x403c; 
0x000d25fb: test byte ptr [esi + ebx*8], ah; add byte ptr [eax], al; add byte ptr [ebx - 0x76abdbbc], cl; ret 0xc283; 
0x0018e24c: test byte ptr [esi + esi*8], cl; call dword ptr [edx]; 
0x0012b33e: test byte ptr [esi - 0x76000002], dl; ret 0xfac1; 
0x0002d0ce: test byte ptr [esi - 0x76000008], ch; ret 0x4ee9; 
0x00029aa6: test byte ptr [esi - 0x7cffffff], dh; ret 0x8508; 
0x0017b534: test byte ptr [esi - 0xa9f0000], bh; out dx, eax; call dword ptr [eax]; 
0x001894fc: test byte ptr [esi - 0xc], bl; call dword ptr [edx]; 
0x0004fea2: test byte ptr [esi], al; sub al, 0; add byte ptr [ebx - 0x1cb73], cl; call ecx; 
0x0006b95a: test byte ptr [esi], al; xchg eax, esp; add byte ptr [eax], al; add byte ptr [ecx + 0x54892434], cl; and al, 4; call dword ptr [eax + 0xc]; 
0x0006428e: test byte ptr [esi], al; xchg eax, esp; add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbac], cl; xor al, 0x24; call dword ptr [eax + 0x48]; 
0x000729f1: test byte ptr [esi], al; xchg eax, esp; add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbb4], cl; xor al, 0x24; call dword ptr [eax + 0x18]; 
0x00167238: test byte ptr [esi], ch; std; jmp esp; 
0x0016faec: test byte ptr [esi], cl; adc al, 0x41; ret; 
0x0010d71a: test byte ptr [esp + eax*8], ah; add dword ptr [eax], eax; add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ebp - 0x444216d], cl; jmp dword ptr [esi - 0x3f]; 
0x000e019d: test byte ptr [esp + ebp], ah; add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x00112a86: test byte ptr [esp + ebx*4], ah; sub byte ptr [eax], al; add byte ptr [ebp + 0x28982494], cl; add byte ptr [eax], al; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x000d50c1: test byte ptr [esp + ebx*8], ah; add byte ptr [eax], al; add byte ptr [ebx - 0x7ccfdbbc], cl; ret 0xc740; 
0x000dd669: test byte ptr [esp + ecx*4], ah; add byte ptr [eax], al; add byte ptr [ebx - 0x17c7dbbc], cl; cwde; ret; 
0x001295ed: test byte ptr [esp + ecx*8], ah; add byte ptr [eax], al; add byte ptr [ebx - 0x7cebdbbc], cl; ret 0x8b04; 
0x0010d9da: test byte ptr [esp + edx], ah; add al, byte ptr [eax]; add byte ptr [ecx + 0x68e82404], cl; xchg eax, ebp; lock dec dword ptr [ebx - 0xf775]; jmp dword ptr [ebp - 0x77]; 
0x001490f8: test ch, bh; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x000882fe: test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0018feae: test ch, dh; jmp dword ptr [edx]; 
0x0016f6ed: test cl, 0xea; jmp dword ptr [edx]; 
0x00025614: test cl, ah; add eax, dword ptr [eax]; add byte ptr [ebx - 0x1bf73], cl; jmp dword ptr [ebx]; 
0x001202fa: test cl, bl; add byte ptr [eax], al; add byte ptr [ebx - 0xf755], cl; jmp dword ptr [ebp - 0x39]; 
0x000951a2: test cl, bl; add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x00118f30: test dh, al; add byte ptr [eax], al; add byte ptr [ebx + 0x1c42484], cl; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x0014913e: test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x00043b91: test dh, bl; add al, byte ptr [eax]; add byte ptr [eax - 0x53843], al; call dword ptr [ebx + 0xf]; 
0x001498c5: test dh, dl; add byte ptr [eax], al; add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x000f7e9c: test dh, dl; add byte ptr [eax], al; add byte ptr [eax - 0x7bf0ffc8], al; ret; 
0x00019258: test dl, ah; pop es; add byte ptr [ecx - 0x47fbdbbc], cl; ret 0; 
0x00166b14: test dl, bh; cld; push dword ptr [ebx + edi*8]; cld; jmp esp; 
0x00122dd9: test dl, bl; add byte ptr [eax], al; add byte ptr [ebx - 0xf76d], cl; push dword ptr [ecx]; jmp dword ptr [ebp - 0x39]; 
0x0005a49a: test dl, ch; adc byte ptr [eax], al; add byte ptr [ebx - 0x109b43], al; call dword ptr [eax]; 
0x0008d2ef: test dl, cl; or dword ptr [eax], eax; add ecx, 0xcd35d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00083af2: test dl, dl; cmovne eax, ecx; add esp, 0xc; ret; 
0x0001cbdd: test dl, dl; cmovns eax, ecx; ret; 
0x00087977: test dword ptr [0x5bfffffe], edx; ret; 
0x0008784f: test dword ptr [0x5bffffff], edi; ret; 
0x0007dd7d: test dword ptr [0x5e000002], eax; xor eax, eax; pop ebx; ret; 
0x0008d48e: test dword ptr [0x5f000009], ebx; pop esi; pop ebx; ret; 
0x0008c0d6: test dword ptr [0xe9fffff5], esp; pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00087c06: test dword ptr [0xe9fffff6], eax; inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x00087be6: test dword ptr [0xe9fffff6], esp; pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x00059725: test dword ptr [eax + 0x39ffffef], esi; ret 0x1c77; 
0x0005ad8c: test dword ptr [eax + 0x39ffffef], esi; ret 0x3e77; 
0x0005933c: test dword ptr [eax + 0x39ffffef], esi; ret 0x7d77; 
0x000586b6: test dword ptr [eax + 0x39ffffef], esi; ret 0x860f; 
0x000567bf: test dword ptr [eax + 0x39ffffef], esi; ret 0x870f; 
0x000429ec: test dword ptr [eax + 0x39fffffb], eax; ret 0x3a77; 
0x00044eb5: test dword ptr [eax + 0x39fffffb], eax; ret 0x860f; 
0x00042bbe: test dword ptr [eax + 0x39fffffb], eax; ret 0x870f; 
0x00074cb1: test dword ptr [eax + 0x5c], esi; add byte ptr [eax], al; pop ebx; ret; 
0x000875eb: test dword ptr [eax + 0x5f000001], esp; pop ebx; ret; 
0x000874f3: test dword ptr [eax + 0x5f000002], ebx; pop ebx; ret; 
0x0009577b: test dword ptr [eax + 0x66000000], esi; pmovmskb eax, mm1; bsr eax, eax; add eax, ecx; ret; 
0x0008ea4b: test dword ptr [eax + 0xa], esp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00131091: test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x0008d46b: test dword ptr [eax + 9], eax; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00130991: test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x000a7147: test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x0012fb76: test dword ptr [eax + eax + 0xf660000], esp; out dx, eax; call dword ptr [eax - 0x7cef397d]; ret 0x8910; 
0x0008d4ef: test dword ptr [eax + ecx + 0x5e5f0000], edi; pop ebx; ret; 
0x0008d537: test dword ptr [eax + ecx], esi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00056d4b: test dword ptr [eax - 0x16000011], esi; ret 0xfffc; 
0x00148a23: test dword ptr [eax - 0x73000000], ebp; inc edx; pop es; ret; 
0x00147853: test dword ptr [eax - 0x73000000], ecx; inc edi; hlt; pop edi; ret; 
0x000458ea: test dword ptr [eax - 0x76000005], eax; ret 0xfac1; 
0x0005aad8: test dword ptr [eax - 0x76000011], esi; ret 0xfac1; 
0x00116939: test dword ptr [eax - 0x77000000], esi; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x0014822b: test dword ptr [eax - 0x77ffffff], esi; ret 0xe280; 
0x00148603: test dword ptr [eax - 0x7d000000], ebp; ret 0xf04; 
0x001302a3: test dword ptr [eax - 0x7d000000], ebp; stc; add byte ptr [edi], cl; test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x0007b0fb: test dword ptr [eax - 0x7d000000], edx; jmp esi; 
0x0008758b: test dword ptr [eax], eax; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000df6e7: test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0007ba47: test dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; call eax; 
0x00148ce0: test dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x0008ea93: test dword ptr [eax], ebx; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0012fa8b: test dword ptr [eax], esi; add eax, dword ptr [eax]; add byte ptr [ebp - 0x48a4f45], cl; jmp dword ptr [esi + 0xf]; 
0x00132a6e: test dword ptr [ebp + 0x5b000000], edi; ret; 
0x0013113c: test dword ptr [ebp + 0x5b000001], esp; ret; 
0x00130f5c: test dword ptr [ebp + 0x5b000003], eax; ret; 
0x00130a2c: test dword ptr [ebp + 0x5b000008], esi; ret; 
0x0007ddf1: test dword ptr [ebp + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x0008eaf6: test dword ptr [ebp + 0x5f000009], esi; pop esi; pop ebx; ret; 
0x001064da: test dword ptr [ebp + 0x65000001], ebp; mov dword ptr [edx], ecx; add esp, 0x28; pop ebx; ret; 
0x00130d86: test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0008d81f: test dword ptr [ebp + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x0008d7ef: test dword ptr [ebp + eax + 0x5e5f0000], edi; pop ebx; ret; 
0x0008c076: test dword ptr [ebp - 0x1600000b], eax; sal dh, 0xff; jmp dword ptr [esi + 0xf]; 
0x00147246: test dword ptr [ebp - 0x57fffffe], edx; and byte ptr [edi], cl; test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x001483a6: test dword ptr [ebp - 0x58000000], edx; add cl, byte ptr [edi]; test dword ptr [ebp], edi; add byte ptr [eax], al; mov eax, ecx; ret; 
0x001485d6: test dword ptr [ebp - 0x58000000], esi; add cl, byte ptr [edi]; test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x001478a6: test dword ptr [ebp - 0x73000000], edx; inc edi; cld; pop edi; ret; 
0x00148356: test dword ptr [ebp - 0x78000000], eax; ret 0xe280; 
0x000400fe: test dword ptr [ebp - 0x7cfffffb], eax; ret 0x3901; 
0x001485de: test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x00047ade: test dword ptr [ebp - 0x7d000000], esi; call 0x89c4ffea; ret 0xec75; 
0x00148666: test dword ptr [ebp - 0x7d000000], esp; ret 0xf0c; 
0x0014782e: test dword ptr [ebp], edi; add byte ptr [eax], al; lea eax, dword ptr [edi - 0x10]; pop edi; ret; 
0x001483ae: test dword ptr [ebp], edi; add byte ptr [eax], al; mov eax, ecx; ret; 
0x00001a16: test dword ptr [ebx + 0x59e7c8ee], esi; pop ebx; ret 0x2a63; 
0x0008ed08: test dword ptr [ebx + 0x5f000007], esp; pop esi; pop ebx; ret; 
0x000a70a0: test dword ptr [ebx + 1], ecx; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x00147268: test dword ptr [ebx + 2], esi; add byte ptr [eax], al; lea eax, dword ptr [edi + 7]; pop edi; ret; 
0x00130b58: test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x0008ed38: test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0008d450: test dword ptr [ebx + 9], ebx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0008746f: test dword ptr [ebx + eax], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0006aaff: test dword ptr [ebx + edx + 0x74c08500], 0x50be0f21; inc esi; mov edx, dword ptr [eax + edx + 0x94]; mov dword ptr [esp], eax; call dword ptr [edx + 0x30]; 
0x00002b7b: test dword ptr [ebx - 0x2e], ebp; cmp dl, byte ptr [edi]; ret; 
0x00148e7d: test dword ptr [ebx - 0x7cfffffd], ebx; ror byte ptr [ebx], 0x5f; ret; 
0x00034768: test dword ptr [ebx - 0x7d000000], ebx; ret 0x3901; 
0x0008b948: test dword ptr [ebx - 0x7ffffffe], edx; cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x00148e1e: test dword ptr [ebx - 0xa000000], ecx; ret 0xf02; 
0x0002fe6f: test dword ptr [ebx - 0xc8a0007], 0x5f5ed089; ret; 
0x000b390a: test dword ptr [ebx - 0xf76d], ecx; dec dword ptr [ecx + 0x3a8b65f1]; xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x00130f5d: test dword ptr [ebx], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0008eba8: test dword ptr [ebx], eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00087ac0: test dword ptr [ebx], ebp; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00051ff1: test dword ptr [ebx], ebx; test al, 0xff; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x00087ae0: test dword ptr [ebx], ecx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0008ea70: test dword ptr [ebx], edi; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0017b019: test dword ptr [ebx], edi; out dx, eax; jmp dword ptr [edx]; 
0x000c6bf0: test dword ptr [ebx], esi; add al, byte ptr [eax]; add dh, dh; ret 0xf01; 
0x000c57d9: test dword ptr [ecx + 0x1fffc1e8], 0x1c245c89; mov ebx, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000c58b9: test dword ptr [ecx + 0x1fffc1e8], 0x1c245c89; mov ebx, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00130c60: test dword ptr [ecx + 0x5b000006], eax; ret; 
0x000879eb: test dword ptr [ecx + 0x5bfffffd], esp; ret; 
0x000878f3: test dword ptr [ecx + 0x5bfffffe], ebx; ret; 
0x000a7162: test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x0008d512: test dword ptr [ecx + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x001329e2: test dword ptr [ecx + 1], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x001482fa: test dword ptr [ecx + 2], esi; add byte ptr [eax], al; xor eax, eax; ret; 
0x0008d642: test dword ptr [ecx + 7], ebp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0008eb32: test dword ptr [ecx + 9], edi; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000a70e7: test dword ptr [ecx + eax], eax; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000a70b7: test dword ptr [ecx + eax], esi; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x0002e897: test dword ptr [ecx + edx*4], eax; setne al; movzx eax, al; ret; 
0x0001bd20: test dword ptr [ecx - 0x7b000000], esp; sal byte ptr [esi + 0x6b], cl; ret 0x893c; 
0x0002c263: test dword ptr [ecx - 0x7c000003], esp; ret 0x8902; 
0x00144340: test dword ptr [ecx - 0x7cfffff2], ebp; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x00148f3a: test dword ptr [ecx - 0xa000000], esi; ret 0xf04; 
0x001981fa: test dword ptr [ecx], 0x41140e0a; ret; 
0x0016af8d: test dword ptr [ecx], 0xf500b400; call eax; 
0x0016ed35: test dword ptr [ecx], 0xfc48a400; jmp dword ptr [eax + 3]; 
0x0016f045: test dword ptr [ecx], eax; add byte ptr [ebx + esi*8], ah; std; jmp eax; 
0x0008ec92: test dword ptr [ecx], ebx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00077f37: test dword ptr [ecx], ebx; sub eax, dword ptr [eax]; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x77]; 
0x0008eb7a: test dword ptr [ecx], esi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000878d5: test dword ptr [edi + 0x5bfffffe], esi; ret; 
0x000a712c: test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x0008ef1c: test dword ptr [edi + 0x5f000005], ecx; pop esi; pop ebx; ret; 
0x0008eeec: test dword ptr [edi + 0x5f000005], edi; pop esi; pop ebx; ret; 
0x0008ec0c: test dword ptr [edi + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x0008eb14: test dword ptr [edi + 0x5f000009], edx; pop esi; pop ebx; ret; 
0x000d9590: test dword ptr [edi + 3], ebx; add byte ptr [eax], al; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax]; 
0x0008ef4c: test dword ptr [edi + 5], ebx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0008ec3c: test dword ptr [edi + 8], ebp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0008d61f: test dword ptr [edi + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x00130bd5: test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x0017b163: test dword ptr [edi + ebp*8 + 0x40d1cff], ebx; push eax; out dx, eax; jmp dword ptr [edx]; 
0x00059bec: test dword ptr [edi + ebp*8 - 1], ebx; call dword ptr [eax]; 
0x0005986f: test dword ptr [edi + ebp*8 - 1], ebx; dec dword ptr [edx]; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x8589; 
0x0005a1aa: test dword ptr [edi + ebp*8 - 1], esp; call dword ptr [eax]; 
0x00018968: test dword ptr [edi + edi*8 - 1], eax; inc dword ptr [ebx - 0xb77b]; jmp dword ptr [eax]; 
0x000e3535: test dword ptr [edi + edi*8 - 1], eax; jmp dword ptr [ebp - 0x75]; 
0x000e357b: test dword ptr [edi + edi*8 - 1], eax; jmp dword ptr [ebp - 0x77]; 
0x000e23b5: test dword ptr [edi + edi*8 - 1], edx; jmp dword ptr [ebp - 0x75]; 
0x000e23fb: test dword ptr [edi + edi*8 - 1], edx; jmp dword ptr [ebp - 0x77]; 
0x001230dc: test dword ptr [edi + edi*8 - 1], esi; jmp dword ptr [ebx + 0x6b]; 
0x0017b4c9: test dword ptr [edi - 0x11], ebp; jmp dword ptr [edx]; 
0x0017b919: test dword ptr [edi - 0x11], edi; jmp dword ptr [edx]; 
0x00050f33: test dword ptr [edi - 0x7600001c], ecx; test dword ptr [esi + edi*8 - 1], esi; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x75]; 
0x0014863c: test dword ptr [edi - 0x7d000000], ebx; ret 0xf08; 
0x0008ba3c: test dword ptr [edi - 0x7fffffff], ebx; cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x00148f64: test dword ptr [edi - 0xa000000], esp; ret 0xf20; 
0x000662cb: test dword ptr [edi - 0xcfffffc], edi; ret; 
0x00146884: test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x00134f31: test dword ptr [edi], 0x88ff48b6; dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x0008ef7c: test dword ptr [edi], ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x000a70cc: test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x0008ec6c: test dword ptr [edi], edi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008b8b4: test dword ptr [edi], esp; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; lcall ptr [edi + 0x5b]; ret; 
0x00142c11: test dword ptr [edx + 0x32], edi; cmc; call dword ptr [ebx - 0x18]; 
0x0007defc: test dword ptr [edx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x00087201: test dword ptr [edx + 0x5f000005], ecx; pop ebx; ret; 
0x0008d729: test dword ptr [edx + 0x5f000006], eax; pop esi; pop ebx; ret; 
0x0008d6f9: test dword ptr [edx + 0x5f000006], esi; pop esi; pop ebx; ret; 
0x0008d5f9: test dword ptr [edx + 0x5f000007], esi; pop esi; pop ebx; ret; 
0x0008d409: test dword ptr [edx + 0x5f000009], esp; pop esi; pop ebx; ret; 
0x00087539: test dword ptr [edx + 2], edx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0008d849: test dword ptr [edx + 5], esp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00087517: test dword ptr [edx + eax], esi; add byte ptr [edi + 0x5b], bl; ret; 
0x00087567: test dword ptr [edx + eax], esp; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x001886b6: test dword ptr [edx + ecx], eax; push cs; adc al, 0x41; ret; 
0x000dbd4d: test dword ptr [edx - 0x74fffffc], ebx; mov ah, 0x24; call 0x850dbd5a; test byte ptr [edi], 0x94; ret 0xc984; 
0x00148e4d: test dword ptr [edx - 0x9fffffd], esi; ret 0xf40; 
0x0002c68f: test dword ptr [edx - 0xa000000], edi; ret 0xf02; 
0x0019044c: test dword ptr [edx - 0xa], ebx; call dword ptr [eax]; 
0x0017023e: test dword ptr [edx], 0x41140e0a; ret; 
0x0016dab5: test dword ptr [edx], 0xfaabe400; jmp dword ptr [eax - 9]; 
0x001977bd: test dword ptr [edx], eax; add al, dh; int 0xf7; jmp dword ptr [esi]; 
0x0019b692: test dword ptr [edx], eax; add cl, byte ptr [esi - 0x383afbf2]; mov byte ptr [eax], 0x44; add byte ptr [eax], al; add byte ptr [eax + 0x7c0002c4], ah; ret; 
0x0008d8a9: test dword ptr [edx], eax; add eax, 0x5e5f0000; pop ebx; ret; 
0x00187f34: test dword ptr [edx], eax; inc edx; or eax, 0x3874305; inc edx; add dword ptr [0x5d030486], 6; ret; 
0x00191788: test dword ptr [edx], eax; inc edx; or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add edi, dword ptr [eax + 0xa]; ret; 
0x0017e240: test dword ptr [edx], eax; inc edx; or eax, 0x5834905; xchg byte ptr [edi + eax*4], al; add edi, dword ptr [ebx + 0xa]; ret; 
0x0018458c: test dword ptr [edx], eax; inc edx; or eax, 0x5834905; xchg byte ptr [edi + eax*4], al; add edi, dword ptr [ecx + 0xa]; ret; 
0x001711b4: test dword ptr [edx], eax; inc edx; or eax, 0x5834905; xchg byte ptr [edi + eax*4], al; add esi, dword ptr [edi + 0xa]; ret; 
0x00190cdc: test dword ptr [edx], eax; inc edx; or eax, 0x5834c05; xchg byte ptr [edi + eax*4], al; add edx, dword ptr [esi + 0xa]; ret; 
0x000d9f88: test dword ptr [edx], ebx; add eax, dword ptr [eax]; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x7d]; 
0x00188540: test dword ptr [edx], ebx; hlt; call dword ptr [eax]; 
0x00087171: test dword ptr [edx], ebx; push es; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0018d445: test dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0008d599: test dword ptr [edx], edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008d879: test dword ptr [edx], esi; add eax, 0x5e5f0000; pop ebx; ret; 
0x000874d5: test dword ptr [esi + 0x5f000002], esi; pop ebx; ret; 
0x0017b6d3: test dword ptr [esi + 0xd1cffef], edx; sar dword ptr [ecx - 0x11], 1; jmp dword ptr [edx]; 
0x001249d9: test dword ptr [esi + 1], ebx; add byte ptr [eax], al; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax]; 
0x001249f9: test dword ptr [esi + 1], ecx; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0008712d: test dword ptr [esi + 6], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0008d555: test dword ptr [esi + 8], edx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0008d42d: test dword ptr [esi + 9], edi; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0008eb55: test dword ptr [esi + 9], edx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0008ee2f: test dword ptr [esi + eax], edi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000e29e7: test dword ptr [esi + edi*8 + 0x568bffff], ecx; sbb al, 0xf6; ret 0x7501; 
0x000e186f: test dword ptr [esi + edi*8 + 0x568bffff], esp; sbb al, 0xf6; ret 0x7501; 
0x000bf661: test dword ptr [esi + edi*8 - 0x72740001], ebx; sar dh, 0xff; jmp dword ptr [ebp - 0x77]; 
0x0004d38e: test dword ptr [esi + edi*8 - 1], ebx; call dword ptr [eax]; 
0x0002a9bb: test dword ptr [esi + edi*8 - 1], ecx; jmp dword ptr [ebp - 0x75]; 
0x0004cacd: test dword ptr [esi + edi*8 - 1], esi; dec dword ptr [ebx - 0x1bb6b]; jmp dword ptr [ebp - 0x75]; 
0x00052a23: test dword ptr [esi + edi*8 - 1], esi; dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0x19343]; jmp dword ptr [ebp - 0x75]; 
0x00052691: test dword ptr [esi + edi*8 - 1], esi; dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0x19743]; jmp dword ptr [ebp - 0x75]; 
0x00052ff4: test dword ptr [esi + edi*8 - 1], esi; dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0x1c743]; jmp dword ptr [ebp - 0x75]; 
0x00050f39: test dword ptr [esi + edi*8 - 1], esi; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x75]; 
0x00052eaf: test dword ptr [esi + edi*8 - 1], esi; dec dword ptr [edi]; test ebp, esp; ret; 
0x00147235: test dword ptr [esi - 0x57fffffe], esp; adc byte ptr [edi], cl; test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x0014787d: test dword ptr [esi - 0x73000000], ecx; inc edi; clc; pop edi; ret; 
0x00124b09: test dword ptr [esi - 0x75000000], ecx; and eax, 0xe; add byte ptr [eax], al; call dword ptr [eax + 0x14]; 
0x00052a1d: test dword ptr [esi - 0x76000040], ebx; test dword ptr [esi + edi*8 - 1], esi; dec dword ptr [ebx - 0xf77d]; dec dword ptr [ebx - 0x19343]; jmp dword ptr [ebp - 0x75]; 
0x00148ea6: test dword ptr [esi - 0x7cfffffd], eax; ror byte ptr [edi], 0x5f; ret; 
0x00148e56: test dword ptr [esi - 0x7cfffffd], ebp; rol byte ptr [edi], 0x5f; ret; 
0x0008bd46: test dword ptr [esi - 0x7f000002], edx; cmp byte ptr [ecx], al; sbb eax, -1; pop ebx; ret; 
0x0008b83d: test dword ptr [esi - 0x7ffffffd], ebx; cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x00148e44: test dword ptr [esi - 0x9fffffd], esi; ret 0xf20; 
0x00148f6d: test dword ptr [esi - 0xa000000], ebp; ret 0xf40; 
0x001498cd: test dword ptr [esi - 0xa000000], edi; ret 0xf0f; 
0x00079bd8: test dword ptr [esi], ecx; add al, byte ptr [eax]; add byte ptr [ebx - 0x1876d], cl; jmp dword ptr [ebp - 0x75]; 
0x000b7a07: test dword ptr [esi], ecx; add dword ptr [eax], eax; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x0014729d: test dword ptr [esi], edi; add al, byte ptr [eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x0008744d: test dword ptr [esi], edi; add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000f5067: test dword ptr [esi], edx; add dword ptr [eax], eax; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x0008d575: test dword ptr [esi], esi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0009c5e5: test dword ptr [esi], esp; or al, 0; add byte ptr [ebx - 0x76bfdbbc], cl; ret 0xfac1; 
0x00183e65: test eax, 0x140e0a01; inc ecx; ret; 
0x000662c4: test eax, 0x1880; add dword ptr [edi], ecx; test dword ptr [edi - 0xcfffffc], edi; ret; 
0x00071860: test eax, 0x189c; add dword ptr [edi], ecx; test edx, ebp; sbb al, 0; add bl, dh; ret; 
0x00199b61: test eax, 0x5bbc0002; clc; call dword ptr [ecx]; 
0x00179b99: test eax, 0x60440000; out dx, eax; call dword ptr [ebx]; 
0x00179b85: test eax, 0x60480000; out dx, eax; call dword ptr [eax]; 
0x00179bb9: test eax, 0x60840000; out dx, eax; jmp dword ptr [edx + 5]; 
0x000b85fa: test eax, 0x7c8b000e; and al, 0xc; xchg edi, ebx; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x000221c6: test eax, 0x8100107b; ret; 
0x000184c6: test eax, 0x81001118; ret; 
0x0012e0c6: test eax, 0x81ffffbc; ret; 
0x00144341: test eax, 0x8300000e; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x0017a081: test eax, 0x951a0000; out dx, eax; call dword ptr [eax]; 
0x0017a021: test eax, 0x955e0000; out dx, eax; call dword ptr [eax]; 
0x00179fc1: test eax, 0x95a20000; out dx, eax; call dword ptr [eax]; 
0x000ef3fe: test eax, 0xc1810003; cmp ecx, dword ptr [ebx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000ef3b6: test eax, 0xc1810003; cmp edi, dword ptr [ebx + ecx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0015afb6: test eax, 0xc3fffb00; add dh, bh; jmp edi; 
0x00166568: test eax, 0xc9fffcd8; fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x0016f055: test eax, 0xfa240001; std; call esp; 
0x0012becf: test eax, eax; cmove eax, edi; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x000fb847: test eax, eax; cmove eax, edx; cmp eax, dword ptr [esp + 4]; setae al; movzx eax, al; ret; 
0x000ed3f9: test eax, eax; cmove eax, edx; ret; 
0x0012476a: test eax, eax; cmove edx, esi; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; mov eax, edx; ret; 
0x0012c19c: test eax, eax; cmovne eax, edx; add esp, 0x1c; ret; 
0x0012edc9: test eax, eax; cmovne eax, edx; add esp, 0x28; pop ebx; ret; 
0x000fc8fc: test eax, eax; cmovne edx, dword ptr [esp + 0x1c]; add esp, 0x2c; mov eax, edx; ret; 
0x00040d2b: test eax, eax; cmovs eax, edx; add esp, 0x1c; ret; 
0x00040c00: test eax, eax; cmovs eax, edx; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000d84ad: test eax, eax; sete al; add esp, 0x28; movzx eax, al; pop ebx; ret; 
0x000e0913: test eax, eax; sete al; add esp, 0x58; movzx eax, al; pop ebx; ret; 
0x0012529a: test eax, eax; sete al; movzx eax, al; add esp, 0x18; pop esi; ret; 
0x00114e77: test eax, eax; setne al; add esp, 0x1c; movzx eax, al; ret; 
0x000ed9ed: test eax, eax; setne al; add esp, 0xc; movzx eax, al; ret; 
0x000874b3: test eax, ebx; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0016c4c9: test eax, edi; call dword ptr [eax + 0x6e]; 
0x0008d4b3: test eax, edi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000875bb: test eax, edx; add dword ptr [eax], eax; add byte ptr [edi + 0x5b], bl; ret; 
0x0010996b: test eax, esp; add byte ptr [eax], al; add byte ptr [ebp - 0x42f0c6d], cl; dec dword ptr [ecx - 0x72cbdbac]; xchg eax, ebx; call eax; 
0x000c6c48: test ebp, ebp; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret 0x840f; 
0x001065ca: test ebp, ebp; add byte ptr [eax], al; add byte ptr [ebx - 0xff7d], cl; jmp dword ptr [ebp + 3]; 
0x0002dfc4: test ebp, ebp; mov esi, 8; cmovne edx, eax; xchg edi, ebx; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x0014724e: test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x0013fd3c: test ebp, edi; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0008eaae: test ebp, edi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008b8e6: test ebp, esi; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; lcall ptr [edi + 0x5b]; ret; 
0x00095756: test ebp, esi; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000c6f0d: test ebp, esi; add dword ptr [eax], eax; add byte ptr [ebx - 0x76d3db94], cl; imul ebp, dword ptr [eax], 0xfffe8ae9; jmp dword ptr [esi - 0x70]; 
0x0018ffc6: test ebp, esi; jmp dword ptr [edx]; 
0x00052eb5: test ebp, esp; ret; 
0x0006d0df: test ebx, ecx; add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x0016e351: test ebx, edi; jmp esp; 
0x0008ebd8: test ebx, edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a7102: test ecx, ebp; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x0008b5f2: test ecx, ebp; add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x0008eec2: test ecx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x000c810f: test ecx, ebp; or dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x00077bd7: test ecx, ebp; sub eax, 0x5c8b0000; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0016ce31: test ecx, edi; jmp dword ptr [eax]; 
0x0008b914: test edi, eax; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; lcall ptr [edi + 0x5b]; ret; 
0x0017a895: test edi, ebp; jmp dword ptr [eax]; 
0x0008ba0c: test edi, ecx; add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; lcall ptr [edi + 0x5b]; ret; 
0x0008d7c1: test edx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x00071867: test edx, ebp; sbb al, 0; add bl, dh; ret; 
0x00095b91: test edx, ebx; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x0008d4d1: test edx, ebx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008ead1: test edx, ebx; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008d8d9: test edx, edx; add al, 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000f7106: test edx, edx; cmovns eax, dword ptr [esi + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000fb814: test edx, edx; sete al; ret; 
0x00109fba: test edx, esi; add al, 0; add byte ptr [ebx - 0x2f76d73c], al; pop ebx; ret; 
0x00126288: test esi, eax; add byte ptr [eax], al; add byte ptr [ebx + 0xee083], cl; add byte ptr [ecx], dh; in eax, dx; call dword ptr [eax + 0x14]; 
0x0009547d: test esi, ebp; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x00124aa9: test esi, ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x76dfdbbc], cl; add al, 0x24; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 0x10]; 
0x0014723d: test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x00087495: test esi, esi; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0007fd50: test esi, esi; cmovne eax, edx; add esp, 0x18; pop esi; ret; 
0x000c55db: test esi, esi; cmovns ecx, esi; xchg edi, ebx; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000871c7: test esp, eax; add eax, 0x5b5f0000; ret; 
0x00148e27: test esp, eax; add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x00131a7f: test esp, ebx; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0ff07], al; ret; 
0x00124a6b: test esp, edi; add byte ptr [eax], al; add byte ptr [ebx - 0x2f76e73c], al; pop ebx; ret; 
0x00149a73: test esp, edi; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x0014725f: test esp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x000a7117: test esp, edx; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x00002b7a: test word ptr [ebx - 0x2e], bp; cmp dl, byte ptr [edi]; ret; 
0x00178df1: wait; add byte ptr [eax], al; cmp al, 0x3a; out dx, eax; jmp dword ptr [esi + 2]; 
0x00179241: wait; add byte ptr [eax], al; ret; 
0x00178d85: wait; add byte ptr [eax], al; test al, 0x37; out dx, eax; call dword ptr [edx]; 
0x0018f201: wait; add cl, byte ptr [edx]; ret; 
0x00188d2d: wait; add dword ptr [eax], eax; push eax; and esp, esi; jmp dword ptr [edi]; 
0x000fef71: wait; in al, 0xff; jmp dword ptr [esi - 0x77]; 
0x000eef5b: wait; inc eax; or eax, dword ptr [eax]; xchg edi, ebx; mov eax, 0x147; call dword ptr gs:[0x10]; 
0x00177079: wait; iretd; out dx, al; jmp dword ptr [edx]; 
0x000b93fa: wait; push cs; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xd1]; call dword ptr gs:[0x10]; 
0x000b945a: wait; push cs; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xd3]; call dword ptr gs:[0x10]; 
0x00159505: wait; ret 0x198; 
0x0018bbfe: wait; ret; 
0x0016cf09: wait; stc; call esp; 
0x0016cf19: wait; stc; jmp dword ptr [eax]; 
0x0011975b: wait; sti; inc dword ptr [ebx]; xchg eax, esp; ret; 
0x00002bcc: xabort -0xd; ret; 
0x000ba1cf: xchg ah, bl; add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x0014434c: xchg bh, bh; adc byte ptr [eax], al; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0017be2a: xchg bh, ch; jmp dword ptr [edx]; 
0x000f0d52: xchg bl, bh; push ebx; ret; 
0x0008d1ed: xchg bl, cl; or dword ptr [eax], eax; add ecx, 0xcd3df; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0011aac8: xchg byte ptr [0x83fffffe], bl; ret 0x8303; 
0x00113c3d: xchg byte ptr [eax + 0x22], ah; add byte ptr [eax], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x00002258: xchg byte ptr [eax - 0x7f78efd8], al; sub byte ptr [eax], dl; salc; ret; 
0x000ef42b: xchg byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001778a9: xchg byte ptr [eax], al; add byte ptr [ecx + ebx - 0x11], ah; call dword ptr [esi]; 
0x00185aa2: xchg byte ptr [ebx + eax*2], al; push cs; adc al, 0x83; add eax, 0x2400e43; ret 0xe0a; 
0x00187f3f: xchg byte ptr [ebx + eax], al; pop ebp; push es; ret; 
0x0008e9ed: xchg byte ptr [ebx - 0x3e7efff7], dh; mov edi, 0x3000cbd; or al, 0x99; jmp ecx; 
0x00148ea7: xchg byte ptr [ebx], al; add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x0017497d: xchg byte ptr [ebx], al; inc ebx; push cs; adc byte ptr [ebx + 0x300e4304], al; add ah, byte ptr [ecx + 0x43100e0a]; ret; 
0x00198e51: xchg byte ptr [ebx], al; inc ebx; push cs; adc byte ptr [ebx + 0xc0e7e04], al; ret; 
0x0018e4ed: xchg byte ptr [ebx], al; inc ecx; push cs; adc byte ptr [ebx + 0xc0e5d04], al; ret; 
0x0018b4a5: xchg byte ptr [ebx], al; inc ecx; push cs; adc byte ptr [ebx + 0xc0e6104], al; ret; 
0x0017cf15: xchg byte ptr [ebx], al; inc ecx; push cs; adc byte ptr [ebx + 0xc0e6704], al; ret; 
0x001672cc: xchg byte ptr [ebx], bh; std; push dword ptr [eax + 0x3a]; std; jmp eax; 
0x000b3f58: xchg byte ptr [ebx], bl; add dword ptr [eax], eax; add byte ptr [ebx - 0x20783b83], cl; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000addea: xchg byte ptr [ecx + 0x31ffffdd], cl; shr cl, 0x76; fdivr st(7); jmp dword ptr [esi - 0x70]; 
0x001909d6: xchg byte ptr [ecx + eax*2], al; push cs; adc al, 0x83; add eax, 0x100e7402; ret; 
0x0017bede: xchg byte ptr [ecx + eax*2], al; push cs; adc al, 0x83; add eax, 0x100edf02; ret; 
0x0017176a: xchg byte ptr [ecx + eax*2], al; push cs; adc al, 0x83; add eax, 0x1c00e46; add bh, byte ptr [edx + 0x43140e0a]; ret; 
0x00189a2e: xchg byte ptr [ecx + eax*2], al; push cs; adc al, 0x83; add eax, 0x2400e43; ret 0xe0a; 
0x001878e1: xchg byte ptr [ecx], al; add ah, bh; sbb dh, bl; call dword ptr [ebx]; 
0x000d67d2: xchg byte ptr [ecx], bh; ret 0x775; 
0x00036a10: xchg byte ptr [ecx], dl; add dword ptr [eax], eax; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x0018a1be: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx + eax*4 + 5]; add dh, byte ptr [ebp + 0xa]; ret; 
0x0017e1e0: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; add al, 0xa; ret; 
0x001729bc: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; cmpsd dword ptr [esi], dword ptr es:[edi]; add dword ptr [edx], ecx; ret; 
0x0016f984: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; daa; add dword ptr [edx], ecx; ret; 
0x00172c18: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; dec edi; add dword ptr [edx], ecx; ret; 
0x0017141c: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; dec esp; add ecx, dword ptr [edx]; ret; 
0x00190f8c: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; fld dword ptr [edx + ecx]; ret; 
0x0018473c: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; imul eax, dword ptr [ecx], 0xa; ret; 
0x0017117c: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; inc esp; add dword ptr [edx], ecx; ret; 
0x0018d988: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; insd dword ptr es:[edi], dx; add dword ptr [edx], ecx; ret; 
0x00177e70: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; int1; add dword ptr [edx], ecx; ret; 
0x00173ef0: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; lar ecx, word ptr [edx]; ret; 
0x00174a4c: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; pop ecx; add al, 0xa; ret; 
0x0017252c: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; pop edi; add dword ptr [edx], ecx; ret; 
0x001984b0: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; push eax; add dword ptr [edx], ecx; ret; 
0x00187f6c: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; push ebx; add cl, byte ptr [edx]; ret; 
0x00195fb4: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; push ebx; add dword ptr [edx], ecx; ret; 
0x0018a3c0: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; pushfd; add dword ptr [edx], ecx; ret; 
0x0018cb34: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; rol byte ptr [edx], 0xa; ret; 
0x0019887c: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; salc; add cl, byte ptr [edx]; ret; 
0x0018f1fc: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; wait; add cl, byte ptr [edx]; ret; 
0x00187c38: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; xchg byte ptr [edx + ecx], al; ret; 
0x0016fbbc: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; xchg eax, ebx; add cl, byte ptr [edx]; ret; 
0x00196510: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; xchg eax, esi; add dword ptr [edx], ecx; ret; 
0x0017084a: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ecx - 0x7d]; add eax, 0xa010f03; ret; 
0x0019b372: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ecx - 0x7d]; add eax, 0xa014103; ret; 
0x0019a03e: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ecx - 0x7d]; add eax, 0xa01a003; ret; 
0x0018b6de: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edi - 0x7d]; add eax, 0xa03ba03; ret; 
0x00195dfc: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; arpl word ptr [edx], cx; ret; 
0x0019700c: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; dec byte ptr [edx]; ret; 
0x00187a88: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; fisttp qword ptr [edx]; ret; 
0x0018c3ec: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; fmul qword ptr [edx]; ret; 
0x00195e2c: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; jno 0x195e3d; ret; 
0x00193650: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; loope 0x193661; ret; 
0x001759bc: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; mov cs, word ptr [edx]; ret; 
0x0018d604: xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; xchg byte ptr [edx], cl; ret; 
0x0019a76e: xchg byte ptr [edi + eax*4], al; add ecx, dword ptr [ebp - 0x7d]; add eax, 0xa017803; ret; 
0x00191790: xchg byte ptr [edi + eax*4], al; add edi, dword ptr [eax + 0xa]; ret; 
0x0017e248: xchg byte ptr [edi + eax*4], al; add edi, dword ptr [ebx + 0xa]; ret; 
0x00184594: xchg byte ptr [edi + eax*4], al; add edi, dword ptr [ecx + 0xa]; ret; 
0x00190ce4: xchg byte ptr [edi + eax*4], al; add edx, dword ptr [esi + 0xa]; ret; 
0x001711bc: xchg byte ptr [edi + eax*4], al; add esi, dword ptr [edi + 0xa]; ret; 
0x00131f25: xchg byte ptr [edi - 0x7cfffffe], al; ret 0x8310; 
0x0013049e: xchg byte ptr [edi - 0x7cffffff], cl; ret 0x8310; 
0x001673c4: xchg byte ptr [edi*8 - 0x2c32901], bh; jmp dword ptr [esi]; 
0x00143a0c: xchg byte ptr [edi], bh; sbb al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0014512c: xchg byte ptr [edi], bl; add eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0014331c: xchg byte ptr [edi], ch; and dword ptr [eax], eax; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00144a3c: xchg byte ptr [edi], cl; or al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00166e60: xchg byte ptr [edi], cl; std; dec dword ptr [eax]; adc ch, bh; jmp edx; 
0x00095341: xchg byte ptr [edx + 0x1000002], bl; clc; add eax, ecx; pop edi; ret; 
0x00187c3d: xchg byte ptr [edx + ecx], al; ret; 
0x00185c21: xchg byte ptr [edx], al; add ah, byte ptr [edx + 0xe]; add al, 0xc6; ret; 
0x00170528: xchg byte ptr [edx], al; add al, byte ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x00170994: xchg byte ptr [edx], al; add al, byte ptr [edx + 0xa]; push cs; add al, 0xc6; ret; 
0x00198bd0: xchg byte ptr [edx], al; add al, byte ptr [edx + 0xe]; add al, 0xc6; ret; 
0x00197528: xchg byte ptr [edx], al; add bl, byte ptr [eax + 0xe]; add al, 0xc6; ret; 
0x0017c864: xchg byte ptr [edx], al; add bl, byte ptr [ebx + 0xa]; push cs; add al, 0xc6; ret; 
0x00195af8: xchg byte ptr [edx], al; add cl, byte ptr [esi + 0xa]; push cs; add al, 0xc6; ret; 
0x001907dc: xchg byte ptr [edx], al; add cl, byte ptr [esi + 0xe]; add al, 0xc6; ret; 
0x0019b1a0: xchg byte ptr [edx], al; add dl, byte ptr [ebp + 0xe]; add al, 0xc6; ret; 
0x00196a2c: xchg byte ptr [edx], al; add dl, byte ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x001741d4: xchg byte ptr [edx], al; add dl, byte ptr [edx + 0xa]; push cs; add al, 0xc6; ret; 
0x0018c245: xchg byte ptr [edx], al; add dword ptr [ebx], 0x77; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00171cd1: xchg byte ptr [edx], al; add dword ptr [ebx], 2; inc eax; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x001846dd: xchg byte ptr [edx], al; add dword ptr [ebx], 2; inc ebp; push cs; add al, 0xc6; ret; 
0x0019595d: xchg byte ptr [edx], al; add dword ptr [ebx], 2; pop ecx; push cs; add al, 0xc6; ret; 
0x00172cbd: xchg byte ptr [edx], al; add dword ptr [ebx], 2; pop esi; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00185bdd: xchg byte ptr [edx], al; add dword ptr [ebx], 2; push eax; push cs; add al, 0xc6; ret; 
0x00197395: xchg byte ptr [edx], al; add dword ptr [ebx], 2; push esi; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00179820: xchg byte ptr [edx], al; bound ecx, qword ptr [edx]; push cs; add al, 0xc6; ret; 
0x001908c5: xchg byte ptr [edx], al; dec eax; add dword ptr [ebx], 0x69; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00190f5c: xchg byte ptr [edx], al; dec ebp; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0017c89c: xchg byte ptr [edx], al; dec ebx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00171fe8: xchg byte ptr [edx], al; imul ecx, dword ptr [edx], 0xe; add al, 0xc6; ret; 
0x0018b9a9: xchg byte ptr [edx], al; inc edi; add dword ptr [ebx], 0x7f; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0017a595: xchg byte ptr [edx], al; inc esp; add dword ptr [ebx], 0x5d; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00178b69: xchg byte ptr [edx], al; inc esp; add dword ptr [ebx], 0x60; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0018d485: xchg byte ptr [edx], al; inc esp; add dword ptr [ebx], 0x6a; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x001704e5: xchg byte ptr [edx], al; inc esp; add dword ptr [ebx], 0x6d; push cs; add al, 0xc6; ret; 
0x0017ae55: xchg byte ptr [edx], al; inc esp; add dword ptr [ebx], 0x71; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00177ee9: xchg byte ptr [edx], al; inc esp; add dword ptr [ebx], 0x71; push cs; add al, 0xc6; ret; 
0x00177e05: xchg byte ptr [edx], al; inc esp; add dword ptr [ebx], 0x72; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x001908e9: xchg byte ptr [edx], al; inc esp; add dword ptr [ebx], 0x73; push cs; add al, 0xc6; ret; 
0x00190949: xchg byte ptr [edx], al; inc esp; add dword ptr [ebx], 0x74; push cs; add al, 0xc6; ret; 
0x0019a4c5: xchg byte ptr [edx], al; inc esp; add dword ptr [ebx], 0x76; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00179d35: xchg byte ptr [edx], al; inc esp; add dword ptr [ebx], 0x79; push cs; add al, 0xc6; ret; 
0x00199bd5: xchg byte ptr [edx], al; inc esp; add dword ptr [ebx], 0x7a; push cs; add al, 0xc6; ret; 
0x00171739: xchg byte ptr [edx], al; inc esp; add dword ptr [ebx], 0x7b; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x001775c1: xchg byte ptr [edx], al; inc esp; add dword ptr [ebx], 0x7c; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00179ba9: xchg byte ptr [edx], al; inc esp; add dword ptr [ebx], 0x7f; push cs; add al, 0xc6; ret; 
0x0017ae05: xchg byte ptr [edx], al; inc esp; add dword ptr [ebx], 2; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00197713: xchg byte ptr [edx], al; insb byte ptr es:[edi], dx; push cs; add al, 0xc6; ret; 
0x00199dbc: xchg byte ptr [edx], al; insd dword ptr es:[edi], dx; push cs; add al, 0xc6; ret; 
0x0018df8c: xchg byte ptr [edx], al; jno 0x18df9e; add al, 0xc6; ret; 
0x00197038: xchg byte ptr [edx], al; jno 0x19704a; add al, 0xc6; ret; 
0x00175214: xchg byte ptr [edx], al; jnp 0x175226; add al, 0xc6; ret; 
0x001734bc: xchg byte ptr [edx], al; jo 0x1734ca; push cs; add al, 0xc6; ret; 
0x00178ec0: xchg byte ptr [edx], al; jo 0x178ed2; add al, 0xc6; ret; 
0x00195b44: xchg byte ptr [edx], al; jo 0x195b56; add al, 0xc6; ret; 
0x00179c70: xchg byte ptr [edx], al; jp 0x179c7e; push cs; add al, 0xc6; ret; 
0x0017ad2c: xchg byte ptr [edx], al; jp 0x17ad3a; push cs; add al, 0xc6; ret; 
0x00190d20: xchg byte ptr [edx], al; jp 0x190d2e; push cs; add al, 0xc6; ret; 
0x0019aa20: xchg byte ptr [edx], al; jp 0x19aa2e; push cs; add al, 0xc6; ret; 
0x0019aa48: xchg byte ptr [edx], al; jp 0x19aa56; push cs; add al, 0xc6; ret; 
0x00171fa0: xchg byte ptr [edx], al; or cl, byte ptr [0xffffc604]; ret; 
0x001715bc: xchg byte ptr [edx], al; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0017427c: xchg byte ptr [edx], al; or cl, byte ptr gs:[esi]; add al, 0xc6; ret; 
0x001924d0: xchg byte ptr [edx], al; outsd dx, dword ptr [esi]; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0017ab88: xchg byte ptr [edx], al; outsd dx, dword ptr [esi]; push cs; add al, 0xc6; ret; 
0x0019816c: xchg byte ptr [edx], al; pop ebp; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0019a814: xchg byte ptr [edx], al; pop ebx; push cs; add al, 0xc6; ret; 
0x00185cb4: xchg byte ptr [edx], al; pop ecx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00185830: xchg byte ptr [edx], al; pop edx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0018de94: xchg byte ptr [edx], al; pop edx; push cs; add al, 0xc6; ret; 
0x00171c4c: xchg byte ptr [edx], al; pop esi; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00174224: xchg byte ptr [edx], al; pop esp; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x00183584: xchg byte ptr [edx], al; popal; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0018df6c: xchg byte ptr [edx], al; popal; push cs; add al, 0xc6; ret; 
0x00198c44: xchg byte ptr [edx], al; push 0xc6040e0a; ret; 
0x00188b1c: xchg byte ptr [edx], al; push 0xe; add al, 0xc6; ret; 
0x0018f010: xchg byte ptr [edx], al; push cs; add al, 0xc6; ret; 
0x00193fa1: xchg byte ptr [edx], al; push ebp; push cs; add al, 0xc6; ret; 
0x001733c8: xchg byte ptr [edx], al; push edi; push cs; add al, 0xc6; ret; 
0x00198d84: xchg byte ptr [edx], al; push edx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0017ca70: xchg byte ptr [edx], al; push esi; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0018a308: xchg byte ptr [edx], al; pushal; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x0017c5f0: xchg byte ptr [edx], al; pushal; push cs; add al, 0xc6; ret; 
0x00183bb2: xchg byte ptr [edx], cl; push cs; adc al, 0x43; ret; 
0x0018d609: xchg byte ptr [edx], cl; ret; 
0x00166f44: xchg byte ptr [esi], bl; std; call esi; 
0x00166f44: xchg byte ptr [esi], bl; std; call esi; push ds; std; jmp dword ptr [esi]; 
0x0010bf73: xchg byte ptr [esp + eax], ch; add byte ptr [ecx], al; ret 0xb70f; 
0x0019025e: xchg ch, dh; jmp dword ptr [edx]; 
0x0016ce39: xchg cl, bh; call dword ptr [eax - 0x5b]; 
0x00002549: xchg dh, ch; inc ebp; ret 0x88ad; 
0x0016d959: xchg dl, bh; jmp dword ptr [eax]; 
0x0002399a: xchg dword ptr [eax + eax], ecx; add esp, 0x18; pop ebx; ret; 
0x00043664: xchg dword ptr [eax - 0x7cfffffc], esi; ret 0x830f; 
0x00108c45: xchg dword ptr [eax - 1], edi; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x00167d5d: xchg dword ptr [eax], eax; add ah, dl; mov al, 0xeb; call eax; 
0x00149015: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, dword ptr [eax + 4]; pop edi; ret; 
0x001486b5: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, dword ptr [ecx + 5]; ret; 
0x00147ff5: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, dword ptr [edi + 4]; pop edi; ret; 
0x0017485e: xchg dword ptr [ebx], eax; add ah, al; ret; 
0x00195dfe: xchg dword ptr [ebx], eax; add ah, byte ptr [ebx + 0xa]; ret; 
0x0019a48e: xchg dword ptr [ebx], eax; add ah, byte ptr [ecx + 0xa]; ret; 
0x00188322: xchg dword ptr [ebx], eax; add ah, byte ptr [esi + 0xa]; ret; 
0x0018798a: xchg dword ptr [ebx], eax; add al, byte ptr [ecx + 0xa]; ret; 
0x001876fe: xchg dword ptr [ebx], eax; add bl, byte ptr [ecx + 0xa]; ret; 
0x0018a1f2: xchg dword ptr [ebx], eax; add bl, byte ptr [edi + 0xa]; ret; 
0x0016fb8e: xchg dword ptr [ebx], eax; add cl, byte ptr [ecx + 0xa]; ret; 
0x00185662: xchg dword ptr [ebx], eax; add cl, byte ptr [edi + 0xa]; ret; 
0x00195e2e: xchg dword ptr [ebx], eax; add dh, byte ptr [ecx + 0xa]; ret; 
0x0017117e: xchg dword ptr [ebx], eax; add eax, dword ptr [ecx + eax + 0xa]; ret; 
0x0018cb36: xchg dword ptr [ebx], eax; add eax, eax; add cl, byte ptr [edx]; ret; 
0x001895be: xchg dword ptr [ebx], eax; add ebp, edx; add cl, byte ptr [edx]; ret; 
0x001896c6: xchg dword ptr [ebx], eax; add ebx, dword ptr [ebx]; or ecx, dword ptr [edx]; ret; 
0x0018c382: xchg dword ptr [ebx], eax; add ebx, dword ptr [ecx]; add dword ptr [edx], ecx; ret; 
0x00193696: xchg dword ptr [ebx], eax; add ebx, dword ptr [edx]; add cl, byte ptr [edx]; ret; 
0x00183a92: xchg dword ptr [ebx], eax; add ebx, dword ptr [edx]; add dword ptr [edx], ecx; ret; 
0x001748de: xchg dword ptr [ebx], eax; add ebx, eax; add dword ptr [edx], ecx; ret; 
0x0018a6b2: xchg dword ptr [ebx], eax; add ebx, ebp; add dword ptr [edx], ecx; ret; 
0x00190f8e: xchg dword ptr [ebx], eax; add ebx, ecx; add al, 0xa; ret; 
0x00187552: xchg dword ptr [ebx], eax; add ebx, esi; add dword ptr [edx], ecx; ret; 
0x0017141e: xchg dword ptr [ebx], eax; add ecx, dword ptr [ebx + eax + 0xa]; ret; 
0x00173ef2: xchg dword ptr [ebx], eax; add ecx, dword ptr [edi]; add cl, byte ptr [edx]; ret; 
0x0019a4f2: xchg dword ptr [ebx], eax; add ecx, ebx; add cl, byte ptr [edx]; ret; 
0x0019a3c2: xchg dword ptr [ebx], eax; add ecx, edx; add dword ptr [edx], ecx; ret; 
0x0016f606: xchg dword ptr [ebx], eax; add edx, dword ptr [eax]; add ecx, dword ptr [edx]; ret; 
0x00190e06: xchg dword ptr [ebx], eax; add edx, dword ptr [ebp + eax + 0xa]; ret; 
0x0019887e: xchg dword ptr [ebx], eax; add edx, esi; add cl, byte ptr [edx]; ret; 
0x0019a0fe: xchg dword ptr [ebx], eax; add esi, dword ptr [ebx]; add dword ptr [edx], ecx; ret; 
0x00196032: xchg dword ptr [ebx], eax; add esi, dword ptr [ecx + eax + 0xa]; ret; 
0x00196216: xchg dword ptr [ebx], eax; add esi, dword ptr [ecx]; add dword ptr [edx], ecx; ret; 
0x00174f1a: xchg dword ptr [ebx], eax; add esi, dword ptr [ecx]; add ecx, dword ptr [edx]; ret; 
0x00187d86: xchg dword ptr [ebx], eax; add esi, dword ptr [esi]; add al, 0xa; ret; 
0x0017e1e2: xchg dword ptr [ebx], eax; add esi, ebx; add al, 0xa; ret; 
0x00177e72: xchg dword ptr [ebx], eax; add esi, ecx; add dword ptr [edx], ecx; ret; 
0x0018d85a: xchg dword ptr [ebx], eax; add esp, dword ptr [ebx]; add dword ptr [edx], ecx; ret; 
0x0016f986: xchg dword ptr [ebx], eax; add esp, dword ptr [edi]; add dword ptr [edx], ecx; ret; 
0x00185fe2: xchg dword ptr [ebx], eax; add esp, dword ptr [edx]; add dword ptr [edx], ecx; ret; 
0x0018ef82: xchg dword ptr [ebx], eax; add esp, ebx; add ecx, dword ptr [edx]; ret; 
0x001859ee: xchg dword ptr [ebx], eax; add esp, edx; add al, 0xa; ret; 
0x0016fc89: xchg dword ptr [ebx], eax; inc ecx; push cs; adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x1800e43], 3; ret 0xa03; 
0x001988a9: xchg dword ptr [ebx], eax; inc ecx; push cs; adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x1900e4e], 2; ret; 
0x00187f3a: xchg dword ptr [ebx], eax; inc edx; add dword ptr [0x5d030486], 6; ret; 
0x0017e24a: xchg dword ptr [ebx], eax; jnp 0x17e258; ret; 
0x00184596: xchg dword ptr [ebx], eax; jns 0x1845a4; ret; 
0x00158b90: xchg dword ptr [ecx + 0x79], ecx; xchg eax, edx; ret 0xf869; 
0x00031e8f: xchg dword ptr [ecx + eax], ebp; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x75]; 
0x00056d45: xchg dword ptr [ecx + eax], esp; add byte ptr [ecx], al; test dword ptr [eax - 0x16000011], esi; ret 0xfffc; 
0x00060c34: xchg dword ptr [ecx - 0x7d000000], edx; ret 0x830f; 
0x00187905: xchg dword ptr [ecx], eax; add byte ptr [eax], bh; sbb esi, ebx; call dword ptr [ebx]; 
0x00091594: xchg dword ptr [ecx], ecx; add byte ptr [ecx + 0xc92edc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00182885: xchg dword ptr [edx], eax; add byte ptr [eax + eax + 0x368c0000], ch; add dword ptr [eax], eax; and byte ptr [eax], ch; int1; jmp esi; 
0x00196e3b: xchg dword ptr [edx], eax; add dl, byte ptr [edx - 0x3938fbf2]; ret; 
0x0018ab0d: xchg dword ptr [edx], eax; add dword ptr [ebx], 0x6c; or cl, byte ptr [esi]; add al, 0xc7; ret; 
0x001875a5: xchg dword ptr [edx], eax; add dword ptr [ebx], 0x70; or cl, byte ptr [esi]; add al, 0xc7; ret; 
0x0018a8d1: xchg dword ptr [edx], eax; add dword ptr [ebx], 0x71; or cl, byte ptr [esi]; add al, 0xc7; ret; 
0x00171bd5: xchg dword ptr [edx], eax; add dword ptr [ebx], 2; pop eax; or cl, byte ptr [esi]; add al, 0xc7; ret; 
0x0018793c: xchg dword ptr [edx], eax; insb byte ptr es:[edi], dx; or cl, byte ptr [esi]; add al, 0xc7; ret; 
0x0018cc28: xchg dword ptr [edx], eax; or cl, byte ptr gs:[esi]; add al, 0xc7; ret; 
0x001930e4: xchg dword ptr [edx], eax; push 0xa; push cs; add al, 0xc7; ret; 
0x00196b07: xchg dword ptr [edx], eax; push 0xc6c7040e; ret; 
0x00182920: xchg dword ptr [edx], eax; push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x001828fe: xchg dword ptr [edx], eax; push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7204], al; ret; 
0x000bda4b: xchg dword ptr [esi - 0x76fffffc], eax; loope 0xbd9d6; ret 0x831e; 
0x000be1fb: xchg dword ptr [esi - 0x76fffffc], eax; loope 0xbe186; ret 0x831e; 
0x00108645: xchg dword ptr [esi - 1], edi; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x00158d2f: xchg dword ptr [esp + eax + 0x6fa9ce9d], esp; ret; 
0x000e136f: xchg dword ptr [esp + ecx], ebx; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x001046e9: xchg eax, ebp; add al, 0x83; ret 0x8501; 
0x00147247: xchg eax, ebp; add al, byte ptr [eax]; add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x001987e9: xchg eax, ebp; add al, byte ptr [eax]; hlt; sbb edi, eax; jmp dword ptr [edi]; 
0x0019877d: xchg eax, ebp; add al, byte ptr [eax]; pushal; sbb eax, edi; call edx; 
0x000ac4b6: xchg eax, ebp; add byte ptr [eax], al; add byte ptr [ebx - 0x10e36d], cl; inc dword ptr [eax - 0x7bf0ffc6]; ret; 
0x0010ab8e: xchg eax, ebp; add byte ptr [eax], al; add byte ptr [ebx - 0xf74d], cl; jmp dword ptr [ebp - 0x7d]; 
0x00096b33: xchg eax, ebp; add byte ptr [ebx + 0x29202454], cl; ret 0xc083; 
0x00080f69: xchg eax, ebp; add byte ptr [ebx - 0x7cf3dbac], cl; ret 0x8501; 
0x0001e138: xchg eax, ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ccfdbac], cl; ret 0x3904; 
0x00172fcc: xchg eax, ebp; add ebp, esp; call dword ptr [eax]; 
0x000038bc: xchg eax, ebp; and dword ptr [ecx], edi; push cs; pop esp; ret; 
0x0016c5b9: xchg eax, ebp; clc; jmp eax; 
0x00167989: xchg eax, ebp; cld; jmp dword ptr [eax]; 
0x0016d9d9: xchg eax, ebp; cli; jmp esp; 
0x00055561: xchg eax, ebp; ficom dword ptr [eax + eax]; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x12e; call dword ptr gs:[0x10]; 
0x00177181: xchg eax, ebp; iretd; out dx, al; jmp dword ptr [edx]; 
0x00186bc5: xchg eax, ebp; jo 0x186bba; jmp dword ptr [edx]; 
0x0010d9e5: xchg eax, ebp; lock dec dword ptr [ebx - 0xf775]; jmp dword ptr [ebp - 0x77]; 
0x00183e05: xchg eax, ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00179f95: xchg eax, ebp; out dx, eax; call dword ptr [eax]; 
0x000c0a10: xchg eax, ebp; push 0x39ffffd7; sal byte ptr [edi + eax*8 - 0x77], 1; ret 0x3a8b; 
0x00081a24: xchg eax, ebp; push 0x39ffffff; ret 0x1174; 
0x000c0a05: xchg eax, ebp; push 0xe8ffffd7; cmp ecx, 0x958bffff; push 0x39ffffd7; sal byte ptr [edi + eax*8 - 0x77], 1; ret 0x3a8b; 
0x00158848: xchg eax, ebp; push es; cld; ret; 
0x000aa076: xchg eax, ebp; ret 0x10e9; 
0x0011371d: xchg eax, ebp; ret 0x17e9; 
0x00077928: xchg eax, ebp; ret 0x440b; 
0x0011467f: xchg eax, ebp; ret 0x463b; 
0x0006d683: xchg eax, ebp; ret 0x4ae9; 
0x0011641b: xchg eax, ebp; ret 0x5489; 
0x000c6af1: xchg eax, ebp; ret 0x548d; 
0x000e92c4: xchg eax, ebp; ret 0x658d; 
0x000f7c5a: xchg eax, ebp; ret 0x7c8b; 
0x000702b5: xchg eax, ebp; ret 0x83eb; 
0x000daaa6: xchg eax, ebp; ret 0x840f; 
0x000d25bc: xchg eax, ebp; ret 0x8488; 
0x00060ee2: xchg eax, ebp; ret 0x8589; 
0x00053781: xchg eax, ebp; ret 0x9520; 
0x0011f01a: xchg eax, ebp; ret 0xaaeb; 
0x0011ef32: xchg eax, ebp; ret 0xaeeb; 
0x0011e6b2: xchg eax, ebp; ret 0xb0eb; 
0x0002e735: xchg eax, ebp; ret 0xb60f; 
0x0010a9e1: xchg eax, ebp; ret 0xc085; 
0x00022e5e: xchg eax, ebp; ret 0xc483; 
0x000774a4: xchg eax, ebp; ret 0xc883; 
0x000ee8fc: xchg eax, ebp; ret 0xcbeb; 
0x000a9514: xchg eax, ebp; ret 0xd021; 
0x000a4c64: xchg eax, ebp; ret 0xd029; 
0x00114e49: xchg eax, ebp; ret 0xd089; 
0x000a8156: xchg eax, ebp; ret 0xd138; 
0x0006d5d2: xchg eax, ebp; ret 0xd284; 
0x000a5d62: xchg eax, ebp; ret 0xd589; 
0x00027927: xchg eax, ebp; ret 0xd789; 
0x000d6da4: xchg eax, ebp; ret 0xe083; 
0x00098fbb: xchg eax, ebp; ret 0xf883; 
0x000a7ed0: xchg eax, ebp; ret 0xf8c1; 
0x0000202f: xchg eax, ebp; ret; 
0x000ca2c4: xchg eax, ebp; rol byte ptr [ebx + 0x5f5e40c4], 0x5d; ret 8; 
0x00114e7a: xchg eax, ebp; rol byte ptr [ebx - 0x49f0e33c], 0xc0; ret; 
0x000ed9f0: xchg eax, ebp; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x000d827f: xchg eax, ebp; ror byte ptr [ebx - 0x74cbdb84], 0x6c; and al, 0x38; add esp, 0x3c; ret; 
0x0011e9f1: xchg eax, ebp; ror byte ptr [ecx + 0x28c48306], 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; ret; 
0x00113bbe: xchg eax, ebp; ror byte ptr [edi], 0xb6; ror byte ptr [ebx - 0x74ebdba4], 0x74; and al, 0x18; add esp, 0x1c; ret; 
0x000d72db: xchg eax, ebp; sar dh, 0xff; dec dword ptr [ecx - 0x16f4b]; jmp dword ptr [esi - 0x70]; 
0x00002b79: xchg eax, ebp; test word ptr [ebx - 0x2e], bp; cmp dl, byte ptr [edi]; ret; 
0x001693c0: xchg eax, ebp; xor eax, esi; call eax; 
0x0008b949: xchg eax, ebx; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; lcall ptr [edi + 0x5b]; ret; 
0x00198519: xchg eax, ebx; add al, byte ptr [eax]; inc esp; sub bh, bl; jmp dword ptr [edi]; 
0x0010e909: xchg eax, ebx; add byte ptr [eax], al; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x7d]; 
0x000060fc: xchg eax, ebx; add byte ptr [eax], al; add byte ptr [edx], ah; add byte ptr [eax + eax], cl; ret 3; 
0x0016fbc1: xchg eax, ebx; add cl, byte ptr [edx]; ret; 
0x0010997b: xchg eax, ebx; call eax; 
0x00167979: xchg eax, ebx; cld; call eax; 
0x0013911b: xchg eax, ebx; cld; jmp dword ptr [esi - 0x70]; 
0x0018bbad: xchg eax, ebx; cmc; call dword ptr [ecx]; 
0x0014ac80: xchg eax, ebx; cwde; sbb eax, 0x4890000; and al, 0xe8; ret; 
0x000752ef: xchg eax, ebx; dec ebp; mov bh, 0xfb; inc edi; add al, 0x24; ret 0x10; 
0x00096827: xchg eax, ebx; dec esp; xor al, 0xef; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x00166344: xchg eax, ebx; fdivr st(4); call ebx; 
0x00166344: xchg eax, ebx; fdivr st(4); call ebx; fdivr st(4); call dword ptr [ebx]; 
0x00166354: xchg eax, ebx; frndint; call ebx; 
0x00166354: xchg eax, ebx; frndint; call ebx; frndint; call dword ptr [ebx]; 
0x000dff89: xchg eax, ebx; idiv edi; inc dword ptr [ecx + 0xd4c4]; add byte ptr [ebx + 0x5e], bl; ret; 
0x00074c4e: xchg eax, ebx; inc eax; sbb dword ptr [eax], eax; add byte ptr [ebp + 0x44c8b], cl; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x77]; 
0x000729bc: xchg eax, ebx; lea esi, dword ptr [esi]; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x00019a2c: xchg eax, ebx; mov al, byte ptr [0x89000036]; ret 0xc589; 
0x0012498f: xchg eax, ebx; mov al, byte ptr [0x89ffffeb]; ret 0xc483; 
0x000914b3: xchg eax, ebx; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000a7921: xchg eax, ebx; or al, 0x7d; sti; dec dword ptr [edi]; inc ebp; ret 0xa5eb; 
0x0017a235: xchg eax, ebx; out dx, eax; call dword ptr [eax]; 
0x00003d97: xchg eax, ebx; push ebx; inc eax; or byte ptr fs:[ebx + 0x4e], ch; ret 0x6bba; 
0x0014ac9e: xchg eax, ebx; pushfd; sbb eax, 0x4890000; and al, 0xe8; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xffec; 
0x000c5c67: xchg eax, ebx; pushfd; sub esi, edx; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x00027943: xchg eax, ebx; ret 0xd789; 
0x000ec3ca: xchg eax, ebx; ret 0xfbd2; 
0x00109971: xchg eax, ebx; sar bl, 1; dec dword ptr [ecx - 0x72cbdbac]; xchg eax, ebx; call eax; 
0x000e2176: xchg eax, ebx; sub byte ptr [ebx + edi*8 + 0xc838dff], al; test bl, bh; dec dword ptr [edi]; inc esp; ret 0x45f6; 
0x0013398f: xchg eax, ebx; sub dword ptr [ebx], eax; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0007d942: xchg eax, ebx; xor byte ptr [edx], bl; add byte ptr [eax], al; add esp, 0x100; pop ebx; ret; 
0x00175409: xchg eax, ecx; aad 0xed; jmp dword ptr [edx]; 
0x00019349: xchg eax, ecx; add al, 5; add byte ptr [eax], al; pop ebx; ret; 
0x00198311: xchg eax, ecx; add al, byte ptr [eax]; cmp al, 4; clc; jmp dword ptr [esi + 2]; 
0x001983c1: xchg eax, ecx; add al, byte ptr [eax]; pop esp; pop es; clc; call edx; 
0x000dc0d9: xchg eax, ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x76d3db94], cl; ret 0x748b; 
0x0015afb2: xchg eax, ecx; add dh, dh; ljmp ptr [ecx - 0x3c000500]; add dh, bh; jmp edi; 
0x00188879: xchg eax, ecx; add dword ptr [eax], eax; cld; hlt; call dword ptr [eax]; 
0x001888a9: xchg eax, ecx; add dword ptr [eax], eax; push ds; cld; hlt; call dword ptr [eax]; 
0x00184d0c: xchg eax, ecx; add eax, dword ptr [eax]; add byte ptr [eax], al; bound ecx, qword ptr [esi]; or byte ptr [ebx + 0x40e5f02], al; ret; 
0x0016796d: xchg eax, ecx; cld; call dword ptr [eax - 0x6e]; 
0x00139351: xchg eax, ecx; fld qword ptr [edx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0016a871: xchg eax, ecx; inc dword ptr [eax]; mov dword ptr [ecx], 0xf391b400; jmp dword ptr [eax]; 
0x000f0d50: xchg eax, ecx; insb byte ptr es:[edi], dx; xchg bl, bh; push ebx; ret; 
0x0017baa8: xchg eax, ecx; int1; out dx, eax; call dword ptr [eax]; 
0x0008d1d4: xchg eax, ecx; jmp ecx; 
0x000e3806: xchg eax, ecx; mov dword ptr [0xf000000], eax; inc esp; ret 0x6c89; 
0x00064d82: xchg eax, ecx; mov eax, 0x5b000000; ret; 
0x000a74bb: xchg eax, ecx; or al, 0x8d; inc edx; add eax, dword ptr [ebp + 0x5ed475f6]; ret; 
0x0017b7d8: xchg eax, ecx; out dx, eax; call dword ptr [eax]; 
0x000024f5: xchg eax, ecx; pop edx; mov edx, 0xd8f9715c; dec esi; jp 0x24df; jmp dword ptr [ebx]; 
0x000b9d65: xchg eax, ecx; push cs; add byte ptr [ecx - 0x4c7bd428], cl; sub byte ptr [ebp - 0xf], 0xff; jmp eax; 
0x000eae2a: xchg eax, ecx; pushfd; add dword ptr [eax], eax; add bl, dh; ret; 
0x0015a078: xchg eax, ecx; ret; 
0x00193039: xchg eax, ecx; sbb esi, esi; jmp dword ptr [edx]; 
0x0002e899: xchg eax, ecx; setne al; movzx eax, al; ret; 
0x00198905: xchg eax, edi; add al, byte ptr [eax]; cmp byte ptr [eax], ch; clc; call dword ptr [ebx]; 
0x00178929: xchg eax, edi; add byte ptr [eax], al; inc esp; sub ch, bh; jmp dword ptr [ebx]; 
0x00168065: xchg eax, edi; add byte ptr [eax], al; mov ah, 0x16; in al, dx; call dword ptr [eax - 0x68]; 
0x00188989: xchg eax, edi; add dword ptr [eax], eax; pop ss; hlt; jmp dword ptr [eax]; 
0x0016c4e9: xchg eax, edi; call eax; 
0x000ef35f: xchg eax, edi; cmp al, 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00191691: xchg eax, edi; fprem1; jmp dword ptr [edx]; 
0x00178139: xchg eax, edi; fsubp st(6); jmp dword ptr [edx]; 
0x00168499: xchg eax, edi; in al, dx; jmp dword ptr [eax - 0x53]; 
0x00177151: xchg eax, edi; iretd; out dx, al; jmp dword ptr [edx]; 
0x0007e19e: xchg eax, edi; mov esi, edx; ret; 
0x00198061: xchg eax, edi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0008eb15: xchg eax, edi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000e983a: xchg eax, edi; or eax, dword ptr [eax]; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xc1; call dword ptr gs:[0x10]; 
0x000e989a: xchg eax, edi; or eax, dword ptr [eax]; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xc2; call dword ptr gs:[0x10]; 
0x00174ec5: xchg eax, edi; push ebp; in eax, dx; jmp dword ptr [edx]; 
0x000e5603: xchg eax, edi; ret 0x920f; 
0x000e5468: xchg eax, edi; ret 0xd689; 
0x0002795f: xchg eax, edi; ret 0xd789; 
0x0004b2a7: xchg eax, edi; ret 0xe083; 
0x00046cfa: xchg eax, edi; ret 0xffff; 
0x000b984b: xchg eax, edi; ror byte ptr [edi], 0x92; ret 0xd028; 
0x000d3e0d: xchg eax, edi; ror dword ptr [edi], -0x6e; ret 0xd138; 
0x00194cec: xchg eax, edi; sub esi, edi; call dword ptr [eax]; 
0x001591d8: xchg eax, edi; xchg eax, esp; ret; 
0x0017a165: xchg eax, edi; xor bh, ch; jmp dword ptr [edx]; 
0x00166e78: xchg eax, edx; adc ch, bh; jmp dword ptr [edx]; 
0x0019895d: xchg eax, edx; add al, byte ptr [eax]; cdq; xor bh, al; call dword ptr [eax]; 
0x0019898d: xchg eax, edx; add al, byte ptr [eax]; jns 0x1989c4; clc; call dword ptr [eax]; 
0x00167f5d: xchg eax, edx; add byte ptr [eax], al; imul bl; jmp eax; 
0x0007c41e: xchg eax, edx; add dword ptr [eax], eax; add bh, dh; ret 3; 
0x0012309a: xchg eax, edx; add dword ptr [eax], eax; add byte ptr [ebp - 0x9d7b], cl; dec dword ptr [ecx - 0xbb6b]; jmp dword ptr [esi - 0x39]; 
0x00188909: xchg eax, edx; add dword ptr [eax], eax; fdivp st(3); hlt; call dword ptr [eax]; 
0x001884ed: xchg eax, edx; add dword ptr [eax], eax; rcl bh, 0xf3; jmp dword ptr [eax]; 
0x0016c591: xchg eax, edx; clc; jmp eax; 
0x00167975: xchg eax, edx; cld; inc dword ptr [eax - 0x6d]; cld; call eax; 
0x001678ad: xchg eax, edx; cld; lcall ptr [edx - 0x70]; cld; call esi; 
0x001673a4: xchg eax, edx; cmp al, 0xfd; jmp edx; 
0x00064ed2: xchg eax, edx; cwde; add byte ptr [eax], al; add byte ptr [ecx - 0x2f00dbec], cl; add esp, 0x1c; ret; 
0x00167634: xchg eax, edx; dec esi; std; call dword ptr [edx]; 
0x00168441: xchg eax, edx; in al, dx; jmp eax; 
0x0015912e: xchg eax, edx; inc edx; jmp dword ptr [edx - 0x71]; 
0x00115efd: xchg eax, edx; mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x0009159a: xchg eax, edx; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0019227d: xchg eax, edx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x001667a4: xchg eax, edx; out 0xfc, eax; jmp dword ptr [edx]; 
0x0017c1dd: xchg eax, edx; out dx, eax; jmp dword ptr [edi]; 
0x00166f24: xchg eax, edx; push ds; std; jmp edx; 
0x00094874: xchg eax, edx; pushal; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0012f62b: xchg eax, edx; ret 0xb60f; 
0x00132589: xchg eax, edx; ret 0xb9; 
0x001313a4: xchg eax, edx; ret 0xce89; 
0x0012f342: xchg eax, edx; ret 0xcf89; 
0x00037eac: xchg eax, edx; ret 0xd009; 
0x000b984e: xchg eax, edx; ret 0xd028; 
0x000d3e10: xchg eax, edx; ret 0xd138; 
0x0002fa1f: xchg eax, edx; ret 0xd789; 
0x000e546d: xchg eax, edx; ret 0xf189; 
0x00158b93: xchg eax, edx; ret 0xf869; 
0x00174395: xchg eax, edx; scasb al, byte ptr es:[edi]; in al, dx; jmp dword ptr [edx]; 
0x0017739d: xchg eax, edx; shr esi, 1; jmp dword ptr [edx]; 
0x0016cec1: xchg eax, edx; stc; call dword ptr [eax - 0x1bfffd54]; xchg eax, edx; stc; jmp eax; 
0x00166a24: xchg eax, edx; stc; cld; jmp dword ptr [edx]; 
0x0016cec9: xchg eax, edx; stc; jmp eax; 
0x0017bdf9: xchg eax, edx; test bh, ch; jmp dword ptr [edx]; 
0x0017a144: xchg eax, edx; xchg eax, esp; out dx, eax; call dword ptr [eax]; 
0x000eff64: xchg eax, edx; xor byte ptr [ebx], cl; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00198815: xchg eax, esi; add al, byte ptr [eax]; or byte ptr [eax + edi*8], bl; jmp esp; 
0x000696c1: xchg eax, esi; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0016800d: xchg eax, esi; add byte ptr [eax], al; mov ah, 0xa; in al, dx; call esp; 
0x00002546: xchg eax, esi; add byte ptr [edx], al; xchg dh, ch; inc ebp; ret 0x88ad; 
0x000f623d: xchg eax, esi; add dword ptr [eax], eax; add byte ptr [ebx - 0x12f7d], cl; jmp dword ptr [ebp - 0x75]; 
0x00196515: xchg eax, esi; add dword ptr [edx], ecx; ret; 
0x0016798d: xchg eax, esi; cld; call eax; 
0x0016798d: xchg eax, esi; cld; call eax; xchg eax, esi; cld; jmp dword ptr [eax - 0x69]; 
0x00167991: xchg eax, esi; cld; jmp dword ptr [eax - 0x69]; 
0x001255d4: xchg eax, esi; cld; jmp dword ptr [ecx]; 
0x001860a1: xchg eax, esi; fdivr st(1); jmp dword ptr [edx]; 
0x00178109: xchg eax, esi; fdivr st(2); jmp dword ptr [edx]; 
0x00190e21: xchg eax, esi; idiv bh; ret 0; 
0x00168469: xchg eax, esi; in al, dx; call eax; 
0x000b9aa1: xchg eax, esi; lea esi, dword ptr [esi]; mov eax, 0x40; ret; 
0x000c9416: xchg eax, esi; loope 0xc9418; dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x7d]; 
0x0001ae79: xchg eax, esi; mov edx, dword ptr [esi + 0xc]; mov dword ptr [esp], edx; call eax; 
0x001706cb: xchg eax, esi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x00149bbd: xchg eax, esi; pop esi; lea eax, dword ptr [edi - 0x10]; pop edi; ret; 
0x00167888: xchg eax, esi; pop esi; std; jmp esi; 
0x001025b7: xchg eax, esi; ret 0x4439; 
0x00115c8e: xchg eax, esi; ret 0x49e9; 
0x000cefa6: xchg eax, esi; ret 0xffff; 
0x00167208: xchg eax, esi; std; push esi; std; jmp eax; 
0x00167104: xchg eax, esi; sub al, 0xfd; jmp esi; 
0x0016c010: xchg eax, esp; aaa; clc; call dword ptr [eax]; 
0x0017cb44: xchg eax, esp; aam 0; add al, bl; out dx, eax; call dword ptr [eax]; 
0x0017ebbc: xchg eax, esp; aas; sti; jmp esp; 
0x001195ba: xchg eax, esp; adc eax, 0x65; idiv edi; jmp edx; 
0x0006b296: xchg eax, esp; add al, byte ptr [eax]; add byte ptr [ebx + 0x29824ac], cl; add byte ptr [eax], al; add esp, 0x29c; ret; 
0x0016cb1d: xchg eax, esp; add al, byte ptr [eax]; cmp al, 0xf9; call esp; 
0x001986bd: xchg eax, esp; add al, byte ptr [eax]; jo 0x1986d7; clc; call dword ptr [esi]; 
0x000e3ce5: xchg eax, esp; add byte ptr [eax], al; add byte ptr [ebx + 0x9824ac], cl; add byte ptr [eax], al; add esp, 0x9c; ret 4; 
0x0002331b: xchg eax, esp; add byte ptr [eax], al; add byte ptr [ebx + 0x9824ac], cl; add byte ptr [eax], al; add esp, 0x9c; ret; 
0x0002f218: xchg eax, esp; add byte ptr [eax], al; add byte ptr [ebx + 0x9824bc], cl; add byte ptr [eax], al; add esp, 0x9c; ret; 
0x00064d7a: xchg eax, esp; add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov eax, 0x5b000000; ret; 
0x0006b95c: xchg eax, esp; add byte ptr [eax], al; add byte ptr [ecx + 0x54892434], cl; and al, 4; call dword ptr [eax + 0xc]; 
0x00042457: xchg eax, esp; add byte ptr [eax], al; add byte ptr [ecx + 0x6c892414], cl; and al, 8; mov dword ptr [esp + 4], eax; call dword ptr [ecx + 0x1c]; 
0x00066097: xchg eax, esp; add byte ptr [eax], al; add byte ptr [ecx - 0x76f7db84], cl; xor al, 0x24; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x0006687b: xchg eax, esp; add byte ptr [eax], al; add byte ptr [ecx - 0x76f7db94], cl; adc al, 0x24; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x1c]; 
0x000724a3: xchg eax, esp; add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbac], cl; cmp al, 0x24; call dword ptr [eax + 0xc]; 
0x0006db93: xchg eax, esp; add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbac], cl; sub al, 0x24; call dword ptr [eax + 0x48]; 
0x00064290: xchg eax, esp; add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbac], cl; xor al, 0x24; call dword ptr [eax + 0x48]; 
0x000729f3: xchg eax, esp; add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbb4], cl; xor al, 0x24; call dword ptr [eax + 0x18]; 
0x0006bfb2: xchg eax, esp; add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbbc], cl; xor al, 0x24; call dword ptr [edx + 0x18]; 
0x0007c441: xchg eax, esp; add byte ptr [eax], al; add byte ptr [edx - 9], al; ret 3; 
0x0018bc92: xchg eax, esp; add cl, byte ptr [edx]; push cs; adc al, 0x43; ret; 
0x0001a2eb: xchg eax, esp; add dword ptr [eax], 0x73; out 0xff, eax; jmp edx; 
0x0000c979: xchg eax, esp; add dword ptr [eax], eax; ret 1; 
0x00187594: xchg eax, esp; add dword ptr [ecx], 0; dec eax; adc bl, dh; call dword ptr [ebx]; 
0x0011ce01: xchg eax, esp; and al, 0x30; add eax, 0x74890000; and al, 4; mov dword ptr [esp], edx; call dword ptr [eax + 0xc]; 
0x000478ce: xchg eax, esp; and al, 0x3c; and byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd285; 
0x001163c2: xchg eax, esp; and al, 0x80; add byte ptr [eax], al; add byte ptr [ebx + 0x20508b02], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x00021964: xchg eax, esp; and al, 0x80; add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbbc], cl; adc al, 0x24; call dword ptr [ebp]; 
0x0011186d: xchg eax, esp; and al, 0x84; add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbac], cl; cmp al, 0x24; call dword ptr [eax + 4]; 
0x000d5298: xchg eax, esp; and al, 0x88; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x28b; 
0x0005ba5f: xchg eax, esp; and al, 0x90; add dword ptr [eax], 0x24148900; call eax; 
0x000ac4b4: xchg eax, esp; and al, 0x95; add byte ptr [eax], al; add byte ptr [ebx - 0x10e36d], cl; inc dword ptr [eax - 0x7bf0ffc6]; ret; 
0x0001f667: xchg eax, esp; and al, 0xa0; add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbbc], cl; adc al, 0x24; call dword ptr [esi]; 
0x0012e0bf: xchg eax, esp; and al, 0xb0; add byte ptr [eax], al; add al, ch; test eax, 0x81ffffbc; ret; 
0x0011cc24: xchg eax, esp; and al, 0xd0; add al, 0; add byte ptr [ecx - 0x76fbdbac], cl; xor al, 0x24; call dword ptr [eax]; 
0x000d25b5: xchg eax, esp; and al, 0xd4; add byte ptr [eax], al; add byte ptr [edi], cl; xchg eax, ebp; ret 0x8488; 
0x0009f315: xchg eax, esp; and al, 0xe8; adc byte ptr [eax], al; add byte ptr [ebx - 0x76b3dbbc], cl; ret 0xfac1; 
0x0010e5ab: xchg eax, esp; and al, 0xe8; add dword ptr [eax], eax; add al, ch; mov ebp, 0x810001b7; ret; 
0x0018ecfc: xchg eax, esp; and esi, esi; jmp edi; 
0x00167985: xchg eax, esp; cld; inc dword ptr [eax + 0x20fffc95]; xchg eax, esi; cld; call eax; 
0x00063340: xchg eax, esp; cli; adc eax, dword ptr [eax]; ret 0x13ff; 
0x0016d9d1: xchg eax, esp; cli; dec dword ptr [edx + esi*8 - 0x6a0bfffe]; cli; jmp esp; 
0x0016c050: xchg eax, esp; cmp eax, edi; jmp esp; 
0x00024438: xchg eax, esp; cwde; add eax, 0x24548b00; sbb byte ptr [ebx - 0x7ae3dbb4], cl; sal byte ptr [ebp - 0x50], 0x83; ret 0x8901; 
0x0018d194: xchg eax, esp; fild word ptr [ecx]; add al, bh; fdivr st(5), st(0); call dword ptr [eax]; 
0x00168b90: xchg eax, esp; fldz; call dword ptr [eax]; 
0x00168461: xchg eax, esp; in al, dx; ljmp ptr [eax + 0x40000ac]; xchg eax, esi; in al, dx; call eax; 
0x00169f98: xchg eax, esp; inc ebx; int1; dec dword ptr [edx + edx*2 + 0x44240001]; int1; jmp esp; 
0x0016cc60: xchg eax, esp; inc edi; stc; call eax; 
0x0016cc08: xchg eax, esp; inc esp; stc; jmp dword ptr [eax]; 
0x0016c818: xchg eax, esp; int 0xf8; jmp dword ptr [eax - 0x7e]; 
0x00178144: xchg eax, esp; mov al, byte ptr [eax]; add dh, ch; sti; call dword ptr [eax]; 
0x0017bd44: xchg eax, esp; mov byte ptr [eax], 0; mov cl, 0xef; out dx, eax; call dword ptr [eax]; 
0x0016a400: xchg eax, esp; mov dl, 0xf1; jmp eax; 
0x0008306a: xchg eax, esp; mov ebx, 0xffee0080; jmp edx; 
0x0002e2db: xchg eax, esp; mov edx, 0xc381000f; adc eax, 0x8700174d; sar dword ptr [eax + 0xb3], cl; call dword ptr gs:[0x10]; 
0x0016e3c8: xchg eax, esp; movsd dword ptr es:[edi], dword ptr [esi]; sti; call eax; 
0x00168910: xchg eax, esp; nop; in eax, dx; call eax; 
0x0016fe41: xchg eax, esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001964dc: xchg eax, esp; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x000023fe: xchg eax, esp; or dword ptr [eax + 0x41001835], 0xffffffdd; out 0xa9, al; ret 0xbd07; 
0x00045034: xchg eax, esp; or dword ptr [eax + ebp*2 - 5], 0xffffffff; add edx, dword ptr [ebp - 0x49c]; mov dword ptr [ebp - 0x510], 1; mov dword ptr [ebp - 0x4b8], edi; jmp edx; 
0x0017a0e5: xchg eax, esp; out dx, eax; call dword ptr [eax]; 
0x00001a63: xchg eax, esp; pop edx; int 0x4f; jmp edx; 
0x001682a8: xchg eax, esp; push -0x14; ljmp ptr [eax]; mov dword ptr [0x6af40000], eax; in al, dx; call dword ptr [eax - 0x5d]; 
0x000d45a8: xchg eax, esp; ret 0x133c; 
0x000c8fff: xchg eax, esp; ret 0x22e9; 
0x0004b4f9: xchg eax, esp; ret 0x25e9; 
0x000a8b91: xchg eax, esp; ret 0x2b3c; 
0x00017f25: xchg eax, esp; ret 0x348d; 
0x000db47f: xchg eax, esp; ret 0x34eb; 
0x0004c3c9: xchg eax, esp; ret 0x3ce9; 
0x000d4869: xchg eax, esp; ret 0x3d; 
0x000db3f0: xchg eax, esp; ret 0x403c; 
0x0004b599: xchg eax, esp; ret 0x50e9; 
0x0004c3b2: xchg eax, esp; ret 0x53e9; 
0x000c68ff: xchg eax, esp; ret 0x5408; 
0x0006527a: xchg eax, esp; ret 0x548d; 
0x000c820c: xchg eax, esp; ret 0x5589; 
0x000714e9: xchg eax, esp; ret 0x57e9; 
0x0001bbde: xchg eax, esp; ret 0x66e9; 
0x00073a2a: xchg eax, esp; ret 0x6c89; 
0x00049c8b: xchg eax, esp; ret 0x73e9; 
0x0009a06e: xchg eax, esp; ret 0x7c83; 
0x0006c36b: xchg eax, esp; ret 0x7c89; 
0x0004c411: xchg eax, esp; ret 0x7de9; 
0x0011b696: xchg eax, esp; ret 0x8365; 
0x000c8ebb: xchg eax, esp; ret 0x85c7; 
0x000c8220: xchg eax, esp; ret 0x8d89; 
0x0004b644: xchg eax, esp; ret 0x97e9; 
0x000c8d7c: xchg eax, esp; ret 0xa5e9; 
0x00050a89: xchg eax, esp; ret 0xb60f; 
0x000e6d62: xchg eax, esp; ret 0xb; 
0x0009a9db: xchg eax, esp; ret 0xbc83; 
0x00019548: xchg eax, esp; ret 0xc031; 
0x00047ffd: xchg eax, esp; ret 0xc183; 
0x000db4b5: xchg eax, esp; ret 0xc481; 
0x000ca351: xchg eax, esp; ret 0xc589; 
0x000497a5: xchg eax, esp; ret 0xc5eb; 
0x000f8aa9: xchg eax, esp; ret 0xc683; 
0x0004acda: xchg eax, esp; ret 0xc783; 
0x000dbd5c: xchg eax, esp; ret 0xc984; 
0x0012f638: xchg eax, esp; ret 0xc985; 
0x0012f491: xchg eax, esp; ret 0xca85; 
0x001210df: xchg eax, esp; ret 0xd008; 
0x0003ef28: xchg eax, esp; ret 0xd089; 
0x00047cd0: xchg eax, esp; ret 0xd284; 
0x0010556d: xchg eax, esp; ret 0xd285; 
0x000f71f2: xchg eax, esp; ret 0xd3eb; 
0x0004ab74: xchg eax, esp; ret 0xd589; 
0x0010a358: xchg eax, esp; ret 0xd689; 
0x000ad6cb: xchg eax, esp; ret 0xd789; 
0x0004b5fc: xchg eax, esp; ret 0xdfe9; 
0x000740fc: xchg eax, esp; ret 0xe783; 
0x0004b52a: xchg eax, esp; ret 0xe9; 
0x0009bb18: xchg eax, esp; ret 0xed31; 
0x0007cb4d: xchg eax, esp; ret 0xed83; 
0x000484d4: xchg eax, esp; ret 0xf7e9; 
0x0011e65f: xchg eax, esp; ret 0xf883; 
0x00023cd9: xchg eax, esp; ret 0xfe83; 
0x0016a528: xchg eax, esp; ret 0xfff1; 
0x000504d8: xchg eax, esp; ret; 
0x0017b744: xchg eax, esp; rol byte ptr [eax], 0; int1; out dx, eax; call dword ptr [eax]; 
0x000f8b19: xchg eax, esp; rol byte ptr [ebx + 0x5e5b3cc4], 0x5f; pop ebp; ret; 
0x00114bb1: xchg eax, esp; rol byte ptr [ebx + 0x5e5b4cc4], 0x5f; pop ebp; ret; 
0x00109a30: xchg eax, esp; rol byte ptr [ebx + 0x5e5b5cc4], 0x5f; pop ebp; ret; 
0x000db0c7: xchg eax, esp; rol byte ptr [ebx + 0x5e5b7cc4], 0x5f; pop ebp; ret 0x10; 
0x000e843f: xchg eax, esp; rol byte ptr [ebx - 0x3b7cfe18], 0x24; pop ebx; pop esi; ret; 
0x000e0916: xchg eax, esp; rol byte ptr [ebx - 0x49f0a73c], 0xc0; pop ebx; ret; 
0x000ef0e3: xchg eax, esp; rol byte ptr [ebx - 0x49f0d33c], 0xc0; sub eax, 1; ret; 
0x000d84b0: xchg eax, esp; rol byte ptr [ebx - 0x49f0d73c], 0xc0; pop ebx; ret; 
0x000ef0a3: xchg eax, esp; rol byte ptr [ebx - 0x49f0e33c], 0xc0; sub eax, 1; ret; 
0x0011f9df: xchg eax, esp; rol byte ptr [ebx - 0x49f0e73c], 0xc0; pop ebx; ret; 
0x000bd62b: xchg eax, esp; rol byte ptr [ebx - 0x49f0f73c], 0xc0; ret; 
0x000dac53: xchg eax, esp; ror byte ptr [ebp + 0x5e5bf465], 0x5f; pop ebp; ret 0xc; 
0x000ad412: xchg eax, esp; ror byte ptr [ebp + 0x6c8b0014], 0x24; sub al, 1; ret 0x48d; 
0x000710c1: xchg eax, esp; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfe18], 0x18; pop esi; ret; 
0x00114110: xchg eax, esp; ror byte ptr [edi], 0xb6; ror byte ptr [ebx - 0x74ebdb8c], 0x7c; and al, 0x18; add esp, 0x1c; ret; 
0x0013141b: xchg eax, esp; ror dword ptr [ebx + 0xf082474], -0x6e; ret 0xb60f; 
0x0016beb0: xchg eax, esp; sbb bh, al; call eax; 
0x0016b730: xchg eax, esp; sbb bh, dh; call esp; 
0x00019b58: xchg eax, esp; sbb byte ptr [eax], al; mov eax, dword ptr [ecx - 0xf8]; add eax, dword ptr gs:[0]; ret; 
0x0007bedf: xchg eax, esp; sbb dword ptr [eax], eax; add byte ptr [ebx - 0xc37d], cl; dec dword ptr [ecx + 0x18c48310]; pop ebx; ret; 
0x0017227c: xchg eax, esp; shr bl, cl; jmp dword ptr [esi]; 
0x0010a4ed: xchg eax, esp; sldt word ptr [eax]; add esp, 0x18; pop ebx; ret; 
0x0016cee1: xchg eax, esp; stc; call eax; 
0x0016ced9: xchg eax, esp; stc; inc dword ptr [eax - 0x3bfffd53]; xchg eax, esp; stc; call eax; 
0x00166c54: xchg eax, esp; std; cld; push dword ptr [esi + edi*8]; cld; call esp; 
0x00057885: xchg eax, esp; sub dword ptr [eax + esi*2 - 5], -1; add edx, dword ptr [ebp - 0x106c]; mov dword ptr [ebp - 0x10c8], 1; mov dword ptr [ebp - 0x1080], ecx; jmp edx; 
0x0016b380: xchg eax, esp; sub esi, esi; lcall ptr [eax + 0x6400020f]; sub dh, dh; call eax; 
0x0016c5b8: xchg eax, esp; xchg eax, ebp; clc; jmp eax; 
0x0016c590: xchg eax, esp; xchg eax, edx; clc; jmp eax; 
0x0016800c: xchg eax, esp; xchg eax, esi; add byte ptr [eax], al; mov ah, 0xa; in al, dx; call esp; 
0x0016ec18: xchg eax, esp; xor esp, edi; jmp dword ptr [eax]; 
0x001902fe: xchg ebp, esi; jmp dword ptr [edx]; 
0x000ef042: xchg ebx, ecx; mov eax, 0x143; call dword ptr gs:[0x10]; 
0x0012ea53: xchg ebx, ecx; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x000b7be6: xchg ebx, ecx; mov eax, 0x2b; call dword ptr gs:[0x10]; 
0x000e6beb: xchg ebx, ecx; mov eax, 0x2d; call dword ptr gs:[0x10]; 
0x000eeb83: xchg ebx, ecx; mov eax, 0x95; call dword ptr gs:[0x10]; 
0x000b912f: xchg ebx, ecx; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000b91af: xchg ebx, ecx; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x000eede6: xchg ebx, ecx; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x000eede6: xchg ebx, ecx; mov eax, 0xd7; call dword ptr gs:[0x10]; xchg ebx, ecx; ret; 
0x000eee06: xchg ebx, ecx; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x000eee06: xchg ebx, ecx; mov eax, 0xd8; call dword ptr gs:[0x10]; xchg ebx, ecx; ret; 
0x000a8448: xchg ebx, ecx; mov eax, 0xd; call dword ptr gs:[0x10]; 
0x000232a7: xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; 
0x0010bab8: xchg ebx, ecx; mov eax, 6; call dword ptr gs:[0x10]; xchg ebx, ecx; ret; 
0x000eedf4: xchg ebx, ecx; ret; 
0x000fc56f: xchg ebx, edi; call dword ptr gs:[0x10]; 
0x000b84c4: xchg ebx, edi; int 0x80; 
0x000fc791: xchg ebx, edi; mov ebx, dword ptr [esp + 0x30]; mov esi, dword ptr [esp + 0x34]; mov edi, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x000c5b42: xchg ebx, edi; neg eax; pop edi; ret; 
0x000ba6b9: xchg ebx, edx; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000e9574: xchg ebx, edx; mov eax, 0x10f; call dword ptr gs:[0x10]; 
0x000ef001: xchg ebx, edx; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0003edfe: xchg ebx, edx; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x000ecb3c: xchg ebx, edx; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x000e65c4: xchg ebx, edx; mov eax, 0x4b; call dword ptr gs:[0x10]; 
0x000e6a84: xchg ebx, edx; mov eax, 0x60; call dword ptr gs:[0x10]; 
0x000ddc4a: xchg ebx, edx; mov eax, 0x6a; call dword ptr gs:[0x10]; 
0x000dddca: xchg ebx, edx; mov eax, 0x6b; call dword ptr gs:[0x10]; 
0x000ddd0a: xchg ebx, edx; mov eax, 0x6c; call dword ptr gs:[0x10]; 
0x0002e1f5: xchg ebx, edx; mov eax, 0xb0; call dword ptr gs:[0x10]; 
0x0002e249: xchg ebx, edx; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000df7ab: xchg ebx, edx; mov eax, 0xb7; call dword ptr gs:[0x10]; 
0x000e6584: xchg ebx, edx; mov eax, 0xbf; call dword ptr gs:[0x10]; 
0x000ddc18: xchg ebx, edx; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ddd98: xchg ebx, edx; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000ddcd8: xchg ebx, edx; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x000e7991: xchg ebx, edx; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x000e7a11: xchg ebx, edx; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x000b90e4: xchg ebx, edx; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x000b55b1: xchg ebx, edx; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x0016ce61: xchg ecx, edi; call esp; 
0x0017be8a: xchg edi, ebp; jmp dword ptr [edx]; 
0x000de1d2: xchg edi, ebx; mov eax, 0x10c; call dword ptr gs:[0x10]; 
0x000de232: xchg edi, ebx; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x0002de91: xchg edi, ebx; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000de8a9: xchg edi, ebx; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000de701: xchg edi, ebx; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x000ddfa9: xchg edi, ebx; mov eax, 0x129; call dword ptr gs:[0x10]; 
0x000e9755: xchg edi, ebx; mov eax, 0x12b; call dword ptr gs:[0x10]; 
0x000de043: xchg edi, ebx; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000e0b71: xchg edi, ebx; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x00055569: xchg edi, ebx; mov eax, 0x12e; call dword ptr gs:[0x10]; 
0x000e0a31: xchg edi, ebx; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x000e0ad9: xchg edi, ebx; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x000de631: xchg edi, ebx; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x000def0b: xchg edi, ebx; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x000ddace: xchg edi, ebx; mov eax, 0x13e; call dword ptr gs:[0x10]; 
0x000e140d: xchg edi, ebx; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x000eefa6: xchg edi, ebx; mov eax, 0x141; call dword ptr gs:[0x10]; 
0x000eef5f: xchg edi, ebx; mov eax, 0x147; call dword ptr gs:[0x10]; 
0x000e6616: xchg edi, ebx; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000f0c58: xchg edi, ebx; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x000e89c5: xchg edi, ebx; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x000e5fa3: xchg edi, ebx; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00102aa8: xchg edi, ebx; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000e8213: xchg edi, ebx; mov eax, 0x58; call dword ptr gs:[0x10]; 
0x000b7c64: xchg edi, ebx; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x0003ea69: xchg edi, ebx; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x000b3e3a: xchg edi, ebx; mov eax, 0x8d; call dword ptr gs:[0x10]; 
0x000e6d70: xchg edi, ebx; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x0006a2b8: xchg edi, ebx; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000e0c20: xchg edi, ebx; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x0002dfce: xchg edi, ebx; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x0002e142: xchg edi, ebx; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0002e333: xchg edi, ebx; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0002f142: xchg edi, ebx; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x000b8601: xchg edi, ebx; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x000e9841: xchg edi, ebx; mov eax, 0xc1; call dword ptr gs:[0x10]; 
0x000e98a1: xchg edi, ebx; mov eax, 0xc2; call dword ptr gs:[0x10]; 
0x000e00d1: xchg edi, ebx; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x000e0071: xchg edi, ebx; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000b94cc: xchg edi, ebx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000b9401: xchg edi, ebx; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000b955c: xchg edi, ebx; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000b9461: xchg edi, ebx; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x000e0011: xchg edi, ebx; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x000c5b34: xchg edi, ebx; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000b3ef1: xchg edi, ebx; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000df0c1: xchg edi, ebx; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000eeda9: xchg edi, ebx; mov eax, 0xe1; call dword ptr gs:[0x10]; 
0x000ddf11: xchg edi, ebx; mov eax, 0xe; call dword ptr gs:[0x10]; 
0x000c568d: xchg edi, ebx; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x000c55e0: xchg edi, ebx; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x001028e8: xchg edi, ebx; mov eax, 3; call dword ptr gs:[0x10]; 
0x000de7f9: xchg edi, ebx; mov eax, 5; call dword ptr gs:[0x10]; 
0x001964a5: xchg edi, esi; call edi; 
0x0010b97d: xchg esi, esp; add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x0013945b: xchg esp, ebx; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013c798: xlatb; aad 0xfe; inc dword ptr [ecx + 0x2af44c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00114d18: xlatb; aam 0xfb; jmp dword ptr [ebp - 0x75]; 
0x0016d595: xlatb; add al, byte ptr [eax]; mov bh, 0xb; cli; call dword ptr [eax - 0x29]; 
0x0016d5ad: xlatb; add al, byte ptr [eax]; out 0xb, eax; cli; jmp eax; 
0x000eede9: xlatb; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; xchg ebx, ecx; ret; 
0x00076e18: xlatb; add byte ptr [eax], al; add byte ptr [ebx - 0x15b55], cl; dec dword ptr [ecx + 0x54892414]; and al, 0x28; call dword ptr [ebp]; 
0x0017c94d: xlatb; add byte ptr [eax], al; and ch, 0xef; call dword ptr [eax]; 
0x0017c931: xlatb; add byte ptr [eax], al; lodsb al, byte ptr [esi]; in al, 0xef; jmp ebx; 
0x00168b9d: xlatb; add byte ptr [eax], al; xor al, 0xda; out dx, al; call dword ptr [eax - 0x29]; 
0x00151889: xlatb; add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax], al; call edi; 
0x0016aa7d: xlatb; add dword ptr [eax], eax; test byte ptr [edx], al; hlt; call dword ptr [eax - 0x29]; 
0x0000cf14: xlatb; and al, 0; add byte ptr [eax], dl; ret; 
0x000e660a: xlatb; call 0x129d73; add ebx, 0xbc9e4; xchg edi, ebx; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x001663e9: xlatb; cld; call dword ptr [edi + edx*8 - 4]; inc dword ptr [edi + edx*8 - 0x284b0004]; cld; jmp esp; 
0x001664f5: xlatb; cld; call eax; 
0x001663ed: xlatb; cld; inc dword ptr [edi + edx*8 - 0x284b0004]; cld; jmp esp; 
0x00166329: xlatb; cld; jmp dword ptr [ebx - 0x29]; 
0x00166339: xlatb; cld; jmp dword ptr [ebx]; 
0x001663f5: xlatb; cld; jmp esp; 
0x00166325: xlatb; cld; push dword ptr [ebx]; xlatb; cld; jmp dword ptr [ebx - 0x29]; 
0x00166335: xlatb; cld; push ebx; xlatb; cld; jmp dword ptr [ebx]; 
0x0017801e: xlatb; cli; jmp dword ptr [edx]; 
0x0015a59c: xlatb; cmp dl, dh; call dword ptr [esi + 0x39]; 
0x0019176d: xlatb; fprem1; jmp dword ptr [edx]; 
0x000882f5: xlatb; idiv bh; inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000ff0ca: xlatb; idiv edi; add esp, 0x18; pop ebx; ret; 
0x001745bd: xlatb; in al, dx; jmp dword ptr [edx]; 
0x0005a2dd: xlatb; inc dword ptr [eax - 0x10ff43]; jmp dword ptr [eax]; 
0x00058ff7: xlatb; inc dword ptr [ebx - 0x10cf43]; jmp dword ptr [eax]; 
0x00132fdd: xlatb; movdqa xmmword ptr [edx - 0x19], xmm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0016d5a8: xlatb; or edi, edx; push dword ptr [eax - 0x18fffd29]; or edi, edx; jmp eax; 
0x001779ba: xlatb; out dx, al; jmp dword ptr [edx]; 
0x00147ce2: xlatb; ret 0x498d; 
0x000032c8: xlatb; ret 0x5a51; 
0x00095388: xlatb; ret 0xc085; 
0x0012ff4a: xlatb; ret 0xf8d3; 
0x000c774a: xlatb; ret 0xfffb; 
0x000cef65: xlatb; ret 0xffff; 
0x000842e2: xlatb; ret; 
0x00095c3f: xlatb; rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x001482b6: xlatb; rol dword ptr [ebp + 0x30850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x00095550: xlatb; rol dword ptr [ebp + 0x315a75c0], -0x40; pop edi; ret; 
0x00095815: xlatb; rol dword ptr [ebp + 0x316575c0], -0x40; ret; 
0x000957e6: xlatb; rol dword ptr [ebp + 0x317475c0], -0x40; ret; 
0x001482f5: xlatb; rol dword ptr [ebp + 0x71850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x00095516: xlatb; rol dword ptr [ebp - 0x4f7af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x00095782: xlatb; ror dword ptr [edi], -0x43; rol byte ptr [ecx], 0xc8; ret; 
0x001861e2: xlatb; stc; jmp dword ptr [edx]; 
0x00194c8c: xlatb; sub esi, edi; call dword ptr [eax]; 
0x000e7a9f: xlatb; xchg edi, ebx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000e7b5f: xlatb; xchg edi, ebx; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00177a75: xlatb; xlatb; out dx, al; jmp dword ptr [edx]; 
0x0017a195: xlatb; xor bh, ch; jmp dword ptr [edx]; 
0x0016dba4: xor ah, bh; add al, byte ptr [eax]; in al, 0xc8; cli; call dword ptr [eax - 4]; 
0x001691d4: xor ah, bh; add byte ptr [eax], al; into; adc dh, al; jmp dword ptr [eax - 4]; 
0x0016ebf9: xor ah, bh; jmp dword ptr [eax + 9]; 
0x0016ebf1: xor ah, bh; ljmp ptr [eax + ecx + 1]; add byte ptr [eax + esi], dl; cld; jmp dword ptr [eax + 9]; 
0x00166798: xor ah, bl; cld; push dword ptr [eax - 0x24]; cld; jmp edx; 
0x00178361: xor ah, bl; cli; jmp dword ptr [edx]; 
0x00166bcc: xor ah, dh; cld; inc eax; hlt; cld; call dword ptr [eax - 0xb]; 
0x0016626c: xor ah, dl; cld; jmp dword ptr [eax - 0x2c]; 
0x00004ff5: xor al, 0; add al, al; movsb byte ptr es:[edi], byte ptr [esi]; adc al, byte ptr [eax]; ret 2; 
0x0017d094: xor al, 0; add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e7202], al; ret; 
0x000eed4b: xor al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0018e244: xor al, 0; add byte ptr [eax], al; dec eax; lock add dword ptr [eax], eax; test byte ptr [esi + esi*8], cl; call dword ptr [edx]; 
0x00188a64: xor al, 0; add byte ptr [eax], al; push 0xf4000198; sbb esp, esi; call eax; 
0x0011eacd: xor al, 0; add byte ptr [ecx - 0x76f7db84], cl; push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 8]; 
0x0002c259: xor al, 0; add dword ptr [eax], eax; add byte ptr [eax + 0xf3d017a], al; test dword ptr [ecx - 0x7c000003], esp; ret 0x8902; 
0x00054afa: xor al, 0x10; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x1038]; add esp, 0x103c; ret; 
0x0016df64: xor al, 0x11; add eax, dword ptr [eax]; push esp; inc esp; sti; jmp dword ptr [eax + 0x11]; 
0x00158b8e: xor al, 0x19; xchg dword ptr [ecx + 0x79], ecx; xchg eax, edx; ret 0xf869; 
0x00170c34: xor al, 0x1a; add byte ptr [eax], al; cmp byte ptr [edx - 0x15], ah; jmp dword ptr [edx]; 
0x0016de38: xor al, 0x1d; sti; jmp eax; 
0x0007e336: xor al, 0x24; add esp, 8; ret; 
0x001111c9: xor al, 0x24; call 0x112f00; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0011cd69: xor al, 0x24; call 0x11cb20; mov eax, dword ptr [esi + 8]; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x0011cd39: xor al, 0x24; call 0x11cb70; mov eax, dword ptr [esi + 8]; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x000251d0: xor al, 0x24; call 0x16f50; add esp, 0x14; pop ebx; pop esi; ret; 
0x0002b96e: xor al, 0x24; call 0x16f50; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0006bbd8: xor al, 0x24; call 0x6bf30; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0006baa0: xor al, 0x24; call 0x6bf30; movsx eax, byte ptr [esi + 0x46]; mov eax, dword ptr [esi + eax + 0x94]; mov dword ptr [esp], esi; call dword ptr [eax + 0x14]; 
0x0006b897: xor al, 0x24; call 0x71870; add esp, 0x14; pop ebx; pop esi; ret; 
0x000fee91: xor al, 0x24; call 0xfd430; add esp, 0x74; pop ebx; pop esi; ret; 
0x000fef61: xor al, 0x24; call 0xfdf80; add esp, 0x74; pop ebx; pop esi; ret; 
0x001097f6: xor al, 0x24; call 0xfff40; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0006b8f4: xor al, 0x24; call dword ptr [eax + 0x10]; 
0x000720bb: xor al, 0x24; call dword ptr [eax + 0x10]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0006f61b: xor al, 0x24; call dword ptr [eax + 0x10]; add esp, 0x18; pop esi; ret; 
0x0006bab3: xor al, 0x24; call dword ptr [eax + 0x14]; 
0x0007220b: xor al, 0x24; call dword ptr [eax + 0x14]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0006c01c: xor al, 0x24; call dword ptr [eax + 0x18]; 
0x00042fdb: xor al, 0x24; call dword ptr [eax + 0x1c]; 
0x0011ef44: xor al, 0x24; call dword ptr [eax + 0x20]; 
0x00066a3f: xor al, 0x24; call dword ptr [eax + 0x24]; 
0x00066e77: xor al, 0x24; call dword ptr [eax + 0x2c]; 
0x000648ed: xor al, 0x24; call dword ptr [eax + 0x30]; 
0x000670b9: xor al, 0x24; call dword ptr [eax + 0x34]; 
0x0006fa5f: xor al, 0x24; call dword ptr [eax + 0x3c]; 
0x0006d645: xor al, 0x24; call dword ptr [eax + 0x40]; 
0x00070934: xor al, 0x24; call dword ptr [eax + 0x44]; 
0x00064299: xor al, 0x24; call dword ptr [eax + 0x48]; 
0x0006bf0f: xor al, 0x24; call dword ptr [eax + 0xc]; 
0x00114133: xor al, 0x24; call dword ptr [eax + 4]; 
0x00064494: xor al, 0x24; call dword ptr [eax + 8]; 
0x00114163: xor al, 0x24; call dword ptr [eax]; 
0x000c77e6: xor al, 0x24; call dword ptr [ebp - 0x50]; 
0x000478f2: xor al, 0x24; call dword ptr [ecx + 0x1c]; 
0x000bba28: xor al, 0x24; call dword ptr [ecx + 0x20]; 
0x0012b766: xor al, 0x24; call dword ptr [ecx + 0x38]; 
0x0006fadf: xor al, 0x24; call dword ptr [ecx + 0x40]; 
0x0006bfbb: xor al, 0x24; call dword ptr [edx + 0x18]; 
0x0007167f: xor al, 0x24; call dword ptr [edx + 0x38]; 
0x00070289: xor al, 0x24; call dword ptr [edx + 0x40]; 
0x00074f71: xor al, 0x24; call dword ptr [edx]; 
0x0001b431: xor al, 0x24; call eax; 
0x0001aff9: xor al, 0x24; call edi; 
0x00114ac7: xor al, 0x24; mov dword ptr [eax + 0x18], ecx; mov eax, 1; add esp, 8; ret; 
0x00055667: xor al, 0x24; mov dword ptr [eax + 4], 1; xor eax, eax; add esp, 0xc; ret; 
0x00042cb3: xor al, 0x24; mov dword ptr [ebp - 0x57c], edx; call dword ptr [eax + 0x1c]; 
0x00043c88: xor al, 0x24; mov dword ptr [ebp - 0x57c], edx; mov dword ptr [ebp - 0x580], ecx; call dword ptr [eax + 0x1c]; 
0x0006a572: xor al, 0x24; mov dword ptr [ecx + 4], edi; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0010fac6: xor al, 0x24; mov dword ptr [ecx], edx; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x001141fa: xor al, 0x24; mov dword ptr [edx + 0x2c], edi; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x00066c7b: xor al, 0x24; mov dword ptr [esp + 0x10], edx; mov dword ptr [esp + 0xc], 0; call dword ptr [eax + 0x24]; 
0x00112640: xor al, 0x24; mov dword ptr [esp + 4], eax; call dword ptr [edi + 0x14]; 
0x0007952f: xor al, 0x24; mov dword ptr [esp + 4], ebp; mov dword ptr [esp + 8], edx; call eax; 
0x00042a1e: xor al, 0x24; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x1c]; 
0x00042610: xor al, 0x24; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x0006f5e7: xor al, 0x24; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x20]; 
0x0006704a: xor al, 0x24; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x2c]; 
0x0006f2d8: xor al, 0x24; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x40]; 
0x0006b961: xor al, 0x24; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x0007b28d: xor al, 0x24; mov dword ptr [esp + 4], edx; call eax; 
0x0001f9ce: xor al, 0x24; mov dword ptr [esp + 8], eax; call dword ptr [ebp]; 
0x000c804e: xor al, 0x24; mov dword ptr [esp + 8], ecx; call dword ptr [ebp - 0x78]; 
0x00031685: xor al, 0x24; mov dword ptr [esp + 8], ecx; call edi; 
0x000319d1: xor al, 0x24; mov dword ptr [esp + 8], ecx; mov ecx, dword ptr [esp + 0x2c]; mov dword ptr [esp + 4], ecx; call edi; 
0x0012af1c: xor al, 0x24; mov dword ptr [esp + 8], edx; call dword ptr [eax + 0x3c]; 
0x0003305f: xor al, 0x24; mov eax, ecx; mov dword ptr [ecx + 4], edx; mov edi, dword ptr [esp + 4]; add esp, 8; ret 4; 
0x00082e02: xor al, 0x24; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x000555df: xor al, 0x24; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x00026927: xor al, 0x24; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0006cebb: xor al, 0x24; sub eax, ebp; mov dword ptr [esp + 8], eax; call dword ptr [edx + 0x38]; 
0x000711e0: xor al, 0x24; sub edx, eax; mov dword ptr [esp + 8], edx; call dword ptr [ecx + 0x38]; 
0x0016b128: xor al, 0x26; cmc; call eax; 
0x00038780: xor al, 0x2d; cld; jmp dword ptr [ebp - 0x39]; 
0x000a1afb: xor al, 0x31; rol byte ptr [ebx - 0x2d7c0040], cl; dec dword ptr [ebx + 0xf68246c]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0009cac3: xor al, 0x31; rol byte ptr [ebx - 0x2d7c0040], cl; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0016d768: xor al, 0x38; cli; jmp esp; 
0x00019524: xor al, 0x39; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000a71c2: xor al, 0x39; dec edi; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x00001fa9: xor al, 0x39; push ebx; cmp byte ptr [edi - 0x19ade7f3], dl; ret; 
0x00169f50: xor al, 0x3b; int1; call eax; 
0x0016cc38: xor al, 0x46; stc; jmp eax; 
0x0016cc58: xor al, 0x47; stc; ljmp ptr [edx + ebx*4 + 0x47940002]; stc; call eax; 
0x0016c0f8: xor al, 0x4b; clc; call dword ptr [eax]; 
0x00167540: xor al, 0x4b; std; jmp esp; 
0x00167558: xor al, 0x4c; std; jmp esp; 
0x00183f34: xor al, 0x4d; add dword ptr [eax], eax; pop eax; outsb dx, byte ptr [esi]; int1; jmp dword ptr [edi]; 
0x0016a0fc: xor al, 0x5a; add dword ptr [eax], eax; in al, 0x5c; int1; call dword ptr [eax + 0x5a]; 
0x0002e76c: xor al, 0x5b; pop esi; ret; 
0x0016cd38: xor al, 0x66; stc; call dword ptr [eax - 0x5f]; 
0x0016e180: xor al, 0x6e; sti; jmp eax; 
0x0016e1a8: xor al, 0x70; sti; lcall ptr [eax - 0x5bfffce4]; jno 0x16e1ae; call eax; 
0x00168358: xor al, 0x73; in al, dx; call dword ptr [eax]; 
0x000e5e8c: xor al, 0x75; fild dword ptr [ecx + 8]; xor byte ptr [ecx], 0xc0; pop ebx; ret; 
0x000a71c5: xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x0017a44c: xor al, 0x7a; out dx, eax; jmp dword ptr [esi]; 
0x0016c71c: xor al, 0x7b; add al, byte ptr [eax]; add al, 0xbb; clc; jmp dword ptr [eax + 0x7b]; 
0x00197134: xor al, 0x7f; add al, byte ptr [eax]; dec eax; mov cl, 0xf7; jmp dword ptr [esi]; 
0x0017bbe9: xor al, 0x81; out dx, eax; jmp dword ptr [edx]; 
0x00020954: xor al, 0x83; ret 0x3901; 
0x00022c38: xor al, 0x83; ret 0x3904; 
0x000feaf4: xor al, 0x83; ret 0x8910; 
0x000d5043: xor al, 0x83; ret 0x8b01; 
0x00047cc6: xor al, 0x85; ror byte ptr [ecx - 0x8b6b], cl; dec dword ptr [edi]; xchg eax, esp; ret 0xd284; 
0x0016c4e8: xor al, 0x87; clc; call eax; 
0x00033154: xor al, 0x89; inc ecx; or byte ptr [ecx + 0xc5189c8], cl; add esp, 0x3c; ret 4; 
0x0007b123: xor al, 0x89; push esp; and al, 4; lea edx, dword ptr [edi + 0x19]; mov dword ptr [esp], edx; call eax; 
0x00019857: xor al, 0x89; push esp; and al, 4; mov edx, dword ptr [esp + 0x30]; mov dword ptr [esp], edx; call eax; 
0x000ed7ca: xor al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x001186b4: xor al, 0x89; rcr byte ptr [esi + 0x5f], 1; ret; 
0x0006866f: xor al, 0x89; ret 0xfac1; 
0x00067048: xor al, 0x89; xor al, 0x24; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x2c]; 
0x00076c29: xor al, 0x89; xor ch, cl; ret 0xfffe; 
0x001780e4: xor al, 0x8a; add byte ptr [eax], al; daa; sti; call dword ptr [eax]; 
0x0016c538: xor al, 0x8b; clc; jmp dword ptr [eax]; 
0x000b389f: xor al, 0x8b; insb byte ptr es:[edi], dx; and al, 0x38; add esp, 0x3c; ret 4; 
0x0001bb58: xor al, 0x8b; insb byte ptr es:[edi], dx; and al, 0x38; add esp, 0x3c; ret 8; 
0x0001ba36: xor al, 0x8b; insb byte ptr es:[edi], dx; and al, 0x38; add esp, 0x3c; ret; 
0x0003f8d3: xor al, 0x8b; push eax; cmp byte ptr [ebx + 0x408b3c48], cl; inc eax; ret; 
0x001141f8: xor al, 0x8b; xor al, 0x24; mov dword ptr [edx + 0x2c], edi; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000ddc13: xor al, 0x8d; dec esp; and al, 0x10; xchg ebx, edx; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ddd93: xor al, 0x8d; dec esp; and al, 0x10; xchg ebx, edx; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000ddcd3: xor al, 0x8d; dec esp; and al, 0x10; xchg ebx, edx; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x00109979: xor al, 0x8d; xchg eax, ebx; call eax; 
0x0016c5e8: xor al, 0x98; clc; call dword ptr [eax]; 
0x001848b5: xor al, 0x9e; int1; jmp dword ptr [edx]; 
0x0019a968: xor al, 0xa2; clc; call dword ptr [eax]; 
0x001682ec: xor al, 0xa4; add byte ptr [eax], al; add al, 0x6e; in al, dx; call dword ptr [eax - 0x5c]; 
0x000eca29: xor al, 0xa8; sti; dec dword ptr [ebp - 0x4385d7d]; dec dword ptr [edi]; inc esp; ret 0x7c89; 
0x0010b700: xor al, 0xa; pop esi; pop edi; pop ebp; ret 4; 
0x00168600: xor al, 0xb8; in al, dx; jmp eax; 
0x000efb00: xor al, 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00176fac: xor al, 0xb; out dx, eax; call esp; 
0x000ba6b3: xor al, 0xba; add dword ptr [eax], eax; add byte ptr [eax], al; xchg ebx, edx; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0017b3e4: xor al, 0xbd; add byte ptr [eax], al; dec ebp; imul bh; call dword ptr [eax]; 
0x0016ac38: xor al, 0xbd; hlt; jmp dword ptr [eax - 0x1f]; 
0x00175ff5: xor al, 0xbd; out dx, al; jmp dword ptr [edx]; 
0x0008e7fe: xor al, 0xbf; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0016b1e8: xor al, 0xc5; cmc; call eax; 
0x0017bce4: xor al, 0xc6; add byte ptr [eax], al; int1; out dx, eax; out dx, eax; call dword ptr [eax]; 
0x0016ea8c: xor al, 0xc8; add al, byte ptr [eax]; cmpsd dword ptr [esi], dword ptr es:[edi]; and bh, ah; call eax; 
0x00176ebd: xor al, 0xcb; out dx, al; jmp dword ptr [edx]; 
0x0016d228: xor al, 0xcc; stc; jmp dword ptr [eax - 0x40]; 
0x0016d42c: xor al, 0xcd; add al, byte ptr [eax]; stc; push dword ptr [eax + 0x140002ce]; stc; call esp; 
0x0016d288: xor al, 0xd1; stc; push dword ptr [eax]; ret 2; 
0x0016dc20: xor al, 0xd3; cli; call dword ptr [eax - 1]; 
0x0017cae4: xor al, 0xd4; add byte ptr [eax], al; sbb ah, dh; out dx, eax; call dword ptr [eax]; 
0x00168c34: xor al, 0xda; add byte ptr [eax], al; test bh, bl; out dx, al; jmp dword ptr [eax]; 
0x00168ba0: xor al, 0xda; out dx, al; call dword ptr [eax - 0x29]; 
0x001095b2: xor al, 0xe8; mov ebx, 0x81000207; ret; 
0x000dc2dd: xor al, 0xe9; ret 0xfff0; 
0x00167c49: xor al, 0xeb; dec dword ptr [esi + edi*2]; add ah, al; xor al, 0xeb; jmp dword ptr [eax + 0x7e]; 
0x00167c51: xor al, 0xeb; jmp dword ptr [eax + 0x7e]; 
0x00168099: xor al, 0xec; call esp; 
0x001680a1: xor al, 0xec; inc dword ptr [ecx + ebx*4]; add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; xor al, 0xec; call esp; 
0x00096829: xor al, 0xef; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x001854e1: xor al, 0xf2; call dword ptr [edx]; 
0x0015a699: xor al, 0xf3; call dword ptr [eax + 0x34]; 
0x0015a699: xor al, 0xf3; call dword ptr [eax + 0x34]; push dword ptr [eax + 0x34]; call dword ptr [eax - 0x4f000ccc]; xor al, 0xf3; call eax; 
0x0015a6a1: xor al, 0xf3; call dword ptr [eax - 0x4f000ccc]; xor al, 0xf3; call eax; 
0x0015a691: xor al, 0xf3; call dword ptr [eax]; 
0x0015a691: xor al, 0xf3; call dword ptr [eax]; xor al, 0xf3; push dword ptr [eax]; xor al, 0xf3; call dword ptr [eax + 0x34]; 
0x00187b31: xor al, 0xf3; call dword ptr [esi]; 
0x0015a6a9: xor al, 0xf3; call eax; 
0x0015a6a9: xor al, 0xf3; call eax; xor al, 0xf3; push eax; xor al, 0xf3; call dword ptr [eax]; 
0x00187b0d: xor al, 0xf3; jmp dword ptr [ecx]; 
0x0015a69d: xor al, 0xf3; push dword ptr [eax + 0x34]; call dword ptr [eax - 0x4f000ccc]; xor al, 0xf3; call eax; 
0x0015a6a5: xor al, 0xf3; push dword ptr [eax - 0x2f000ccc]; xor al, 0xf3; push eax; xor al, 0xf3; call dword ptr [eax]; 
0x0015a695: xor al, 0xf3; push dword ptr [eax]; xor al, 0xf3; call dword ptr [eax + 0x34]; 
0x0015a6ad: xor al, 0xf3; push eax; xor al, 0xf3; call dword ptr [eax]; 
0x001943da: xor al, 0xf6; jmp dword ptr [edx]; 
0x000e5a6c: xor al, 0xf6; ret 0x7420; 
0x001951f5: xor al, 0xf7; call dword ptr [eax]; 
0x001956d5: xor al, 0xf7; call ebx; 
0x001956b1: xor al, 0xf7; jmp dword ptr [ebx]; 
0x00096bbe: xor al, 0xf; inc edi; ret 0x4401; 
0x000271ba: xor al, 0xf; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x0002719a: xor al, 0xf; mov bh, 4; push eax; and eax, 0x100; ret; 
0x0002717a: xor al, 0xf; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x000270fa: xor al, 0xf; mov bh, 4; push eax; and eax, 0x200; ret; 
0x0002713a: xor al, 0xf; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x0002709a: xor al, 0xf; mov bh, 4; push eax; and eax, 0x400; ret; 
0x0002711a: xor al, 0xf; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x000270da: xor al, 0xf; mov bh, 4; push eax; and eax, 0x800; ret; 
0x0002705a: xor al, 0xf; mov bh, 4; push eax; and eax, 1; ret; 
0x000270ba: xor al, 0xf; mov bh, 4; push eax; and eax, 2; ret; 
0x0002715a: xor al, 0xf; mov bh, 4; push eax; and eax, 4; ret; 
0x0002707a: xor al, 0xf; mov bh, 4; push eax; and eax, 8; ret; 
0x000a2e8f: xor al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00022e5c: xor al, 0xf; xchg eax, ebp; ret 0xc483; 
0x00166b18: xor al, 0xfb; cld; jmp esp; 
0x0016737d: xor al, 0xfd; inc dword ptr [eax]; xor eax, 0x3590fffd; std; jmp dword ptr [eax]; 
0x00166c58: xor al, 0xfe; cld; call esp; 
0x0016f191: xor al, 0xfe; jmp dword ptr [eax + 0x24]; 
0x0016f179: xor al, 0xfe; jmp esp; 
0x001368bf: xor al, 0xff; inc dword ptr [ecx + 0x3015ec3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001187e9: xor al, 1; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x138]; add esp, 0x13c; ret; 
0x0002ddce: xor al, 1; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x138]; add esp, 0x13c; ret; 
0x000a70b8: xor al, 1; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x0019ba9e: xor al, 1; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0016b98d: xor al, 2; add byte ptr [edx + edi*2 - 9], ah; call esp; 
0x0016b985: xor al, 2; add byte ptr [edx + edi*2], ah; idiv edi; sal byte ptr [edx + eax], 0; jp 0x16b98a; call esp; 
0x00118a60: xor al, 4; add byte ptr [eax], al; mov eax, edx; pop esi; pop edi; ret; 
0x000547de: xor al, 4; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x438]; add esp, 0x43c; ret; 
0x001198fa: xor al, 4; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x438]; add esp, 0x43c; ret; 
0x0016d224: xor al, al; add al, byte ptr [eax]; xor al, 0xcc; stc; jmp dword ptr [eax - 0x40]; 
0x0004c43b: xor al, al; add eax, 0x107; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000da576: xor al, al; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 8; 
0x000eee72: xor al, al; or eax, esi; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x0008d87a: xor al, byte ptr [0x5e5f0000]; pop ebx; ret; 
0x000060f4: xor al, byte ptr [bx + si]; add byte ptr [eax], ah; sbb dword ptr [edi], ecx; add byte ptr [ebx + 0x22000000], dl; add byte ptr [eax + eax], cl; ret 3; 
0x000e6a77: xor al, byte ptr [eax + eax]; add ebx, 0xbc57a; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0x60; call dword ptr gs:[0x10]; 
0x000dea9d: xor al, byte ptr [eax - 0x20787f32]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000060f5: xor al, byte ptr [eax]; add byte ptr [eax], ah; sbb dword ptr [edi], ecx; add byte ptr [ebx + 0x22000000], dl; add byte ptr [eax + eax], cl; ret 3; 
0x00191704: xor al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e7002], al; ret; 
0x00172465: xor al, byte ptr [eax]; add byte ptr [eax], bl; fldpi; call dword ptr [edi]; 
0x00111238: xor al, byte ptr [eax]; add byte ptr [ebx + 0x32ac8b], al; add byte ptr [edx], al; add esp, 0x18; pop ebx; ret; 
0x0011125b: xor al, byte ptr [eax]; add byte ptr [ecx - 0x373edbec], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x0011123e: xor al, byte ptr [eax]; add byte ptr [edx], al; add esp, 0x18; pop ebx; ret; 
0x00179501: xor al, byte ptr [eax]; out dx, eax; jmp dword ptr [edx]; 
0x000a3a35: xor al, byte ptr [ebp - 0x337bf00a]; add byte ptr [eax], al; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x000220bb: xor al, byte ptr [ebx + 0x5e5b5cc4]; pop edi; pop ebp; ret; 
0x0001d483: xor al, byte ptr [ebx + 0x5e5b6cc4]; pop edi; pop ebp; ret; 
0x000decc4: xor al, byte ptr [ebx + 0xc]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x000b5dc8: xor al, byte ptr [ebx - 0x3776bb3c]; pop ebx; pop esi; ret; 
0x000b5698: xor al, byte ptr [ebx - 0x3776db3c]; pop ebx; pop esi; ret; 
0x00132b6c: xor al, byte ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x000de634: xor al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0016ec85: xor al, byte ptr [ecx]; add byte ptr [ebp + edi - 4], dl; call esp; 
0x001824c9: xor al, byte ptr [ecx]; add byte ptr [esp + ecx*2 - 4], al; call esp; 
0x0018737d: xor al, byte ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x001897ee: xor al, byte ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x001955bd: xor al, byte ptr [edx - 0xa]; jmp dword ptr [edx]; 
0x00172464: xor al, byte ptr fs:[eax]; add byte ptr [eax], bl; fldpi; call dword ptr [edi]; 
0x00168e64: xor al, ch; add byte ptr [eax], al; stosb byte ptr es:[edi], al; fsubp st(7); jmp dword ptr [eax - 0x18]; 
0x000d1b30: xor al, ch; cmp eax, 0x81000582; ret; 
0x000dea7c: xor al, ch; int1; mov dl, 4; add byte ptr [ecx + 0xc4572c3], al; add dh, dh; ret 0x8940; 
0x00094743: xor al, ch; push esi; or dword ptr [eax], eax; add ecx, 0xc61bb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0011c0aa: xor al, ch; ret; 
0x000e9938: xor al, ch; xor eax, 0x81000404; ret; 
0x0017e230: xor al, dh; add byte ptr [eax], al; lodsb al, byte ptr [esi]; cmp eax, esi; jmp edi; 
0x001693b9: xor al, dh; jmp dword ptr [eax + 0xc]; 
0x00087bcc: xor bh, 0xff; jmp dword ptr [esi + 0xf]; 
0x00198961: xor bh, al; call dword ptr [eax]; 
0x0011d947: xor bh, al; inc esp; and al, 4; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [eax + 0x14]; 
0x0010aa35: xor bh, bh; add byte ptr [ebx - 0x1e77b], cl; dec dword ptr [ebx - 0xf74d]; jmp dword ptr [ebp - 0x77]; 
0x00136c95: xor bh, bh; inc dword ptr [ecx + 0x300c8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00094e31: xor bh, bh; mov byte ptr [eax + 0x40], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0017910d: xor bh, bh; out dx, al; jmp dword ptr [edx]; 
0x00167371: xor bh, ch; call dword ptr [eax + 0x33]; 
0x00167371: xor bh, ch; call dword ptr [eax + 0x33]; std; jmp eax; 
0x0016736d: xor bh, ch; inc eax; xor bh, ch; call dword ptr [eax + 0x33]; 
0x0016736d: xor bh, ch; inc eax; xor bh, ch; call dword ptr [eax + 0x33]; std; jmp eax; 
0x0017a166: xor bh, ch; jmp dword ptr [edx]; 
0x00195045: xor bh, dh; call dword ptr [eax]; 
0x0017c930: xor bh, dl; add byte ptr [eax], al; lodsb al, byte ptr [esi]; in al, 0xef; jmp ebx; 
0x00168b9c: xor bh, dl; add byte ptr [eax], al; xor al, 0xda; out dx, al; call dword ptr [eax - 0x29]; 
0x00166784: xor bl, bl; cld; jmp dword ptr [eax - 0x25]; 
0x00003699: xor bl, byte ptr [ebx + 0x1bb67a8c]; add eax, 0x572808a8; call dword ptr [esi + 0x6f]; 
0x001668f0: xor bl, ch; cld; inc eax; call 0xe9a768f6; cld; jmp dword ptr [eax - 0x16]; 
0x0015a621: xor bl, dh; call dword ptr [eax]; 
0x0015a611: xor bl, dh; inc dword ptr [eax - 0x5f000cd0]; xor bl, dh; inc eax; xor bl, dh; jmp eax; 
0x0015a619: xor bl, dh; inc eax; xor bl, dh; jmp eax; 
0x0015a60d: xor bl, dh; jmp dword ptr [eax + 0x30]; 
0x0015a61d: xor bl, dh; jmp eax; 
0x00168acc: xor bl, dl; add byte ptr [eax], al; hlt; dec ecx; out dx, al; call dword ptr [eax - 0x2d]; 
0x001111cc: xor byte ptr [0x448b0000], bl; and al, 0x1c; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0011ce03: xor byte ptr [0x74890000], al; and al, 4; mov dword ptr [esp], edx; call dword ptr [eax + 0xc]; 
0x0016e4ac: xor byte ptr [0xccb40003], ch; sti; call dword ptr [eax + 0x2d]; 
0x00166de4: xor byte ptr [0xe00fffd], cl; std; jmp eax; 
0x00179a30: xor byte ptr [eax + 0x58cc0000], ch; out dx, eax; jmp dword ptr [ebx]; 
0x00094956: xor byte ptr [eax + 0xc], ah; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x001198f3: xor byte ptr [eax + eax], al; add byte ptr [ebx + 0x43424b4], cl; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x438]; add esp, 0x43c; ret; 
0x000547d7: xor byte ptr [eax + eax], al; add byte ptr [ebx + 0x43424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x438]; add esp, 0x43c; ret; 
0x00173e30: xor byte ptr [eax + eax], cl; or al, 0xab; in al, dx; call dword ptr [edi + 4]; 
0x0019b2bf: xor byte ptr [eax - 0x7d], cl; add ebp, dword ptr [ecx - 0x7a]; add ah, byte ptr [edi + 0xa]; push cs; add al, 0xc6; ret; 
0x0018c0e3: xor byte ptr [eax - 0x7d], cl; add ebx, dword ptr [eax - 0x7a]; add ah, byte ptr [edi + 0xa]; push cs; add al, 0xc6; ret; 
0x00186acf: xor byte ptr [eax - 0x7d], cl; add edx, dword ptr [ebx - 0x7a]; add dh, byte ptr [edi + 0xa]; push cs; add al, 0xc6; ret; 
0x0015a7c4: xor byte ptr [eax - 0xd], cl; call dword ptr [eax + 0x48]; 
0x001675e8: xor byte ptr [eax - 3], al; inc eax; inc eax; std; call dword ptr [eax + 0x41]; 
0x001677c8: xor byte ptr [eax - 3], bl; inc eax; pop eax; std; call dword ptr [eax + 0x59]; 
0x001722a9: xor byte ptr [eax], al; add ah, dl; shr bl, cl; call dword ptr [edx]; 
0x000e1981: xor byte ptr [eax], al; add byte ptr [eax], al; add al, ch; call 0x810e1e0f; ret; 
0x000e2b01: xor byte ptr [eax], al; add byte ptr [eax], al; add al, ch; push 0x81000472; ret; 
0x0019b3e8: xor byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e6e02], al; ret; 
0x00188a9c: xor byte ptr [eax], al; add byte ptr [eax], al; mov al, byte ptr [0x8c000198]; sbb dh, ah; call dword ptr [edi]; 
0x00193593: xor byte ptr [eax], bl; add byte ptr [eax], al; add byte ptr [eax - 0x7bfffdbd], bl; add bh, dh; jmp dword ptr [esi]; 
0x00094e30: xor byte ptr [eax], dh; dec dword ptr [eax + 0x448b4078]; and al, 0xc; pop ebx; pop esi; ret; 
0x00054af3: xor byte ptr [eax], dl; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x1034]; mov ebp, dword ptr [esp + 0x1038]; add esp, 0x103c; ret; 
0x000a71b0: xor byte ptr [ebp + 0x3d], dh; pop edi; pop esi; ret; 
0x0008f590: xor byte ptr [ebp + 0x5e5f4047], cl; pop ebx; ret; 
0x000828f6: xor byte ptr [ebp + 0x75490440], cl; pop esi; ret; 
0x00168794: xor byte ptr [ebp - 0x207c0000], bh; in al, dx; call dword ptr [eax - 0x43]; 
0x0016c8c4: xor byte ptr [ebp - 0x25c1fffe], al; clc; jmp dword ptr [eax - 0x7b]; 
0x0007cb48: xor byte ptr [ebp - 0x6bf080c4], cl; ret 0xed83; 
0x00073129: xor byte ptr [ebp - 0x7ce98b40], al; sal dword ptr [eax], 0x39; ret 0x775; 
0x0018df87: xor byte ptr [ebp - 0x7d], cl; add edx, dword ptr [ebx - 0x7a]; add dh, byte ptr [ecx + 0xe]; add al, 0xc6; ret; 
0x000acb3d: xor byte ptr [ebx + 0x1502444], cl; ret 0x5439; 
0x0003567b: xor byte ptr [ebx + 0x1642444], cl; ret 0x448b; 
0x00026fec: xor byte ptr [ebx + 0x2009084], cl; add byte ptr [eax], al; ret; 
0x00094740: xor byte ptr [ebx + 0x2ee830c0], al; push esi; or dword ptr [eax], eax; add ecx, 0xc61bb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0011d7a1: xor byte ptr [ebx + 0x48908c0], al; and al, 0xff; push esp; and al, 0x24; add esp, 0x1c; ret; 
0x0011c997: xor byte ptr [ebx + 0x4c890850], cl; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; 
0x0011c997: xor byte ptr [ebx + 0x4c890850], cl; and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 0xc]; add esp, 0x4c; ret; 
0x000ee456: xor byte ptr [ebx + 0x4e0f15fa], al; ret 0x4489; 
0x000e5a66: xor byte ptr [ebx + 0x4e894050], cl; xor al, 0xf6; ret 0x7420; 
0x000949e6: xor byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000915b1: xor byte ptr [ebx + 0x5e082444], cl; ret; 
0x0001cbc4: xor byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x00075187: xor byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x000f767c: xor byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x0001e7aa: xor byte ptr [ebx + 0x5e5b6cc4], al; pop edi; pop ebp; ret; 
0x000b5560: xor byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000eeb9c: xor byte ptr [ebx + 0x5f], bl; ret; 
0x0012af13: xor byte ptr [ebx + 0x7c894c46], cl; and al, 4; mov dword ptr [esp], esi; mov dword ptr [esp + 8], edx; call dword ptr [eax + 0x3c]; 
0x0006febf: xor byte ptr [ebx + 0x940584], cl; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], ebp; call dword ptr [eax + 0x48]; 
0x0006fa4e: xor byte ptr [ebx + 0x940684], cl; add byte ptr [eax], al; mov dword ptr [esp + 8], edx; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; call dword ptr [eax + 0x3c]; 
0x000a2e8b: xor byte ptr [ebx + 0xf342454], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0019b19b: xor byte ptr [ebx + eax*4 + 3], al; push ebx; xchg byte ptr [edx], al; add dl, byte ptr [ebp + 0xe]; add al, 0xc6; ret; 
0x0012a1d3: xor byte ptr [ebx + ebp*2 - 0x75], 0x46; dec esp; mov dword ptr [esp + 4], 0; mov dword ptr [esp], esi; call dword ptr [eax + 8]; 
0x0015a698: xor byte ptr [ebx + esi*8], dh; call dword ptr [eax + 0x34]; 
0x0015a698: xor byte ptr [ebx + esi*8], dh; call dword ptr [eax + 0x34]; push dword ptr [eax + 0x34]; call dword ptr [eax - 0x4f000ccc]; xor al, 0xf3; call eax; 
0x000ed7c7: xor byte ptr [ebx - 0x2f76cb3c], al; pop ebx; pop esi; ret; 
0x000914a7: xor byte ptr [ebx - 0x3817cf40], al; mov byte ptr [ecx], cl; add byte ptr [ecx + 0xc93d4c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0006ab17: xor byte ptr [ebx - 0x3fe6fe08], al; add esp, 0x18; not eax; pop ebx; ret; 
0x000b389b: xor byte ptr [ebx - 0x74cbdb84], cl; insb byte ptr es:[edi], dx; and al, 0x38; add esp, 0x3c; ret 4; 
0x0001bb54: xor byte ptr [ebx - 0x74cbdb84], cl; insb byte ptr es:[edi], dx; and al, 0x38; add esp, 0x3c; ret 8; 
0x0001ba32: xor byte ptr [ebx - 0x74cbdb84], cl; insb byte ptr es:[edi], dx; and al, 0x38; add esp, 0x3c; ret; 
0x000ce89e: xor byte ptr [ebx - 0x74d7db84], cl; inc esp; and al, 0x1c; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; ret; 
0x000e0139: xor byte ptr [ebx - 0x76dbdbb4], cl; pop esp; and al, 0xc; mov ebx, eax; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x000e0989: xor byte ptr [ebx - 0x76dbdbb4], cl; pop esp; and al, 0xc; mov ebx, eax; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00047af5: xor byte ptr [ebx - 0x776df3c], al; pop ebx; pop esi; pop edi; ret; 
0x00020bb3: xor byte ptr [ebx - 0x7ccfdb8c], cl; ret 0x3904; 
0x0004971d: xor byte ptr [ebx - 0x977b], cl; dec dword ptr [ebp - 0x7400efac]; inc ebp; mov byte ptr [edi], cl; inc esp; ret 0x4589; 
0x0015a734: xor byte ptr [ebx - 0xd], al; call dword ptr [eax + 0x43]; 
0x000b3a4a: xor byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x75]; 
0x000c3c97: xor byte ptr [ebx - 0xf77d], cl; push dword ptr [ecx]; jmp dword ptr [ebp - 0x39]; 
0x00132d4a: xor byte ptr [ebx], al; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0000ccd4: xor byte ptr [ebx], bl; add byte ptr [eax], al; nop; call dword ptr [eax]; 
0x000eff65: xor byte ptr [ebx], cl; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00001a28: xor byte ptr [ecx + 0x3a6d4813], ah; ret; 
0x0006745d: xor byte ptr [ecx + 0x458b0450], cl; push esp; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x00033f87: xor byte ptr [ecx + 0x70e82404], cl; push es; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x00040dca: xor byte ptr [ecx + 0x7de82404], cl; add byte ptr [0x28c48300], 0x5b; ret; 
0x0014a470: xor byte ptr [ecx + 0x84203f0], cl; mov dword ptr [esp], eax; call edi; 
0x000981aa: xor byte ptr [ecx - 0x17e3dba4], cl; mov edi, 0x8100091b; ret; 
0x000654aa: xor byte ptr [ecx - 0x17e3dba4], cl; mov edi, 0x81000c48; ret; 
0x00116da6: xor byte ptr [ecx - 0x17e3dba4], cl; ret; 
0x000b3dc5: xor byte ptr [ecx - 0x17fbdbbc], cl; and dword ptr [ecx], ecx; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00033f37: xor byte ptr [ecx - 0x3f17dbfc], cl; push es; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x0014ac23: xor byte ptr [ecx - 0x4c76dbfc], cl; push esp; sbb eax, dword ptr [eax]; add al, ch; push ds; ret; 
0x00099a97: xor byte ptr [ecx - 0x4f17dbfc], cl; pop es; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x001684fc: xor byte ptr [ecx - 0x532c0000], dh; in al, dx; jmp dword ptr [eax - 0x4f]; 
0x000b5185: xor byte ptr [ecx - 0x74f3dbbc], cl; inc esp; and al, 0x3c; mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call edi; 
0x000a5eb2: xor byte ptr [ecx - 0x74fbdbac], cl; push esp; and al, 0x2c; mov dword ptr [esp], edx; call edi; 
0x0012b1c6: xor byte ptr [ecx - 0x76fbdbac], cl; sub al, 0x24; call dword ptr [eax + 0x48]; 
0x00111993: xor byte ptr [ecx - 0x76fbdbb4], cl; dec esp; and al, 0x18; mov dword ptr [esp], eax; call dword ptr [edx + 8]; 
0x0018deaf: xor byte ptr [ecx - 0x7d], dl; add edx, dword ptr [edi - 0x7a]; add ch, byte ptr [ecx + 0xe]; add al, 0xc6; ret; 
0x0019544d: xor byte ptr [ecx - 0xa], al; jmp dword ptr [edx]; 
0x000e5e94: xor byte ptr [ecx], 0xc0; pop ebx; ret; 
0x00169ac5: xor byte ptr [ecx], al; add ah, dh; sal al, 0xff; lock xor byte ptr [ecx], al; add byte ptr [ecx + eax*8 - 0x10], al; call dword ptr [eax]; 
0x000e0a34: xor byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001187e2: xor byte ptr [ecx], al; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x134]; mov ebp, dword ptr [esp + 0x138]; add esp, 0x13c; ret; 
0x0002ddc7: xor byte ptr [ecx], al; add byte ptr [eax], al; mov esi, dword ptr [esp + 0x134]; mov edi, dword ptr [esp + 0x138]; add esp, 0x13c; ret; 
0x0002e6e5: xor byte ptr [ecx], al; add byte ptr [eax], al; pop esi; pop edi; pop ebp; ret; 
0x0002e044: xor byte ptr [ecx], al; add byte ptr [eax], al; ret; 
0x00169acd: xor byte ptr [ecx], al; add byte ptr [ecx + eax*8 - 0x10], al; call dword ptr [eax]; 
0x00095875: xor byte ptr [ecx], al; ret 0x267c; 
0x0012ea65: xor byte ptr [ecx], bh; add byte ptr [eax], al; mov eax, esi; ror edx, 9; xor edx, dword ptr gs:[0x18]; call edx; 
0x000a71ad: xor byte ptr [ecx], bh; dec edi; xor byte ptr [ebp + 0x3d], dh; pop edi; pop esi; ret; 
0x00073130: xor byte ptr [ecx], bh; ret 0x775; 
0x00167004: xor byte ptr [ecx], bl; std; inc eax; sbb ebp, edi; call dword ptr [eax + 0x1a]; 
0x0016ec14: xor byte ptr [ecx], cl; add dword ptr [eax], eax; xchg eax, esp; xor esp, edi; jmp dword ptr [eax]; 
0x000e0400: xor byte ptr [ecx], cl; ret 0x850f; 
0x000cf0ed: xor byte ptr [ecx], dh; rcr byte ptr [esi + 0x5f], 0x5d; ret 8; 
0x000ce632: xor byte ptr [ecx], dh; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x00199130: xor byte ptr [edi + 0x3ebc0002], bl; clc; jmp dword ptr [eax]; 
0x0008de90: xor byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00083fc4: xor byte ptr [edi + 0x5e], bl; ret; 
0x001673d0: xor byte ptr [edi*8 - 0x2c37f01], bh; call eax; 
0x001673d0: xor byte ptr [edi*8 - 0x2c37f01], bh; call eax; cmp al, 0xfd; jmp dword ptr [eax]; 
0x00167110: xor byte ptr [edi*8 - 0x2d36f01], ch; jmp eax; 
0x0016f930: xor byte ptr [edi], al; add byte ptr [eax], al; pop esp; mov dh, 0xea; call dword ptr [edx]; 
0x000955d2: xor byte ptr [edi], cl; mov esp, 0x76c229c0; push es; lea eax, dword ptr [edi + eax + 0x30]; pop edi; ret; 
0x00087a96: xor byte ptr [edi], cl; mov fs, word ptr [ebx - 0x7a000008]; ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000d827d: xor byte ptr [edi], cl; xchg eax, ebp; ror byte ptr [ebx - 0x74cbdb84], 0x6c; and al, 0x38; add esp, 0x3c; ret; 
0x0009c7a5: xor byte ptr [edi], cl; xchg eax, edx; ret 0xd789; 
0x00190bfd: xor byte ptr [edx + 0xa], bh; push cs; or al, 0x41; ret; 
0x00184430: xor byte ptr [edx + 1], dl; add ah, bl; cmc; int1; call dword ptr [ebx]; 
0x0017a0e0: xor byte ptr [edx - 0x6b2a0000], ch; out dx, eax; call dword ptr [eax]; 
0x0015a808: xor byte ptr [edx - 0xd], cl; call dword ptr [eax + 0x4a]; 
0x001482bc: xor byte ptr [edx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0016b885: xor byte ptr [edx], al; add byte ptr [edi - 9], al; call dword ptr [eax + 0x30]; 
0x00199fe4: xor byte ptr [edx], al; imul ecx, dword ptr [esi], 0x40e4108; ret; 
0x00199c68: xor byte ptr [edx], al; inc edi; push cs; or byte ptr [esi + ecx + 4], al; ret; 
0x00174986: xor byte ptr [edx], al; mov eax, dword ptr [0x43100e0a]; ret; 
0x00190837: xor byte ptr [edx], al; push edx; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x0016e7b4: xor byte ptr [edx], bh; add eax, dword ptr [eax]; nop; adc al, 0xfc; jmp dword ptr [eax + 0x3a]; 
0x0007d943: xor byte ptr [edx], bl; add byte ptr [eax], al; add esp, 0x100; pop ebx; ret; 
0x0016736c: xor byte ptr [edx], dh; std; inc eax; xor bh, ch; call dword ptr [eax + 0x33]; 
0x000ca519: xor byte ptr [esi + 0x5f], bl; pop ebp; ret 0xc; 
0x000cef91: xor byte ptr [esi + 0x5f], bl; pop ebp; ret 8; 
0x000419e8: xor byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x000cf10d: xor byte ptr [esi + 0x5f], bl; pop ebp; sar eax, 0x1f; and eax, 0xc; ret 8; 
0x00189f04: xor byte ptr [esi + 0xe], dh; or byte ptr [esi + ecx + 4], al; ret; 
0x00130891: xor byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x00147cdf: xor byte ptr [esi + 0xf], ah; xlatb; ret 0x498d; 
0x0009549b: xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x001677e0: xor byte ptr [esi - 3], bl; inc dword ptr [edx - 0x2d0002a2]; pop esi; std; jmp dword ptr [edx]; 
0x001671bc: xor byte ptr [esi], ah; std; inc eax; std; call dword ptr [eax + 0x27]; 
0x00166e4c: xor byte ptr [esi], al; std; inc eax; push es; std; call dword ptr [eax + 7]; 
0x00166e1c: xor byte ptr [esi], cl; std; jmp eax; 
0x00147f86: xor ch, 0; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xb]; pop edi; ret; 
0x0018fc18: xor ch, 0xff; sbb al, 0xd; mov byte ptr [esi - 0xb], bh; jmp dword ptr [edx]; 
0x0016d32c: xor ch, al; add al, byte ptr [eax]; adc bl, dl; stc; jmp dword ptr [eax - 0x3b]; 
0x00175120: xor ch, bh; in eax, dx; jmp dword ptr [eax + 1]; 
0x0017a226: xor ch, bh; jmp dword ptr [edx]; 
0x0005e461: xor ch, byte ptr [eax + eax]; add byte ptr [ebx - 0x15775], cl; jmp dword ptr [ebp - 0x75]; 
0x00027241: xor ch, byte ptr [ebx]; adc byte ptr [eax], al; add ecx, 0x17bdaf; mov eax, dword ptr [ecx - 0xc0]; add eax, dword ptr gs:[0]; ret; 
0x00168f2c: xor ch, ch; add byte ptr [eax], al; aam 0xee; out dx, eax; jmp dword ptr [eax]; 
0x00095966: xor ch, ch; add eax, ecx; pop edi; ret; 
0x0017496d: xor ch, ch; call dword ptr [ebx + 1]; 
0x00076c2b: xor ch, cl; ret 0xfffe; 
0x00166280: xor ch, dl; cld; jmp dword ptr [eax - 0x2b]; 
0x0018b330: xor cl, al; add dword ptr [eax], eax; fcom qword ptr [esi - 0xb]; call dword ptr [ebx]; 
0x001103f2: xor cl, byte ptr [eax]; pop esi; ret; 
0x000efd81: xor cl, byte ptr [ebx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00166ca8: xor cl, byte ptr [edi*8 - 0x2f33d01]; push dword ptr [edx + 0xfffd0a]; or edi, ebp; jmp edx; 
0x0017db30: xor cl, ch; add byte ptr [eax], al; pop esp; or al, 0xf0; jmp dword ptr [ebp]; 
0x00094003: xor cl, cl; mov byte ptr [eax], cl; mov eax, edi; pop ebx; pop edi; ret; 
0x00169dc9: xor cl, dh; call esp; 
0x00165db8: xor cl, dh; cld; call dword ptr [edx - 0x32]; 
0x00169da1: xor cl, dh; jmp esp; 
0x00169d99: xor cl, dh; push dword ptr [ebx + edi + 0x30410001]; int1; jmp esp; 
0x0008c0bc: xor dh, 0xff; jmp dword ptr [esi + 0xf]; 
0x0016ab71: xor dh, ah; call eax; 
0x00188f51: xor dh, ah; jmp dword ptr [esi]; 
0x0016ab79: xor dh, ah; push eax; fadd qword ptr [ecx]; add byte ptr [ebx + esi], dl; hlt; jmp dword ptr [eax]; 
0x001693e9: xor dh, al; jmp esp; 
0x00195401: xor dh, bh; call dword ptr [ecx]; 
0x0019535d: xor dh, bh; call ebx; 
0x0016f129: xor dh, bh; call esp; 
0x0017d320: xor dh, bh; out dx, eax; call dword ptr [edx]; 
0x0015a65d: xor dh, bl; call eax; 
0x0015a65d: xor dh, bl; call eax; xor dh, bl; jmp eax; 
0x00166930: xor dh, bl; cld; inc eax; fdivp st(4); call dword ptr [eax - 0x21]; 
0x0015a669: xor dh, bl; inc dword ptr [eax]; xor esi, ebx; call dword ptr [eax]; 
0x0015a669: xor dh, bl; inc dword ptr [eax]; xor esi, ebx; call dword ptr [eax]; xor esi, ebx; jmp dword ptr [eax]; 
0x0015a659: xor dh, bl; inc eax; xor dh, bl; call eax; 
0x0015a659: xor dh, bl; inc eax; xor dh, bl; call eax; xor dh, bl; jmp eax; 
0x0015a63d: xor dh, bl; jmp dword ptr [eax + 0x32]; 
0x0015a661: xor dh, bl; jmp eax; 
0x0015a655: xor dh, bl; push dword ptr [eax - 0x3f000cce]; xor dh, bl; call eax; 
0x0015a655: xor dh, bl; push dword ptr [eax - 0x3f000cce]; xor dh, bl; call eax; xor dh, bl; jmp eax; 
0x0015a639: xor dh, bl; push dword ptr [eax]; xor dh, bl; jmp dword ptr [eax + 0x32]; 
0x0015a665: xor dh, bl; push eax; xor dh, bl; inc dword ptr [eax]; xor esi, ebx; call dword ptr [eax]; 
0x0006a0f8: xor dh, byte ptr [ebp + eax + 0x5e]; ret; 
0x000a75e1: xor dh, byte ptr [ebp - 0xc]; pop esi; ret; 
0x00142c13: xor dh, ch; call dword ptr [ebx - 0x18]; 
0x00169ec9: xor dh, cl; call esp; 
0x00169f01: xor dh, cl; inc dword ptr [esi + ecx*2 + 1]; add byte ptr [ebx + esi], dl; int1; jmp dword ptr [eax + 0x4e]; 
0x00169ea1: xor dh, cl; jmp esp; 
0x000ee8f5: xor dh, dh; inc esp; and al, 0x39; or byte ptr [edi], 0x95; ret 0xcbeb; 
0x00138139: xor dl, 0xa2; cld; jmp dword ptr [esi - 0x70]; 
0x0017b958: xor dl, 0xef; call dword ptr [eax]; 
0x00166bc0: xor dl, 0xfc; call dword ptr [eax]; 
0x00189db0: xor dl, ah; hlt; jmp dword ptr [edx]; 
0x00158843: xor dl, byte ptr [ebx + 0x71]; cld; out 0x95, eax; push es; cld; ret; 
0x0016d3d4: xor dl, cl; add al, byte ptr [eax]; add ah, ch; stc; jmp dword ptr [eax - 0x36]; 
0x0008d343: xor dl, cl; or dword ptr [eax], eax; add ecx, 0xcd309; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000e6be0: xor dword ptr [eax + eax], eax; add ebx, 0xbc411; mov ecx, edx; xchg ebx, ecx; mov eax, 0x2d; call dword ptr gs:[0x10]; 
0x00004ff4: xor dword ptr [eax + eax], esi; add al, al; movsb byte ptr es:[edi], byte ptr [esi]; adc al, byte ptr [eax]; ret 2; 
0x000fbe00: xor dword ptr [eax + edi - 0x373f0000], 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000fb950: xor dword ptr [eax + edi], 0; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x00001a26: xor dword ptr [eax + esi], ebx; mov eax, dword ptr [0x3a6d4813]; ret; 
0x0018fa8c: xor dword ptr [eax - 0xa], ecx; call dword ptr [eax]; 
0x0002726c: xor dword ptr [eax - 1], 0x365ffff; add eax, 0; ret; 
0x000c2894: xor dword ptr [eax - 1], 0xffffffff; jmp dword ptr [ebp - 0x75]; 
0x000053a5: xor dword ptr [eax], eax; add al, ah; call dword ptr [eax]; 
0x00198220: xor dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e6f02], al; ret; 
0x0010983b: xor dword ptr [eax], eax; add byte ptr [ecx], al; mov esi, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x00169d98: xor dword ptr [eax], esi; int1; push dword ptr [ebx + edi + 0x30410001]; int1; jmp esp; 
0x001591cf: xor dword ptr [ebp + ecx*4 - 0x62], edi; int 0xe0; fdivr st(4); test al, 0x97; xchg eax, esp; ret; 
0x0010f48a: xor dword ptr [ebp - 0x2d], 0xfffffffb; dec dword ptr [ecx + 0x39e82404]; adc bh, bh; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x000217ad: xor dword ptr [ebx + 0x5e5b6cc4], eax; pop edi; pop ebp; ret; 
0x000ddfbf: xor dword ptr [ebx + 0x748b241c], ecx; and al, 4; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00110055: xor dword ptr [ebx - 0x76dfdbb4], ecx; adc dword ptr [esi + 0x5f], ebx; ret; 
0x00132c30: xor dword ptr [ebx], eax; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x000efe10: xor dword ptr [ebx], ecx; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x00169ae5: xor dword ptr [ecx], eax; add ah, ah; ret; 
0x000e0adc: xor dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001868a1: xor dword ptr [ecx], eax; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0008eb7b: xor dword ptr [ecx], ecx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00075657: xor dword ptr [ecx], edi; ret 0xcc75; 
0x000fdbb2: xor dword ptr [edi], 0xffffffcc; sti; dec dword ptr [ecx - 0x5e17dbfc]; inc ebp; inc dword ptr [ebp - 0x76eb8b40]; ret 0x848b; 
0x00192311: xor dword ptr [edx], eax; add ah, bl; fdivr st(6), st(0); jmp dword ptr [ecx]; 
0x00130495: xor dword ptr [esi - 0x7cffffff], 0xffffffed; adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cffffff], cl; ret 0x8310; 
0x000fa490: xor eax, 0x10245c8b; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00169c95: xor eax, 0x2e5a0001; int1; push dword ptr [ebp + esi + 0x2e6a0001]; int1; jmp esp; 
0x00169c9d: xor eax, 0x2e6a0001; int1; jmp esp; 
0x00132ced: xor eax, 0x3000331; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00167381: xor eax, 0x3590fffd; std; jmp dword ptr [eax]; 
0x00167385: xor eax, 0x3620fffd; std; push dword ptr [eax + 0x40fffd36]; aaa; std; call eax; 
0x000fc060: xor eax, 0x38; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0000282d: xor eax, 0x4ea2738b; push ecx; mov edi, 0xa9011612; ret; 
0x0016bfe9: xor eax, 0x5724fff8; add al, byte ptr [eax]; adc al, 0x36; clc; jmp dword ptr [eax + 0x57]; 
0x00166758: xor eax, 0x75fffcdc; fdiv st(4), st(0); inc dword ptr [eax - 0x4f000327]; frndint; jmp eax; 
0x0012403a: xor eax, 0x8100005d; ret; 
0x0011f53a: xor eax, 0x810000a8; ret; 
0x000e993a: xor eax, 0x81000404; ret; 
0x000b3a3a: xor eax, 0x81000763; ret; 
0x0007293a: xor eax, 0x81000b74; ret; 
0x0007203a: xor eax, 0x81000b7d; ret; 
0x00139f3a: xor eax, 0x81fffefe; ret; 
0x0004c907: xor eax, 0x850004c0; ror byte ptr [edi], 0x8e; ret 5; 
0x000dc79f: xor eax, 0x89ffffff; ret 0x848b; 
0x00003d93: xor eax, 0x93558da2; push ebx; inc eax; or byte ptr fs:[ebx + 0x4e], ch; ret 0x6bba; 
0x0011e812: xor eax, 0xc0311372; cmp edx, 2; sete al; add esp, 0x28; pop esi; ret; 
0x00194550: xor eax, 0xd1cfff6; in al, dx; xor al, 0xf6; jmp dword ptr [edx]; 
0x00002401: xor eax, 0xdd410018; out 0xa9, al; ret 0xbd07; 
0x0007adc7: xor eax, 0xfedabeeb; mov dword ptr [edx + 4], eax; pop ebx; ret; 
0x00106a10: xor eax, 0xffffffb8; jmp dword ptr [ebp + 0x33]; 
0x0001952c: xor eax, dword ptr [0x18]; call eax; 
0x000fe8ad: xor eax, dword ptr [0x18]; call eax; add esp, 0x18; pop ebx; ret; 
0x000fc0e5: xor eax, dword ptr [0x18]; call eax; add esp, 8; pop ebx; ret; 
0x00032ae6: xor eax, dword ptr [0x18]; mov dword ptr [esp + 4], edx; call eax; 
0x00056704: xor eax, dword ptr [0x18]; mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x5c]; mov dword ptr [esp], edx; call eax; 
0x0004e384: xor eax, dword ptr [0x18]; mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x64]; mov dword ptr [esp], edx; call eax; 
0x000428ac: xor eax, dword ptr [0x18]; mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x70]; mov dword ptr [esp], edx; call eax; 
0x0004799c: xor eax, dword ptr [0x18]; mov dword ptr [esp + 4], edx; lea edx, dword ptr [esp + 0x20d0]; mov dword ptr [esp], edx; call eax; 
0x0005ba54: xor eax, dword ptr [0x18]; mov dword ptr [esp + 4], edx; lea edx, dword ptr [esp + 0x8190]; mov dword ptr [esp], edx; call eax; 
0x000fb88c: xor eax, dword ptr [0x18]; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x20]; mov dword ptr [esp], edx; call eax; 
0x0003ec1a: xor eax, dword ptr [0x18]; mov dword ptr [esp + 8], esi; mov dword ptr [esp], edx; call eax; 
0x00026c07: xor eax, dword ptr [0x18]; mov dword ptr [esp], 1; call eax; 
0x00028d13: xor eax, dword ptr [0x18]; mov dword ptr [esp], ecx; call eax; 
0x0001ba82: xor eax, dword ptr [0x18]; mov dword ptr [esp], edx; call eax; 
0x00177c8d: xor eax, dword ptr [eax]; add byte ptr [eax + 0x20], al; out dx, eax; call dword ptr [esi]; 
0x0000954c: xor eax, dword ptr [eax]; add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; mov eax, dword ptr [0xd0000010]; ret 7; 
0x000e8017: xor eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00172a81: xor eax, dword ptr [eax]; add byte ptr [edi + edi*8 - 0x15], cl; call dword ptr [eax]; 
0x001184a6: xor eax, dword ptr [ebx - 0x2f769f3c]; pop esi; pop edi; pop ebp; ret; 
0x000b9a32: xor eax, dword ptr [ecx]; adc eax, 0xb8907174; and byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000def0e: xor eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0001952b: xor eax, dword ptr gs:[0x18]; call eax; 
0x000fe8ac: xor eax, dword ptr gs:[0x18]; call eax; add esp, 0x18; pop ebx; ret; 
0x000fc0e4: xor eax, dword ptr gs:[0x18]; call eax; add esp, 8; pop ebx; ret; 
0x00032ae5: xor eax, dword ptr gs:[0x18]; mov dword ptr [esp + 4], edx; call eax; 
0x00056703: xor eax, dword ptr gs:[0x18]; mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x5c]; mov dword ptr [esp], edx; call eax; 
0x0004e383: xor eax, dword ptr gs:[0x18]; mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x64]; mov dword ptr [esp], edx; call eax; 
0x000428ab: xor eax, dword ptr gs:[0x18]; mov dword ptr [esp + 4], edx; lea edx, dword ptr [ebp - 0x70]; mov dword ptr [esp], edx; call eax; 
0x0004799b: xor eax, dword ptr gs:[0x18]; mov dword ptr [esp + 4], edx; lea edx, dword ptr [esp + 0x20d0]; mov dword ptr [esp], edx; call eax; 
0x0005ba53: xor eax, dword ptr gs:[0x18]; mov dword ptr [esp + 4], edx; lea edx, dword ptr [esp + 0x8190]; mov dword ptr [esp], edx; call eax; 
0x000fb88b: xor eax, dword ptr gs:[0x18]; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x20]; mov dword ptr [esp], edx; call eax; 
0x0003ec19: xor eax, dword ptr gs:[0x18]; mov dword ptr [esp + 8], esi; mov dword ptr [esp], edx; call eax; 
0x00026c06: xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], 1; call eax; 
0x00028d12: xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], ecx; call eax; 
0x0001ba81: xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x000fcd30: xor eax, eax; add esp, 0x14; pop esi; pop edi; pop ebp; ret; 
0x00032bdf: xor eax, eax; add esp, 0x18; pop ebx; ret; 
0x000689a6: xor eax, eax; add esp, 0x1c; ret; 
0x000410a7: xor eax, eax; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000ce2d0: xor eax, eax; add esp, 0x20; pop esi; pop edi; pop ebp; ret; 
0x000aadbd: xor eax, eax; add esp, 0x24; pop esi; pop edi; ret; 
0x0011036c: xor eax, eax; add esp, 0x40; pop esi; pop edi; pop ebp; ret; 
0x000962ac: xor eax, eax; add esp, 0x450; pop esi; pop edi; pop ebp; ret; 
0x000cc958: xor eax, eax; add esp, 0x60; pop esi; pop edi; pop ebp; ret; 
0x00055670: xor eax, eax; add esp, 0xc; ret; 
0x00033dba: xor eax, eax; add esp, 8; ret; 
0x001140b4: xor eax, eax; cmp edx, 2; sete al; add esp, 0x1c; ret; 
0x0011e5d5: xor eax, eax; cmp edx, 2; sete al; add esp, 0x28; pop esi; ret; 
0x00070254: xor eax, eax; mov dword ptr [esi + 0x50], 0xffffffff; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012e62a: xor eax, eax; mov dword ptr [esi + 0xc], 0; add esp, 0x24; pop ebx; pop esi; ret; 
0x0006bee9: xor eax, eax; mov dword ptr [esi], ecx; add esp, 0x18; pop esi; ret; 
0x00071f11: xor eax, eax; mov dword ptr [esi], edx; add esp, 0x18; pop esi; ret; 
0x0006c185: xor eax, eax; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0002c87d: xor eax, eax; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x00033b78: xor eax, eax; mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x00079009: xor eax, eax; mov ebx, dword ptr [esp + 4]; mov esi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x0002ea9c: xor eax, eax; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x000d86a8: xor eax, eax; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000a8440: xor eax, eax; mov edx, dword ptr [esp + 4]; mov ecx, eax; xchg ebx, ecx; mov eax, 0xd; call dword ptr gs:[0x10]; 
0x0011d2c2: xor eax, eax; mov esi, dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0007320b: xor eax, eax; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x001123d3: xor eax, eax; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x0002dbfe: xor eax, eax; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x000d197b: xor eax, eax; mov esi, dword ptr [esp + 4]; add esp, 0xc; ret; 
0x0010fac3: xor eax, eax; mov esi, dword ptr [esp]; mov dword ptr [ecx], edx; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x00082fa8: xor eax, eax; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0005567c: xor eax, eax; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x00130632: xor eax, eax; pop ebp; ret; 
0x00082ff7: xor eax, eax; pop ebx; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x0002e93d: xor eax, eax; pop ebx; pop edi; ret; 
0x000d9f3e: xor eax, eax; pop ebx; pop esi; pop edi; pop ebp; ret 0x14; 
0x000d037c: xor eax, eax; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0001bd6f: xor eax, eax; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002ed61: xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000d7713: xor eax, eax; pop ebx; pop esi; ret; 
0x0007dce9: xor eax, eax; pop ebx; ret; 
0x001321b1: xor eax, eax; pop edi; pop ebp; pop ebx; ret; 
0x0007e729: xor eax, eax; pop edi; pop ebp; ret; 
0x00131c50: xor eax, eax; pop edi; pop ebx; ret; 
0x000a7084: xor eax, eax; pop edi; pop esi; ret; 
0x000950a0: xor eax, eax; pop edi; ret; 
0x000834a8: xor eax, eax; pop esi; nop; lea esi, dword ptr [esi]; ret; 
0x00083508: xor eax, eax; pop esi; pop edi; lea esi, dword ptr [esi]; ret; 
0x000ca2ea: xor eax, eax; pop esi; pop edi; pop ebp; ret 8; 
0x0007f359: xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x0002f54f: xor eax, eax; pop esi; pop edi; ret; 
0x0002e8cb: xor eax, eax; pop esi; ret; 
0x00032a70: xor eax, eax; ret; 
0x00083af0: xor eax, eax; test dl, dl; cmovne eax, ecx; add esp, 0xc; ret; 
0x000fb812: xor eax, eax; test edx, edx; sete al; ret; 
0x0002d25b: xor eax, ecx; shr eax, 0x1f; ret; 
0x0003388e: xor eax, edx; mov dword ptr [ecx], esi; pop esi; ret; 
0x00032fc9: xor eax, edx; sub eax, edx; ret; 
0x001693c1: xor eax, esi; call eax; 
0x00126293: xor ebp, ebp; call dword ptr [eax + 0x14]; 
0x00074d63: xor ebp, ebp; mov dword ptr [esp + 0x18], edx; mov dword ptr [esp], 0; call dword ptr [ecx]; 
0x00170471: xor ebp, ebx; jmp dword ptr [esi]; 
0x00167c31: xor ebp, ebx; jmp esp; 
0x0017a256: xor ebp, edi; jmp dword ptr [edx]; 
0x00167369: xor ebp, edi; push dword ptr [eax]; xor bh, ch; inc eax; xor bh, ch; call dword ptr [eax + 0x33]; 
0x0018a8c5: xor ebp, esi; call dword ptr [ebp]; 
0x000021ce: xor ebp, esp; adc dword ptr [si], eax; ret; 
0x00168091: xor ebp, esp; call dword ptr [ecx + ebx*4 + 0x347e0000]; in al, dx; call esp; 
0x000021ca: xor ebp, esp; daa; push edi; xor ebp, esp; adc dword ptr [si], eax; ret; 
0x00188532: xor ebx, 0x22ff; sub al, 0; add byte ptr [eax], al; mov word ptr [esi + 0x1a850001], cs; hlt; call dword ptr [eax]; 
0x000d564b: xor ebx, ebp; ret; 
0x00103525: xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x001665ac: xor ebx, edx; cld; jmp dword ptr [ebx - 0x26]; 
0x0015a631: xor ebx, esi; call eax; 
0x0015a635: xor ebx, esi; inc dword ptr [eax]; xor dh, bl; push dword ptr [eax]; xor dh, bl; jmp dword ptr [eax + 0x32]; 
0x000efc71: xor ecx, dword ptr [ebx]; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x0018ca1d: xor ecx, dword ptr [esi]; cmc; jmp dword ptr [edx]; 
0x0012eac6: xor ecx, ecx; call 0x100770; sub esp, 4; add esp, 0x1c; ret; 
0x0012eae6: xor ecx, ecx; call 0x100810; sub esp, 4; add esp, 0x1c; ret; 
0x0012eb06: xor ecx, ecx; call 0x1008b0; sub esp, 4; add esp, 0x1c; ret; 
0x0012eb26: xor ecx, ecx; call 0x100950; sub esp, 4; add esp, 0x1c; ret; 
0x0012eb46: xor ecx, ecx; call 0x1009f0; sub esp, 4; add esp, 0x1c; ret; 
0x0012eb86: xor ecx, ecx; call 0x100bd0; sub esp, 4; add esp, 0x1c; ret; 
0x0012ebc6: xor ecx, ecx; call 0x100d10; sub esp, 4; add esp, 0x1c; ret; 
0x0012ec06: xor ecx, ecx; call 0x100e50; sub esp, 4; add esp, 0x1c; ret; 
0x000b7c04: xor ecx, ecx; cmp eax, -1; cmovne ecx, eax; mov eax, ecx; ret; 
0x0003f853: xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0003ea60: xor ecx, ecx; mov edi, 0x100011; mov edx, esi; xchg edi, ebx; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x000e96ce: xor ecx, ecx; mov edi, dword ptr [esp + 0x20]; mov esi, ecx; xchg edi, ebx; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x000e1481: xor ecx, ecx; mov edx, dword ptr [esp + 0x14]; mov esi, ecx; xchg edi, ebx; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x00169e49: xor ecx, esi; call esp; 
0x00169e21: xor ecx, esi; jmp esp; 
0x00169e99: xor ecx, esi; push dword ptr [ecx + eax*2 + 0x32010001]; int1; jmp esp; 
0x00169e19: xor ecx, esi; push dword ptr [esi + edi + 0x31290001]; int1; jmp esp; 
0x0001afea: xor edi, dword ptr [0x18]; mov dword ptr [esp], edi; call 0x126c80; mov dword ptr [esp], esi; call edi; 
0x0001afe9: xor edi, dword ptr gs:[0x18]; mov dword ptr [esp], edi; call 0x126c80; mov dword ptr [esp], esi; call edi; 
0x00178b1d: xor edi, ebp; call eax; 
0x0017a1c6: xor edi, ebp; jmp dword ptr [edx]; 
0x00167375: xor edi, ebp; jmp eax; 
0x00136b9a: xor edi, edi; inc dword ptr [ecx + 0x30103c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00136be6: xor edi, edi; inc dword ptr [ecx + 0x30237c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0011b51f: xor edi, edi; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x0014b143: xor edi, edi; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000838b3: xor edi, edx; jmp dword ptr [esi - 0x70]; 
0x001951c9: xor edi, esi; call dword ptr [ecx]; 
0x00195339: xor edi, esi; jmp dword ptr [ebx]; 
0x00195315: xor edi, esi; jmp dword ptr [edi]; 
0x0016f171: xor edi, esi; jmp eax; 
0x00137ff8: xor edi, esi; ret 3; 
0x0012ea6f: xor edx, dword ptr [0x18]; call edx; 
0x000ff6ff: xor edx, dword ptr [0x18]; mov dword ptr [esp], edx; call eax; 
0x0012ea6e: xor edx, dword ptr gs:[0x18]; call edx; 
0x000ff6fe: xor edx, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x00165e38: xor edx, ecx; cld; jmp dword ptr [ebx - 0x2f]; 
0x00166328: xor edx, edi; cld; jmp dword ptr [ebx - 0x29]; 
0x0003f895: xor edx, edx; lea ecx, dword ptr [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000f2093: xor edx, edx; mov eax, dword ptr [esp + 0x44]; call 0xf1f70; add esp, 4; ret; 
0x00082d15: xor edx, edx; mov eax, edx; ret; 
0x0002efed: xor edx, edx; mov edi, eax; xchg edi, ebx; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0002e32a: xor edx, edx; mov esi, 8; mov ecx, edx; xchg edi, ebx; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x001852e5: xor edx, esi; jmp dword ptr [eax]; 
0x0008f50f: xor esi, dword ptr [ebx + 0xc03000c]; cdq; jmp ecx; 
0x0017a255: xor esi, dword ptr [ebx]; out dx, eax; jmp dword ptr [edx]; 
0x001693f1: xor esi, eax; call dword ptr [eax]; 
0x00175742: xor esi, ebp; jmp dword ptr [edx]; 
0x0015a66d: xor esi, ebx; call dword ptr [eax]; 
0x0015a66d: xor esi, ebx; call dword ptr [eax]; xor esi, ebx; jmp dword ptr [eax]; 
0x0015a67d: xor esi, ebx; inc dword ptr [eax - 0x5f000ccd]; xor esi, ebx; inc eax; xor esi, ebx; jmp eax; 
0x0015a68d: xor esi, ebx; inc dword ptr [eax]; xor al, 0xf3; call dword ptr [eax]; 
0x0015a685: xor esi, ebx; inc eax; xor esi, ebx; jmp eax; 
0x0015a679: xor esi, ebx; jmp dword ptr [eax + 0x33]; 
0x0015a671: xor esi, ebx; jmp dword ptr [eax]; 
0x0015a689: xor esi, ebx; jmp eax; 
0x00169f09: xor esi, ecx; jmp dword ptr [eax + 0x4e]; 
0x001952b5: xor esi, edi; call dword ptr [eax]; 
0x0019568d: xor esi, edi; jmp dword ptr [edi]; 
0x0016f131: xor esi, edi; jmp eax; 
0x00128c6a: xor esi, esi; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x000980f0: xor esi, esi; add esp, 0x14; mov eax, esi; pop esi; pop edi; ret; 
0x00082f15: xor esi, esi; mov eax, esi; mov edi, dword ptr [esp + 4]; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x000ec203: xor esi, esi; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x0012ba78: xor esi, esi; mov ebx, dword ptr [esp + 0x24]; mov eax, esi; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x00148f2c: xor esi, esi; ret 0xf01; 
0x000fc56d: xor esi, esi; xchg ebx, edi; call dword ptr gs:[0x10]; 
0x000fc2c1: xor esi, esi; xchg ebx, edi; int 0x80; 
0x0016ab81: xor esi, esp; jmp dword ptr [eax]; 
0x000fc0a0: xor esp, 0x38; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp], edx; call eax; 
0x0014a28c: xor esp, dword ptr [esi + 0xf]; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0016ec01: xor esp, edi; call eax; 
0x0016ec19: xor esp, edi; jmp dword ptr [eax]; 
0x0016ab69: xor esp, esi; push dword ptr [eax + 0x540001dc]; xor dh, ah; call eax; 

43495 gadgets found
