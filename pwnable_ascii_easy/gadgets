0x5569376b:  aaa; adc al, 3; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x556d4658:  aaa; add edi, ebp; call dword ptr [eax]; 
0x556f6e6d:  aaa; clc; jmp dword ptr [eax]; 
0x555d2d5c:  aaa; mov ecx, dword ptr [ebx - 0x15c]; xor ebp, ebp; mov dword ptr [esp + 0x18], edx; mov dword ptr [esp], 0; call dword ptr [ecx]; 
0x55617132:  aad 0; add byte ptr [eax], al; call dword ptr gs
0x5561715d:  aad 0; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs
0x556c6b55:  aad 0; add byte ptr [edx + edx*8], al; out dx, al; jmp esp; 
0x555c752f:  aad 0x29; int 0x29; ret 0xe75; 
0x555f2831:  aad 0x60; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x55577c68:  aad 0x89; ret 0x6c89; 
0x556c4224:  aad 0xd3; cld; inc dword ptr [0x35fffcd4]; aam 0xfc; jmp dword ptr [ebp - 0x2c]; 
0x556d327e:  aad 0xed; jmp dword ptr [edx]; 
0x556f5b21:  aad 0xf7; jmp dword ptr [ebx]; 
0x556c4241:  aad 0xfc; jmp dword ptr [ebp - 0x2b]; 
0x556f4452:  aad 1; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x556c6158:  aam 0x59; in al, dx; call eax; 
0x556c6b79:  aam 0xee; dec dword ptr [esi + edx*8 - 0x26fc0000]; out dx, al; call eax; 
0x556c6f30:  aam 0xee; out dx, eax; jmp dword ptr [eax]; 
0x556e7c21:  aam 0xf4; call dword ptr [edx]; 
0x556f5a45:  aam 0xf7; jmp dword ptr [ebx]; 
0x556c4175:  aam 0xfc; call esp; 
0x556c426d:  aam 0xfc; jmp dword ptr [eax - 0x2c]; 
0x556c422d:  aam 0xfc; jmp dword ptr [ebp - 0x2c]; 
0x556c427d:  aam 0xfc; push dword ptr [eax]; aad 0xfc; jmp dword ptr [eax - 0x2b]; 
0x556c4269:  aam 0xfc; push dword ptr [eax]; aam 0xfc; jmp dword ptr [eax - 0x2c]; 
0x556c4279:  aam 0xfc; push eax; aam 0xfc; push dword ptr [eax]; aad 0xfc; jmp dword ptr [eax - 0x2b]; 
0x556e795a:  aam 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x556d4f5c:  aam 9; out dx, eax; call esp; 
0x556c7e45:  aas; add dword ptr [eax], eax; insd dword ptr es
0x55653064:  aas; dec dword ptr [edi]; test dword ptr [esi], edx; add dword ptr [eax], eax; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x556f3254:  aas; xor al, 0xf7; call dword ptr [eax]; 
0x556c4b7c:  adc ah, bh; cld; call dword ptr [eax]; 
0x556c4b7c:  adc ah, bh; cld; call dword ptr [eax]; cli; cld; call eax; 
0x55617053:  adc al, 0; add byte ptr [eax], al; call dword ptr gs
0x556f7334:  adc al, 0; add byte ptr [eax], al; cmp byte ptr [ecx + 0x44740002], ah; clc; jmp dword ptr [edi]; 
0x556f712c:  adc al, 0; add byte ptr [eax], al; xor byte ptr [edi + 0x3ebc0002], bl; clc; jmp dword ptr [eax]; 
0x555b3563:  adc al, 0; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x12e; call dword ptr gs
0x55684f7d:  adc al, 0x24; call dword ptr [eax + 8]; add esp, 0x18; pop ebx; ret; 
0x555d2f2f:  adc al, 0x24; lea edx, dword ptr [ebx - 0x44875]; call 0x74da0; mov edx, dword ptr [ebx - 0x15c]; mov dword ptr [esp], 0; call dword ptr [edx]; 
0x555d4e23:  adc al, 0x24; mov dword ptr [esp + 0x28], edx; call dword ptr [ebp]; 
0x55684f37:  adc al, 0x24; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 4]; 
0x55684c62:  adc al, 0x24; mov eax, dword ptr [eax + 0x1a0]; call eax; 
0x55684c62:  adc al, 0x24; mov eax, dword ptr [eax + 0x1a0]; call eax; add esp, 0x18; pop ebx; ret; 
0x55687d7c:  adc al, 0x24; ret; 
0x55624c44:  adc al, 0x39; ret 0x850f; 
0x55655a53:  adc al, 0x39; ret 0xa7d; 
0x55655a5d:  adc al, 0x39; ret 0xf67c; 
0x556d2162:  adc al, 0x83; add eax, 0x2e00e46; add ebx, dword ptr [ecx + eax + 0xa]; push cs; adc al, 0x46; ret; 
0x55576069:  adc al, 0x83; ret 0x108; 
0x5568326b:  adc al, 0x83; ret 0x8328; 
0x555f616b:  adc al, 0x83; ret 0x8b04; 
0x55682d33:  adc al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x55577d2a:  adc al, 0x89; ret 0x4c89; 
0x55615d26:  adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 7; call dword ptr gs
0x555f2c46:  adc al, 0x8b; inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x55645e6c:  adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x8e; call dword ptr gs
0x55655a50:  adc al, 0x8b; push ecx; adc al, 0x39; ret 0xa7d; 
0x555c5f4b:  adc al, 0x8b; xor al, 0x24; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x556c6438:  adc al, 0x8e; in al, dx; dec dword ptr [eax + 0x40000ab]; xchg eax, edx; in al, dx; jmp eax; 
0x556c6520:  adc al, 0xaf; in al, dx; jmp eax; 
0x555b4a6c:  adc al, 0xc1; clc; add bh, byte ptr [ecx]; ret 0x1974; 
0x555c696e:  adc al, 0xe8; call dword ptr [ebx]; 
0x555d5b6e:  adc al, 0xe8; jmp dword ptr [ecx]; 
0x5569604e:  adc al, 0xee; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x556e6130:  adc al, 0xf3; call dword ptr [eax]; 
0x556c7058:  adc al, 0xfe; out dx, eax; dec dword ptr [esp + esi*8]; add byte ptr [esi + edi*8 - 0x11], al; jmp dword ptr [eax - 0xc]; 
0x55693722:  adc al, 3; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x5569376c:  adc al, 3; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x555f697a:  adc al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x55565960:  adc al, byte ptr [eax]; or al, 0; mov cl, byte ptr [ebx]; add byte ptr [eax - 8], ah; adc dword ptr [eax], eax; ret; 
0x55567550:  adc al, byte ptr [eax]; or al, 0; mov eax, dword ptr [0xd0000010]; ret 7; 
0x55567440:  adc al, byte ptr [eax]; or al, 0; ret 0x38; 
0x55562230:  adc al, byte ptr [eax]; or al, 0; ret 0x52; 
0x555e3822:  adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x555e7c22:  adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; ret; 
0x555e3842:  adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x555e7972:  adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, dword ptr [edx + 7]; pop edi; ret; 
0x555e7c42:  adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x555e3862:  adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x555e7c62:  adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x555f286c:  adc al, ch; add eax, 0x81000955; rcl dword ptr [edx + 0x3000c60], 0xc; xchg eax, ecx; jmp ecx; 
0x555f3c75:  adc al, dh; ret; 
0x556c5328:  adc bh, byte ptr [ebx]; std; jmp dword ptr [edx + 0x3b]; 
0x556c5768:  adc bl, byte ptr [ebp - 3]; jmp dword ptr [edx + 0x5d]; 
0x55647925:  adc bl, dh; ret; 
0x555f2c43:  adc byte ptr [eax + 0x448b1470], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x55645e70:  adc byte ptr [eax + 0x8e], bh; call dword ptr gs
0x55672569:  adc byte ptr [eax + 1], bh; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x55567555:  adc byte ptr [eax], al; add al, dl; ret 7; 
0x555c5c49:  adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbb4], cl; adc al, 0x24; call eax; 
0x555f6f63:  adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbbc], cl; cmp al, 0x24; call esi; 
0x555c4063:  adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x556f7b5c:  adc byte ptr [eax], al; add byte ptr [eax], al; pushal; test eax, 0x5bbc0002; clc; call dword ptr [ecx]; 
0x55623b3e:  adc byte ptr [eax], al; add byte ptr [eax], al; xchg ebx, edi; neg eax; pop edi; ret; 
0x5569375c:  adc byte ptr [eax], al; add byte ptr [ebx + 0x1c740fe7], al; call 0x129d73; add ebx, 0x31437; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x55582023:  adc byte ptr [eax], al; add byte ptr [ebx + 0x391083], cl; add byte ptr [ecx - 0x373edbec], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x556a234e:  adc byte ptr [eax], al; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x555b252b:  adc byte ptr [eax], al; add byte ptr [ecx - 0x7cad8836], cl; ret 0x830f; 
0x55585263:  adc byte ptr [eax], al; add ecx, 0x17bd8f; mov eax, dword ptr [ecx - 0x90]; add eax, dword ptr gs
0x55585243:  adc byte ptr [eax], al; add ecx, 0x17bdaf; mov eax, dword ptr [ecx - 0xc0]; add eax, dword ptr gs
0x55585223:  adc byte ptr [eax], al; add ecx, 0x17bdcf; mov eax, dword ptr [ecx - 0x130]; add eax, dword ptr gs
0x556a2347:  adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x555f6528:  adc byte ptr [ebp - 0x7ccc8b0a], al; ret 0x8310; 
0x555f2869:  adc byte ptr [ebx + 0x5e810c0], al; push ebp; or dword ptr [eax], eax; add ecx, 0xc6092; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x55656b4b:  adc byte ptr [ebx + 0x74000878], al; push es; xor eax, eax; ret; 
0x556f6e55:  adc byte ptr [ebx + 0xc0e7e04], al; ret; 
0x55685953:  adc byte ptr [ebx + 0xcc48300], cl; ret; 
0x555d6f59:  adc byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x7d]; 
0x55623434:  adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x9c; call dword ptr gs
0x55577853:  adc byte ptr [ebx - 0x76cbdbac], cl; push esp; and al, 4; mov edx, dword ptr [esp + 0x30]; mov dword ptr [esp], edx; call eax; 
0x55637365:  adc byte ptr [ebx - 0x76fbdbbc], cl; nop; or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x5563515b:  adc byte ptr [ebx - 0x8f7d], cl; jmp dword ptr [ebp - 0x75]; 
0x55693a23:  adc byte ptr [ebx], al; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x555f2d27:  adc byte ptr [ecx + 0x448b1748], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x555f2d57:  adc byte ptr [ecx + 0x448b1848], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x555c7467:  adc byte ptr [ecx + 0x7c8b1857], cl; and al, 0x28; mov dword ptr [esi + 0xc], edx; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; ret; 
0x555c4a31:  adc byte ptr [ecx - 0x76f3db84], cl; push esp; and al, 4; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x55582028:  adc byte ptr [ecx], bh; add byte ptr [eax], al; mov dword ptr [esp], edx; ror eax, 9; xor eax, dword ptr gs
0x55577c66:  adc byte ptr [ecx], cl; aad 0x89; ret 0x6c89; 
0x55675c68:  adc byte ptr [ecx], cl; ret 0xb60f; 
0x5560373a:  adc byte ptr [ecx], dh; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x555b3568:  adc byte ptr [edi + 0x12eb8df], al; add byte ptr [eax], al; call dword ptr gs
0x556a6f62:  adc byte ptr [edi], cl; test dword ptr [edi - 0xa000000], esp; ret 0xf20; 
0x556a6e42:  adc byte ptr [edi], cl; test dword ptr [esi - 0x9fffffd], esi; ret 0xf20; 
0x556a523b:  adc byte ptr [edi], cl; test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x55696137:  adc byte ptr [edi], cl; xor dl, 0xa2; cld; jmp dword ptr [esi - 0x70]; 
0x556c5474:  adc byte ptr [edx - 3], cl; jmp edx; 
0x556e6f50:  adc byte ptr [edx], dh; hlt; jmp dword ptr [esi]; 
0x555f354d:  adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], -0x40; pop edi; ret; 
0x55672a77:  adc byte ptr [esi + 0xf], bl; mov dh, 0xc0; pop edi; pop ebp; ret; 
0x556c4f50:  adc byte ptr [esi], bl; std; inc dword ptr [eax - 0x2f0002e2]; push ds; std; jmp dword ptr [eax]; 
0x55606669:  adc byte ptr [esi], cl; add byte ptr [eax], al; pop esi; add eax, edx; ret; 
0x556c4e79:  adc ch, bh; jmp dword ptr [edx]; 
0x556c4e65:  adc ch, bh; jmp edx; 
0x55585261:  adc ch, byte ptr [ebx]; adc byte ptr [eax], al; add ecx, 0x17bd8f; mov eax, dword ptr [ecx - 0x90]; add eax, dword ptr gs
0x55606536:  adc ch, byte ptr [ecx]; ret 0x18b; 
0x556c5160:  adc ch, byte ptr [edi*8 - 0x2d38d01]; inc edx; sub al, 0xfd; call dword ptr [edx]; 
0x556c5264:  adc ch, byte ptr [esi]; std; push dword ptr [edx + 0x2e]; std; call edx; 
0x555e7c46:  adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x555e3866:  adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x555e7c66:  adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x555d4e45:  adc cl, byte ptr [ecx - 0x76d7dbac]; dec esp; and al, 0x2c; call eax; 
0x556e2655:  adc dl, dh; call dword ptr [edi]; 
0x556e2729:  adc dl, dh; jmp dword ptr [eax]; 
0x5567583e:  adc dword ptr [eax + 3], edi; mov ebx, dword ptr [esp + 0x44]; mov esi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x55582027:  adc dword ptr [eax], 0x39; add byte ptr [eax], al; mov dword ptr [esp], edx; ror eax, 9; xor eax, dword ptr gs
0x55586d26:  adc dword ptr [eax], eax; add byte ptr [ebx + 0x391083], cl; add byte ptr [ecx - 0x373edbec], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x55586a79:  adc dword ptr [eax], eax; add byte ptr [ebx + 0x391483], cl; add byte ptr [ecx - 0x373edbec], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x55577b53:  adc dword ptr [eax], eax; add ecx, 0x18949f; mov eax, dword ptr [ecx - 0xf8]; add eax, dword ptr gs
0x55577653:  adc dword ptr [eax], eax; add ecx, 0x18999f; lea eax, dword ptr [ecx - 0x43dee]; ret; 
0x55577633:  adc dword ptr [eax], eax; add ecx, 0x1899bf; lea eax, dword ptr [ecx - 0x46116]; ret; 
0x55567540:  adc dword ptr [eax], eax; and byte ptr [eax], al; ret; 
0x55566850:  adc dword ptr [eax], eax; int1; jmp dword ptr [ebp + 0x56]; 
0x55566420:  adc dword ptr [eax], eax; int1; jmp edi; 
0x5556596a:  adc dword ptr [eax], eax; ret; 
0x5559402d:  adc dword ptr [ebx + 0x5e5b2cc4], eax; pop edi; pop ebp; ret; 
0x55584f6c:  adc dword ptr [ebx - 0x1577f], ecx; jmp dword ptr [ebp - 0x75]; 
0x55623469:  adc dword ptr [ebx - 0x1d140038], eax; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs
0x555d2025:  adc dword ptr [ecx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x555e5661:  adc dword ptr [esi - 0x77], esp; push ecx; add al, 0x5b; ret; 
0x55623b3d:  adc eax, 0x10; xchg ebx, edi; neg eax; pop edi; ret; 
0x5556513c:  adc eax, 0x22000000; add byte ptr [eax + eax], cl; ret; 
0x555f333a:  adc eax, 0x29c0bc0f; ret 0x860f; 
0x555e5978:  adc eax, 0x5bfffffe; ret; 
0x555b2c7a:  adc eax, 0x5c8bf889; and al, 0x40; mov esi, dword ptr [esp + 0x44]; mov edi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x5558522c:  adc eax, 0x65fffffe; add eax, dword ptr [0]; ret; 
0x55584f30:  adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x55584e20:  adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x55584e50:  adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x5564545a:  adc eax, 0x81000429; ret; 
0x55617a34:  adc eax, 0xb8907174; and byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x556c5b49:  adc eax, 0xbad0ffeb; add dword ptr [eax], eax; push esp; sbb bl, ch; call dword ptr [eax]; 
0x555f2b3e:  adc eax, dword ptr [eax]; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2b5e:  adc eax, dword ptr [eax]; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2b7e:  adc eax, dword ptr [eax]; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x556a7c7c:  adc eax, dword ptr [ebx - 0x218bfe20]; lea eax, dword ptr [edi - 0x10]; pop edi; ret; 
0x556c7525:  adc eax, dword ptr [ecx]; add byte ptr [ebp + ecx*2 - 0x10], ah; jmp dword ptr [eax]; 
0x555e7976:  adc eax, dword ptr [edx]; lea eax, dword ptr [edx + 7]; pop edi; ret; 
0x555e3829:  adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x555e7c29:  adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; ret; 
0x555e6362:  adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x555e3849:  adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x555e7c4b:  adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x555e386b:  adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x555e7c6b:  adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x555e372b:  adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x555e7b2b:  adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x555e374b:  adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x555e5426:  adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x555f2c62:  adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x556c434c:  adc ebx, ecx; cld; call dword ptr [ebx - 0x27]; 
0x555f2b42:  adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2b62:  adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555e7c4f:  adc ecx, dword ptr [edx + 5]; lea eax, dword ptr [edx + 0xc]; ret; 
0x555e386f:  adc ecx, dword ptr [edx + 5]; mov eax, edx; ret; 
0x555e7c6f:  adc ecx, dword ptr [edx + 6]; lea eax, dword ptr [edx + 0xd]; ret; 
0x555e372f:  adc ecx, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x555e7b2f:  adc ecx, dword ptr [edx + 7]; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x555e374f:  adc ecx, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x555f215e:  adc ecx, dword ptr [edx + 8]; mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x555e542a:  adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; pop ebx; ret; 
0x556f6645:  adc edi, eax; jmp dword ptr [edi]; 
0x555f2d25:  adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2d55:  adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2973:  adc esp, dword ptr [eax + 0xc]; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x556c6b77:  add ah, ah; aam 0xee; dec dword ptr [esi + edx*8 - 0x26fc0000]; out dx, al; call eax; 
0x556e297f:  add ah, ah; add byte ptr [ecx], al; add byte ptr [eax + ebx - 0xe], bl; call dword ptr [ecx]; 
0x556c6827:  add ah, ah; insb byte ptr es
0x556c7947:  add ah, ah; mov bl, 0xf0; jmp eax; 
0x556c794f:  add ah, ah; mov ch, 0xf0; jmp dword ptr [eax]; 
0x556d296b:  add ah, ah; xor ch, ch; call dword ptr [ebx + 1]; 
0x556f714b:  add ah, al; clc; jmp dword ptr [edi]; 
0x556d6173:  add ah, al; mov al, byte ptr [eax]; add dh, cl; sti; call dword ptr [eax]; 
0x556d2860:  add ah, al; ret; 
0x556c5c4f:  add ah, al; xor al, 0xeb; jmp dword ptr [eax + 0x7e]; 
0x556c5c2f:  add ah, al; xor ebp, ebx; jmp esp; 
0x556f7523:  add ah, bh; dec edi; clc; jmp dword ptr [edx]; 
0x556e2433:  add ah, bl; cmc; int1; call dword ptr [ebx]; 
0x556d227d:  add ah, byte ptr [ebp + 0xa]; push cs; add al, 0xc6; ret; 
0x556e5831:  add ah, byte ptr [ecx + 0xa]; ret; 
0x556d7821:  add ah, byte ptr [edx + 0xa]; push cs; add al, 0xc6; ret; 
0x556e3c23:  add ah, byte ptr [edx + 0xe]; add al, 0xc6; ret; 
0x556e6324:  add ah, byte ptr [esi + 0xa]; ret; 
0x555e7c4c:  add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; lea eax, dword ptr [edx + 0xc]; ret; 
0x555e386c:  add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; mov eax, edx; ret; 
0x555e7c6c:  add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; lea eax, dword ptr [edx + 0xd]; ret; 
0x555e372c:  add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x555e7b2c:  add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x555e374c:  add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x555e5427:  add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; pop ebx; ret; 
0x556d7a33:  add ah, cl; pop eax; out dx, eax; jmp dword ptr [ebx]; 
0x556e6a6b:  add ah, dh; sbb esp, esi; call eax; 
0x556c7c67:  add ah, dh; sub al, 0xf1; jmp esp; 
0x556c5b47:  add ah, dl; adc eax, 0xbad0ffeb; add dword ptr [eax], eax; push esp; sbb bl, ch; call dword ptr [eax]; 
0x556c4268:  add ah, dl; cld; push dword ptr [eax]; aam 0xfc; jmp dword ptr [eax - 0x2c]; 
0x556c5d5f:  add ah, dl; mov al, 0xeb; call eax; 
0x556d4f5b:  add ah, dl; or edi, ebp; call esp; 
0x556c6f2f:  add ah, dl; out dx, al; out dx, eax; jmp dword ptr [eax]; 
0x556c6157:  add ah, dl; pop ecx; in al, dx; call eax; 
0x556f7332:  add al, 0; adc al, 0; add byte ptr [eax], al; cmp byte ptr [ecx + 0x44740002], ah; clc; jmp dword ptr [edi]; 
0x555d7076:  add al, 0; add al, ch; ret 0xfffc; 
0x5564313e:  add al, 0; add al, ch; sub eax, 0x8100044c; ret; 
0x555a262e:  add al, 0; add byte ptr [eax - 0x4ab43], al; call dword ptr [ebx + 0xf]; 
0x555f5f29:  add al, 0; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x55687a4d:  add al, 0; add byte ptr [eax], al; add esp, 0xc; ret; 
0x55605431:  add al, 0; add byte ptr [eax], al; ret; 
0x55673655:  add al, 0; add byte ptr [ebx + 0x48424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x488]; add esp, 0x48c; ret; 
0x5567365c:  add al, 0; add byte ptr [ebx + 0x48824ac], cl; add byte ptr [eax], al; add esp, 0x48c; ret; 
0x555d2c56:  add al, 0; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x77]; 
0x5559743a:  add al, 0; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x55643322:  add al, 0; add byte ptr [ebx], dh; test byte ptr [eax + edi], ah; add al, 0; add byte ptr [ecx], cl; ret 0x850f; 
0x5566672c:  add al, 0; add byte ptr [ecx - 0x2617dbfc], cl; jns 0x108735; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x55625731:  add al, 0; add byte ptr [ecx - 0x74725bb3], cl; movsb byte ptr es
0x55643329:  add al, 0; add byte ptr [ecx], cl; ret 0x850f; 
0x55677674:  add al, 0; add byte ptr [ecx], dh; ror byte ptr [ebp + 0x26b4], 0; add byte ptr [ebx], bh; lodsb al, byte ptr [esi]; ret; 
0x55647835:  add al, 0; add ebx, 0xb97bd; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xc1; call dword ptr gs
0x55647568:  add al, 0; add ebx, 0xb9a8a; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0x10f; call dword ptr gs
0x55644a78:  add al, 0; add ebx, 0xbc57a; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0x60; call dword ptr gs
0x55644578:  add al, 0; add ebx, 0xbca7a; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0xbf; call dword ptr gs
0x55637432:  add al, 0; add esp, 0x524; mov eax, esi; pop ebx; pop esi; ret; 
0x55635157:  add al, 0x16; add dword ptr [eax + edx - 0x75], esi; xor dword ptr [eax - 1], 0xffffffff; jmp dword ptr [ebp - 0x75]; 
0x55684625:  add al, 0x16; mov byte ptr [edi + edx], al; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x555d2f64:  add al, 0x17; mov edx, dword ptr [ebx - 0x15c]; and eax, ecx; sub esi, eax; mov dword ptr [esp], esi; call dword ptr [edx]; 
0x55684628:  add al, 0x17; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x556e6b2c:  add al, 0x1b; hlt; jmp dword ptr [ebx]; 
0x5561734c:  add al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call 0xb92e0; add esp, 0x1c; ret; 
0x555d4f57:  add al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [eax]; 
0x555d2d6a:  add al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [ecx]; 
0x55662a70:  add al, 0x24; call 0x104a80; add esp, 0x2c; ret; 
0x55684544:  add al, 0x24; call 0x124bc0; add esp, 0x18; pop ebx; ret; 
0x55684564:  add al, 0x24; call 0x124c30; add esp, 0x18; pop ebx; ret; 
0x55612f58:  add al, 0x24; call 0x126c80; call dword ptr [ebp - 0x48]; 
0x55686b3c:  add al, 0x24; call 0x128a80; add esp, 0x18; pop ebx; ret; 
0x55585758:  add al, 0x24; call 0x276f0; add esp, 0x1c; ret; 
0x55586e44:  add al, 0x24; call 0x28dc0; add esp, 0x28; pop ebx; ret; 
0x55592079:  add al, 0x24; call 0x352d0; add esp, 0x28; pop ebx; ret; 
0x55593a41:  add al, 0x24; call 0x36110; add esp, 0x18; pop ebx; ret; 
0x55593b41:  add al, 0x24; call 0x3bef0; add esp, 0x18; pop ebx; ret; 
0x555a5a38:  add al, 0x24; call 0x424d0; add esp, 0x18; pop ebx; ret; 
0x555c6b54:  add al, 0x24; call 0x643c0; add esp, 0x18; pop ebx; ret; 
0x555c3c6c:  add al, 0x24; call 0x65c80; add esp, 0x28; pop ebx; ret; 
0x555b2744:  add al, 0x24; call 0x67300; add esp, 0x18; pop ebx; ret; 
0x555f5c27:  add al, 0x24; call 0x7e790; add esp, 0x18; pop ebx; ret; 
0x5566282a:  add al, 0x24; call 0x97ff0; add esp, 0x18; pop ebx; ret; 
0x55662a2a:  add al, 0x24; call 0x984e0; add esp, 0x18; pop ebx; ret; 
0x55662d22:  add al, 0x24; call 0x98e50; add esp, 0x18; pop ebx; ret; 
0x55662c3a:  add al, 0x24; call 0x991e0; add esp, 0x28; pop ebx; ret; 
0x555f7b39:  add al, 0x24; call 0x9a6d0; add esp, 0x28; pop ebx; ret; 
0x555f7c71:  add al, 0x24; call 0x9b9e0; add esp, 0x18; pop ebx; ret; 
0x555f7d31:  add al, 0x24; call 0x9e640; add esp, 0x18; pop ebx; ret; 
0x555f7d71:  add al, 0x24; call 0xa1190; add esp, 0x18; pop ebx; ret; 
0x555f6e44:  add al, 0x24; call 0xa5b70; add esp, 0x28; pop ebx; ret; 
0x5560642d:  add al, 0x24; call 0xa7e90; add esp, 0x18; pop ebx; ret; 
0x55616768:  add al, 0x24; call 0xb85e0; add esp, 0x18; pop ebx; ret; 
0x55616a68:  add al, 0x24; call 0xb8bd0; add esp, 0x18; pop ebx; ret; 
0x555c2a6e:  add al, 0x24; call dword ptr [eax + 0x10]; 
0x55682931:  add al, 0x24; call dword ptr [ebx - 0x1464]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x55682849:  add al, 0x24; call dword ptr [ebx - 0x146c]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x555d2d49:  add al, 0x24; call dword ptr [ecx]; 
0x55673f32:  add al, 0x24; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x555f6679:  add al, 0x24; call edi; 
0x555f672c:  add al, 0x24; call esi; 
0x55682a4b:  add al, 0x24; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 4]; 
0x555d7073:  add al, 0x24; pop eax; add al, 0; add al, ch; ret 0xfffc; 
0x5564406b:  add al, 0x24; xchg edi, ebx; mov eax, 0x36; call dword ptr gs
0x55653c41:  add al, 0x3a; add byte ptr [eax], al; add byte ptr [ecx + 0x72e82434], cl; ret; 
0x556c7f48:  add al, 0x3b; int1; push dword ptr [eax + 0x3400014f]; cmp esi, ecx; call eax; 
0x556e7a2f:  add al, 0x41; push cs; adc al, 0x83; add eax, 0x2400e43; ret 0xe0a; 
0x556f6074:  add al, 0x43; or eax, dword ptr [edx]; push esi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x556d2233:  add al, 0x45; or esi, dword ptr [esi + 0xa]; ret; 
0x556e796e:  add al, 0x48; or eax, dword ptr [edx]; pop ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x55584f3a:  add al, 0x50; and eax, 0x1000; ret; 
0x55584e2a:  add al, 0x50; and eax, 0x200; ret; 
0x55584e5a:  add al, 0x50; and eax, 0x8000; ret; 
0x556a344b:  add al, 0x5d; pop ebx; ret; 
0x556a3452:  add al, 0x5e; pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x555e7a4c:  add al, 0x5f; ret; 
0x555d5335:  add al, 0x65; mov dword ptr [eax], 0xc; xor eax, eax; add esp, 0xc; ret; 
0x55636a2b:  add al, 0x66; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x555e7a57:  add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, dword ptr [edx + 5]; pop edi; ret; 
0x55644825:  add al, 0x74; push 0x7401f883; and ecx, dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x555f6129:  add al, 0x74; push es; lea eax, dword ptr [ebx - 0x595d4]; pop ebx; ret; 
0x555f5e69:  add al, 0x74; push es; lea eax, dword ptr [ebx - 0xfbd84]; pop ebx; ret; 
0x555f5d49:  add al, 0x74; push es; lea eax, dword ptr [ebx - 0xfcaa4]; pop ebx; ret; 
0x55583721:  add al, 0x83; ret 0x3910; 
0x55632851:  add al, 0x83; ret 0x8340; 
0x5567687c:  add al, 0x83; ret 0x8901; 
0x55625362:  add al, 0x85; ror byte ptr [ecx - 0x77f04fab], cl; ret; 
0x55626d78:  add al, 0x85; ror byte ptr [edi], 0x94; ret 0xa5e9; 
0x556e273d:  add al, 0x87; add eax, dword ptr [ebx]; imul eax, dword ptr [ecx], 0xa; ret; 
0x556d5e71:  add al, 0x87; add eax, dword ptr [ebx]; int1; add dword ptr [edx], ecx; ret; 
0x556d2a4d:  add al, 0x87; add eax, dword ptr [ebx]; pop ecx; add al, 0xa; ret; 
0x556e5f6d:  add al, 0x87; add eax, dword ptr [ebx]; push ebx; add cl, byte ptr [edx]; ret; 
0x556f687d:  add al, 0x87; add eax, dword ptr [ebx]; salc; add cl, byte ptr [edx]; ret; 
0x556e5c39:  add al, 0x87; add eax, dword ptr [ebx]; xchg byte ptr [edx + ecx], al; ret; 
0x556f3e2d:  add al, 0x87; add eax, dword ptr [edx]; jno 0x195e3d; ret; 
0x555e3676:  add al, 0x88; inc edx; add al, 0x89; clc; pop edi; ret; 
0x555e7a46:  add al, 0x88; inc edx; add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x55673f30:  add al, 0x89; add al, 0x24; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x555e3679:  add al, 0x89; clc; pop edi; ret; 
0x555f6f6b:  add al, 0x89; cmp al, 0x24; call esi; 
0x555c4a39:  add al, 0x89; dec esp; and al, 8; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x55637353:  add al, 0x89; nop; or al, 1; add byte ptr [eax], al; xor eax, eax; ret; 
0x55637369:  add al, 0x89; nop; or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x555f2a3a:  add al, 0x89; or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x55672253:  add al, 0x89; push esp; and al, 0x1c; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x5567212d:  add al, 0x89; push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x5567215d:  add al, 0x89; push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x555d7534:  add al, 0x89; push esp; and al, 8; call eax; 
0x55682a55:  add al, 0x89; ret 0x8365; 
0x55672137:  add al, 0x89; ret 0xc031; 
0x555d7f48:  add al, 0x89; ret 0xeac1; 
0x55684f3f:  add al, 0x89; ret 0xebeb; 
0x5561703b:  add al, 0x89; sal bl, 1; ret; 
0x555c4e75:  add al, 0x89; xor al, 0x24; call dword ptr [eax + 0x2c]; 
0x55672131:  add al, 0x89; xor al, 0x24; call dword ptr [eax + 4]; 
0x55672161:  add al, 0x89; xor al, 0x24; call dword ptr [eax]; 
0x555a6e76:  add al, 0x89; xor al, 0x24; call eax; 
0x55584f2e:  add al, 0x8b; adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x55584e7e:  add al, 0x8b; adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x55584e4e:  add al, 0x8b; adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x55584d7e:  add al, 0x8b; adc eax, 0x65fffffe; mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x55687933:  add al, 0x8b; inc eax; pop esp; ret; 
0x55687923:  add al, 0x8b; inc eax; push eax; ret; 
0x555c5460:  add al, 0x8b; inc ebp; push esp; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x55682a45:  add al, 0x8b; inc esp; and al, 0x20; mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 4]; 
0x555f2a5e:  add al, 0x8b; inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x55636a46:  add al, 0x8b; inc esp; and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x5558492c:  add al, 0x8b; insb byte ptr es
0x555f616e:  add al, 0x8b; or al, byte ptr [ebp + 0x5ef375c9]; pop edi; pop ebp; ret; 
0x55672968:  add al, 0x8b; push es; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x5563645e:  add al, 0x8b; push esp; and al, 0x1c; mov dword ptr [eax + 8], edx; add esp, 8; ret; 
0x5557785b:  add al, 0x8b; push esp; and al, 0x30; mov dword ptr [esp], edx; call eax; 
0x55672b73:  add al, 0x8b; push esp; and al, 0x60; mov dword ptr [esp], edx; call eax; 
0x55636a53:  add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x555f3a60:  add al, 0x8d; inc edi; lcall ptr [esi + 0x5f]; pop ebp; ret; 
0x555e7a49:  add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x556c6440:  add al, 0x92; in al, dx; jmp eax; 
0x556c6468:  add al, 0x96; in al, dx; call eax; 
0x55626048:  add al, 0xa; add byte ptr [eax], al; add byte ptr [ecx + 0x4c892434], cl; and al, 8; call dword ptr [ebp - 0x78]; 
0x55653c24:  add al, 0xa; add byte ptr [eax], al; add byte ptr [ecx - 0x7017dbcc], cl; ret; 
0x5557725f:  add al, 0xb8; ret 0; 
0x556f5e35:  add al, 0xc5; dec eax; or ebp, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x556f7448:  add al, 0xc5; dec eax; or edi, dword ptr [ecx + 0xa]; push cs; adc al, 0x43; ret; 
0x556f703d:  add al, 0xc5; dec eax; or esp, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x556d2625:  add al, 0xc5; inc ebp; or eax, dword ptr [edx]; push esi; ret; 
0x556e683d:  add al, 0xc5; inc ebx; or eax, dword ptr [edx]; out 0xa, al; ret; 
0x556d2738:  add al, 0xc5; inc ebx; or ebx, dword ptr [edi + 0xa]; push cs; adc al, 0x43; ret; 
0x556f4520:  add al, 0xc5; inc ecx; or eax, dword ptr [ebx]; pop edx; add dword ptr [edx], ecx; ret; 
0x556e4540:  add al, 0xc5; inc ecx; or eax, dword ptr [ebx]; push ecx; add dword ptr [edx], ecx; ret; 
0x556e2564:  add al, 0xc5; inc ecx; or ebp, dword ptr [esi + 0xa]; ret; 
0x556f385b:  add al, 0xc5; inc ecx; or ebx, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x556e632f:  add al, 0xc5; inc ecx; or edx, dword ptr [esi + 0xa]; ret; 
0x556e2467:  add al, 0xc5; inc edi; or eax, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x556e5b63:  add al, 0xc5; inc edx; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x556d2678:  add al, 0xc5; inc edx; or esp, dword ptr [eax + 0xa]; push cs; adc al, 0x43; ret; 
0x556d3834:  add al, 0xc5; inc esp; or ebx, dword ptr [edx + 0xa]; ret; 
0x556e674c:  add al, 0xc5; inc esp; or edi, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x556d2039:  add al, 0xc6; inc ebx; or eax, dword ptr [ebx + 0xa]; push cs; or al, 0x44; ret; 
0x556c6b58:  add al, 0xd2; out dx, al; jmp esp; 
0x555f6978:  add al, 0xe8; adc al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x555b3c3c:  add al, 0xe8; dec esi; imul edi, edi, 0xc4c481ff; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x5563704a:  add al, 0xe8; pushal; ret; 
0x556a6e7b:  add al, 0xf; test dword ptr [ebx - 0x7cfffffd], ebx; ror byte ptr [ebx], 0x5f; ret; 
0x555e512b:  add al, 0xf; test dword ptr [esi + 6], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x5564643d:  add al, 0xf; xchg eax, esp; rol byte ptr [ebx - 0x3b7cfe18], 0x24; pop ebx; pop esi; ret; 
0x556c4e41:  add al, 0xfd; call dword ptr [eax]; 
0x556c4c50:  add al, 0xfd; cld; call dword ptr [ebp + edi*8 - 0x1cb0004]; cld; call esp; 
0x55684f3c:  add al, 0xff; push eax; add al, 0x89; ret 0xebeb; 
0x55637a6a:  add al, 1; ret 0x689; 
0x555f5c7c:  add al, 1; ret 0xff85; 
0x5562643f:  add al, 2; add byte ptr [eax], al; add byte ptr [ecx + 0x4c892434], cl; and al, 8; call dword ptr [ebp - 0x78]; 
0x556e7849:  add al, 3; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x556e5f40:  add al, 3; pop ebp; push es; ret; 
0x5557734a:  add al, 5; add byte ptr [eax], al; pop ebx; ret; 
0x55584924:  add al, 6; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x55663071:  add al, al; and edx, 0xff; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x556e442f:  add al, al; out 0xf2, al; jmp dword ptr [edx]; 
0x556d7c2f:  add al, al; out dx, eax; jmp esi; 
0x556e5b2f:  add al, al; xor al, 0xf3; call dword ptr [esi]; 
0x556e2727:  add al, bh; adc dl, dh; jmp dword ptr [eax]; 
0x556f624d:  add al, bh; call dword ptr [esi]; 
0x556e6177:  add al, bl; sal bl, 1; call dword ptr [eax]; 
0x556f3252:  add al, byte ptr [eax]; aas; xor al, 0xf7; call dword ptr [eax]; 
0x556a5237:  add al, byte ptr [eax]; add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x556a5248:  add al, byte ptr [eax]; add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x556a5259:  add al, byte ptr [eax]; add byte ptr [eax - 0x37af0c0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x55683d3f:  add al, byte ptr [eax]; add byte ptr [eax], al; add bl, ch; ret; 
0x5561476c:  add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x39]; 
0x55687a69:  add al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0xc; ret; 
0x55626440:  add al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp], esi; mov dword ptr [esp + 8], ecx; call dword ptr [ebp - 0x78]; 
0x555b3e49:  add al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x555d7943:  add al, byte ptr [eax]; add byte ptr [ebx - 0x1876d], cl; jmp dword ptr [ebp - 0x75]; 
0x555f3343:  add al, byte ptr [eax]; add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x55624c4a:  add al, byte ptr [eax]; add byte ptr [ecx], bh; ret 0x840f; 
0x55663333:  add al, byte ptr [eax]; add ecx, 0x9dcbf; mov eax, dword ptr [ecx - 0x100]; add eax, dword ptr gs
0x556f7d3e:  add al, byte ptr [eax]; and byte ptr [esi - 8], bl; jmp dword ptr [ebx]; 
0x556f695e:  add al, byte ptr [eax]; cdq; xor bh, al; call dword ptr [eax]; 
0x556f7522:  add al, byte ptr [eax]; cld; dec edi; clc; jmp dword ptr [edx]; 
0x556f3a56:  add al, byte ptr [eax]; cmp dword ptr [edx - 9], ecx; call dword ptr [eax]; 
0x556f5136:  add al, byte ptr [eax]; dec eax; mov cl, 0xf7; jmp dword ptr [esi]; 
0x556f7d76:  add al, byte ptr [eax]; dec eax; pop esi; clc; jmp dword ptr [ebx]; 
0x556f2c2e:  add al, byte ptr [eax]; inc eax; sub edi, esi; call dword ptr [ecx]; 
0x556f746a:  add al, byte ptr [eax]; inc esp; dec ebp; clc; jmp dword ptr [ebx]; 
0x556f335a:  add al, byte ptr [eax]; inc esp; xor dh, bh; call ebx; 
0x556f7322:  add al, byte ptr [eax]; insb byte ptr es
0x556f5442:  add al, byte ptr [eax]; lodsb al, byte ptr [esi]; ret; 
0x55617e48:  add al, byte ptr [eax]; mov ecx, ebp; mov edx, eax; xchg ebx, ecx; mov eax, 6; call dword ptr gs
0x556f6a42:  add al, byte ptr [eax]; mov word ptr [eax + edi*8], gs; call dword ptr [eax]; 
0x556f3d42:  add al, byte ptr [eax]; mov word ptr [edi - 9], es; jmp dword ptr [esi]; 
0x556f2d7a:  add al, byte ptr [eax]; movsb byte ptr es
0x556f3222:  add al, byte ptr [eax]; pop edi; xor al, 0xf7; call dword ptr [eax]; 
0x556f6e6a:  add al, byte ptr [eax]; push esp; aaa; clc; jmp dword ptr [eax]; 
0x556f677e:  add al, byte ptr [eax]; pushal; sbb eax, edi; call edx; 
0x556f564e:  add al, byte ptr [eax]; ror bl, 0xf7; jmp dword ptr [edx]; 
0x556f395e:  add al, byte ptr [ebx + 0xe590203]; add al, 0xc6; ret; 
0x556f6e4d:  add al, byte ptr [ebx + 0xe]; or al, 0x86; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xc0e7e04], al; ret; 
0x556d6a7e:  add al, byte ptr [ebx + eax*4 + 3]; add al, byte ptr [esi + 0xe]; add al, 0xc6; ret; 
0x556d7d36:  add al, byte ptr [ebx + eax*4 + 3]; jns 0x179d4a; add al, 0xc6; ret; 
0x556d6b6a:  add al, byte ptr [ebx + eax*4 + 3]; pushal; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x555a3e34:  add al, byte ptr [ebx - 0x4e343]; call dword ptr [eax]; 
0x556d2168:  add al, byte ptr [ebx]; pop esp; add dword ptr [edx], ecx; push cs; adc al, 0x46; ret; 
0x55606874:  add al, byte ptr [ecx]; ret 0x3c8d; 
0x556f3e25:  add al, byte ptr [edi + 0xd]; add eax, 0x86058343; add al, 0x87; add eax, dword ptr [edx]; jno 0x195e3d; ret; 
0x556f7c69:  add al, byte ptr [edi + 0xe]; or byte ptr [esi + ecx + 4], al; ret; 
0x556e5f35:  add al, byte ptr [edx + 0xd]; add eax, 0x42038743; add dword ptr [0x5d030486], 6; ret; 
0x556e5d7d:  add al, byte ptr [edx + 0xd]; add eax, 0x86058343; add al, 0x87; add eax, dword ptr [ebx]; add al, 0xa; ret; 
0x556e2735:  add al, byte ptr [edx + 0xd]; add eax, 0x86058343; add al, 0x87; add eax, dword ptr [ebx]; imul eax, dword ptr [ecx], 0xa; ret; 
0x556e5c31:  add al, byte ptr [edx + 0xd]; add eax, 0x86058343; add al, 0x87; add eax, dword ptr [ebx]; xchg byte ptr [edx + ecx], al; ret; 
0x556e3c22:  add al, byte ptr [edx]; bound ecx, qword ptr [esi]; add al, 0xc6; ret; 
0x556f5529:  add al, byte ptr [edx]; pop eax; push cs; add al, 0xc6; ret; 
0x556f4a2d:  add al, byte ptr [edx]; push ecx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x556c6e5c:  add al, ch; add byte ptr [eax], al; mov eax, dword ptr [0x30ffefde]; call 0xdec08e6a; out dx, eax; jmp dword ptr [eax - 0x18]; 
0x5557764f:  add al, ch; and al, byte ptr [edi]; adc dword ptr [eax], eax; add ecx, 0x18999f; lea eax, dword ptr [ecx - 0x43dee]; ret; 
0x556d2c6e:  add al, ch; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x556f7c57:  add al, ch; pop esp; clc; call dword ptr [eax]; 
0x555d7078:  add al, ch; ret 0xfffc; 
0x55643140:  add al, ch; sub eax, 0x8100044c; ret; 
0x55577256:  add al, ch; test dl, ah; pop es; add byte ptr [ecx - 0x47fbdbbc], cl; ret 0; 
0x556e6877:  add al, cl; xchg eax, ecx; add dword ptr [eax], eax; cld; hlt; call dword ptr [eax]; 
0x55567437:  add al, dh; cmp byte ptr [edi], cl; add byte ptr [ecx + 0x12000000], bl; add byte ptr [eax + eax], cl; ret 0x38; 
0x556f327f:  add al, dl; pop ebx; add al, byte ptr [eax]; pop ds; xor al, 0xf7; call dword ptr [eax]; 
0x55567557:  add al, dl; ret 7; 
0x55634e43:  add bh, ah; ret; 
0x55683d3d:  add bh, al; add al, byte ptr [eax]; add byte ptr [eax], al; add bl, ch; ret; 
0x5561476a:  add bh, al; add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x39]; 
0x55625458:  add bh, al; inc eax; sbb al, 0; add byte ptr [eax], al; add dh, dh; ret 0xc740; 
0x5560526b:  add bh, bh; pop esi; pop edi; ret; 
0x55682a52:  add bh, bh; push eax; add al, 0x89; ret 0x8365; 
0x55617b72:  add bh, bh; ret; 
0x555b4a6f:  add bh, byte ptr [ecx]; ret 0x1974; 
0x556d7c71:  add bh, byte ptr [edx + 0xa]; push cs; add al, 0xc6; ret; 
0x556c4e31:  add bh, ch; call eax; 
0x556c4e31:  add bh, ch; call eax; add bh, ch; jmp dword ptr [eax + 3]; 
0x556c4e35:  add bh, ch; jmp dword ptr [eax + 3]; 
0x556f2c5b:  add bh, dh; sub esi, edi; call dword ptr [eax]; 
0x556c4b64:  add bl, bh; cld; push dword ptr [eax - 0x7f000305]; cld; cld; jmp eax; 
0x556f552a:  add bl, byte ptr [eax + 0xe]; add al, 0xc6; ret; 
0x556f616d:  add bl, byte ptr [ebp + 0xa]; push cs; add al, 0xc6; ret; 
0x556e7971:  add bl, byte ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x556e3831:  add bl, byte ptr [edx + 0xa]; push cs; add al, 0xc6; ret; 
0x556e7b6f:  add bl, byte ptr [edx + ecx + 0xe]; adc al, 0x43; ret; 
0x556d2225:  add bl, byte ptr [edx + ecx + 0xe]; add al, 0xc6; ret; 
0x556e7c48:  add bl, byte ptr [esi + 0xa]; ret; 
0x556c5860:  add bl, byte ptr [esi - 3]; call dword ptr [edx + 0x5e]; 
0x55605a2e:  add bl, ch; ret 0xb48d; 
0x556e5155:  add bl, dh; call dword ptr [esi + 2]; 
0x555e362f:  add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x555f2d7f:  add bl, dh; movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x5556513b:  add byte ptr [0x22000000], dl; add byte ptr [eax + eax], cl; ret; 
0x555b2e3b:  add byte ptr [0x4000], bh; sete dl; mov eax, edx; add esp, 0x7c; ret; 
0x55577344:  add byte ptr [0x91890000], al; add al, 5; add byte ptr [eax], al; pop ebx; ret; 
0x5557733a:  add byte ptr [0xe750000], al; rdtsc; mov dword ptr [ecx + 0x500], eax; mov dword ptr [ecx + 0x504], edx; pop ebx; ret; 
0x556f677f:  add byte ptr [eax + 0x19], ah; clc; call edx; 
0x556e6d2f:  add byte ptr [eax + 0x21], dl; hlt; jmp dword ptr [edi]; 
0x5556383b:  add byte ptr [eax + 0x22000001], bl; add byte ptr [eax + eax], cl; ret; 
0x5561706a:  add byte ptr [eax + 0x26748d], dl; ret; 
0x556d5f27:  add byte ptr [eax + 0x28], cl; out dx, eax; call edx; 
0x55623c5e:  add byte ptr [eax + 0x2c1c838d], al; dec dword ptr [ebp - 0xdd4636d]; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x556f243f:  add byte ptr [eax + 0x3800024d], dl; and dh, bh; call dword ptr [eax]; 
0x556f324f:  add byte ptr [eax + 0x3f00025b], ah; xor al, 0xf7; call dword ptr [eax]; 
0x556d263f:  add byte ptr [eax + 0x54], al; add byte ptr [eax], al; pushfd; fsubr st(4); jmp dword ptr [edi]; 
0x556d2967:  add byte ptr [eax + 0x57], ch; add byte ptr [eax], al; in al, 0x30; in eax, dx; call dword ptr [ebx + 1]; 
0x556f2d77:  add byte ptr [eax + 0x5b], bh; add al, byte ptr [eax]; movsb byte ptr es
0x5557506a:  add byte ptr [eax + 0x5b], bl; pop esi; pop edi; pop ebp; ret; 
0x556d2f4f:  add byte ptr [eax + 0x5d], dl; add byte ptr [eax], al; pop esp; imul ebp; jmp dword ptr [ebx]; 
0x556f7d77:  add byte ptr [eax + 0x5e], cl; clc; jmp dword ptr [ebx]; 
0x556f3357:  add byte ptr [eax + 0x61], bl; add al, byte ptr [eax]; inc esp; xor dh, bh; call ebx; 
0x556d233f:  add byte ptr [eax + 0x6a00004c], dl; aad 0xec; call dword ptr [eax]; 
0x556f3d3f:  add byte ptr [eax + 0x6b], al; add al, byte ptr [eax]; mov word ptr [edi - 9], es; jmp dword ptr [esi]; 
0x556a527f:  add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x55565137:  add byte ptr [eax + 0x7a], ah; or al, byte ptr [eax]; adc eax, 0x22000000; add byte ptr [eax + eax], cl; ret; 
0x556d4f57:  add byte ptr [eax + 0x7d], bl; add byte ptr [eax], al; aam 9; out dx, eax; call esp; 
0x556e5524:  add byte ptr [eax + 0xe], dh; or byte ptr [edx + 9], al; add eax, dword ptr [edx]; push esi; ret; 
0x556a7138:  add byte ptr [eax + 0xf00067a], al; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x55687a67:  add byte ptr [eax + 2], bh; add esp, 0xc; ret; 
0x5560542f:  add byte ptr [eax + 4], bh; ret; 
0x5560543f:  add byte ptr [eax + 5], bh; ret; 
0x5560544f:  add byte ptr [eax + 6], bh; ret; 
0x5560545f:  add byte ptr [eax + 7], bh; ret; 
0x55687a57:  add byte ptr [eax + 8], bh; add esp, 0xc; ret; 
0x556a7155:  add byte ptr [eax + 8], bh; pop edi; ret; 
0x556f624b:  add byte ptr [eax + eax - 8], dh; call dword ptr [esi]; 
0x55673654:  add byte ptr [eax + eax], 0; mov edi, dword ptr [esp + 0x484]; mov ebp, dword ptr [esp + 0x488]; add esp, 0x48c; ret; 
0x5566672b:  add byte ptr [eax + eax], al; add byte ptr [ecx - 0x2617dbfc], cl; jns 0x108735; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x55625730:  add byte ptr [eax + eax], al; add byte ptr [ecx - 0x74725bb3], cl; movsb byte ptr es
0x556f7d37:  add byte ptr [eax + eax], bl; add byte ptr [eax], al; cmp al, 0xab; add al, byte ptr [eax]; and byte ptr [esi - 8], bl; jmp dword ptr [ebx]; 
0x556f3a7f:  add byte ptr [eax + eax], ch; add byte ptr [eax], al; aam 0x63; add al, byte ptr [eax]; sbb dword ptr [edx - 9], ecx; call dword ptr [eax]; 
0x556d3d57:  add byte ptr [eax + eax], ch; add byte ptr [eax], al; lodsb al, byte ptr [esi]; add byte ptr [eax], al; ret; 
0x556d545f:  add byte ptr [eax + eax], ch; add byte ptr [eax], al; mov ah, 0x7d; add byte ptr [eax], al; ret 0xef13; 
0x556f324b:  add byte ptr [eax + eax], ch; add byte ptr [eax], al; mov al, byte ptr [0x3f00025b]; xor al, 0xf7; call dword ptr [eax]; 
0x556e6537:  add byte ptr [eax + eax], ch; add byte ptr [eax], al; mov word ptr [esi + 0x1a850001], cs; hlt; call dword ptr [eax]; 
0x556d723b:  add byte ptr [eax + eax], ch; add byte ptr [eax], al; nop; wait; add byte ptr [eax], al; ret; 
0x555d5338:  add byte ptr [eax + eax], cl; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x55565961:  add byte ptr [eax + eax], cl; mov cl, byte ptr [ebx]; add byte ptr [eax - 8], ah; adc dword ptr [eax], eax; ret; 
0x55567551:  add byte ptr [eax + eax], cl; mov eax, dword ptr [0xd0000010]; ret 7; 
0x55567441:  add byte ptr [eax + eax], cl; ret 0x38; 
0x55562231:  add byte ptr [eax + eax], cl; ret 0x52; 
0x55563841:  add byte ptr [eax + eax], cl; ret; 
0x556e6a63:  add byte ptr [eax + eax], dh; add byte ptr [eax], al; push 0xf4000198; sbb esp, esi; call eax; 
0x556f7333:  add byte ptr [eax + eax], dl; add byte ptr [eax], al; cmp byte ptr [ecx + 0x44740002], ah; clc; jmp dword ptr [edi]; 
0x556f712b:  add byte ptr [eax + eax], dl; add byte ptr [eax], al; xor byte ptr [edi + 0x3ebc0002], bl; clc; jmp dword ptr [eax]; 
0x556f6777:  add byte ptr [eax + eax], dl; add byte ptr [ebp + edx*4 + 2], bh; add byte ptr [eax + 0x19], ah; clc; call edx; 
0x556c5b4f:  add byte ptr [eax + ebx - 0x15], dl; call dword ptr [eax]; 
0x556e4a3b:  add byte ptr [eax + edi*2], bh; add dword ptr [eax], eax; sal dl, 0xf2; call ecx; 
0x556a5239:  add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x556e7f57:  add byte ptr [eax - 0x1a], ch; hlt; jmp dword ptr [esi]; 
0x556c6e27:  add byte ptr [eax - 0x25], cl; out dx, eax; jmp eax; 
0x556a524a:  add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x556a525b:  add byte ptr [eax - 0x37af0c0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x556a563e:  add byte ptr [eax - 0x3fcea1a5], dl; pop edi; ret; 
0x55567f77:  add byte ptr [eax - 0x42], dh; str word ptr [ecx]; add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; ret 0x11; 
0x556f303f:  add byte ptr [eax - 0x43fffda7], dl; xor bh, dh; call dword ptr [eax]; 
0x555a2630:  add byte ptr [eax - 0x4ab43], al; call dword ptr [ebx + 0xf]; 
0x556f297f:  add byte ptr [eax - 0x53fffda9], al; and esi, edi; jmp dword ptr [edi]; 
0x556f7467:  add byte ptr [eax - 0x5e], ch; add al, byte ptr [eax]; inc esp; dec ebp; clc; jmp dword ptr [ebx]; 
0x556f6e67:  add byte ptr [eax - 0x64], ch; add al, byte ptr [eax]; push esp; aaa; clc; jmp dword ptr [eax]; 
0x556f6a3f:  add byte ptr [eax - 0x68], al; add al, byte ptr [eax]; mov word ptr [eax + edi*8], gs; call dword ptr [eax]; 
0x556e6a67:  add byte ptr [eax - 0x68], ch; add dword ptr [eax], eax; hlt; sbb esp, esi; call eax; 
0x556e614f:  add byte ptr [eax - 0x71], dl; add dword ptr [eax], eax; lodsb al, byte ptr [esi]; sal bl, 1; call dword ptr [eax]; 
0x556e5a3f:  add byte ptr [eax - 0x78], al; add dword ptr [eax], eax; pop esp; and dh, bl; jmp dword ptr [eax + 3]; 
0x55653062:  add byte ptr [eax - 0x7af000c1], al; push ss; add dword ptr [eax], eax; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x55654237:  add byte ptr [eax - 0x7bf0c506], al; xchg eax, esi; add dword ptr [eax], eax; add byte ptr [ebx - 0x12f7d], cl; jmp dword ptr [ebp - 0x75]; 
0x556f543f:  add byte ptr [eax - 0x7e], al; add al, byte ptr [eax]; lodsb al, byte ptr [esi]; ret; 
0x556f2c57:  add byte ptr [eax - 0x8fffdab], ch; sub esi, edi; call dword ptr [eax]; 
0x555a664f:  add byte ptr [eax - 0xb443], al; jmp dword ptr [esi + 0xf]; 
0x55682865:  add byte ptr [eax - 1], bh; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x55644839:  add byte ptr [eax - 1], bh; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x55643059:  add byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; ret; 
0x55565967:  add byte ptr [eax - 8], ah; adc dword ptr [eax], eax; ret; 
0x55596341:  add byte ptr [eax], 0; add byte ptr [ecx], ch; mov dword ptr [ebp - 0x5a71f001], 0x89fffffe; ret 0x18e9; 
0x55647a79:  add byte ptr [eax], 0; add esp, 0x18; mov al, 1; pop ebx; ret; 
0x5564676c:  add byte ptr [eax], 0; mov dword ptr [esp], eax; call 0x54fb0; add esp, 0x18; pop ebx; ret; 
0x55584e5e:  add byte ptr [eax], 0; ret; 
0x556f297b:  add byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [eax - 0x53fffda9], al; and esi, edi; jmp dword ptr [edi]; 
0x556e616f:  add byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [edi + ecx*4 + 1], dh; add al, bl; sal bl, 1; call dword ptr [eax]; 
0x556e6127:  add byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [edi + ecx*4], ch; add dword ptr [eax], eax; adc al, 0xf3; call dword ptr [eax]; 
0x556f7d3f:  add byte ptr [eax], ah; pop esi; clc; jmp dword ptr [ebx]; 
0x55563837:  add byte ptr [eax], ah; push esi; push es; add byte ptr [eax + 0x22000001], bl; add byte ptr [eax + eax], cl; ret; 
0x556d4656:  add byte ptr [eax], al; aaa; add edi, ebp; call dword ptr [eax]; 
0x556c6156:  add byte ptr [eax], al; aam 0x59; in al, dx; call eax; 
0x556c6f2e:  add byte ptr [eax], al; aam 0xee; out dx, eax; jmp dword ptr [eax]; 
0x556d4f5a:  add byte ptr [eax], al; aam 9; out dx, eax; call esp; 
0x556f712a:  add byte ptr [eax], al; adc al, 0; add byte ptr [eax], al; xor byte ptr [edi + 0x3ebc0002], bl; clc; jmp dword ptr [eax]; 
0x556c7056:  add byte ptr [eax], al; adc al, 0xfe; out dx, eax; dec dword ptr [esp + esi*8]; add byte ptr [esi + edi*8 - 0x11], al; jmp dword ptr [eax - 0xc]; 
0x5556754e:  add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; mov eax, dword ptr [0xd0000010]; ret 7; 
0x55567f7e:  add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; ret 0x11; 
0x5556743e:  add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; ret 0x38; 
0x5556222e:  add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; ret 0x52; 
0x556d7b7e:  add byte ptr [eax], al; adc byte ptr [eax], al; add byte ptr [eax], al; test byte ptr [ecx + 0x60480000], ch; out dx, eax; call dword ptr [eax]; 
0x556f297e:  add byte ptr [eax], al; adc byte ptr [edi + 2], 0; lodsb al, byte ptr [esi]; and esi, edi; jmp dword ptr [edi]; 
0x5556753e:  add byte ptr [eax], al; adc dword ptr [eax], eax; and byte ptr [eax], al; ret; 
0x5556684e:  add byte ptr [eax], al; adc dword ptr [eax], eax; int1; jmp dword ptr [ebp + 0x56]; 
0x5556637e:  add byte ptr [eax], al; adc dword ptr [eax], eax; int1; jmp dword ptr [edx]; 
0x556e297d:  add byte ptr [eax], al; add ah, ah; add byte ptr [ecx], al; add byte ptr [eax + ebx - 0xe], bl; call dword ptr [ecx]; 
0x556d6171:  add byte ptr [eax], al; add ah, al; mov al, byte ptr [eax]; add dh, cl; sti; call dword ptr [eax]; 
0x555f6127:  add byte ptr [eax], al; add al, 0x74; push es; lea eax, dword ptr [ebx - 0x595d4]; pop ebx; ret; 
0x555f5e67:  add byte ptr [eax], al; add al, 0x74; push es; lea eax, dword ptr [ebx - 0xfbd84]; pop ebx; ret; 
0x555f5d47:  add byte ptr [eax], al; add al, 0x74; push es; lea eax, dword ptr [ebx - 0xfcaa4]; pop ebx; ret; 
0x556c643e:  add byte ptr [eax], al; add al, 0x92; in al, dx; jmp eax; 
0x556c6466:  add byte ptr [eax], al; add al, 0x96; in al, dx; call eax; 
0x556c6b56:  add byte ptr [eax], al; add al, 0xd2; out dx, al; jmp esp; 
0x556c6b7e:  add byte ptr [eax], al; add al, 0xd9; out dx, al; call eax; 
0x5566306f:  add byte ptr [eax], al; add al, al; and edx, 0xff; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x55577254:  add byte ptr [eax], al; add al, ch; test dl, ah; pop es; add byte ptr [ecx - 0x47fbdbbc], cl; ret 0; 
0x55614768:  add byte ptr [eax], al; add bh, al; add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x39]; 
0x55605a2c:  add byte ptr [eax], al; add bl, ch; ret 0xb48d; 
0x55635060:  add byte ptr [eax], al; add bl, ch; ret; 
0x55617068:  add byte ptr [eax], al; add byte ptr [eax + 0x26748d], dl; ret; 
0x556f243d:  add byte ptr [eax], al; add byte ptr [eax + 0x3800024d], dl; and dh, bh; call dword ptr [eax]; 
0x556f324d:  add byte ptr [eax], al; add byte ptr [eax + 0x3f00025b], ah; xor al, 0xf7; call dword ptr [eax]; 
0x556d2965:  add byte ptr [eax], al; add byte ptr [eax + 0x57], ch; add byte ptr [eax], al; in al, 0x30; in eax, dx; call dword ptr [ebx + 1]; 
0x556f2d75:  add byte ptr [eax], al; add byte ptr [eax + 0x5b], bh; add al, byte ptr [eax]; movsb byte ptr es
0x556f3d3d:  add byte ptr [eax], al; add byte ptr [eax + 0x6b], al; add al, byte ptr [eax]; mov word ptr [edi - 9], es; jmp dword ptr [esi]; 
0x5561657f:  add byte ptr [eax], al; add byte ptr [eax + 0x6ca365], al; add byte ptr [eax], al; mov eax, 0xbe; int 0x80; 
0x556a527d:  add byte ptr [eax], al; add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x556d4f55:  add byte ptr [eax], al; add byte ptr [eax + 0x7d], bl; add byte ptr [eax], al; aam 9; out dx, eax; call esp; 
0x556e5522:  add byte ptr [eax], al; add byte ptr [eax + 0xe], dh; or byte ptr [edx + 9], al; add eax, dword ptr [edx]; push esi; ret; 
0x556a7136:  add byte ptr [eax], al; add byte ptr [eax + 0xf00067a], al; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x55687a65:  add byte ptr [eax], al; add byte ptr [eax + 2], bh; add esp, 0xc; ret; 
0x5560542d:  add byte ptr [eax], al; add byte ptr [eax + 4], bh; ret; 
0x5560543d:  add byte ptr [eax], al; add byte ptr [eax + 5], bh; ret; 
0x5560544d:  add byte ptr [eax], al; add byte ptr [eax + 6], bh; ret; 
0x5560545d:  add byte ptr [eax], al; add byte ptr [eax + 7], bh; ret; 
0x556a7153:  add byte ptr [eax], al; add byte ptr [eax + 8], bh; pop edi; ret; 
0x556f7129:  add byte ptr [eax], al; add byte ptr [eax + eax], dl; add byte ptr [eax], al; xor byte ptr [edi + 0x3ebc0002], bl; clc; jmp dword ptr [eax]; 
0x556e4a39:  add byte ptr [eax], al; add byte ptr [eax + edi*2], bh; add dword ptr [eax], eax; sal dl, 0xf2; call ecx; 
0x556f303d:  add byte ptr [eax], al; add byte ptr [eax - 0x43fffda7], dl; xor bh, dh; call dword ptr [eax]; 
0x556f297d:  add byte ptr [eax], al; add byte ptr [eax - 0x53fffda9], al; and esi, edi; jmp dword ptr [edi]; 
0x556f6a3d:  add byte ptr [eax], al; add byte ptr [eax - 0x68], al; add al, byte ptr [eax]; mov word ptr [eax + edi*8], gs; call dword ptr [eax]; 
0x556e6a65:  add byte ptr [eax], al; add byte ptr [eax - 0x68], ch; add dword ptr [eax], eax; hlt; sbb esp, esi; call eax; 
0x556e614d:  add byte ptr [eax], al; add byte ptr [eax - 0x71], dl; add dword ptr [eax], eax; lodsb al, byte ptr [esi]; sal bl, 1; call dword ptr [eax]; 
0x556e5a3d:  add byte ptr [eax], al; add byte ptr [eax - 0x78], al; add dword ptr [eax], eax; pop esp; and dh, bl; jmp dword ptr [eax + 3]; 
0x55653060:  add byte ptr [eax], al; add byte ptr [eax - 0x7af000c1], al; push ss; add dword ptr [eax], eax; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x55654235:  add byte ptr [eax], al; add byte ptr [eax - 0x7bf0c506], al; xchg eax, esi; add dword ptr [eax], eax; add byte ptr [ebx - 0x12f7d], cl; jmp dword ptr [ebp - 0x75]; 
0x556f543d:  add byte ptr [eax], al; add byte ptr [eax - 0x7e], al; add al, byte ptr [eax]; lodsb al, byte ptr [esi]; ret; 
0x556f2c55:  add byte ptr [eax], al; add byte ptr [eax - 0x8fffdab], ch; sub esi, edi; call dword ptr [eax]; 
0x55682863:  add byte ptr [eax], al; add byte ptr [eax - 1], bh; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x55644837:  add byte ptr [eax], al; add byte ptr [eax - 1], bh; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x55643057:  add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; ret; 
0x5556684c:  add byte ptr [eax], al; add byte ptr [eax], al; adc dword ptr [eax], eax; int1; jmp dword ptr [ebp + 0x56]; 
0x5556637c:  add byte ptr [eax], al; add byte ptr [eax], al; adc dword ptr [eax], eax; int1; jmp dword ptr [edx]; 
0x5556684a:  add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; adc dword ptr [eax], eax; int1; jmp dword ptr [ebp + 0x56]; 
0x5556637a:  add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; adc dword ptr [eax], eax; int1; jmp dword ptr [edx]; 
0x55566849:  add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], dl; add cl, dh; jmp dword ptr [ebp + 0x56]; 
0x55566379:  add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], dl; add cl, dh; jmp dword ptr [edx]; 
0x555d2028:  add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x555d2029:  add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x55607a29:  add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x9389; 
0x5556684b:  add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], dl; add cl, dh; jmp dword ptr [ebp + 0x56]; 
0x5556637b:  add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], dl; add cl, dh; jmp dword ptr [edx]; 
0x55636435:  add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; ret; 
0x555f356c:  add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x555f3c7c:  add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edx; ret; 
0x555f357c:  add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, dword ptr [eax + edi + 0x10]; pop edi; ret; 
0x555f355c:  add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, dword ptr [eax + edi - 0x10]; pop edi; ret; 
0x555f382c:  add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x10]; ret; 
0x555f383c:  add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x20]; ret; 
0x555f384c:  add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x30]; ret; 
0x5568557e:  add byte ptr [eax], al; add byte ptr [eax], al; call 0x127000; sub esp, 8; add esp, 0x1c; ret; 
0x5561734e:  add byte ptr [eax], al; add byte ptr [eax], al; call 0xb92e0; add esp, 0x1c; ret; 
0x555d4f59:  add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [eax]; 
0x555d2d6c:  add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [ecx]; 
0x556e3759:  add byte ptr [eax], al; add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e5902], al; ret; 
0x556f6221:  add byte ptr [eax], al; add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e6f02], al; ret; 
0x556a643c:  add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [ecx + 2]; ret; 
0x556a644c:  add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [ecx + 3]; ret; 
0x556a645c:  add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [ecx + 5]; ret; 
0x556a646c:  add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [ecx + 6]; ret; 
0x556a647c:  add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [ecx + 7]; ret; 
0x556a542c:  add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 3]; pop edi; ret; 
0x556a543c:  add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 4]; pop edi; ret; 
0x556a544c:  add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 5]; pop edi; ret; 
0x556a545c:  add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 6]; pop edi; ret; 
0x556a546c:  add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 8]; pop edi; ret; 
0x556a547c:  add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 9]; pop edi; ret; 
0x556a595c:  add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 1]; pop edi; ret; 
0x556a594c:  add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 2]; pop edi; ret; 
0x556a593c:  add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 3]; pop edi; ret; 
0x556a7c4c:  add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 4]; pop edi; ret; 
0x556a592c:  add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 5]; pop edi; ret; 
0x556a7c3c:  add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 8]; pop edi; ret; 
0x556a6b2c:  add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edx + 0xe]; ret; 
0x556a6436:  add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 2]; ret; 
0x556a6446:  add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 3]; ret; 
0x556a6456:  add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 5]; ret; 
0x556a6466:  add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 6]; ret; 
0x556a6476:  add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 7]; ret; 
0x556a6b26:  add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 0xe]; ret; 
0x555e7b3c:  add byte ptr [eax], al; add byte ptr [eax], al; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, dword ptr [edx]; ret; 
0x555e375c:  add byte ptr [eax], al; add byte ptr [eax], al; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x555e7b4c:  add byte ptr [eax], al; add byte ptr [eax], al; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, dword ptr [edx + 1]; ret; 
0x555e376c:  add byte ptr [eax], al; add byte ptr [eax], al; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x5563642e:  add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; add esp, 8; ret; 
0x555e564c:  add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x555e566c:  add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x555e565c:  add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x555e563c:  add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; pop ebx; ret; 
0x555f6f64:  add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edi; call esi; 
0x555c5c4a:  add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], edx; call eax; 
0x555c5e3a:  add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x5561283c:  add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], edi; call esi; 
0x555c426a:  add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], edx; call eax; 
0x55687a64:  add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 2; add esp, 0xc; ret; 
0x5560542c:  add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 4; ret; 
0x5560543c:  add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 5; ret; 
0x5560544c:  add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 6; ret; 
0x5560545c:  add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 7; ret; 
0x55685944:  add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [edx]; add esp, 0xc; ret; 
0x5558502c:  add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x5568792c:  add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x55636a24:  add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x555f216c:  add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop ebx; pop edi; ret; 
0x555e562c:  add byte ptr [eax], al; add byte ptr [eax], al; mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x555e567c:  add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x555d202a:  add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x556a7b7c:  add byte ptr [eax], al; add byte ptr [eax], al; pop esi; xor eax, eax; pop edi; ret; 
0x55577b64:  add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x55687a74:  add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x5565523c:  add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x555f397c:  add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x556f7335:  add byte ptr [eax], al; add byte ptr [eax], bh; mov eax, dword ptr [0x44740002]; clc; jmp dword ptr [edi]; 
0x5569637d:  add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x55646145:  add byte ptr [eax], al; add byte ptr [ebp + 0x1c], dh; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x94; call dword ptr gs
0x55596a3d:  add byte ptr [eax], al; add byte ptr [ebp + 0x75168bd2], al; sbb dh, dh; ret 0x7501; 
0x55674272:  add byte ptr [eax], al; add byte ptr [ebp + 0x842494], cl; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 4]; 
0x55617045:  add byte ptr [eax], al; add byte ptr [ebp + 0xb68dc0], al; add byte ptr [eax], al; add byte ptr [ebp - 0x14], dh; mov eax, 0x14; call dword ptr gs
0x55605137:  add byte ptr [eax], al; add byte ptr [ebp + 0xbf], cl; add byte ptr [ebx + 0x4f391c4e], cl; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x55684f47:  add byte ptr [eax], al; add byte ptr [ebp + 0xbf], cl; add byte ptr [ebx - 0x18], dl; sbb eax, 0x8100002e; ret; 
0x555e5647:  add byte ptr [eax], al; add byte ptr [ebp + 0xbf], cl; add byte ptr [ecx + 0x4518811], cl; pop ebx; ret; 
0x556a5067:  add byte ptr [eax], al; add byte ptr [ebp + 0xbf], cl; add dh, dh; ret 0x7510; 
0x556e7f51:  add byte ptr [eax], al; add byte ptr [ebp + ebp*4 + 1], dl; add byte ptr [eax - 0x1a], ch; hlt; jmp dword ptr [esi]; 
0x556f6779:  add byte ptr [eax], al; add byte ptr [ebp + edx*4 + 2], bh; add byte ptr [eax + 0x19], ah; clc; call edx; 
0x5561704d:  add byte ptr [eax], al; add byte ptr [ebp - 0x14], dh; mov eax, 0x14; call dword ptr gs
0x55655a43:  add byte ptr [eax], al; add byte ptr [ebp - 0x3b7bf037], al; add byte ptr [eax], al; add byte ptr [ebx + 0x518b1445], cl; adc al, 0x39; ret 0xa7d; 
0x5566796d:  add byte ptr [eax], al; add byte ptr [ebp - 0x42f0c6d], cl; dec dword ptr [ecx - 0x72cbdbac]; xchg eax, ebx; call eax; 
0x555f6957:  add byte ptr [eax], al; add byte ptr [ebp - 0x736c7240], al; sbb al, byte ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x55615e22:  add byte ptr [eax], al; add byte ptr [ebp - 0x76b88a01], al; call 0x1c2fdab8; mov ebx, eax; mov eax, 0x11c; call dword ptr gs
0x55623a75:  add byte ptr [eax], al; add byte ptr [ebp - 0x76b88a40], al; call 0x1c30b70b; mov ebx, eax; mov eax, 0xb5; call dword ptr gs
0x55644d69:  add byte ptr [eax], al; add byte ptr [ebp - 0x78d48a40], al; fistp qword ptr [eax + 0x91]; call dword ptr gs
0x55644e29:  add byte ptr [eax], al; add byte ptr [ebp - 0x78d48a40], al; fistp qword ptr [eax + 0x92]; call dword ptr gs
0x555e5a4d:  add byte ptr [eax], al; add byte ptr [ebp - 0x7cc78a40], al; ret; 
0x55617a78:  add byte ptr [eax], al; add byte ptr [ebp - 0x7d], ah; cmp ah, byte ptr [esi]; mov edx, 0xffffffff; cmovne eax, edx; ret; 
0x555f6071:  add byte ptr [eax], al; add byte ptr [ebp - 0xe], dh; pop esi; pop edi; pop ebp; ret; 
0x556a605d:  add byte ptr [eax], al; add byte ptr [ebx + 0x1b720eea], al; lea eax, dword ptr [edi + 0xd]; pop edi; ret; 
0x556a707d:  add byte ptr [eax], al; add byte ptr [ebx + 0x1b720eef], al; lea eax, dword ptr [eax + 0xd]; pop edi; ret; 
0x55676f32:  add byte ptr [eax], al; add byte ptr [ebx + 0x1c42484], cl; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x556a604d:  add byte ptr [eax], al; add byte ptr [ebx + 0x2b720dea], al; lea eax, dword ptr [edi + 0xc]; pop edi; ret; 
0x556a706d:  add byte ptr [eax], al; add byte ptr [ebx + 0x2b720def], al; lea eax, dword ptr [eax + 0xc]; pop edi; ret; 
0x556a603d:  add byte ptr [eax], al; add byte ptr [ebx + 0x3b720bea], al; lea eax, dword ptr [edi + 0xa]; pop edi; ret; 
0x556a705d:  add byte ptr [eax], al; add byte ptr [ebx + 0x3b720bef], al; lea eax, dword ptr [eax + 0xa]; pop edi; ret; 
0x555c7525:  add byte ptr [eax], al; add byte ptr [ebx + 0x468b0c4e], cl; or byte ptr [ecx + 0x29cd29d5], cl; ret 0xe75; 
0x556a602d:  add byte ptr [eax], al; add byte ptr [ebx + 0x4b720aea], al; lea eax, dword ptr [edi + 9]; pop edi; ret; 
0x556a704d:  add byte ptr [eax], al; add byte ptr [ebx + 0x4b720aef], al; lea eax, dword ptr [eax + 9]; pop edi; ret; 
0x5560513d:  add byte ptr [eax], al; add byte ptr [ebx + 0x4f391c4e], cl; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x55655a4b:  add byte ptr [eax], al; add byte ptr [ebx + 0x518b1445], cl; adc al, 0x39; ret 0xa7d; 
0x556a703d:  add byte ptr [eax], al; add byte ptr [ebx + 0x5b7209ef], al; lea eax, dword ptr [eax + 8]; pop edi; ret; 
0x555b3c45:  add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x55617938:  add byte ptr [eax], al; add byte ptr [ebx + 0x65], bl; cmp dword ptr [edx], 0x26; mov edx, 0xffffffff; cmovne eax, edx; ret; 
0x55636a25:  add byte ptr [eax], al; add byte ptr [ebx + 0x66042444], cl; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x556a702d:  add byte ptr [eax], al; add byte ptr [ebx + 0x6b7207ef], al; lea eax, dword ptr [eax + 6]; pop edi; ret; 
0x555a6e69:  add byte ptr [eax], al; add byte ptr [ebx + 0x7c891c40], cl; and al, 8; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call eax; 
0x556a606d:  add byte ptr [eax], al; add byte ptr [ebx + 0xb720fea], al; lea eax, dword ptr [edi + 0xe]; pop edi; ret; 
0x556a672d:  add byte ptr [eax], al; add byte ptr [ebx + 0xb7c0fc2], al; lea eax, dword ptr [ecx + 0xf]; ret; 
0x55685945:  add byte ptr [eax], al; add byte ptr [ebx + 0xcc48302], cl; ret; 
0x555c6f4b:  add byte ptr [eax], al; add byte ptr [ebx + 0xe424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xe8]; add esp, 0xec; ret; 
0x555c6f52:  add byte ptr [eax], al; add byte ptr [ebx + 0xe824ac], cl; add byte ptr [eax], al; add esp, 0xec; ret; 
0x556f7d71:  add byte ptr [eax], al; add byte ptr [ebx + ebp*4 + 2], dh; add byte ptr [eax + 0x5e], cl; clc; jmp dword ptr [ebx]; 
0x556f7d39:  add byte ptr [eax], al; add byte ptr [ebx + ebp*4], bh; add al, byte ptr [eax]; and byte ptr [esi - 8], bl; jmp dword ptr [ebx]; 
0x556e6d29:  add byte ptr [eax], al; add byte ptr [ebx + ebx*4], ch; add dword ptr [eax], eax; push eax; and esp, esi; jmp dword ptr [edi]; 
0x556e2539:  add byte ptr [eax], al; add byte ptr [ebx + edx*2], bh; add dword ptr [eax], eax; cmp bh, 0xf1; call edi; 
0x555d7267:  add byte ptr [eax], al; add byte ptr [ebx - 0x16a4e73c], al; in eax, dx; ret 0xffff; 
0x55653d2d:  add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; cmp eax, 0x81000340; ret; 
0x5567795d:  add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; or eax, 0x81000104; ret; 
0x55686b4d:  add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000012; ret; 
0x55684f4d:  add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sbb eax, 0x8100002e; ret; 
0x55646a4d:  add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000413; ret; 
0x55613c4d:  add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000741; ret; 
0x555f7b4d:  add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000902; ret; 
0x55584c4d:  add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81001031; ret; 
0x55623c3d:  add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sub eax, 0x81000641; ret; 
0x55682a6d:  add byte ptr [eax], al; add byte ptr [ebx - 0x2f76e73c], al; pop ebx; ret; 
0x555c2d7b:  add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov eax, 0x5b000000; ret; 
0x556a667d:  add byte ptr [eax], al; add byte ptr [ebx - 0x73f0fe3e], al; mov bh, 0; add byte ptr [eax], al; lea eax, dword ptr [ecx + 1]; ret; 
0x5568792d:  add byte ptr [eax], al; add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; pop esp; ret; 
0x555e357d:  add byte ptr [eax], al; add byte ptr [ebx - 0x76fd76ff], cl; clc; pop edi; ret; 
0x556a7140:  add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x5561476e:  add byte ptr [eax], al; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x39]; 
0x55612f2d:  add byte ptr [eax], al; add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x7d]; 
0x5565446d:  add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp + 3]; 
0x5567767d:  add byte ptr [eax], al; add byte ptr [ebx], bh; lodsb al, byte ptr [esi]; ret; 
0x5561314a:  add byte ptr [eax], al; add byte ptr [ecx + 0x2be82404], cl; sbb eax, dword ptr [edi]; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp + 3]; 
0x555e566d:  add byte ptr [eax], al; add byte ptr [ecx + 0x3518911], cl; pop ebx; ret; 
0x555e564d:  add byte ptr [eax], al; add byte ptr [ecx + 0x4518811], cl; pop ebx; ret; 
0x5562604a:  add byte ptr [eax], al; add byte ptr [ecx + 0x4c892434], cl; and al, 8; call dword ptr [ebp - 0x78]; 
0x555e565d:  add byte ptr [eax], al; add byte ptr [ecx + 0x51896611], cl; add al, 0x5b; ret; 
0x55644352:  add byte ptr [eax], al; add byte ptr [ecx + 0x5409], bh; mov esi, eax; xchg edi, ebx; mov eax, 0x36; call dword ptr gs
0x55653c43:  add byte ptr [eax], al; add byte ptr [ecx + 0x72e82434], cl; ret; 
0x555c255d:  add byte ptr [eax], al; add byte ptr [ecx + 0x78e82434], cl; ret 0; 
0x556e375a:  add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e5902], al; ret; 
0x556f6222:  add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e6f02], al; ret; 
0x556e2d6e:  add byte ptr [eax], al; add byte ptr [ecx + 0xe], bl; or byte ptr [ebx + 0x40e4902], al; ret; 
0x55663076:  add byte ptr [eax], al; add byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x45; ret 0x90c3; 
0x55603d5a:  add byte ptr [eax], al; add byte ptr [ecx + 0xfc085fe], cl; xchg eax, ebp; ret 0xd589; 
0x556f2b51:  add byte ptr [eax], al; add byte ptr [ecx + ebx*2 + 2], dl; add byte ptr [eax], bh; sub bh, dh; call esi; 
0x55653c26:  add byte ptr [eax], al; add byte ptr [ecx - 0x7017dbcc], cl; ret; 
0x55636737:  add byte ptr [eax], al; add byte ptr [ecx - 0x7117dbfc], cl; inc esp; cli; inc dword ptr [ebp + 0x74c289c0]; ret; 
0x555c3264:  add byte ptr [eax], al; add byte ptr [ecx - 0x76f7db84], cl; insb byte ptr es
0x555c4e6b:  add byte ptr [eax], al; add byte ptr [ecx - 0x76f7db84], cl; insb byte ptr es
0x555c487c:  add byte ptr [eax], al; add byte ptr [ecx - 0x76f7db94], cl; adc al, 0x24; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x1c]; 
0x555c5c4b:  add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbb4], cl; adc al, 0x24; call eax; 
0x55673f2a:  add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbac], cl; add al, 0x24; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x555c4064:  add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbac], cl; xor al, 0x24; call dword ptr [eax + 0x1c]; 
0x555f6f65:  add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbbc], cl; cmp al, 0x24; call esi; 
0x5568617d:  add byte ptr [eax], al; add byte ptr [ecx - 0x7cf76ab4], cl; rol byte ptr [ecx], 0x83; ret 0x3b01; 
0x556d5f21:  add byte ptr [eax], al; add byte ptr [ecx*4 + 0x28480000], ah; out dx, eax; call edx; 
0x55607a2b:  add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x9389; 
0x55596342:  add byte ptr [eax], al; add byte ptr [ecx], ch; mov dword ptr [ebp - 0x5a71f001], 0x89fffffe; ret 0x18e9; 
0x55596463:  add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x848d; 
0x555d235d:  add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x933b; 
0x5556684d:  add byte ptr [eax], al; add byte ptr [ecx], dl; add cl, dh; jmp dword ptr [ebp + 0x56]; 
0x5556637d:  add byte ptr [eax], al; add byte ptr [ecx], dl; add cl, dh; jmp dword ptr [edx]; 
0x55656e5d:  add byte ptr [eax], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x77]; 
0x55623b3f:  add byte ptr [eax], al; add byte ptr [edi + 0x5fd8f7fb], al; ret; 
0x55605222:  add byte ptr [eax], al; add byte ptr [edi + 2], bh; neg eax; ret; 
0x556d4621:  add byte ptr [eax], al; add byte ptr [edi + ebp*2], dh; add byte ptr [edi + 1], dl; out dx, eax; call dword ptr [eax]; 
0x556e6171:  add byte ptr [eax], al; add byte ptr [edi + ecx*4 + 1], dh; add al, bl; sal bl, 1; call dword ptr [eax]; 
0x556e6129:  add byte ptr [eax], al; add byte ptr [edi + ecx*4], ch; add dword ptr [eax], eax; adc al, 0xf3; call dword ptr [eax]; 
0x556f5131:  add byte ptr [eax], al; add byte ptr [edi + edi*2], dh; add al, byte ptr [eax]; dec eax; mov cl, 0xf7; jmp dword ptr [esi]; 
0x555a307d:  add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x8588; 
0x55682243:  add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x8965; 
0x555f356d:  add byte ptr [eax], al; add byte ptr [edi], cl; mov esp, 0x5ff801c0; ret; 
0x555b2e3d:  add byte ptr [eax], al; add byte ptr [edi], cl; xchg eax, esp; ret 0xd089; 
0x556f7c51:  add byte ptr [eax], al; add byte ptr [edx + ebp*4 + 2], dl; add al, ch; pop esp; clc; call dword ptr [eax]; 
0x556f2c29:  add byte ptr [eax], al; add byte ptr [edx + ebx*2], ch; add al, byte ptr [eax]; inc eax; sub edi, esi; call dword ptr [ecx]; 
0x556d6141:  add byte ptr [eax], al; add byte ptr [edx + ecx*4 + 0x26ee0000], dl; sti; call dword ptr [eax]; 
0x556e4429:  add byte ptr [eax], al; add byte ptr [edx + esi*2], ch; add dword ptr [eax], eax; shl dh, 0xf2; jmp dword ptr [edx]; 
0x5556513d:  add byte ptr [eax], al; add byte ptr [edx], ah; add byte ptr [eax + eax], cl; ret; 
0x5556754d:  add byte ptr [eax], al; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; mov eax, dword ptr [0xd0000010]; ret 7; 
0x55567f7d:  add byte ptr [eax], al; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0x11; 
0x5556743d:  add byte ptr [eax], al; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0x38; 
0x5556222d:  add byte ptr [eax], al; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0x52; 
0x555e567d:  add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; pop ebx; ret; 
0x555f347f:  add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x555f3758:  add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x555f377d:  add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ror dword ptr [edi], -0x43; rol byte ptr [ecx], 0xc8; ret; 
0x556e6539:  add byte ptr [eax], al; add byte ptr [esi + ecx*4 + 0x1a850001], cl; hlt; call dword ptr [eax]; 
0x555f6126:  add byte ptr [eax], al; add byte ptr [esp + esi*2], al; push es; lea eax, dword ptr [ebx - 0x595d4]; pop ebx; ret; 
0x555f5e66:  add byte ptr [eax], al; add byte ptr [esp + esi*2], al; push es; lea eax, dword ptr [ebx - 0xfbd84]; pop ebx; ret; 
0x555f5d46:  add byte ptr [eax], al; add byte ptr [esp + esi*2], al; push es; lea eax, dword ptr [ebx - 0xfcaa4]; pop ebx; ret; 
0x55656755:  add byte ptr [eax], al; add cl, ch; ret 0xfffd; 
0x556a485b:  add byte ptr [eax], al; add dh, dh; ret 0x7501; 
0x5562545d:  add byte ptr [eax], al; add dh, dh; ret 0xc740; 
0x556a6f3c:  add byte ptr [eax], al; add dh, dh; ret 0xf04; 
0x556a6e3d:  add byte ptr [eax], al; add dh, dh; ret 0xf10; 
0x556a6f66:  add byte ptr [eax], al; add dh, dh; ret 0xf20; 
0x556a6f6f:  add byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x55682b32:  add byte ptr [eax], al; add dword ptr [ebp + 0x75], esi; add esp, 8; pop ebx; ret; 
0x5566783c:  add byte ptr [eax], al; add dword ptr [ebx - 0x74e7db8c], ecx; pop esp; and al, 0x14; add esp, 0x1c; ret; 
0x556a6e33:  add byte ptr [eax], al; add eax, 3; pop edi; ret; 
0x556a6e59:  add byte ptr [eax], al; add eax, 7; pop edi; ret; 
0x55686c47:  add byte ptr [eax], al; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x55647a7a:  add byte ptr [eax], al; add esp, 0x18; mov al, 1; pop ebx; ret; 
0x55682a6e:  add byte ptr [eax], al; add esp, 0x18; mov eax, edx; pop ebx; ret; 
0x55585731:  add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x55673664:  add byte ptr [eax], al; add esp, 0x48c; ret; 
0x5563753f:  add byte ptr [eax], al; add esp, 0x54c; ret; 
0x55687a4f:  add byte ptr [eax], al; add esp, 0xc; ret; 
0x555c6f5a:  add byte ptr [eax], al; add esp, 0xec; ret; 
0x55636437:  add byte ptr [eax], al; add esp, 8; ret; 
0x556e2722:  add byte ptr [eax], al; and al, 0x55; add dword ptr [eax], eax; clc; adc dl, dh; jmp dword ptr [eax]; 
0x556d5f22:  add byte ptr [eax], al; and al, 0x8d; add byte ptr [eax], al; dec eax; sub bh, ch; call edx; 
0x556c6526:  add byte ptr [eax], al; and al, 0xaf; in al, dx; call dword ptr [eax]; 
0x5556383e:  add byte ptr [eax], al; and al, byte ptr [eax]; or al, 0; ret; 
0x55563836:  add byte ptr [eax], al; and byte ptr [esi + 6], dl; add byte ptr [eax + 0x22000001], bl; add byte ptr [eax + eax], cl; ret; 
0x555f356e:  add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x555f3c7e:  add byte ptr [eax], al; bsf eax, eax; add eax, edx; ret; 
0x555f357e:  add byte ptr [eax], al; bsf eax, eax; lea eax, dword ptr [eax + edi + 0x10]; pop edi; ret; 
0x555f355e:  add byte ptr [eax], al; bsf eax, eax; lea eax, dword ptr [eax + edi - 0x10]; pop edi; ret; 
0x555f3123:  add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x555f382e:  add byte ptr [eax], al; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x10]; ret; 
0x555f383e:  add byte ptr [eax], al; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x20]; ret; 
0x555f384e:  add byte ptr [eax], al; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x30]; ret; 
0x5557764e:  add byte ptr [eax], al; call 0x129d77; add ecx, 0x18999f; lea eax, dword ptr [ecx - 0x43dee]; ret; 
0x55646a34:  add byte ptr [eax], al; call 0x16ee0; mov dword ptr [ebx + 0xf2c], eax; add esp, 0x18; pop ebx; ret; 
0x55617350:  add byte ptr [eax], al; call 0xb92e0; add esp, 0x1c; ret; 
0x55644469:  add byte ptr [eax], al; call 0xe6d00; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x55682a51:  add byte ptr [eax], al; call dword ptr [eax + 4]; 
0x555d4f5b:  add byte ptr [eax], al; call dword ptr [eax]; 
0x555d2d6e:  add byte ptr [eax], al; call dword ptr [ecx]; 
0x55623b39:  add byte ptr [eax], al; call dword ptr gs
0x55577530:  add byte ptr [eax], al; call eax; 
0x555f6420:  add byte ptr [eax], al; cmove eax, ecx; ret; 
0x55646643:  add byte ptr [eax], al; cmovne esi, eax; mov eax, esi; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x556e253a:  add byte ptr [eax], al; cmp al, 0x53; add dword ptr [eax], eax; cmp bh, 0xf1; call edi; 
0x556e4a3a:  add byte ptr [eax], al; cmp al, 0x78; add dword ptr [eax], eax; sal dl, 0xf2; call ecx; 
0x556f7d3a:  add byte ptr [eax], al; cmp al, 0xab; add al, byte ptr [eax]; and byte ptr [esi - 8], bl; jmp dword ptr [ebx]; 
0x556f7336:  add byte ptr [eax], al; cmp byte ptr [ecx + 0x44740002], ah; clc; jmp dword ptr [edi]; 
0x55617a79:  add byte ptr [eax], al; cmp dword ptr gs
0x555b2e3a:  add byte ptr [eax], al; cmp eax, 0x4000; sete dl; mov eax, edx; add esp, 0x7c; ret; 
0x55663077:  add byte ptr [eax], al; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x556c6e26:  add byte ptr [eax], al; dec eax; fucomi st(7); jmp eax; 
0x556d5f26:  add byte ptr [eax], al; dec eax; sub bh, ch; call edx; 
0x556d3472:  add byte ptr [eax], al; fmul dword ptr [ebx]; add byte ptr [eax], al; mov byte ptr [ebx], al; out dx, al; call dword ptr [ecx]; 
0x556c5f5e:  add byte ptr [eax], al; imul bl; jmp eax; 
0x556e297e:  add byte ptr [eax], al; in al, 0; add dword ptr [eax], eax; pop esp; sbb dl, dh; call dword ptr [ecx]; 
0x556d296a:  add byte ptr [eax], al; in al, 0x30; in eax, dx; call dword ptr [ebx + 1]; 
0x556c6826:  add byte ptr [eax], al; in al, 0x6c; in eax, dx; jmp dword ptr [eax - 0x3f]; 
0x556c6b76:  add byte ptr [eax], al; in al, 0xd4; out dx, al; dec dword ptr [esi + edx*8 - 0x26fc0000]; out dx, al; call eax; 
0x556f6a3e:  add byte ptr [eax], al; inc eax; cwde; add al, byte ptr [eax]; mov word ptr [eax + edi*8], gs; call dword ptr [eax]; 
0x556f3d3e:  add byte ptr [eax], al; inc eax; imul eax, dword ptr [edx], 0; mov word ptr [edi - 9], es; jmp dword ptr [esi]; 
0x556e5a3e:  add byte ptr [eax], al; inc eax; mov byte ptr [ecx], al; add byte ptr [edx - 0xd], bl; jmp dword ptr [eax + 3]; 
0x556e375b:  add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e5902], al; ret; 
0x556f6223:  add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e6f02], al; ret; 
0x556c616e:  add byte ptr [eax], al; inc esp; pop edx; in al, dx; call dword ptr [eax]; 
0x556d692a:  add byte ptr [eax], al; inc esp; sub ch, bh; jmp dword ptr [ebx]; 
0x556d6176:  add byte ptr [eax], al; into; sti; call dword ptr [eax]; 
0x556e5523:  add byte ptr [eax], al; jo 0x187535; or byte ptr [edx + 9], al; add eax, dword ptr [edx]; push esi; ret; 
0x556a6f4f:  add byte ptr [eax], al; lea eax, dword ptr [eax + 3]; pop edi; ret; 
0x556a6429:  add byte ptr [eax], al; lea eax, dword ptr [ecx + 0xc]; ret; 
0x556a643e:  add byte ptr [eax], al; lea eax, dword ptr [ecx + 2]; ret; 
0x556a644e:  add byte ptr [eax], al; lea eax, dword ptr [ecx + 3]; ret; 
0x556a645e:  add byte ptr [eax], al; lea eax, dword ptr [ecx + 5]; ret; 
0x556a646e:  add byte ptr [eax], al; lea eax, dword ptr [ecx + 6]; ret; 
0x556a647e:  add byte ptr [eax], al; lea eax, dword ptr [ecx + 7]; ret; 
0x556a5354:  add byte ptr [eax], al; lea eax, dword ptr [edi + 0xb]; pop edi; ret; 
0x556a543e:  add byte ptr [eax], al; lea eax, dword ptr [edi + 4]; pop edi; ret; 
0x556a544e:  add byte ptr [eax], al; lea eax, dword ptr [edi + 5]; pop edi; ret; 
0x556a545e:  add byte ptr [eax], al; lea eax, dword ptr [edi + 6]; pop edi; ret; 
0x556a526b:  add byte ptr [eax], al; lea eax, dword ptr [edi + 7]; pop edi; ret; 
0x556a546e:  add byte ptr [eax], al; lea eax, dword ptr [edi + 8]; pop edi; ret; 
0x556a547e:  add byte ptr [eax], al; lea eax, dword ptr [edi + 9]; pop edi; ret; 
0x556a5831:  add byte ptr [eax], al; lea eax, dword ptr [edi - 0x10]; pop edi; ret; 
0x556a5856:  add byte ptr [eax], al; lea eax, dword ptr [edi - 0xc]; pop edi; ret; 
0x556a595e:  add byte ptr [eax], al; lea eax, dword ptr [edi - 1]; pop edi; ret; 
0x556a594e:  add byte ptr [eax], al; lea eax, dword ptr [edi - 2]; pop edi; ret; 
0x556a593e:  add byte ptr [eax], al; lea eax, dword ptr [edi - 3]; pop edi; ret; 
0x556a592e:  add byte ptr [eax], al; lea eax, dword ptr [edi - 5]; pop edi; ret; 
0x556a6a50:  add byte ptr [eax], al; lea eax, dword ptr [edx + 0xb]; ret; 
0x556a6b2e:  add byte ptr [eax], al; lea eax, dword ptr [edx + 0xe]; ret; 
0x556a6a79:  add byte ptr [eax], al; lea eax, dword ptr [edx + 0xf]; ret; 
0x556a6a26:  add byte ptr [eax], al; lea eax, dword ptr [edx + 7]; ret; 
0x556a6438:  add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 2]; ret; 
0x556a6448:  add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 3]; ret; 
0x556a6458:  add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 5]; ret; 
0x556a6468:  add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 6]; ret; 
0x556a6478:  add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 7]; ret; 
0x556a6b28:  add byte ptr [eax], al; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 0xe]; ret; 
0x555e5648:  add byte ptr [eax], al; lea edi, dword ptr [edi]; mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x55674273:  add byte ptr [eax], al; lea edx, dword ptr [esp + 0x84]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 4]; 
0x556a7260:  add byte ptr [eax], al; lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; xor eax, eax; ret; 
0x55672472:  add byte ptr [eax], al; lea esi, dword ptr [esi]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x556d3d5a:  add byte ptr [eax], al; lodsb al, byte ptr [esi]; add byte ptr [eax], al; ret; 
0x556c6876:  add byte ptr [eax], al; loope 0x1688ee; in eax, dx; call eax; 
0x556c6876:  add byte ptr [eax], al; loope 0x1688ee; in eax, dx; call eax; ret 0; 
0x556c6066:  add byte ptr [eax], al; mov ah, 0x16; in al, dx; call dword ptr [eax - 0x68]; 
0x556e4e62:  add byte ptr [eax], al; mov ah, 0x77; add dword ptr [eax], eax; pushal; push edx; call dword ptr [eax]; 
0x556e5062:  add byte ptr [eax], al; mov ah, 0x79; add dword ptr [eax], eax; pop ecx; add ebx, esi; call dword ptr [eax]; 
0x556d5462:  add byte ptr [eax], al; mov ah, 0x7d; add byte ptr [eax], al; ret 0xef13; 
0x556c6e6e:  add byte ptr [eax], al; mov ah, 0xde; out dx, eax; call dword ptr [eax - 0x17]; 
0x556d6a6e:  add byte ptr [eax], al; mov al, 0x2e; out dx, eax; call dword ptr [esi]; 
0x556f324e:  add byte ptr [eax], al; mov al, byte ptr [0x3f00025b]; xor al, 0xf7; call dword ptr [eax]; 
0x555e7b3e:  add byte ptr [eax], al; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, dword ptr [edx]; ret; 
0x555e375e:  add byte ptr [eax], al; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x555e7b4e:  add byte ptr [eax], al; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, dword ptr [edx + 1]; ret; 
0x555e364e:  add byte ptr [eax], al; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x555e376e:  add byte ptr [eax], al; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x556d3476:  add byte ptr [eax], al; mov byte ptr [ebx], al; out dx, al; call dword ptr [ecx]; 
0x556c6d26:  add byte ptr [eax], al; mov ch, 0xce; out dx, eax; call dword ptr [eax]; 
0x55636430:  add byte ptr [eax], al; mov dword ptr [eax + 4], 0; add esp, 8; ret; 
0x555a3048:  add byte ptr [eax], al; mov dword ptr [ebp - 0x4b8], edi; jmp edx; 
0x55582f44:  add byte ptr [eax], al; mov dword ptr [ebp - 0x7c], 1; mov ecx, edx; xchg ebx, ecx; mov eax, 6; call dword ptr gs
0x55577346:  add byte ptr [eax], al; mov dword ptr [ecx + 0x504], edx; pop ebx; ret; 
0x555e564e:  add byte ptr [eax], al; mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x555e566e:  add byte ptr [eax], al; mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x555e565e:  add byte ptr [eax], al; mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x555e563e:  add byte ptr [eax], al; mov dword ptr [ecx], edx; pop ebx; ret; 
0x55584772:  add byte ptr [eax], al; mov dword ptr [esp + 0x14], ecx; ror eax, 9; xor eax, dword ptr gs
0x555f6f66:  add byte ptr [eax], al; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edi; call esi; 
0x55673f2b:  add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x555c4065:  add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x555c487d:  add byte ptr [eax], al; mov dword ptr [esp + 8], ebp; mov dword ptr [esp], edx; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x1c]; 
0x555c5c4c:  add byte ptr [eax], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], edx; call eax; 
0x555c3265:  add byte ptr [eax], al; mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x555c4e6c:  add byte ptr [eax], al; mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; call dword ptr [eax + 0x2c]; 
0x55674253:  add byte ptr [eax], al; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x28]; mov dword ptr [esp], edi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x555c503f:  add byte ptr [eax], al; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x34]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x2c]; 
0x555c717b:  add byte ptr [eax], al; mov dword ptr [esp], eax; call 0x4c590; add esp, 0x18; pop ebx; ret; 
0x55676f3a:  add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x555c5e3c:  add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x5561283e:  add byte ptr [eax], al; mov dword ptr [esp], edi; call esi; 
0x5562604b:  add byte ptr [eax], al; mov dword ptr [esp], esi; mov dword ptr [esp + 8], ecx; call dword ptr [ebp - 0x78]; 
0x55613c3b:  add byte ptr [eax], al; mov dword ptr gs
0x55682864:  add byte ptr [eax], al; mov eax, 0xffffffff; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x55644838:  add byte ptr [eax], al; mov eax, 0xffffffff; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x55643058:  add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x55687a66:  add byte ptr [eax], al; mov eax, 2; add esp, 0xc; ret; 
0x5560542e:  add byte ptr [eax], al; mov eax, 4; ret; 
0x5560543e:  add byte ptr [eax], al; mov eax, 5; ret; 
0x5560544e:  add byte ptr [eax], al; mov eax, 6; ret; 
0x5560545e:  add byte ptr [eax], al; mov eax, 7; ret; 
0x556a7154:  add byte ptr [eax], al; mov eax, 8; pop edi; ret; 
0x556c6856:  add byte ptr [eax], al; mov eax, dword ptr [0x10ffed74]; ret 0; 
0x556c6e5e:  add byte ptr [eax], al; mov eax, dword ptr [0x30ffefde]; call 0xdec08e6a; out dx, eax; jmp dword ptr [eax - 0x18]; 
0x555a6e6a:  add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1c]; mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call eax; 
0x555c2a68:  add byte ptr [eax], al; mov eax, dword ptr [ebp + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x55674936:  add byte ptr [eax], al; mov eax, dword ptr [ebp + 0xb0]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x5560735d:  add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x3818]; add esp, 8; pop ebx; ret; 
0x55582024:  add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x3910]; mov dword ptr [esp], edx; ror eax, 9; xor eax, dword ptr gs
0x555e793e:  add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, dword ptr [edx + 3]; pop edi; ret; 
0x555e357e:  add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x55685946:  add byte ptr [eax], al; mov eax, dword ptr [edx]; add esp, 0xc; ret; 
0x55676f33:  add byte ptr [eax], al; mov eax, dword ptr [esp + 0x1c4]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x5558502e:  add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x5568792e:  add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x55636a26:  add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x55637278:  add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x55644064:  add byte ptr [eax], al; mov eax, dword ptr gs
0x556a6251:  add byte ptr [eax], al; mov eax, ecx; ret; 
0x555f216e:  add byte ptr [eax], al; mov eax, edi; pop ebx; pop edi; ret; 
0x555a7f5b:  add byte ptr [eax], al; mov eax, edx; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x55676a62:  add byte ptr [eax], al; mov eax, edx; pop esi; pop edi; ret; 
0x5567365d:  add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x488]; add esp, 0x48c; ret; 
0x55637538:  add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x548]; add esp, 0x54c; ret; 
0x555c6f53:  add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xe8]; add esp, 0xec; ret; 
0x555c3022:  add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x55684d2f:  add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x24]; mov dword ptr [esi + 0xc], eax; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x55675842:  add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x44]; mov esi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x55577933:  add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x55644353:  add byte ptr [eax], al; mov ecx, 0x5409; mov esi, eax; xchg edi, ebx; mov eax, 0x36; call dword ptr gs
0x555c2d7c:  add byte ptr [eax], al; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0xb8], edx; pop ebx; ret; 
0x55582f4b:  add byte ptr [eax], al; mov ecx, edx; xchg ebx, ecx; mov eax, 6; call dword ptr gs
0x55673656:  add byte ptr [eax], al; mov edi, dword ptr [esp + 0x484]; mov ebp, dword ptr [esp + 0x488]; add esp, 0x48c; ret; 
0x55637531:  add byte ptr [eax], al; mov edi, dword ptr [esp + 0x544]; mov ebp, dword ptr [esp + 0x548]; add esp, 0x54c; ret; 
0x555c6f4c:  add byte ptr [eax], al; mov edi, dword ptr [esp + 0xe4]; mov ebp, dword ptr [esp + 0xe8]; add esp, 0xec; ret; 
0x55636425:  add byte ptr [eax], al; mov edi, dword ptr [esp + 4]; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; add esp, 8; ret; 
0x55672523:  add byte ptr [eax], al; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x5563752a:  add byte ptr [eax], al; mov esi, dword ptr [esp + 0x540]; mov edi, dword ptr [esp + 0x544]; mov ebp, dword ptr [esp + 0x548]; add esp, 0x54c; ret; 
0x5567256d:  add byte ptr [eax], al; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x55644358:  add byte ptr [eax], al; mov esi, eax; xchg edi, ebx; mov eax, 0x36; call dword ptr gs
0x555e562e:  add byte ptr [eax], al; mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x556e653a:  add byte ptr [eax], al; mov word ptr [esi + 0x1a850001], cs; hlt; call dword ptr [eax]; 
0x555e567e:  add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x555e796e:  add byte ptr [eax], al; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, dword ptr [edx + 7]; pop edi; ret; 
0x55617069:  add byte ptr [eax], al; nop; lea esi, dword ptr [esi]; ret; 
0x556d4c6e:  add byte ptr [eax], al; nop; push es; out dx, eax; jmp dword ptr [esi]; 
0x556d723e:  add byte ptr [eax], al; nop; wait; add byte ptr [eax], al; ret; 
0x5566307c:  add byte ptr [eax], al; or byte ptr [edi], 0x45; ret 0x90c3; 
0x55605e7d:  add byte ptr [eax], al; or byte ptr [edi], 0x4e; ret 0xc483; 
0x556c7176:  add byte ptr [eax], al; or byte ptr [esi], 0xf0; call dword ptr [eax - 6]; 
0x556d6146:  add byte ptr [eax], al; out dx, al; sti; call dword ptr [eax]; 
0x555f377e:  add byte ptr [eax], al; pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x55617939:  add byte ptr [eax], al; pop ebx; cmp dword ptr gs
0x555b3c46:  add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x5557734c:  add byte ptr [eax], al; pop ebx; ret; 
0x556e2d6f:  add byte ptr [eax], al; pop ecx; push cs; or byte ptr [ebx + 0x40e4902], al; ret; 
0x555e5130:  add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x5560666b:  add byte ptr [eax], al; pop esi; add eax, edx; ret; 
0x556a7b7e:  add byte ptr [eax], al; pop esi; xor eax, eax; pop edi; ret; 
0x556d2f52:  add byte ptr [eax], al; pop esp; imul ebp; jmp dword ptr [ebx]; 
0x556c6976:  add byte ptr [eax], al; popfd; in eax, dx; jmp dword ptr [eax]; 
0x556d2342:  add byte ptr [eax], al; push -0x2b; in al, dx; call dword ptr [eax]; 
0x556e3266:  add byte ptr [eax], al; push 0x24000160; sub al, 0xf2; jmp dword ptr [ebp + 5]; 
0x556f7466:  add byte ptr [eax], al; push 0x440002a2; dec ebp; clc; jmp dword ptr [ebx]; 
0x556f6e66:  add byte ptr [eax], al; push 0x5400029c; aaa; clc; jmp dword ptr [eax]; 
0x556e5466:  add byte ptr [eax], al; push 0x84000182; or ebx, esi; call edi; 
0x556d2966:  add byte ptr [eax], al; push 0xe4000057; xor ch, ch; call dword ptr [ebx + 1]; 
0x556e6a66:  add byte ptr [eax], al; push 0xf4000198; sbb esp, esi; call eax; 
0x556d4626:  add byte ptr [eax], al; push edi; add edi, ebp; call dword ptr [eax]; 
0x556c6e2e:  add byte ptr [eax], al; push esp; fucomi st(7); call eax; 
0x55565966:  add byte ptr [eax], al; pushal; clc; adc dword ptr [eax], eax; ret; 
0x55565136:  add byte ptr [eax], al; pushal; jp 0x7145; add byte ptr [0x22000000], dl; add byte ptr [eax + eax], cl; ret; 
0x556f7b5e:  add byte ptr [eax], al; pushal; test eax, 0x5bbc0002; clc; call dword ptr [ecx]; 
0x556d2642:  add byte ptr [eax], al; pushfd; fsubr st(4); jmp dword ptr [edi]; 
0x556f327e:  add byte ptr [eax], al; rcr byte ptr [ebx + 2], 1; add byte ptr [edi], bl; xor al, 0xf7; call dword ptr [eax]; 
0x556d5466:  add byte ptr [eax], al; ret 0xef13; 
0x556d5c2e:  add byte ptr [eax], al; ret 0xef21; 
0x55663070:  add byte ptr [eax], al; rol byte ptr [ecx + 0xffe2], 0; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x55663047:  add byte ptr [eax], al; ror ax, 8; ret; 
0x55577526:  add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs
0x556c6866:  add byte ptr [eax], al; sal dword ptr [ebp + ebp*8 - 1], 0x70; ret 0; 
0x556d5622:  add byte ptr [eax], al; sbb al, 0x15; out dx, eax; jmp dword ptr [eax]; 
0x556c5b7e:  add byte ptr [eax], al; sbb ebp, ebx; jmp dword ptr [eax]; 
0x556c6546:  add byte ptr [eax], al; scasd eax, dword ptr es
0x555b2e3f:  add byte ptr [eax], al; sete dl; mov eax, edx; add esp, 0x7c; ret; 
0x556c6e66:  add byte ptr [eax], al; stosb byte ptr es
0x556d3d56:  add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; lodsb al, byte ptr [esi]; add byte ptr [eax], al; ret; 
0x556d545e:  add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; mov ah, 0x7d; add byte ptr [eax], al; ret 0xef13; 
0x556f324a:  add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; mov al, byte ptr [0x3f00025b]; xor al, 0xf7; call dword ptr [eax]; 
0x556e6536:  add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; mov word ptr [esi + 0x1a850001], cs; hlt; call dword ptr [eax]; 
0x556f2c2a:  add byte ptr [eax], al; sub al, 0x5a; add al, byte ptr [eax]; inc eax; sub edi, esi; call dword ptr [ecx]; 
0x556e442a:  add byte ptr [eax], al; sub al, 0x72; add dword ptr [eax], eax; shl dh, 0xf2; jmp dword ptr [edx]; 
0x556e612a:  add byte ptr [eax], al; sub al, 0x8f; add dword ptr [eax], eax; adc al, 0xf3; call dword ptr [eax]; 
0x556e6d2a:  add byte ptr [eax], al; sub al, 0x9b; add dword ptr [eax], eax; push eax; and esp, esi; jmp dword ptr [edi]; 
0x556d6d7e:  add byte ptr [eax], al; sub byte ptr [eax], al; add byte ptr [eax], al; test byte ptr [ebx + 0x37a80000], bl; out dx, eax; call dword ptr [edx]; 
0x556e7d26:  add byte ptr [eax], al; sub byte ptr [ebx - 0x205bffff], ch; hlt; call dword ptr [edx]; 
0x556e6b26:  add byte ptr [eax], al; sub byte ptr [ecx + 0x1b040001], bl; hlt; jmp dword ptr [ebx]; 
0x556d6926:  add byte ptr [eax], al; sub byte ptr [edi + 0x2a440000], dl; out dx, eax; jmp dword ptr [ebx]; 
0x556c6c36:  add byte ptr [eax], al; test bh, bl; out dx, al; jmp dword ptr [eax]; 
0x556c657e:  add byte ptr [eax], al; test byte ptr [edx - 0x4cc30014], dh; add byte ptr [eax], al; in al, 0xb2; in al, dx; jmp dword ptr [eax - 0x4d]; 
0x55672e75:  add byte ptr [eax], al; test eax, eax; setne al; add esp, 0x1c; movzx eax, al; ret; 
0x556d6142:  add byte ptr [eax], al; xchg eax, esp; mov al, byte ptr [eax]; add dh, ch; sti; call dword ptr [eax]; 
0x55623b40:  add byte ptr [eax], al; xchg ebx, edi; neg eax; pop edi; ret; 
0x556e6a62:  add byte ptr [eax], al; xor al, 0; add byte ptr [eax], al; push 0xf4000198; sbb esp, esi; call eax; 
0x556c6356:  add byte ptr [eax], al; xor al, 0x73; in al, dx; call dword ptr [eax]; 
0x556f5132:  add byte ptr [eax], al; xor al, 0x7f; add al, byte ptr [eax]; dec eax; mov cl, 0xf7; jmp dword ptr [esi]; 
0x556d7a2e:  add byte ptr [eax], al; xor byte ptr [eax + 0x58cc0000], ch; out dx, eax; jmp dword ptr [ebx]; 
0x556f712e:  add byte ptr [eax], al; xor byte ptr [edi + 0x3ebc0002], bl; clc; jmp dword ptr [eax]; 
0x556e242e:  add byte ptr [eax], al; xor byte ptr [edx + 1], dl; add ah, bl; cmc; int1; call dword ptr [ebx]; 
0x555b366e:  add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x5565523e:  add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x556e7f4f:  add byte ptr [eax], bh; add byte ptr [eax], al; add byte ptr [ebp + ebp*4 + 1], dl; add byte ptr [eax - 0x1a], ch; hlt; jmp dword ptr [esi]; 
0x556c5b7c:  add byte ptr [eax], bh; add byte ptr [ebx + ebx - 0x15], ah; jmp dword ptr [eax]; 
0x556f2443:  add byte ptr [eax], bh; and dh, bh; call dword ptr [eax]; 
0x556f7337:  add byte ptr [eax], bh; mov eax, dword ptr [0x44740002]; clc; jmp dword ptr [edi]; 
0x5569637f:  add byte ptr [eax], bh; ret 0x840f; 
0x556f2b57:  add byte ptr [eax], bh; sub bh, dh; call esi; 
0x556f2473:  add byte ptr [eax], bl; and dh, bh; call dword ptr [eax]; 
0x556e4a37:  add byte ptr [eax], ch; add byte ptr [eax], al; add byte ptr [eax + edi*2], bh; add dword ptr [eax], eax; sal dl, 0xf2; call ecx; 
0x556f543b:  add byte ptr [eax], ch; add byte ptr [eax], al; add byte ptr [eax - 0x7e], al; add al, byte ptr [eax]; lodsb al, byte ptr [esi]; ret; 
0x556d6d7f:  add byte ptr [eax], ch; add byte ptr [eax], al; add byte ptr [ebx + ebx*4 + 0x37a80000], al; out dx, eax; call dword ptr [edx]; 
0x556e6b27:  add byte ptr [eax], ch; cdq; add dword ptr [eax], eax; add al, 0x1b; hlt; jmp dword ptr [ebx]; 
0x556e7d27:  add byte ptr [eax], ch; stosd dword ptr es
0x556d6927:  add byte ptr [eax], ch; xchg eax, edi; add byte ptr [eax], al; inc esp; sub ch, bh; jmp dword ptr [ebx]; 
0x556e242f:  add byte ptr [eax], dh; push edx; add dword ptr [eax], eax; fdivr st(5), st(0); int1; call dword ptr [ebx]; 
0x556d7a2f:  add byte ptr [eax], dh; test al, 0; add ah, cl; pop eax; out dx, eax; jmp dword ptr [ebx]; 
0x556d7b7f:  add byte ptr [eax], dl; add byte ptr [eax], al; add byte ptr [ecx + ebp*4 + 0x60480000], al; out dx, eax; call dword ptr [eax]; 
0x55584f3d:  add byte ptr [eax], dl; add byte ptr [eax], al; ret; 
0x556e6f4f:  add byte ptr [eax], dl; xor dh, ah; jmp dword ptr [esi]; 
0x55646147:  add byte ptr [ebp + 0x1c], dh; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x94; call dword ptr gs
0x55617b36:  add byte ptr [ebp + 0x1e], dh; lea esi, dword ptr [esi]; xor eax, eax; ret; 
0x556a7261:  add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; lea edi, dword ptr [edi]; xor eax, eax; ret; 
0x555f3828:  add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x10]; ret; 
0x556a5428:  add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 3]; pop edi; ret; 
0x556a5438:  add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 4]; pop edi; ret; 
0x556a5448:  add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 5]; pop edi; ret; 
0x556a5458:  add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 6]; pop edi; ret; 
0x556a5468:  add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 8]; pop edi; ret; 
0x556a5478:  add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi + 9]; pop edi; ret; 
0x556a5958:  add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 1]; pop edi; ret; 
0x556a5948:  add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 2]; pop edi; ret; 
0x556a5938:  add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 3]; pop edi; ret; 
0x556a7c48:  add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 4]; pop edi; ret; 
0x556a5928:  add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, dword ptr [edi - 5]; pop edi; ret; 
0x55605428:  add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 4; ret; 
0x55605438:  add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 5; ret; 
0x55605448:  add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 6; ret; 
0x55605458:  add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 7; ret; 
0x55585028:  add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x556c7e47:  add byte ptr [ebp + 0x31], ch; int1; call esp; 
0x555d2c52:  add byte ptr [ebp + 0x44c8b], cl; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x77]; 
0x5558257c:  add byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret 4; 
0x55596a3f:  add byte ptr [ebp + 0x75168bd2], al; sbb dh, dh; ret 0x7501; 
0x5561705d:  add byte ptr [ebp + 0x75c189d2], al; fisub dword ptr [ebp - 0x77]; or eax, 0x68; nop; lea esi, dword ptr [esi]; ret; 
0x55674274:  add byte ptr [ebp + 0x842494], cl; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 4]; 
0x55617047:  add byte ptr [ebp + 0xb68dc0], al; add byte ptr [eax], al; add byte ptr [ebp - 0x14], dh; mov eax, 0x14; call dword ptr gs
0x55605139:  add byte ptr [ebp + 0xbf], cl; add byte ptr [ebx + 0x4f391c4e], cl; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x55684f49:  add byte ptr [ebp + 0xbf], cl; add byte ptr [ebx - 0x18], dl; sbb eax, 0x8100002e; ret; 
0x555e5649:  add byte ptr [ebp + 0xbf], cl; add byte ptr [ecx + 0x4518811], cl; pop ebx; ret; 
0x556a5069:  add byte ptr [ebp + 0xbf], cl; add dh, dh; ret 0x7510; 
0x555d793d:  add byte ptr [ebp + 0xd850fc0], al; add al, byte ptr [eax]; add byte ptr [ebx - 0x1876d], cl; jmp dword ptr [ebp - 0x75]; 
0x555b3255:  add byte ptr [ebp + 0xe890fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x7d]; 
0x5557733d:  add byte ptr [ebp + 0xe], dh; rdtsc; mov dword ptr [ecx + 0x500], eax; mov dword ptr [ecx + 0x504], edx; pop ebx; ret; 
0x556e7f53:  add byte ptr [ebp + ebp*4 + 1], dl; add byte ptr [eax - 0x1a], ch; hlt; jmp dword ptr [esi]; 
0x556e6f4b:  add byte ptr [ebp + ebx*4 + 1], cl; add byte ptr [eax], dl; xor dh, ah; jmp dword ptr [esi]; 
0x556c6977:  add byte ptr [ebp + ebx*4 - 0x13], ah; jmp dword ptr [eax]; 
0x556c7527:  add byte ptr [ebp + ecx*2 - 0x10], ah; jmp dword ptr [eax]; 
0x556f746b:  add byte ptr [ebp + ecx*2 - 8], al; jmp dword ptr [ebx]; 
0x556d2a7b:  add byte ptr [ebp + edx*2 - 0x13], dh; call dword ptr [eax]; 
0x556f677b:  add byte ptr [ebp + edx*4 + 2], bh; add byte ptr [eax + 0x19], ah; clc; call edx; 
0x5561704f:  add byte ptr [ebp - 0x14], dh; mov eax, 0x14; call dword ptr gs
0x556a7a6f:  add byte ptr [ebp - 0x37af037], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x55655a45:  add byte ptr [ebp - 0x3b7bf037], al; add byte ptr [eax], al; add byte ptr [ebx + 0x518b1445], cl; adc al, 0x39; ret 0xa7d; 
0x55672e76:  add byte ptr [ebp - 0x3f6af040], al; add esp, 0x1c; movzx eax, al; ret; 
0x5566796f:  add byte ptr [ebp - 0x42f0c6d], cl; dec dword ptr [ecx - 0x72cbdbac]; xchg eax, ebx; call eax; 
0x55617965:  add byte ptr [ebp - 0x46], dh; mov eax, 0xfffa; pop ebx; ret; 
0x555d7e55:  add byte ptr [ebp - 0x5f7af040], al; add al, byte ptr [eax]; add byte ptr [ebx - 0x1876d], cl; jmp dword ptr [ebp - 0x75]; 
0x555d6d69:  add byte ptr [ebp - 0x6f7af040], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x1876d], cl; jmp dword ptr [ebp - 0x75]; 
0x555f6959:  add byte ptr [ebp - 0x736c7240], al; sbb al, byte ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x555d2d58:  add byte ptr [ebp - 0x74c88a40], al; mov esp, dword ptr [esi + edi*8 - 0x12ce0001]; mov dword ptr [esp + 0x18], edx; mov dword ptr [esp], 0; call dword ptr [ecx]; 
0x555b363e:  add byte ptr [ebp - 0x74ea8b13], al; xor al, 0x24; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x55644065:  add byte ptr [ebp - 0x75], ah; inc ebp; add byte ptr [ecx - 0x2078dbfc], cl; mov eax, 0x36; call dword ptr gs
0x55615e24:  add byte ptr [ebp - 0x76b88a01], al; call 0x1c2fdab8; mov ebx, eax; mov eax, 0x11c; call dword ptr gs
0x55623a77:  add byte ptr [ebp - 0x76b88a40], al; call 0x1c30b70b; mov ebx, eax; mov eax, 0xb5; call dword ptr gs
0x55617128:  add byte ptr [ebp - 0x76e18a40], al; rol dword ptr [edi + 0xd5b8cb], 1; add byte ptr [eax], al; call dword ptr gs
0x555d4e41:  add byte ptr [ebp - 0x76ed8b40], al; push esp; and al, 0x28; mov dword ptr [esp + 0x2c], ecx; call eax; 
0x55644d6b:  add byte ptr [ebp - 0x78d48a40], al; fistp qword ptr [eax + 0x91]; call dword ptr gs
0x55644e2b:  add byte ptr [ebp - 0x78d48a40], al; fistp qword ptr [eax + 0x92]; call dword ptr gs
0x55617557:  add byte ptr [ebp - 0x78dc8a40], al; fistp qword ptr [eax + 0xd2]; call dword ptr gs
0x555e5a4f:  add byte ptr [ebp - 0x7cc78a40], al; ret; 
0x55617a7a:  add byte ptr [ebp - 0x7d], ah; cmp ah, byte ptr [esi]; mov edx, 0xffffffff; cmovne eax, edx; ret; 
0x555e2058:  add byte ptr [ebp - 0xb], dh; mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x556e3043:  add byte ptr [ebp - 0xe], bh; jmp dword ptr [esi]; 
0x555f6073:  add byte ptr [ebp - 0xe], dh; pop esi; pop edi; pop ebp; ret; 
0x55623b3a:  add byte ptr [ebp - 1], ah; adc eax, 0x10; xchg ebx, edi; neg eax; pop edi; ret; 
0x55647a7b:  add byte ptr [ebx + 0x1b018c4], al; pop ebx; ret; 
0x556a605f:  add byte ptr [ebx + 0x1b720eea], al; lea eax, dword ptr [edi + 0xd]; pop edi; ret; 
0x556a707f:  add byte ptr [ebx + 0x1b720eef], al; lea eax, dword ptr [eax + 0xd]; pop edi; ret; 
0x55676f34:  add byte ptr [ebx + 0x1c42484], cl; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x5569375e:  add byte ptr [ebx + 0x1c740fe7], al; call 0x129d73; add ebx, 0x31437; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x555f4b34:  add byte ptr [ebx + 0x29202454], cl; ret 0xc083; 
0x556a604f:  add byte ptr [ebx + 0x2b720dea], al; lea eax, dword ptr [edi + 0xc]; pop edi; ret; 
0x556a706f:  add byte ptr [ebx + 0x2b720def], al; lea eax, dword ptr [eax + 0xc]; pop edi; ret; 
0x55582025:  add byte ptr [ebx + 0x391083], cl; add byte ptr [ecx - 0x373edbec], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x55603650:  add byte ptr [ebx + 0x391c2454], cl; ret 0xcf74; 
0x556a603f:  add byte ptr [ebx + 0x3b720bea], al; lea eax, dword ptr [edi + 0xa]; pop edi; ret; 
0x556a705f:  add byte ptr [ebx + 0x3b720bef], al; lea eax, dword ptr [eax + 0xa]; pop edi; ret; 
0x555c4a7f:  add byte ptr [ebx + 0x462b0846], cl; add al, 0x89; ret 0xfac1; 
0x555c7527:  add byte ptr [ebx + 0x468b0c4e], cl; or byte ptr [ecx + 0x29cd29d5], cl; ret 0xe75; 
0x555f3a5d:  add byte ptr [ebx + 0x478d04c4], 0xff; pop esi; pop edi; pop ebp; ret; 
0x55673657:  add byte ptr [ebx + 0x48424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x488]; add esp, 0x48c; ret; 
0x5567365e:  add byte ptr [ebx + 0x48824ac], cl; add byte ptr [eax], al; add esp, 0x48c; ret; 
0x556a602f:  add byte ptr [ebx + 0x4b720aea], al; lea eax, dword ptr [edi + 9]; pop edi; ret; 
0x556a704f:  add byte ptr [ebx + 0x4b720aef], al; lea eax, dword ptr [eax + 9]; pop edi; ret; 
0x55643a5d:  add byte ptr [ebx + 0x4e8b2856], cl; sub al, 0x89; push esi; xor byte ptr [ebx + 0x4e894050], cl; xor al, 0xf6; ret 0x7420; 
0x5560513f:  add byte ptr [ebx + 0x4f391c4e], cl; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x55655a4d:  add byte ptr [ebx + 0x518b1445], cl; adc al, 0x39; ret 0xa7d; 
0x5563752b:  add byte ptr [ebx + 0x54024b4], cl; add byte ptr [eax], al; mov edi, dword ptr [esp + 0x544]; mov ebp, dword ptr [esp + 0x548]; add esp, 0x54c; ret; 
0x55637532:  add byte ptr [ebx + 0x54424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x548]; add esp, 0x54c; ret; 
0x55637539:  add byte ptr [ebx + 0x54824ac], cl; add byte ptr [eax], al; add esp, 0x54c; ret; 
0x556a703f:  add byte ptr [ebx + 0x5b7209ef], al; lea eax, dword ptr [eax + 8]; pop edi; ret; 
0x555d366f:  add byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x555b3c47:  add byte ptr [ebx + 0x5e], bl; ret; 
0x555f5b77:  add byte ptr [ebx + 0x5f5e40c4], al; pop ebp; ret; 
0x5561793a:  add byte ptr [ebx + 0x65], bl; cmp dword ptr [edx], 0x26; mov edx, 0xffffffff; cmovne eax, edx; ret; 
0x55636a27:  add byte ptr [ebx + 0x66042444], cl; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x556a702f:  add byte ptr [ebx + 0x6b7207ef], al; lea eax, dword ptr [eax + 6]; pop edi; ret; 
0x555a6e6b:  add byte ptr [ebx + 0x7c891c40], cl; and al, 8; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call eax; 
0x556a606f:  add byte ptr [ebx + 0xb720fea], al; lea eax, dword ptr [edi + 0xe]; pop edi; ret; 
0x556a672f:  add byte ptr [ebx + 0xb7c0fc2], al; lea eax, dword ptr [ecx + 0xf]; ret; 
0x55685947:  add byte ptr [ebx + 0xcc48302], cl; ret; 
0x555c6f4d:  add byte ptr [ebx + 0xe424bc], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xe8]; add esp, 0xec; ret; 
0x555c6f54:  add byte ptr [ebx + 0xe824ac], cl; add byte ptr [eax], al; add esp, 0xec; ret; 
0x556f7d73:  add byte ptr [ebx + ebp*4 + 2], dh; add byte ptr [eax + 0x5e], cl; clc; jmp dword ptr [ebx]; 
0x556f7d3b:  add byte ptr [ebx + ebp*4], bh; add al, byte ptr [eax]; and byte ptr [esi - 8], bl; jmp dword ptr [ebx]; 
0x556c5b7f:  add byte ptr [ebx + ebx - 0x15], ah; jmp dword ptr [eax]; 
0x556e6d2b:  add byte ptr [ebx + ebx*4], ch; add dword ptr [eax], eax; push eax; and esp, esi; jmp dword ptr [edi]; 
0x556c6e2f:  add byte ptr [ebx + ebx*8 - 0x11], dl; call eax; 
0x556e6b2b:  add byte ptr [ebx + ebx], al; hlt; jmp dword ptr [ebx]; 
0x556c7f47:  add byte ptr [ebx + edi], al; int1; push dword ptr [eax + 0x3400014f]; cmp esi, ecx; call eax; 
0x556c7f4f:  add byte ptr [ebx + edi], dh; int1; call eax; 
0x556f6643:  add byte ptr [ebx + edx - 8], bh; jmp dword ptr [edi]; 
0x556e253b:  add byte ptr [ebx + edx*2], bh; add dword ptr [eax], eax; cmp bh, 0xf1; call edi; 
0x556c6357:  add byte ptr [ebx + esi*2], dh; in al, dx; call dword ptr [eax]; 
0x5558522a:  add byte ptr [ebx - 0x12f7f], cl; jmp dword ptr [ebp + 3]; 
0x55583d7b:  add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x555d7269:  add byte ptr [ebx - 0x16a4e73c], al; in eax, dx; ret 0xffff; 
0x555d6d71:  add byte ptr [ebx - 0x1876d], cl; jmp dword ptr [ebp - 0x75]; 
0x555d5b32:  add byte ptr [ebx - 0x18775], cl; jmp dword ptr [ebp - 0x7d]; 
0x555d7638:  add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x75]; 
0x555d2c58:  add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x77]; 
0x55653d2f:  add byte ptr [ebx - 0x18], dl; cmp eax, 0x81000340; ret; 
0x5567795f:  add byte ptr [ebx - 0x18], dl; or eax, 0x81000104; ret; 
0x55686b4f:  add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000012; ret; 
0x55684f4f:  add byte ptr [ebx - 0x18], dl; sbb eax, 0x8100002e; ret; 
0x55646a4f:  add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000413; ret; 
0x55613c4f:  add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000741; ret; 
0x555f7b4f:  add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000902; ret; 
0x55593b4f:  add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000f42; ret; 
0x55593a4f:  add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000f43; ret; 
0x55584c4f:  add byte ptr [ebx - 0x18], dl; sbb eax, 0x81001031; ret; 
0x55623c3f:  add byte ptr [ebx - 0x18], dl; sub eax, 0x81000641; ret; 
0x556c6e7f:  add byte ptr [ebx - 0x1f], cl; out dx, eax; push eax; call 0xe16d8e8a; out dx, eax; jmp dword ptr [eax]; 
0x55682a6f:  add byte ptr [ebx - 0x2f76e73c], al; pop ebx; ret; 
0x5563572f:  add byte ptr [ebx - 0x336d], cl; dec dword ptr [ebx + 0x5b0a8902]; ret; 
0x555c2d7d:  add byte ptr [ebx - 0x6e76a7b8], cl; mov eax, 0x5b000000; ret; 
0x55665d6b:  add byte ptr [ebx - 0x71f0ff08], al; ret; 
0x556a667f:  add byte ptr [ebx - 0x73f0fe3e], al; mov bh, 0; add byte ptr [eax], al; lea eax, dword ptr [ecx + 1]; ret; 
0x5568797f:  add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; pop eax; ret; 
0x5568792f:  add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; pop esp; ret; 
0x55605b24:  add byte ptr [ebx - 0x76dfdba4], cl; ret 0x7c8b; 
0x555e537c:  add byte ptr [ebx - 0x76fd76ff], cl; clc; pop edi; pop ebx; ret; 
0x555e357f:  add byte ptr [ebx - 0x76fd76ff], cl; clc; pop edi; ret; 
0x555b3564:  add byte ptr [ebx - 0x78efdb84], cl; fistp qword ptr [eax + 0x12e]; call dword ptr gs
0x5564783c:  add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xc1]; call dword ptr gs
0x5561745c:  add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xd3]; call dword ptr gs
0x5564756f:  add byte ptr [ebx - 0x78f7dbac], cl; sar dword ptr [eax + 0x10f], cl; call dword ptr gs
0x55644a7f:  add byte ptr [ebx - 0x78f7dbac], cl; sar dword ptr [eax + 0x60], cl; call dword ptr gs
0x5564457f:  add byte ptr [ebx - 0x78f7dbac], cl; sar dword ptr [eax + 0xbf], cl; call dword ptr gs
0x556a7142:  add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x556a6f7a:  add byte ptr [ebx - 0x7df0f711], al; sbb al, 1; add byte ptr [eax], al; lea eax, dword ptr [eax + 7]; pop edi; ret; 
0x55643e4f:  add byte ptr [ebx - 0x8f7dbbc], cl; ret 0xeff0; 
0x5558526a:  add byte ptr [ebx - 0x8f7f], cl; jmp dword ptr [ebp + 3]; 
0x5558524a:  add byte ptr [ebx - 0xbf7f], cl; jmp dword ptr [ebp + 3]; 
0x555f657f:  add byte ptr [ebx - 0xc8afe17], al; pop esi; sub eax, 4; pop edi; pop ebp; ret; 
0x555d4e39:  add byte ptr [ebx - 0xd77d], cl; dec dword ptr [ebx + 0x74c08500]; adc cl, byte ptr [ecx - 0x76d7dbac]; dec esp; and al, 0x2c; call eax; 
0x55682237:  add byte ptr [ebx - 0xf74d], cl; inc dword ptr [ebx + 0x16ba19f8]; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x8965; 
0x55614770:  add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x39]; 
0x55613676:  add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x75]; 
0x55612f2f:  add byte ptr [ebx - 0xf76d], cl; jmp dword ptr [ebp - 0x7d]; 
0x55612e2c:  add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp + 3]; 
0x555b325d:  add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x7d]; 
0x55613154:  add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp + 3]; 
0x55577b5a:  add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp + 3]; 
0x55617b5f:  add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp - 0x7d]; 
0x5566333a:  add byte ptr [ebx - 0xff7f], cl; jmp dword ptr [ebp + 3]; 
0x5567767f:  add byte ptr [ebx], bh; lodsb al, byte ptr [esi]; ret; 
0x556c5358:  add byte ptr [ebx], bh; std; call dword ptr [eax + 0x3b]; 
0x5559202c:  add byte ptr [ebx], cl; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x5556754b:  add byte ptr [ebx], dh; add byte ptr [eax], al; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; mov eax, dword ptr [0xd0000010]; ret 7; 
0x55643324:  add byte ptr [ebx], dh; test byte ptr [eax + edi], ah; add al, 0; add byte ptr [ecx], cl; ret 0x850f; 
0x556c6857:  add byte ptr [ecx + 0x10ffed74], ah; ret 0; 
0x5556743b:  add byte ptr [ecx + 0x12000000], bl; add byte ptr [eax + eax], cl; ret 0x38; 
0x555b355e:  add byte ptr [ecx + 0x14da95c3], al; add byte ptr [ebx - 0x78efdb84], cl; fistp qword ptr [eax + 0x12e]; call dword ptr gs
0x555b3524:  add byte ptr [ecx + 0x14dacfc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x55585264:  add byte ptr [ecx + 0x17bd8fc1], al; add byte ptr [ebx - 0x8f7f], cl; jmp dword ptr [ebp + 3]; 
0x55585244:  add byte ptr [ecx + 0x17bdafc1], al; add byte ptr [ebx - 0xbf7f], cl; jmp dword ptr [ebp + 3]; 
0x55585224:  add byte ptr [ecx + 0x17bdcfc1], al; add byte ptr [ebx - 0x12f7f], cl; jmp dword ptr [ebp + 3]; 
0x55583d75:  add byte ptr [ecx + 0x17d27ec3], al; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x55577b54:  add byte ptr [ecx + 0x18949fc1], al; add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp + 3]; 
0x555d676f:  add byte ptr [ecx + 0x241c8bd0], cl; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x55637c57:  add byte ptr [ecx + 0x24748bf8], cl; and byte ptr [ebx - 0x74dbdb84], cl; insb byte ptr es
0x5561314c:  add byte ptr [ecx + 0x2be82404], cl; sbb eax, dword ptr [edi]; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp + 3]; 
0x556c6e5f:  add byte ptr [ecx + 0x30ffefde], ah; call 0xdec08e6a; out dx, eax; jmp dword ptr [eax - 0x18]; 
0x555e566f:  add byte ptr [ecx + 0x3518911], cl; pop ebx; ret; 
0x556c685f:  add byte ptr [ecx + 0x40ffed74], dh; ret 0; 
0x555e564f:  add byte ptr [ecx + 0x4518811], cl; pop ebx; ret; 
0x5562604c:  add byte ptr [ecx + 0x4c892434], cl; and al, 8; call dword ptr [ebp - 0x78]; 
0x555e565f:  add byte ptr [ecx + 0x51896611], cl; add al, 0x5b; ret; 
0x55644354:  add byte ptr [ecx + 0x5409], bh; mov esi, eax; xchg edi, ebx; mov eax, 0x36; call dword ptr gs
0x55653c45:  add byte ptr [ecx + 0x72e82434], cl; ret; 
0x55616577:  add byte ptr [ecx + 0x75d8f7d0], cl; add eax, 0xb8; and byte ptr [ebp - 0x5d], 0x6c; add byte ptr [eax], al; add byte ptr [eax + 0xbe], bh; int 0x80; 
0x555c255f:  add byte ptr [ecx + 0x78e82434], cl; ret 0; 
0x55663334:  add byte ptr [ecx + 0x9dcbfc1], al; add byte ptr [ebx - 0xff7f], cl; jmp dword ptr [ebp + 3]; 
0x5566312f:  add byte ptr [ecx + 0x9dec4c3], al; add byte ptr [ecx - 0x76d7db8c], cl; ret 0xeac1; 
0x55647836:  add byte ptr [ecx + 0xb97bdc3], al; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xc1]; call dword ptr gs
0x55647569:  add byte ptr [ecx + 0xb9a8ac3], al; add byte ptr [ebx - 0x78f7dbac], cl; sar dword ptr [eax + 0x10f], cl; call dword ptr gs
0x55646070:  add byte ptr [ecx + 0xbaf83c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x55646030:  add byte ptr [ecx + 0xbafc3c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x55645e34:  add byte ptr [ecx + 0xbb1bfc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x55645d64:  add byte ptr [ecx + 0xbb28fc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x55644a79:  add byte ptr [ecx + 0xbc57ac3], al; add byte ptr [ebx - 0x78f7dbac], cl; sar dword ptr [eax + 0x60], cl; call dword ptr gs
0x55644579:  add byte ptr [ecx + 0xbca7ac3], al; add byte ptr [ebx - 0x78f7dbac], cl; sar dword ptr [eax + 0xbf], cl; call dword ptr gs
0x55643e49:  add byte ptr [ecx + 0xbd1aac3], al; add byte ptr [ebx - 0x8f7dbbc], cl; ret 0xeff0; 
0x55642f38:  add byte ptr [ecx + 0xbe0bbc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x555f2970:  add byte ptr [ecx + 0xc6013c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x555f2953:  add byte ptr [ecx + 0xc6030c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x555f2926:  add byte ptr [ecx + 0xc605dc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x555f2871:  add byte ptr [ecx + 0xc6092c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x555f2847:  add byte ptr [ecx + 0xc60bcc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x555f282e:  add byte ptr [ecx + 0xc60d5c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x555f2748:  add byte ptr [ecx + 0xc61bbc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x55623550:  add byte ptr [ecx + 0xddaa3c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x55623456:  add byte ptr [ecx + 0xddb9dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x55617456:  add byte ptr [ecx + 0xe9b9dc3], al; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xd3]; call dword ptr gs
0x556e375c:  add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e5902], al; ret; 
0x556f6224:  add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e6f02], al; ret; 
0x556e2d70:  add byte ptr [ecx + 0xe], bl; or byte ptr [ebx + 0x40e4902], al; ret; 
0x5561623d:  add byte ptr [ecx + 0xeadb6c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x55615d51:  add byte ptr [ecx + 0xeb2a2c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x55663078:  add byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x45; ret 0x90c3; 
0x55603d5c:  add byte ptr [ecx + 0xfc085fe], cl; xchg eax, ebp; ret 0xd589; 
0x556f2b53:  add byte ptr [ecx + ebx*2 + 2], dl; add byte ptr [eax], bh; sub bh, dh; call esi; 
0x556c6b7f:  add byte ptr [ecx + ebx*8], al; out dx, al; call eax; 
0x55617d63:  add byte ptr [ecx + edx*4], bh; push cs; add byte ptr [ecx - 0x4c7bd428], cl; sub byte ptr [ebp - 0xf], 0xff; jmp eax; 
0x55637046:  add byte ptr [ecx - 0x17fbdbbc], cl; pushal; ret; 
0x555f5565:  add byte ptr [ecx - 0x1d17dbfc], cl; idiv al; jmp dword ptr [esi - 0x70]; 
0x556c684f:  add byte ptr [ecx - 0x1f00128c], dl; rol dword ptr [eax], 0; mov eax, dword ptr [0x10ffed74]; ret 0; 
0x55644069:  add byte ptr [ecx - 0x2078dbfc], cl; mov eax, 0x36; call dword ptr gs
0x5566672e:  add byte ptr [ecx - 0x2617dbfc], cl; jns 0x108735; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x55567553:  add byte ptr [ecx - 0x2ffffff0], ah; ret 7; 
0x5557725b:  add byte ptr [ecx - 0x47fbdbbc], cl; ret 0; 
0x55617d67:  add byte ptr [ecx - 0x4c7bd428], cl; sub byte ptr [ebp - 0xf], 0xff; jmp eax; 
0x556c6554:  add byte ptr [ecx - 0x507c0000], dh; in al, dx; jmp dword ptr [eax]; 
0x556c5968:  add byte ptr [ecx - 0x6e5f0004], dl; cld; call dword ptr [eax - 0x6e]; 
0x55653c28:  add byte ptr [ecx - 0x7017dbcc], cl; ret; 
0x55636739:  add byte ptr [ecx - 0x7117dbfc], cl; inc esp; cli; inc dword ptr [ebp + 0x74c289c0]; ret; 
0x5564616a:  add byte ptr [ecx - 0x7425763f], cl; pop esp; and al, 4; mov eax, 0x94; call dword ptr gs
0x55655a7f:  add byte ptr [ecx - 0x742a763f], cl; push ebp; or al, 0x8b; inc ecx; or al, 0x39; ret 0xf275; 
0x55625733:  add byte ptr [ecx - 0x74725bb3], cl; movsb byte ptr es
0x55674254:  add byte ptr [ecx - 0x74f7dbac], cl; push esp; and al, 0x28; mov dword ptr [esp], edi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x555c5040:  add byte ptr [ecx - 0x74f7dbac], cl; push esp; and al, 0x34; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x2c]; 
0x55663135:  add byte ptr [ecx - 0x76d7db8c], cl; ret 0xeac1; 
0x555c3266:  add byte ptr [ecx - 0x76f7db84], cl; insb byte ptr es
0x555c4e6d:  add byte ptr [ecx - 0x76f7db84], cl; insb byte ptr es
0x555c487e:  add byte ptr [ecx - 0x76f7db94], cl; adc al, 0x24; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x1c]; 
0x555c5c4d:  add byte ptr [ecx - 0x76f7dbb4], cl; adc al, 0x24; call eax; 
0x55673f2c:  add byte ptr [ecx - 0x76fbdbac], cl; add al, 0x24; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x555c4066:  add byte ptr [ecx - 0x76fbdbac], cl; xor al, 0x24; call dword ptr [eax + 0x1c]; 
0x555f6f67:  add byte ptr [ecx - 0x76fbdbbc], cl; cmp al, 0x24; call esi; 
0x555b252d:  add byte ptr [ecx - 0x7cad8836], cl; ret 0x830f; 
0x5568617f:  add byte ptr [ecx - 0x7cf76ab4], cl; rol byte ptr [ecx], 0x83; ret 0x3b01; 
0x556d5f23:  add byte ptr [ecx*4 + 0x28480000], ah; out dx, eax; call edx; 
0x5566783d:  add byte ptr [ecx], al; mov esi, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x55607a2d:  add byte ptr [ecx], al; ret 0x9389; 
0x555b4d49:  add byte ptr [ecx], al; test dword ptr [eax - 0x16000011], esi; ret 0xfffc; 
0x555d6075:  add byte ptr [ecx], bh; ret 0x850f; 
0x555c212c:  add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x4589; 
0x55677447:  add byte ptr [ecx], bh; xchg eax, esp; ret; 
0x55596344:  add byte ptr [ecx], ch; mov dword ptr [ebp - 0x5a71f001], 0x89fffffe; ret 0x18e9; 
0x55596465:  add byte ptr [ecx], ch; ret 0x848d; 
0x555d235f:  add byte ptr [ecx], ch; ret 0x933b; 
0x5567252f:  add byte ptr [ecx], ch; ret 0xea83; 
0x55567f7b:  add byte ptr [ecx], cl; add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; ret 0x11; 
0x555c6138:  add byte ptr [ecx], cl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x55607829:  add byte ptr [ecx], cl; ret 0x840f; 
0x55607f79:  add byte ptr [ecx], cl; ret 0x850f; 
0x55637f3d:  add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret 0x14; 
0x55677676:  add byte ptr [ecx], dh; ror byte ptr [ebp + 0x26b4], 0; add byte ptr [ebx], bh; lodsb al, byte ptr [esi]; ret; 
0x55687977:  add byte ptr [ecx], dh; shr bl, 0xf2; lea esi, dword ptr [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x55647637:  add byte ptr [ecx], dh; shr bl, cl; ret 0x748d; 
0x5556684f:  add byte ptr [ecx], dl; add cl, dh; jmp dword ptr [ebp + 0x56]; 
0x5556637f:  add byte ptr [ecx], dl; add cl, dh; jmp dword ptr [edx]; 
0x55656e5f:  add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x77]; 
0x555e5131:  add byte ptr [edi + 0x5b], bl; ret; 
0x55623b41:  add byte ptr [edi + 0x5fd8f7fb], al; ret; 
0x556d4627:  add byte ptr [edi + 1], dl; out dx, eax; call dword ptr [eax]; 
0x55605224:  add byte ptr [edi + 2], bh; neg eax; ret; 
0x556a3444:  add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebp; pop ebx; ret; 
0x556a7734:  add byte ptr [edi + 9], bh; neg eax; pop edi; pop esi; pop ebx; ret; 
0x556d4653:  add byte ptr [edi + ebp*2 + 0x1370000], ah; out dx, eax; call dword ptr [eax]; 
0x556d4623:  add byte ptr [edi + ebp*2], dh; add byte ptr [edi + 1], dl; out dx, eax; call dword ptr [eax]; 
0x556c6547:  add byte ptr [edi + ebp*4 - 0x14], ah; call eax; 
0x556c6527:  add byte ptr [edi + ebp*4], ah; in al, dx; call dword ptr [eax]; 
0x556e6173:  add byte ptr [edi + ecx*4 + 1], dh; add al, bl; sal bl, 1; call dword ptr [eax]; 
0x556e612b:  add byte ptr [edi + ecx*4], ch; add dword ptr [eax], eax; adc al, 0xf3; call dword ptr [eax]; 
0x556c775f:  add byte ptr [edi + edi*2 - 0x10], al; call dword ptr [eax + 0x20]; 
0x556f5133:  add byte ptr [edi + edi*2], dh; add al, byte ptr [eax]; dec eax; mov cl, 0xf7; jmp dword ptr [esi]; 
0x556f6e6b:  add byte ptr [edi + esi - 8], dl; jmp dword ptr [eax]; 
0x556d2f53:  add byte ptr [edi + esi*8 - 0x13], bl; jmp dword ptr [ebx]; 
0x556f3253:  add byte ptr [edi], bh; xor al, 0xf7; call dword ptr [eax]; 
0x555a307f:  add byte ptr [edi], cl; inc ebp; ret 0x8588; 
0x555f6961:  add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x55657769:  add byte ptr [edi], cl; inc esp; ret 0x568d; 
0x55682245:  add byte ptr [edi], cl; inc esp; ret 0x8965; 
0x55584f37:  add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x55584e27:  add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x200; ret; 
0x55584e57:  add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x55632367:  add byte ptr [edi], cl; mov dh, 0xd0; mov ecx, ebx; sub ecx, dword ptr [ebx + edx*4 - 0xcec7c]; jmp ecx; 
0x555f3124:  add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x555f356f:  add byte ptr [edi], cl; mov esp, 0x5ff801c0; ret; 
0x556a714f:  add byte ptr [edi], cl; test byte ptr [eax - 0x48000000], bh; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x555e6352:  add byte ptr [edi], cl; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x556a713c:  add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x556a233e:  add byte ptr [edi], cl; test dword ptr [ecx - 0x7cfffff2], ebp; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x55632867:  add byte ptr [edi], cl; xchg eax, esp; ret 0x3d; 
0x555b2e40:  add byte ptr [edi], cl; xchg eax, esp; ret 0xd089; 
0x556d4657:  add byte ptr [edi], dh; add edi, ebp; call dword ptr [eax]; 
0x55565963:  add byte ptr [edx + 0x6000004b], cl; clc; adc dword ptr [eax], eax; ret; 
0x556c6e67:  add byte ptr [edx + 0x60ffefde], ch; call 0xdeca8e72; out dx, eax; call dword ptr [eax - 0x17]; 
0x556d692b:  add byte ptr [edx + ebp - 0x11], al; jmp dword ptr [ebx]; 
0x556f7c53:  add byte ptr [edx + ebp*4 + 2], dl; add al, ch; pop esp; clc; call dword ptr [eax]; 
0x55683263:  add byte ptr [edx + ebx - 0x80], dh; jp 0x125291; add byte ptr [esp + edx - 0x7d], dh; ret 0x8328; 
0x556c616f:  add byte ptr [edx + ebx*2 - 0x14], al; call dword ptr [eax]; 
0x556f2c2b:  add byte ptr [edx + ebx*2], ch; add al, byte ptr [eax]; inc eax; sub edi, esi; call dword ptr [ecx]; 
0x556d6143:  add byte ptr [edx + ecx*4 + 0x26ee0000], dl; sti; call dword ptr [eax]; 
0x556f695b:  add byte ptr [edx + edx*4 + 0x32990002], ch; clc; call dword ptr [eax]; 
0x556c643f:  add byte ptr [edx + edx*4], al; in al, dx; jmp eax; 
0x556c6b57:  add byte ptr [edx + edx*8], al; out dx, al; jmp esp; 
0x556f335b:  add byte ptr [edx + esi - 9], al; call ebx; 
0x556e442b:  add byte ptr [edx + esi*2], ch; add dword ptr [eax], eax; shl dh, 0xf2; jmp dword ptr [edx]; 
0x556c657f:  add byte ptr [edx + esi*4 - 0x4cc30014], al; add byte ptr [eax], al; in al, 0xb2; in al, dx; jmp dword ptr [eax - 0x4d]; 
0x556d2343:  add byte ptr [edx - 0x2b], ch; in al, dx; call dword ptr [eax]; 
0x555e363f:  add byte ptr [edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x556e5a43:  add byte ptr [edx - 0xd], bl; jmp dword ptr [eax + 3]; 
0x556a3724:  add byte ptr [edx - 1], bh; cmovbe eax, edx; pop esi; pop ebp; pop ebx; ret; 
0x5556383f:  add byte ptr [edx], ah; add byte ptr [eax + eax], cl; ret; 
0x55584e2d:  add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x5556595f:  add byte ptr [edx], dl; add byte ptr [eax + eax], cl; mov cl, byte ptr [ebx]; add byte ptr [eax - 8], ah; adc dword ptr [eax], eax; ret; 
0x5556754f:  add byte ptr [edx], dl; add byte ptr [eax + eax], cl; mov eax, dword ptr [0xd0000010]; ret 7; 
0x55567f7f:  add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0x11; 
0x5556743f:  add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0x38; 
0x5556222f:  add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0x52; 
0x555e796f:  add byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, dword ptr [edx + 7]; pop edi; ret; 
0x555e567f:  add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; pop ebx; ret; 
0x555f2c5f:  add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2c7f:  add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2b3f:  add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2b5f:  add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2b7f:  add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f375a:  add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x555f377f:  add byte ptr [esi + 0xf], ah; xlatb; ror dword ptr [edi], -0x43; rol byte ptr [ecx], 0xc8; ret; 
0x556c6837:  add byte ptr [esi + ebp*2 - 0x13], dh; jmp dword ptr [eax - 0x3d]; 
0x556c716f:  add byte ptr [esi + ecx - 0x10], dh; jmp dword ptr [eax]; 
0x556e653b:  add byte ptr [esi + ecx*4 + 0x1a850001], cl; hlt; call dword ptr [eax]; 
0x556c6437:  add byte ptr [esi + ecx*4], dl; in al, dx; dec dword ptr [eax + 0x40000ab]; xchg eax, edx; in al, dx; jmp eax; 
0x556e606b:  add byte ptr [esi + edi*4 - 0xd], dh; jmp dword ptr [eax]; 
0x556c705f:  add byte ptr [esi + edi*8 - 0x11], al; jmp dword ptr [eax - 0xc]; 
0x556c7057:  add byte ptr [esi + edi*8], dl; out dx, eax; dec dword ptr [esp + esi*8]; add byte ptr [esi + edi*8 - 0x11], al; jmp dword ptr [eax - 0xc]; 
0x556c6467:  add byte ptr [esi + edx*4], al; in al, dx; call eax; 
0x556c5f5f:  add byte ptr [esi + esi*8 - 0x15], ah; jmp eax; 
0x556a7a77:  add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x55576964:  add byte ptr [esi - 1], dh; test dword ptr [edi + edi*8 - 1], eax; inc dword ptr [ebx - 0xb77b]; jmp dword ptr [eax]; 
0x556f406b:  add byte ptr [esi - 9], al; jmp dword ptr [eax]; 
0x556e687b:  add byte ptr [esi], bh; cld; hlt; call dword ptr [eax]; 
0x5556222b:  add byte ptr [esi], bl; add byte ptr [eax], al; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0x52; 
0x556f7323:  add byte ptr [esp + eax*2 - 8], ch; jmp dword ptr [eax]; 
0x556f733b:  add byte ptr [esp + eax*2 - 8], dh; jmp dword ptr [edi]; 
0x555d4f4d:  add byte ptr [esp + ecx*4 - 0x75], dh; and dword ptr [esi + edi*8 + 0x4c7ffff], 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [eax]; 
0x55683269:  add byte ptr [esp + edx - 0x7d], dh; ret 0x8328; 
0x556c636f:  add byte ptr [esp + esi*2 - 0x14], ah; jmp dword ptr [eax - 0x5a]; 
0x555f6128:  add byte ptr [esp + esi*2], al; push es; lea eax, dword ptr [ebx - 0x595d4]; pop ebx; ret; 
0x555f5e68:  add byte ptr [esp + esi*2], al; push es; lea eax, dword ptr [ebx - 0xfbd84]; pop ebx; ret; 
0x555f5d48:  add byte ptr [esp + esi*2], al; push es; lea eax, dword ptr [ebx - 0xfcaa4]; pop ebx; ret; 
0x555f356b:  add byte ptr es
0x555f3c7b:  add byte ptr es
0x555f383b:  add byte ptr es
0x555f384b:  add byte ptr es
0x555e566b:  add byte ptr es
0x555e563b:  add byte ptr es
0x55687a63:  add byte ptr es
0x5568792b:  add byte ptr es
0x555f216b:  add byte ptr es
0x55687a73:  add byte ptr es
0x5565523b:  add byte ptr es
0x555f397b:  add byte ptr es
0x556a5427:  add byte ptr es
0x556a5437:  add byte ptr es
0x556a5447:  add byte ptr es
0x556a5457:  add byte ptr es
0x556a5467:  add byte ptr es
0x556a5477:  add byte ptr es
0x556a5957:  add byte ptr es
0x556a5947:  add byte ptr es
0x556a5937:  add byte ptr es
0x556a7c47:  add byte ptr es
0x556a5927:  add byte ptr es
0x55585027:  add byte ptr es
0x556a7a6e:  add byte ptr es
0x55647526:  add byte ptr es
0x555f5b76:  add byte ptr es
0x5568797e:  add byte ptr es
0x55637c56:  add byte ptr es
0x55687976:  add byte ptr es
0x55647636:  add byte ptr es
0x55632366:  add byte ptr es
0x555e363e:  add byte ptr es
0x55577932:  add byte ptr ss
0x55577b3e:  add byte ptr ss
0x55675648:  add ch, al; and eax, 0x81000127; ret; 
0x556c4e25:  add ch, bh; jmp dword ptr [eax]; 
0x556f6c45:  add ch, byte ptr [eax + 0xa]; push cs; add al, 0xc6; ret; 
0x556f5d49:  add ch, byte ptr [ebp + 0x41140e0a]; ret; 
0x556e593d:  add ch, byte ptr [edx + ecx + 0xe]; add al, 0xc7; ret; 
0x556c4a34:  add cl, bh; cld; call edx; 
0x556c4a34:  add cl, bh; cld; call edx; stc; cld; jmp dword ptr [edx - 6]; 
0x555e3668:  add cl, byte ptr [eax - 0x776fdbe]; pop edi; ret; 
0x555e584a:  add cl, byte ptr [ebp - 0x7af0fdb6]; cmp eax, 0x5bffffff; ret; 
0x5569494f:  add cl, byte ptr [ebx - 0x74f7dbbc]; dec esp; and al, 0x10; add eax, ecx; pop ebx; ret; 
0x556d6d22:  add cl, byte ptr [ecx + 0xe]; add al, 0xc6; ret; 
0x555e6363:  add cl, byte ptr [ecx - 0x2f76f7be]; pop ebx; ret; 
0x555e384a:  add cl, byte ptr [ecx - 0x2f76f7be]; ret; 
0x555e382a:  add cl, byte ptr [ecx - 0x2f76f8be]; ret; 
0x5560645b:  add cl, byte ptr [ecx - 0x763c0cfe]; fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x4e; call dword ptr gs
0x555b4a5a:  add cl, byte ptr [ecx - 0x76f7dbac]; xor al, 0x24; call dword ptr [eax + 0x1c]; 
0x556e3664:  add cl, byte ptr [edi + 0xa]; ret; 
0x555e584d:  add cl, byte ptr [edi]; test dword ptr [0x5bffffff], edi; ret; 
0x556a582c:  add cl, byte ptr [edi]; test dword ptr [ebp], edi; add byte ptr [eax], al; lea eax, dword ptr [edi - 0x10]; pop edi; ret; 
0x555e546d:  add cl, byte ptr [edi]; test dword ptr [ebx + eax], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x556a6f38:  add cl, byte ptr [edi]; test dword ptr [ecx - 0xa000000], esi; ret 0xf04; 
0x556a663a:  add cl, byte ptr [edi]; test dword ptr [edi - 0x7d000000], ebx; ret 0xf08; 
0x556a587b:  add cl, byte ptr [edi]; test dword ptr [esi - 0x73000000], ecx; inc edi; clc; pop edi; ret; 
0x556a6e25:  add cl, byte ptr [edi]; test esp, eax; add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x556d7f44:  add cl, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x55656757:  add cl, ch; ret 0xfffd; 
0x55566851:  add cl, dh; jmp dword ptr [ebp + 0x56]; 
0x55566421:  add cl, dh; jmp edi; 
0x556a3446:  add dh, bh; fadd dword ptr [ebx + 0x5b5d04c4]; ret; 
0x5569607a:  add dh, bh; ret 2; 
0x555f3c6c:  add dh, byte ptr [eax]; ret; 
0x556f3e30:  add dh, byte ptr [ecx + 0xa]; ret; 
0x556d4720:  add dh, byte ptr [esi + 0xe]; adc al, 0x41; ret; 
0x556d6147:  add dh, ch; sti; call dword ptr [eax]; 
0x556d6177:  add dh, cl; sti; call dword ptr [eax]; 
0x556a485d:  add dh, dh; ret 0x7501; 
0x5562545f:  add dh, dh; ret 0xc740; 
0x556a5241:  add dh, dh; ret 0xf10; 
0x556a5252:  add dh, dh; ret 0xf20; 
0x556a5263:  add dh, dh; ret 0xf40; 
0x555c487a:  add dl, byte ptr [eax + eax + 0x6c890000]; and al, 8; mov dword ptr [esp], edx; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x1c]; 
0x556e7636:  add dl, byte ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x556f4a2e:  add dl, byte ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x55577b52:  add dl, byte ptr [ecx]; add byte ptr [ecx + 0x18949fc1], al; add byte ptr [ebx - 0xf77f], cl; jmp dword ptr [ebp + 3]; 
0x556f6060:  add dl, byte ptr [edi + 0x43140e0a]; ret; 
0x556f4e3d:  add dl, byte ptr [edx - 0x3938fbf2]; ret; 
0x556f6077:  add dl, byte ptr [esi + 0xa]; push cs; adc al, 0x43; ret; 
0x556d2163:  add dword ptr [0x2e00e46], 3; pop esp; add dword ptr [edx], ecx; push cs; adc al, 0x46; ret; 
0x556f3e2a:  add dword ptr [0x3870486], 2; jno 0x195e3d; ret; 
0x556e273a:  add dword ptr [0x3870486], 3; imul eax, dword ptr [ecx], 0xa; ret; 
0x556d5e6e:  add dword ptr [0x3870486], 3; int1; add dword ptr [edx], ecx; ret; 
0x556d2a4a:  add dword ptr [0x3870486], 3; pop ecx; add al, 0xa; ret; 
0x556e5f6a:  add dword ptr [0x3870486], 3; push ebx; add cl, byte ptr [edx]; ret; 
0x556f687a:  add dword ptr [0x3870486], 3; salc; add cl, byte ptr [edx]; ret; 
0x556e5c36:  add dword ptr [0x3870486], 3; xchg byte ptr [edx + ecx], al; ret; 
0x556e5f3d:  add dword ptr [0x5d030486], 6; ret; 
0x55617a33:  add dword ptr [0xb8907174], edx; and byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x555e3641:  add dword ptr [eax + 0x5ff88902], ecx; ret; 
0x55655233:  add dword ptr [eax + 0xf], eax; inc esp; ret 0x8dc3; 
0x55635159:  add dword ptr [eax + edx - 0x75], esi; xor dword ptr [eax - 1], 0xffffffff; jmp dword ptr [ebp - 0x75]; 
0x5558524c:  add dword ptr [eax - 1], 0x365ffff; add eax, 0; ret; 
0x5566333c:  add dword ptr [eax], 0x65ffffff; add eax, dword ptr [0]; ret; 
0x55577343:  add dword ptr [eax], 0x89000005; xchg eax, ecx; add al, 5; add byte ptr [eax], al; pop ebx; ret; 
0x556e612e:  add dword ptr [eax], eax; adc al, 0xf3; call dword ptr [eax]; 
0x556e6f4e:  add dword ptr [eax], eax; adc byte ptr [edx], dh; hlt; jmp dword ptr [esi]; 
0x556e6b2a:  add dword ptr [eax], eax; add al, 0x1b; hlt; jmp dword ptr [ebx]; 
0x556c7f46:  add dword ptr [eax], eax; add al, 0x3b; int1; push dword ptr [eax + 0x3400014f]; cmp esi, ecx; call eax; 
0x55683d3b:  add dword ptr [eax], eax; add bh, al; add al, byte ptr [eax]; add byte ptr [eax], al; add bl, ch; ret; 
0x555a3046:  add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [ebp - 0x4b8], edi; jmp edx; 
0x55582f49:  add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, edx; xchg ebx, ecx; mov eax, 6; call dword ptr gs
0x55617c59:  add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, esi; xchg ebx, ecx; mov eax, 6; call dword ptr gs
0x55672521:  add dword ptr [eax], eax; add byte ptr [eax], al; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x5567256b:  add dword ptr [eax], eax; add byte ptr [eax], al; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x55646c53:  add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x555b366c:  add dword ptr [eax], eax; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x555d6d6f:  add dword ptr [eax], eax; add byte ptr [ebx - 0x1876d], cl; jmp dword ptr [ebp - 0x75]; 
0x555d7636:  add dword ptr [eax], eax; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x75]; 
0x555b325b:  add dword ptr [eax], eax; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x7d]; 
0x55637044:  add dword ptr [eax], eax; add byte ptr [ecx - 0x17fbdbbc], cl; pushal; ret; 
0x555f5563:  add dword ptr [eax], eax; add byte ptr [ecx - 0x1d17dbfc], cl; idiv al; jmp dword ptr [esi - 0x70]; 
0x555b4d47:  add dword ptr [eax], eax; add byte ptr [ecx], al; test dword ptr [eax - 0x16000011], esi; ret 0xfffc; 
0x555d6073:  add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x850f; 
0x555f3122:  add dword ptr [eax], eax; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x55632865:  add dword ptr [eax], eax; add byte ptr [edi], cl; xchg eax, esp; ret 0x3d; 
0x5556383d:  add dword ptr [eax], eax; add byte ptr [edx], ah; add byte ptr [eax + eax], cl; ret; 
0x556a7a75:  add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x556a523f:  add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x556a5250:  add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x556a5261:  add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x556e2726:  add dword ptr [eax], eax; clc; adc dl, dh; jmp dword ptr [eax]; 
0x556e687a:  add dword ptr [eax], eax; cld; hlt; call dword ptr [eax]; 
0x556e253e:  add dword ptr [eax], eax; cmp bh, 0xf1; call edi; 
0x556e2432:  add dword ptr [eax], eax; fdivr st(5), st(0); int1; call dword ptr [ebx]; 
0x556e6a6a:  add dword ptr [eax], eax; hlt; sbb esp, esi; call eax; 
0x556c7c66:  add dword ptr [eax], eax; hlt; sub al, 0xf1; jmp esp; 
0x556c7e46:  add dword ptr [eax], eax; insd dword ptr es
0x556e6152:  add dword ptr [eax], eax; lodsb al, byte ptr [esi]; sal bl, 1; call dword ptr [eax]; 
0x55646169:  add dword ptr [eax], eax; mov ecx, eax; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x94; call dword ptr gs
0x556e7d2a:  add dword ptr [eax], eax; movsb byte ptr es
0x556c797e:  add dword ptr [eax], eax; movsb byte ptr es
0x556e5066:  add dword ptr [eax], eax; pop ecx; add ebx, esi; call dword ptr [eax]; 
0x556e5a42:  add dword ptr [eax], eax; pop esp; and dh, bl; jmp dword ptr [eax + 3]; 
0x556e6d2e:  add dword ptr [eax], eax; push eax; and esp, esi; jmp dword ptr [edi]; 
0x556c5b4e:  add dword ptr [eax], eax; push esp; sbb bl, ch; call dword ptr [eax]; 
0x556e4e66:  add dword ptr [eax], eax; pushal; push edx; call dword ptr [eax]; 
0x556e4a3e:  add dword ptr [eax], eax; sal dl, 0xf2; call ecx; 
0x556e442e:  add dword ptr [eax], eax; shl dh, 0xf2; jmp dword ptr [edx]; 
0x556e653e:  add dword ptr [eax], eax; test dword ptr [edx], ebx; hlt; call dword ptr [eax]; 
0x556c7f4e:  add dword ptr [eax], eax; xor al, 0x3b; int1; call eax; 
0x555f387c:  add dword ptr [eax], edx; ret; 
0x555c5f49:  add dword ptr [ebp + 0x14], esi; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x55682d2e:  add dword ptr [ebp + 0x36], esi; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x555c6d43:  add dword ptr [ebp + 0x54], esi; mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x55682b34:  add dword ptr [ebp + 0x75], esi; add esp, 8; pop ebx; ret; 
0x555f2f4b:  add dword ptr [ebp - 0x36], esi; nop; pop esi; pop edi; pop ebp; ret; 
0x555e5448:  add dword ptr [ebp - 0x7af0feb6], ecx; add eax, dword ptr ds
0x555f5039:  add dword ptr [ebx + 0x211c244c], ecx; ret 0xd789; 
0x55646443:  add dword ptr [ebx + 0x5e5b24c4], eax; ret; 
0x55656b33:  add dword ptr [ebx + 0x5e5b3cc4], eax; pop edi; pop ebp; ret; 
0x555e3823:  add dword ptr [ebx + 0xf660741], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x555e7c23:  add dword ptr [ebx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; ret; 
0x555e3843:  add dword ptr [ebx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x5566783e:  add dword ptr [ebx - 0x74e7db8c], ecx; pop esp; and al, 0x14; add esp, 0x1c; ret; 
0x55577d26:  add dword ptr [ebx - 0x76ebdb94], ecx; ret 0x4c89; 
0x55685c72:  add dword ptr [ebx - 0x7ac3dbbc], ecx; ret 0x1574; 
0x55685b53:  add dword ptr [ebx - 0x7ac7dbbc], ecx; ret 0x840f; 
0x55632429:  add dword ptr [ebx - 0x7ccfdbbc], ecx; ret 0x8940; 
0x556f5525:  add dword ptr [ebx], 0x4f; xchg byte ptr [edx], al; add bl, byte ptr [eax + 0xe]; add al, 0xc6; ret; 
0x556f5035:  add dword ptr [ebx], 0x4f; xchg byte ptr [edx], al; jno 0x19704a; add al, 0xc6; ret; 
0x556f3b41:  add dword ptr [ebx], 0x51; xchg byte ptr [edx], al; jo 0x195b56; add al, 0xc6; ret; 
0x556d7c6d:  add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; jp 0x179c7e; push cs; add al, 0xc6; ret; 
0x556d2279:  add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; or cl, byte ptr gs
0x556f6169:  add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; pop ebp; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x556d2221:  add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; pop esp; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x556f6c41:  add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; push 0xc6040e0a; ret; 
0x556f4a29:  add dword ptr [ebx], 0x54; xchg byte ptr [edx], al; add dl, byte ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x556e5939:  add dword ptr [ebx], 0x57; xchg dword ptr [edx], eax; insb byte ptr es
0x556e382d:  add dword ptr [ebx], 0x58; xchg byte ptr [edx], al; pop edx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x556d6b6c:  add dword ptr [ebx], 0x60; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x556d7d38:  add dword ptr [ebx], 0x79; push cs; add al, 0xc6; ret; 
0x556d6d20:  add dword ptr [ebx], 2; dec ecx; push cs; add al, 0xc6; ret; 
0x555e7a71:  add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; lea eax, dword ptr [edx + 6]; pop edi; ret; 
0x555e7941:  add dword ptr [ecx + 0x3428d02], ecx; pop edi; ret; 
0x555e7b71:  add dword ptr [ecx + 0x3428d02], ecx; ret; 
0x555e6431:  add dword ptr [ecx + 0x5bd08902], ecx; ret; 
0x555e537e:  add dword ptr [ecx + 0x5ff88902], ecx; pop ebx; ret; 
0x555a7352:  add dword ptr [ecx - 0x760fd638], ecx; inc ebp; mov ah, 0xe9; ret; 
0x5560344b:  add dword ptr [ecx], edi; ret 0x1375; 
0x55596a62:  add dword ptr [ecx], edi; ret 0x689; 
0x55692620:  add dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x555a5a30:  add dword ptr [edi + edi*8 + 0x8bffff], -0x77; add al, 0x24; call 0x424d0; add esp, 0x18; pop ebx; ret; 
0x5569367f:  add dword ptr [edi], ecx; mov dh, 0; mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x55693557:  add dword ptr [edi], ecx; mov dh, 8; mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x555e544b:  add dword ptr [edi], ecx; test dword ptr [esi], edi; add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x55682a69:  add dword ptr [edi], ecx; test esp, edi; add byte ptr [eax], al; add byte ptr [ebx - 0x2f76e73c], al; pop ebx; ret; 
0x556d216b:  add dword ptr [edx], ecx; push cs; adc al, 0x46; ret; 
0x555e7c43:  add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x555e3863:  add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x555e7c63:  add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x555e7973:  add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, dword ptr [edx + 7]; pop edi; ret; 
0x556c797d:  add dword ptr cs
0x555b4d46:  add dword ptr fs
0x555d6072:  add dword ptr fs
0x55577b63:  add eax, 0; ret; 
0x555f286a:  add eax, 0x10; call 0x129d77; add ecx, 0xc6092; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x555f2b3b:  add eax, 0x130f66; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x5557752d:  add eax, 0x18; call eax; 
0x555e7c48:  add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x555e3868:  add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x5558243a:  add eax, 0x24548b00; sbb byte ptr [ebx - 0x7ae3dbb4], cl; sal byte ptr [ebp - 0x50], 0x83; ret 0x8901; 
0x55605f33:  add eax, 0x291ff8c1; ret 0x1b8; 
0x556d2164:  add eax, 0x2e00e46; add ebx, dword ptr [ecx + eax + 0xa]; push cs; adc al, 0x46; ret; 
0x555f2741:  add eax, 0x30; call 0x129d77; add ecx, 0xc61bb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x556c4228:  add eax, 0x35fffcd4; aam 0xfc; jmp dword ptr [ebp - 0x2c]; 
0x556d285b:  add eax, 0x3870486; add ah, al; ret; 
0x556e365f:  add eax, 0x3870486; add cl, byte ptr [edi + 0xa]; ret; 
0x556f3e2b:  add eax, 0x3870486; add dh, byte ptr [ecx + 0xa]; ret; 
0x556e554f:  add eax, 0x3870486; add ebx, esi; add dword ptr [edx], ecx; ret; 
0x556f687b:  add eax, 0x3870486; add edx, esi; add cl, byte ptr [edx]; ret; 
0x556f402f:  add eax, 0x3870486; add esi, dword ptr [ecx + eax + 0xa]; ret; 
0x556d5e6f:  add eax, 0x3870486; add esi, ecx; add dword ptr [edx], ecx; ret; 
0x556e5f38:  add eax, 0x42038743; add dword ptr [0x5d030486], 6; ret; 
0x556e2d6d:  add eax, 0x59000000; push cs; or byte ptr [ebx + 0x40e4902], al; ret; 
0x556e5f3e:  add eax, 0x5d030486; push es; ret; 
0x555f286e:  add eax, 0x81000955; rcl dword ptr [edx + 0x3000c60], 0xc; xchg eax, ecx; jmp ecx; 
0x55696f6a:  add eax, 0x81ffff0e; ret; 
0x556e2738:  add eax, 0x86058343; add al, 0x87; add eax, dword ptr [ebx]; imul eax, dword ptr [ecx], 0xa; ret; 
0x556d5e6c:  add eax, 0x86058343; add al, 0x87; add eax, dword ptr [ebx]; int1; add dword ptr [edx], ecx; ret; 
0x556e5f68:  add eax, 0x86058343; add al, 0x87; add eax, dword ptr [ebx]; push ebx; add cl, byte ptr [edx]; ret; 
0x556e5c34:  add eax, 0x86058343; add al, 0x87; add eax, dword ptr [ebx]; xchg byte ptr [edx + ecx], al; ret; 
0x556f3e28:  add eax, 0x86058343; add al, 0x87; add eax, dword ptr [edx]; jno 0x195e3d; ret; 
0x556d2a48:  add eax, 0x8605834c; add al, 0x87; add eax, dword ptr [ebx]; pop ecx; add al, 0xa; ret; 
0x556f6878:  add eax, 0x8605834c; add al, 0x87; add eax, dword ptr [ebx]; salc; add cl, byte ptr [edx]; ret; 
0x55692860:  add eax, 0x8b1c035f; jmp ebx; 
0x55577345:  add eax, 0x91890000; add al, 5; add byte ptr [eax], al; pop ebx; ret; 
0x556a725f:  add eax, 0xb48d0000; add byte ptr es
0x5561657d:  add eax, 0xb8; and byte ptr [ebp - 0x5d], 0x6c; add byte ptr [eax], al; add byte ptr [eax + 0xbe], bh; int 0x80; 
0x555f2b44:  add eax, 0xc24448b; pop ebx; pop esi; ret; 
0x555f6438:  add eax, 0xc; nop; lea esi, dword ptr [esi]; ret; 
0x556a7227:  add eax, 0xc; pop edi; ret; 
0x556a722c:  add eax, 0xd; pop edi; ret; 
0x5557733b:  add eax, 0xe750000; rdtsc; mov dword ptr [ecx + 0x500], eax; mov dword ptr [ecx + 0x504], edx; pop ebx; ret; 
0x556a7231:  add eax, 0xe; pop edi; ret; 
0x55637437:  add eax, 0xf0890000; pop ebx; pop esi; ret; 
0x556a6e35:  add eax, 3; pop edi; ret; 
0x556a6e5b:  add eax, 7; pop edi; ret; 
0x556a507f:  add eax, 7; ret; 
0x55674b22:  add eax, 8; mov dword ptr [esp], eax; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x555f6430:  add eax, 8; ret; 
0x55577b62:  add eax, dword ptr [0]; ret; 
0x55675840:  add eax, dword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x44]; mov esi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x55605421:  add eax, dword ptr [eax]; add byte ptr [eax], al; ret; 
0x556a312e:  add eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x55686c46:  add eax, dword ptr [eax]; add byte ptr [ebx - 0xf76eb3c], al; pop ebx; pop esi; ret; 
0x555e544f:  add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x556a6e29:  add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x556a6e46:  add eax, dword ptr [eax]; add dh, dh; ret 0xf20; 
0x556a6e4f:  add eax, dword ptr [eax]; add dh, dh; ret 0xf40; 
0x55676876:  add eax, dword ptr [ebx + 0x5689fce2]; add al, 0x83; ret 0x8901; 
0x555c2f27:  add eax, dword ptr [ebx + 0x748b200e]; and al, 0x14; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x556d297e:  add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0x300e4304], al; add ah, byte ptr [ecx + 0x43100e0a]; ret; 
0x556f6e52:  add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xc0e7e04], al; ret; 
0x556e7848:  add eax, dword ptr [ebx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x556e273f:  add eax, dword ptr [ebx]; imul eax, dword ptr [ecx], 0xa; ret; 
0x556d5e73:  add eax, dword ptr [ebx]; int1; add dword ptr [edx], ecx; ret; 
0x556d2a4f:  add eax, dword ptr [ebx]; pop ecx; add al, 0xa; ret; 
0x556e5f6f:  add eax, dword ptr [ebx]; push ebx; add cl, byte ptr [edx]; ret; 
0x556f687f:  add eax, dword ptr [ebx]; salc; add cl, byte ptr [edx]; ret; 
0x556e5c3b:  add eax, dword ptr [ebx]; xchg byte ptr [edx + ecx], al; ret; 
0x556f4469:  add eax, dword ptr [ecx + 1]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x55587a29:  add eax, dword ptr [ecx]; ret 0xd001; 
0x556e5f3b:  add eax, dword ptr [edx - 0x7d]; add eax, 0x5d030486; push es; ret; 
0x556d6d21:  add eax, dword ptr [edx]; dec ecx; push cs; add al, 0xc6; ret; 
0x556f3e2f:  add eax, dword ptr [edx]; jno 0x195e3d; ret; 
0x556e552a:  add eax, dword ptr [edx]; push esi; ret; 
0x555e544e:  add eax, dword ptr ds
0x55577b61:  add eax, dword ptr gs
0x555f294b:  add eax, ecx; add esi, ecx; call 0x129d77; add ecx, 0xc6030; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x55697138:  add eax, ecx; call 0x129d73; add ebx, 0x2dfa1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55696158:  add eax, ecx; call 0x129d73; add ebx, 0x2edc1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55692278:  add eax, ecx; call 0x129d73; add ebx, 0x32521; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55697f34:  add eax, ecx; sfence; call 0x129d73; add ebx, 0x2d1a2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55696f64:  add eax, ecx; sfence; call 0x129d73; add ebx, 0x2dfb2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x555f3276:  add eax, edi; sub eax, 0x10; pop edi; ret; 
0x555f3964:  add eax, edi; xor ch, ch; add eax, ecx; pop edi; ret; 
0x555f3237:  add eax, esi; pop ebx; pop esi; sub eax, 0x10; pop edi; ret; 
0x555c4a79:  add ebp, dword ptr [eax + 0x768dfffc]; add byte ptr [ebx + 0x462b0846], cl; add al, 0x89; ret 0xfac1; 
0x556c4e2d:  add ebp, edi; inc dword ptr [eax + 2]; std; call eax; 
0x556c4e2d:  add ebp, edi; inc dword ptr [eax + 2]; std; call eax; add bh, ch; jmp dword ptr [eax + 3]; 
0x556c4e29:  add ebp, edi; push dword ptr [eax + 0x40fffd01]; add bh, ch; call eax; 
0x555b355f:  add ebx, 0x14da95; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x12e; call dword ptr gs
0x55697f3e:  add ebx, 0x2d1a2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55697459:  add ebx, 0x2dc87; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x5569734f:  add ebx, 0x2dd91; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55697248:  add ebx, 0x2de98; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x5569713f:  add ebx, 0x2dfa1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55696f6e:  add ebx, 0x2dfb2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x5569714f:  add ebx, 0x2e091; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55696479:  add ebx, 0x2eaa7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x5569636f:  add ebx, 0x2ebb1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55696268:  add ebx, 0x2ecb8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x5569615f:  add ebx, 0x2edc1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x5569604c:  add ebx, 0x2ee14; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x5569616f:  add ebx, 0x2eeb1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55693a20:  add ebx, 0x310c0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55693769:  add ebx, 0x31437; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x5569227f:  add ebx, 0x32521; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55647837:  add ebx, 0xb97bd; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xc1; call dword ptr gs
0x5564756a:  add ebx, 0xb9a8a; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0x10f; call dword ptr gs
0x55644a7a:  add ebx, 0xbc57a; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0x60; call dword ptr gs
0x5564457a:  add ebx, 0xbca7a; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0xbf; call dword ptr gs
0x55617457:  add ebx, 0xe9b9d; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xd3; call dword ptr gs
0x556e382e:  add ebx, dword ptr [eax - 0x7a]; add bl, byte ptr [edx + 0xa]; push cs; add al, 0xc6; ret; 
0x556e5f41:  add ebx, dword ptr [ebp + 6]; ret; 
0x556d2169:  add ebx, dword ptr [ecx + eax + 0xa]; push cs; adc al, 0x46; ret; 
0x55692740:  add ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x556e3e2d:  add ebx, dword ptr [edx - 0xe]; jmp dword ptr [edx]; 
0x556e5554:  add ebx, esi; add dword ptr [edx], ecx; ret; 
0x555e3633:  add ebx, esi; movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x55585265:  add ecx, 0x17bd8f; mov eax, dword ptr [ecx - 0x90]; add eax, dword ptr gs
0x55585245:  add ecx, 0x17bdaf; mov eax, dword ptr [ecx - 0xc0]; add eax, dword ptr gs
0x55585225:  add ecx, 0x17bdcf; mov eax, dword ptr [ecx - 0x130]; add eax, dword ptr gs
0x55577b55:  add ecx, 0x18949f; mov eax, dword ptr [ecx - 0xf8]; add eax, dword ptr gs
0x55577655:  add ecx, 0x18999f; lea eax, dword ptr [ecx - 0x43dee]; ret; 
0x55577635:  add ecx, 0x1899bf; lea eax, dword ptr [ecx - 0x46116]; ret; 
0x55663335:  add ecx, 0x9dcbf; mov eax, dword ptr [ecx - 0x100]; add eax, dword ptr gs
0x555f2971:  add ecx, 0xc6013; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x555f2954:  add ecx, 0xc6030; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x555f2927:  add ecx, 0xc605d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x555f2872:  add ecx, 0xc6092; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x555f2848:  add ecx, 0xc60bc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x555f282f:  add ecx, 0xc60d5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x555f2749:  add ecx, 0xc61bb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x556e206d:  add ecx, dword ptr [ebp + 0x140e0a03]; inc ecx; ret; 
0x555f2a7c:  add ecx, dword ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x555f2a77:  add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555e7a76:  add ecx, dword ptr [ecx + 0x428d0342]; push es; pop edi; ret; 
0x556f5526:  add ecx, dword ptr [edi - 0x7a]; add al, byte ptr [edx]; pop eax; push cs; add al, 0xc6; ret; 
0x556f5036:  add ecx, dword ptr [edi - 0x7a]; add dh, byte ptr [ecx + 0xe]; add al, 0xc6; ret; 
0x556e7131:  add edi, dword ptr [eax]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x556d7d39:  add edi, dword ptr [ecx + 0xe]; add al, 0xc6; ret; 
0x556d4921:  add edi, ebp; call dword ptr [ebx]; 
0x55692b29:  add edi, ecx; add edx, edi; lea eax, dword ptr [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55692c49:  add edi, ecx; add edx, edi; lea eax, dword ptr [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55692d69:  add edi, ecx; add edx, edi; lea eax, dword ptr [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55692739:  add edi, ecx; add edx, edi; lea eax, dword ptr [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55692859:  add edi, ecx; add edx, edi; lea eax, dword ptr [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55692979:  add edi, ecx; add edx, edi; lea eax, dword ptr [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x555f2825:  add edx, 0x10; sub edx, ecx; call 0x129d77; add ecx, 0xc60d5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x55684f2c:  add edx, dword ptr [eax + 4]; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x555a303a:  add edx, dword ptr [ebp - 0x49c]; mov dword ptr [ebp - 0x510], 1; mov dword ptr [ebp - 0x4b8], edi; jmp edx; 
0x556d227a:  add edx, dword ptr [ebx - 0x7a]; add ah, byte ptr [ebp + 0xa]; push cs; add al, 0xc6; ret; 
0x556d7c6e:  add edx, dword ptr [ebx - 0x7a]; add bh, byte ptr [edx + 0xa]; push cs; add al, 0xc6; ret; 
0x556f616a:  add edx, dword ptr [ebx - 0x7a]; add bl, byte ptr [ebp + 0xa]; push cs; add al, 0xc6; ret; 
0x556d2222:  add edx, dword ptr [ebx - 0x7a]; add bl, byte ptr [edx + ecx + 0xe]; add al, 0xc6; ret; 
0x556f6c42:  add edx, dword ptr [ebx - 0x7a]; add ch, byte ptr [eax + 0xa]; push cs; add al, 0xc6; ret; 
0x556e4c6c:  add edx, dword ptr [ecx + eax + 0xa]; push cs; adc al, 0x43; ret; 
0x556f3b42:  add edx, dword ptr [ecx - 0x7a]; add dh, byte ptr [eax + 0xe]; add al, 0xc6; ret; 
0x556e593a:  add edx, dword ptr [edi - 0x79]; add ch, byte ptr [edx + ecx + 0xe]; add al, 0xc7; ret; 
0x556f4a2a:  add edx, dword ptr [esi + eax*4 + 2]; add dl, byte ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x55605b38:  add edx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; imul eax, edx; ret; 
0x556f4451:  add edx, ebp; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x55697136:  add edx, ecx; add eax, ecx; call 0x129d73; add ebx, 0x2dfa1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55696156:  add edx, ecx; add eax, ecx; call 0x129d73; add ebx, 0x2edc1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55692276:  add edx, ecx; add eax, ecx; call 0x129d73; add ebx, 0x32521; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x556c3e34:  add edx, ecx; cld; push dword ptr [ebx]; sar esp, 1; jmp dword ptr [ebx - 0x2f]; 
0x5567224e:  add edx, ecx; mov dword ptr [esp + 4], edx; mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x556c4324:  add edx, edi; cld; push dword ptr [ebx]; xlatb; cld; jmp dword ptr [ebx - 0x29]; 
0x55692b2b:  add edx, edi; lea eax, dword ptr [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55692c4b:  add edx, edi; lea eax, dword ptr [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55692d6b:  add edx, edi; lea eax, dword ptr [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x5569273b:  add edx, edi; lea eax, dword ptr [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x5569285b:  add edx, edi; lea eax, dword ptr [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x5569297b:  add edx, edi; lea eax, dword ptr [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x556e7959:  add edx, esp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x555f2867:  add esi, 0x10; add eax, 0x10; call 0x129d77; add ecx, 0xc6092; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x555f273e:  add esi, 0x30; add eax, 0x30; call 0x129d77; add ecx, 0xc61bb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x556d3a20:  add esi, dword ptr [eax + 0x140e0a02]; inc ecx; ret; 
0x555f3d35:  add esi, dword ptr [eax + edx - 0x7d]; ret 0x3904; 
0x556f4034:  add esi, dword ptr [ecx + eax + 0xa]; ret; 
0x556e537c:  add esi, dword ptr [edx]; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x555c612c:  add esi, ebx; ret; 
0x556d5e74:  add esi, ecx; add dword ptr [edx], ecx; ret; 
0x555f296a:  add esi, ecx; call 0x129d77; add ecx, 0xc6013; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x555f294d:  add esi, ecx; call 0x129d77; add ecx, 0xc6030; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x556e533b:  add esi, esp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x55672a75:  add esp, 0x10; pop esi; movzx eax, al; pop edi; pop ebp; ret; 
0x55603738:  add esp, 0x10; xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x55682d31:  add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x55647a7c:  add esp, 0x18; mov al, 1; pop ebx; ret; 
0x55646c4f:  add esp, 0x18; mov eax, 1; pop ebx; ret; 
0x55682773:  add esp, 0x1c; mov eax, edx; ret; 
0x55672e7c:  add esp, 0x1c; movzx eax, al; ret; 
0x55577939:  add esp, 0x1c; ret; 
0x55577f3f:  add esp, 0x24; ret; 
0x555b3450:  add esp, 0x28; pop ebx; mov eax, edx; ret; 
0x55605b40:  add esp, 0x2c; imul eax, edx; ret; 
0x55637c66:  add esp, 0x2c; ret 8; 
0x55577871:  add esp, 0x2c; ret; 
0x5561355e:  add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x55685b72:  add esp, 0x40; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x555f5b78:  add esp, 0x40; pop esi; pop edi; pop ebp; ret; 
0x55644261:  add esp, 0x40; ret; 
0x55676a5e:  add esp, 0x434; mov eax, edx; pop esi; pop edi; ret; 
0x55577e46:  add esp, 0x44; ret; 
0x55673666:  add esp, 0x48c; ret; 
0x55637434:  add esp, 0x524; mov eax, esi; pop ebx; pop esi; ret; 
0x55637541:  add esp, 0x54c; ret; 
0x555c434b:  add esp, 0x6c; ret; 
0x555b3349:  add esp, 0x9c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x555b3c42:  add esp, 0xc4; pop ebx; pop esi; ret; 
0x55605e62:  add esp, 0xc; pop esi; pop edi; pop ebp; ret; 
0x555c6f5c:  add esp, 0xec; ret; 
0x555f3a5e:  add esp, 4; lea eax, dword ptr [edi - 1]; pop esi; pop edi; pop ebp; ret; 
0x555f3a68:  add esp, 4; lea eax, dword ptr [edi - 2]; pop esi; pop edi; pop ebp; ret; 
0x556a3449:  add esp, 4; pop ebp; pop ebx; ret; 
0x55583f7c:  add esp, 8; ret; 
0x555f3e78:  add esp, 8; xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x556d6b6d:  add esp, dword ptr [eax + 0xa]; push cs; add al, 0xc6; ret; 
0x556d5359:  add esp, dword ptr [esi + 1]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x556d3846:  add esp, esp; add dword ptr [edx], ecx; ret; 
0x556d535a:  add word ptr [edx], cx; push cs; adc al, 0x43; ret; 
0x55617963:  and al, 0; add byte ptr [ebp - 0x46], dh; mov eax, 0xfffa; pop ebx; ret; 
0x555f6f62:  and al, 0x10; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 4], eax; mov dword ptr [esp], edi; call esi; 
0x555c5c48:  and al, 0x10; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], edx; call eax; 
0x55687b3a:  and al, 0x10; mov dword ptr [edx], edi; pop esi; pop edi; ret; 
0x555c4c7f:  and al, 0x10; mov dword ptr [esp + 0xc], 0; call dword ptr [eax + 0x24]; 
0x555c4a30:  and al, 0x10; mov dword ptr [esp + 0xc], edi; mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x55645e6f:  and al, 0x10; mov eax, 0x8e; call dword ptr gs
0x55685952:  and al, 0x10; mov eax, dword ptr [eax]; add esp, 0xc; ret; 
0x55615d29:  and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 7; call dword ptr gs
0x55623433:  and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs
0x55577852:  and al, 0x10; mov edx, dword ptr [esp + 0x34]; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x30]; mov dword ptr [esp], edx; call eax; 
0x55605b3a:  and al, 0x10; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; imul eax, edx; ret; 
0x555b3567:  and al, 0x10; xchg edi, ebx; mov eax, 0x12e; call dword ptr gs
0x55636031:  and al, 0x14; mov dword ptr [esi + 0x14], 0; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x55655066:  and al, 0x14; mov dword ptr [esi + 8], edx; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x55645e6b:  and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x8e; call dword ptr gs
0x55615d25:  and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 7; call dword ptr gs
0x55644a5b:  and al, 0x14; mov edx, 0xffffffff; call 0xe6980; sar eax, 0x1f; add esp, 0xc; ret; 
0x55584776:  and al, 0x14; ror eax, 9; xor eax, dword ptr gs
0x55682771:  and al, 0x18; add esp, 0x1c; mov eax, edx; ret; 
0x55623b7d:  and al, 0x18; add esp, 0x28; pop ebx; mov eax, edx; ret; 
0x5557792d:  and al, 0x18; mov dword ptr [ebx + 0x368c], ecx; mov ebx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x555c2f6b:  and al, 0x18; mov dword ptr [esp + 4], ecx; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x555d7861:  and al, 0x18; mov dword ptr [esp + 4], edx; call eax; 
0x555d2d67:  and al, 0x18; mov dword ptr [esp], 0; call dword ptr [ecx]; 
0x55667841:  and al, 0x18; mov ebx, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x55645e67:  and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x8e; call dword ptr gs
0x55577f39:  and al, 0x18; mov edx, dword ptr [esp + 0x1c]; add esp, 0x24; ret; 
0x555d2d44:  and al, 0x18; neg eax; mov dword ptr [esp], eax; call dword ptr [ecx]; 
0x555f5037:  and al, 0x1c; add dword ptr [ebx + 0x211c244c], ecx; ret 0xd789; 
0x55684f2a:  and al, 0x1c; add edx, dword ptr [eax + 4]; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x55577f3d:  and al, 0x1c; add esp, 0x24; ret; 
0x555b344e:  and al, 0x1c; add esp, 0x28; pop ebx; mov eax, edx; ret; 
0x5561355c:  and al, 0x1c; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x55684e61:  and al, 0x1c; add esp, 0x34; pop ebx; pop esi; ret; 
0x55636461:  and al, 0x1c; mov dword ptr [eax + 8], edx; add esp, 8; ret; 
0x55672256:  and al, 0x1c; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x55684c59:  and al, 0x1c; mov eax, dword ptr [ebx - 0xfc]; mov dword ptr [esp], edx; mov eax, dword ptr [eax + 0x1a0]; call eax; 
0x55615e2d:  and al, 0x1c; mov ebx, eax; mov eax, 0x11c; call dword ptr gs
0x555d2d3a:  and al, 0x1c; mov ecx, dword ptr [ebx - 0x15c]; mov dword ptr [esp + 0x18], edx; neg eax; mov dword ptr [esp], eax; call dword ptr [ecx]; 
0x555f6973:  and al, 0x20; mov dword ptr [esp + 4], eax; call 0x98990; add esp, 0x18; pop ebx; ret; 
0x55684541:  and al, 0x20; mov dword ptr [esp], eax; call 0x124bc0; add esp, 0x18; pop ebx; ret; 
0x55684561:  and al, 0x20; mov dword ptr [esp], eax; call 0x124c30; add esp, 0x18; pop ebx; ret; 
0x55686b39:  and al, 0x20; mov dword ptr [esp], eax; call 0x128a80; add esp, 0x18; pop ebx; ret; 
0x55585755:  and al, 0x20; mov dword ptr [esp], eax; call 0x276f0; add esp, 0x1c; ret; 
0x55593a3e:  and al, 0x20; mov dword ptr [esp], eax; call 0x36110; add esp, 0x18; pop ebx; ret; 
0x55593b3e:  and al, 0x20; mov dword ptr [esp], eax; call 0x3bef0; add esp, 0x18; pop ebx; ret; 
0x555c6b51:  and al, 0x20; mov dword ptr [esp], eax; call 0x643c0; add esp, 0x18; pop ebx; ret; 
0x555b2741:  and al, 0x20; mov dword ptr [esp], eax; call 0x67300; add esp, 0x18; pop ebx; ret; 
0x555f5c24:  and al, 0x20; mov dword ptr [esp], eax; call 0x7e790; add esp, 0x18; pop ebx; ret; 
0x55662827:  and al, 0x20; mov dword ptr [esp], eax; call 0x97ff0; add esp, 0x18; pop ebx; ret; 
0x55662a27:  and al, 0x20; mov dword ptr [esp], eax; call 0x984e0; add esp, 0x18; pop ebx; ret; 
0x555f7c6e:  and al, 0x20; mov dword ptr [esp], eax; call 0x9b9e0; add esp, 0x18; pop ebx; ret; 
0x555f7d2e:  and al, 0x20; mov dword ptr [esp], eax; call 0x9e640; add esp, 0x18; pop ebx; ret; 
0x555f7d6e:  and al, 0x20; mov dword ptr [esp], eax; call 0xa1190; add esp, 0x18; pop ebx; ret; 
0x5560642a:  and al, 0x20; mov dword ptr [esp], eax; call 0xa7e90; add esp, 0x18; pop ebx; ret; 
0x55616765:  and al, 0x20; mov dword ptr [esp], eax; call 0xb85e0; add esp, 0x18; pop ebx; ret; 
0x55616a65:  and al, 0x20; mov dword ptr [esp], eax; call 0xb8bd0; add esp, 0x18; pop ebx; ret; 
0x55682a48:  and al, 0x20; mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 4]; 
0x55685557:  and al, 0x20; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 4; 
0x55637c5c:  and al, 0x20; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 8; 
0x55577867:  and al, 0x20; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x55605b3e:  and al, 0x24; add esp, 0x2c; imul eax, edx; ret; 
0x555c7474:  and al, 0x24; add esp, 0x2c; ret; 
0x55684d33:  and al, 0x24; mov dword ptr [esi + 0xc], eax; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x5568555b:  and al, 0x24; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 4; 
0x55637c60:  and al, 0x24; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 8; 
0x5557786b:  and al, 0x24; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x55637c64:  and al, 0x28; add esp, 0x2c; ret 8; 
0x5557786f:  and al, 0x28; add esp, 0x2c; ret; 
0x55577f30:  and al, 0x28; call 0x19b70; mov eax, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x1c]; add esp, 0x24; ret; 
0x555d4e27:  and al, 0x28; call dword ptr [ebp]; 
0x555c746d:  and al, 0x28; mov dword ptr [esi + 0xc], edx; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; ret; 
0x555d4e48:  and al, 0x28; mov dword ptr [esp + 0x2c], ecx; call eax; 
0x5567425b:  and al, 0x28; mov dword ptr [esp], edi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x555b4164:  and al, 0x29; ret 0x838d; 
0x5567265c:  and al, 0x29; ret 0xd739; 
0x555d4e4c:  and al, 0x2c; call eax; 
0x5564402f:  and al, 0x2d; movzx eax, byte ptr [esi + 0x23]; mov byte ptr [esp + 0x2f], al; xchg edi, ebx; mov eax, 0x36; call dword ptr gs
0x55644037:  and al, 0x2f; xchg edi, ebx; mov eax, 0x36; call dword ptr gs
0x55612344:  and al, 0x30; mov dword ptr [esp + 4], eax; call 0xb48f0; add esp, 0x2c; ret; 
0x55662a6d:  and al, 0x30; mov dword ptr [esp], eax; call 0x104a80; add esp, 0x2c; ret; 
0x55586e41:  and al, 0x30; mov dword ptr [esp], eax; call 0x28dc0; add esp, 0x28; pop ebx; ret; 
0x55592076:  and al, 0x30; mov dword ptr [esp], eax; call 0x352d0; add esp, 0x28; pop ebx; ret; 
0x555c3c69:  and al, 0x30; mov dword ptr [esp], eax; call 0x65c80; add esp, 0x28; pop ebx; ret; 
0x55662c37:  and al, 0x30; mov dword ptr [esp], eax; call 0x991e0; add esp, 0x28; pop ebx; ret; 
0x555f7b36:  and al, 0x30; mov dword ptr [esp], eax; call 0x9a6d0; add esp, 0x28; pop ebx; ret; 
0x555f6e41:  and al, 0x30; mov dword ptr [esp], eax; call 0xa5b70; add esp, 0x28; pop ebx; ret; 
0x5557785e:  and al, 0x30; mov dword ptr [esp], edx; call eax; 
0x55643b79:  and al, 0x30; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x55577e38:  and al, 0x30; mov edx, dword ptr [esp + 0x34]; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x40]; add esp, 0x44; ret; 
0x55644253:  and al, 0x30; mov esi, dword ptr [esp + 0x34]; mov edi, dword ptr [esp + 0x38]; mov ebp, dword ptr [esp + 0x3c]; add esp, 0x40; ret; 
0x5563627c:  and al, 0x30; setne al; mov edi, dword ptr [esp + 0x34]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x55685846:  and al, 0x31; rol byte ptr [eax + 0x747a097e], 9; add esp, 0x24; pop esi; pop edi; ret; 
0x55577856:  and al, 0x34; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x30]; mov dword ptr [esp], edx; call eax; 
0x555c5047:  and al, 0x34; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x2c]; 
0x55644257:  and al, 0x34; mov edi, dword ptr [esp + 0x38]; mov ebp, dword ptr [esp + 0x3c]; add esp, 0x40; ret; 
0x55643b75:  and al, 0x34; mov esi, dword ptr [esp + 0x30]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x55577e3c:  and al, 0x34; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x40]; add esp, 0x44; ret; 
0x55643327:  and al, 0x38; add al, 0; add byte ptr [ecx], cl; ret 0x850f; 
0x5564425b:  and al, 0x38; mov ebp, dword ptr [esp + 0x3c]; add esp, 0x40; ret; 
0x5564425f:  and al, 0x3c; add esp, 0x40; ret; 
0x555d7b55:  and al, 0x3c; mov dword ptr [esp], ebp; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x40]; mov dword ptr [esp + 4], edx; call eax; 
0x555d7856:  and al, 0x3c; mov dword ptr [esp], edi; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x18]; mov dword ptr [esp + 4], edx; call eax; 
0x555d752c:  and al, 0x3c; mov dword ptr [esp], esi; mov dword ptr [esp + 4], ebp; mov dword ptr [esp + 8], edx; call eax; 
0x55577e40:  and al, 0x3c; mov edi, dword ptr [esp + 0x40]; add esp, 0x44; ret; 
0x55577e44:  and al, 0x40; add esp, 0x44; ret; 
0x555d7b60:  and al, 0x40; mov dword ptr [esp + 4], edx; call eax; 
0x55687c52:  and al, 0x40; mov edi, dword ptr [esp + 0x44]; mov dword ptr [edx], ecx; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x555b2c7f:  and al, 0x40; mov esi, dword ptr [esp + 0x44]; mov edi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x555c545a:  and al, 0x44; mov dword ptr [eax], esi; mov dword ptr [eax + 4], edx; mov eax, dword ptr [ebp + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x55687c56:  and al, 0x44; mov dword ptr [edx], ecx; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x55675846:  and al, 0x44; mov esi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x55645366:  and al, 0x50; mov ecx, dword ptr [esp + 0x54]; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14d; call dword ptr gs
0x55645133:  and al, 0x50; mov edi, dword ptr [esp + 0x14]; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14d; call dword ptr gs
0x5564536a:  and al, 0x54; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14d; call dword ptr gs
0x556e2724:  and al, 0x55; add dword ptr [eax], eax; clc; adc dl, dh; jmp dword ptr [eax]; 
0x555d7074:  and al, 0x58; add al, 0; add al, ch; ret 0xfffc; 
0x555d4f4b:  and al, 0x5c; add byte ptr [esp + ecx*4 - 0x75], dh; and dword ptr [esi + edi*8 + 0x4c7ffff], 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [eax]; 
0x55676622:  and al, 0x5c; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x555c433d:  and al, 0x5c; mov esi, dword ptr [esp + 0x60]; mov edi, dword ptr [esp + 0x64]; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x55672b76:  and al, 0x60; mov dword ptr [esp], edx; call eax; 
0x555c4341:  and al, 0x60; mov edi, dword ptr [esp + 0x64]; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x55672b6e:  and al, 0x64; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x60]; mov dword ptr [esp], edx; call eax; 
0x555c4345:  and al, 0x64; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x555c4349:  and al, 0x68; add esp, 0x6c; ret; 
0x556c6820:  and al, 0x6c; in eax, dx; jmp dword ptr [eax]; 
0x5561264f:  and al, 0x70; mov esi, dword ptr [esp + 0x74]; mov edi, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x55612653:  and al, 0x74; mov edi, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x55596340:  and al, 0x80; add byte ptr [eax], al; add byte ptr [ecx], ch; mov dword ptr [ebp - 0x5a71f001], 0x89fffffe; ret 0x18e9; 
0x5558407c:  and al, 0x81; ret 0x100; 
0x55582b29:  and al, 0x83; ret 0x3b01; 
0x5567365a:  and al, 0x84; add al, 0; add byte ptr [ebx + 0x48824ac], cl; add byte ptr [eax], al; add esp, 0x48c; ret; 
0x5564406c:  and al, 0x87; fistp qword ptr [eax + 0x36]; call dword ptr gs
0x55684f38:  and al, 0x89; dec esp; and al, 4; call dword ptr [eax + 4]; 
0x5562604f:  and al, 0x89; dec esp; and al, 8; call dword ptr [ebp - 0x78]; 
0x555d7530:  and al, 0x89; insb byte ptr es
0x555c4c7c:  and al, 0x89; push esp; and al, 0x10; mov dword ptr [esp + 0xc], 0; call dword ptr [eax + 0x24]; 
0x555d4e24:  and al, 0x89; push esp; and al, 0x28; call dword ptr [ebp]; 
0x555c504b:  and al, 0x89; push esp; and al, 4; call dword ptr [eax + 0x2c]; 
0x555d785a:  and al, 0x89; push esp; and al, 8; mov edx, dword ptr [esp + 0x18]; mov dword ptr [esp + 4], edx; call eax; 
0x555d7b59:  and al, 0x89; push esp; and al, 8; mov edx, dword ptr [esp + 0x40]; mov dword ptr [esp + 4], edx; call eax; 
0x55675e44:  and al, 0x89; ret 0xbc80; 
0x55684c63:  and al, 0x8b; and byte ptr [eax - 0xffffff], 0xd0; add esp, 0x18; pop ebx; ret; 
0x55682a4c:  and al, 0x8b; and eax, 0xe; add byte ptr [eax], al; call dword ptr [eax + 4]; 
0x5568555c:  and al, 0x8b; insb byte ptr es
0x55637c61:  and al, 0x8b; insb byte ptr es
0x55583f74:  and al, 0x8b; sbb al, 0x24; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x556d5f24:  and al, 0x8d; add byte ptr [eax], al; dec eax; sub bh, ch; call edx; 
0x556c6528:  and al, 0xaf; in al, dx; call dword ptr [eax]; 
0x555c7523:  and al, 0xc8; add byte ptr [eax], al; add byte ptr [ebx + 0x468b0c4e], cl; or byte ptr [ecx + 0x29cd29d5], cl; ret 0xe75; 
0x55666729:  and al, 0xc; add byte ptr [eax + eax], al; add byte ptr [ecx - 0x2617dbfc], cl; jns 0x108735; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x55577937:  and al, 0xc; add esp, 0x1c; ret; 
0x555c4a34:  and al, 0xc; mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x55662d7f:  and al, 0xc; mov dword ptr [esp], eax; call 0x98e00; add esp, 0x28; pop ebx; ret; 
0x55615d2d:  and al, 0xc; mov eax, 7; call dword ptr gs
0x55623840:  and al, 0xc; mov eax, ebp; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0xb4; call dword ptr gs
0x55623920:  and al, 0xc; mov eax, ebp; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0xb5; call dword ptr gs
0x55623437:  and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs
0x55623b2e:  and al, 0xc; mov edi, dword ptr [esp + 8]; xchg edi, ebx; mov eax, 0xdb; call dword ptr gs
0x555d5f49:  and al, 0xc; mov esi, dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x55644e6e:  and al, 0xc; mov esi, eax; xchg edi, ebx; mov eax, 0x92; call dword ptr gs
0x5564783f:  and al, 0xc; xchg edi, ebx; mov eax, 0xc1; call dword ptr gs
0x5561745f:  and al, 0xc; xchg edi, ebx; mov eax, 0xd3; call dword ptr gs
0x5564313c:  and al, 0xd8; add al, 0; add al, ch; sub eax, 0x8100044c; ret; 
0x556c466c:  and al, 0xda; cld; call dword ptr [edx + ebx*8 - 4]; inc dword ptr [edx + ebx*8 - 0x254b0004]; cld; jmp esp; 
0x555c6f50:  and al, 0xe4; add byte ptr [eax], al; add byte ptr [ebx + 0xe824ac], cl; add byte ptr [eax], al; add esp, 0xec; ret; 
0x5559202a:  and al, 0xe8; add byte ptr [ebx], cl; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x55646771:  and al, 0xe8; cmp eax, ecx; idiv bh; add esp, 0x18; pop ebx; ret; 
0x55666731:  and al, 0xe8; fnstcw word ptr [ecx - 1]; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x555f7a4a:  and al, 0xe8; jo 0x99a51; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x555b3250:  and al, 0xe8; ljmp 0xfc0
0x55603638:  and al, 0xe8; mov byte ptr [0x890004db], al; ret 0x68b; 
0x555b2745:  and al, 0xe8; mov ch, 0x2b; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x55636842:  and al, 0xe8; mov eax, 0x89fffffc; ret 0xcb8; 
0x555a3361:  and al, 0xe8; mov ecx, 0x89ffffca; ret 0x16eb; 
0x55665e68:  and al, 0xe8; ret 0xff7f; 
0x55653648:  and al, 0xe8; ret 8; 
0x555f7d72:  and al, 0xe8; sbb byte ptr [eax + eax], dh; add esp, 0x18; pop ebx; ret; 
0x55612627:  and al, 0xe8; shr dword ptr [edx - 0x77cfffe], cl; push dword ptr [ebx + ebp - 0x77]; ret 0xe283; 
0x5561314f:  and al, 0xe8; sub ebx, dword ptr [ebx]; pop es; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp + 3]; 
0x55593b42:  and al, 0xe8; test al, 0x63; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x55666c43:  and al, 0xe8; xchg dword ptr [eax - 1], edi; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x55666643:  and al, 0xe8; xchg dword ptr [esi - 1], edi; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x55633647:  and al, 0xf; mov dh, 0x2c; xor ebx, ebp; ret; 
0x555a5356:  and al, 0xf; test byte ptr [eax], bh; ret 0xffff; 
0x55672134:  and al, 0xff; push eax; add al, 0x89; ret 0xc031; 
0x555b4a61:  and al, 0xff; push eax; sbb al, 0x89; ret 0x478b; 
0x55673f33:  and al, 0xff; push esp; and al, 0x24; add esp, 0x1c; ret; 
0x55687e3a:  and al, 0xff; ror byte ptr [ecx + 0x1ffac1c2], 1; add esp, 0x18; pop esi; ret; 
0x555e5568:  and al, 2; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x5562643e:  and al, 4; add al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp], esi; mov dword ptr [esp + 8], ecx; call dword ptr [ebp - 0x78]; 
0x55583f7a:  and al, 4; add esp, 8; ret; 
0x55585032:  and al, 4; and eax, 0x7f; ret; 
0x55663042:  and al, 4; and eax, 0xffff; ror ax, 8; ret; 
0x55663032:  and al, 4; bswap eax; ret; 
0x555b3c3b:  and al, 4; call 0x4c590; add esp, 0xc4; pop ebx; pop esi; ret; 
0x555f6977:  and al, 4; call 0x98990; add esp, 0x18; pop ebx; ret; 
0x55612348:  and al, 4; call 0xb48f0; add esp, 0x2c; ret; 
0x555c504e:  and al, 4; call dword ptr [eax + 0x2c]; 
0x55684f3b:  and al, 4; call dword ptr [eax + 4]; 
0x55637368:  and al, 4; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x55637352:  and al, 4; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x55636429:  and al, 4; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; add esp, 8; ret; 
0x55672252:  and al, 4; mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x555c4a38:  and al, 4; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x555d7533:  and al, 4; mov dword ptr [esp + 8], edx; call eax; 
0x55687e2c:  and al, 4; mov dword ptr [esp + 8], esi; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x55673f2f:  and al, 4; mov dword ptr [esp], eax; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x555f6f6a:  and al, 4; mov dword ptr [esp], edi; call esi; 
0x555c4e74:  and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 0x2c]; 
0x55672130:  and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x55672160:  and al, 4; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x555a6e75:  and al, 4; mov dword ptr [esp], esi; call eax; 
0x555d5334:  and al, 4; mov dword ptr gs
0x55646054:  and al, 4; mov eax, 0x3d; call dword ptr gs
0x55645d48:  and al, 4; mov eax, 0x4a; call dword ptr gs
0x55606468:  and al, 4; mov eax, 0x4e; call dword ptr gs
0x55646474:  and al, 4; mov eax, 0x6f; call dword ptr gs
0x55617364:  and al, 4; mov eax, 0x93; call dword ptr gs
0x5564614e:  and al, 4; mov eax, 0x94; call dword ptr gs
0x55623474:  and al, 4; mov eax, 0x9d; call dword ptr gs
0x55623534:  and al, 4; mov eax, 0xa0; call dword ptr gs
0x55623578:  and al, 4; mov eax, 0xa1; call dword ptr gs
0x555c5922:  and al, 4; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + 0x28]; ret; 
0x55687922:  and al, 4; mov eax, dword ptr [eax + 0x50]; ret; 
0x55687932:  and al, 4; mov eax, dword ptr [eax + 0x5c]; ret; 
0x5557577a:  and al, 4; mov eax, dword ptr [ebp - 0x7c]; mov dword ptr [esp], eax; mov eax, dword ptr [ebp + 0xc]; call dword ptr [eax]; 
0x555f6673:  and al, 4; mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; call edi; 
0x555f6726:  and al, 4; mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; call esi; 
0x55584f2d:  and al, 4; mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs
0x55584e7d:  and al, 4; mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs
0x55584e4d:  and al, 4; mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs
0x55584d7d:  and al, 4; mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs
0x55672967:  and al, 4; mov eax, dword ptr [esi]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x55682a44:  and al, 4; mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 4]; 
0x5558492b:  and al, 4; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x55606444:  and al, 4; mov ecx, eax; xchg ebx, ecx; mov eax, 0xd; call dword ptr gs
0x5557785a:  and al, 4; mov edx, dword ptr [esp + 0x30]; mov dword ptr [esp], edx; call eax; 
0x55672b72:  and al, 4; mov edx, dword ptr [esp + 0x60]; mov dword ptr [esp], edx; call eax; 
0x55636a52:  and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x55636a2a:  and al, 4; mov word ptr [eax], dx; xor eax, eax; ret; 
0x55626047:  and al, 4; or al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp], esi; mov dword ptr [esp + 8], ecx; call dword ptr [ebp - 0x78]; 
0x555b4a54:  and al, 4; sub edx, ecx; sar edx, 2; mov dword ptr [esp + 8], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x55637436:  and al, 5; add byte ptr [eax], al; mov eax, esi; pop ebx; pop esi; ret; 
0x555c4061:  and al, 8; adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x555c5e38:  and al, 8; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x555c4268:  and al, 8; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], edx; call eax; 
0x55626052:  and al, 8; call dword ptr [ebp - 0x78]; 
0x555d7537:  and al, 8; call eax; 
0x555c5b6c:  and al, 8; lea eax, dword ptr [esi + 0x54]; mov dword ptr [esp + 4], eax; mov dword ptr [esp], ebp; call edi; 
0x55612e7a:  and al, 8; lea ecx, dword ptr [ebp - 0x28]; mov dword ptr [esp], ecx; mov dword ptr [esp + 4], edx; call dword ptr [ebp - 0x34]; 
0x555c2f67:  and al, 8; lea ecx, dword ptr [esp + 0x18]; mov dword ptr [esp + 4], ecx; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x555f6d2a:  and al, 8; lea edx, dword ptr [ebp - 0x44]; mov dword ptr [esp + 4], edx; mov eax, dword ptr [eax + 8]; mov dword ptr [esp], eax; call edi; 
0x55636a56:  and al, 8; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x55636a49:  and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x555f6722:  and al, 8; mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; call esi; 
0x555c3269:  and al, 8; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x555c4e70:  and al, 8; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; call dword ptr [eax + 0x2c]; 
0x55672963:  and al, 8; mov dword ptr [esp + 4], ebp; mov eax, dword ptr [esi]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x555a6e71:  and al, 8; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call eax; 
0x555c4a3c:  and al, 8; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x555c4c78:  and al, 8; mov dword ptr [esp], esi; mov dword ptr [esp + 0x10], edx; mov dword ptr [esp + 0xc], 0; call dword ptr [eax + 0x24]; 
0x5562343b:  and al, 8; mov eax, 0x9c; call dword ptr gs
0x55612340:  and al, 8; mov eax, dword ptr [esp + 0x30]; mov dword ptr [esp + 4], eax; call 0xb48f0; add esp, 0x2c; ret; 
0x555d5330:  and al, 8; mov ebx, dword ptr [esp + 4]; mov dword ptr gs
0x55645d44:  and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs
0x55606464:  and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4e; call dword ptr gs
0x55623574:  and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xa1; call dword ptr gs
0x55644e6a:  and al, 8; mov ecx, dword ptr [esp + 0xc]; mov esi, eax; xchg edi, ebx; mov eax, 0x92; call dword ptr gs
0x55687e30:  and al, 8; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x555d785d:  and al, 8; mov edx, dword ptr [esp + 0x18]; mov dword ptr [esp + 4], edx; call eax; 
0x55674257:  and al, 8; mov edx, dword ptr [esp + 0x28]; mov dword ptr [esp], edi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x555c5043:  and al, 8; mov edx, dword ptr [esp + 0x34]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x2c]; 
0x555d7b5c:  and al, 8; mov edx, dword ptr [esp + 0x40]; mov dword ptr [esp + 4], edx; call eax; 
0x55672b6a:  and al, 8; mov edx, dword ptr [esp + 0x64]; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x60]; mov dword ptr [esp], edx; call eax; 
0x55642d76:  and al, 8; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x55647572:  and al, 8; xchg ebx, edx; mov eax, 0x10f; call dword ptr gs
0x55623b32:  and al, 8; xchg edi, ebx; mov eax, 0xdb; call dword ptr gs
0x556d545d:  and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; mov ah, 0x7d; add byte ptr [eax], al; ret 0xef13; 
0x556f3249:  and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; mov al, byte ptr [0x3f00025b]; xor al, 0xf7; call dword ptr [eax]; 
0x556e6535:  and al, byte ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; mov word ptr [esi + 0x1a850001], cs; hlt; call dword ptr [eax]; 
0x55563840:  and al, byte ptr [eax]; or al, 0; ret; 
0x555f6550:  and al, byte ptr [ebp + 0x5eeb75c9]; pop edi; pop ebp; ret; 
0x55577651:  and al, byte ptr [edi]; adc dword ptr [eax], eax; add ecx, 0x18999f; lea eax, dword ptr [ecx - 0x43dee]; ret; 
0x55577b51:  and al, byte ptr [edx]; adc dword ptr [eax], eax; add ecx, 0x18949f; mov eax, dword ptr [ecx - 0xf8]; add eax, dword ptr gs
0x556b6d29:  and bh, byte ptr [esi - 0x5e0466e]; xchg dword ptr [esp + eax + 0x6fa9ce9d], esp; ret; 
0x556d5620:  and byte ptr [eax + eax - 0x10eae400], al; jmp dword ptr [eax]; 
0x556d2277:  and byte ptr [eax - 0x7d], cl; add edx, dword ptr [ebx - 0x7a]; add ah, byte ptr [ebp + 0xa]; push cs; add al, 0xc6; ret; 
0x55684c65:  and byte ptr [eax - 0xffffff], 0xd0; add esp, 0x18; pop ebx; ret; 
0x556f297c:  and byte ptr [eax], al; add byte ptr [eax], al; adc byte ptr [edi + 2], 0; lodsb al, byte ptr [esi]; and esi, edi; jmp dword ptr [edi]; 
0x555d7265:  and byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x16a4e73c], al; in eax, dx; ret 0xffff; 
0x55617a77:  and byte ptr [eax], al; add byte ptr [eax], al; cmp dword ptr gs
0x55617a39:  and byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x556e4428:  and byte ptr [eax], al; add byte ptr [eax], al; sub al, 0x72; add dword ptr [eax], eax; shl dh, 0xf2; jmp dword ptr [edx]; 
0x556e6128:  and byte ptr [eax], al; add byte ptr [eax], al; sub al, 0x8f; add dword ptr [eax], eax; adc al, 0xf3; call dword ptr [eax]; 
0x55567542:  and byte ptr [eax], al; ret; 
0x55677444:  and byte ptr [ebp - 0x6bc6ff8a], cl; ret; 
0x556f7520:  and byte ptr [ebx + 0x4ffc0002], ah; clc; jmp dword ptr [edx]; 
0x556f5523:  and byte ptr [ebx + eax*4 + 3], al; dec edi; xchg byte ptr [edx], al; add bl, byte ptr [eax + 0xe]; add al, 0xc6; ret; 
0x556f5033:  and byte ptr [ebx + eax*4 + 3], al; dec edi; xchg byte ptr [edx], al; jno 0x19704a; add al, 0xc6; ret; 
0x556f6c3f:  and byte ptr [ebx + eax*4 + 3], al; push ebx; xchg byte ptr [edx], al; push 0xc6040e0a; ret; 
0x556f3b3f:  and byte ptr [ebx + eax*4 + 3], al; push ecx; xchg byte ptr [edx], al; jo 0x195b56; add al, 0xc6; ret; 
0x5563446a:  and byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x555f2866:  and byte ptr [ebx - 0x3f7cef3a], al; adc al, ch; add eax, 0x81000955; rcl dword ptr [edx + 0x3000c60], 0xc; xchg eax, ecx; jmp ecx; 
0x55685558:  and byte ptr [ebx - 0x74dbdb84], cl; insb byte ptr es
0x55637c5d:  and byte ptr [ebx - 0x74dbdb84], cl; insb byte ptr es
0x5567225d:  and byte ptr [ebx - 0x7ce3dbac], cl; clc; push dword ptr [ecx + eax*2 - 0x77]; push esi; sub al, 1; ret 0x5689; 
0x55654748:  and byte ptr [ebx - 0xf76eb3c], al; pop ebx; pop esi; ret; 
0x556f7320:  and byte ptr [ecx + 0x446c0002], ah; clc; jmp dword ptr [eax]; 
0x555f5c25:  and byte ptr [ecx + 0x62e82404], cl; imul edi, esi, -1; add esp, 0x18; pop ebx; ret; 
0x5559266d:  and byte ptr [ecx + 0x74402474], cl; sbb byte ptr [ebx - 0x7cbfdbac], cl; ret 0xf01; 
0x555f7d2f:  and byte ptr [ecx + 0x8e82404], cl; dec ecx; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x555c696a:  and byte ptr [ecx - 0x17ebdba4], cl; call dword ptr [ebx]; 
0x555d5b6a:  and byte ptr [ecx - 0x17ebdba4], cl; jmp dword ptr [ecx]; 
0x555f6974:  and byte ptr [ecx - 0x17fbdbbc], cl; adc al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x55593a3f:  and byte ptr [ecx - 0x3717dbfc], cl; push es; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x55593a7f:  and byte ptr [ecx - 0x7717dbfc], cl; push es; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x556c775d:  and byte ptr [ecx], al; add byte ptr [edi + edi*2 - 0x10], al; call dword ptr [eax + 0x20]; 
0x556c4e28:  and byte ptr [ecx], al; std; push dword ptr [eax + 0x40fffd01]; add bh, ch; call eax; 
0x5560515d:  and byte ptr [ecx], bh; dec edi; and byte ptr [edi], cl; test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x5560365b:  and byte ptr [ecx], ch; ret 0x895e; 
0x555f4b38:  and byte ptr [ecx], ch; ret 0xc083; 
0x55615d4f:  and byte ptr [edi], al; add byte ptr [ecx + 0xeb2a2c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x556a5851:  and byte ptr [edi], cl; test dword ptr [eax - 0x73000000], ecx; inc edi; hlt; pop edi; ret; 
0x556a6664:  and byte ptr [edi], cl; test dword ptr [ebp - 0x7d000000], esp; ret 0xf0c; 
0x55605160:  and byte ptr [edi], cl; test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x556a6e4b:  and byte ptr [edi], cl; test dword ptr [edx - 0x9fffffd], esi; ret 0xf40; 
0x556a6f6b:  and byte ptr [edi], cl; test dword ptr [esi - 0xa000000], ebp; ret 0xf40; 
0x556a524c:  and byte ptr [edi], cl; test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x555c6123:  and byte ptr [edx + ecx - 0x75], dh; inc eax; cmp byte ptr [ebp - 0xcfc8740], al; ret; 
0x55563838:  and byte ptr [esi + 6], dl; add byte ptr [eax + 0x22000001], bl; add byte ptr [eax + eax], cl; ret; 
0x556f7d40:  and byte ptr [esi - 8], bl; jmp dword ptr [ebx]; 
0x55647971:  and byte ptr [esp + ebp*2 - 0x7d], dh; cli; or dword ptr [edi - 0x7d], esi; cli; or dh, byte ptr [edx - 0x77]; ret 0xb60f; 
0x556c504d:  and ch, bh; call eax; 
0x556c504d:  and ch, bh; call eax; pop ds; std; jmp dword ptr [eax]; 
0x556c5029:  and ch, bh; call edx; 
0x556c503d:  and ch, bh; call esi; 
0x556c503d:  and ch, bh; call esi; pop ds; std; jmp dword ptr [esi]; 
0x556c5039:  and ch, bh; dec esp; and ch, bh; call esi; 
0x556c5049:  and ch, bh; inc esi; and ch, bh; call eax; 
0x556c5045:  and ch, bh; push dword ptr [esi + 0x20]; std; inc esi; and ch, bh; call eax; 
0x556c6824:  and cl, al; add byte ptr [eax], al; in al, 0x6c; in eax, dx; jmp dword ptr [eax - 0x3f]; 
0x5562533d:  and cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x5565517d:  and cl, byte ptr [ebx - 0x12f55]; jmp dword ptr [ebp - 0x75]; 
0x55595f69:  and dh, 0xff; dec dword ptr [edi]; movsb byte ptr es
0x556f2445:  and dh, bh; call dword ptr [eax]; 
0x556e5a45:  and dh, bl; jmp dword ptr [eax + 3]; 
0x556c494c:  and dl, ah; cld; push dword ptr [eax + 0x40fffce2]; jecxz 0x166953; call eax; 
0x556c7174:  and dl, bh; add byte ptr [eax], al; or byte ptr [esi], 0xf0; call dword ptr [eax - 6]; 
0x556d5725:  and dl, dl; out dx, al; jmp dword ptr [edx]; 
0x55584a53:  and dword ptr [eax - 0x76000001], 0x10; pop ebx; pop esi; pop edi; ret; 
0x556b6921:  and dword ptr [esi + ebp*2 - 0x7a], edi; lahf; ret 0x871e; 
0x555d4f51:  and dword ptr [esi + edi*8 + 0x4c7ffff], 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [eax]; 
0x55584f3c:  and eax, 0x1000; ret; 
0x55584e2c:  and eax, 0x200; ret; 
0x55585034:  and eax, 0x7f; ret; 
0x55584e5c:  and eax, 0x8000; ret; 
0x5567564a:  and eax, 0x81000127; ret; 
0x55682a4e:  and eax, 0xe; add byte ptr [eax], al; call dword ptr [eax + 4]; 
0x55663044:  and eax, 0xffff; ror ax, 8; ret; 
0x5566305c:  and eax, 0xffffff; ret; 
0x55647754:  and eax, dword ptr [edi + 0x12bb8df]; add byte ptr [eax], al; call dword ptr gs
0x5561755b:  and eax, dword ptr [edi + 0xd2b8df]; add byte ptr [eax], al; call dword ptr gs
0x555d2f6c:  and eax, ecx; sub esi, eax; mov dword ptr [esp], esi; call dword ptr [edx]; 
0x556c433c:  and ebx, eax; cld; jmp dword ptr [ebx - 0x28]; 
0x5566306d:  and ecx, 0xc0000000; and edx, 0xff; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x55643e73:  and ecx, 0xffffeff0; or ecx, edx; mov dword ptr [eax + 8], ecx; xor eax, eax; pop ebx; ret; 
0x55644034:  and ecx, dword ptr [eax - 0x78d0dbbc]; fistp qword ptr [eax + 0x36]; call dword ptr gs
0x5564482c:  and ecx, dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x55663073:  and edx, 0xff; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x555f2950:  and edx, dword ptr [ecx + ecx]; add ecx, 0xc6030; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x556c3e4c:  and edx, edx; cld; jmp dword ptr [ebx - 0x2e]; 
0x556e6d31:  and esp, esi; jmp dword ptr [edi]; 
0x556c4340:  arpl ax, bx; cld; call dword ptr [ebx - 0x2c000328]; fdivr st(4); call dword ptr [ebx]; 
0x556c6c20:  arpl di, bx; out dx, al; call esp; 
0x556c5760:  bound ebx, qword ptr [ebp + edi*8 - 1]; ret 0xfd5c; 
0x556d7822:  bound ecx, qword ptr [edx]; push cs; add al, 0xc6; ret; 
0x556e3c24:  bound ecx, qword ptr [esi]; add al, 0xc6; ret; 
0x555f3570:  bsf eax, eax; add eax, edi; pop edi; ret; 
0x555f3560:  bsf eax, eax; lea eax, dword ptr [eax + edi - 0x10]; pop edi; ret; 
0x555f3c70:  bsf eax, eax; lea eax, dword ptr [eax + edx - 0x10]; ret; 
0x555f3c67:  bsf eax, eax; lea eax, dword ptr [edx + eax + 0x30]; ret; 
0x555f3125:  bsr eax, eax; add eax, edi; pop edi; ret; 
0x555f3273:  bsr eax, eax; add eax, edi; sub eax, 0x10; pop edi; ret; 
0x555f3830:  bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x10]; ret; 
0x555f3840:  bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x20]; ret; 
0x555f3850:  bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x30]; ret; 
0x555f3924:  bsr edi, edi; add eax, edi; pop edi; ret; 
0x555f3961:  bsr edi, edi; add eax, edi; xor ch, ch; add eax, ecx; pop edi; ret; 
0x555f3970:  bsr edi, edi; lea eax, dword ptr [eax + edi + 0x10]; pop edi; ret; 
0x55663034:  bswap eax; ret; 
0x55672f6a:  call 0x1035c3fa; mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x5567314a:  call 0x1035c5da; mov edi, dword ptr [esp + 0x14]; mov ebp, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x55687b37:  call 0x1036efc7; mov dword ptr [edx], edi; pop esi; pop edi; ret; 
0x55662a72:  call 0x104a80; add esp, 0x2c; ret; 
0x55674d4e:  call 0x114a80; mov eax, edi; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x5563742f:  call 0x124ae0; add esp, 0x524; mov eax, esi; pop ebx; pop esi; ret; 
0x55684546:  call 0x124bc0; add esp, 0x18; pop ebx; ret; 
0x55684566:  call 0x124c30; add esp, 0x18; pop ebx; ret; 
0x55612f5a:  call 0x126c80; call dword ptr [ebp - 0x48]; 
0x555f666c:  call 0x126c80; mov dword ptr [esp + 4], esi; mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; call edi; 
0x55686a63:  call 0x128950; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x55686b3e:  call 0x128a80; add esp, 0x18; pop ebx; ret; 
0x55697f39:  call 0x129d73; add ebx, 0x2d1a2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55697454:  call 0x129d73; add ebx, 0x2dc87; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x5569734a:  call 0x129d73; add ebx, 0x2dd91; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55697243:  call 0x129d73; add ebx, 0x2de98; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x5569713a:  call 0x129d73; add ebx, 0x2dfa1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55696f69:  call 0x129d73; add ebx, 0x2dfb2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x5569714a:  call 0x129d73; add ebx, 0x2e091; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55696474:  call 0x129d73; add ebx, 0x2eaa7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x5569636a:  call 0x129d73; add ebx, 0x2ebb1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55696263:  call 0x129d73; add ebx, 0x2ecb8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x5569615a:  call 0x129d73; add ebx, 0x2edc1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55696047:  call 0x129d73; add ebx, 0x2ee14; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x5569616a:  call 0x129d73; add ebx, 0x2eeb1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55693764:  call 0x129d73; add ebx, 0x31437; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x5569227a:  call 0x129d73; add ebx, 0x32521; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55617452:  call 0x129d73; add ebx, 0xe9b9d; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xd3; call dword ptr gs
0x55585260:  call 0x129d77; add ecx, 0x17bd8f; mov eax, dword ptr [ecx - 0x90]; add eax, dword ptr gs
0x55585240:  call 0x129d77; add ecx, 0x17bdaf; mov eax, dword ptr [ecx - 0xc0]; add eax, dword ptr gs
0x55585220:  call 0x129d77; add ecx, 0x17bdcf; mov eax, dword ptr [ecx - 0x130]; add eax, dword ptr gs
0x55577b50:  call 0x129d77; add ecx, 0x18949f; mov eax, dword ptr [ecx - 0xf8]; add eax, dword ptr gs
0x55577650:  call 0x129d77; add ecx, 0x18999f; lea eax, dword ptr [ecx - 0x43dee]; ret; 
0x55577630:  call 0x129d77; add ecx, 0x1899bf; lea eax, dword ptr [ecx - 0x46116]; ret; 
0x555f296c:  call 0x129d77; add ecx, 0xc6013; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x555f294f:  call 0x129d77; add ecx, 0xc6030; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x555f2922:  call 0x129d77; add ecx, 0xc605d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x555f286d:  call 0x129d77; add ecx, 0xc6092; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x555f2843:  call 0x129d77; add ecx, 0xc60bc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x555f282a:  call 0x129d77; add ecx, 0xc60d5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x555f2744:  call 0x129d77; add ecx, 0xc61bb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x55646a36:  call 0x16ee0; mov dword ptr [ebx + 0xf2c], eax; add esp, 0x18; pop ebx; ret; 
0x55655320:  call 0x16f50; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x55684e5a:  call 0x16f50; mov eax, dword ptr [esp + 0x1c]; add esp, 0x34; pop ebx; pop esi; ret; 
0x5563602a:  call 0x16f50; mov ebx, dword ptr [esp + 0x14]; mov dword ptr [esi + 0x14], 0; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x55577b36:  call 0x19890; lea eax, dword ptr [ebx + 0x368c]; pop ebx; ret; 
0x55577f32:  call 0x19b70; mov eax, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x1c]; add esp, 0x24; ret; 
0x55615e2a:  call 0x1c2fdab8; mov ebx, eax; mov eax, 0x11c; call dword ptr gs
0x55623843:  call 0x1c30b4d1; mov ebx, eax; mov eax, 0xb4; call dword ptr gs
0x55623923:  call 0x1c30b5b1; mov ebx, eax; mov eax, 0xb5; call dword ptr gs
0x55623a7d:  call 0x1c30b70b; mov ebx, eax; mov eax, 0xb5; call dword ptr gs
0x55646442:  call 0x24d30748; pop ebx; pop esi; ret; 
0x5558575a:  call 0x276f0; add esp, 0x1c; ret; 
0x5558572e:  call 0x28580; add esp, 0x28; pop ebx; ret; 
0x55586e46:  call 0x28dc0; add esp, 0x28; pop ebx; ret; 
0x5559207b:  call 0x352d0; add esp, 0x28; pop ebx; ret; 
0x55593a43:  call 0x36110; add esp, 0x18; pop ebx; ret; 
0x55593b43:  call 0x3bef0; add esp, 0x18; pop ebx; ret; 
0x555a5a3a:  call 0x424d0; add esp, 0x18; pop ebx; ret; 
0x555b3c3d:  call 0x4c590; add esp, 0xc4; pop ebx; pop esi; ret; 
0x555c407c:  call 0x5d65bedc; ret; 
0x555f7377:  call 0x5d68f1d7; ret; 
0x5561574a:  call 0x5d6ad5aa; ret; 
0x5564265f:  call 0x5d6da4bf; ret; 
0x5568786d:  call 0x5d71f6cd; ret; 
0x55646c4a:  call 0x643c0; add esp, 0x18; mov eax, 1; pop ebx; ret; 
0x555c6b56:  call 0x643c0; add esp, 0x18; pop ebx; ret; 
0x555c3c6e:  call 0x65c80; add esp, 0x28; pop ebx; ret; 
0x555b2746:  call 0x67300; add esp, 0x18; pop ebx; ret; 
0x55647a3c:  call 0x68c90; mov eax, 1; add esp, 0x18; pop ebx; ret; 
0x555d2e6d:  call 0x6a110; mov ebx, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x44]; mov edi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x555d2f37:  call 0x74da0; mov edx, dword ptr [ebx - 0x15c]; mov dword ptr [esp], 0; call dword ptr [edx]; 
0x555f5c29:  call 0x7e790; add esp, 0x18; pop ebx; ret; 
0x55686a64:  call 0x8c128a67; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x5566282c:  call 0x97ff0; add esp, 0x18; pop ebx; ret; 
0x55662a2c:  call 0x984e0; add esp, 0x18; pop ebx; ret; 
0x555f6979:  call 0x98990; add esp, 0x18; pop ebx; ret; 
0x55662d24:  call 0x98e50; add esp, 0x18; pop ebx; ret; 
0x55662c3c:  call 0x991e0; add esp, 0x28; pop ebx; ret; 
0x555f7b3b:  call 0x9a6d0; add esp, 0x28; pop ebx; ret; 
0x555f7c73:  call 0x9b9e0; add esp, 0x18; pop ebx; ret; 
0x555f7d73:  call 0xa1190; add esp, 0x18; pop ebx; ret; 
0x555f6e46:  call 0xa5b70; add esp, 0x28; pop ebx; ret; 
0x5560642f:  call 0xa7e90; add esp, 0x18; pop ebx; ret; 
0x5561234a:  call 0xb48f0; add esp, 0x2c; ret; 
0x5561676a:  call 0xb85e0; add esp, 0x18; pop ebx; ret; 
0x55616a6a:  call 0xb8bd0; add esp, 0x18; pop ebx; ret; 
0x55617352:  call 0xb92e0; add esp, 0x1c; ret; 
0x556c6e5d:  call 0xdeb78e62; out dx, eax; push dword ptr [eax]; call 0xdec08e6a; out dx, eax; jmp dword ptr [eax - 0x18]; 
0x556c6e65:  call 0xdec08e6a; out dx, eax; jmp dword ptr [eax - 0x18]; 
0x55646420:  call 0xdec6a; mov ecx, esi; mov edx, eax; xchg ebx, ecx; mov eax, 6; call dword ptr gs
0x556c6e6d:  call 0xdeca8e72; out dx, eax; call dword ptr [eax - 0x17]; 
0x55644777:  call 0xe65b0; mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x556c484d:  call 0xe687684e; cld; call dword ptr [eax]; 
0x55644a62:  call 0xe6980; sar eax, 0x1f; add esp, 0xc; ret; 
0x55644b75:  call 0xe6a70; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x556c483d:  call 0xe6c7683e; cld; jmp dword ptr [eax - 0x19]; 
0x55644445:  call 0xe6d00; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x5567394e:  call 0xe8d329dc; adc bh, dh; ret 0x8080; 
0x55642b40:  call 0xfffba62d; jmp dword ptr [esi - 0x7d]; 
0x55623b3c:  call dword ptr [0x10]; xchg ebx, edi; neg eax; pop edi; ret; 
0x555c2a70:  call dword ptr [eax + 0x10]; 
0x556c7563:  call dword ptr [eax + 0x15]; 
0x55684d2b:  call dword ptr [eax + 0x1ac]; mov ebx, dword ptr [esp + 0x24]; mov dword ptr [esi + 0xc], eax; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x556c4e23:  call dword ptr [eax + 0x20fffd00]; add ebp, edi; push dword ptr [eax + 0x40fffd01]; add bh, ch; call eax; 
0x555c4a41:  call dword ptr [eax + 0x24]; 
0x55584c47:  call dword ptr [eax + 0x26b48d]; add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81001031; ret; 
0x555c4e79:  call dword ptr [eax + 0x2c]; 
0x556c535f:  call dword ptr [eax + 0x2e]; std; call dword ptr [eax]; 
0x556c5373:  call dword ptr [eax + 0x33]; 
0x556c5373:  call dword ptr [eax + 0x33]; std; jmp eax; 
0x556c535b:  call dword ptr [eax + 0x3b]; 
0x556c535b:  call dword ptr [eax + 0x3b]; std; call dword ptr [eax + 0x2e]; std; call dword ptr [eax]; 
0x555c5e41:  call dword ptr [eax + 0x40]; 
0x556c4e53:  call dword ptr [eax + 7]; std; jmp eax; 
0x55684f7f:  call dword ptr [eax + 8]; add esp, 0x18; pop ebx; ret; 
0x55684c3c:  call dword ptr [eax - 0x17ac6f70]; sub eax, 0x81000031; ret; 
0x556c4937:  call dword ptr [eax - 0x21]; 
0x556c4937:  call dword ptr [eax - 0x21]; cld; jmp eax; 
0x55683a66:  call dword ptr [eax - 0x34780e77]; mov eax, 6; call dword ptr gs
0x556c606b:  call dword ptr [eax - 0x68]; 
0x556c596f:  call dword ptr [eax - 0x6e]; 
0x556c4d4b:  call dword ptr [eax - 0x7f0002f4]; or bh, ch; jmp dword ptr [eax]; 
0x55687a46:  call dword ptr [eax - 0x98a3f7b]; mov eax, 4; add esp, 0xc; ret; 
0x556c4b77:  call dword ptr [eax - 5]; 
0x556c4b77:  call dword ptr [eax - 5]; cld; call dword ptr [eax]; 
0x556c717b:  call dword ptr [eax - 6]; 
0x556c4b7f:  call dword ptr [eax]; cli; cld; call eax; 
0x556c5473:  call dword ptr [eax]; dec edx; std; jmp edx; 
0x556c685b:  call dword ptr [eax]; ret 0; 
0x556c4c53:  call dword ptr [ebp + edi*8 - 0x1cb0004]; cld; call esp; 
0x556c4c3f:  call dword ptr [ebp + edi*8 - 4]; jmp esp; 
0x55612f5f:  call dword ptr [ebp - 0x48]; 
0x55626054:  call dword ptr [ebp - 0x78]; 
0x556d296f:  call dword ptr [ebx + 1]; 
0x55682933:  call dword ptr [ebx - 0x1464]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x5568284b:  call dword ptr [ebx - 0x146c]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x556c434f:  call dword ptr [ebx - 0x27]; 
0x556c434f:  call dword ptr [ebx - 0x27]; cld; call dword ptr [ebx - 0x2c000327]; frndint; call dword ptr [ebx]; 
0x556c4353:  call dword ptr [ebx - 0x2c000327]; frndint; call dword ptr [ebx]; 
0x556c4343:  call dword ptr [ebx - 0x2c000328]; fdivr st(4); call dword ptr [ebx]; 
0x556c434b:  call dword ptr [ebx]; frndint; call dword ptr [ebx - 0x27]; 
0x55574f6f:  call dword ptr [edi + 0x56]; 
0x555a3935:  call dword ptr [edi - 0x77]; 
0x556c5627:  call dword ptr [edx + 0x4f]; 
0x556c5627:  call dword ptr [edx + 0x4f]; std; jmp edx; 
0x556c5863:  call dword ptr [edx + 0x5e]; 
0x556c466f:  call dword ptr [edx + ebx*8 - 4]; inc dword ptr [edx + ebx*8 - 0x254b0004]; cld; jmp esp; 
0x556c4533:  call dword ptr [edx - 0x4d000328]; fdivr st(4); call edx; 
0x556c5327:  call dword ptr [edx]; cmp edi, ebp; jmp dword ptr [edx + 0x3b]; 
0x556c5767:  call dword ptr [edx]; pop ebp; std; jmp dword ptr [edx + 0x5d]; 
0x556c5263:  call dword ptr [edx]; std; push dword ptr [edx + 0x2e]; std; call edx; 
0x556c534b:  call dword ptr [esi + 0x3b]; 
0x556c5443:  call dword ptr [esi + 0x3c]; 
0x556c577f:  call dword ptr [esi + 0x5c]; 
0x555f4843:  call dword ptr [esi - 0x42]; 
0x556c4073:  call dword ptr [esi - 0x4900032f]; sar esp, 1; call esi; 
0x555f3d63:  call dword ptr [esi - 0x7d]; 
0x55673f34:  call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x55623b3b:  call dword ptr gs
0x55577532:  call eax; 
0x556c4e33:  call eax; add bh, ch; jmp dword ptr [eax + 3]; 
0x556c4957:  call eax; jecxz 0x166957; jmp dword ptr [eax - 0x1c]; 
0x55577863:  call eax; mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x55687e3b:  call eax; mov edx, eax; sar edx, 0x1f; add esp, 0x18; pop esi; ret; 
0x556c504f:  call eax; pop ds; std; jmp dword ptr [eax]; 
0x556c4f57:  call eax; push ds; std; jmp dword ptr [eax]; 
0x556c687b:  call eax; ret 0; 
0x556c4223:  call ebp; sar esp, cl; inc dword ptr [0x35fffcd4]; aam 0xfc; jmp dword ptr [ebp - 0x2c]; 
0x556c4347:  call ebx; fdivr st(4); call dword ptr [ebx]; 
0x556c4347:  call ebx; fdivr st(4); call dword ptr [ebx]; frndint; call dword ptr [ebx - 0x27]; 
0x556c4357:  call ebx; frndint; call dword ptr [ebx]; 
0x556c4967:  call edx; in al, dx; cld; jmp dword ptr [edx - 0x13]; 
0x556c4a37:  call edx; stc; cld; jmp dword ptr [edx - 6]; 
0x556c503f:  call esi; pop ds; std; jmp dword ptr [esi]; 
0x556c4f47:  call esi; push ds; std; jmp dword ptr [esi]; 
0x5556743c:  cdq; add byte ptr [eax], al; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0x38; 
0x556e6b29:  cdq; add dword ptr [eax], eax; add al, 0x1b; hlt; jmp dword ptr [ebx]; 
0x55577658:  cdq; sbb byte ptr [eax], al; lea eax, dword ptr [ecx - 0x43dee]; ret; 
0x55577638:  cdq; sbb byte ptr [eax], al; lea eax, dword ptr [ecx - 0x46116]; ret; 
0x556f6960:  cdq; xor bh, al; call dword ptr [eax]; 
0x556e2728:  clc; adc dl, dh; jmp dword ptr [eax]; 
0x55565969:  clc; adc dword ptr [eax], eax; ret; 
0x55644824:  clc; add al, 0x74; push 0x7401f883; and ecx, dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x555b4a6e:  clc; add bh, byte ptr [ecx]; ret 0x1974; 
0x55613149:  clc; add byte ptr [eax], al; add byte ptr [ecx + 0x2be82404], cl; sbb eax, dword ptr [edi]; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp + 3]; 
0x55697f38:  clc; call 0x129d73; add ebx, 0x2d1a2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55696f68:  clc; call 0x129d73; add ebx, 0x2dfb2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x556c4a31:  clc; cld; inc dword ptr [eax]; stc; cld; call edx; 
0x555f4824:  clc; dec dword ptr [ebp - 0x10cbb36d]; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x55663566:  clc; dec dword ptr [ecx + 0xf382444]; xchg eax, esp; ret 0xd285; 
0x55663d36:  clc; dec dword ptr [ecx + 0xf442444]; xchg eax, esp; ret 0xd285; 
0x556f746e:  clc; jmp dword ptr [ebx]; 
0x556f6646:  clc; jmp dword ptr [edi]; 
0x556f7526:  clc; jmp dword ptr [edx]; 
0x555f556c:  clc; jmp dword ptr [esi - 0x70]; 
0x555c2e56:  clc; mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x555b2c7c:  clc; mov ebx, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x44]; mov edi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x5564433b:  clc; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x55696d3b:  clc; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x55674d54:  clc; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x55637c59:  clc; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 8; 
0x55692e7c:  clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x55644a68:  clc; pop ds; add esp, 0xc; ret; 
0x55575e75:  clc; pop ebx; pop esi; pop edi; pop ebp; ret 0x10; 
0x55586f46:  clc; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x555f3d4e:  clc; pop esi; pop edi; ret; 
0x5561262e:  clc; push dword ptr [ebx + ebp - 0x77]; ret 0xe283; 
0x55672263:  clc; push dword ptr [ecx + eax*2 - 0x77]; push esi; sub al, 1; ret 0x5689; 
0x555f3277:  clc; sub eax, 0x10; pop edi; ret; 
0x555c5c5c:  clc; sub eax, esi; pop esi; pop edi; pop ebp; ret; 
0x555f3965:  clc; xor ch, ch; add eax, ecx; pop edi; ret; 
0x55682a6c:  cld; add byte ptr [eax], al; add byte ptr [ebx - 0x2f76e73c], al; pop ebx; ret; 
0x556a7a74:  cld; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x556a5260:  cld; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x556c4e22:  cld; call dword ptr [eax + 0x20fffd00]; add ebp, edi; push dword ptr [eax + 0x40fffd01]; add bh, ch; call eax; 
0x556c4936:  cld; call dword ptr [eax - 0x21]; 
0x556c4936:  cld; call dword ptr [eax - 0x21]; cld; jmp eax; 
0x556c596e:  cld; call dword ptr [eax - 0x6e]; 
0x556c4b76:  cld; call dword ptr [eax - 5]; 
0x556c4b76:  cld; call dword ptr [eax - 5]; cld; call dword ptr [eax]; 
0x556c4b7e:  cld; call dword ptr [eax]; cli; cld; call eax; 
0x556c4c52:  cld; call dword ptr [ebp + edi*8 - 0x1cb0004]; cld; call esp; 
0x556c4c3e:  cld; call dword ptr [ebp + edi*8 - 4]; jmp esp; 
0x556c434e:  cld; call dword ptr [ebx - 0x27]; 
0x556c434e:  cld; call dword ptr [ebx - 0x27]; cld; call dword ptr [ebx - 0x2c000327]; frndint; call dword ptr [ebx]; 
0x556c4352:  cld; call dword ptr [ebx - 0x2c000327]; frndint; call dword ptr [ebx]; 
0x556c4342:  cld; call dword ptr [ebx - 0x2c000328]; fdivr st(4); call dword ptr [ebx]; 
0x556c434a:  cld; call dword ptr [ebx]; frndint; call dword ptr [ebx - 0x27]; 
0x556c466e:  cld; call dword ptr [edx + ebx*8 - 4]; inc dword ptr [edx + ebx*8 - 0x254b0004]; cld; jmp esp; 
0x556c4532:  cld; call dword ptr [edx - 0x4d000328]; fdivr st(4); call edx; 
0x556c4072:  cld; call dword ptr [esi - 0x4900032f]; sar esp, 1; call esi; 
0x556c4956:  cld; call eax; jecxz 0x166957; jmp dword ptr [eax - 0x1c]; 
0x556c4222:  cld; call ebp; sar esp, cl; inc dword ptr [0x35fffcd4]; aam 0xfc; jmp dword ptr [ebp - 0x2c]; 
0x556c3e2e:  cld; call ebx; 
0x556c4346:  cld; call ebx; fdivr st(4); call dword ptr [ebx]; 
0x556c4346:  cld; call ebx; fdivr st(4); call dword ptr [ebx]; frndint; call dword ptr [ebx - 0x27]; 
0x556c4356:  cld; call ebx; frndint; call dword ptr [ebx]; 
0x556c453a:  cld; call edx; 
0x556c4966:  cld; call edx; in al, dx; cld; jmp dword ptr [edx - 0x13]; 
0x556c4a36:  cld; call edx; stc; cld; jmp dword ptr [edx - 6]; 
0x556c407a:  cld; call esi; 
0x556c4176:  cld; call esp; 
0x556c4b7d:  cld; cld; call dword ptr [eax]; 
0x556c4b7d:  cld; cld; call dword ptr [eax]; cli; cld; call eax; 
0x556c4b6d:  cld; cld; jmp eax; 
0x556c543c:  cld; cmp al, 0xfd; inc dword ptr [esi]; cmp al, 0xfd; call dword ptr [esi + 0x3c]; 
0x555c4a7b:  cld; dec dword ptr [ebp + 0x468b0076]; or byte ptr [ebx], ch; inc esi; add al, 0x89; ret 0xfac1; 
0x556c4562:  cld; dec dword ptr [ecx - 0x56000328]; fdivr st(4); dec ecx; fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x556c4a7a:  cld; dec dword ptr [esi - 6]; cld; call esp; 
0x556c456a:  cld; dec ecx; fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x556f7524:  cld; dec edi; clc; jmp dword ptr [edx]; 
0x556e687d:  cld; hlt; call dword ptr [eax]; 
0x556c4226:  cld; inc dword ptr [0x35fffcd4]; aam 0xfc; jmp dword ptr [ebp - 0x2c]; 
0x556c484a:  cld; inc dword ptr [eax + 0x70fffce8]; out 0xfc, al; call dword ptr [eax]; 
0x556c4952:  cld; inc dword ptr [eax - 0x1d]; cld; call eax; 
0x556c4952:  cld; inc dword ptr [eax - 0x1d]; cld; call eax; jecxz 0x166957; jmp dword ptr [eax - 0x1c]; 
0x556c475e:  cld; inc dword ptr [eax - 0x4f000327]; frndint; jmp eax; 
0x556c5976:  cld; inc dword ptr [eax - 0x6d]; cld; call eax; 
0x556c4c7e:  cld; inc dword ptr [eax - 3]; cld; call eax; 
0x556c4266:  cld; inc dword ptr [eax]; aam 0xfc; push dword ptr [eax]; aam 0xfc; jmp dword ptr [eax - 0x2c]; 
0x556c4a32:  cld; inc dword ptr [eax]; stc; cld; call edx; 
0x556c3e32:  cld; inc dword ptr [ebx]; sar esp, 1; push dword ptr [ebx]; sar esp, 1; jmp dword ptr [ebx - 0x2f]; 
0x556c4c4e:  cld; inc dword ptr [edi*8 - 0x26b0004]; cld; push dword ptr [esi + edi*8]; cld; call esp; 
0x556c4672:  cld; inc dword ptr [edx + ebx*8 - 0x254b0004]; cld; jmp esp; 
0x556c402e:  cld; inc dword ptr [edx - 0x5d00032f]; sar esp, 1; inc edx; sar esp, 1; jmp edx; 
0x556c4572:  cld; inc dword ptr [esi - 0x59000328]; fdivr st(4); inc esi; fdivr st(4); jmp dword ptr [ebx - 0x28]; 
0x556c4932:  cld; inc eax; fdivp st(4); call dword ptr [eax - 0x21]; 
0x556c4932:  cld; inc eax; fdivp st(4); call dword ptr [eax - 0x21]; cld; jmp eax; 
0x556c3e42:  cld; inc ebx; sar esp, 1; push ebx; sar esp, 1; jmp dword ptr [ebx]; 
0x556c4036:  cld; inc edx; sar esp, 1; jmp edx; 
0x556c457a:  cld; inc esi; fdivr st(4); jmp dword ptr [ebx - 0x28]; 
0x55655322:  cld; int1; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x556c4872:  cld; jmp dword ptr [eax - 0x18]; 
0x556c4842:  cld; jmp dword ptr [eax - 0x19]; 
0x556c495a:  cld; jmp dword ptr [eax - 0x1c]; 
0x556c426e:  cld; jmp dword ptr [eax - 0x2c]; 
0x556c4746:  cld; jmp dword ptr [ebp - 0x25]; 
0x556c4252:  cld; jmp dword ptr [ebp - 0x2a]; 
0x556c4242:  cld; jmp dword ptr [ebp - 0x2b]; 
0x556c422e:  cld; jmp dword ptr [ebp - 0x2c]; 
0x556c433e:  cld; jmp dword ptr [ebx - 0x28]; 
0x556c432a:  cld; jmp dword ptr [ebx - 0x29]; 
0x556c3e4e:  cld; jmp dword ptr [ebx - 0x2e]; 
0x556c3e3a:  cld; jmp dword ptr [ebx - 0x2f]; 
0x556c496a:  cld; jmp dword ptr [edx - 0x13]; 
0x556c4a3a:  cld; jmp dword ptr [edx - 6]; 
0x556c456e:  cld; jmp dword ptr [esi - 0x28]; 
0x556c403a:  cld; jmp edx; 
0x556c4566:  cld; ljmp ptr [ecx - 0x36000328]; fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x556c4836:  cld; ljmp ptr [edx + 0x3afffce7]; call 0xe6c7683e; cld; jmp dword ptr [eax - 0x19]; 
0x55692e44:  cld; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x55694325:  cld; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x556c6354:  cld; movsd dword ptr es
0x556b6846:  cld; out 0x95, eax; push es; cld; ret; 
0x556c4756:  cld; push dword ptr [0x75fffcdc]; fdiv st(4), st(0); inc dword ptr [eax - 0x4f000327]; frndint; jmp eax; 
0x556c494e:  cld; push dword ptr [eax + 0x40fffce2]; jecxz 0x166953; call eax; 
0x556c484e:  cld; push dword ptr [eax - 0x1a]; cld; call dword ptr [eax]; 
0x556c4762:  cld; push dword ptr [eax - 0x1f000327]; frndint; call dword ptr [eax]; 
0x556c4b66:  cld; push dword ptr [eax - 0x7f000305]; cld; cld; jmp eax; 
0x556c427e:  cld; push dword ptr [eax]; aad 0xfc; jmp dword ptr [eax - 0x2b]; 
0x556c426a:  cld; push dword ptr [eax]; aam 0xfc; jmp dword ptr [eax - 0x2c]; 
0x556c492e:  cld; push dword ptr [eax]; fdivp st(4); inc eax; fdivp st(4); call dword ptr [eax - 0x21]; 
0x556c475a:  cld; push dword ptr [ebp - 0x24]; cld; inc dword ptr [eax - 0x4f000327]; frndint; jmp eax; 
0x556c407e:  cld; push dword ptr [ebx - 0x2f]; cld; call dword ptr [ebx - 0x4c00032f]; sar esp, 1; call ebx; 
0x556c3e36:  cld; push dword ptr [ebx]; sar esp, 1; jmp dword ptr [ebx - 0x2f]; 
0x556c4326:  cld; push dword ptr [ebx]; xlatb; cld; jmp dword ptr [ebx - 0x29]; 
0x556c4a2e:  cld; push dword ptr [edx + 0xfffcf8]; stc; cld; call edx; 
0x556c452e:  cld; push dword ptr [edx - 0x28]; cld; call dword ptr [edx - 0x4d000328]; fdivr st(4); call edx; 
0x556c4c56:  cld; push dword ptr [esi + edi*8]; cld; call esp; 
0x556c406e:  cld; push dword ptr [esi - 0x2f]; cld; call dword ptr [esi - 0x4900032f]; sar esp, 1; call esi; 
0x556c427a:  cld; push eax; aam 0xfc; push dword ptr [eax]; aad 0xfc; jmp dword ptr [eax - 0x2b]; 
0x556c4846:  cld; push eax; out 0xfc, eax; inc dword ptr [eax + 0x70fffce8]; out 0xfc, al; call dword ptr [eax]; 
0x556c3e46:  cld; push ebx; sar esp, 1; jmp dword ptr [ebx]; 
0x556c4336:  cld; push ebx; xlatb; cld; jmp dword ptr [ebx]; 
0x556e2d6a:  cld; push ecx; add eax, 0x59000000; push cs; or byte ptr [ebx + 0x40e4902], al; ret; 
0x55606535:  cli; adc ch, byte ptr [ecx]; ret 0x18b; 
0x55606873:  cli; add al, byte ptr [ecx]; ret 0x3c8d; 
0x556c7175:  cli; add byte ptr [eax], al; or byte ptr [esi], 0xf0; call dword ptr [eax - 6]; 
0x555b4a59:  cli; add cl, byte ptr [ecx - 0x76f7dbac]; xor al, 0x24; call dword ptr [eax + 0x1c]; 
0x55605f32:  cli; add eax, 0x291ff8c1; ret 0x1b8; 
0x556c4b75:  cli; cld; call dword ptr [eax - 5]; 
0x556c4b75:  cli; cld; call dword ptr [eax - 5]; cld; call dword ptr [eax]; 
0x556c4a7d:  cli; cld; call esp; 
0x556c4a2d:  cli; cld; push dword ptr [edx + 0xfffcf8]; stc; cld; call edx; 
0x556d5c21:  cli; fldz; jmp dword ptr [edx]; 
0x55636740:  cli; inc dword ptr [ebp + 0x74c289c0]; ret; 
0x55692b2c:  cli; lea eax, dword ptr [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55692c4c:  cli; lea eax, dword ptr [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55692d6c:  cli; lea eax, dword ptr [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x5569273c:  cli; lea eax, dword ptr [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x5569285c:  cli; lea eax, dword ptr [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x5569297c:  cli; lea eax, dword ptr [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55692f77:  cli; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x5564797a:  cli; or dh, byte ptr [edx - 0x77]; ret 0xb60f; 
0x55647975:  cli; or dword ptr [edi - 0x7d], esi; cli; or dh, byte ptr [edx - 0x77]; ret 0xb60f; 
0x5560566e:  cli; or ebp, dword ptr [ecx]; ret 0x5589; 
0x55687e40:  cli; pop ds; add esp, 0x18; pop esi; ret; 
0x556a5922:  cli; pop edi; ret; 
0x55696475:  cli; sbb bh, bh; inc dword ptr [ecx + 0x2eaa7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x55636b79:  cli; std; dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x556b6d2e:  cli; xchg dword ptr [esp + eax + 0x6fa9ce9d], esp; ret; 
0x555f3757:  cmc; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x556e2435:  cmc; int1; call dword ptr [ebx]; 
0x555e205a:  cmc; mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x555f3d4a:  cmova eax, esi; sub eax, edi; pop esi; pop edi; ret; 
0x556a372a:  cmovbe eax, edx; pop esi; pop ebp; pop ebx; ret; 
0x55623d29:  cmovbe eax, esi; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x555f6422:  cmove eax, ecx; ret; 
0x555f482c:  cmove eax, edx; add esp, 8; pop ebx; ret; 
0x5568276c:  cmove edx, esi; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; mov eax, edx; ret; 
0x55605e5f:  cmovge eax, edx; add esp, 0xc; pop esi; pop edi; pop ebp; ret; 
0x55617945:  cmovne eax, edx; ret; 
0x55646645:  cmovne esi, eax; mov eax, esi; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x556c4b6c:  cmp ah, 0xfc; jmp eax; 
0x556e4645:  cmp ah, byte ptr [edi - 0xe]; jmp dword ptr [edx]; 
0x5561793e:  cmp ah, byte ptr [esi]; mov edx, 0xffffffff; cmovne eax, edx; ret; 
0x556e2538:  cmp al, 0; add byte ptr [eax], al; cmp al, 0x53; add dword ptr [eax], eax; cmp bh, 0xf1; call edi; 
0x555f666a:  cmp al, 0x24; call 0x126c80; mov dword ptr [esp + 4], esi; mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; call edi; 
0x555f6f6d:  cmp al, 0x24; call esi; 
0x5567425e:  cmp al, 0x24; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x555d7859:  cmp al, 0x24; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x18]; mov dword ptr [esp + 4], edx; call eax; 
0x556e253c:  cmp al, 0x53; add dword ptr [eax], eax; cmp bh, 0xf1; call edi; 
0x555c427e:  cmp al, 0x5b; pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x556e4a3c:  cmp al, 0x78; add dword ptr [eax], eax; sal dl, 0xf2; call ecx; 
0x55685c76:  cmp al, 0x85; ret 0x1574; 
0x555c407a:  cmp al, 0x89; call 0x5d65bedc; ret; 
0x55615748:  cmp al, 0x89; call 0x5d6ad5aa; ret; 
0x555d7857:  cmp al, 0x89; cmp al, 0x24; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x18]; mov dword ptr [esp + 4], edx; call eax; 
0x555d7b56:  cmp al, 0x89; sub al, 0x24; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x40]; mov dword ptr [esp + 4], edx; call eax; 
0x555d752d:  cmp al, 0x89; xor al, 0x24; mov dword ptr [esp + 4], ebp; mov dword ptr [esp + 8], edx; call eax; 
0x55617d64:  cmp al, 0x91; push cs; add byte ptr [ecx - 0x4c7bd428], cl; sub byte ptr [ebp - 0xf], 0xff; jmp eax; 
0x556f7d3c:  cmp al, 0xab; add al, byte ptr [eax]; and byte ptr [esi - 8], bl; jmp dword ptr [ebx]; 
0x555b3247:  cmp al, 0xc; ret 0x4489; 
0x556c6e20:  cmp al, 0xdb; out dx, eax; push dword ptr [eax + 0x480000e6]; fucomi st(7); jmp eax; 
0x55645458:  cmp al, 0xe8; adc eax, 0x81000429; ret; 
0x555d5360:  cmp al, 0xe8; or eax, 0x81000b2a; ret; 
0x556c7459:  cmp al, 0xf0; jmp dword ptr [eax]; 
0x556f2f42:  cmp al, 0xf6; jmp dword ptr [edx]; 
0x556c5451:  cmp al, 0xfd; call dword ptr [eax + 0x3c]; 
0x556c5441:  cmp al, 0xfd; call dword ptr [esi + 0x3c]; 
0x556c544d:  cmp al, 0xfd; inc dword ptr [eax]; cmp al, 0xfd; call dword ptr [eax + 0x3c]; 
0x556c543d:  cmp al, 0xfd; inc dword ptr [esi]; cmp al, 0xfd; call dword ptr [esi + 0x3c]; 
0x556c5421:  cmp al, 0xfd; jmp dword ptr [edx + 0x3c]; 
0x556c5435:  cmp al, 0xfd; ljmp ptr [esp + edi + 0x3cfcfffd]; std; inc dword ptr [esi]; cmp al, 0xfd; call dword ptr [esi + 0x3c]; 
0x556c5449:  cmp al, 0xfd; push esi; cmp al, 0xfd; inc dword ptr [eax]; cmp al, 0xfd; call dword ptr [eax + 0x3c]; 
0x55672850:  cmp al, 1; ret 0x4689; 
0x55665d69:  cmp al, byte ptr [eax]; add byte ptr [ebx - 0x71f0ff08], al; ret; 
0x555f3565:  cmp al, dh; pop edi; ret; 
0x556d4649:  cmp al, dl; out dx, al; jmp dword ptr [edx]; 
0x556e2540:  cmp bh, 0xf1; call edi; 
0x55605547:  cmp bh, byte ptr [ecx]; cmp dword ptr [ebp + ecx + 0xf], esi; lahf; ror byte ptr [edi], 0xb6; ror byte ptr [ebp + 0x5eff0044], 0x5f; ret; 
0x556c5325:  cmp bh, ch; call dword ptr [edx]; 
0x556c5325:  cmp bh, ch; call dword ptr [edx]; cmp edi, ebp; jmp dword ptr [edx + 0x3b]; 
0x556c5355:  cmp bh, ch; inc dword ptr [eax]; cmp edi, ebp; call dword ptr [eax + 0x3b]; 
0x556c5345:  cmp bh, ch; inc dword ptr [esi]; cmp edi, ebp; call dword ptr [esi + 0x3b]; 
0x556c5321:  cmp bh, ch; inc edx; cmp bh, ch; call dword ptr [edx]; 
0x556c5321:  cmp bh, ch; inc edx; cmp bh, ch; call dword ptr [edx]; cmp edi, ebp; jmp dword ptr [edx + 0x3b]; 
0x556c5351:  cmp bh, ch; push dword ptr [eax + 0xfffd3a]; cmp edi, ebp; call dword ptr [eax + 0x3b]; 
0x556c5341:  cmp bh, ch; push dword ptr [esi + 0x6fffd3a]; cmp edi, ebp; call dword ptr [esi + 0x3b]; 
0x55687b3d:  cmp bl, byte ptr [esi + 0x5f]; ret; 
0x5559677a:  cmp byte ptr [0x83d9fffc], ch; xor al, 0x2d; cld; jmp dword ptr [ebp - 0x39]; 
0x55643328:  cmp byte ptr [eax + eax], al; add byte ptr [ecx], cl; ret 0x850f; 
0x55575f22:  cmp byte ptr [ebp + 0xf], bl; xchg eax, esp; ret 0x348d; 
0x555c6128:  cmp byte ptr [ebp - 0xcfc8740], al; ret; 
0x55674656:  cmp byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x5563303f:  cmp byte ptr [ebx - 0x7ccbdb8c], cl; ret 0x8b01; 
0x55614959:  cmp byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x75]; 
0x556f7338:  cmp byte ptr [ecx + 0x44740002], ah; clc; jmp dword ptr [edi]; 
0x556e7132:  cmp byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x556d3741:  cmp byte ptr [ecx], dh; out dx, al; jmp dword ptr [edx]; 
0x55567439:  cmp byte ptr [edi], cl; add byte ptr [ecx + 0x12000000], bl; add byte ptr [eax + eax], cl; ret 0x38; 
0x555d446b:  cmp byte ptr [edi], cl; xchg eax, ebp; ret 0xb60f; 
0x55594f3d:  cmp byte ptr [edi], cl; xchg eax, edx; ret 0xd789; 
0x5566356b:  cmp byte ptr [edi], cl; xchg eax, esp; ret 0xd285; 
0x556c636c:  cmp byte ptr [esi + 0x74640000], ah; in al, dx; jmp dword ptr [eax - 0x5a]; 
0x55617b68:  cmp byte ptr [esi], ah; sete al; movzx eax, al; lea eax, dword ptr [eax + eax - 1]; ret; 
0x556f2976:  cmp dh, dh; jmp dword ptr [edx]; 
0x556a4867:  cmp dh, dh; ret 0x7504; 
0x55687a43:  cmp dword ptr [eax - 0x10], edi; call dword ptr [eax - 0x98a3f7b]; mov eax, 4; add esp, 0xc; ret; 
0x555d763a:  cmp dword ptr [eax - 2], -1; jmp dword ptr [ebp - 0x75]; 
0x555d2c5a:  cmp dword ptr [eax - 2], -1; jmp dword ptr [ebp - 0x77]; 
0x555d6f5b:  cmp dword ptr [eax - 2], -1; jmp dword ptr [ebp - 0x7d]; 
0x55617b67:  cmp dword ptr [eax], 0x26; sete al; movzx eax, al; lea eax, dword ptr [eax + eax - 1]; ret; 
0x55617126:  cmp dword ptr [eax], eax; add byte ptr [ebp - 0x76e18a40], al; rol dword ptr [edi + 0xd5b8cb], 1; add byte ptr [eax], al; call dword ptr gs
0x55617555:  cmp dword ptr [eax], eax; add byte ptr [ebp - 0x78dc8a40], al; fistp qword ptr [eax + 0xd2]; call dword ptr gs
0x55605549:  cmp dword ptr [ebp + ecx + 0xf], esi; lahf; ror byte ptr [edi], 0xb6; ror byte ptr [ebp + 0x5eff0044], 0x5f; ret; 
0x555f5e6d:  cmp dword ptr [edx + eax*2 - 0x10], -1; pop ebx; ret; 
0x556f3a58:  cmp dword ptr [edx - 9], ecx; call dword ptr [eax]; 
0x5561793d:  cmp dword ptr [edx], 0x26; mov edx, 0xffffffff; cmovne eax, edx; ret; 
0x55617b66:  cmp dword ptr gs
0x5561793c:  cmp dword ptr gs
0x555b2e3c:  cmp eax, 0x4000; sete dl; mov eax, edx; add esp, 0x7c; ret; 
0x555e5850:  cmp eax, 0x5bffffff; ret; 
0x55684532:  cmp eax, 0x81000038; ret; 
0x55682c32:  cmp eax, 0x81000051; ret; 
0x55653d32:  cmp eax, 0x81000340; ret; 
0x555f3c62:  cmp eax, 0xc1d70f66; bsf eax, eax; lea eax, dword ptr [edx + eax + 0x30]; ret; 
0x556f2f3c:  cmp eax, 0xd1cfff6; sar byte ptr [esi + esi*8], 1; jmp dword ptr [edx]; 
0x55646773:  cmp eax, ecx; idiv bh; add esp, 0x18; pop ebx; ret; 
0x555f3d48:  cmp eax, esi; cmova eax, esi; sub eax, edi; pop esi; pop edi; ret; 
0x55663079:  cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x556c535d:  cmp edi, ebp; call dword ptr [eax + 0x2e]; 
0x556c535d:  cmp edi, ebp; call dword ptr [eax + 0x2e]; std; call dword ptr [eax]; 
0x556c5359:  cmp edi, ebp; call dword ptr [eax + 0x3b]; 
0x556c5359:  cmp edi, ebp; call dword ptr [eax + 0x3b]; std; call dword ptr [eax + 0x2e]; std; call dword ptr [eax]; 
0x556c5349:  cmp edi, ebp; call dword ptr [esi + 0x3b]; 
0x556c534d:  cmp edi, ebp; inc dword ptr [eax + 0x3a]; std; push dword ptr [eax + 0xfffd3a]; cmp edi, ebp; call dword ptr [eax + 0x3b]; 
0x556c533d:  cmp edi, ebp; inc dword ptr [esi + 0x3a]; std; push dword ptr [esi + 0x6fffd3a]; cmp edi, ebp; call dword ptr [esi + 0x3b]; 
0x556c5329:  cmp edi, ebp; jmp dword ptr [edx + 0x3b]; 
0x555a3932:  cmp edx, dword ptr [edi]; std; call dword ptr [edi - 0x77]; 
0x556c7f51:  cmp esi, ecx; call eax; 
0x556c7f49:  cmp esi, ecx; push dword ptr [eax + 0x3400014f]; cmp esi, ecx; call eax; 
0x555f3c44:  cmp esp, dword ptr [esi + 0xf]; xlatb; ret 0xc085; 
0x556a5236:  cmpsb byte ptr [esi], byte ptr es
0x556c4578:  cmpsb byte ptr [esi], byte ptr es
0x556e7a59:  cmpsb byte ptr [esi], byte ptr es
0x5567216e:  cmpsb byte ptr [esi], byte ptr es
0x556a6f65:  cmpsd dword ptr [esi], dword ptr es
0x556d2336:  cmpsd dword ptr [esi], dword ptr es
0x556f6a41:  cwde; add al, byte ptr [eax]; mov word ptr [eax + edi*8], gs; call dword ptr [eax]; 
0x556d6a6d:  cwde; add byte ptr [eax], al; mov al, 0x2e; out dx, eax; call dword ptr [esi]; 
0x5556383c:  cwde; add dword ptr [eax], eax; add byte ptr [edx], ah; add byte ptr [eax + eax], cl; ret; 
0x556e6a69:  cwde; add dword ptr [eax], eax; hlt; sbb esp, esi; call eax; 
0x55582439:  cwde; add eax, 0x24548b00; sbb byte ptr [ebx - 0x7ae3dbb4], cl; sal byte ptr [ebp - 0x50], 0x83; ret 0x8901; 
0x556c5624:  cwde; dec esi; std; call dword ptr [edx + 0x4f]; 
0x556c5624:  cwde; dec esi; std; call dword ptr [edx + 0x4f]; std; jmp edx; 
0x5569724a:  cwde; fiadd word ptr [edx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x555f382b:  daa; add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x10]; ret; 
0x556a542b:  daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 3]; pop edi; ret; 
0x556a543b:  daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 4]; pop edi; ret; 
0x556a544b:  daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 5]; pop edi; ret; 
0x556a545b:  daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 6]; pop edi; ret; 
0x556a546b:  daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 8]; pop edi; ret; 
0x556a547b:  daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 9]; pop edi; ret; 
0x556a595b:  daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 1]; pop edi; ret; 
0x556a594b:  daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 2]; pop edi; ret; 
0x556a593b:  daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 3]; pop edi; ret; 
0x556a7c4b:  daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 4]; pop edi; ret; 
0x556a592b:  daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 5]; pop edi; ret; 
0x5560542b:  daa; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 4; ret; 
0x5560543b:  daa; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 5; ret; 
0x5560544b:  daa; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 6; ret; 
0x5560545b:  daa; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 7; ret; 
0x5558502b:  daa; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x555e567b:  daa; add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x55696048:  daa; sbb eax, 0xc381ffff; adc al, 0xee; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x556c7d49:  das; int1; call esp; 
0x556c7d21:  das; int1; jmp esp; 
0x555f2844:  das; push ebp; or dword ptr [eax], eax; add ecx, 0xc60bc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x55644038:  das; xchg edi, ebx; mov eax, 0x36; call dword ptr gs
0x556a242b:  dec byte ptr [ebp - 0x7af00587]; ret; 
0x556c643b:  dec dword ptr [eax + 0x40000ab]; xchg eax, edx; in al, dx; jmp eax; 
0x555f2e32:  dec dword ptr [eax + 0x448b4078]; and al, 0xc; pop ebx; pop esi; ret; 
0x5569436b:  dec dword ptr [eax - 0x2f7600b6]; pop ebx; ret; 
0x556c4e63:  dec dword ptr [eax]; adc ch, bh; jmp edx; 
0x556c517b:  dec dword ptr [ebp + 0x2c06fffd]; std; jmp dword ptr [esi + 0x2c]; 
0x555c4a7c:  dec dword ptr [ebp + 0x468b0076]; or byte ptr [ebx], ch; inc esi; add al, 0x89; ret 0xfac1; 
0x555f3972:  dec dword ptr [ebp + 0x5f103844]; ret; 
0x555d7a71:  dec dword ptr [ebp + 0xb6]; add al, ch; ret; 
0x55596a39:  dec dword ptr [ebp + 0xb6]; add byte ptr [ebp + 0x75168bd2], al; sbb dh, dh; ret 0x7501; 
0x55677959:  dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x18], dl; or eax, 0x81000104; ret; 
0x555f4825:  dec dword ptr [ebp - 0x10cbb36d]; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x555a7723:  dec dword ptr [ebp - 0x7400efac]; inc ebp; mov byte ptr [edi], cl; inc esp; ret 0x4589; 
0x55623c65:  dec dword ptr [ebp - 0xdd4636d]; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x555a5a34:  dec dword ptr [ebx + 0x24048900]; call 0x424d0; add esp, 0x18; pop ebx; ret; 
0x555d725f:  dec dword ptr [ebx + 0x2444c700]; and byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x16a4e73c], al; in eax, dx; ret 0xffff; 
0x55624c40:  dec dword ptr [ebx + 0x39142454]; ret 0x850f; 
0x555a7727:  dec dword ptr [ebx + 0x440f8845]; ret 0x4589; 
0x55635735:  dec dword ptr [ebx + 0x5b0a8902]; ret; 
0x555d4e3f:  dec dword ptr [ebx + 0x74c08500]; adc cl, byte ptr [ecx - 0x76d7dbac]; dec esp; and al, 0x2c; call eax; 
0x55627054:  dec dword ptr [ebx - 0x134d]; dec dword ptr [ebx - 0x9f6b]; jmp dword ptr [ebp - 0x39]; 
0x55626157:  dec dword ptr [ebx - 0x134d]; dec dword ptr [ebx - 0x9f6b]; jmp dword ptr [ebp - 0x75]; 
0x555d2f3b:  dec dword ptr [ebx - 0x15b6d]; inc edi; add al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [edx]; 
0x5558385f:  dec dword ptr [ebx - 0x1d373]; inc dword ptr [edi + 0x6b8cb]; add byte ptr [eax], al; call dword ptr gs
0x55577f36:  dec dword ptr [ebx - 0x74e7dbbc]; push esp; and al, 0x1c; add esp, 0x24; ret; 
0x555d7529:  dec dword ptr [ebx - 0x76c3dbac]; xor al, 0x24; mov dword ptr [esp + 4], ebp; mov dword ptr [esp + 8], edx; call eax; 
0x555f487a:  dec dword ptr [ebx - 0x8f6d]; jmp dword ptr [ebp - 0x75]; 
0x5562705a:  dec dword ptr [ebx - 0x9f6b]; jmp dword ptr [ebp - 0x39]; 
0x5562615d:  dec dword ptr [ebx - 0x9f6b]; jmp dword ptr [ebp - 0x75]; 
0x55624522:  dec dword ptr [ebx - 0xf745]; jmp dword ptr [ebp - 0x39]; 
0x55582632:  dec dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x55642322:  dec dword ptr [ebx - 0xf77d]; jmp dword ptr [esi - 0x39]; 
0x5562704e:  dec dword ptr [ebx - 0xff7d]; dec dword ptr [ebx - 0x134d]; dec dword ptr [ebx - 0x9f6b]; jmp dword ptr [ebp - 0x39]; 
0x556c5777:  dec dword ptr [ebx*2 + 0x5d5cfffd]; std; call dword ptr [esi + 0x5c]; 
0x555d4e21:  dec dword ptr [ecx + 0x54892414]; and al, 0x28; call dword ptr [ebp]; 
0x55584a57:  dec dword ptr [ecx + 0x5f5e5b10]; ret; 
0x555c2d77:  dec dword ptr [ecx + 0x9490]; add byte ptr [ebx - 0x6e76a7b8], cl; mov eax, 0x5b000000; ret; 
0x55663567:  dec dword ptr [ecx + 0xf382444]; xchg eax, esp; ret 0xd285; 
0x55663d37:  dec dword ptr [ecx + 0xf442444]; xchg eax, esp; ret 0xd285; 
0x55645b5d:  dec dword ptr [ecx - 0x47207829]; rol byte ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs
0x556c4563:  dec dword ptr [ecx - 0x56000328]; fdivr st(4); dec ecx; fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x55667975:  dec dword ptr [ecx - 0x72cbdbac]; xchg eax, ebx; call eax; 
0x55617831:  dec dword ptr [ecx]; ret 0x850f; 
0x55643e78:  dec dword ptr [ecx]; ror dword ptr [ecx - 0x3fcef7b8], 1; pop ebx; ret; 
0x555f5b70:  dec dword ptr [edi]; inc ebp; ret 0x748d; 
0x55617944:  dec dword ptr [edi]; inc ebp; ret 0x8dc3; 
0x55605925:  dec dword ptr [edi]; inc ebp; ret 0xa5eb; 
0x555a4629:  dec dword ptr [edi]; inc ebp; ret 0xbd89; 
0x556a3729:  dec dword ptr [edi]; inc esi; ret 0x5d5e; 
0x55596348:  dec dword ptr [edi]; mov fs, word ptr [ebp - 0x76000002]; ret 0x18e9; 
0x55653065:  dec dword ptr [edi]; test dword ptr [esi], edx; add dword ptr [eax], eax; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x556c5227:  dec dword ptr [edx - 0x150002d2]; std; call esp; 
0x555b7873:  dec dword ptr [edx]; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x8589; 
0x556c5c4b:  dec dword ptr [esi + edi*2]; add ah, al; xor al, 0xeb; jmp dword ptr [eax + 0x7e]; 
0x556c6b7b:  dec dword ptr [esi + edx*8 - 0x26fc0000]; out dx, al; call eax; 
0x556c4a7b:  dec dword ptr [esi - 6]; cld; call esp; 
0x556c705b:  dec dword ptr [esp + esi*8]; add byte ptr [esi + edi*8 - 0x11], al; jmp dword ptr [eax - 0xc]; 
0x555f2c42:  dec eax; adc byte ptr [eax + 0x448b1470], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x556d2278:  dec eax; add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; or cl, byte ptr gs
0x555f2b43:  dec eax; add eax, 0xc24448b; pop ebx; pop esi; ret; 
0x55692e43:  dec eax; cld; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x5569436a:  dec eax; dec dword ptr [eax - 0x2f7600b6]; pop ebx; ret; 
0x556d5b35:  dec eax; fsubr st(6); jmp dword ptr [edx]; 
0x556c6e28:  dec eax; fucomi st(7); jmp eax; 
0x556f3447:  dec eax; inc edx; idiv bh; sbb al, 0xd; xor byte ptr [ecx - 0xa], al; jmp dword ptr [edx]; 
0x556c6973:  dec eax; leave; add byte ptr [eax], al; popfd; in eax, dx; jmp dword ptr [eax]; 
0x556f5138:  dec eax; mov cl, 0xf7; jmp dword ptr [esi]; 
0x556e796f:  dec eax; or eax, dword ptr [edx]; pop ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x556f5e37:  dec eax; or ebp, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x556f744a:  dec eax; or edi, dword ptr [ecx + 0xa]; push cs; adc al, 0x43; ret; 
0x556f703f:  dec eax; or esp, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x555c2d7f:  dec eax; pop eax; mov dword ptr [ecx + 0xb8], edx; pop ebx; ret; 
0x556f7d78:  dec eax; pop esi; clc; jmp dword ptr [ebx]; 
0x555f2d29:  dec eax; pop ss; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x55643023:  dec eax; push eax; mov dword ptr [eax + 0x54], edx; xor eax, eax; pop ebx; ret; 
0x555f282b:  dec eax; push ebp; or dword ptr [eax], eax; add ecx, 0xc60d5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x555f2b63:  dec eax; push es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x556d5f28:  dec eax; sub bh, ch; call edx; 
0x556c7c65:  dec ebp; add dword ptr [eax], eax; hlt; sub al, 0xf1; jmp esp; 
0x556f746d:  dec ebp; clc; jmp dword ptr [ebx]; 
0x55612e7d:  dec ebp; fmul dword ptr [ecx + 0x5489240c]; and al, 4; call dword ptr [ebp - 0x34]; 
0x55603165:  dec ebp; mov esp, 0x8301c083; ret 0x3901; 
0x5558572f:  dec ebp; push cs; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x55605e60:  dec ebp; ret 0xc483; 
0x55603420:  dec ebp; shr byte ptr [ecx], 1; ret 0x48b; 
0x556c5551:  dec ebp; std; inc dword ptr [ebx + ecx*2 + 0x4c34fffd]; std; jmp esp; 
0x556c5531:  dec ebp; std; jmp dword ptr [eax + 0x4b]; 
0x55605a2b:  dec ebx; add byte ptr [eax], al; add bl, ch; ret 0xb48d; 
0x55565965:  dec ebx; add byte ptr [eax], al; pushal; clc; adc dword ptr [eax], eax; ret; 
0x556a7054:  dec ebx; lea eax, dword ptr [eax + 9]; pop edi; ret; 
0x556a6034:  dec ebx; lea eax, dword ptr [edi + 9]; pop edi; ret; 
0x556c546d:  dec ebx; std; inc edx; dec ecx; std; call dword ptr [eax]; 
0x556c5555:  dec ebx; std; push dword ptr [esp + ecx*2]; std; jmp esp; 
0x55567f7c:  dec ecx; add byte ptr [eax], al; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0x11; 
0x555e7c47:  dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x555e3867:  dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x556c456b:  dec ecx; fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x555e2b47:  dec ecx; imul dword ptr [ecx]; ret 0x280f; 
0x555e456b:  dec ecx; imul dword ptr [ecx]; ret 0xc301; 
0x555e506b:  dec ecx; ljmp ptr [ecx]; ret 0xc301; 
0x556d6d23:  dec ecx; push cs; add al, 0xc6; ret; 
0x555e7c67:  dec ecx; push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x555b694f:  dec ecx; ret 0x8589; 
0x556e5840:  dec ecx; ret; 
0x556c5471:  dec ecx; std; call dword ptr [eax]; 
0x556c5471:  dec ecx; std; call dword ptr [eax]; dec edx; std; jmp edx; 
0x555f354c:  dec edi; adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], -0x40; pop edi; ret; 
0x556c7f4d:  dec edi; add dword ptr [eax], eax; xor al, 0x3b; int1; call eax; 
0x5560515f:  dec edi; and byte ptr [edi], cl; test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x556f7525:  dec edi; clc; jmp dword ptr [edx]; 
0x55647a3d:  dec edi; idiv edi; mov eax, 1; add esp, 0x18; pop ebx; ret; 
0x55605144:  dec edi; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x55605129:  dec edi; sbb byte ptr [edi], cl; test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x556c562d:  dec edi; std; call dword ptr [edx]; 
0x556c5629:  dec edi; std; jmp edx; 
0x556f5527:  dec edi; xchg byte ptr [edx], al; add bl, byte ptr [eax + 0xe]; add al, 0xc6; ret; 
0x556f5037:  dec edi; xchg byte ptr [edx], al; jno 0x19704a; add al, 0xc6; ret; 
0x55663332:  dec edx; add al, byte ptr [eax]; add ecx, 0x9dcbf; mov eax, dword ptr [ecx - 0x100]; add eax, dword ptr gs
0x555e584c:  dec edx; add cl, byte ptr [edi]; test dword ptr [0x5bffffff], edi; ret; 
0x555e544a:  dec edx; add dword ptr [edi], ecx; test dword ptr [esi], edi; add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x55692e46:  dec edx; cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x55692f7e:  dec edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x55617b34:  dec edx; inc ecx; add byte ptr [ebp + 0x1e], dh; lea esi, dword ptr [esi]; xor eax, eax; ret; 
0x555f5c64:  dec edx; or al, 0x83; ret 0x8310; 
0x555f215f:  dec edx; or byte ptr [eax - 0x776ef86], cl; pop ebx; pop edi; ret; 
0x555e5974:  dec edx; or ecx, dword ptr [edi]; test dword ptr [0x5bfffffe], edx; ret; 
0x555e7b30:  dec edx; pop es; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x555e3750:  dec edx; pop es; mov eax, edi; pop edi; ret; 
0x555e7c70:  dec edx; push es; lea eax, dword ptr [edx + 0xd]; ret; 
0x555e3730:  dec edx; push es; mov eax, edi; pop edi; ret; 
0x556c5475:  dec edx; std; jmp edx; 
0x55694327:  dec edx; sti; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x555f3c59:  dec edx; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x55637a69:  dec esi; add al, 1; ret 0x689; 
0x556c4a7c:  dec esi; cli; cld; call esp; 
0x555b3c3e:  dec esi; imul edi, edi, 0xc4c481ff; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x55617921:  dec esi; mov eax, 0x7f; pop ebx; ret; 
0x555c7529:  dec esi; or al, 0x8b; inc esi; or byte ptr [ecx + 0x29cd29d5], cl; ret 0xe75; 
0x556f4237:  dec esi; ret; 
0x555c774e:  dec esi; sar bh, cl; jmp dword ptr [ecx]; 
0x55605141:  dec esi; sbb al, 0x39; dec edi; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x556c5625:  dec esi; std; call dword ptr [edx + 0x4f]; 
0x556c5625:  dec esi; std; call dword ptr [edx + 0x4f]; std; jmp edx; 
0x556c5635:  dec esi; std; call dword ptr [edx]; 
0x556c5621:  dec esi; std; lcall ptr [eax + 0x52fffd4e]; dec edi; std; jmp edx; 
0x55643a62:  dec esi; sub al, 0x89; push esi; xor byte ptr [ebx + 0x4e894050], cl; xor al, 0xf6; ret 0x7420; 
0x55643a6b:  dec esi; xor al, 0xf6; ret 0x7420; 
0x555d2c55:  dec esp; add al, 0; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x77]; 
0x556d2341:  dec esp; add byte ptr [eax], al; push -0x2b; in al, dx; call dword ptr [eax]; 
0x556d2a49:  dec esp; add dword ptr [0x3870486], 3; pop ecx; add al, 0xa; ret; 
0x556f6879:  dec esp; add dword ptr [0x3870486], 3; salc; add cl, byte ptr [edx]; ret; 
0x55615d28:  dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 7; call dword ptr gs
0x55645e6a:  dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x8e; call dword ptr gs
0x55584775:  dec esp; and al, 0x14; ror eax, 9; xor eax, dword ptr gs
0x555c2f6a:  dec esp; and al, 0x18; mov dword ptr [esp + 4], ecx; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x555d4e4b:  dec esp; and al, 0x2c; call eax; 
0x55645369:  dec esp; and al, 0x54; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14d; call dword ptr gs
0x55676621:  dec esp; and al, 0x5c; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x55623436:  dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs
0x55623b2d:  dec esp; and al, 0xc; mov edi, dword ptr [esp + 8]; xchg edi, ebx; mov eax, 0xdb; call dword ptr gs
0x55644e6d:  dec esp; and al, 0xc; mov esi, eax; xchg edi, ebx; mov eax, 0x92; call dword ptr gs
0x55684f3a:  dec esp; and al, 4; call dword ptr [eax + 4]; 
0x55687e2b:  dec esp; and al, 4; mov dword ptr [esp + 8], esi; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x555a6e74:  dec esp; and al, 4; mov dword ptr [esp], esi; call eax; 
0x55626051:  dec esp; and al, 8; call dword ptr [ebp - 0x78]; 
0x55612e79:  dec esp; and al, 8; lea ecx, dword ptr [ebp - 0x28]; mov dword ptr [esp], ecx; mov dword ptr [esp + 4], edx; call dword ptr [ebp - 0x34]; 
0x555c5c4f:  dec esp; and al, 8; mov dword ptr [esp], edx; call eax; 
0x555c4a3b:  dec esp; and al, 8; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x55645d43:  dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs
0x55606463:  dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4e; call dword ptr gs
0x55623573:  dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xa1; call dword ptr gs
0x556c503b:  dec esp; and ch, bh; call esi; 
0x556c503b:  dec esp; and ch, bh; call esi; pop ds; std; jmp dword ptr [esi]; 
0x55582b27:  dec esp; nop; and al, 0x83; ret 0x3b01; 
0x556d7f45:  dec esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x556e6f4c:  dec esp; popfd; add dword ptr [eax], eax; adc byte ptr [edx], dh; hlt; jmp dword ptr [esi]; 
0x556c5559:  dec esp; std; jmp esp; 
0x556c553d:  dec esp; std; push dword ptr [ebx + ecx*2]; std; jmp esp; 
0x556c527b:  dec esp; std; push dword ptr [esi + 0x6fffd2d]; std; jmp dword ptr [esi + 0x2e]; 
0x5567775a:  dec esp; wait; sti; inc dword ptr [ebx]; xchg eax, esp; ret; 
0x555f4b32:  dec esp; xchg eax, ebp; add byte ptr [ebx + 0x29202454], cl; ret 0xc083; 
0x556c5f5b:  dec esp; xchg eax, edx; add byte ptr [eax], al; imul bl; jmp eax; 
0x555f4828:  dec esp; xor al, 0xef; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x55623d66:  div byte ptr [ebp - 0x11]; add esp, 0x14; pop ebx; pop esi; ret; 
0x555f652a:  div byte ptr [ebx + esi - 0x7d]; ret 0x8310; 
0x556e4c35:  div dl; call dword ptr [eax]; 
0x5564313d:  fadd dword ptr [eax + eax]; add al, ch; sub eax, 0x8100044c; ret; 
0x556a3448:  fadd dword ptr [ebx + 0x5b5d04c4]; ret; 
0x5569745c:  fadd qword ptr [edx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x55696064:  fcomi st(7); ret 1; 
0x556a7738:  fcomp dword ptr [edi + 0x5e]; pop ebx; ret; 
0x556c4f38:  fcomp qword ptr [esi]; std; ljmp ptr [edi + ebx]; std; call dword ptr [esi]; 
0x556e7d2d:  fcompi st(4); call dword ptr [edx]; 
0x5561657b:  fdiv dword ptr [ebp + 5]; mov eax, 0x80000000; mov dword ptr gs
0x556d6332:  fdiv st(2), st(0); jmp dword ptr [edx]; 
0x556e665d:  fdiv st(3); jmp dword ptr [esi]; 
0x556c4925:  fdiv st(4), st(0); call dword ptr [eax]; 
0x556c475d:  fdiv st(4), st(0); inc dword ptr [eax - 0x4f000327]; frndint; jmp eax; 
0x556c4755:  fdiv st(4), st(0); push dword ptr [0x75fffcdc]; fdiv st(4), st(0); inc dword ptr [eax - 0x4f000327]; frndint; jmp eax; 
0x556c4759:  fdiv st(4), st(0); push dword ptr [ebp - 0x24]; cld; inc dword ptr [eax - 0x4f000327]; frndint; jmp eax; 
0x556c4935:  fdivp st(4); call dword ptr [eax - 0x21]; 
0x556c4935:  fdivp st(4); call dword ptr [eax - 0x21]; cld; jmp eax; 
0x556c4931:  fdivp st(4); inc eax; fdivp st(4); call dword ptr [eax - 0x21]; 
0x556c4931:  fdivp st(4); inc eax; fdivp st(4); call dword ptr [eax - 0x21]; cld; jmp eax; 
0x556c4c3c:  fdivp st(6); cld; call dword ptr [ebp + edi*8 - 4]; jmp esp; 
0x556d604e:  fdivr st(2); jmp dword ptr [edx]; 
0x556c4341:  fdivr st(4); call dword ptr [ebx - 0x2c000328]; fdivr st(4); call dword ptr [ebx]; 
0x556c4349:  fdivr st(4); call dword ptr [ebx]; 
0x556c4349:  fdivr st(4); call dword ptr [ebx]; frndint; call dword ptr [ebx - 0x27]; 
0x556c4531:  fdivr st(4); call dword ptr [edx - 0x4d000328]; fdivr st(4); call edx; 
0x556c4345:  fdivr st(4); call ebx; 
0x556c4345:  fdivr st(4); call ebx; fdivr st(4); call dword ptr [ebx]; 
0x556c4345:  fdivr st(4); call ebx; fdivr st(4); call dword ptr [ebx]; frndint; call dword ptr [ebx - 0x27]; 
0x556c4539:  fdivr st(4); call edx; 
0x556c4561:  fdivr st(4); dec dword ptr [ecx - 0x56000328]; fdivr st(4); dec ecx; fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x556c4569:  fdivr st(4); dec ecx; fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x556c4571:  fdivr st(4); inc dword ptr [esi - 0x59000328]; fdivr st(4); inc esi; fdivr st(4); jmp dword ptr [ebx - 0x28]; 
0x556c4579:  fdivr st(4); inc esi; fdivr st(4); jmp dword ptr [ebx - 0x28]; 
0x556c433d:  fdivr st(4); jmp dword ptr [ebx - 0x28]; 
0x556c456d:  fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x556c4565:  fdivr st(4); ljmp ptr [ecx - 0x36000328]; fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x556c452d:  fdivr st(4); push dword ptr [edx - 0x28]; cld; call dword ptr [edx - 0x4d000328]; fdivr st(4); call edx; 
0x556e2434:  fdivr st(5), st(0); int1; call dword ptr [ebx]; 
0x556e3f65:  fdivrp st(2); jmp dword ptr [ecx]; 
0x555e4644:  fiadd dword ptr [ebx - 0x79f0ef15]; ret 0x15; 
0x556a4853:  fiadd dword ptr [ecx]; mov byte ptr [edx + edx*8 + 0xa2840f], 0; add dh, dh; ret 0x7501; 
0x5569724b:  fiadd word ptr [edx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x555b3562:  ficom dword ptr [eax + eax]; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x12e; call dword ptr gs
0x55623b37:  fild dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs
0x55696f71:  fild word ptr [edx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x55645d41:  fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x4a; call dword ptr gs
0x55606461:  fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x4e; call dword ptr gs
0x55623571:  fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xa1; call dword ptr gs
0x55663133:  fimul word ptr [ecx]; add byte ptr [ecx - 0x76d7db8c], cl; ret 0xeac1; 
0x55577a26:  fimul word ptr [edi]; mov byte ptr [0x9389de87], al; mov al, byte ptr [0x89000036]; ret 0xc589; 
0x55647756:  fistp qword ptr [eax + 0x12b]; call dword ptr gs
0x555b356a:  fistp qword ptr [eax + 0x12e]; call dword ptr gs
0x55615c65:  fistp qword ptr [eax + 0x72]; call dword ptr gs
0x55644d71:  fistp qword ptr [eax + 0x91]; call dword ptr gs
0x55647842:  fistp qword ptr [eax + 0xc1]; call dword ptr gs
0x5561755d:  fistp qword ptr [eax + 0xd2]; call dword ptr gs
0x55617462:  fistp qword ptr [eax + 0xd3]; call dword ptr gs
0x55623b35:  fistp qword ptr [eax + 0xdb]; call dword ptr gs
0x55612671:  fisttp dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x555f662c:  fisttp qword ptr [ebx - 0x1577d]; jmp dword ptr [ebp - 0x75]; 
0x55617063:  fisub dword ptr [ebp - 0x77]; or eax, 0x68; nop; lea esi, dword ptr [esi]; ret; 
0x556c5220:  fisubr dword ptr [0x2e2afffd]; std; dec dword ptr [edx - 0x150002d2]; std; call esp; 
0x556a624f:  fld qword ptr [ecx]; add byte ptr [eax], al; mov eax, ecx; ret; 
0x55697352:  fld qword ptr [edx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x5563236c:  fldcw word ptr [ebx]; mov word ptr [ebx - 0xcec7c], ss; jmp ecx; 
0x556e692d:  fldenv dword ptr [eax - 0xc]; jmp dword ptr [edx]; 
0x55605572:  fldpi; ret; 
0x556d5b66:  fldz; jmp dword ptr [edx]; 
0x556d3474:  fmul dword ptr [ebx]; add byte ptr [eax], al; mov byte ptr [ebx], al; out dx, al; call dword ptr [ecx]; 
0x55612e7e:  fmul dword ptr [ecx + 0x5489240c]; and al, 4; call dword ptr [ebp - 0x34]; 
0x55663338:  fmul qword ptr [ecx]; add byte ptr [ebx - 0xff7f], cl; jmp dword ptr [ebp + 3]; 
0x55666733:  fnstcw word ptr [ecx - 1]; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x556c4769:  frndint; call dword ptr [eax]; 
0x556c434d:  frndint; call dword ptr [ebx - 0x27]; 
0x556c434d:  frndint; call dword ptr [ebx - 0x27]; cld; call dword ptr [ebx - 0x2c000327]; frndint; call dword ptr [ebx]; 
0x556c4351:  frndint; call dword ptr [ebx - 0x2c000327]; frndint; call dword ptr [ebx]; 
0x556c4359:  frndint; call dword ptr [ebx]; 
0x556c4355:  frndint; call ebx; 
0x556c4355:  frndint; call ebx; frndint; call dword ptr [ebx]; 
0x556c4765:  frndint; jmp eax; 
0x556c4761:  frndint; push dword ptr [eax - 0x1f000327]; frndint; call dword ptr [eax]; 
0x556d616a:  fsqrt; jmp dword ptr [edx]; 
0x556d613a:  fsubp st(6); jmp dword ptr [edx]; 
0x556c6e71:  fsubp st(7); call dword ptr [eax - 0x17]; 
0x556c6e69:  fsubp st(7); jmp dword ptr [eax - 0x18]; 
0x556c6e61:  fsubp st(7); push dword ptr [eax]; call 0xdec08e6a; out dx, eax; jmp dword ptr [eax - 0x18]; 
0x55617d69:  fsubr dword ptr [ebx]; test byte ptr [ebx - 0xe9280], dh; jmp eax; 
0x556d2645:  fsubr st(4); jmp dword ptr [edi]; 
0x556c6e31:  fucomi st(7); call eax; 
0x556c6e29:  fucomi st(7); jmp eax; 
0x556c6e21:  fucomi st(7); push dword ptr [eax + 0x480000e6]; fucomi st(7); jmp eax; 
0x556c6c21:  fucompi st(6); call esp; 
0x556c6c39:  fucompi st(6); jmp dword ptr [eax]; 
0x556c6c31:  fucompi st(6); push dword ptr [edx + ebx*8]; add byte ptr [eax], al; test bh, bl; out dx, al; jmp dword ptr [eax]; 
0x556e533c:  hlt; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x556e7422:  hlt; jmp dword ptr [ebx + 1]; 
0x556e7a5a:  hlt; jmp dword ptr [edi]; 
0x556e6f52:  hlt; jmp dword ptr [esi]; 
0x55692e41:  hlt; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x5557515b:  hlt; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x55585c21:  hlt; pop ebx; pop esi; pop edi; pop ebp; ret 8; 
0x556a585a:  hlt; pop edi; ret; 
0x556e6a6c:  hlt; sbb esp, esi; call eax; 
0x556c7c68:  hlt; sub al, 0xf1; jmp esp; 
0x555f556b:  idiv al; jmp dword ptr [esi - 0x70]; 
0x555e634c:  idiv bh; inc dword ptr [eax + 0xf000a79]; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x55634d64:  idiv bh; jmp dword ptr [esi - 0x39]; 
0x556f2551:  idiv bh; sbb al, 0xd; in al, dx; xor al, 0xf6; jmp dword ptr [edx]; 
0x556f2051:  idiv bh; sbb al, 0xd; iretd; sub esi, esi; jmp dword ptr [edx]; 
0x556f3a45:  idiv bh; sbb al, 0xd; mov dword ptr [ebp - 0xa], ecx; jmp dword ptr [edx]; 
0x556f2f3d:  idiv bh; sbb al, 0xd; sar byte ptr [esi + esi*8], 1; jmp dword ptr [edx]; 
0x556f3449:  idiv bh; sbb al, 0xd; xor byte ptr [ecx - 0xa], al; jmp dword ptr [edx]; 
0x55687a4b:  idiv byte ptr [eax + 4]; add esp, 0xc; ret; 
0x55655a61:  idiv byte ptr [ecx]; ret 0x1e7e; 
0x556c544c:  idiv byte ptr [edi*8 - 0x2c3ff01]; call dword ptr [eax + 0x3c]; 
0x55646c4d:  idiv edi; add esp, 0x18; mov eax, 1; pop ebx; ret; 
0x55647a3f:  idiv edi; mov eax, 1; add esp, 0x18; pop ebx; ret; 
0x556f3b56:  idiv edi; ret; 
0x556c5f59:  imul bl; dec esp; xchg eax, edx; add byte ptr [eax], al; imul bl; jmp eax; 
0x556c5f61:  imul bl; jmp eax; 
0x555e2b48:  imul dword ptr [ecx]; ret 0x280f; 
0x555e456c:  imul dword ptr [ecx]; ret 0xc301; 
0x556e2741:  imul eax, dword ptr [ecx], 0xa; ret; 
0x556f3d41:  imul eax, dword ptr [edx], 0; mov word ptr [edi - 9], es; jmp dword ptr [esi]; 
0x55605b43:  imul eax, edx; ret; 
0x556d2f55:  imul ebp; jmp dword ptr [ebx]; 
0x556d604d:  imul ebx, eax, -6; jmp dword ptr [edx]; 
0x556c4560:  imul ebx, eax, 0xd889fffc; cld; ljmp ptr [ecx - 0x36000328]; fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x555d2c4c:  imul ecx, dword ptr [ebx + 0x194093], 0x4c8b8d00; add al, 0; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x77]; 
0x555c3526:  imul ecx, dword ptr [ebx - 0x3f7a97ba], 0x468b5a7e; push esp; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x555b3c3f:  imul edi, edi, 0xc4c481ff; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x555f5c2b:  imul edi, esi, -1; add esp, 0x18; pop ebx; ret; 
0x5566716d:  imul edx, eax, 0x8357e983; std; or dword ptr [edi], ecx; inc esi; int 0x80; 
0x556d5575:  imul edx, ecx, -0x12; jmp dword ptr [edx]; 
0x55606667:  imul edx, edx, 0xe10; pop esi; add eax, edx; ret; 
0x555c6f51:  in al, 0; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0xe8]; add esp, 0xec; ret; 
0x556d296c:  in al, 0x30; in eax, dx; call dword ptr [ebx + 1]; 
0x55682b30:  in al, 0x3a; add byte ptr [eax], al; add dword ptr [ebp + 0x75], esi; add esp, 8; pop ebx; ret; 
0x556c6828:  in al, 0x6c; in eax, dx; jmp dword ptr [eax - 0x3f]; 
0x556c6460:  in al, 0x94; in al, dx; ljmp ptr [eax + 0x40000ac]; xchg eax, esi; in al, dx; call eax; 
0x556c6b78:  in al, 0xd4; out dx, al; dec dword ptr [esi + edx*8 - 0x26fc0000]; out dx, al; call eax; 
0x556a6229:  in al, 0xf; test dword ptr [eax - 0x77ffffff], esi; ret 0xe280; 
0x556a6354:  in al, 0xf; test dword ptr [ebp - 0x78000000], eax; ret 0xe280; 
0x5569626b:  in al, dx; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x556c606a:  in al, dx; call dword ptr [eax - 0x68]; 
0x556c6172:  in al, dx; call dword ptr [eax]; 
0x556c615a:  in al, dx; call eax; 
0x556c4979:  in al, dx; cld; call dword ptr [edx]; 
0x556c4969:  in al, dx; cld; jmp dword ptr [edx - 0x13]; 
0x55645457:  in al, dx; cmp al, 0xe8; adc eax, 0x81000429; ret; 
0x556c643a:  in al, dx; dec dword ptr [eax + 0x40000ab]; xchg eax, edx; in al, dx; jmp eax; 
0x556c6372:  in al, dx; jmp dword ptr [eax - 0x5a]; 
0x556c607a:  in al, dx; jmp dword ptr [eax]; 
0x556d2646:  in al, dx; jmp dword ptr [edi]; 
0x556c6462:  in al, dx; ljmp ptr [eax + 0x40000ac]; xchg eax, esi; in al, dx; call eax; 
0x55617051:  in al, dx; mov eax, 0x14; call dword ptr gs
0x556e3367:  in al, dx; ret 0xfff1; 
0x556f2555:  in al, dx; xor al, 0xf6; jmp dword ptr [edx]; 
0x556d277d:  in eax, 0xb6; in al, dx; jmp dword ptr [edx]; 
0x556e336d:  in eax, 0xbf; int1; jmp dword ptr [edx]; 
0x5560735b:  in eax, 2; add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x3818]; add esp, 8; pop ebx; ret; 
0x55624c49:  in eax, dx; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret 0x840f; 
0x55696162:  in eax, dx; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x556c6f2d:  in eax, dx; add byte ptr [eax], al; aam 0xee; out dx, eax; jmp dword ptr [eax]; 
0x555f3967:  in eax, dx; add eax, ecx; pop edi; ret; 
0x556c685a:  in eax, dx; call dword ptr [eax]; ret 0; 
0x556d296e:  in eax, dx; call dword ptr [ebx + 1]; 
0x556c687a:  in eax, dx; call eax; 
0x556c687a:  in eax, dx; call eax; ret 0; 
0x556d3122:  in eax, dx; jmp dword ptr [eax + 1]; 
0x556c683a:  in eax, dx; jmp dword ptr [eax - 0x3d]; 
0x556c682a:  in eax, dx; jmp dword ptr [eax - 0x3f]; 
0x556c6822:  in eax, dx; jmp dword ptr [eax]; 
0x556c6852:  in eax, dx; jmp eax; 
0x555d2d64:  in eax, dx; mov dword ptr [esp + 0x18], edx; mov dword ptr [esp], 0; call dword ptr [ecx]; 
0x555d726f:  in eax, dx; ret 0xffff; 
0x556c4227:  inc dword ptr [0x35fffcd4]; aam 0xfc; jmp dword ptr [ebp - 0x2c]; 
0x556c534f:  inc dword ptr [eax + 0x3a]; std; push dword ptr [eax + 0xfffd3a]; cmp edi, ebp; call dword ptr [eax + 0x3b]; 
0x556c484b:  inc dword ptr [eax + 0x70fffce8]; out 0xfc, al; call dword ptr [eax]; 
0x555e634e:  inc dword ptr [eax + 0xf000a79]; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x556c4e2f:  inc dword ptr [eax + 2]; std; call eax; 
0x556c4e2f:  inc dword ptr [eax + 2]; std; call eax; add bh, ch; jmp dword ptr [eax + 3]; 
0x556c4953:  inc dword ptr [eax - 0x1d]; cld; call eax; 
0x556c4953:  inc dword ptr [eax - 0x1d]; cld; call eax; jecxz 0x166957; jmp dword ptr [eax - 0x1c]; 
0x556c4f53:  inc dword ptr [eax - 0x2f0002e2]; push ds; std; jmp dword ptr [eax]; 
0x556c475f:  inc dword ptr [eax - 0x4f000327]; frndint; jmp eax; 
0x555a3e64:  inc dword ptr [eax - 0x50743]; jmp dword ptr [eax]; 
0x555a2043:  inc dword ptr [eax - 0x53f43]; jmp dword ptr [eax]; 
0x556c5977:  inc dword ptr [eax - 0x6d]; cld; call eax; 
0x555a7e51:  inc dword ptr [eax - 0xb443]; jmp dword ptr [edi + 0xf]; 
0x556c4c7f:  inc dword ptr [eax - 3]; cld; call eax; 
0x556c4267:  inc dword ptr [eax]; aam 0xfc; push dword ptr [eax]; aam 0xfc; jmp dword ptr [eax - 0x2c]; 
0x55663075:  inc dword ptr [eax]; add byte ptr [eax], al; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x556a233c:  inc dword ptr [eax]; add byte ptr [edi], cl; test dword ptr [ecx - 0x7cfffff2], ebp; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x556c544f:  inc dword ptr [eax]; cmp al, 0xfd; call dword ptr [eax + 0x3c]; 
0x556c5357:  inc dword ptr [eax]; cmp edi, ebp; call dword ptr [eax + 0x3b]; 
0x556c4d47:  inc dword ptr [eax]; or al, 0xfd; call dword ptr [eax - 0x7f0002f4]; or bh, ch; jmp dword ptr [eax]; 
0x5566305f:  inc dword ptr [eax]; ret; 
0x556c4a33:  inc dword ptr [eax]; stc; cld; call edx; 
0x556c537f:  inc dword ptr [eax]; xor eax, 0x3590fffd; std; jmp dword ptr [eax]; 
0x55636741:  inc dword ptr [ebp + 0x74c289c0]; ret; 
0x55676f2c:  inc dword ptr [ebp - 0x397bf040]; add byte ptr [eax], al; add byte ptr [ebx + 0x1c42484], cl; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x55687965:  inc dword ptr [ebp - 0x74f18b40]; inc esp; and al, 0x1c; add esp, 0x28; pop ebx; ret; 
0x5568223d:  inc dword ptr [ebx + 0x16ba19f8]; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x8965; 
0x55655324:  inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x55685551:  inc dword ptr [ebx + 0x748b08ec]; and al, 0x20; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 4; 
0x556c5553:  inc dword ptr [ebx + ecx*2 + 0x4c34fffd]; std; jmp esp; 
0x5557696c:  inc dword ptr [ebx - 0xb77b]; jmp dword ptr [eax]; 
0x55685b71:  inc dword ptr [ebx - 0xf76bf3c]; pop esi; pop edi; pop ebp; ret; 
0x556c3e33:  inc dword ptr [ebx]; sar esp, 1; push dword ptr [ebx]; sar esp, 1; jmp dword ptr [ebx - 0x2f]; 
0x55597f51:  inc dword ptr [ecx + 0x1fcc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x55697f3d:  inc dword ptr [ecx + 0x2d1a2c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x55697458:  inc dword ptr [ecx + 0x2dc87c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x5569734e:  inc dword ptr [ecx + 0x2dd91c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x55697247:  inc dword ptr [ecx + 0x2de98c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x5569713e:  inc dword ptr [ecx + 0x2dfa1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x55696f6d:  inc dword ptr [ecx + 0x2dfb2c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x5569714e:  inc dword ptr [ecx + 0x2e091c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x55696478:  inc dword ptr [ecx + 0x2eaa7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x5569636e:  inc dword ptr [ecx + 0x2ebb1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x55696267:  inc dword ptr [ecx + 0x2ecb8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x5569615e:  inc dword ptr [ecx + 0x2edc1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x5569604b:  inc dword ptr [ecx + 0x2ee14c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x5569616e:  inc dword ptr [ecx + 0x2eeb1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x55693768:  inc dword ptr [ecx + 0x31437c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x5569227e:  inc dword ptr [ecx + 0x32521c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x555b3c41:  inc dword ptr [ecx + 0xc4c4]; add byte ptr [ebx + 0x5e], bl; ret; 
0x555f3926:  inc dword ptr [ecx]; clc; pop edi; ret; 
0x555f3963:  inc dword ptr [ecx]; clc; xor ch, ch; add eax, ecx; pop edi; ret; 
0x5558376d:  inc dword ptr [edi + 0x6b8cb]; add byte ptr [eax], al; call dword ptr gs
0x556c4c4f:  inc dword ptr [edi*8 - 0x26b0004]; cld; push dword ptr [esi + edi*8]; cld; call esp; 
0x556c4673:  inc dword ptr [edx + ebx*8 - 0x254b0004]; cld; jmp esp; 
0x556c402f:  inc dword ptr [edx - 0x5d00032f]; sar esp, 1; inc edx; sar esp, 1; jmp edx; 
0x556c585f:  inc dword ptr [edx]; pop esi; std; call dword ptr [edx + 0x5e]; 
0x556c533f:  inc dword ptr [esi + 0x3a]; std; push dword ptr [esi + 0x6fffd3a]; cmp edi, ebp; call dword ptr [esi + 0x3b]; 
0x556c4e5f:  inc dword ptr [esi + 0x8fffd0f]; adc ch, bh; jmp edx; 
0x556c4f43:  inc dword ptr [esi - 0x290002e2]; push ds; std; jmp dword ptr [esi]; 
0x556c4573:  inc dword ptr [esi - 0x59000328]; fdivr st(4); inc esi; fdivr st(4); jmp dword ptr [ebx - 0x28]; 
0x556c543f:  inc dword ptr [esi]; cmp al, 0xfd; call dword ptr [esi + 0x3c]; 
0x556c5347:  inc dword ptr [esi]; cmp edi, ebp; call dword ptr [esi + 0x3b]; 
0x556c517f:  inc dword ptr [esi]; sub al, 0xfd; jmp dword ptr [esi + 0x2c]; 
0x556c4e30:  inc eax; add bh, ch; call eax; 
0x556c4e30:  inc eax; add bh, ch; call eax; add bh, ch; jmp dword ptr [eax + 3]; 
0x555b2e3e:  inc eax; add byte ptr [eax], al; sete dl; mov eax, edx; add esp, 0x7c; ret; 
0x556e537b:  inc eax; add esi, dword ptr [edx]; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x55577e45:  inc eax; add esp, 0x44; ret; 
0x55692e7b:  inc eax; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x55655234:  inc eax; cmove eax, edx; ret; 
0x556c5350:  inc eax; cmp bh, ch; push dword ptr [eax + 0xfffd3a]; cmp edi, ebp; call dword ptr [eax + 0x3b]; 
0x555c6127:  inc eax; cmp byte ptr [ebp - 0xcfc8740], al; ret; 
0x556f6a40:  inc eax; cwde; add al, byte ptr [eax]; mov word ptr [eax + edi*8], gs; call dword ptr [eax]; 
0x556c4933:  inc eax; fdivp st(4); call dword ptr [eax - 0x21]; 
0x556c4933:  inc eax; fdivp st(4); call dword ptr [eax - 0x21]; cld; jmp eax; 
0x556f3d40:  inc eax; imul eax, dword ptr [edx], 0; mov word ptr [edi - 9], es; jmp dword ptr [esi]; 
0x55605b21:  inc eax; inc edx; str word ptr [ebx - 0x76dfdba4]; ret 0x7c8b; 
0x556c4954:  inc eax; jecxz 0x166953; call eax; 
0x556c4954:  inc eax; jecxz 0x166953; call eax; jecxz 0x166957; jmp dword ptr [eax - 0x1c]; 
0x556e5a40:  inc eax; mov byte ptr [ecx], al; add byte ptr [edx - 0xd], bl; jmp dword ptr [eax + 3]; 
0x555d7b61:  inc eax; mov dword ptr [esp + 4], edx; call eax; 
0x555f2e35:  inc eax; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x55685b74:  inc eax; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x55687c53:  inc eax; mov edi, dword ptr [esp + 0x44]; mov dword ptr [edx], ecx; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x556a7076:  inc eax; or al, 0x5f; ret; 
0x555f5b7a:  inc eax; pop esi; pop edi; pop ebp; ret; 
0x55687935:  inc eax; pop esp; ret; 
0x55687925:  inc eax; push eax; ret; 
0x556a7036:  inc eax; push es; pop edi; ret; 
0x556c4e4f:  inc eax; push es; std; call dword ptr [eax + 7]; 
0x556c4e4f:  inc eax; push es; std; call dword ptr [eax + 7]; std; jmp eax; 
0x556d2640:  inc eax; push esp; add byte ptr [eax], al; pushfd; fsubr st(4); jmp dword ptr [edi]; 
0x556c6864:  inc eax; ret 0; 
0x5562545a:  inc eax; sbb al, 0; add byte ptr [eax], al; add dh, dh; ret 0xc740; 
0x55627641:  inc eax; sbb al, 0x83; ret 0x8501; 
0x555d2c4f:  inc eax; sbb dword ptr [eax], eax; add byte ptr [ebp + 0x44c8b], cl; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x77]; 
0x556f2c30:  inc eax; sub edi, esi; call dword ptr [ecx]; 
0x556c5978:  inc eax; xchg eax, ebx; cld; call eax; 
0x556c5973:  inc eax; xchg eax, edx; cld; inc dword ptr [eax - 0x6d]; cld; call eax; 
0x55585179:  inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x55585139:  inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x55585059:  inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 1; ret; 
0x55585159:  inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 4; ret; 
0x55585079:  inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 8; ret; 
0x556c536f:  inc eax; xor bh, ch; call dword ptr [eax + 0x33]; 
0x556c536f:  inc eax; xor bh, ch; call dword ptr [eax + 0x33]; std; jmp eax; 
0x55655a5c:  inc ebp; adc al, 0x39; ret 0xf67c; 
0x55576068:  inc ebp; adc al, 0x83; ret 0x108; 
0x55655a4f:  inc ebp; adc al, 0x8b; push ecx; adc al, 0x39; ret 0xa7d; 
0x55644068:  inc ebp; add byte ptr [ecx - 0x2078dbfc], cl; mov eax, 0x36; call dword ptr gs
0x556d2d32:  inc ebp; in eax, dx; jmp dword ptr [edx]; 
0x555a7358:  inc ebp; mov ah, 0xe9; ret; 
0x555a7729:  inc ebp; mov byte ptr [edi], cl; inc esp; ret 0x4589; 
0x555a6a64:  inc ebp; mov esp, 0x8904c683; ret 0xfac1; 
0x556e7957:  inc ebp; or eax, dword ptr [ebx]; aam 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x556d5357:  inc ebp; or eax, dword ptr [ebx]; add word ptr [edx], cx; push cs; adc al, 0x43; ret; 
0x556e712f:  inc ebp; or eax, dword ptr [ebx]; cmp byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x556d7f42:  inc ebp; or eax, dword ptr [edx]; dec esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x556f647b:  inc ebp; or eax, dword ptr [edx]; pop esp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x556d2627:  inc ebp; or eax, dword ptr [edx]; push esi; ret; 
0x556d2234:  inc ebp; or esi, dword ptr [esi + 0xa]; ret; 
0x55646421:  inc ebp; push 0xf189ffff; mov edx, eax; xchg ebx, ecx; mov eax, 6; call dword ptr gs
0x555c2a6b:  inc ebp; push esp; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x555f5b72:  inc ebp; ret 0x748d; 
0x55617946:  inc ebp; ret 0x8dc3; 
0x55605927:  inc ebp; ret 0xa5eb; 
0x555a462b:  inc ebp; ret 0xbd89; 
0x5564552f:  inc ebp; ror byte ptr [ebp + 0x5e5bf465], 1; pop edi; pop ebp; ret 4; 
0x556d5755:  inc ebp; shr dh, cl; jmp dword ptr [edx]; 
0x556f3e29:  inc ebx; add dword ptr [0x3870486], 2; jno 0x195e3d; ret; 
0x556e2739:  inc ebx; add dword ptr [0x3870486], 3; imul eax, dword ptr [ecx], 0xa; ret; 
0x556d5e6d:  inc ebx; add dword ptr [0x3870486], 3; int1; add dword ptr [edx], ecx; ret; 
0x556e5f69:  inc ebx; add dword ptr [0x3870486], 3; push ebx; add cl, byte ptr [edx]; ret; 
0x556e5c35:  inc ebx; add dword ptr [0x3870486], 3; xchg byte ptr [edx + ecx], al; ret; 
0x556d203d:  inc ebx; or cl, byte ptr [esi]; or al, 0x44; ret; 
0x556d203b:  inc ebx; or eax, dword ptr [ebx + 0xa]; push cs; or al, 0x44; ret; 
0x556f444f:  inc ebx; or eax, dword ptr [ebx]; aad 1; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x556e683f:  inc ebx; or eax, dword ptr [edx]; out 0xa, al; ret; 
0x556f6075:  inc ebx; or eax, dword ptr [edx]; push esi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x556d273a:  inc ebx; or ebx, dword ptr [edi + 0xa]; push cs; adc al, 0x43; ret; 
0x556d297f:  inc ebx; push cs; adc byte ptr [ebx + 0x300e4304], al; add ah, byte ptr [ecx + 0x43100e0a]; ret; 
0x556f6e53:  inc ebx; push cs; adc byte ptr [ebx + 0xc0e7e04], al; ret; 
0x556f6e4e:  inc ebx; push cs; or al, 0x86; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xc0e7e04], al; ret; 
0x556c3e43:  inc ebx; sar esp, 1; push ebx; sar esp, 1; jmp dword ptr [ebx]; 
0x556e5f39:  inc ebx; xchg dword ptr [ebx], eax; inc edx; add dword ptr [0x5d030486], 6; ret; 
0x555f5f28:  inc ecx; add al, 0; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x555e7a56:  inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, dword ptr [edx + 5]; pop edi; ret; 
0x55626d77:  inc ecx; add al, 0x85; ror byte ptr [edi], 0x94; ret 0xa5e9; 
0x55617321:  inc ecx; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x55617b35:  inc ecx; add byte ptr [ebp + 0x1e], dh; lea esi, dword ptr [esi]; xor eax, eax; ret; 
0x555e3667:  inc ecx; add cl, byte ptr [eax - 0x776fdbe]; pop edi; ret; 
0x55655232:  inc ecx; add dword ptr [eax + 0xf], eax; inc esp; ret 0x8dc3; 
0x556f446a:  inc ecx; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x555e7a75:  inc ecx; add ecx, dword ptr [ecx + 0x428d0342]; push es; pop edi; ret; 
0x55644a66:  inc ecx; clc; pop ds; add esp, 0xc; ret; 
0x556e255f:  inc ecx; mov dword ptr [ecx + 0xc], 0x41c50404; or ebp, dword ptr [esi + 0xa]; ret; 
0x556e632a:  inc ecx; mov dword ptr [ecx + 0xc], 0x41c50404; or edx, dword ptr [esi + 0xa]; ret; 
0x556d382f:  inc ecx; mov dword ptr [ecx + 0xc], 0x44c50404; or ebx, dword ptr [edx + 0xa]; ret; 
0x55655a74:  inc ecx; or al, 0x39; ret 0x1474; 
0x556e2561:  inc ecx; or al, 4; add al, 0xc5; inc ecx; or ebp, dword ptr [esi + 0xa]; ret; 
0x556e632c:  inc ecx; or al, 4; add al, 0xc5; inc ecx; or edx, dword ptr [esi + 0xa]; ret; 
0x556d3831:  inc ecx; or al, 4; add al, 0xc5; inc esp; or ebx, dword ptr [edx + 0xa]; ret; 
0x555e7c25:  inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; ret; 
0x555e3845:  inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x556e206b:  inc ecx; or eax, dword ptr [ebx]; lea eax, dword ptr [ebx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x556f4522:  inc ecx; or eax, dword ptr [ebx]; pop edx; add dword ptr [edx], ecx; ret; 
0x556e4542:  inc ecx; or eax, dword ptr [ebx]; push ecx; add dword ptr [edx], ecx; ret; 
0x556d6b74:  inc ecx; or eax, dword ptr [edx]; inc edi; ret; 
0x556f3d23:  inc ecx; or eax, dword ptr [edx]; mov cs, word ptr [edx]; push cs; adc al, 0x43; ret; 
0x556e2566:  inc ecx; or ebp, dword ptr [esi + 0xa]; ret; 
0x556f7759:  inc ecx; or ebx, dword ptr [eax + 0xa]; ret; 
0x556f385d:  inc ecx; or ebx, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x556e6331:  inc ecx; or edx, dword ptr [esi + 0xa]; ret; 
0x555e3825:  inc ecx; pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x556e7a30:  inc ecx; push cs; adc al, 0x83; add eax, 0x2400e43; ret 0xe0a; 
0x556e2e4b:  inc ecx; push cs; or byte ptr [ebx + 0x40e4502], al; ret; 
0x556e2d56:  inc ecx; push cs; or byte ptr [ebx + 0x40e4802], al; ret; 
0x556a6471:  inc ecx; push es; ret; 
0x555b4a6b:  inc edi; adc al, 0xc1; clc; add bh, byte ptr [ecx]; ret 0x1974; 
0x555d4f55:  inc edi; add al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [eax]; 
0x556a5441:  inc edi; add al, 0x5f; ret; 
0x55634469:  inc edi; and byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x556a5921:  inc edi; cli; pop edi; ret; 
0x556a5859:  inc edi; hlt; pop edi; ret; 
0x555f3a62:  inc edi; lcall ptr [esi + 0x5f]; pop ebp; ret; 
0x55615e28:  inc edi; mov eax, ebp; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x11c; call dword ptr gs
0x55623a7b:  inc edi; mov eax, ebp; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0xb5; call dword ptr gs
0x55634963:  inc edi; or byte ptr [ecx], bh; ret 0xd772; 
0x556f3e26:  inc edi; or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; jno 0x195e3d; ret; 
0x556d6f7b:  inc edi; or eax, dword ptr [edx]; insd dword ptr es
0x556f5d47:  inc edi; or eax, dword ptr [edx]; lodsd eax, dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x556e7634:  inc edi; or eax, dword ptr [edx]; push ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x556e2469:  inc edi; or eax, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x556a526e:  inc edi; pop es; pop edi; ret; 
0x556f7c6a:  inc edi; push cs; or byte ptr [esi + ecx + 4], al; ret; 
0x556a5461:  inc edi; push es; pop edi; ret; 
0x556d6b77:  inc edi; ret; 
0x556a5941:  inc edi; std; pop edi; ret; 
0x555f3a76:  inc edi; std; pop esi; pop edi; pop ebp; ret; 
0x556a5931:  inc edi; sti; pop edi; ret; 
0x555e7a4b:  inc edx; add al, 0x5f; ret; 
0x555e3678:  inc edx; add al, 0x89; clc; pop edi; ret; 
0x555e7a48:  inc edx; add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x556e5f3c:  inc edx; add dword ptr [0x5d030486], 6; ret; 
0x55596a61:  inc edx; add dword ptr [ecx], edi; ret 0x689; 
0x555f3d34:  inc edx; add esi, dword ptr [eax + edx - 0x7d]; ret 0x3904; 
0x5569432a:  inc edx; cld; mov eax, edx; pop ebx; ret; 
0x556c5323:  inc edx; cmp bh, ch; call dword ptr [edx]; 
0x556c5323:  inc edx; cmp bh, ch; call dword ptr [edx]; cmp edi, ebp; jmp dword ptr [edx + 0x3b]; 
0x556c546f:  inc edx; dec ecx; std; call dword ptr [eax]; 
0x556d6331:  inc edx; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x556f3448:  inc edx; idiv bh; sbb al, 0xd; xor byte ptr [ecx - 0xa], al; jmp dword ptr [edx]; 
0x556b712f:  inc edx; jmp dword ptr [edx - 0x71]; 
0x55692e76:  inc edx; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x556e5f36:  inc edx; or eax, 0x3874305; inc edx; add dword ptr [0x5d030486], 6; ret; 
0x556e5d7e:  inc edx; or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; add al, 0xa; ret; 
0x556e2736:  inc edx; or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; imul eax, dword ptr [ecx], 0xa; ret; 
0x556e5c32:  inc edx; or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; xchg byte ptr [edx + ecx], al; ret; 
0x556e5b65:  inc edx; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x556f605e:  inc edx; or eax, dword ptr [edx]; xchg eax, edi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x556d222c:  inc edx; or esi, dword ptr [ebx + 0xa]; ret; 
0x556d267a:  inc edx; or esp, dword ptr [eax + 0xa]; push cs; adc al, 0x43; ret; 
0x55577631:  inc edx; pop es; adc dword ptr [eax], eax; add ecx, 0x1899bf; lea eax, dword ptr [ecx - 0x46116]; ret; 
0x555e382c:  inc edx; pop es; mov eax, edx; ret; 
0x555e7979:  inc edx; pop es; pop edi; ret; 
0x556c5763:  inc edx; pop esp; std; call dword ptr [edx]; 
0x555e7b33:  inc edx; push cs; pop edi; ret; 
0x555e7a7b:  inc edx; push es; pop edi; ret; 
0x555c2130:  inc edx; ret 0x4589; 
0x556c4037:  inc edx; sar esp, 1; jmp edx; 
0x556d5665:  inc edx; shr dh, cl; jmp dword ptr [edx]; 
0x55605b22:  inc edx; str word ptr [ebx - 0x76dfdba4]; ret 0x7c8b; 
0x556c5167:  inc edx; sub al, 0xfd; call dword ptr [edx]; 
0x556c525f:  inc edx; sub eax, 0x2e12fffd; std; push dword ptr [edx + 0x2e]; std; call edx; 
0x55692f30:  inc edx; test dword ptr [edi], 0x88ff48b6; dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x55642d7a:  inc edx; xor eax, eax; ret; 
0x55654747:  inc esi; and byte ptr [ebx - 0xf76eb3c], al; pop ebx; pop esi; ret; 
0x556c504b:  inc esi; and ch, bh; call eax; 
0x556c504b:  inc esi; and ch, bh; call eax; pop ds; std; jmp dword ptr [eax]; 
0x55644033:  inc esi; and ecx, dword ptr [eax - 0x78d0dbbc]; fistp qword ptr [eax + 0x36]; call dword ptr gs
0x556c5340:  inc esi; cmp bh, ch; push dword ptr [esi + 0x6fffd3a]; cmp edi, ebp; call dword ptr [esi + 0x3b]; 
0x556c457b:  inc esi; fdivr st(4); jmp dword ptr [ebx - 0x28]; 
0x55667176:  inc esi; int 0x80; 
0x555c7573:  inc esi; or al, 0x89; ret 0x562b; 
0x555c752c:  inc esi; or byte ptr [ecx + 0x29cd29d5], cl; ret 0xe75; 
0x555c3528:  inc esi; push 0x5a7ec085; mov eax, dword ptr [esi + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x555c5657:  inc esi; push 0x5b7ec085; mov eax, dword ptr [esi + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x556e246b:  inc esi; push cs; adc al, 0x41; ret; 
0x555c5b6f:  inc esi; push esp; mov dword ptr [esp + 4], eax; mov dword ptr [esp], ebp; call edi; 
0x555c352f:  inc esi; push esp; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x556a372b:  inc esi; ret 0x5d5e; 
0x5564602d:  inc esi; sbb eax, 0xc1810004; ret; 
0x5566794c:  inc esi; sub byte ptr [ecx - 0x76cfdbbc], cl; ret 0x448d; 
0x55617a31:  inc esi; xor eax, dword ptr [ecx]; adc eax, 0xb8907174; and byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x555f3c74:  inc esp; adc al, dh; ret; 
0x5560526a:  inc esp; add bh, bh; pop esi; pop edi; ret; 
0x55617b71:  inc esp; add bh, bh; ret; 
0x555f3c6b:  inc esp; add dh, byte ptr [eax]; ret; 
0x555f387b:  inc esp; add dword ptr [eax], edx; ret; 
0x556f5524:  inc esp; add dword ptr [ebx], 0x4f; xchg byte ptr [edx], al; add bl, byte ptr [eax + 0xe]; add al, 0xc6; ret; 
0x556f5034:  inc esp; add dword ptr [ebx], 0x4f; xchg byte ptr [edx], al; jno 0x19704a; add al, 0xc6; ret; 
0x556f3b40:  inc esp; add dword ptr [ebx], 0x51; xchg byte ptr [edx], al; jo 0x195b56; add al, 0xc6; ret; 
0x556f6c40:  inc esp; add dword ptr [ebx], 0x53; xchg byte ptr [edx], al; push 0xc6040e0a; ret; 
0x556d6b6b:  inc esp; add dword ptr [ebx], 0x60; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x556d7d37:  inc esp; add dword ptr [ebx], 0x79; push cs; add al, 0xc6; ret; 
0x556d6a7f:  inc esp; add dword ptr [ebx], 2; inc esi; push cs; add al, 0xc6; ret; 
0x55685951:  inc esp; and al, 0x10; mov eax, dword ptr [eax]; add esp, 0xc; ret; 
0x55577f38:  inc esp; and al, 0x18; mov edx, dword ptr [esp + 0x1c]; add esp, 0x24; ret; 
0x555f5036:  inc esp; and al, 0x1c; add dword ptr [ebx + 0x211c244c], ecx; ret 0xd789; 
0x55684e60:  inc esp; and al, 0x1c; add esp, 0x34; pop ebx; pop esi; ret; 
0x55585754:  inc esp; and al, 0x20; mov dword ptr [esp], eax; call 0x276f0; add esp, 0x1c; ret; 
0x55682a47:  inc esp; and al, 0x20; mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 4]; 
0x55644036:  inc esp; and al, 0x2f; xchg edi, ebx; mov eax, 0x36; call dword ptr gs
0x55612343:  inc esp; and al, 0x30; mov dword ptr [esp + 4], eax; call 0xb48f0; add esp, 0x2c; ret; 
0x55662a6c:  inc esp; and al, 0x30; mov dword ptr [esp], eax; call 0x104a80; add esp, 0x2c; ret; 
0x55585031:  inc esp; and al, 4; and eax, 0x7f; ret; 
0x55663041:  inc esp; and al, 4; and eax, 0xffff; ror ax, 8; ret; 
0x55663031:  inc esp; and al, 4; bswap eax; ret; 
0x555f6976:  inc esp; and al, 4; call 0x98990; add esp, 0x18; pop ebx; ret; 
0x55612347:  inc esp; and al, 4; call 0xb48f0; add esp, 0x2c; ret; 
0x55637367:  inc esp; and al, 4; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x55637351:  inc esp; and al, 4; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x555f6f69:  inc esp; and al, 4; mov dword ptr [esp], edi; call esi; 
0x555c5921:  inc esp; and al, 4; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + 0x28]; ret; 
0x55687921:  inc esp; and al, 4; mov eax, dword ptr [eax + 0x50]; ret; 
0x55687931:  inc esp; and al, 4; mov eax, dword ptr [eax + 0x5c]; ret; 
0x55575779:  inc esp; and al, 4; mov eax, dword ptr [ebp - 0x7c]; mov dword ptr [esp], eax; mov eax, dword ptr [ebp + 0xc]; call dword ptr [eax]; 
0x555f6725:  inc esp; and al, 4; mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; call esi; 
0x55682a43:  inc esp; and al, 4; mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 4]; 
0x55636a51:  inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x55636a29:  inc esp; and al, 4; mov word ptr [eax], dx; xor eax, eax; ret; 
0x555c5e37:  inc esp; and al, 8; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x555c4267:  inc esp; and al, 8; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], edx; call eax; 
0x555c5b6b:  inc esp; and al, 8; lea eax, dword ptr [esi + 0x54]; mov dword ptr [esp + 4], eax; mov dword ptr [esp], ebp; call edi; 
0x55636a48:  inc esp; and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x55672962:  inc esp; and al, 8; mov dword ptr [esp + 4], ebp; mov eax, dword ptr [esi]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x556f7325:  inc esp; clc; jmp dword ptr [eax]; 
0x556f733d:  inc esp; clc; jmp dword ptr [edi]; 
0x5563673f:  inc esp; cli; inc dword ptr [ebp + 0x74c289c0]; ret; 
0x555f3564:  inc esp; cmp al, dh; pop edi; ret; 
0x55617125:  inc esp; cmp dword ptr [eax], eax; add byte ptr [ebp - 0x76e18a40], al; rol dword ptr [edi + 0xd5b8cb], 1; add byte ptr [eax], al; call dword ptr gs
0x55617554:  inc esp; cmp dword ptr [eax], eax; add byte ptr [ebp - 0x78dc8a40], al; fistp qword ptr [eax + 0xd2]; call dword ptr gs
0x556f746c:  inc esp; dec ebp; clc; jmp dword ptr [ebx]; 
0x55655231:  inc esp; inc ecx; add dword ptr [eax + 0xf], eax; inc esp; ret 0x8dc3; 
0x55583f72:  inc esp; mov ah, byte ptr [ebx + ecx*4]; sbb al, 0x24; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x555c545b:  inc esp; mov dword ptr [eax], esi; mov dword ptr [eax + 4], edx; mov eax, dword ptr [ebp + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x55687c57:  inc esp; mov dword ptr [edx], ecx; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x55675847:  inc esp; mov esi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x555f3844:  inc esp; or byte ptr [eax], ah; ret; 
0x555f3854:  inc esp; or byte ptr [eax], dh; ret; 
0x555f3834:  inc esp; or byte ptr [eax], dl; ret; 
0x556e7846:  inc esp; or eax, dword ptr [ebx]; add al, 3; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x556e7b6d:  inc esp; or eax, dword ptr [edx]; pop esp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x556d3836:  inc esp; or ebx, dword ptr [edx + 0xa]; ret; 
0x556e674e:  inc esp; or edi, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x556f4a35:  inc esp; or edx, dword ptr [ecx + 0xa]; ret; 
0x556c6170:  inc esp; pop edx; in al, dx; call dword ptr [eax]; 
0x5569285e:  inc esp; pop es; add eax, 0x8b1c035f; jmp ebx; 
0x5569273e:  inc esp; pop es; add ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x55692c4e:  inc esp; pop es; or al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55692b2e:  inc esp; pop es; or bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x5569297e:  inc esp; pop es; pop es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55692d6e:  inc esp; pop es; push cs; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x555f6963:  inc esp; ret 0x4489; 
0x555a772c:  inc esp; ret 0x4589; 
0x5565776b:  inc esp; ret 0x568d; 
0x55682247:  inc esp; ret 0x8965; 
0x55655236:  inc esp; ret 0x8dc3; 
0x55577e48:  inc esp; ret; 
0x5568276d:  inc esp; salc; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; mov eax, edx; ret; 
0x556d692c:  inc esp; sub ch, bh; jmp dword ptr [ebx]; 
0x556f335c:  inc esp; xor dh, bh; call ebx; 
0x5557792c:  insb byte ptr es
0x5568555e:  insb byte ptr es
0x55637c63:  insb byte ptr es
0x5564425e:  insb byte ptr es
0x555c4348:  insb byte ptr es
0x555d7532:  insb byte ptr es
0x555c326c:  insb byte ptr es
0x555c4e73:  insb byte ptr es
0x55672966:  insb byte ptr es
0x5558492e:  insb byte ptr es
0x555c4c77:  insb byte ptr es
0x556d6a6c:  insb byte ptr es
0x556c6829:  insb byte ptr es
0x556c6821:  insb byte ptr es
0x556f7324:  insb byte ptr es
0x556e593e:  insb byte ptr es
0x555c434d:  insb byte ptr es
0x55655a59:  insd dword ptr es
0x556c7e48:  insd dword ptr es
0x555c7531:  int 0x29; ret 0xe75; 
0x556d5e75:  int1; add dword ptr [edx], ecx; ret; 
0x556e2d6c:  int1; add eax, 0x59000000; push cs; or byte ptr [ebx + 0x40e4902], al; ret; 
0x556e2542:  int1; call edi; 
0x55655323:  int1; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x55566852:  int1; jmp dword ptr [ebp + 0x56]; 
0x55566422:  int1; jmp edi; 
0x556c7c6a:  int1; jmp esp; 
0x55624b26:  int1; mov edx, dword ptr [edx + 8]; pop ebx; pop esi; mov eax, edx; ret; 
0x55623c36:  int1; pop esi; ret; 
0x556b6d27:  int1; push ds; and bh, byte ptr [esi - 0x5e0466e]; xchg dword ptr [esp + eax + 0x6fa9ce9d], esp; ret; 
0x556c7f4a:  int1; push dword ptr [eax + 0x3400014f]; cmp esi, ecx; call eax; 
0x555f296b:  into; call 0x129d77; add ecx, 0xc6013; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x555f294e:  into; call 0x129d77; add ecx, 0xc6030; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x556d524d:  into; iretd; out dx, al; jmp dword ptr [edx]; 
0x555a7e44:  into; jmp dword ptr [ebp - 0x39]; 
0x556c6d29:  into; out dx, eax; call dword ptr [eax]; 
0x556d6178:  into; sti; call dword ptr [eax]; 
0x55692b2a:  iretd; add edx, edi; lea eax, dword ptr [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55692c4a:  iretd; add edx, edi; lea eax, dword ptr [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55692d6a:  iretd; add edx, edi; lea eax, dword ptr [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x5569273a:  iretd; add edx, edi; lea eax, dword ptr [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x5569285a:  iretd; add edx, edi; lea eax, dword ptr [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x5569297a:  iretd; add edx, edi; lea eax, dword ptr [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x556d3b4d:  iretd; mov bh, 0xee; jmp dword ptr [edx]; 
0x556d504a:  iretd; out dx, al; jmp dword ptr [edx]; 
0x556f2055:  iretd; sub esi, esi; jmp dword ptr [edx]; 
0x55696379:  jecxz 0x138308; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x55697359:  jecxz 0x1392e8; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x556c4955:  jecxz 0x166953; call eax; 
0x556c4955:  jecxz 0x166953; call eax; jecxz 0x166957; jmp dword ptr [eax - 0x1c]; 
0x556c4959:  jecxz 0x166957; jmp dword ptr [eax - 0x1c]; 
0x556e4375:  jecxz 0x186369; call dword ptr [esi]; 
0x555c667f:  jecxz 0x68680; jmp dword ptr [ecx]; 
0x556c7733:  jmp dword ptr [eax + 0x1f]; 
0x556c7a6b:  jmp dword ptr [eax + 0x27]; 
0x556c5c53:  jmp dword ptr [eax + 0x7e]; 
0x556d3123:  jmp dword ptr [eax + 1]; 
0x556c4e37:  jmp dword ptr [eax + 3]; 
0x556c4873:  jmp dword ptr [eax - 0x18]; 
0x556c4843:  jmp dword ptr [eax - 0x19]; 
0x556c495b:  jmp dword ptr [eax - 0x1c]; 
0x556c426f:  jmp dword ptr [eax - 0x2c]; 
0x556c683b:  jmp dword ptr [eax - 0x3d]; 
0x556c682b:  jmp dword ptr [eax - 0x3f]; 
0x556c6373:  jmp dword ptr [eax - 0x5a]; 
0x556c7063:  jmp dword ptr [eax - 0xc]; 
0x55576972:  jmp dword ptr [eax]; 
0x55566853:  jmp dword ptr [ebp + 0x56]; 
0x55577b60:  jmp dword ptr [ebp + 3]; 
0x556e326f:  jmp dword ptr [ebp + 5]; 
0x556c4747:  jmp dword ptr [ebp - 0x25]; 
0x556c4253:  jmp dword ptr [ebp - 0x2a]; 
0x556c4243:  jmp dword ptr [ebp - 0x2b]; 
0x556c422f:  jmp dword ptr [ebp - 0x2c]; 
0x55616140:  jmp dword ptr [ebp - 0x5f]; 
0x556c433f:  jmp dword ptr [ebx - 0x28]; 
0x556c432b:  jmp dword ptr [ebx - 0x29]; 
0x556c3e4f:  jmp dword ptr [ebx - 0x2e]; 
0x556c3e3b:  jmp dword ptr [ebx - 0x2f]; 
0x555a7e57:  jmp dword ptr [edi + 0xf]; 
0x556e455f:  jmp dword ptr [edi + 3]; 
0x556c532b:  jmp dword ptr [edx + 0x3b]; 
0x556c5423:  jmp dword ptr [edx + 0x3c]; 
0x556c575f:  jmp dword ptr [edx + 0x5c]; 
0x556c576b:  jmp dword ptr [edx + 0x5d]; 
0x556c496b:  jmp dword ptr [edx - 0x13]; 
0x556b7130:  jmp dword ptr [edx - 0x71]; 
0x556c4a3b:  jmp dword ptr [edx - 6]; 
0x555a6655:  jmp dword ptr [esi + 0xf]; 
0x556c456f:  jmp dword ptr [esi - 0x28]; 
0x55566423:  jmp edi; 
0x556b6845:  jno 0x158843; out 0x95, eax; push es; cld; ret; 
0x556d7265:  jno 0x179266; out dx, al; jmp dword ptr [edx]; 
0x556f3e31:  jno 0x195e3d; ret; 
0x556f503a:  jno 0x19704a; add al, 0xc6; ret; 
0x55617a36:  jno 0xb99c8; mov eax, 0x20; ret; 
0x55646c4b:  jno 0xe8c04; idiv edi; add esp, 0x18; mov eax, 1; pop ebx; ret; 
0x556c5c2d:  jnp 0x167c2f; add ah, al; xor ebp, ebx; jmp esp; 
0x556d3d21:  jnp 0x175cdd; out dx, al; jmp dword ptr [edx]; 
0x55593926:  jnp 0x358ab; ret 0x3b01; 
0x555b357f:  jnp 0x749079a1; and al, 4; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x55666734:  jns 0x108735; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x55683261:  jns 0x12528b; add byte ptr [edx + ebx - 0x80], dh; jp 0x125291; add byte ptr [esp + edx - 0x7d], dh; ret 0x8328; 
0x556d4025:  jns 0x175fe4; out dx, al; jmp dword ptr [edx]; 
0x556d7d3a:  jns 0x179d4a; add al, 0xc6; ret; 
0x556e5266:  jns 0x18725a; jmp dword ptr [edx]; 
0x556f744c:  jns 0x199458; push cs; adc al, 0x43; ret; 
0x555e6350:  jns 0x8835c; add byte ptr [edi], cl; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x556c4850:  jo 0x166838; cld; call dword ptr [eax]; 
0x556c4e5c:  jo 0x166e66; std; inc dword ptr [esi + 0x8fffd0f]; adc ch, bh; jmp edx; 
0x556c537c:  jo 0x1673b2; std; inc dword ptr [eax]; xor eax, 0x3590fffd; std; jmp dword ptr [eax]; 
0x556e4c26:  jo 0x186c1a; jmp dword ptr [edx]; 
0x556e4d36:  jo 0x186d2a; jmp dword ptr [edx]; 
0x556e5525:  jo 0x187535; or byte ptr [edx + 9], al; add eax, dword ptr [edx]; push esi; ret; 
0x556f3220:  jo 0x19527d; add al, byte ptr [eax]; pop edi; xor al, 0xf7; call dword ptr [eax]; 
0x556f3b46:  jo 0x195b56; add al, 0xc6; ret; 
0x55595155:  jo 0x37140; ret 0xfff2; 
0x555b3664:  jo 0x5566e; mov esi, dword ptr [esp]; mov dword ptr [eax + 4], 1; xor eax, eax; add esp, 0xc; ret; 
0x555f2a39:  jo 0x94a3f; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2c45:  jo 0x94c5b; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f7a4c:  jo 0x99a51; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x55567f78:  jo 0x9f38; str word ptr [ecx]; add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; ret 0x11; 
0x55683267:  jp 0x125291; add byte ptr [esp + edx - 0x7d], dh; ret 0x8328; 
0x5568584c:  jp 0x1278c2; or dword ptr [ebx + 0x5f5e24c4], eax; ret; 
0x556a713a:  jp 0x149142; add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x556c572c:  jp 0x16778b; std; push dword ptr [esp + ebx*2 - 3]; call esp; 
0x556d7c72:  jp 0x179c7e; push cs; add al, 0xc6; ret; 
0x55565139:  jp 0x7145; add byte ptr [0x22000000], dl; add byte ptr [eax + eax], cl; ret; 
0x555f2162:  jp 0x94174; mov eax, edi; pop ebx; pop edi; ret; 
0x5564457c:  jp 0xe6548; or eax, dword ptr [eax]; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0xbf; call dword ptr gs
0x55644a7c:  jp 0xe6a43; or eax, dword ptr [eax]; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0x60; call dword ptr gs
0x55577657:  lahf; cdq; sbb byte ptr [eax], al; lea eax, dword ptr [ecx - 0x43dee]; ret; 
0x556b6925:  lahf; ret 0x871e; 
0x55634f3e:  lahf; ret 0xe083; 
0x5560552f:  lahf; ror byte ptr [edi], 0xb6; ror byte ptr [ebp + 0x5eff0044], 0x5f; ret; 
0x55577b57:  lahf; xchg eax, esp; sbb byte ptr [eax], al; mov eax, dword ptr [ecx - 0xf8]; add eax, dword ptr gs
0x5564756d:  lcall 0x824
0x556c5623:  lcall ptr [eax + 0x52fffd4e]; dec edi; std; jmp edx; 
0x556c5757:  lcall ptr [eax]; pop ebp; std; ljmp ptr [eax + 0x5d]; std; jmp dword ptr [edx + 0x5c]; 
0x556c577b:  lcall ptr [ebp + ebx*2 - 3]; call dword ptr [esi + 0x5c]; 
0x55645554:  lcall ptr [ebx + 0x5e]; pop edi; pop ebp; ret 4; 
0x5564305e:  lcall ptr [ebx + 0x5e]; pop edi; ret; 
0x5565522b:  lcall ptr [ebx + 0x65]; mov ecx, dword ptr [ecx]; test byte ptr [ecx + eax*2 + 1], 0x40; cmove eax, edx; ret; 
0x556c4833:  lcall ptr [edx]; out 0xfc, eax; ljmp ptr [edx + 0x3afffce7]; call 0xe6c7683e; cld; jmp dword ptr [eax - 0x19]; 
0x555f3a63:  lcall ptr [esi + 0x5f]; pop ebp; ret; 
0x5560526c:  lcall ptr [esi + 0x5f]; ret; 
0x556a7065:  lea eax, dword ptr [eax + 0xa]; pop edi; ret; 
0x556a7075:  lea eax, dword ptr [eax + 0xc]; pop edi; ret; 
0x556a6f51:  lea eax, dword ptr [eax + 3]; pop edi; ret; 
0x556a7025:  lea eax, dword ptr [eax + 5]; pop edi; ret; 
0x556a7035:  lea eax, dword ptr [eax + 6]; pop edi; ret; 
0x556a7045:  lea eax, dword ptr [eax + 8]; pop edi; ret; 
0x556a7055:  lea eax, dword ptr [eax + 9]; pop edi; ret; 
0x55605269:  lea eax, dword ptr [eax + eax - 1]; pop esi; pop edi; ret; 
0x55617b70:  lea eax, dword ptr [eax + eax - 1]; ret; 
0x555f3833:  lea eax, dword ptr [eax + ecx + 0x10]; ret; 
0x555f3843:  lea eax, dword ptr [eax + ecx + 0x20]; ret; 
0x555f3853:  lea eax, dword ptr [eax + ecx + 0x30]; ret; 
0x555f3563:  lea eax, dword ptr [eax + edi - 0x10]; pop edi; ret; 
0x555f3c73:  lea eax, dword ptr [eax + edx - 0x10]; ret; 
0x555a3074:  lea eax, dword ptr [eax - 0x7a000006]; sar byte ptr [eax + 1], 0xf; inc ebp; ret 0x8588; 
0x556d5f25:  lea eax, dword ptr [eax]; add byte ptr [eax + 0x28], cl; out dx, eax; call edx; 
0x55577b3b:  lea eax, dword ptr [ebx + 0x368c]; pop ebx; ret; 
0x555f612c:  lea eax, dword ptr [ebx - 0x595d4]; pop ebx; ret; 
0x555f4820:  lea eax, dword ptr [ebx - 0x73d44]; lea edx, dword ptr [ebx - 0x10cbb4]; cmove eax, edx; add esp, 8; pop ebx; ret; 
0x55623c60:  lea eax, dword ptr [ebx - 0xdd3e4]; lea edx, dword ptr [ebx - 0xdd464]; cmove eax, edx; add esp, 8; pop ebx; ret; 
0x555f5e6c:  lea eax, dword ptr [ebx - 0xfbd84]; pop ebx; ret; 
0x555f5d4c:  lea eax, dword ptr [ebx - 0xfcaa4]; pop ebx; ret; 
0x556e206e:  lea eax, dword ptr [ebx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x556a642b:  lea eax, dword ptr [ecx + 0xc]; ret; 
0x556a6430:  lea eax, dword ptr [ecx + 1]; ret; 
0x556a6440:  lea eax, dword ptr [ecx + 2]; ret; 
0x556a6450:  lea eax, dword ptr [ecx + 3]; ret; 
0x556a6460:  lea eax, dword ptr [ecx + 5]; ret; 
0x556a6470:  lea eax, dword ptr [ecx + 6]; ret; 
0x555f387a:  lea eax, dword ptr [ecx + eax + 0x10]; ret; 
0x5557765b:  lea eax, dword ptr [ecx - 0x43dee]; ret; 
0x5557763b:  lea eax, dword ptr [ecx - 0x46116]; ret; 
0x556a5356:  lea eax, dword ptr [edi + 0xb]; pop edi; ret; 
0x556a5420:  lea eax, dword ptr [edi + 2]; pop edi; ret; 
0x556a5440:  lea eax, dword ptr [edi + 4]; pop edi; ret; 
0x556a5450:  lea eax, dword ptr [edi + 5]; pop edi; ret; 
0x556a5460:  lea eax, dword ptr [edi + 6]; pop edi; ret; 
0x556a526d:  lea eax, dword ptr [edi + 7]; pop edi; ret; 
0x556a5470:  lea eax, dword ptr [edi + 8]; pop edi; ret; 
0x55692b2d:  lea eax, dword ptr [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55692c4d:  lea eax, dword ptr [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55692d6d:  lea eax, dword ptr [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x5569273d:  lea eax, dword ptr [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x5569285d:  lea eax, dword ptr [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x5569297d:  lea eax, dword ptr [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x555d2f63:  lea eax, dword ptr [edi + edx]; mov edx, dword ptr [ebx - 0x15c]; and eax, ecx; sub esi, eax; mov dword ptr [esp], esi; call dword ptr [edx]; 
0x556a5833:  lea eax, dword ptr [edi - 0x10]; pop edi; ret; 
0x556a5858:  lea eax, dword ptr [edi - 0xc]; pop edi; ret; 
0x556a5960:  lea eax, dword ptr [edi - 1]; pop edi; ret; 
0x555f3a61:  lea eax, dword ptr [edi - 1]; pop esi; pop edi; pop ebp; ret; 
0x556a5950:  lea eax, dword ptr [edi - 2]; pop edi; ret; 
0x555f3a6b:  lea eax, dword ptr [edi - 2]; pop esi; pop edi; pop ebp; ret; 
0x556a5940:  lea eax, dword ptr [edi - 3]; pop edi; ret; 
0x555f3a75:  lea eax, dword ptr [edi - 3]; pop esi; pop edi; pop ebp; ret; 
0x556a5930:  lea eax, dword ptr [edi - 5]; pop edi; ret; 
0x556a5920:  lea eax, dword ptr [edi - 6]; pop edi; ret; 
0x555e7c2e:  lea eax, dword ptr [edx + 0xb]; ret; 
0x555e7c52:  lea eax, dword ptr [edx + 0xc]; ret; 
0x555e7c72:  lea eax, dword ptr [edx + 0xd]; ret; 
0x555e7b32:  lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x555e7b56:  lea eax, dword ptr [edx + 1]; ret; 
0x555e7a2c:  lea eax, dword ptr [edx + 2]; pop edi; ret; 
0x555e7b6c:  lea eax, dword ptr [edx + 2]; ret; 
0x555e7944:  lea eax, dword ptr [edx + 3]; pop edi; ret; 
0x555e7b74:  lea eax, dword ptr [edx + 3]; ret; 
0x555e7a4a:  lea eax, dword ptr [edx + 4]; pop edi; ret; 
0x555e7a5c:  lea eax, dword ptr [edx + 5]; pop edi; ret; 
0x555e7a7a:  lea eax, dword ptr [edx + 6]; pop edi; ret; 
0x555e7978:  lea eax, dword ptr [edx + 7]; pop edi; ret; 
0x555f3c6a:  lea eax, dword ptr [edx + eax + 0x30]; ret; 
0x555e7b44:  lea eax, dword ptr [edx]; ret; 
0x555c5b6e:  lea eax, dword ptr [esi + 0x54]; mov dword ptr [esp + 4], eax; mov dword ptr [esp], ebp; call edi; 
0x555f3879:  lea eax, dword ptr es
0x55612e7c:  lea ecx, dword ptr [ebp - 0x28]; mov dword ptr [esp], ecx; mov dword ptr [esp + 4], edx; call dword ptr [ebp - 0x34]; 
0x555c2f69:  lea ecx, dword ptr [esp + 0x18]; mov dword ptr [esp + 4], ecx; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x55676620:  lea ecx, dword ptr [esp + 0x5c]; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x555f3829:  lea edi, dword ptr [edi]; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x10]; ret; 
0x556a643a:  lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 2]; ret; 
0x556a644a:  lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 3]; ret; 
0x556a645a:  lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 5]; ret; 
0x556a646a:  lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 6]; ret; 
0x556a647a:  lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 7]; ret; 
0x556a5429:  lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 3]; pop edi; ret; 
0x556a5439:  lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 4]; pop edi; ret; 
0x556a5449:  lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 5]; pop edi; ret; 
0x556a5459:  lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 6]; pop edi; ret; 
0x556a5469:  lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 8]; pop edi; ret; 
0x556a5479:  lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 9]; pop edi; ret; 
0x556a5959:  lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 1]; pop edi; ret; 
0x556a5949:  lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 2]; pop edi; ret; 
0x556a5939:  lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 3]; pop edi; ret; 
0x556a7c49:  lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 4]; pop edi; ret; 
0x556a5929:  lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 5]; pop edi; ret; 
0x556a6b2a:  lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 0xe]; ret; 
0x555e564a:  lea edi, dword ptr [edi]; mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x55605429:  lea edi, dword ptr [edi]; mov eax, 4; ret; 
0x55605439:  lea edi, dword ptr [edi]; mov eax, 5; ret; 
0x55605449:  lea edi, dword ptr [edi]; mov eax, 6; ret; 
0x55605459:  lea edi, dword ptr [edi]; mov eax, 7; ret; 
0x55585029:  lea edi, dword ptr [edi]; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x555e5679:  lea edi, dword ptr [edi]; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x555f6d2c:  lea edx, dword ptr [ebp - 0x44]; mov dword ptr [esp + 4], edx; mov eax, dword ptr [eax + 8]; mov dword ptr [esp], eax; call edi; 
0x555f4826:  lea edx, dword ptr [ebx - 0x10cbb4]; cmove eax, edx; add esp, 8; pop ebx; ret; 
0x555d2f31:  lea edx, dword ptr [ebx - 0x44875]; call 0x74da0; mov edx, dword ptr [ebx - 0x15c]; mov dword ptr [esp], 0; call dword ptr [edx]; 
0x555c2d72:  lea edx, dword ptr [ebx - 0x7b4]; mov dword ptr [eax + 0x94], edx; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0xb8], edx; pop ebx; ret; 
0x55623c66:  lea edx, dword ptr [ebx - 0xdd464]; cmove eax, edx; add esp, 8; pop ebx; ret; 
0x5567212b:  lea edx, dword ptr [edi + 4]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x5567215b:  lea edx, dword ptr [edi + 4]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x555f6434:  lea esi, dword ptr [esi]; add eax, 0xc; nop; lea esi, dword ptr [esi]; ret; 
0x555f642c:  lea esi, dword ptr [esi]; add eax, 8; ret; 
0x555f5b74:  lea esi, dword ptr [esi]; add esp, 0x40; pop esi; pop edi; pop ebp; ret; 
0x555f3c79:  lea esi, dword ptr [esi]; bsf eax, eax; add eax, edx; ret; 
0x555f355a:  lea esi, dword ptr [esi]; bsf eax, eax; lea eax, dword ptr [eax + edi - 0x10]; pop edi; ret; 
0x555f3839:  lea esi, dword ptr [esi]; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x20]; ret; 
0x555f3849:  lea esi, dword ptr [esi]; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x30]; ret; 
0x555f396c:  lea esi, dword ptr [esi]; bsr edi, edi; lea eax, dword ptr [eax + edi + 0x10]; pop edi; ret; 
0x556a7c3a:  lea esi, dword ptr [esi]; lea eax, dword ptr [edi - 8]; pop edi; ret; 
0x555f3826:  lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x10]; ret; 
0x556a6434:  lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 2]; ret; 
0x556a6444:  lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 3]; ret; 
0x556a6454:  lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 5]; ret; 
0x556a6464:  lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 6]; ret; 
0x556a6474:  lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [ecx + 7]; ret; 
0x556a5425:  lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 3]; pop edi; ret; 
0x556a5435:  lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 4]; pop edi; ret; 
0x556a5445:  lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 5]; pop edi; ret; 
0x556a5455:  lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 6]; pop edi; ret; 
0x556a5465:  lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 8]; pop edi; ret; 
0x556a5475:  lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi + 9]; pop edi; ret; 
0x556a5955:  lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 1]; pop edi; ret; 
0x556a5945:  lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 2]; pop edi; ret; 
0x556a5935:  lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 3]; pop edi; ret; 
0x556a7c45:  lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 4]; pop edi; ret; 
0x556a5925:  lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edi - 5]; pop edi; ret; 
0x556a6b24:  lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; lea eax, dword ptr [edx + 0xe]; ret; 
0x55605426:  lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; mov eax, 4; ret; 
0x55605436:  lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; mov eax, 5; ret; 
0x55605446:  lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; mov eax, 6; ret; 
0x55605456:  lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; mov eax, 7; ret; 
0x55585025:  lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x555e363c:  lea esi, dword ptr [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x555e5639:  lea esi, dword ptr [esi]; mov dword ptr [ecx], edx; pop ebx; ret; 
0x5561283a:  lea esi, dword ptr [esi]; mov dword ptr [esp], edi; call esi; 
0x55687a61:  lea esi, dword ptr [esi]; mov eax, 2; add esp, 0xc; ret; 
0x55687a55:  lea esi, dword ptr [esi]; mov eax, 8; add esp, 0xc; ret; 
0x55685942:  lea esi, dword ptr [esi]; mov eax, dword ptr [edx]; add esp, 0xc; ret; 
0x5568797c:  lea esi, dword ptr [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x55687929:  lea esi, dword ptr [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x55636a22:  lea esi, dword ptr [esi]; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x556a5e2c:  lea esi, dword ptr [esi]; mov eax, edi; pop edi; ret; 
0x555e362c:  lea esi, dword ptr [esi]; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x55632364:  lea esi, dword ptr [esi]; movzx edx, al; mov ecx, ebx; sub ecx, dword ptr [ebx + edx*4 - 0xcec7c]; jmp ecx; 
0x5567233d:  lea esi, dword ptr [esi]; pop esi; xor eax, eax; pop edi; pop ebp; ret; 
0x55687a71:  lea esi, dword ptr [esi]; xor eax, eax; add esp, 0xc; ret; 
0x55655239:  lea esi, dword ptr [esi]; xor eax, eax; pop ebx; ret; 
0x55575159:  lea esp, dword ptr [ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x555c5c5a:  lea esp, dword ptr [ebp - 8]; sub eax, esi; pop esi; pop edi; pop ebp; ret; 
0x556c6975:  leave; add byte ptr [eax], al; popfd; in eax, dx; jmp dword ptr [eax]; 
0x556c456c:  leave; fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x555f5f26:  leave; mov dword ptr [ecx + 4], 0; pop esi; pop edi; pop ebp; ret; 
0x556a6021:  ljmp 0x847
0x55685b52:  ljmp 0x8538
0x55685c71:  ljmp 0x853c
0x5566313d:  ljmp 0x8918
0x555f3874:  ljmp 0x8d26
0x556a6031:  ljmp 0x947
0x556a6041:  ljmp 0xa47
0x556a6051:  ljmp 0xc47
0x556a6061:  ljmp 0xd47
0x556a6071:  ljmp 0xe47
0x55605f2c:  ljmp 0xfac1
0x555b3252:  ljmp 0xfc0
0x556c487d:  ljmp 0xfffc
0x556c6463:  ljmp ptr [eax + 0x40000ac]; xchg eax, esi; in al, dx; call eax; 
0x556c575b:  ljmp ptr [eax + 0x5d]; std; jmp dword ptr [edx + 0x5c]; 
0x556c4567:  ljmp ptr [ecx - 0x36000328]; fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x555e506c:  ljmp ptr [ecx]; ret 0xc301; 
0x556c4f3b:  ljmp ptr [edi + ebx]; std; call dword ptr [esi]; 
0x556c4837:  ljmp ptr [edx + 0x3afffce7]; call 0xe6c7683e; cld; jmp dword ptr [eax - 0x19]; 
0x556c5223:  ljmp ptr [edx]; std; dec dword ptr [edx - 0x150002d2]; std; call esp; 
0x556c5437:  ljmp ptr [esp + edi + 0x3cfcfffd]; std; inc dword ptr [esi]; cmp al, 0xfd; call dword ptr [esi + 0x3c]; 
0x555b2e39:  lock add byte ptr [eax], al; cmp eax, 0x4000; sete dl; mov eax, edx; add esp, 0x7c; ret; 
0x555d725e:  lock dec dword ptr [ebx + 0x2444c700]; and byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x16a4e73c], al; in eax, dx; ret 0xffff; 
0x556c6465:  lodsb al, byte ptr [esi]; add byte ptr [eax], al; add al, 0x96; in al, dx; call eax; 
0x556d3d5c:  lodsb al, byte ptr [esi]; add byte ptr [eax], al; ret; 
0x556e6154:  lodsb al, byte ptr [esi]; sal bl, 1; call dword ptr [eax]; 
0x55607826:  lodsb al, byte ptr [esi]; sbb eax, dword ptr [eax]; add byte ptr [ecx], cl; ret 0x840f; 
0x556f695c:  lodsb al, byte ptr [esi]; xchg eax, edx; add al, byte ptr [eax]; cdq; xor bh, al; call dword ptr [eax]; 
0x556f5d4a:  lodsd eax, dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x55616241:  lodsd eax, dword ptr [esi]; push cs; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x5566306e:  loope 0x105070; add byte ptr [eax], al; rol byte ptr [ecx + 0xffe2], 0; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x5569225b:  loope 0x134259; jmp dword ptr [esi - 0x70]; 
0x556c4949:  loope 0x166947; jmp dword ptr [eax]; 
0x556c6878:  loope 0x1688ee; in eax, dx; call eax; 
0x556c6878:  loope 0x1688ee; in eax, dx; call eax; ret 0; 
0x5556743a:  ltr word ptr [ecx + 0x12000000]; add byte ptr [eax + eax], cl; ret 0x38; 
0x556c6068:  mov ah, 0x16; in al, dx; call dword ptr [eax - 0x68]; 
0x555f3c7a:  mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edx; ret; 
0x555f383a:  mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x20]; ret; 
0x555f384a:  mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x30]; ret; 
0x555e563a:  mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; pop ebx; ret; 
0x55687a62:  mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 2; add esp, 0xc; ret; 
0x5568792a:  mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x55687a72:  mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x5565523a:  mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x555f397a:  mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x556c797c:  mov ah, 0x2e; add dword ptr [eax], eax; movsb byte ptr es
0x556c5550:  mov ah, 0x4d; std; inc dword ptr [ebx + ecx*2 + 0x4c34fffd]; std; jmp esp; 
0x556e4e64:  mov ah, 0x77; add dword ptr [eax], eax; pushal; push edx; call dword ptr [eax]; 
0x556e5064:  mov ah, 0x79; add dword ptr [eax], eax; pop ecx; add ebx, esi; call dword ptr [eax]; 
0x556d5464:  mov ah, 0x7d; add byte ptr [eax], al; ret 0xef13; 
0x55603448:  mov ah, 0x83; ret 0x3901; 
0x556b5a54:  mov ah, 0xb5; mov dh, 0xb7; mov eax, 0xbcbbbab9; mov ebp, 0xc1c0bfbe; ret 0xc4c3; 
0x556c4160:  mov ah, 0xd3; cld; jmp esp; 
0x556c4678:  mov ah, 0xda; cld; jmp esp; 
0x556c6e70:  mov ah, 0xde; out dx, eax; call dword ptr [eax - 0x17]; 
0x555a7359:  mov ah, 0xe9; ret; 
0x55583f73:  mov ah, byte ptr [ebx + ecx*4]; sbb al, 0x24; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x55674271:  mov al, 0; add byte ptr [eax], al; lea edx, dword ptr [esp + 0x84]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], edi; call dword ptr [eax + 4]; 
0x5567493a:  mov al, 0; add byte ptr [eax], al; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x555f377c:  mov al, 0; add byte ptr [eax], al; pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x556c6545:  mov al, 0; add byte ptr [edi + ebp*4 - 0x14], ah; call eax; 
0x556d6a70:  mov al, 0x2e; out dx, eax; call dword ptr [esi]; 
0x556c5354:  mov al, 0x3a; std; inc dword ptr [eax]; cmp edi, ebp; call dword ptr [eax + 0x3b]; 
0x556c7f4c:  mov al, 0x4f; add dword ptr [eax], eax; xor al, 0x3b; int1; call eax; 
0x55582447:  mov al, 0x83; ret 0x8901; 
0x556c4764:  mov al, 0xd9; cld; jmp eax; 
0x556c4950:  mov al, 0xe2; cld; inc dword ptr [eax - 0x1d]; cld; call eax; 
0x556c6e24:  mov al, 0xe6; add byte ptr [eax], al; dec eax; fucomi st(7); jmp eax; 
0x556c4840:  mov al, 0xe6; cld; jmp dword ptr [eax - 0x19]; 
0x556c5d61:  mov al, 0xeb; call eax; 
0x55647a7f:  mov al, 1; pop ebx; ret; 
0x556c4e2c:  mov al, 1; std; inc dword ptr [eax + 2]; std; call eax; 
0x556d3a21:  mov al, 2; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x556c492c:  mov al, byte ptr [0x30fffcdd]; fdivp st(4); inc eax; fdivp st(4); call dword ptr [eax - 0x21]; 
0x556c5368:  mov al, byte ptr [0x30fffd31]; xor bh, ch; inc eax; xor bh, ch; call dword ptr [eax + 0x33]; 
0x556f3250:  mov al, byte ptr [0x3f00025b]; xor al, 0xf7; call dword ptr [eax]; 
0x556c4b74:  mov al, byte ptr [0x50fffcfa]; sti; cld; call dword ptr [eax]; 
0x556c6544:  mov al, byte ptr [0x640000b0]; scasd eax, dword ptr es
0x556c6834:  mov al, byte ptr [0x740000c1]; outsb dx, byte ptr [esi]; in eax, dx; jmp dword ptr [eax - 0x3d]; 
0x55577a2d:  mov al, byte ptr [0x89000036]; ret 0xc589; 
0x55584a54:  mov al, byte ptr [0x89ffffff]; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x556c6d24:  mov al, byte ptr [0xb50000e1]; into; out dx, eax; call dword ptr [eax]; 
0x556d6145:  mov al, byte ptr [eax]; add dh, ch; sti; call dword ptr [eax]; 
0x556d6175:  mov al, byte ptr [eax]; add dh, cl; sti; call dword ptr [eax]; 
0x555e7a26:  mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, dword ptr [edx + 2]; pop edi; ret; 
0x555e7b66:  mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, dword ptr [edx + 2]; ret; 
0x555e3666:  mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x556a5352:  mov al, byte ptr [ecx]; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xb]; pop edi; ret; 
0x555e7b40:  mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, dword ptr [edx]; ret; 
0x555e3640:  mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x555e3760:  mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x555c2926:  mov ax, dx; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x555e7a54:  mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, dword ptr [edx + 5]; pop edi; ret; 
0x555e7b50:  mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, dword ptr [edx + 1]; ret; 
0x555e7b60:  mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, dword ptr [edx + 2]; ret; 
0x555e3650:  mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x555e3770:  mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x556b5a57:  mov bh, 0xb8; mov ecx, 0xbdbcbbba; mov esi, 0xc2c1c0bf; ret; 
0x5566306b:  mov bh, 0xc2; and ecx, 0xc0000000; and edx, 0xff; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x55675148:  mov bh, 0xeb; ret; 
0x55584f39:  mov bh, 4; push eax; and eax, 0x1000; ret; 
0x55584e29:  mov bh, 4; push eax; and eax, 0x200; ret; 
0x55584e59:  mov bh, 4; push eax; and eax, 0x8000; ret; 
0x556a7b69:  mov bl, 0; add byte ptr [eax], al; lea eax, dword ptr [edi - 0x10]; pop edi; ret; 
0x556b5a53:  mov bl, 0xb4; mov ch, 0xb6; mov bh, 0xb8; mov ecx, 0xbdbcbbba; mov esi, 0xc2c1c0bf; ret; 
0x556c7949:  mov bl, 0xf0; jmp eax; 
0x5564756c:  mov bl, byte ptr [edx + 0x548b000b]; and al, 8; xchg ebx, edx; mov eax, 0x10f; call dword ptr gs
0x556d5b65:  mov bl, cl; out dx, al; jmp dword ptr [edx]; 
0x55697f40:  mov byte ptr [0x30002d1], al; sbb al, 0x8b; jmp ebx; 
0x556f7469:  mov byte ptr [0x4d440002], al; clc; jmp dword ptr [ebx]; 
0x5560363a:  mov byte ptr [0x890004db], al; ret 0x68b; 
0x55577a28:  mov byte ptr [0x9389de87], al; mov al, byte ptr [0x89000036]; ret 0xc589; 
0x556c4034:  mov byte ptr [0xc2fffcd1], al; sar esp, 1; jmp edx; 
0x556a485a:  mov byte ptr [0xf6000000], al; ret 0x7501; 
0x555f2c44:  mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2e33:  mov byte ptr [eax + 0x40], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2a38:  mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x55676f31:  mov byte ptr [eax], 0; add byte ptr [ebx + 0x1c42484], cl; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x556a713f:  mov byte ptr [eax], 0; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x556a5854:  mov byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edi - 0xc]; pop edi; ret; 
0x55674934:  mov byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ebp + 0xb0]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x556d203a:  mov byte ptr [ebx + 0xb], 0x43; or cl, byte ptr [esi]; or al, 0x44; ret; 
0x555f3c39:  mov byte ptr [ebx + 0xf6640ea], 0xd7; rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x556c643c:  mov byte ptr [ebx - 0x6dfc0000], ch; in al, dx; jmp eax; 
0x556d3478:  mov byte ptr [ebx], al; out dx, al; call dword ptr [ecx]; 
0x555e5633:  mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x555e5652:  mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x556e255e:  mov byte ptr [ecx - 0x39], 0x41; or al, 4; add al, 0xc5; inc ecx; or ebp, dword ptr [esi + 0xa]; ret; 
0x556e6329:  mov byte ptr [ecx - 0x39], 0x41; or al, 4; add al, 0xc5; inc ecx; or edx, dword ptr [esi + 0xa]; ret; 
0x556d382e:  mov byte ptr [ecx - 0x39], 0x41; or al, 4; add al, 0xc5; inc esp; or ebx, dword ptr [edx + 0xa]; ret; 
0x55606b33:  mov byte ptr [ecx], 0x83; ret 0xf01; 
0x556e5a41:  mov byte ptr [ecx], al; add byte ptr [edx - 0xd], bl; jmp dword ptr [eax + 3]; 
0x556a534e:  mov byte ptr [edi + ecx], 0x85; mov al, byte ptr [ecx]; add byte ptr [eax], al; lea eax, dword ptr [edi + 0xb]; pop edi; ret; 
0x55684627:  mov byte ptr [edi + edx], al; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x555a772a:  mov byte ptr [edi], cl; inc esp; ret 0x4589; 
0x555f2161:  mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x555e7a29:  mov byte ptr [edx + 2], al; lea eax, dword ptr [edx + 2]; pop edi; ret; 
0x555e7b69:  mov byte ptr [edx + 2], al; lea eax, dword ptr [edx + 2]; ret; 
0x555e3669:  mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x555e7a47:  mov byte ptr [edx + 4], al; lea eax, dword ptr [edx + 4]; pop edi; ret; 
0x555e3677:  mov byte ptr [edx + 4], al; mov eax, edi; pop edi; ret; 
0x556a4855:  mov byte ptr [edx + edx*8 + 0xa2840f], 0; add dh, dh; ret 0x7501; 
0x5569436c:  mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x555e7b42:  mov byte ptr [edx], al; lea eax, dword ptr [edx]; ret; 
0x555e3642:  mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x555e3762:  mov byte ptr [edx], al; mov eax, edx; ret; 
0x5569355b:  mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x5564656e:  mov byte ptr [esi], 0; mov eax, esi; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x55644035:  mov byte ptr [esp + 0x2f], al; xchg edi, ebx; mov eax, 0x36; call dword ptr gs
0x556a6a77:  mov ch, 0; add byte ptr [eax], al; lea eax, dword ptr [edx + 0xf]; ret; 
0x555b2747:  mov ch, 0x2b; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x556b5a55:  mov ch, 0xb6; mov bh, 0xb8; mov ecx, 0xbdbcbbba; mov esi, 0xc2c1c0bf; ret; 
0x556c6d28:  mov ch, 0xce; out dx, eax; call dword ptr [eax]; 
0x556c7951:  mov ch, 0xf0; jmp dword ptr [eax]; 
0x555d6070:  mov cl, 0x8b; add dword ptr fs
0x55645e38:  mov cl, 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x55696371:  mov cl, 0xeb; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55696171:  mov cl, 0xee; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x556f5139:  mov cl, 0xf7; jmp dword ptr [esi]; 
0x55565964:  mov cl, byte ptr [ebx]; add byte ptr [eax - 8], ah; adc dword ptr [eax], eax; ret; 
0x555d7a73:  mov dh, 0; add byte ptr [eax], al; add al, ch; ret; 
0x5569637b:  mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x55596a3b:  mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x75168bd2], al; sbb dh, dh; ret 0x7501; 
0x55684f45:  mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp + 0xbf], cl; add byte ptr [ebx - 0x18], dl; sbb eax, 0x8100002e; ret; 
0x556a5065:  mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp + 0xbf], cl; add dh, dh; ret 0x7510; 
0x5561704b:  mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp - 0x14], dh; mov eax, 0x14; call dword ptr gs
0x556a605b:  mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x1b720eea], al; lea eax, dword ptr [edi + 0xd]; pop edi; ret; 
0x556a707b:  mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x1b720eef], al; lea eax, dword ptr [eax + 0xd]; pop edi; ret; 
0x556a604b:  mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x2b720dea], al; lea eax, dword ptr [edi + 0xc]; pop edi; ret; 
0x556a706b:  mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x2b720def], al; lea eax, dword ptr [eax + 0xc]; pop edi; ret; 
0x556a603b:  mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x3b720bea], al; lea eax, dword ptr [edi + 0xa]; pop edi; ret; 
0x556a705b:  mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x3b720bef], al; lea eax, dword ptr [eax + 0xa]; pop edi; ret; 
0x556a602b:  mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x4b720aea], al; lea eax, dword ptr [edi + 9]; pop edi; ret; 
0x556a704b:  mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x4b720aef], al; lea eax, dword ptr [eax + 9]; pop edi; ret; 
0x556a703b:  mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5b7209ef], al; lea eax, dword ptr [eax + 8]; pop edi; ret; 
0x55636a23:  mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x66042444], cl; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x556a702b:  mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x6b7207ef], al; lea eax, dword ptr [eax + 6]; pop edi; ret; 
0x556a606b:  mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0xb720fea], al; lea eax, dword ptr [edi + 0xe]; pop edi; ret; 
0x55685943:  mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0xcc48302], cl; ret; 
0x5567795b:  mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; or eax, 0x81000104; ret; 
0x5565446b:  mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp + 3]; 
0x556a6e3b:  mov dh, 0; add byte ptr [eax], al; add dh, dh; ret 0xf10; 
0x556a6376:  mov dh, 0; add byte ptr [eax], al; mov eax, ecx; ret; 
0x55633649:  mov dh, 0x2c; xor ebx, ebp; ret; 
0x556c5344:  mov dh, 0x3a; std; inc dword ptr [esi]; cmp edi, ebp; call dword ptr [esi + 0x3b]; 
0x55644032:  mov dh, 0x46; and ecx, dword ptr [eax - 0x78d0dbbc]; fistp qword ptr [eax + 0x36]; call dword ptr gs
0x55694369:  mov dh, 0x48; dec dword ptr [eax - 0x2f7600b6]; pop ebx; ret; 
0x55675646:  mov dh, 0x56; add ch, al; and eax, 0x81000127; ret; 
0x55616240:  mov dh, 0xad; push cs; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x556b5a56:  mov dh, 0xb7; mov eax, 0xbcbbbab9; mov ebp, 0xc1c0bfbe; ret 0xc4c3; 
0x55605267:  mov dh, 0xc0; lea eax, dword ptr [eax + eax - 1]; pop esi; pop edi; ret; 
0x55617b6e:  mov dh, 0xc0; lea eax, dword ptr [eax + eax - 1]; ret; 
0x55672a7a:  mov dh, 0xc0; pop edi; pop ebp; ret; 
0x55632369:  mov dh, 0xd0; mov ecx, ebx; sub ecx, dword ptr [ebx + edx*4 - 0xcec7c]; jmp ecx; 
0x556c4078:  mov dh, 0xd1; cld; call esi; 
0x556d277e:  mov dh, 0xec; jmp dword ptr [edx]; 
0x55644446:  mov dh, 8; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x55693559:  mov dh, 8; mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x556c657d:  mov dl, 0; add byte ptr [edx + esi*4 - 0x4cc30014], al; add byte ptr [eax], al; in al, 0xb2; in al, dx; jmp dword ptr [eax - 0x4d]; 
0x556b5a52:  mov dl, 0xb3; mov ah, 0xb5; mov dh, 0xb7; mov eax, 0xbcbbbab9; mov ebp, 0xc1c0bfbe; ret 0xc4c3; 
0x55645d68:  mov dl, 0xb; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x556d3439:  mov dl, 0xd5; in eax, dx; jmp dword ptr [edx]; 
0x556c4538:  mov dl, 0xd8; cld; call edx; 
0x55696f70:  mov dl, 0xdf; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55615d55:  mov dl, 0xe; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x556c4a30:  mov dl, 0xf8; cld; inc dword ptr [eax]; stc; cld; call edx; 
0x556c4a2c:  mov dl, 0xfa; cld; push dword ptr [edx + 0xfffcf8]; stc; cld; call edx; 
0x556d7771:  mov dl, 1; out dx, eax; jmp dword ptr [edx]; 
0x555c2a65:  mov ds, word ptr [esi - 0x75000000]; inc ebp; push esp; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x556f7521:  mov dword ptr [0x4ffc0002], eax; clc; jmp dword ptr [edx]; 
0x55617065:  mov dword ptr [0x68], ecx; nop; lea esi, dword ptr [esi]; ret; 
0x5563736a:  mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x555f2c41:  mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x55637354:  mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x555f2d28:  mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x55643022:  mov dword ptr [eax + 0x50], ecx; mov dword ptr [eax + 0x54], edx; xor eax, eax; pop ebx; ret; 
0x55643025:  mov dword ptr [eax + 0x54], edx; xor eax, eax; pop ebx; ret; 
0x555c2d78:  mov dword ptr [eax + 0x94], edx; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0xb8], edx; pop ebx; ret; 
0x555f2a7a:  mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x55636432:  mov dword ptr [eax + 4], 0; add esp, 8; ret; 
0x555b3669:  mov dword ptr [eax + 4], 1; xor eax, eax; add esp, 0xc; ret; 
0x555c545e:  mov dword ptr [eax + 4], edx; mov eax, dword ptr [ebp + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x55636a58:  mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x5563642b:  mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; add esp, 8; ret; 
0x55643e7b:  mov dword ptr [eax + 8], ecx; xor eax, eax; pop ebx; ret; 
0x55636463:  mov dword ptr [eax + 8], edx; add esp, 8; ret; 
0x555b3663:  mov dword ptr [eax + 8], esi; mov esi, dword ptr [esp]; mov dword ptr [eax + 4], 1; xor eax, eax; add esp, 0xc; ret; 
0x555d5337:  mov dword ptr [eax], 0xc; xor eax, eax; add esp, 0xc; ret; 
0x555c6137:  mov dword ptr [eax], 9; mov eax, 0xffffffff; ret; 
0x55605163:  mov dword ptr [eax], eax; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x555f2a78:  mov dword ptr [eax], ecx; mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2a3b:  mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x55672568:  mov dword ptr [eax], edx; mov eax, 1; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x55584a58:  mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x555d6225:  mov dword ptr [eax], edx; ret; 
0x555c545c:  mov dword ptr [eax], esi; mov dword ptr [eax + 4], edx; mov eax, dword ptr [ebp + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x555a304a:  mov dword ptr [ebp - 0x4b8], edi; jmp edx; 
0x555a3040:  mov dword ptr [ebp - 0x510], 1; mov dword ptr [ebp - 0x4b8], edi; jmp edx; 
0x55596346:  mov dword ptr [ebp - 0x5a71f001], 0x89fffffe; ret 0x18e9; 
0x55582f46:  mov dword ptr [ebp - 0x7c], 1; mov ecx, edx; xchg ebx, ecx; mov eax, 6; call dword ptr gs
0x556f3a49:  mov dword ptr [ebp - 0xa], ecx; jmp dword ptr [edx]; 
0x555d2024:  mov dword ptr [ebx + 0x1954], 0; pop ebx; pop esi; ret; 
0x5557792f:  mov dword ptr [ebx + 0x368c], ecx; mov ebx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x55646a3b:  mov dword ptr [ebx + 0xf2c], eax; add esp, 0x18; pop ebx; ret; 
0x555d6228:  mov dword ptr [ecx + 0x190c], 0; ret; 
0x55577342:  mov dword ptr [ecx + 0x500], eax; mov dword ptr [ecx + 0x504], edx; pop ebx; ret; 
0x55577348:  mov dword ptr [ecx + 0x504], edx; pop ebx; ret; 
0x556e2560:  mov dword ptr [ecx + 0xc], 0x41c50404; or ebp, dword ptr [esi + 0xa]; ret; 
0x556e632b:  mov dword ptr [ecx + 0xc], 0x41c50404; or edx, dword ptr [esi + 0xa]; ret; 
0x556d3830:  mov dword ptr [ecx + 0xc], 0x44c50404; or ebx, dword ptr [edx + 0xa]; ret; 
0x555e5672:  mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x555f5f27:  mov dword ptr [ecx + 4], 0; pop esi; pop edi; pop ebp; ret; 
0x555e5663:  mov dword ptr [ecx + 4], edx; pop ebx; ret; 
0x5563565f:  mov dword ptr [ecx], 0xffff24e9; jmp dword ptr [esi - 0x39]; 
0x556e5b2d:  mov dword ptr [ecx], eax; add al, al; xor al, 0xf3; call dword ptr [esi]; 
0x555e5631:  mov dword ptr [ecx], edx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x555e5650:  mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x555e5670:  mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x555e5660:  mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x555e5621:  mov dword ptr [ecx], edx; pop ebx; ret; 
0x555c7468:  mov dword ptr [edi + 0x18], edx; mov edi, dword ptr [esp + 0x28]; mov dword ptr [esi + 0xc], edx; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; ret; 
0x55642d79:  mov dword ptr [edx + 0x3e], eax; xor eax, eax; ret; 
0x555e7a77:  mov dword ptr [edx + 3], eax; lea eax, dword ptr [edx + 6]; pop edi; ret; 
0x555e7a59:  mov dword ptr [edx + 4], eax; lea eax, dword ptr [edx + 5]; pop edi; ret; 
0x555e382b:  mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x555e7c2b:  mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; ret; 
0x555e6364:  mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x55692f7d:  mov dword ptr [edx - 2], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x55694329:  mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x55692e45:  mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x55694326:  mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x55637461:  mov dword ptr [edx], eax; add esp, 0x524; mov eax, esi; pop ebx; pop esi; ret; 
0x555e7b54:  mov dword ptr [edx], eax; lea eax, dword ptr [edx + 1]; ret; 
0x555e7942:  mov dword ptr [edx], eax; lea eax, dword ptr [edx + 3]; pop edi; ret; 
0x555e7b72:  mov dword ptr [edx], eax; lea eax, dword ptr [edx + 3]; ret; 
0x555e7a24:  mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, dword ptr [edx + 2]; pop edi; ret; 
0x555e7b64:  mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, dword ptr [edx + 2]; ret; 
0x555e3664:  mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x555e7a72:  mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, dword ptr [edx + 6]; pop edi; ret; 
0x555e537f:  mov dword ptr [edx], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x555e6432:  mov dword ptr [edx], eax; mov eax, edx; pop ebx; ret; 
0x555e3774:  mov dword ptr [edx], eax; mov eax, edx; ret; 
0x55613c3e:  mov dword ptr [edx], ecx; add esp, 0x28; pop ebx; ret; 
0x55687c58:  mov dword ptr [edx], ecx; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x55635738:  mov dword ptr [edx], ecx; pop ebx; ret; 
0x55687b3c:  mov dword ptr [edx], edi; pop esi; pop edi; ret; 
0x55612b40:  mov dword ptr [edx], esi; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x55636033:  mov dword ptr [esi + 0x14], 0; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x55654746:  mov dword ptr [esi + 0x20], eax; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x55684d35:  mov dword ptr [esi + 0xc], eax; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x555c746f:  mov dword ptr [esi + 0xc], edx; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; ret; 
0x55655068:  mov dword ptr [esi + 8], edx; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x555b3259:  mov dword ptr [esi], ecx; add dword ptr [eax], eax; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x7d]; 
0x555c4c7d:  mov dword ptr [esp + 0x10], edx; mov dword ptr [esp + 0xc], 0; call dword ptr [eax + 0x24]; 
0x55584774:  mov dword ptr [esp + 0x14], ecx; ror eax, 9; xor eax, dword ptr gs
0x555d2d65:  mov dword ptr [esp + 0x18], edx; mov dword ptr [esp], 0; call dword ptr [ecx]; 
0x555d2d42:  mov dword ptr [esp + 0x18], edx; neg eax; mov dword ptr [esp], eax; call dword ptr [ecx]; 
0x55645a3b:  mov dword ptr [esp + 0x1c], 0xcc; mov dword ptr [esp + 0x24], ecx; ror eax, 9; xor eax, dword ptr gs
0x55615e2b:  mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x11c; call dword ptr gs
0x55672254:  mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x555d4e25:  mov dword ptr [esp + 0x28], edx; call dword ptr [ebp]; 
0x555d4e46:  mov dword ptr [esp + 0x28], edx; mov dword ptr [esp + 0x2c], ecx; call eax; 
0x555d4e4a:  mov dword ptr [esp + 0x2c], ecx; call eax; 
0x555c4a32:  mov dword ptr [esp + 0xc], edi; mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x555f6975:  mov dword ptr [esp + 4], eax; call 0x98990; add esp, 0x18; pop ebx; ret; 
0x55612346:  mov dword ptr [esp + 4], eax; call 0xb48f0; add esp, 0x2c; ret; 
0x555f6f68:  mov dword ptr [esp + 4], eax; mov dword ptr [esp], edi; call esi; 
0x55575778:  mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebp - 0x7c]; mov dword ptr [esp], eax; mov eax, dword ptr [ebp + 0xc]; call dword ptr [eax]; 
0x555f6724:  mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; call esi; 
0x55682a42:  mov dword ptr [esp + 4], eax; mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 4]; 
0x555d7531:  mov dword ptr [esp + 4], ebp; mov dword ptr [esp + 8], edx; call eax; 
0x555c326b:  mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x555c4e72:  mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; call dword ptr [eax + 0x2c]; 
0x55672965:  mov dword ptr [esp + 4], ebp; mov eax, dword ptr [esi]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x55684f39:  mov dword ptr [esp + 4], ecx; call dword ptr [eax + 4]; 
0x55687e2a:  mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 8], esi; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x555a6e73:  mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call eax; 
0x55672143:  mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x55672172:  mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x555c504c:  mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x2c]; 
0x55672250:  mov dword ptr [esp + 4], edx; mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x555c4a36:  mov dword ptr [esp + 4], edx; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x55673f2d:  mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x5567212e:  mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x5567215e:  mov dword ptr [esp + 4], edx; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x55577858:  mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x30]; mov dword ptr [esp], edx; call eax; 
0x55672b70:  mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x60]; mov dword ptr [esp], edx; call eax; 
0x555f6671:  mov dword ptr [esp + 4], esi; mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; call edi; 
0x555c5e36:  mov dword ptr [esp + 8], 0; mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x555c4266:  mov dword ptr [esp + 8], 0; mov dword ptr [esp], edx; call eax; 
0x555c5b6a:  mov dword ptr [esp + 8], eax; lea eax, dword ptr [esi + 0x54]; mov dword ptr [esp + 4], eax; mov dword ptr [esp], ebp; call edi; 
0x55672961:  mov dword ptr [esp + 8], eax; mov dword ptr [esp + 4], ebp; mov eax, dword ptr [esi]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x555c487f:  mov dword ptr [esp + 8], ebp; mov dword ptr [esp], edx; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x1c]; 
0x555c4c76:  mov dword ptr [esp + 8], ebp; mov dword ptr [esp], esi; mov dword ptr [esp + 0x10], edx; mov dword ptr [esp + 0xc], 0; call dword ptr [eax + 0x24]; 
0x55626050:  mov dword ptr [esp + 8], ecx; call dword ptr [ebp - 0x78]; 
0x55612e78:  mov dword ptr [esp + 8], ecx; lea ecx, dword ptr [ebp - 0x28]; mov dword ptr [esp], ecx; mov dword ptr [esp + 4], edx; call dword ptr [ebp - 0x34]; 
0x555c5c4e:  mov dword ptr [esp + 8], ecx; mov dword ptr [esp], edx; call eax; 
0x555c4a3a:  mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x555f6720:  mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; call esi; 
0x555c3267:  mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x555c4e6e:  mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], ebp; mov dword ptr [esp], esi; call dword ptr [eax + 0x2c]; 
0x555a6e6f:  mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call eax; 
0x555d7535:  mov dword ptr [esp + 8], edx; call eax; 
0x555d785b:  mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x18]; mov dword ptr [esp + 4], edx; call eax; 
0x55674255:  mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x28]; mov dword ptr [esp], edi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x555c5041:  mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x34]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x2c]; 
0x555d7b5a:  mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x40]; mov dword ptr [esp + 4], edx; call eax; 
0x55687e2e:  mov dword ptr [esp + 8], esi; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x5561734b:  mov dword ptr [esp], 0; call 0xb92e0; add esp, 0x1c; ret; 
0x555d4f56:  mov dword ptr [esp], 0; call dword ptr [eax]; 
0x555d2d69:  mov dword ptr [esp], 0; call dword ptr [ecx]; 
0x55662a6f:  mov dword ptr [esp], eax; call 0x104a80; add esp, 0x2c; ret; 
0x55684543:  mov dword ptr [esp], eax; call 0x124bc0; add esp, 0x18; pop ebx; ret; 
0x55684563:  mov dword ptr [esp], eax; call 0x124c30; add esp, 0x18; pop ebx; ret; 
0x55612f57:  mov dword ptr [esp], eax; call 0x126c80; call dword ptr [ebp - 0x48]; 
0x55686b3b:  mov dword ptr [esp], eax; call 0x128a80; add esp, 0x18; pop ebx; ret; 
0x55585757:  mov dword ptr [esp], eax; call 0x276f0; add esp, 0x1c; ret; 
0x55586e43:  mov dword ptr [esp], eax; call 0x28dc0; add esp, 0x28; pop ebx; ret; 
0x55592078:  mov dword ptr [esp], eax; call 0x352d0; add esp, 0x28; pop ebx; ret; 
0x55593a40:  mov dword ptr [esp], eax; call 0x36110; add esp, 0x18; pop ebx; ret; 
0x55593b40:  mov dword ptr [esp], eax; call 0x3bef0; add esp, 0x18; pop ebx; ret; 
0x555a5a37:  mov dword ptr [esp], eax; call 0x424d0; add esp, 0x18; pop ebx; ret; 
0x555c6b53:  mov dword ptr [esp], eax; call 0x643c0; add esp, 0x18; pop ebx; ret; 
0x555c3c6b:  mov dword ptr [esp], eax; call 0x65c80; add esp, 0x28; pop ebx; ret; 
0x555b2743:  mov dword ptr [esp], eax; call 0x67300; add esp, 0x18; pop ebx; ret; 
0x555f5c26:  mov dword ptr [esp], eax; call 0x7e790; add esp, 0x18; pop ebx; ret; 
0x55662829:  mov dword ptr [esp], eax; call 0x97ff0; add esp, 0x18; pop ebx; ret; 
0x55662a29:  mov dword ptr [esp], eax; call 0x984e0; add esp, 0x18; pop ebx; ret; 
0x55662d21:  mov dword ptr [esp], eax; call 0x98e50; add esp, 0x18; pop ebx; ret; 
0x55662c39:  mov dword ptr [esp], eax; call 0x991e0; add esp, 0x28; pop ebx; ret; 
0x555f7b38:  mov dword ptr [esp], eax; call 0x9a6d0; add esp, 0x28; pop ebx; ret; 
0x555f7c70:  mov dword ptr [esp], eax; call 0x9b9e0; add esp, 0x18; pop ebx; ret; 
0x555f7d30:  mov dword ptr [esp], eax; call 0x9e640; add esp, 0x18; pop ebx; ret; 
0x555f7d70:  mov dword ptr [esp], eax; call 0xa1190; add esp, 0x18; pop ebx; ret; 
0x555f6e43:  mov dword ptr [esp], eax; call 0xa5b70; add esp, 0x28; pop ebx; ret; 
0x5560642c:  mov dword ptr [esp], eax; call 0xa7e90; add esp, 0x18; pop ebx; ret; 
0x55616767:  mov dword ptr [esp], eax; call 0xb85e0; add esp, 0x18; pop ebx; ret; 
0x55616a67:  mov dword ptr [esp], eax; call 0xb8bd0; add esp, 0x18; pop ebx; ret; 
0x555c2a6d:  mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x55682930:  mov dword ptr [esp], eax; call dword ptr [ebx - 0x1464]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x55682848:  mov dword ptr [esp], eax; call dword ptr [ebx - 0x146c]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x555d2d48:  mov dword ptr [esp], eax; call dword ptr [ecx]; 
0x55673f31:  mov dword ptr [esp], eax; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x555f6678:  mov dword ptr [esp], eax; call edi; 
0x555f672b:  mov dword ptr [esp], eax; call esi; 
0x5557577f:  mov dword ptr [esp], eax; mov eax, dword ptr [ebp + 0xc]; call dword ptr [eax]; 
0x55682a4a:  mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 4]; 
0x5564406a:  mov dword ptr [esp], eax; xchg edi, ebx; mov eax, 0x36; call dword ptr gs
0x55676f3c:  mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x555c5e3e:  mov dword ptr [esp], ebp; call dword ptr [eax + 0x40]; 
0x555d7b57:  mov dword ptr [esp], ebp; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x40]; mov dword ptr [esp + 4], edx; call eax; 
0x55612e7f:  mov dword ptr [esp], ecx; mov dword ptr [esp + 4], edx; call dword ptr [ebp - 0x34]; 
0x555f6669:  mov dword ptr [esp], edi; call 0x126c80; mov dword ptr [esp + 4], esi; mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; call edi; 
0x555f6f6c:  mov dword ptr [esp], edi; call esi; 
0x5567425d:  mov dword ptr [esp], edi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x555d7858:  mov dword ptr [esp], edi; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x18]; mov dword ptr [esp + 4], edx; call eax; 
0x55684f7c:  mov dword ptr [esp], edx; call dword ptr [eax + 8]; add esp, 0x18; pop ebx; ret; 
0x555d2f2e:  mov dword ptr [esp], edx; lea edx, dword ptr [ebx - 0x44875]; call 0x74da0; mov edx, dword ptr [ebx - 0x15c]; mov dword ptr [esp], 0; call dword ptr [edx]; 
0x555d4e22:  mov dword ptr [esp], edx; mov dword ptr [esp + 0x28], edx; call dword ptr [ebp]; 
0x55684f36:  mov dword ptr [esp], edx; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 4]; 
0x55684c61:  mov dword ptr [esp], edx; mov eax, dword ptr [eax + 0x1a0]; call eax; 
0x55684c61:  mov dword ptr [esp], edx; mov eax, dword ptr [eax + 0x1a0]; call eax; add esp, 0x18; pop ebx; ret; 
0x555c4a3e:  mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x555c4e76:  mov dword ptr [esp], esi; call dword ptr [eax + 0x2c]; 
0x55672132:  mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x55672162:  mov dword ptr [esp], esi; call dword ptr [eax]; 
0x555d2f70:  mov dword ptr [esp], esi; call dword ptr [edx]; 
0x555c4c7a:  mov dword ptr [esp], esi; mov dword ptr [esp + 0x10], edx; mov dword ptr [esp + 0xc], 0; call dword ptr [eax + 0x24]; 
0x555d752e:  mov dword ptr [esp], esi; mov dword ptr [esp + 4], ebp; mov dword ptr [esp + 8], edx; call eax; 
0x555c5049:  mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x2c]; 
0x5562604d:  mov dword ptr [esp], esi; mov dword ptr [esp + 8], ecx; call dword ptr [ebp - 0x78]; 
0x55672b6f:  mov dword ptr fs
0x55617064:  mov dword ptr gs
0x555d5336:  mov dword ptr gs
0x555c6136:  mov dword ptr gs
0x55637460:  mov dword ptr gs
0x55613c3d:  mov dword ptr gs
0x55647576:  mov eax, 0x10f; call dword ptr gs
0x55615e31:  mov eax, 0x11c; call dword ptr gs
0x55647757:  mov eax, 0x12b; call dword ptr gs
0x555b356b:  mov eax, 0x12e; call dword ptr gs
0x55617052:  mov eax, 0x14; call dword ptr gs
0x55617a76:  mov eax, 0x20; cmp dword ptr gs
0x55617a38:  mov eax, 0x20; ret; 
0x5569626a:  mov eax, 0x30002ec; sbb al, 0x8b; jmp ebx; 
0x55646056:  mov eax, 0x3d; call dword ptr gs
0x55617320:  mov eax, 0x41; call dword ptr gs
0x55617320:  mov eax, 0x41; call dword ptr gs
0x55645d4a:  mov eax, 0x4a; call dword ptr gs
0x5560646a:  mov eax, 0x4e; call dword ptr gs
0x55646476:  mov eax, 0x6f; call dword ptr gs
0x55615c66:  mov eax, 0x72; call dword ptr gs
0x55617978:  mov eax, 0x7d00; pop ebx; ret; 
0x55617936:  mov eax, 0x7f; pop ebx; cmp dword ptr gs
0x55617922:  mov eax, 0x7f; pop ebx; ret; 
0x5561657e:  mov eax, 0x80000000; mov dword ptr gs
0x55636844:  mov eax, 0x89fffffc; ret 0xcb8; 
0x55645e71:  mov eax, 0x8e; call dword ptr gs
0x55644d72:  mov eax, 0x91; call dword ptr gs
0x55617366:  mov eax, 0x93; call dword ptr gs
0x55646150:  mov eax, 0x94; call dword ptr gs
0x5562343d:  mov eax, 0x9c; call dword ptr gs
0x55623476:  mov eax, 0x9d; call dword ptr gs
0x55623536:  mov eax, 0xa0; call dword ptr gs
0x5562357a:  mov eax, 0xa1; call dword ptr gs
0x556a7152:  mov eax, 0xb8000000; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x556b5a58:  mov eax, 0xbcbbbab9; mov ebp, 0xc1c0bfbe; ret 0xc4c3; 
0x55647843:  mov eax, 0xc1; call dword ptr gs
0x556d3b48:  mov eax, 0xd1cffee; iretd; mov bh, 0xee; jmp dword ptr [edx]; 
0x5561755e:  mov eax, 0xd2; call dword ptr gs
0x55617463:  mov eax, 0xd3; call dword ptr gs
0x55617131:  mov eax, 0xd5; call dword ptr gs
0x5560644a:  mov eax, 0xd; call dword ptr gs
0x55623b36:  mov eax, 0xdb; call dword ptr gs
0x556c7c64:  mov eax, 0xf400014d; sub al, 0xf1; jmp esp; 
0x55617970:  mov eax, 0xfa; pop ebx; ret; 
0x55617968:  mov eax, 0xfffa; pop ebx; ret; 
0x55623d24:  mov eax, 0xffffffff; cmovbe eax, esi; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x55682866:  mov eax, 0xffffffff; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x5564483a:  mov eax, 0xffffffff; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x55645550:  mov eax, 0xffffffff; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x5564305a:  mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x55647a41:  mov eax, 1; add esp, 0x18; pop ebx; ret; 
0x55672520:  mov eax, 1; mov esi, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x5567256a:  mov eax, 1; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x55646c52:  mov eax, 1; pop ebx; ret; 
0x55687a68:  mov eax, 2; add esp, 0xc; ret; 
0x5567583f:  mov eax, 3; mov ebx, dword ptr [esp + 0x44]; mov esi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x55605420:  mov eax, 3; ret; 
0x55687a4c:  mov eax, 4; add esp, 0xc; ret; 
0x55605430:  mov eax, 4; ret; 
0x55605440:  mov eax, 5; ret; 
0x55605450:  mov eax, 6; ret; 
0x55605460:  mov eax, 7; ret; 
0x55687a58:  mov eax, 8; add esp, 0xc; ret; 
0x556a7156:  mov eax, 8; pop edi; ret; 
0x556c6858:  mov eax, dword ptr [0x10ffed74]; ret 0; 
0x55697141:  mov eax, dword ptr [0x30002df]; sbb al, 0x8b; jmp ebx; 
0x556c6e60:  mov eax, dword ptr [0x30ffefde]; call 0xdec08e6a; out dx, eax; jmp dword ptr [eax - 0x18]; 
0x556f7321:  mov eax, dword ptr [0x446c0002]; clc; jmp dword ptr [eax]; 
0x556f7339:  mov eax, dword ptr [0x44740002]; clc; jmp dword ptr [edi]; 
0x55567554:  mov eax, dword ptr [0xd0000010]; ret 7; 
0x55684c64:  mov eax, dword ptr [eax + 0x1a0]; call eax; 
0x55684c64:  mov eax, dword ptr [eax + 0x1a0]; call eax; add esp, 0x18; pop ebx; ret; 
0x555a6e6c:  mov eax, dword ptr [eax + 0x1c]; mov dword ptr [esp + 8], edi; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call eax; 
0x555c5924:  mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + 0x28]; ret; 
0x555c5927:  mov eax, dword ptr [eax + 0x28]; ret; 
0x55585178:  mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x55585138:  mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x55585058:  mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x55585158:  mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x55585078:  mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x55687924:  mov eax, dword ptr [eax + 0x50]; ret; 
0x55687934:  mov eax, dword ptr [eax + 0x5c]; ret; 
0x55685954:  mov eax, dword ptr [eax]; add esp, 0xc; ret; 
0x555a5a35:  mov eax, dword ptr [eax]; mov dword ptr [esp], eax; call 0x424d0; add esp, 0x18; pop ebx; ret; 
0x55584f36:  mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x55584e26:  mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x55584e56:  mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x555c2a6a:  mov eax, dword ptr [ebp + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x55674938:  mov eax, dword ptr [ebp + 0xb0]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x55612f54:  mov eax, dword ptr [ebp - 0x48]; mov dword ptr [esp], eax; call 0x126c80; call dword ptr [ebp - 0x48]; 
0x5557577c:  mov eax, dword ptr [ebp - 0x7c]; mov dword ptr [esp], eax; mov eax, dword ptr [ebp + 0xc]; call dword ptr [eax]; 
0x555f6675:  mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; call edi; 
0x555f6728:  mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; call esi; 
0x55644067:  mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; xchg edi, ebx; mov eax, 0x36; call dword ptr gs
0x5560735f:  mov eax, dword ptr [ebx + 0x3818]; add esp, 8; pop ebx; ret; 
0x55582026:  mov eax, dword ptr [ebx + 0x3910]; mov dword ptr [esp], edx; ror eax, 9; xor eax, dword ptr gs
0x55577522:  mov eax, dword ptr [ebx + 0x3934]; ror eax, 9; xor eax, dword ptr gs
0x5561654b:  mov eax, dword ptr [ebx + 0x3940]; ror eax, 9; xor eax, dword ptr gs
0x55682a4d:  mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 4]; 
0x556a3272:  mov eax, dword ptr [ebx + eax*4 - 0x567f4]; sub eax, ecx; pop ebp; pop ebx; ret; 
0x555d4f50:  mov eax, dword ptr [ebx - 0x15c]; mov dword ptr [esp], 0; call dword ptr [eax]; 
0x55584a52:  mov eax, dword ptr [ebx - 0x60]; mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x55642f7b:  mov eax, dword ptr [ebx - 0xf8]; mov dword ptr gs
0x55684c5b:  mov eax, dword ptr [ebx - 0xfc]; mov dword ptr [esp], edx; mov eax, dword ptr [eax + 0x1a0]; call eax; 
0x555e7a74:  mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, dword ptr [edx + 6]; pop edi; ret; 
0x555e7a55:  mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, dword ptr [edx + 5]; pop edi; ret; 
0x555e3824:  mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x555e7c24:  mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; ret; 
0x555e3844:  mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x5566333b:  mov eax, dword ptr [ecx - 0x100]; add eax, dword ptr gs
0x5558522b:  mov eax, dword ptr [ecx - 0x130]; add eax, dword ptr gs
0x55584f2f:  mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs
0x55584e7f:  mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs
0x55584e4f:  mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs
0x55584d7f:  mov eax, dword ptr [ecx - 0x130]; mov eax, dword ptr gs
0x5558526b:  mov eax, dword ptr [ecx - 0x90]; add eax, dword ptr gs
0x5558524b:  mov eax, dword ptr [ecx - 0xc0]; add eax, dword ptr gs
0x55577b5b:  mov eax, dword ptr [ecx - 0xf8]; add eax, dword ptr gs
0x55617b60:  mov eax, dword ptr [ecx - 0xf8]; cmp dword ptr gs
0x555c6130:  mov eax, dword ptr [ecx - 0xf8]; mov dword ptr gs
0x555e7940:  mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, dword ptr [edx + 3]; pop edi; ret; 
0x555e7b70:  mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, dword ptr [edx + 3]; ret; 
0x555e537d:  mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x555e6430:  mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; pop ebx; ret; 
0x555e7b51:  mov eax, dword ptr [ecx]; mov word ptr [edx], ax; lea eax, dword ptr [edx + 1]; ret; 
0x555e7b61:  mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, dword ptr [edx + 2]; ret; 
0x555e3651:  mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x555e3771:  mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x55623e75:  mov eax, dword ptr [edx + 0x14]; add esp, 0x28; pop esi; pop edi; pop ebp; ret; 
0x55583f71:  mov eax, dword ptr [edx + ecx*4 + 0x24]; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x55685948:  mov eax, dword ptr [edx]; add esp, 0xc; ret; 
0x55635736:  mov eax, dword ptr [edx]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x555c352e:  mov eax, dword ptr [esi + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x55672140:  mov eax, dword ptr [esi + 4]; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x5567216f:  mov eax, dword ptr [esi + 4]; mov dword ptr [esp + 4], edi; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x55655061:  mov eax, dword ptr [esi + 8]; mov ebx, dword ptr [esp + 0x14]; mov dword ptr [esi + 8], edx; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x55584923:  mov eax, dword ptr [esi + eax]; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x555c387f:  mov eax, dword ptr [esi + edx + 0x94]; mov edx, dword ptr [esp + 0x40]; mov dword ptr [esp + 8], edi; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x1c]; 
0x5567224c:  mov eax, dword ptr [esi]; add edx, ecx; mov dword ptr [esp + 4], edx; mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x55672969:  mov eax, dword ptr [esi]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x55685950:  mov eax, dword ptr [esp + 0x10]; mov eax, dword ptr [eax]; add esp, 0xc; ret; 
0x55577f37:  mov eax, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x1c]; add esp, 0x24; ret; 
0x55676f35:  mov eax, dword ptr [esp + 0x1c4]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x55684e5f:  mov eax, dword ptr [esp + 0x1c]; add esp, 0x34; pop ebx; pop esi; ret; 
0x55585753:  mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; call 0x276f0; add esp, 0x1c; ret; 
0x55682a46:  mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp], eax; mov eax, dword ptr [ebx + 0xee0]; call dword ptr [eax + 4]; 
0x55612342:  mov eax, dword ptr [esp + 0x30]; mov dword ptr [esp + 4], eax; call 0xb48f0; add esp, 0x2c; ret; 
0x55662a6b:  mov eax, dword ptr [esp + 0x30]; mov dword ptr [esp], eax; call 0x104a80; add esp, 0x2c; ret; 
0x55585030:  mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x55663040:  mov eax, dword ptr [esp + 4]; and eax, 0xffff; ror ax, 8; ret; 
0x55663030:  mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x55637366:  mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x55637350:  mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x555c5920:  mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + 0x28]; ret; 
0x55687920:  mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x55687930:  mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x55636a50:  mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x55636a28:  mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x55636a47:  mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x55584a51:  mov eax, dword ptr fs
0x55584f35:  mov eax, dword ptr gs
0x55584e25:  mov eax, dword ptr gs
0x55584e55:  mov eax, dword ptr gs
0x55644066:  mov eax, dword ptr gs
0x55615e29:  mov eax, ebp; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x11c; call dword ptr gs
0x55623842:  mov eax, ebp; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0xb4; call dword ptr gs
0x55623922:  mov eax, ebp; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0xb5; call dword ptr gs
0x556c4564:  mov eax, ebx; cld; ljmp ptr [ecx - 0x36000328]; fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x55617d68:  mov eax, ebx; sub eax, dword ptr [ebx + esi*4 - 0xe9280]; jmp eax; 
0x555c2e55:  mov eax, edi; mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x555b2c7b:  mov eax, edi; mov ebx, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x44]; mov edi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x5564433a:  mov eax, edi; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x55674d53:  mov eax, edi; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x55637c58:  mov eax, edi; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 8; 
0x55575e74:  mov eax, edi; pop ebx; pop esi; pop edi; pop ebp; ret 0x10; 
0x55586f45:  mov eax, edi; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x555f7969:  mov eax, edi; pop esi; pop edi; ret; 
0x555b2e44:  mov eax, edx; add esp, 0x7c; ret; 
0x5566305a:  mov eax, edx; and eax, 0xffffff; ret; 
0x555d6770:  mov eax, edx; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x555f3e6e:  mov eax, esi; add esp, 8; pop esi; pop edi; pop ebp; ret; 
0x555b2d45:  mov eax, esi; mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x55643b71:  mov eax, esi; mov edi, dword ptr [esp + 0x34]; mov esi, dword ptr [esp + 0x30]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x55575349:  mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x555f3962:  mov ebp, 0x30f801ff; in eax, dx; add eax, ecx; pop edi; ret; 
0x55656f27:  mov ebp, 0x5b2cc483; pop esi; pop edi; pop ebp; ret; 
0x555f3126:  mov ebp, 0x5ff801c0; ret; 
0x555f3925:  mov ebp, 0x5ff801ff; ret; 
0x555d362c:  mov ebp, 0x89000005; ret 0xd285; 
0x556b5a5d:  mov ebp, 0xc1c0bfbe; ret 0xc4c3; 
0x555a304b:  mov ebp, 0xfffffb48; jmp edx; 
0x5557695f:  mov ebp, 0xffffff4c; add byte ptr [esi - 1], dh; test dword ptr [edi + edi*8 - 1], eax; inc dword ptr [ebx - 0xb77b]; jmp dword ptr [eax]; 
0x5557792b:  mov ebp, dword ptr [esp + 0x18]; mov dword ptr [ebx + 0x368c], ecx; mov ebx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x5568555d:  mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 4; 
0x55637c62:  mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 8; 
0x5564425d:  mov ebp, dword ptr [esp + 0x3c]; add esp, 0x40; ret; 
0x5567365f:  mov ebp, dword ptr [esp + 0x488]; add esp, 0x48c; ret; 
0x5563753a:  mov ebp, dword ptr [esp + 0x548]; add esp, 0x54c; ret; 
0x555c4347:  mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x555c6f55:  mov ebp, dword ptr [esp + 0xe8]; add esp, 0xec; ret; 
0x5558492d:  mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x555c4346:  mov ebp, dword ptr fs
0x555f274b:  mov ebx, 0x3000c61; or al, 0x91; jmp ecx; 
0x556b5a5b:  mov ebx, 0xbfbebdbc; rol cl, 0xc2; ret; 
0x55645e6d:  mov ebx, dword ptr [esp + 0x10]; mov eax, 0x8e; call dword ptr gs
0x55667843:  mov ebx, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x5563602f:  mov ebx, dword ptr [esp + 0x14]; mov dword ptr [esi + 0x14], 0; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x55655064:  mov ebx, dword ptr [esp + 0x14]; mov dword ptr [esi + 8], edx; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x55577865:  mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x55684d31:  mov ebx, dword ptr [esp + 0x24]; mov dword ptr [esi + 0xc], eax; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x555b2c7d:  mov ebx, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x44]; mov edi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x55675844:  mov ebx, dword ptr [esp + 0x44]; mov esi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x5561264d:  mov ebx, dword ptr [esp + 0x70]; mov esi, dword ptr [esp + 0x74]; mov edi, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x55577935:  mov ebx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x55615d2b:  mov ebx, dword ptr [esp + 0xc]; mov eax, 7; call dword ptr gs
0x555d5332:  mov ebx, dword ptr [esp + 4]; mov dword ptr gs
0x55646052:  mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs
0x55645d46:  mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs
0x55606466:  mov ebx, dword ptr [esp + 4]; mov eax, 0x4e; call dword ptr gs
0x55646472:  mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs
0x55617362:  mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs
0x5564614c:  mov ebx, dword ptr [esp + 4]; mov eax, 0x94; call dword ptr gs
0x55623472:  mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs
0x55623532:  mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs
0x55623576:  mov ebx, dword ptr [esp + 4]; mov eax, 0xa1; call dword ptr gs
0x55623439:  mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs
0x55583f75:  mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x55615e2f:  mov ebx, eax; mov eax, 0x11c; call dword ptr gs
0x55644355:  mov ecx, 0x5409; mov esi, eax; xchg edi, ebx; mov eax, 0x36; call dword ptr gs
0x555a3363:  mov ecx, 0x89ffffca; ret 0x16eb; 
0x556b5a59:  mov ecx, 0xbdbcbbba; mov esi, 0xc2c1c0bf; ret; 
0x555c2d7e:  mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0xb8], edx; pop ebx; ret; 
0x55692e42:  mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x55583768:  mov ecx, dword ptr [ebp - 0x1d4]; xchg ebx, ecx; mov eax, 6; call dword ptr gs
0x55623723:  mov ecx, dword ptr [ebp - 0x20]; mov edx, dword ptr [ebp - 0x1c]; mov edi, eax; xchg edi, ebx; mov eax, 0xf2; call dword ptr gs
0x556a326b:  mov ecx, dword ptr [ebx + ecx*4 - 0x567f4]; mov eax, dword ptr [ebx + eax*4 - 0x567f4]; sub eax, ecx; pop ebp; pop ebx; ret; 
0x55655226:  mov ecx, dword ptr [ebx - 0x130]; pop ebx; mov ecx, dword ptr gs
0x555d2d3c:  mov ecx, dword ptr [ebx - 0x15c]; mov dword ptr [esp + 0x18], edx; neg eax; mov dword ptr [esp], eax; call dword ptr [ecx]; 
0x555d2d5d:  mov ecx, dword ptr [ebx - 0x15c]; xor ebp, ebp; mov dword ptr [esp + 0x18], edx; mov dword ptr [esp], 0; call dword ptr [ecx]; 
0x5565522e:  mov ecx, dword ptr [ecx]; test byte ptr [ecx + eax*2 + 1], 0x40; cmove eax, edx; ret; 
0x55577930:  mov ecx, dword ptr [esi + esi + 0x5c8b0000]; and al, 0xc; add esp, 0x1c; ret; 
0x55615d27:  mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 7; call dword ptr gs
0x55645e69:  mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x8e; call dword ptr gs
0x55645368:  mov ecx, dword ptr [esp + 0x54]; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14d; call dword ptr gs
0x55623435:  mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs
0x55623b2c:  mov ecx, dword ptr [esp + 0xc]; mov edi, dword ptr [esp + 8]; xchg edi, ebx; mov eax, 0xdb; call dword ptr gs
0x55644e6c:  mov ecx, dword ptr [esp + 0xc]; mov esi, eax; xchg edi, ebx; mov eax, 0x92; call dword ptr gs
0x55645d42:  mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs
0x55606462:  mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4e; call dword ptr gs
0x55623572:  mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa1; call dword ptr gs
0x555d2c54:  mov ecx, dword ptr [esp + eax]; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x77]; 
0x55687d77:  mov ecx, dword ptr [esp]; ret; 
0x5565522d:  mov ecx, dword ptr gs
0x5564616b:  mov ecx, eax; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x94; call dword ptr gs
0x55606446:  mov ecx, eax; xchg ebx, ecx; mov eax, 0xd; call dword ptr gs
0x55617e4a:  mov ecx, ebp; mov edx, eax; xchg ebx, ecx; mov eax, 6; call dword ptr gs
0x5563236b:  mov ecx, ebx; sub ecx, dword ptr [ebx + edx*4 - 0xcec7c]; jmp ecx; 
0x556d4b7d:  mov ecx, ecx; out dx, al; jmp dword ptr [edx]; 
0x5561712d:  mov ecx, edx; xchg ebx, ecx; mov eax, 0xd5; call dword ptr gs
0x55582f4d:  mov ecx, edx; xchg ebx, ecx; mov eax, 6; call dword ptr gs
0x556a643b:  mov edi, 0; lea eax, dword ptr [ecx + 2]; ret; 
0x556a644b:  mov edi, 0; lea eax, dword ptr [ecx + 3]; ret; 
0x556a645b:  mov edi, 0; lea eax, dword ptr [ecx + 5]; ret; 
0x556a646b:  mov edi, 0; lea eax, dword ptr [ecx + 6]; ret; 
0x556a647b:  mov edi, 0; lea eax, dword ptr [ecx + 7]; ret; 
0x556a6b2b:  mov edi, 0; lea eax, dword ptr [edx + 0xe]; ret; 
0x555e564b:  mov edi, 0; mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x5560512d:  mov edi, 0x5f000000; pop esi; ret; 
0x555f7968:  mov edi, 0x5f5ef889; ret; 
0x55663337:  mov edi, 0x8b0009dc; add dword ptr [eax], 0x65ffffff; add eax, dword ptr [0]; ret; 
0x55577253:  mov edi, 0xe8000000; test dl, ah; pop es; add byte ptr [ecx - 0x47fbdbbc], cl; ret 0; 
0x55615c5d:  mov edi, 0xffffffff; mov esi, edx; xchg edi, ebx; mov eax, 0x72; call dword ptr gs
0x555b3565:  mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x12e; call dword ptr gs
0x55685559:  mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 4; 
0x55637c5e:  mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 8; 
0x5557786d:  mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x555c746b:  mov edi, dword ptr [esp + 0x28]; mov dword ptr [esi + 0xc], edx; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; ret; 
0x55643b73:  mov edi, dword ptr [esp + 0x34]; mov esi, dword ptr [esp + 0x30]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x55644259:  mov edi, dword ptr [esp + 0x38]; mov ebp, dword ptr [esp + 0x3c]; add esp, 0x40; ret; 
0x55577e42:  mov edi, dword ptr [esp + 0x40]; add esp, 0x44; ret; 
0x55687c54:  mov edi, dword ptr [esp + 0x44]; mov dword ptr [edx], ecx; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x55673658:  mov edi, dword ptr [esp + 0x484]; mov ebp, dword ptr [esp + 0x488]; add esp, 0x48c; ret; 
0x55637533:  mov edi, dword ptr [esp + 0x544]; mov ebp, dword ptr [esp + 0x548]; add esp, 0x54c; ret; 
0x555c4343:  mov edi, dword ptr [esp + 0x64]; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x55612655:  mov edi, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x5564783d:  mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xc1; call dword ptr gs
0x5561745d:  mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xd3; call dword ptr gs
0x555c6f4e:  mov edi, dword ptr [esp + 0xe4]; mov ebp, dword ptr [esp + 0xe8]; add esp, 0xec; ret; 
0x55636427:  mov edi, dword ptr [esp + 4]; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; add esp, 8; ret; 
0x55584929:  mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x55623b30:  mov edi, dword ptr [esp + 8]; xchg edi, ebx; mov eax, 0xdb; call dword ptr gs
0x55623729:  mov edi, eax; xchg edi, ebx; mov eax, 0xf2; call dword ptr gs
0x55696377:  mov edi, edi; jecxz 0x138308; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x55697357:  mov edi, edi; jecxz 0x1392e8; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x55645b5e:  mov edi, edx; xchg edi, ebx; mov eax, 0xd2; call dword ptr gs
0x55647d62:  mov edx, 0x89fffffc; ret 0xc031; 
0x55644a5d:  mov edx, 0xffffffff; call 0xe6980; sar eax, 0x1f; add esp, 0xc; ret; 
0x556a3725:  mov edx, 0xffffffff; cmovbe eax, edx; pop esi; pop ebp; pop ebx; ret; 
0x55617940:  mov edx, 0xffffffff; cmovne eax, edx; ret; 
0x55645b59:  mov edx, 0xffffffff; mov edi, edx; xchg edi, ebx; mov eax, 0xd2; call dword ptr gs
0x55617c58:  mov edx, 1; mov ecx, esi; xchg ebx, ecx; mov eax, 6; call dword ptr gs
0x55637364:  mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x55623726:  mov edx, dword ptr [ebp - 0x1c]; mov edi, eax; xchg edi, ebx; mov eax, 0xf2; call dword ptr gs
0x55616548:  mov edx, dword ptr [ebp - 0x38]; mov eax, dword ptr [ebx + 0x3940]; ror eax, 9; xor eax, dword ptr gs
0x55612e75:  mov edx, dword ptr [ebp - 0x3c]; mov dword ptr [esp + 8], ecx; lea ecx, dword ptr [ebp - 0x28]; mov dword ptr [esp], ecx; mov dword ptr [esp + 4], edx; call dword ptr [ebp - 0x34]; 
0x555a3033:  mov edx, dword ptr [ebx + eax*4 - 0x497b4]; add edx, dword ptr [ebp - 0x49c]; mov dword ptr [ebp - 0x510], 1; mov dword ptr [ebp - 0x4b8], edi; jmp edx; 
0x555d2f66:  mov edx, dword ptr [ebx - 0x15c]; and eax, ecx; sub esi, eax; mov dword ptr [esp], esi; call dword ptr [edx]; 
0x55635730:  mov edx, dword ptr [ebx - 0x34]; mov eax, dword ptr [edx]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x55617a70:  mov edx, dword ptr [ecx - 0xf8]; mov eax, 0x20; cmp dword ptr gs
0x55624b27:  mov edx, dword ptr [edx + 8]; pop ebx; pop esi; mov eax, edx; ret; 
0x555f2a23:  mov edx, dword ptr [esi]; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x55687b38:  mov edx, dword ptr [esp + 0x10]; mov dword ptr [edx], edi; pop esi; pop edi; ret; 
0x55623431:  mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs
0x55615d23:  mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 7; call dword ptr gs
0x555d785f:  mov edx, dword ptr [esp + 0x18]; mov dword ptr [esp + 4], edx; call eax; 
0x55645e65:  mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x8e; call dword ptr gs
0x55577f3b:  mov edx, dword ptr [esp + 0x1c]; add esp, 0x24; ret; 
0x5563645f:  mov edx, dword ptr [esp + 0x1c]; mov dword ptr [eax + 8], edx; add esp, 8; ret; 
0x55684c57:  mov edx, dword ptr [esp + 0x1c]; mov eax, dword ptr [ebx - 0xfc]; mov dword ptr [esp], edx; mov eax, dword ptr [eax + 0x1a0]; call eax; 
0x55674259:  mov edx, dword ptr [esp + 0x28]; mov dword ptr [esp], edi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x5557785c:  mov edx, dword ptr [esp + 0x30]; mov dword ptr [esp], edx; call eax; 
0x55577854:  mov edx, dword ptr [esp + 0x34]; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x30]; mov dword ptr [esp], edx; call eax; 
0x555c5045:  mov edx, dword ptr [esp + 0x34]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x2c]; 
0x55577e3a:  mov edx, dword ptr [esp + 0x34]; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x40]; add esp, 0x44; ret; 
0x555d752a:  mov edx, dword ptr [esp + 0x3c]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], ebp; mov dword ptr [esp + 8], edx; call eax; 
0x555d7b5e:  mov edx, dword ptr [esp + 0x40]; mov dword ptr [esp + 4], edx; call eax; 
0x55672b74:  mov edx, dword ptr [esp + 0x60]; mov dword ptr [esp], edx; call eax; 
0x55672b6c:  mov edx, dword ptr [esp + 0x64]; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x60]; mov dword ptr [esp], edx; call eax; 
0x55606442:  mov edx, dword ptr [esp + 4]; mov ecx, eax; xchg ebx, ecx; mov eax, 0xd; call dword ptr gs
0x55636a54:  mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x55642d74:  mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x55647570:  mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0x10f; call dword ptr gs
0x55687d7b:  mov edx, dword ptr [esp]; ret; 
0x55676a5c:  mov edx, eax; add esp, 0x434; mov eax, edx; pop esi; pop edi; ret; 
0x55687e3d:  mov edx, eax; sar edx, 0x1f; add esp, 0x18; pop esi; ret; 
0x55617e4c:  mov edx, eax; xchg ebx, ecx; mov eax, 6; call dword ptr gs
0x55646050:  mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs
0x55646470:  mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs
0x55617360:  mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs
0x5564614a:  mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x94; call dword ptr gs
0x55623470:  mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs
0x55623530:  mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs
0x55645d40:  mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs
0x55606460:  mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4e; call dword ptr gs
0x55623570:  mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa1; call dword ptr gs
0x55625749:  mov edx, edi; ret 0xfffb; 
0x55587461:  mov edx, esi; mov esi, dword ptr [ebp - 0x94]; mov ecx, edx; xchg ebx, ecx; mov eax, 6; call dword ptr gs
0x55645e72:  mov es, word ptr [eax]; add byte ptr [eax], al; call dword ptr gs
0x556a587e:  mov es, word ptr [eax]; add byte ptr [eax], al; lea eax, dword ptr [edi - 8]; pop edi; ret; 
0x556e6069:  mov es, word ptr [ecx]; add byte ptr [esi + edi*4 - 0xd], dh; jmp dword ptr [eax]; 
0x55567f79:  mov esi, 0x49000f; add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; ret 0x11; 
0x556c4a78:  mov esi, 0x4efffcf9; cli; cld; call esp; 
0x55646b34:  mov esi, 0x8900768d; clc; pop esi; pop edi; pop ebp; ret; 
0x55667168:  mov esi, 0x8d06244c; imul edx, eax, 0x8357e983; std; or dword ptr [edi], ecx; inc esi; int 0x80; 
0x555f7964:  mov esi, 0xbf75c085; mov eax, edi; pop esi; pop edi; ret; 
0x556b5a5e:  mov esi, 0xc2c1c0bf; ret; 
0x556d4020:  mov esi, 0xd1cffee; jns 0x175fe4; out dx, al; jmp dword ptr [edx]; 
0x556b6d2a:  mov esi, 0xfa1fb992; xchg dword ptr [esp + eax + 0x6fa9ce9d], esp; ret; 
0x55587463:  mov esi, dword ptr [ebp - 0x94]; mov ecx, edx; xchg ebx, ecx; mov eax, 6; call dword ptr gs
0x5568276f:  mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; mov eax, edx; ret; 
0x5566783f:  mov esi, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x55685555:  mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 4; 
0x55637c5a:  mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 8; 
0x55605b3c:  mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; imul eax, edx; ret; 
0x555c7472:  mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; ret; 
0x55577869:  mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x55643b77:  mov esi, dword ptr [esp + 0x30]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x5563627a:  mov esi, dword ptr [esp + 0x30]; setne al; mov edi, dword ptr [esp + 0x34]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x55644255:  mov esi, dword ptr [esp + 0x34]; mov edi, dword ptr [esp + 0x38]; mov ebp, dword ptr [esp + 0x3c]; add esp, 0x40; ret; 
0x55577e3e:  mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x40]; add esp, 0x44; ret; 
0x55687c50:  mov esi, dword ptr [esp + 0x40]; mov edi, dword ptr [esp + 0x44]; mov dword ptr [edx], ecx; mov ebp, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x55675848:  mov esi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x5563752c:  mov esi, dword ptr [esp + 0x540]; mov edi, dword ptr [esp + 0x544]; mov ebp, dword ptr [esp + 0x548]; add esp, 0x54c; ret; 
0x555c433f:  mov esi, dword ptr [esp + 0x60]; mov edi, dword ptr [esp + 0x64]; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x55612651:  mov esi, dword ptr [esp + 0x74]; mov edi, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x55583f78:  mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x555d532e:  mov esi, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov dword ptr gs
0x555b3666:  mov esi, dword ptr [esp]; mov dword ptr [eax + 4], 1; xor eax, eax; add esp, 0xc; ret; 
0x55584926:  mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x55623d22:  mov esi, eax; mov eax, 0xffffffff; cmovbe eax, esi; mov esi, dword ptr [esp]; add esp, 8; ret; 
0x5564435a:  mov esi, eax; xchg edi, ebx; mov eax, 0x36; call dword ptr gs
0x55644e70:  mov esi, eax; xchg edi, ebx; mov eax, 0x92; call dword ptr gs
0x55677a40:  mov esi, ebx; sub esi, dword ptr [ebx + eax*4 - 0x895a8]; jmp esi; 
0x55615c62:  mov esi, edx; xchg edi, ebx; mov eax, 0x72; call dword ptr gs
0x555e5677:  mov esi, esi; lea edi, dword ptr [edi]; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x556c6b7c:  mov esi, ss; add byte ptr [eax], al; add al, 0xd9; out dx, al; call eax; 
0x556a527a:  mov esp, 0x27; add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x5560542a:  mov esp, 0x27; add byte ptr [eax + 4], bh; ret; 
0x5560543a:  mov esp, 0x27; add byte ptr [eax + 5], bh; ret; 
0x5560544a:  mov esp, 0x27; add byte ptr [eax + 6], bh; ret; 
0x5560545a:  mov esp, 0x27; add byte ptr [eax + 7], bh; ret; 
0x55653d2a:  mov esp, 0x27; add byte ptr [ebx - 0x18], dl; cmp eax, 0x81000340; ret; 
0x55646a4a:  mov esp, 0x27; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000413; ret; 
0x55613c4a:  mov esp, 0x27; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000741; ret; 
0x555f7b4a:  mov esp, 0x27; add byte ptr [ebx - 0x18], dl; sbb eax, 0x81000902; ret; 
0x55656e5a:  mov esp, 0x27; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x77]; 
0x555e567a:  mov esp, 0x27; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; pop ebx; ret; 
0x556a6f5a:  mov esp, 0x27; add dh, dh; ret 0xf10; 
0x555f284a:  mov esp, 0x3000c60; or al, 0x91; jmp ecx; 
0x556c6b54:  mov esp, 0x40000d5; shr dh, cl; jmp esp; 
0x555f6d2e:  mov esp, 0x4245489; mov eax, dword ptr [eax + 8]; mov dword ptr [esp], eax; call edi; 
0x55673659:  mov esp, 0x48424; add byte ptr [ebx + 0x48824ac], cl; add byte ptr [eax], al; add esp, 0x48c; ret; 
0x55637534:  mov esp, 0x54424; add byte ptr [ebx + 0x54824ac], cl; add byte ptr [eax], al; add esp, 0x54c; ret; 
0x555f3571:  mov esp, 0x5ff801c0; ret; 
0x55603166:  mov esp, 0x8301c083; ret 0x3901; 
0x55603163:  mov esp, 0x83bc4d8b; rol byte ptr [ecx], 0x83; ret 0x3901; 
0x555a6a65:  mov esp, 0x8904c683; ret 0xfac1; 
0x55643136:  mov esp, 0x8b000004; mov word ptr [eax + ebx*8], fs; add al, 0; add al, ch; sub eax, 0x8100044c; ret; 
0x556c5178:  mov esp, 0xcfffd2c; sub eax, 0x2c06fffd; std; jmp dword ptr [esi + 0x2c]; 
0x556c5774:  mov esp, 0xcfffd5c; pop ebp; std; lcall ptr [ebp + ebx*2 - 3]; call dword ptr [esi + 0x5c]; 
0x555c6f4f:  mov esp, 0xe424; add byte ptr [ebx + 0xe824ac], cl; add byte ptr [eax], al; add esp, 0xec; ret; 
0x555f333c:  mov esp, 0xfc229c0; xchg byte ptr [edx + 0x1000002], bl; clc; add eax, ecx; pop edi; ret; 
0x555d6071:  mov esp, dword ptr [ecx + eax]; add byte ptr [ecx], bh; ret 0x850f; 
0x555d2d3d:  mov esp, dword ptr [esi + edi*8 + 0x5489ffff]; and al, 0x18; neg eax; mov dword ptr [esp], eax; call dword ptr [ecx]; 
0x555d2d5e:  mov esp, dword ptr [esi + edi*8 - 0x12ce0001]; mov dword ptr [esp + 0x18], edx; mov dword ptr [esp], 0; call dword ptr [ecx]; 
0x5559634a:  mov fs, word ptr [ebp - 0x76000002]; ret 0x18e9; 
0x556c6439:  mov gs, esp; dec dword ptr [eax + 0x40000ab]; xchg eax, edx; in al, dx; jmp eax; 
0x556d3529:  mov ss, ebp; in eax, dx; jmp dword ptr [edx]; 
0x555f7a68:  mov ss, word ptr [ebp - 0x137cfff0]; sub byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x5564313b:  mov word ptr [eax + ebx*8], fs; add al, 0; add al, ch; sub eax, 0x8100044c; ret; 
0x556f6a44:  mov word ptr [eax + edi*8], gs; call dword ptr [eax]; 
0x555d4f4f:  mov word ptr [ebx - 0x15b7d], cs; inc edi; add al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [eax]; 
0x556a326c:  mov word ptr [ebx - 0x567f4], cs; mov eax, dword ptr [ebx + eax*4 - 0x567f4]; sub eax, ecx; pop ebp; pop ebx; ret; 
0x5563236e:  mov word ptr [ebx - 0xcec7c], ss; jmp ecx; 
0x555e5662:  mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x555e5630:  mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x555e5620:  mov word ptr [ecx], dx; pop ebx; ret; 
0x556f3d44:  mov word ptr [edi - 9], es; jmp dword ptr [esi]; 
0x55642d78:  mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x555e7a58:  mov word ptr [edx + 4], ax; lea eax, dword ptr [edx + 5]; pop edi; ret; 
0x55692f7c:  mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x555e7b53:  mov word ptr [edx], ax; lea eax, dword ptr [edx + 1]; ret; 
0x555e7a23:  mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, dword ptr [edx + 2]; pop edi; ret; 
0x555e7b63:  mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, dword ptr [edx + 2]; ret; 
0x555e3663:  mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x555e3653:  mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x555e3773:  mov word ptr [edx], ax; mov eax, edx; ret; 
0x55694a3b:  mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x556e653c:  mov word ptr [esi + 0x1a850001], cs; hlt; call dword ptr [eax]; 
0x55692e79:  movd dword ptr [eax - 8], mm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x5569452a:  movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x5569452f:  movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x55694525:  movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x555e3630:  movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x555f2d7c:  movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2c5c:  movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2c7c:  movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555e3634:  movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x555f2d23:  movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2d53:  movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2c60:  movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2b40:  movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2b60:  movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2b3c:  movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2b5c:  movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2b7c:  movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555e7c4d:  movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x555e386d:  movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x555e7c6d:  movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x555e372d:  movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x555e7b2d:  movlpd qword ptr [edx + 7], xmm1; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x555e374d:  movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x555f215c:  movlpd qword ptr [edx + 8], xmm1; mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x555e5428:  movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x555e7974:  movlpd qword ptr [edx], xmm0; lea eax, dword ptr [edx + 7]; pop edi; ret; 
0x555e3827:  movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x555e7c27:  movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; ret; 
0x555e6360:  movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x555e3847:  movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x555e7c49:  movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x555e3869:  movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x555e7c69:  movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x555e3729:  movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x555e7b29:  movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x555e3749:  movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x555e5424:  movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x555e3820:  movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x555e7c20:  movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; ret; 
0x555e3840:  movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x555e7970:  movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, dword ptr [edx + 7]; pop edi; ret; 
0x555e7c40:  movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x555e3860:  movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x555e7c60:  movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x555e7c44:  movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x555e3864:  movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x555e7c64:  movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x555f2d24:  movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2d54:  movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2c61:  movlps qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2b41:  movlps qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2b61:  movlps qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2b3d:  movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2b5d:  movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2b7d:  movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555e7c4e:  movlps qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x555e386e:  movlps qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x555e7c6e:  movlps qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x555e372e:  movlps qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x555e7b2e:  movlps qword ptr [edx + 7], xmm1; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x555e374e:  movlps qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x555f215d:  movlps qword ptr [edx + 8], xmm1; mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x555e5429:  movlps qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x555e7975:  movlps qword ptr [edx], xmm0; lea eax, dword ptr [edx + 7]; pop edi; ret; 
0x555e3828:  movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x555e7c28:  movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; ret; 
0x555e6361:  movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x555e3848:  movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x555e7c4a:  movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x555e386a:  movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x555e7c6a:  movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x555e372a:  movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x555e7b2a:  movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x555e374a:  movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x555e5425:  movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x555e3821:  movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x555e7c21:  movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; ret; 
0x555e3841:  movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x555e7971:  movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, dword ptr [edx + 7]; pop edi; ret; 
0x555e7c41:  movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x555e3861:  movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x555e7c61:  movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x555e7c45:  movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, dword ptr [edx + 0xc]; ret; 
0x555e3865:  movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x555e7c65:  movlps xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x5569452b:  movq mm0, qword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x555e3631:  movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x555f2d7d:  movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2c5d:  movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555f2c7d:  movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x55694530:  movq qword ptr [edx - 0x10], mm0; mov eax, edx; pop ebx; ret; 
0x55694526:  movq qword ptr [edx - 0x20], mm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x5569443d:  movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x55692f2d:  movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x555e3635:  movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x55692e78:  movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x556c4174:  movsb byte ptr es
0x556c7e44:  movsb byte ptr es
0x55605148:  movsb byte ptr es
0x556e7d2c:  movsb byte ptr es
0x556c5c2c:  movsb byte ptr es
0x556d4654:  movsb byte ptr es
0x556c6154:  movsb byte ptr es
0x55625739:  movsb byte ptr es
0x556c6844:  movsb byte ptr es
0x556f2d7c:  movsb byte ptr es
0x556c5c48:  movsb byte ptr es
0x556c6355:  movsd dword ptr es
0x55605266:  movzx eax, al; lea eax, dword ptr [eax + eax - 1]; pop esi; pop edi; ret; 
0x55617b6d:  movzx eax, al; lea eax, dword ptr [eax + eax - 1]; ret; 
0x55672a79:  movzx eax, al; pop edi; pop ebp; ret; 
0x55644031:  movzx eax, byte ptr [esi + 0x23]; mov byte ptr [esp + 0x2f], al; xchg edi, ebx; mov eax, 0x36; call dword ptr gs
0x5566306a:  movzx eax, dx; and ecx, 0xc0000000; and edx, 0xff; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x55584f38:  movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x55584e28:  movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x55584e58:  movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x55694368:  movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x55693558:  movzx ecx, byte ptr [eax]; mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x55692f78:  movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x55632368:  movzx edx, al; mov ecx, ebx; sub ecx, dword ptr [ebx + edx*4 - 0xcec7c]; jmp ecx; 
0x556a3447:  neg eax; add esp, 4; pop ebp; pop ebx; ret; 
0x555d2d46:  neg eax; mov dword ptr [esp], eax; call dword ptr [ecx]; 
0x556a7737:  neg eax; pop edi; pop esi; pop ebx; ret; 
0x55623b44:  neg eax; pop edi; ret; 
0x55605227:  neg eax; ret; 
0x556f5b20:  nop; aad 0xf7; jmp dword ptr [ebx]; 
0x556c4e24:  nop; add ch, bh; jmp dword ptr [eax]; 
0x555d6d6e:  nop; add dword ptr [eax], eax; add byte ptr [ebx - 0x1876d], cl; jmp dword ptr [ebp - 0x75]; 
0x55582b28:  nop; and al, 0x83; ret 0x3b01; 
0x555f3c6f:  nop; bsf eax, eax; lea eax, dword ptr [eax + edx - 0x10]; ret; 
0x55577b4f:  nop; call 0x129d77; add ecx, 0x18949f; mov eax, dword ptr [ecx - 0xf8]; add eax, dword ptr gs
0x556d2340:  nop; dec esp; add byte ptr [eax], al; push -0x2b; in al, dx; call dword ptr [eax]; 
0x556a642f:  nop; lea eax, dword ptr [ecx + 1]; ret; 
0x555f642b:  nop; lea esi, dword ptr [esi]; add eax, 8; ret; 
0x555f3c78:  nop; lea esi, dword ptr [esi]; bsf eax, eax; add eax, edx; ret; 
0x555f3838:  nop; lea esi, dword ptr [esi]; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x20]; ret; 
0x555f3848:  nop; lea esi, dword ptr [esi]; bsr eax, eax; lea eax, dword ptr [eax + ecx + 0x30]; ret; 
0x555e5638:  nop; lea esi, dword ptr [esi]; mov dword ptr [ecx], edx; pop ebx; ret; 
0x55687928:  nop; lea esi, dword ptr [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x55632363:  nop; lea esi, dword ptr [esi]; movzx edx, al; mov ecx, ebx; sub ecx, dword ptr [ebx + edx*4 - 0xcec7c]; jmp ecx; 
0x556c4948:  nop; loope 0x166947; jmp dword ptr [eax]; 
0x55575777:  nop; mov dword ptr [esp + 4], eax; mov eax, dword ptr [ebp - 0x7c]; mov dword ptr [esp], eax; mov eax, dword ptr [ebp + 0xc]; call dword ptr [eax]; 
0x55646937:  nop; mov dword ptr gs
0x55617a37:  nop; mov eax, 0x20; ret; 
0x5561707f:  nop; mov eax, 0x40; call dword ptr gs
0x5561707f:  nop; mov eax, 0x40; call dword ptr gs
0x55617977:  nop; mov eax, 0x7d00; pop ebx; ret; 
0x5561796f:  nop; mov eax, 0xfa; pop ebx; ret; 
0x55642d7f:  nop; mov eax, dword ptr [ecx - 0xf8]; mov dword ptr gs
0x555c612f:  nop; mov eax, dword ptr [ecx - 0xf8]; mov dword ptr gs
0x5568594f:  nop; mov eax, dword ptr [esp + 0x10]; mov eax, dword ptr [eax]; add esp, 0xc; ret; 
0x5566303f:  nop; mov eax, dword ptr [esp + 4]; and eax, 0xffff; ror ax, 8; ret; 
0x556a6a7f:  nop; mov eax, edx; ret; 
0x55683a67:  nop; mov ecx, esi; xchg ebx, ecx; mov eax, 6; call dword ptr gs
0x5564604f:  nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs
0x5564646f:  nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs
0x5561735f:  nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs
0x5562346f:  nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs
0x5562352f:  nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs
0x55645d3f:  nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs
0x5562356f:  nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa1; call dword ptr gs
0x55677a3f:  nop; mov esi, ebx; sub esi, dword ptr [ebx + eax*4 - 0x895a8]; jmp esi; 
0x5561707e:  nop; nop; mov eax, 0x40; call dword ptr gs
0x5561707e:  nop; nop; mov eax, 0x40; call dword ptr gs
0x5566303e:  nop; nop; mov eax, dword ptr [esp + 4]; and eax, 0xffff; ror ax, 8; ret; 
0x5564604e:  nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs
0x5564646e:  nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs
0x5561735e:  nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs
0x5562352e:  nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs
0x5561707d:  nop; nop; nop; mov eax, 0x40; call dword ptr gs
0x5561707d:  nop; nop; nop; mov eax, 0x40; call dword ptr gs
0x5561707c:  nop; nop; nop; nop; mov eax, 0x40; call dword ptr gs
0x555d203c:  nop; nop; nop; nop; xor eax, eax; ret; 
0x555d203d:  nop; nop; nop; xor eax, eax; ret; 
0x555d203e:  nop; nop; xor eax, eax; ret; 
0x55637355:  nop; or al, 1; add byte ptr [eax], al; xor eax, eax; ret; 
0x5563736b:  nop; or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x556a563f:  nop; pop ebx; pop esi; xor eax, eax; pop edi; ret; 
0x555f2f4f:  nop; pop esi; pop edi; pop ebp; ret; 
0x556d4c70:  nop; push es; out dx, eax; jmp dword ptr [esi]; 
0x556d7240:  nop; wait; add byte ptr [eax], al; ret; 
0x555c2d79:  nop; xchg eax, esp; add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov eax, 0x5b000000; ret; 
0x555d203f:  nop; xor eax, eax; ret; 
0x5566672a:  or al, 0; add al, 0; add byte ptr [ecx - 0x2617dbfc], cl; jns 0x108735; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x555d5339:  or al, 0; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x55565962:  or al, 0; mov cl, byte ptr [ebx]; add byte ptr [eax - 8], ah; adc dword ptr [eax], eax; ret; 
0x55567552:  or al, 0; mov eax, dword ptr [0xd0000010]; ret 7; 
0x5563572e:  or al, 0; mov edx, dword ptr [ebx - 0x34]; mov eax, dword ptr [edx]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x55567442:  or al, 0; ret 0x38; 
0x55562232:  or al, 0; ret 0x52; 
0x55563842:  or al, 0; ret; 
0x555d622a:  or al, 0x19; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x55687d78:  or al, 0x24; ret; 
0x556c517c:  or al, 0x2d; std; inc dword ptr [esi]; sub al, 0xfd; jmp dword ptr [esi + 0x2c]; 
0x55655a75:  or al, 0x39; ret 0x1474; 
0x556d2040:  or al, 0x44; ret; 
0x556c5778:  or al, 0x5d; std; lcall ptr [ebp + ebx*2 - 3]; call dword ptr [esi + 0x5c]; 
0x55605e64:  or al, 0x5e; pop edi; pop ebp; ret; 
0x55692c50:  or al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55605922:  or al, 0x7d; sti; dec dword ptr [edi]; inc ebp; ret 0xa5eb; 
0x55605969:  or al, 0x81; ret 0x76c; 
0x555f6525:  or al, 0x83; rcl dword ptr [eax], -0x7b; div byte ptr [ebx + esi - 0x7d]; ret 0x8310; 
0x555f3633:  or al, 0x83; rcl dword ptr [eax], -0x7d; ret 0x2910; 
0x555f5c65:  or al, 0x83; ret 0x8310; 
0x555f6034:  or al, 0x83; ret 0x8510; 
0x5566327e:  or al, 0x83; ret 0xe901; 
0x55635153:  or al, 0x85; rol dh, 4; push ss; add dword ptr [eax + edx - 0x75], esi; xor dword ptr [eax - 1], 0xffffffff; jmp dword ptr [ebp - 0x75]; 
0x556d297c:  or al, 0x86; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0x300e4304], al; add ah, byte ptr [ecx + 0x43100e0a]; ret; 
0x556f6e50:  or al, 0x86; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xc0e7e04], al; ret; 
0x55647840:  or al, 0x87; fistp qword ptr [eax + 0xc1]; call dword ptr gs
0x55617460:  or al, 0x87; fistp qword ptr [eax + 0xd3]; call dword ptr gs
0x55662d20:  or al, 0x89; add al, 0x24; call 0x98e50; add esp, 0x18; pop ebx; ret; 
0x55623841:  or al, 0x89; call 0x1c30b4d1; mov ebx, eax; mov eax, 0xb4; call dword ptr gs
0x55623921:  or al, 0x89; call 0x1c30b5b1; mov ebx, eax; mov eax, 0xb5; call dword ptr gs
0x555c4a35:  or al, 0x89; push esp; and al, 4; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x555c7574:  or al, 0x89; ret 0x562b; 
0x55655a5a:  or al, 0x8b; inc ebp; adc al, 0x39; ret 0xf67c; 
0x55655a72:  or al, 0x8b; inc ecx; or al, 0x39; ret 0x1474; 
0x555c752a:  or al, 0x8b; inc esi; or byte ptr [ecx + 0x29cd29d5], cl; ret 0xe75; 
0x55623438:  or al, 0x8b; pop esp; and al, 8; mov eax, 0x9c; call dword ptr gs
0x55642d73:  or al, 0x8b; push esp; and al, 8; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x555f643a:  or al, 0x90; lea esi, dword ptr [esi]; ret; 
0x556e2855:  or al, 0x9e; int1; jmp dword ptr [edx]; 
0x555d677f:  or al, 0xc3; lea esi, dword ptr [esi]; mov eax, ebx; sub eax, dword ptr [ebx + esi*4 - 0x12a860]; jmp eax; 
0x55677a3d:  or al, 0xc3; nop; mov esi, ebx; sub esi, dword ptr [ebx + eax*4 - 0x895a8]; jmp esi; 
0x556d6725:  or al, 0xd7; out dx, al; jmp dword ptr [edx]; 
0x556c4d49:  or al, 0xfd; call dword ptr [eax - 0x7f0002f4]; or bh, ch; jmp dword ptr [eax]; 
0x5569713c:  or al, 0xff; inc dword ptr [ecx + 0x2dfa1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x5569714c:  or al, 0xff; inc dword ptr [ecx + 0x2e091c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x55637276:  or al, 1; add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x55637356:  or al, 1; add byte ptr [eax], al; xor eax, eax; ret; 
0x556e683b:  or al, 4; add al, 0xc5; inc ebx; or eax, dword ptr [edx]; out 0xa, al; ret; 
0x556e2562:  or al, 4; add al, 0xc5; inc ecx; or ebp, dword ptr [esi + 0xa]; ret; 
0x556e632d:  or al, 4; add al, 0xc5; inc ecx; or edx, dword ptr [esi + 0xa]; ret; 
0x556d3832:  or al, 4; add al, 0xc5; inc esp; or ebx, dword ptr [edx + 0xa]; ret; 
0x5556513a:  or al, byte ptr [eax]; adc eax, 0x22000000; add byte ptr [eax + eax], cl; ret; 
0x555a664d:  or al, byte ptr [eax]; add byte ptr [eax - 0xb443], al; jmp dword ptr [esi + 0xf]; 
0x55647a77:  or al, byte ptr [eax]; add byte ptr [eax], 0; add esp, 0x18; mov al, 1; pop ebx; ret; 
0x55626049:  or al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp], esi; mov dword ptr [esp + 8], ecx; call dword ptr [ebp - 0x78]; 
0x556a2a3e:  or al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x555f6170:  or al, byte ptr [ebp + 0x5ef375c9]; pop edi; pop ebp; ret; 
0x55674d7d:  or al, byte ptr [ebp - 0x7cec8b37]; ret 0x8908; 
0x55684e35:  or al, byte ptr [ebx + 0x5e5b34c4]; ret; 
0x55693765:  or al, byte ptr [esi - 1]; inc dword ptr [ecx + 0x31437c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x555c4a77:  or al, ch; add ebp, dword ptr [eax + 0x768dfffc]; add byte ptr [ebx + 0x462b0846], cl; add al, 0x89; ret 0xfac1; 
0x555c774c:  or al, ch; dec esi; sar bh, cl; jmp dword ptr [ecx]; 
0x555c667c:  or al, ch; push ds; jecxz 0x68680; jmp dword ptr [ecx]; 
0x5569734c:  or bh, bh; inc dword ptr [ecx + 0x2dd91c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x556c4d51:  or bh, ch; jmp dword ptr [eax]; 
0x55692b30:  or bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x555b3241:  or byte ptr [eax + 0x24000001], al; cmp al, 0xc; ret 0x4489; 
0x5562343c:  or byte ptr [eax + 0x9c], bh; call dword ptr gs
0x55647567:  or byte ptr [eax + eax], al; add ebx, 0xb9a8a; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0x10f; call dword ptr gs
0x555f2160:  or byte ptr [eax - 0x776ef86], cl; pop ebx; pop edi; ret; 
0x555f3845:  or byte ptr [eax], ah; ret; 
0x55687a59:  or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0xc; ret; 
0x556a7157:  or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x555f666f:  or byte ptr [eax], al; mov dword ptr [esp + 4], esi; mov eax, dword ptr [ebp]; mov dword ptr [esp], eax; call edi; 
0x555f3855:  or byte ptr [eax], dh; ret; 
0x555c4062:  or byte ptr [eax], dl; add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdbac], cl; xor al, 0x24; call dword ptr [eax + 0x1c]; 
0x555f3835:  or byte ptr [eax], dl; ret; 
0x556c4e64:  or byte ptr [eax], dl; std; jmp edx; 
0x555c5b6d:  or byte ptr [ebp + 0x44895446], cl; and al, 4; mov dword ptr [esp], ebp; call edi; 
0x556e5f33:  or byte ptr [ebp + 0x50d4202], al; inc ebx; xchg dword ptr [ebx], eax; inc edx; add dword ptr [0x5d030486], 6; ret; 
0x555f6d2b:  or byte ptr [ebp + 0x5489bc55], cl; and al, 4; mov eax, dword ptr [eax + 8]; mov dword ptr [esp], eax; call edi; 
0x55612e7b:  or byte ptr [ebp + 0xc89d84d], cl; and al, 0x89; push esp; and al, 4; call dword ptr [ebp - 0x34]; 
0x555c2f68:  or byte ptr [ebp - 0x76e7dbb4], cl; dec esp; and al, 4; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp], edx; call eax; 
0x55623c5f:  or byte ptr [ebp - 0xdd3e37d], 0xff; lea edx, dword ptr [ebx - 0xdd464]; cmove eax, edx; add esp, 8; pop ebx; ret; 
0x556e2e4d:  or byte ptr [ebx + 0x40e4502], al; ret; 
0x556e2d58:  or byte ptr [ebx + 0x40e4802], al; ret; 
0x555f2a3c:  or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x55624b29:  or byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x555d5331:  or byte ptr [ebx + 0x6504245c], cl; mov dword ptr [eax], 0xc; xor eax, eax; add esp, 0xc; ret; 
0x55677a3a:  or byte ptr [ebx - 0x6f3cf33c], al; mov esi, ebx; sub esi, dword ptr [ebx + eax*4 - 0x895a8]; jmp esi; 
0x555f4b2c:  or byte ptr [ebx - 0x74e7db94], cl; dec esp; xchg eax, ebp; add byte ptr [ebx + 0x29202454], cl; ret 0xc083; 
0x555d6f55:  or byte ptr [ebx - 0x74efdb8c], cl; cmp dword ptr [eax - 2], -1; jmp dword ptr [ebp - 0x7d]; 
0x5567224b:  or byte ptr [ebx - 0x7635fefa], cl; push esp; and al, 4; mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x55672b6b:  or byte ptr [ebx - 0x769bdbac], cl; push esp; and al, 4; mov edx, dword ptr [esp + 0x60]; mov dword ptr [esp], edx; call eax; 
0x555d7b5d:  or byte ptr [ebx - 0x76bfdbac], cl; push esp; and al, 4; call eax; 
0x555c5044:  or byte ptr [ebx - 0x76cbdbac], cl; xor al, 0x24; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x2c]; 
0x55612341:  or byte ptr [ebx - 0x76cfdbbc], cl; inc esp; and al, 4; call 0xb48f0; add esp, 0x2c; ret; 
0x55674258:  or byte ptr [ebx - 0x76d7dbac], cl; cmp al, 0x24; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x555d785e:  or byte ptr [ebx - 0x76e7dbac], cl; push esp; and al, 4; call eax; 
0x555c752d:  or byte ptr [ecx + 0x29cd29d5], cl; ret 0xe75; 
0x555f2a79:  or byte ptr [ecx + 0x448b0350], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x555b4a5e:  or byte ptr [ecx + 0x50ff2434], cl; sbb al, 0x89; ret 0x478b; 
0x555c4c79:  or byte ptr [ecx + 0x54892434], cl; and al, 0x10; mov dword ptr [esp + 0xc], 0; call dword ptr [eax + 0x24]; 
0x55674b24:  or byte ptr [ecx + 0x54ff2404], cl; and al, 0x24; add esp, 0x1c; ret; 
0x55636a57:  or byte ptr [ecx - 0x3fcefbb0], cl; ret; 
0x55672964:  or byte ptr [ecx - 0x74fbdb94], cl; push es; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x555c326a:  or byte ptr [ecx - 0x76fbdb94], cl; xor al, 0x24; call dword ptr [eax + 0x1c]; 
0x555c4e71:  or byte ptr [ecx - 0x76fbdb94], cl; xor al, 0x24; call dword ptr [eax + 0x2c]; 
0x55674b47:  or byte ptr [ecx - 0x76fbdbac], cl; add al, 0x24; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x555a6e72:  or byte ptr [ecx - 0x76fbdbb4], cl; xor al, 0x24; call eax; 
0x5563736c:  or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x55694b6c:  or byte ptr [ecx], bh; ret 0x1e72; 
0x55634964:  or byte ptr [ecx], bh; ret 0xd772; 
0x555f3e7a:  or byte ptr [ecx], dh; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x55647573:  or byte ptr [edi + 0x10fb8d3], al; add byte ptr [eax], al; call dword ptr gs
0x55623b33:  or byte ptr [edi + 0xdbb8df], al; add byte ptr [eax], al; call dword ptr gs
0x5566307e:  or byte ptr [edi], 0x45; ret 0x90c3; 
0x55605e7f:  or byte ptr [edi], 0x4e; ret 0xc483; 
0x55635e7d:  or byte ptr [edi], cl; xchg eax, ebp; ret 0xe083; 
0x55577546:  or byte ptr [edi], cl; xchg eax, esp; ret 0xc031; 
0x556e5527:  or byte ptr [edx + 9], al; add eax, dword ptr [edx]; push esi; ret; 
0x556c4d50:  or byte ptr [edx], 0xfd; jmp dword ptr [eax]; 
0x555e7c26:  or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, dword ptr [edx + 0xb]; ret; 
0x555e635f:  or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x555e3846:  or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x55642d77:  or byte ptr [esi - 0x77], ah; inc edx; xor eax, eax; ret; 
0x556c7178:  or byte ptr [esi], 0xf0; call dword ptr [eax - 6]; 
0x556c4e5d:  or ch, bh; inc dword ptr [esi + 0x8fffd0f]; adc ch, bh; jmp edx; 
0x556d4e5d:  or cl, bl; out dx, al; jmp dword ptr [edx]; 
0x55655a57:  or cl, byte ptr [ebx + 0x458b0c6d]; adc al, 0x39; ret 0xf67c; 
0x555d5f35:  or cl, byte ptr [edi]; test dword ptr [ecx], ebx; sub eax, dword ptr [eax]; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x77]; 
0x555e5537:  or cl, byte ptr [edi]; test dword ptr [edx + 2], edx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x556d203e:  or cl, byte ptr [esi]; or al, 0x44; ret; 
0x556f7041:  or cl, byte ptr fs
0x556d227e:  or cl, byte ptr gs
0x555f5561:  or dh, bl; add dword ptr [eax], eax; add byte ptr [ecx - 0x1d17dbfc], cl; idiv al; jmp dword ptr [esi - 0x70]; 
0x556a7052:  or dh, byte ptr [edx + 0x4b]; lea eax, dword ptr [eax + 9]; pop edi; ret; 
0x556a6032:  or dh, byte ptr [edx + 0x4b]; lea eax, dword ptr [edi + 9]; pop edi; ret; 
0x5564797b:  or dh, byte ptr [edx - 0x77]; ret 0xb60f; 
0x55644356:  or dword ptr [eax + eax], edx; mov esi, eax; xchg edi, ebx; mov eax, 0x36; call dword ptr gs
0x555a3035:  or dword ptr [eax + ebp*2 - 5], 0xffffffff; add edx, dword ptr [ebp - 0x49c]; mov dword ptr [ebp - 0x510], 1; mov dword ptr [ebp - 0x4b8], edi; jmp edx; 
0x55577b5c:  or dword ptr [eax], 0x65ffffff; add eax, dword ptr [0]; ret; 
0x55617b61:  or dword ptr [eax], 0x65ffffff; cmp dword ptr [eax], 0x26; sete al; movzx eax, al; lea eax, dword ptr [eax + eax - 1]; ret; 
0x555c6131:  or dword ptr [eax], 0x65ffffff; mov dword ptr [eax], 9; mov eax, 0xffffffff; ret; 
0x55646922:  or dword ptr [eax], 0x74ffffff; pcmpgtw mm0, mm7; add byte ptr [esi], ah; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x555c6139:  or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x555f296f:  or dword ptr [eax], eax; add ecx, 0xc6013; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x555f2952:  or dword ptr [eax], eax; add ecx, 0xc6030; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x555f2925:  or dword ptr [eax], eax; add ecx, 0xc605d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x555f2870:  or dword ptr [eax], eax; add ecx, 0xc6092; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x555f2846:  or dword ptr [eax], eax; add ecx, 0xc60bc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x555f282d:  or dword ptr [eax], eax; add ecx, 0xc60d5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x555f2747:  or dword ptr [eax], eax; add ecx, 0xc61bb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x55663339:  or dword ptr [eax], eax; mov eax, dword ptr [ecx - 0x100]; add eax, dword ptr gs
0x5557752a:  or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x5568584e:  or dword ptr [ebx + 0x5f5e24c4], eax; ret; 
0x55663473:  or dword ptr [ebx - 0xff6d], ecx; jmp dword ptr [ebp - 0x77]; 
0x555d6229:  or dword ptr [ecx + ebx], 0; add byte ptr [eax], al; ret; 
0x55647976:  or dword ptr [edi - 0x7d], esi; cli; or dh, byte ptr [edx - 0x77]; ret 0xb60f; 
0x55617454:  or dword ptr [edi], eax; add byte ptr [ecx + 0xe9b9dc3], al; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xd3]; call dword ptr gs
0x5561737e:  or dword ptr [edi], eax; add byte ptr [ecx + 0xe9c73c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x55667174:  or dword ptr [edi], ecx; inc esi; int 0x80; 
0x556a7042:  or dword ptr [edx + 0x5b], esi; lea eax, dword ptr [eax + 8]; pop edi; ret; 
0x556a6022:  or dword ptr [edx + 0x5b], esi; lea eax, dword ptr [edi + 8]; pop edi; ret; 
0x5568584b:  or dword ptr [edx + 0x74], edi; or dword ptr [ebx + 0x5f5e24c4], eax; ret; 
0x556e4e2d:  or dword ptr [edx - 0xe], esi; jmp dword ptr [edx]; 
0x55647a76:  or dword ptr [edx], 0x8000; add esp, 0x18; mov al, 1; pop ebx; ret; 
0x555f3773:  or dword ptr [esi + 0xf], esp; xlatb; ret 0xc085; 
0x555c2f28:  or dword ptr [esi], 0x20; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x556e5f37:  or eax, 0x3874305; inc edx; add dword ptr [0x5d030486], 6; ret; 
0x556a7072:  or eax, 0x408d2b72; or al, 0x5f; ret; 
0x556a6052:  or eax, 0x478d2b72; or al, 0x5f; ret; 
0x556e5d7f:  or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; add al, 0xa; ret; 
0x556e2737:  or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; imul eax, dword ptr [ecx], 0xa; ret; 
0x556d5e6b:  or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; int1; add dword ptr [edx], ecx; ret; 
0x556e5f67:  or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; push ebx; add cl, byte ptr [edx]; ret; 
0x556e5c33:  or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; xchg byte ptr [edx + ecx], al; ret; 
0x556f3e27:  or eax, 0x5834305; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; jno 0x195e3d; ret; 
0x556d2a47:  or eax, 0x5834c05; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; pop ecx; add al, 0xa; ret; 
0x556f6877:  or eax, 0x5834c05; xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; salc; add cl, byte ptr [edx]; ret; 
0x55617066:  or eax, 0x68; nop; lea esi, dword ptr [esi]; ret; 
0x555f2d7b:  or eax, 0x7f0ff3; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x55682962:  or eax, 0x81000054; ret; 
0x55677962:  or eax, 0x81000104; ret; 
0x55605c62:  or eax, 0x81000821; ret; 
0x555f7a62:  or eax, 0x81000903; ret; 
0x555f5d62:  or eax, 0x81000920; ret; 
0x555d5362:  or eax, 0x81000b2a; ret; 
0x555b355d:  or eax, 0x95c38100; ficom dword ptr [eax + eax]; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x12e; call dword ptr gs
0x5560554b:  or eax, 0xfc09f0f; mov dh, 0xc0; lea eax, dword ptr [eax + eax - 1]; pop esi; pop edi; ret; 
0x556d2776:  or eax, 0xffed0af0; sbb al, 0xd; in eax, 0xb6; in al, dx; jmp dword ptr [edx]; 
0x556d3522:  or eax, 0xffedd5b8; sbb al, 0xd; mov ss, ebp; in eax, dx; jmp dword ptr [edx]; 
0x556d357e:  or eax, 0xffedd607; sbb al, 0xd; dec edx; aad 0xed; jmp dword ptr [edx]; 
0x556d3432:  or eax, 0xffedd61d; sbb al, 0xd; mov dl, 0xd5; in eax, dx; jmp dword ptr [edx]; 
0x556d3342:  or eax, 0xffedd66d; sbb al, 0xd; test al, 0xd5; in eax, dx; jmp dword ptr [edx]; 
0x556d373a:  or eax, 0xffee3263; sbb al, 0xd; cmp byte ptr [ecx], dh; out dx, al; jmp dword ptr [edx]; 
0x556d3b46:  or eax, 0xffeeb81c; sbb al, 0xd; iretd; mov bh, 0xee; jmp dword ptr [edx]; 
0x556d452e:  or eax, 0xffeec22c; sbb al, 0xd; test al, 0xc1; out dx, al; jmp dword ptr [edx]; 
0x556d4672:  or eax, 0xffeec7ef; sbb al, 0xd; pop ds; ret; 
0x556d4642:  or eax, 0xffeec823; sbb al, 0xd; cmp al, dl; out dx, al; jmp dword ptr [edx]; 
0x556d487e:  or eax, 0xffeec93f; sbb al, 0xd; or al, 0xee; jmp dword ptr [edx]; 
0x556d4b76:  or eax, 0xffeec9b8; sbb al, 0xd; mov ecx, ecx; out dx, al; jmp dword ptr [edx]; 
0x556d4e56:  or eax, 0xffeecbd1; sbb al, 0xd; or cl, bl; out dx, al; jmp dword ptr [edx]; 
0x556d5072:  or eax, 0xffeecfbc; sbb al, 0xd; wait; iretd; out dx, al; jmp dword ptr [edx]; 
0x556d517a:  or eax, 0xffeecfd0; sbb al, 0xd; xchg eax, ebp; iretd; out dx, al; jmp dword ptr [edx]; 
0x556d5246:  or eax, 0xffeecff8; sbb al, 0xd; into; iretd; out dx, al; jmp dword ptr [edx]; 
0x556d514a:  or eax, 0xffeed00b; sbb al, 0xd; xchg eax, edi; iretd; out dx, al; jmp dword ptr [edx]; 
0x556d556e:  or eax, 0xffeed195; sbb al, 0xd; imul edx, ecx, -0x12; jmp dword ptr [edx]; 
0x556d553e:  or eax, 0xffeed1d0; sbb al, 0xd; pop ebp; shr esi, 1; jmp dword ptr [edx]; 
0x556d577e:  or eax, 0xffeed26b; sbb al, 0xd; inc ecx; shr dh, cl; jmp dword ptr [edx]; 
0x556d574e:  or eax, 0xffeed2a6; sbb al, 0xd; inc ebp; shr dh, cl; jmp dword ptr [edx]; 
0x556d565e:  or eax, 0xffeed303; sbb al, 0xd; inc edx; shr dh, cl; jmp dword ptr [edx]; 
0x556d5a6e:  or eax, 0xffeed918; sbb al, 0xd; xlatb; xlatb; out dx, al; jmp dword ptr [edx]; 
0x556d5c4a:  or eax, 0xffeeda82; sbb al, 0xd; sbb ebx, edx; out dx, al; jmp dword ptr [edx]; 
0x556d5b5e:  or eax, 0xffeedab7; sbb al, 0xd; mov bl, cl; out dx, al; jmp dword ptr [edx]; 
0x556d5b2e:  or eax, 0xffeedaef; sbb al, 0xd; dec eax; fsubr st(6); jmp dword ptr [edx]; 
0x556d6132:  or eax, 0xffeedeaa; sbb al, 0xd; xchg eax, edi; fsubp st(6); jmp dword ptr [edx]; 
0x556d7166:  or eax, 0xffeeff94; sbb al, 0xd; push -1; out dx, al; jmp dword ptr [edx]; 
0x556d725e:  or eax, 0xffeeff9b; sbb al, 0xd; jno 0x179266; out dx, al; jmp dword ptr [edx]; 
0x556d6e6a:  or eax, 0xffeeffec; sbb al, 0xd; out dx, al; jmp dword ptr [edx]; 
0x556d762e:  or eax, 0xffef0212; sbb al, 0xd; out 1, al; out dx, eax; jmp dword ptr [edx]; 
0x556d776a:  or eax, 0xffef0272; sbb al, 0xd; mov dl, 1; out dx, eax; jmp dword ptr [edx]; 
0x556d7f7e:  or eax, 0xffef3d72; sbb al, 0xd; push edx; and bh, ch; jmp dword ptr [edx]; 
0x556e2a2e:  or eax, 0xfff19e1c; sbb al, 0xd; popfd; int1; jmp dword ptr [edx]; 
0x556e296e:  or eax, 0xfff19e46; sbb al, 0xd; sbb al, 0x9e; int1; jmp dword ptr [edx]; 
0x556e293e:  or eax, 0xfff19e81; sbb al, 0xd; push ss; sahf; int1; jmp dword ptr [edx]; 
0x556e287e:  or eax, 0xfff19e99; sbb al, 0xd; sahf; int1; jmp dword ptr [edx]; 
0x556e284e:  or eax, 0xfff19ed1; sbb al, 0xd; or al, 0x9e; int1; jmp dword ptr [edx]; 
0x556e3456:  or eax, 0xfff1c1e8; sbb al, 0xd; test al, 0xf1; jmp dword ptr [edx]; 
0x556e3366:  or eax, 0xfff1c2ec; sbb al, 0xd; in eax, 0xbf; int1; jmp dword ptr [edx]; 
0x556e3e26:  or eax, 0xfff25a5d; sbb al, 0xd; add ebx, dword ptr [edx - 0xe]; jmp dword ptr [edx]; 
0x556e463e:  or eax, 0xfff267b1; sbb al, 0xd; cmp ah, byte ptr [edi - 0xe]; jmp dword ptr [edx]; 
0x556e4e26:  or eax, 0xfff27232; sbb al, 0xd; or dword ptr [edx - 0xe], esi; jmp dword ptr [edx]; 
0x556e5022:  or eax, 0xfff27449; sbb al, 0xd; sal dword ptr [edx - 0xe], cl; jmp dword ptr [edx]; 
0x556e6926:  or eax, 0xfff4635e; sbb al, 0xd; fldenv dword ptr [eax - 0xc]; jmp dword ptr [edx]; 
0x556f204e:  or eax, 0xfff62a52; sbb al, 0xd; iretd; sub esi, esi; jmp dword ptr [edx]; 
0x556f254e:  or eax, 0xfff63558; sbb al, 0xd; in al, dx; xor al, 0xf6; jmp dword ptr [edx]; 
0x556f2f3a:  or eax, 0xfff63df0; sbb al, 0xd; sar byte ptr [esi + esi*8], 1; jmp dword ptr [edx]; 
0x556f3446:  or eax, 0xfff64248; sbb al, 0xd; xor byte ptr [ecx - 0xa], al; jmp dword ptr [edx]; 
0x556f3a42:  or eax, 0xfff6553d; sbb al, 0xd; mov dword ptr [ebp - 0xa], ecx; jmp dword ptr [edx]; 
0x556d6076:  or eax, 0xfffad8ad; sbb al, 0xd; sbb eax, -6; jmp dword ptr [edx]; 
0x556d6046:  or eax, 0xfffad8e8; sbb al, 0xd; imul ebx, eax, -6; jmp dword ptr [edx]; 
0x556d635a:  or eax, 0xfffadc5a; sbb al, 0xd; xor ah, bl; cli; jmp dword ptr [edx]; 
0x556d6162:  or eax, 0xfffadc7e; sbb al, 0xd; out dx, al; fsqrt; jmp dword ptr [edx]; 
0x556d632a:  or eax, 0xfffadc95; sbb al, 0xd; inc edx; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x556d656a:  or eax, 0xfffadcbf; sbb al, 0xd; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x556d653a:  or eax, 0xfffadcf7; sbb al, 0xd; push ds; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x556d647e:  or eax, 0xfffadcfb; sbb al, 0xd; and bl, ah; cli; jmp dword ptr [edx]; 
0x556d3d55:  or eax, dword ptr [eax]; add byte ptr [eax + eax], ch; add byte ptr [eax], al; lodsb al, byte ptr [esi]; add byte ptr [eax], al; ret; 
0x556e6a61:  or eax, dword ptr [eax]; add byte ptr [eax + eax], dh; add byte ptr [eax], al; push 0xf4000198; sbb esp, esi; call eax; 
0x556d6d7d:  or eax, dword ptr [eax]; add byte ptr [eax], ch; add byte ptr [eax], al; add byte ptr [ebx + ebx*4 + 0x37a80000], al; out dx, eax; call dword ptr [edx]; 
0x556d7b7d:  or eax, dword ptr [eax]; add byte ptr [eax], dl; add byte ptr [eax], al; add byte ptr [ecx + ebp*4 + 0x60480000], al; out dx, eax; call dword ptr [eax]; 
0x5564783b:  or eax, dword ptr [eax]; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xc1; call dword ptr gs
0x5564756e:  or eax, dword ptr [eax]; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0x10f; call dword ptr gs
0x55644a7e:  or eax, dword ptr [eax]; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0x60; call dword ptr gs
0x5564457e:  or eax, dword ptr [eax]; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0xbf; call dword ptr gs
0x556d203c:  or eax, dword ptr [ebx + 0xa]; push cs; or al, 0x44; ret; 
0x556f4450:  or eax, dword ptr [ebx]; aad 1; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x556e7958:  or eax, dword ptr [ebx]; aam 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x556e7847:  or eax, dword ptr [ebx]; add al, 3; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x556d5358:  or eax, dword ptr [ebx]; add word ptr [edx], cx; push cs; adc al, 0x43; ret; 
0x556e7130:  or eax, dword ptr [ebx]; cmp byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x556e533a:  or eax, dword ptr [ebx]; hlt; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x556f4468:  or eax, dword ptr [ebx]; inc ecx; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x556e206c:  or eax, dword ptr [ebx]; lea eax, dword ptr [ebx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x556f4523:  or eax, dword ptr [ebx]; pop edx; add dword ptr [edx], ecx; ret; 
0x556e4543:  or eax, dword ptr [ebx]; push ecx; add dword ptr [edx], ecx; ret; 
0x556e4c6b:  or eax, dword ptr [ebx]; push esp; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x556d7f43:  or eax, dword ptr [edx]; dec esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x556d6b75:  or eax, dword ptr [edx]; inc edi; ret; 
0x556f5d48:  or eax, dword ptr [edx]; lodsd eax, dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x556e6840:  or eax, dword ptr [edx]; out 0xa, al; ret; 
0x556e7970:  or eax, dword ptr [edx]; pop ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x556e7b6e:  or eax, dword ptr [edx]; pop esp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x556e7635:  or eax, dword ptr [edx]; push ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x556f6076:  or eax, dword ptr [edx]; push esi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x556d2628:  or eax, dword ptr [edx]; push esi; ret; 
0x556f605f:  or eax, dword ptr [edx]; xchg eax, edi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x556e246a:  or eax, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x556e5a3b:  or ebp, dword ptr [eax + eax]; add byte ptr [eax], al; inc eax; mov byte ptr [ecx], al; add byte ptr [edx - 0xd], bl; jmp dword ptr [eax + 3]; 
0x5560566f:  or ebp, dword ptr [ecx]; ret 0x5589; 
0x556f5e38:  or ebp, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x556f775a:  or ebx, dword ptr [eax + 0xa]; ret; 
0x556f3d3b:  or ebx, dword ptr [eax + eax]; add byte ptr [eax], al; inc eax; imul eax, dword ptr [edx], 0; mov word ptr [edi - 9], es; jmp dword ptr [esi]; 
0x556f385e:  or ebx, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x556d273b:  or ebx, dword ptr [edi + 0xa]; push cs; adc al, 0x43; ret; 
0x556d3837:  or ebx, dword ptr [edx + 0xa]; ret; 
0x556e546d:  or ebx, esi; call edi; 
0x555e5972:  or ecx, dword ptr [ebp - 0x7af0f4b6]; adc eax, 0x5bfffffe; ret; 
0x555e5975:  or ecx, dword ptr [edi]; test dword ptr [0x5bfffffe], edx; ret; 
0x555e5565:  or ecx, dword ptr [edi]; test dword ptr [edx + eax], esp; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x55643e79:  or ecx, edx; mov dword ptr [eax + 8], ecx; xor eax, eax; pop ebx; ret; 
0x556e674f:  or edi, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x556e2537:  or edi, dword ptr [eax + eax]; add byte ptr [eax], al; cmp al, 0x53; add dword ptr [eax], eax; cmp bh, 0xf1; call edi; 
0x556f744b:  or edi, dword ptr [ecx + 0xa]; push cs; adc al, 0x43; ret; 
0x556d4f5d:  or edi, ebp; call esp; 
0x556c4d45:  or edi, ebp; inc dword ptr [eax]; or al, 0xfd; call dword ptr [eax - 0x7f0002f4]; or bh, ch; jmp dword ptr [eax]; 
0x556d4f21:  or edi, ebp; jmp dword ptr [ebx]; 
0x55697456:  or edi, edi; inc dword ptr [ecx + 0x2dc87c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x55697245:  or edi, edi; inc dword ptr [ecx + 0x2de98c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x556a7736:  or edi, esi; fcomp dword ptr [edi + 0x5e]; pop ebx; ret; 
0x556f4a36:  or edx, dword ptr [ecx + 0xa]; ret; 
0x556d222d:  or esi, dword ptr [ebx + 0xa]; ret; 
0x556a7062:  or esi, dword ptr [edx + 0x3b]; lea eax, dword ptr [eax + 0xa]; pop edi; ret; 
0x556a6042:  or esi, dword ptr [edx + 0x3b]; lea eax, dword ptr [edi + 0xa]; pop edi; ret; 
0x5565522f:  or esi, esi; inc esp; inc ecx; add dword ptr [eax + 0xf], eax; inc esp; ret 0x8dc3; 
0x556d267b:  or esp, dword ptr [eax + 0xa]; push cs; adc al, 0x43; ret; 
0x556e4427:  or esp, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [edx + esi*2], ch; add dword ptr [eax], eax; shl dh, 0xf2; jmp dword ptr [edx]; 
0x556f7040:  or esp, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x556c6e25:  out 0, al; add byte ptr [eax - 0x25], cl; out dx, eax; jmp eax; 
0x556c6e2d:  out 0, al; add byte ptr [ebx + ebx*8 - 0x11], dl; call eax; 
0x556b6847:  out 0x95, eax; push es; cld; ret; 
0x556e6842:  out 0xa, al; ret; 
0x556e4431:  out 0xf2, al; jmp dword ptr [edx]; 
0x556e7f59:  out 0xf4, al; jmp dword ptr [esi]; 
0x556c4851:  out 0xfc, al; call dword ptr [eax]; 
0x556c4841:  out 0xfc, al; jmp dword ptr [eax - 0x19]; 
0x556c4849:  out 0xfc, eax; inc dword ptr [eax + 0x70fffce8]; out 0xfc, al; call dword ptr [eax]; 
0x556c4835:  out 0xfc, eax; ljmp ptr [edx + 0x3afffce7]; call 0xe6c7683e; cld; jmp dword ptr [eax - 0x19]; 
0x556c4845:  out 0xfc, eax; push eax; out 0xfc, eax; inc dword ptr [eax + 0x70fffce8]; out 0xfc, al; call dword ptr [eax]; 
0x55595f6a:  out 0xff, al; dec dword ptr [edi]; movsb byte ptr es
0x556d7635:  out 1, al; out dx, eax; jmp dword ptr [edx]; 
0x555f347e:  out dx, al; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x55667b39:  out dx, al; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x556c6c22:  out dx, al; call esp; 
0x556c6b7a:  out dx, al; dec dword ptr [esi + edx*8 - 0x26fc0000]; out dx, al; call eax; 
0x556c553c:  out dx, al; dec esp; std; push dword ptr [ebx + ecx*2]; std; jmp esp; 
0x556d6169:  out dx, al; fsqrt; jmp dword ptr [edx]; 
0x556c6c3a:  out dx, al; jmp dword ptr [eax]; 
0x556d3622:  out dx, al; jmp dword ptr [ebx]; 
0x556d3743:  out dx, al; jmp dword ptr [edx]; 
0x556c6b5a:  out dx, al; jmp esp; 
0x55693263:  out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x556c6f31:  out dx, al; out dx, eax; jmp dword ptr [eax]; 
0x556c6c32:  out dx, al; push dword ptr [edx + ebx*8]; add byte ptr [eax], al; test bh, bl; out dx, al; jmp dword ptr [eax]; 
0x556d6148:  out dx, al; sti; call dword ptr [eax]; 
0x55623d68:  out dx, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x556c6e72:  out dx, eax; call dword ptr [eax - 0x17]; 
0x556c6d2a:  out dx, eax; call dword ptr [eax]; 
0x556d4922:  out dx, eax; call dword ptr [ebx]; 
0x556d5f2a:  out dx, eax; call edx; 
0x555f482a:  out dx, eax; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x556c705a:  out dx, eax; dec dword ptr [esp + esi*8]; add byte ptr [esi + edi*8 - 0x11], al; jmp dword ptr [eax - 0xc]; 
0x556c6e6a:  out dx, eax; jmp dword ptr [eax - 0x18]; 
0x556c7062:  out dx, eax; jmp dword ptr [eax - 0xc]; 
0x556d4f22:  out dx, eax; jmp dword ptr [ebx]; 
0x556c6e2a:  out dx, eax; jmp eax; 
0x556d4c4a:  out dx, eax; jmp ebx; 
0x556d7c32:  out dx, eax; jmp esi; 
0x556a7051:  out dx, eax; or dh, byte ptr [edx + 0x4b]; lea eax, dword ptr [eax + 9]; pop edi; ret; 
0x556a7041:  out dx, eax; or dword ptr [edx + 0x5b], esi; lea eax, dword ptr [eax + 8]; pop edi; ret; 
0x556a7071:  out dx, eax; or eax, 0x408d2b72; or al, 0x5f; ret; 
0x556a7061:  out dx, eax; or esi, dword ptr [edx + 0x3b]; lea eax, dword ptr [eax + 0xa]; pop edi; ret; 
0x556d6e42:  out dx, eax; out dx, al; jmp dword ptr [edx]; 
0x556c6e22:  out dx, eax; push dword ptr [eax + 0x480000e6]; fucomi st(7); jmp eax; 
0x556c6e62:  out dx, eax; push dword ptr [eax]; call 0xdec08e6a; out dx, eax; jmp dword ptr [eax - 0x18]; 
0x556c6839:  outsb dx, byte ptr [esi]; in eax, dx; jmp dword ptr [eax - 0x3d]; 
0x556d4655:  outsd dx, dword ptr [esi]; add byte ptr [eax], al; aaa; add edi, ebp; call dword ptr [eax]; 
0x556d4625:  outsd dx, dword ptr [esi]; add byte ptr [eax], al; push edi; add edi, ebp; call dword ptr [eax]; 
0x555d7635:  outsd dx, dword ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x75]; 
0x555e3632:  outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x556c4e61:  paddw mm7, mm7; or byte ptr [eax], dl; std; jmp edx; 
0x555f3631:  pcmpeqb mm1, qword ptr [ebx + eax*4]; rcl dword ptr [eax], -0x7d; ret 0x2910; 
0x55693761:  pcmpeqb mm3, qword ptr [eax + ebp*8]; or al, byte ptr [esi - 1]; inc dword ptr [ecx + 0x31437c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x55646928:  pcmpgtw mm0, mm7; add byte ptr [esi], ah; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x555f3c64:  pmovmskb eax, mm1; bsf eax, eax; lea eax, dword ptr [edx + eax + 0x30]; ret; 
0x555f3c63:  pmovmskb eax, xmm1; bsf eax, eax; lea eax, dword ptr [edx + eax + 0x30]; ret; 
0x556a312d:  pop ds; add eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x55687e41:  pop ds; add esp, 0x18; pop esi; ret; 
0x55644a69:  pop ds; add esp, 0xc; ret; 
0x556b6d2d:  pop ds; cli; xchg dword ptr [esp + eax + 0x6fa9ce9d], esp; ret; 
0x5564776b:  pop ds; mov ebx, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x556c4f4d:  pop ds; std; call dword ptr [eax]; 
0x556c4f3d:  pop ds; std; call dword ptr [esi]; 
0x556c5051:  pop ds; std; jmp dword ptr [eax]; 
0x556c5041:  pop ds; std; jmp dword ptr [esi]; 
0x556a797d:  pop dword ptr [eax]; add byte ptr [eax], al; lea eax, dword ptr [ecx + 4]; ret; 
0x556e6175:  pop dword ptr [ecx]; add al, bl; sal bl, 1; call dword ptr [eax]; 
0x555d7075:  pop eax; add al, 0; add al, ch; ret 0xfffc; 
0x556e7421:  pop eax; hlt; jmp dword ptr [ebx + 1]; 
0x556d7a35:  pop eax; out dx, eax; jmp dword ptr [ebx]; 
0x5557506b:  pop eax; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x556f3358:  pop eax; popal; add al, byte ptr [eax]; inc esp; xor dh, bh; call ebx; 
0x556f552b:  pop eax; push cs; add al, 0xc6; ret; 
0x555f2c63:  pop eax; push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x556e382f:  pop eax; xchg byte ptr [edx], al; pop edx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x556f254f:  pop eax; xor eax, 0xd1cfff6; in al, dx; xor al, 0xf6; jmp dword ptr [edx]; 
0x556d2f51:  pop ebp; add byte ptr [eax], al; pop esp; imul ebp; jmp dword ptr [ebx]; 
0x556f385f:  pop ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x556a3455:  pop ebp; pop ebx; xor eax, eax; ret; 
0x556e5f42:  pop ebp; push es; ret; 
0x555f2929:  pop ebp; pushal; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x55575e79:  pop ebp; ret 0x10; 
0x5557515f:  pop ebp; ret 4; 
0x55585c25:  pop ebp; ret 8; 
0x5557506f:  pop ebp; ret; 
0x556d5545:  pop ebp; shr esi, 1; jmp dword ptr [edx]; 
0x556c577d:  pop ebp; std; call dword ptr [esi + 0x5c]; 
0x556c575d:  pop ebp; std; jmp dword ptr [edx + 0x5c]; 
0x556c5769:  pop ebp; std; jmp dword ptr [edx + 0x5d]; 
0x556c5779:  pop ebp; std; lcall ptr [ebp + ebx*2 - 3]; call dword ptr [esi + 0x5c]; 
0x556c5759:  pop ebp; std; ljmp ptr [eax + 0x5d]; std; jmp dword ptr [edx + 0x5c]; 
0x556c572d:  pop ebp; std; push dword ptr [esp + ebx*2 - 3]; call esp; 
0x555a262d:  pop ebx; add al, 0; add byte ptr [eax - 0x4ab43], al; call dword ptr [ebx + 0xf]; 
0x556f3251:  pop ebx; add al, byte ptr [eax]; aas; xor al, 0xf7; call dword ptr [eax]; 
0x556f2d79:  pop ebx; add al, byte ptr [eax]; movsb byte ptr es
0x556f3221:  pop ebx; add al, byte ptr [eax]; pop edi; xor al, 0xf7; call dword ptr [eax]; 
0x555f3121:  pop ebx; add dword ptr [eax], eax; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x556b6920:  pop ebx; and dword ptr [esi + ebp*2 - 0x7a], edi; lahf; ret 0x871e; 
0x556f7b65:  pop ebx; clc; call dword ptr [ecx]; 
0x5561793b:  pop ebx; cmp dword ptr gs
0x556a7044:  pop ebx; lea eax, dword ptr [eax + 8]; pop edi; ret; 
0x556a6024:  pop ebx; lea eax, dword ptr [edi + 8]; pop edi; ret; 
0x555c565c:  pop ebx; mov eax, dword ptr [esi + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x555b3453:  pop ebx; mov eax, edx; ret; 
0x5565522c:  pop ebx; mov ecx, dword ptr gs
0x556e7972:  pop ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x55624b2a:  pop ebx; pop esi; mov eax, edx; ret; 
0x55575e76:  pop ebx; pop esi; pop edi; pop ebp; ret 0x10; 
0x5557515c:  pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x55585c22:  pop ebx; pop esi; pop edi; pop ebp; ret 8; 
0x5557506c:  pop ebx; pop esi; pop edi; pop ebp; ret; 
0x555f3239:  pop ebx; pop esi; sub eax, 0x10; pop edi; ret; 
0x556a5640:  pop ebx; pop esi; xor eax, eax; pop edi; ret; 
0x5557734e:  pop ebx; ret; 
0x556d2a51:  pop ecx; add al, 0xa; ret; 
0x556e5068:  pop ecx; add ebx, esi; call dword ptr [eax]; 
0x556c7d20:  pop ecx; das; int1; jmp esp; 
0x556c6159:  pop ecx; in al, dx; call eax; 
0x556e2d71:  pop ecx; push cs; or byte ptr [ebx + 0x40e4902], al; ret; 
0x556e3c20:  pop ecx; xchg byte ptr [edx], al; add ah, byte ptr [edx + 0xe]; add al, 0xc6; ret; 
0x55692621:  pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55697453:  pop edi; call 0x129d73; add ebx, 0x2dc87; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55697349:  pop edi; call 0x129d73; add ebx, 0x2dd91; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55697242:  pop edi; call 0x129d73; add ebx, 0x2de98; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55696473:  pop edi; call 0x129d73; add ebx, 0x2eaa7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55696369:  pop edi; call 0x129d73; add ebx, 0x2ebb1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55696262:  pop edi; call 0x129d73; add ebx, 0x2ecb8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55697f7c:  pop edi; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x556d273c:  pop edi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x556a3454:  pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x55575e78:  pop edi; pop ebp; ret 0x10; 
0x5557515e:  pop edi; pop ebp; ret 4; 
0x55585c24:  pop edi; pop ebp; ret 8; 
0x5557506e:  pop edi; pop ebp; ret; 
0x555e5132:  pop edi; pop ebx; ret; 
0x556f3224:  pop edi; xor al, 0xf7; call dword ptr [eax]; 
0x556f2c2d:  pop edx; add al, byte ptr [eax]; inc eax; sub edi, esi; call dword ptr [ecx]; 
0x556f4525:  pop edx; add dword ptr [edx], ecx; ret; 
0x556c6171:  pop edx; in al, dx; call dword ptr [eax]; 
0x555c352d:  pop edx; mov eax, dword ptr [esi + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x556e3832:  pop edx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x555f3555:  pop edx; xor eax, eax; pop edi; ret; 
0x55577652:  pop es; adc dword ptr [eax], eax; add ecx, 0x18999f; lea eax, dword ptr [ecx - 0x43dee]; ret; 
0x55577632:  pop es; adc dword ptr [eax], eax; add ecx, 0x1899bf; lea eax, dword ptr [ecx - 0x46116]; ret; 
0x55613153:  pop es; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp + 3]; 
0x55617455:  pop es; add byte ptr [ecx + 0xe9b9dc3], al; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xd3]; call dword ptr gs
0x5561737f:  pop es; add byte ptr [ecx + 0xe9c73c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x5561623c:  pop es; add byte ptr [ecx + 0xeadb6c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x55615d50:  pop es; add byte ptr [ecx + 0xeb2a2c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x5557725a:  pop es; add byte ptr [ecx - 0x47fbdbbc], cl; ret 0; 
0x5556222a:  pop es; add byte ptr [esi], bl; add byte ptr [eax], al; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0x52; 
0x55656b32:  pop es; add dword ptr [ebx + 0x5e5b3cc4], eax; pop edi; pop ebp; ret; 
0x5569285f:  pop es; add eax, 0x8b1c035f; jmp ebx; 
0x5569273f:  pop es; add ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x555e6355:  pop es; idiv bh; jmp dword ptr [esi + 0xf]; 
0x555e7b31:  pop es; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x555e382d:  pop es; mov eax, edx; ret; 
0x555e3826:  pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x555e7b28:  pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, dword ptr [edx + 0xe]; pop edi; ret; 
0x555e3748:  pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x55692c4f:  pop es; or al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55692b2f:  pop es; or bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x555e797a:  pop es; pop edi; ret; 
0x5569297f:  pop es; pop es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55692d6f:  pop es; push cs; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x556c5a20:  pop es; scasd eax, dword ptr es
0x556c4e55:  pop es; std; jmp eax; 
0x55597439:  pop esi; add al, 0; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp - 0x39]; 
0x5560666d:  pop esi; add eax, edx; ret; 
0x555f3272:  pop esi; bsr eax, eax; add eax, edi; sub eax, 0x10; pop edi; ret; 
0x55696046:  pop esi; call 0x129d73; add ebx, 0x2ee14; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x556f7d41:  pop esi; clc; jmp dword ptr [ebx]; 
0x55624b2b:  pop esi; mov eax, edx; ret; 
0x55672a78:  pop esi; movzx eax, al; pop edi; pop ebp; ret; 
0x556a372d:  pop esi; pop ebp; pop ebx; ret; 
0x55697452:  pop esi; pop edi; call 0x129d73; add ebx, 0x2dc87; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55697348:  pop esi; pop edi; call 0x129d73; add ebx, 0x2dd91; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55697241:  pop esi; pop edi; call 0x129d73; add ebx, 0x2de98; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55696472:  pop esi; pop edi; call 0x129d73; add ebx, 0x2eaa7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55696368:  pop esi; pop edi; call 0x129d73; add ebx, 0x2ebb1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55696261:  pop esi; pop edi; call 0x129d73; add ebx, 0x2ecb8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x556a3453:  pop esi; pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x55575e77:  pop esi; pop edi; pop ebp; ret 0x10; 
0x5557515d:  pop esi; pop edi; pop ebp; ret 4; 
0x55585c23:  pop esi; pop edi; pop ebp; ret 8; 
0x5557506d:  pop esi; pop edi; pop ebp; ret; 
0x555e512e:  pop esi; push es; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x556c5861:  pop esi; std; call dword ptr [edx + 0x5e]; 
0x556c585d:  pop esi; std; inc dword ptr [edx]; pop esi; std; call dword ptr [edx + 0x5e]; 
0x555f323a:  pop esi; sub eax, 0x10; pop edi; ret; 
0x556a5641:  pop esi; xor eax, eax; pop edi; ret; 
0x555d4f4c:  pop esp; add byte ptr [esp + ecx*4 - 0x75], dh; and dword ptr [esi + edi*8 + 0x4c7ffff], 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [eax]; 
0x556d216a:  pop esp; add dword ptr [edx], ecx; push cs; adc al, 0x46; ret; 
0x55645e6e:  pop esp; and al, 0x10; mov eax, 0x8e; call dword ptr gs
0x55667844:  pop esp; and al, 0x14; add esp, 0x1c; ret; 
0x55636030:  pop esp; and al, 0x14; mov dword ptr [esi + 0x14], 0; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x55655065:  pop esp; and al, 0x14; mov dword ptr [esi + 8], edx; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x55615e2c:  pop esp; and al, 0x1c; mov ebx, eax; mov eax, 0x11c; call dword ptr gs
0x55577866:  pop esp; and al, 0x20; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x55684d32:  pop esp; and al, 0x24; mov dword ptr [esi + 0xc], eax; mov esi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x555b2c7e:  pop esp; and al, 0x40; mov esi, dword ptr [esp + 0x44]; mov edi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x55675845:  pop esp; and al, 0x44; mov esi, dword ptr [esp + 0x48]; add esp, 0x4c; ret; 
0x5561264e:  pop esp; and al, 0x70; mov esi, dword ptr [esp + 0x74]; mov edi, dword ptr [esp + 0x78]; add esp, 0x7c; ret; 
0x55577936:  pop esp; and al, 0xc; add esp, 0x1c; ret; 
0x55615d2c:  pop esp; and al, 0xc; mov eax, 7; call dword ptr gs
0x555d5333:  pop esp; and al, 4; mov dword ptr gs
0x55646053:  pop esp; and al, 4; mov eax, 0x3d; call dword ptr gs
0x55645d47:  pop esp; and al, 4; mov eax, 0x4a; call dword ptr gs
0x55606467:  pop esp; and al, 4; mov eax, 0x4e; call dword ptr gs
0x55646473:  pop esp; and al, 4; mov eax, 0x6f; call dword ptr gs
0x55617363:  pop esp; and al, 4; mov eax, 0x93; call dword ptr gs
0x5564614d:  pop esp; and al, 4; mov eax, 0x94; call dword ptr gs
0x55623473:  pop esp; and al, 4; mov eax, 0x9d; call dword ptr gs
0x55623533:  pop esp; and al, 4; mov eax, 0xa0; call dword ptr gs
0x55623577:  pop esp; and al, 4; mov eax, 0xa1; call dword ptr gs
0x5562343a:  pop esp; and al, 8; mov eax, 0x9c; call dword ptr gs
0x556e5a44:  pop esp; and dh, bl; jmp dword ptr [eax + 3]; 
0x555f3923:  pop esp; bsr edi, edi; add eax, edi; pop edi; ret; 
0x556f7c59:  pop esp; clc; call dword ptr [eax]; 
0x556d2f54:  pop esp; imul ebp; jmp dword ptr [ebx]; 
0x55676623:  pop esp; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], edi; call dword ptr [eax + 0x24]; 
0x555c433e:  pop esp; mov esi, dword ptr [esp + 0x60]; mov edi, dword ptr [esp + 0x64]; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x556e7b70:  pop esp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x556d2226:  pop esp; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x556c577c:  pop esp; pop ebp; std; call dword ptr [esi + 0x5c]; 
0x556c5765:  pop esp; std; call dword ptr [edx]; 
0x556c5765:  pop esp; std; call dword ptr [edx]; pop ebp; std; jmp dword ptr [edx + 0x5d]; 
0x556c5731:  pop esp; std; call esp; 
0x556c5775:  pop esp; std; dec dword ptr [ebx*2 + 0x5d5cfffd]; std; call dword ptr [esi + 0x5c]; 
0x556c5761:  pop esp; std; inc edx; pop esp; std; call dword ptr [edx]; 
0x55585229:  pop ss; add byte ptr [ebx - 0x12f7f], cl; jmp dword ptr [ebp + 3]; 
0x55583d7a:  pop ss; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x55585269:  pop ss; add byte ptr [ebx - 0x8f7f], cl; jmp dword ptr [ebp + 3]; 
0x55585249:  pop ss; add byte ptr [ebx - 0xbf7f], cl; jmp dword ptr [ebp + 3]; 
0x555f2d2a:  pop ss; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x55644640:  pop ss; mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x555d2f65:  pop ss; mov edx, dword ptr [ebx - 0x15c]; and eax, ecx; sub esi, eax; mov dword ptr [esp], esi; call dword ptr [edx]; 
0x55684629:  pop ss; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x555a3933:  pop ss; std; call dword ptr [edi - 0x77]; 
0x556f3359:  popal; add al, byte ptr [eax]; inc esp; xor dh, bh; call ebx; 
0x555f274c:  popal; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x556c6155:  popfd; add byte ptr [eax], al; aam 0x59; in al, dx; call eax; 
0x556c616d:  popfd; add byte ptr [eax], al; inc esp; pop edx; in al, dx; call dword ptr [eax]; 
0x556e6f4d:  popfd; add dword ptr [eax], eax; adc byte ptr [edx], dh; hlt; jmp dword ptr [esi]; 
0x556c6979:  popfd; in eax, dx; jmp dword ptr [eax]; 
0x55617459:  popfd; wait; push cs; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xd3]; call dword ptr gs
0x556d2344:  push -0x2b; in al, dx; call dword ptr [eax]; 
0x555c5655:  push -0x75; inc esi; push 0x5b7ec085; mov eax, dword ptr [esi + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x556d716d:  push -1; out dx, al; jmp dword ptr [edx]; 
0x556e3268:  push 0x24000160; sub al, 0xf2; jmp dword ptr [ebp + 5]; 
0x556f7468:  push 0x440002a2; dec ebp; clc; jmp dword ptr [ebx]; 
0x556f6e68:  push 0x5400029c; aaa; clc; jmp dword ptr [eax]; 
0x555c3529:  push 0x5a7ec085; mov eax, dword ptr [esi + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x555c5658:  push 0x5b7ec085; mov eax, dword ptr [esi + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x556d2964:  push 0x68000000; push edi; add byte ptr [eax], al; in al, 0x30; in eax, dx; call dword ptr [ebx + 1]; 
0x55644827:  push 0x7401f883; and ecx, dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x55647264:  push 0x83000001; ret 0xf01; 
0x556e5468:  push 0x84000182; or ebx, esi; call edi; 
0x55617067:  push 0x90000000; lea esi, dword ptr [esi]; ret; 
0x556f5e39:  push 0xa; push cs; adc al, 0x41; ret; 
0x556f6c46:  push 0xc6040e0a; ret; 
0x556d2968:  push 0xe4000057; xor ch, ch; call dword ptr [ebx + 1]; 
0x55646422:  push 0xf189ffff; mov edx, eax; xchg ebx, ecx; mov eax, 6; call dword ptr gs
0x556e6a68:  push 0xf4000198; sbb esp, esi; call eax; 
0x556f6e54:  push cs; adc byte ptr [ebx + 0xc0e7e04], al; ret; 
0x556d2232:  push cs; add al, 0x45; or esi, dword ptr [esi + 0xa]; ret; 
0x556f703c:  push cs; add al, 0xc5; dec eax; or esp, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x556d2624:  push cs; add al, 0xc5; inc ebp; or eax, dword ptr [edx]; push esi; ret; 
0x556e2466:  push cs; add al, 0xc5; inc edi; or eax, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x55585730:  push cs; add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x55682a50:  push cs; add byte ptr [eax], al; call dword ptr [eax + 4]; 
0x5560666a:  push cs; add byte ptr [eax], al; pop esi; add eax, edx; ret; 
0x5561745b:  push cs; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xd3]; call dword ptr gs
0x55617d62:  push cs; add byte ptr [ecx + edx*4], bh; push cs; add byte ptr [ecx - 0x4c7bd428], cl; sub byte ptr [ebp - 0xf], 0xff; jmp eax; 
0x55617d66:  push cs; add byte ptr [ecx - 0x4c7bd428], cl; sub byte ptr [ebp - 0xf], 0xff; jmp eax; 
0x555b325a:  push cs; add dword ptr [eax], eax; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x7d]; 
0x556f6c3e:  push cs; and byte ptr [ebx + eax*4 + 3], al; push ebx; xchg byte ptr [edx], al; push 0xc6040e0a; ret; 
0x55687969:  push cs; mov eax, dword ptr [esp + 0x1c]; add esp, 0x28; pop ebx; ret; 
0x555f2c64:  push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x55663059:  push cs; mov eax, edx; and eax, 0xffffff; ret; 
0x556d203f:  push cs; or al, 0x44; ret; 
0x556d297b:  push cs; or al, 0x86; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0x300e4304], al; add ah, byte ptr [ecx + 0x43100e0a]; ret; 
0x556f6e4f:  push cs; or al, 0x86; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xc0e7e04], al; ret; 
0x556e2e4c:  push cs; or byte ptr [ebx + 0x40e4502], al; ret; 
0x556e2d57:  push cs; or byte ptr [ebx + 0x40e4802], al; ret; 
0x556e5526:  push cs; or byte ptr [edx + 9], al; add eax, dword ptr [edx]; push esi; ret; 
0x55692d70:  push cs; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x555e7b34:  push cs; pop edi; ret; 
0x5557733f:  push cs; rdtsc; mov dword ptr [ecx + 0x500], eax; mov dword ptr [ecx + 0x504], edx; pop ebx; ret; 
0x556f7c67:  push cs; xor byte ptr [edx], al; inc edi; push cs; or byte ptr [esi + ecx + 4], al; ret; 
0x5556222c:  push ds; add byte ptr [eax], al; add byte ptr [edx], dl; add byte ptr [eax + eax], cl; ret 0x52; 
0x556b6d28:  push ds; and bh, byte ptr [esi - 0x5e0466e]; xchg dword ptr [esp + eax + 0x6fa9ce9d], esp; ret; 
0x556d6541:  push ds; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x555c667e:  push ds; jecxz 0x68680; jmp dword ptr [ecx]; 
0x55617b38:  push ds; lea esi, dword ptr [esi]; xor eax, eax; ret; 
0x5561712c:  push ds; mov ecx, edx; xchg ebx, ecx; mov eax, 0xd5; call dword ptr gs
0x556c4f55:  push ds; std; call eax; 
0x556c4f55:  push ds; std; call eax; push ds; std; jmp dword ptr [eax]; 
0x556c4f45:  push ds; std; call esi; 
0x556c4f45:  push ds; std; call esi; push ds; std; jmp dword ptr [esi]; 
0x556c4f51:  push ds; std; inc dword ptr [eax - 0x2f0002e2]; push ds; std; jmp dword ptr [eax]; 
0x556c4f41:  push ds; std; inc dword ptr [esi - 0x290002e2]; push ds; std; jmp dword ptr [esi]; 
0x556c4f59:  push ds; std; jmp dword ptr [eax]; 
0x556c4f49:  push ds; std; jmp dword ptr [esi]; 
0x556c4f25:  push ds; std; jmp edx; 
0x556c4f39:  push ds; std; ljmp ptr [edi + ebx]; std; call dword ptr [esi]; 
0x556c4757:  push dword ptr [0x75fffcdc]; fdiv st(4), st(0); inc dword ptr [eax - 0x4f000327]; frndint; jmp eax; 
0x556c7f4b:  push dword ptr [eax + 0x3400014f]; cmp esi, ecx; call eax; 
0x556c537b:  push dword ptr [eax + 0x34]; std; inc dword ptr [eax]; xor eax, 0x3590fffd; std; jmp dword ptr [eax]; 
0x556c494f:  push dword ptr [eax + 0x40fffce2]; jecxz 0x166953; call eax; 
0x556c4e2b:  push dword ptr [eax + 0x40fffd01]; add bh, ch; call eax; 
0x556c6e23:  push dword ptr [eax + 0x480000e6]; fucomi st(7); jmp eax; 
0x556c5353:  push dword ptr [eax + 0xfffd3a]; cmp edi, ebp; call dword ptr [eax + 0x3b]; 
0x556c4e5b:  push dword ptr [eax + 8]; std; inc dword ptr [esi + 0x8fffd0f]; adc ch, bh; jmp edx; 
0x556c484f:  push dword ptr [eax - 0x1a]; cld; call dword ptr [eax]; 
0x556c4763:  push dword ptr [eax - 0x1f000327]; frndint; call dword ptr [eax]; 
0x556c4b67:  push dword ptr [eax - 0x7f000305]; cld; cld; jmp eax; 
0x556c427f:  push dword ptr [eax]; aad 0xfc; jmp dword ptr [eax - 0x2b]; 
0x556c426b:  push dword ptr [eax]; aam 0xfc; jmp dword ptr [eax - 0x2c]; 
0x556c6e63:  push dword ptr [eax]; call 0xdec08e6a; out dx, eax; jmp dword ptr [eax - 0x18]; 
0x556c492f:  push dword ptr [eax]; fdivp st(4); inc eax; fdivp st(4); call dword ptr [eax - 0x21]; 
0x556c6f2b:  push dword ptr [eax]; in eax, dx; add byte ptr [eax], al; aam 0xee; out dx, eax; jmp dword ptr [eax]; 
0x556c5d5b:  push dword ptr [eax]; xchg dword ptr [eax], eax; add ah, dl; mov al, 0xeb; call eax; 
0x556c536b:  push dword ptr [eax]; xor bh, ch; inc eax; xor bh, ch; call dword ptr [eax + 0x33]; 
0x55615e26:  push dword ptr [ebp + 0x47]; mov eax, ebp; mov dword ptr [esp + 0x1c], ebx; mov ebx, eax; mov eax, 0x11c; call dword ptr gs
0x556c554f:  push dword ptr [ebp + ecx*2 + 0x4b84fffd]; std; push dword ptr [esp + ecx*2]; std; jmp esp; 
0x55627529:  push dword ptr [ebp - 0x1c]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x556c475b:  push dword ptr [ebp - 0x24]; cld; inc dword ptr [eax - 0x4f000327]; frndint; jmp eax; 
0x5561262f:  push dword ptr [ebx + ebp - 0x77]; ret 0xe283; 
0x556c553f:  push dword ptr [ebx + ecx*2]; std; jmp esp; 
0x556c407f:  push dword ptr [ebx - 0x2f]; cld; call dword ptr [ebx - 0x4c00032f]; sar esp, 1; call ebx; 
0x556c3e37:  push dword ptr [ebx]; sar esp, 1; jmp dword ptr [ebx - 0x2f]; 
0x556c4327:  push dword ptr [ebx]; xlatb; cld; jmp dword ptr [ebx - 0x29]; 
0x55672264:  push dword ptr [ecx + eax*2 - 0x77]; push esi; sub al, 1; ret 0x5689; 
0x555c3524:  push dword ptr [ecx + ebp*2 - 0x75]; inc esi; push 0x5a7ec085; mov eax, dword ptr [esi + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x555d2d62:  push dword ptr [ecx]; in eax, dx; mov dword ptr [esp + 0x18], edx; mov dword ptr [esp], 0; call dword ptr [ecx]; 
0x55647769:  push dword ptr [edi + 0x1f]; mov ebx, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x55617143:  push dword ptr [edi + 0x2c]; add esp, 0x38; pop ebx; ret; 
0x55647620:  push dword ptr [edi + 0x31]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x555b357d:  push dword ptr [edi + 0xf]; mov ebx, dword ptr [esp]; mov esi, dword ptr [esp + 4]; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x55646926:  push dword ptr [edi + ecx + 0x65]; mov dword ptr [eax], 0x26; mov eax, 0xffffffff; ret; 
0x555c2f7e:  push dword ptr [edi + ecx - 0x75]; inc esp; and al, 0x18; mov edx, dword ptr [esp + 0x1c]; add esp, 0x2c; ret; 
0x556c5163:  push dword ptr [edx + 0x2c]; std; inc edx; sub al, 0xfd; call dword ptr [edx]; 
0x556c5267:  push dword ptr [edx + 0x2e]; std; call edx; 
0x556c4a2f:  push dword ptr [edx + 0xfffcf8]; stc; cld; call edx; 
0x555c5653:  push dword ptr [edx + ebp*2 - 0x75]; inc esi; push 0x5b7ec085; mov eax, dword ptr [esi + 0x54]; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x556c6c33:  push dword ptr [edx + ebx*8]; add byte ptr [eax], al; test bh, bl; out dx, al; jmp dword ptr [eax]; 
0x556c452f:  push dword ptr [edx - 0x28]; cld; call dword ptr [edx - 0x4d000328]; fdivr st(4); call edx; 
0x556c5047:  push dword ptr [esi + 0x20]; std; inc esi; and ch, bh; call eax; 
0x556c527f:  push dword ptr [esi + 0x6fffd2d]; std; jmp dword ptr [esi + 0x2e]; 
0x556c5343:  push dword ptr [esi + 0x6fffd3a]; cmp edi, ebp; call dword ptr [esi + 0x3b]; 
0x556c4c57:  push dword ptr [esi + edi*8]; cld; call esp; 
0x556c406f:  push dword ptr [esi - 0x2f]; cld; call dword ptr [esi - 0x4900032f]; sar esp, 1; call esi; 
0x555f3921:  push dword ptr [esp + ebx*2 + 0xf]; mov ebp, 0x5ff801ff; ret; 
0x556c572f:  push dword ptr [esp + ebx*2 - 3]; call esp; 
0x556c5557:  push dword ptr [esp + ecx*2]; std; jmp esp; 
0x556e7c20:  push eax; aam 0xf4; call dword ptr [edx]; 
0x556c427b:  push eax; aam 0xfc; push dword ptr [eax]; aad 0xfc; jmp dword ptr [eax - 0x2b]; 
0x555f2d26:  push eax; adc byte ptr [ecx + 0x448b1748], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x555f2d56:  push eax; adc byte ptr [ecx + 0x448b1848], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x55682a54:  push eax; add al, 0x89; ret 0x8365; 
0x55672136:  push eax; add al, 0x89; ret 0xc031; 
0x55684f3e:  push eax; add al, 0x89; ret 0xebeb; 
0x555c545f:  push eax; add al, 0x8b; inc ebp; push esp; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x555f2a7b:  push eax; add ecx, dword ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x5558407b:  push eax; and al, 0x81; ret 0x100; 
0x55584f3b:  push eax; and eax, 0x1000; ret; 
0x55584e2b:  push eax; and eax, 0x200; ret; 
0x55584e5b:  push eax; and eax, 0x8000; ret; 
0x556e6d30:  push eax; and esp, esi; jmp dword ptr [edi]; 
0x556c535c:  push eax; cmp edi, ebp; call dword ptr [eax + 0x2e]; 
0x556c535c:  push eax; cmp edi, ebp; call dword ptr [eax + 0x2e]; std; call dword ptr [eax]; 
0x5560346e:  push eax; lcall ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x55643024:  push eax; mov dword ptr [eax + 0x54], edx; xor eax, eax; pop ebx; ret; 
0x55645367:  push eax; mov ecx, dword ptr [esp + 0x54]; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14d; call dword ptr gs
0x55645134:  push eax; mov edi, dword ptr [esp + 0x14]; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14d; call dword ptr gs
0x556c4847:  push eax; out 0xfc, eax; inc dword ptr [eax + 0x70fffce8]; out 0xfc, al; call dword ptr [eax]; 
0x556d2f50:  push eax; pop ebp; add byte ptr [eax], al; pop esp; imul ebp; jmp dword ptr [ebx]; 
0x556c4e54:  push eax; pop es; std; jmp eax; 
0x555f2923:  push eax; push esp; or dword ptr [eax], eax; add ecx, 0xc605d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x55643026:  push eax; push esp; xor eax, eax; pop ebx; ret; 
0x55687926:  push eax; ret; 
0x555b4a63:  push eax; sbb al, 0x89; ret 0x478b; 
0x556c5360:  push eax; std; call dword ptr [eax]; 
0x556c4b78:  push eax; sti; cld; call dword ptr [eax]; 
0x556c5374:  push eax; xor edi, ebp; jmp eax; 
0x555c212b:  push ebp; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x4589; 
0x556e2725:  push ebp; add dword ptr [eax], eax; clc; adc dl, dh; jmp dword ptr [eax]; 
0x556f3a44:  push ebp; idiv bh; sbb al, 0xd; mov dword ptr [ebp - 0xa], ecx; jmp dword ptr [edx]; 
0x556d2a7d:  push ebp; in eax, dx; call dword ptr [eax]; 
0x55603447:  push ebp; mov ah, 0x83; ret 0x3901; 
0x555f6d2d:  push ebp; mov esp, 0x4245489; mov eax, dword ptr [eax + 8]; mov dword ptr [esp], eax; call edi; 
0x55603162:  push ebp; mov esp, 0x83bc4d8b; rol byte ptr [ecx], 0x83; ret 0x3901; 
0x55655a71:  push ebp; or al, 0x8b; inc ecx; or al, 0x39; ret 0x1474; 
0x555f286f:  push ebp; or dword ptr [eax], eax; add ecx, 0xc6092; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x555f2845:  push ebp; or dword ptr [eax], eax; add ecx, 0xc60bc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x555f282c:  push ebp; or dword ptr [eax], eax; add ecx, 0xc60d5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x556e5f71:  push ebx; add cl, byte ptr [edx]; ret; 
0x556e253d:  push ebx; add dword ptr [eax], eax; cmp bh, 0xf1; call edi; 
0x556c4350:  push ebx; frndint; call dword ptr [ebx - 0x2c000327]; frndint; call dword ptr [ebx]; 
0x556b6844:  push ebx; jno 0x158843; out 0x95, eax; push es; cld; ret; 
0x55645b58:  push ebx; mov edx, 0xffffffff; mov edi, edx; xchg edi, ebx; mov eax, 0xd2; call dword ptr gs
0x55623430:  push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs
0x55615d22:  push ebx; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 7; call dword ptr gs
0x556c3e47:  push ebx; sar esp, 1; jmp dword ptr [ebx]; 
0x556d7c6f:  push ebx; xchg byte ptr [edx], al; jp 0x179c7e; push cs; add al, 0xc6; ret; 
0x556d227b:  push ebx; xchg byte ptr [edx], al; or cl, byte ptr gs
0x556f616b:  push ebx; xchg byte ptr [edx], al; pop ebp; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x556d2223:  push ebx; xchg byte ptr [edx], al; pop esp; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x556f6c43:  push ebx; xchg byte ptr [edx], al; push 0xc6040e0a; ret; 
0x556c4337:  push ebx; xlatb; cld; jmp dword ptr [ebx]; 
0x55655a52:  push ecx; adc al, 0x39; ret 0xa7d; 
0x555e5653:  push ecx; add al, 0x5b; ret; 
0x55625361:  push ecx; add al, 0x85; ror byte ptr [ecx - 0x77f04fab], cl; ret; 
0x556e4545:  push ecx; add dword ptr [edx], ecx; ret; 
0x556e2d6b:  push ecx; add eax, 0x59000000; push cs; or byte ptr [ebx + 0x40e4902], al; ret; 
0x556e2541:  push ecx; call edi; 
0x556e7637:  push ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x556f4a2f:  push ecx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x556f3b43:  push ecx; xchg byte ptr [edx], al; jo 0x195b56; add al, 0xc6; ret; 
0x5567212c:  push edi; add al, 0x89; push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x5567215c:  push edi; add al, 0x89; push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x556d2969:  push edi; add byte ptr [eax], al; in al, 0x30; in eax, dx; call dword ptr [ebx + 1]; 
0x556d4628:  push edi; add edi, ebp; call dword ptr [eax]; 
0x556e383a:  push edi; ret; 
0x556e593b:  push edi; xchg dword ptr [edx], eax; insb byte ptr es
0x555e553a:  push edx; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x556e2431:  push edx; add dword ptr [eax], eax; fdivr st(5), st(0); int1; call dword ptr [ebx]; 
0x556e4e69:  push edx; call dword ptr [eax]; 
0x556c5320:  push edx; cmp bh, ch; inc edx; cmp bh, ch; call dword ptr [edx]; 
0x556c5628:  push edx; dec edi; std; jmp edx; 
0x55624b28:  push edx; or byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x55585221:  push edx; sub edx, dword ptr [eax]; add byte ptr [ecx + 0x17bdcfc1], al; add byte ptr [ebx - 0x12f7f], cl; jmp dword ptr [ebp + 3]; 
0x5556383a:  push es; add byte ptr [eax + 0x22000001], bl; add byte ptr [eax + eax], cl; ret; 
0x55593a45:  push es; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x555e512f:  push es; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x5562354f:  push es; add byte ptr [ecx + 0xddaa3c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x55623455:  push es; add byte ptr [ecx + 0xddb9dc1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x556a713b:  push es; add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x5567224d:  push es; add edx, ecx; mov dword ptr [esp + 4], edx; mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x556b6849:  push es; cld; ret; 
0x556c5440:  push es; cmp al, 0xfd; call dword ptr [esi + 0x3c]; 
0x556c5348:  push es; cmp edi, ebp; call dword ptr [esi + 0x3b]; 
0x555f612b:  push es; lea eax, dword ptr [ebx - 0x595d4]; pop ebx; ret; 
0x555f5e6b:  push es; lea eax, dword ptr [ebx - 0xfbd84]; pop ebx; ret; 
0x555f5d4b:  push es; lea eax, dword ptr [ebx - 0xfcaa4]; pop ebx; ret; 
0x555e7c71:  push es; lea eax, dword ptr [edx + 0xd]; ret; 
0x5567296a:  push es; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x555f2b64:  push es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x555e3731:  push es; mov eax, edi; pop edi; ret; 
0x55584925:  push es; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x555e7c68:  push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, dword ptr [edx + 0xd]; ret; 
0x555e3728:  push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x556d2775:  push es; or eax, 0xffed0af0; sbb al, 0xd; in eax, 0xb6; in al, dx; jmp dword ptr [edx]; 
0x556d3521:  push es; or eax, 0xffedd5b8; sbb al, 0xd; mov ss, ebp; in eax, dx; jmp dword ptr [edx]; 
0x556d357d:  push es; or eax, 0xffedd607; sbb al, 0xd; dec edx; aad 0xed; jmp dword ptr [edx]; 
0x556d3431:  push es; or eax, 0xffedd61d; sbb al, 0xd; mov dl, 0xd5; in eax, dx; jmp dword ptr [edx]; 
0x556d3341:  push es; or eax, 0xffedd66d; sbb al, 0xd; test al, 0xd5; in eax, dx; jmp dword ptr [edx]; 
0x556d3739:  push es; or eax, 0xffee3263; sbb al, 0xd; cmp byte ptr [ecx], dh; out dx, al; jmp dword ptr [edx]; 
0x556d3b45:  push es; or eax, 0xffeeb81c; sbb al, 0xd; iretd; mov bh, 0xee; jmp dword ptr [edx]; 
0x556d452d:  push es; or eax, 0xffeec22c; sbb al, 0xd; test al, 0xc1; out dx, al; jmp dword ptr [edx]; 
0x556d4671:  push es; or eax, 0xffeec7ef; sbb al, 0xd; pop ds; ret; 
0x556d4641:  push es; or eax, 0xffeec823; sbb al, 0xd; cmp al, dl; out dx, al; jmp dword ptr [edx]; 
0x556d487d:  push es; or eax, 0xffeec93f; sbb al, 0xd; or al, 0xee; jmp dword ptr [edx]; 
0x556d4b75:  push es; or eax, 0xffeec9b8; sbb al, 0xd; mov ecx, ecx; out dx, al; jmp dword ptr [edx]; 
0x556d4e55:  push es; or eax, 0xffeecbd1; sbb al, 0xd; or cl, bl; out dx, al; jmp dword ptr [edx]; 
0x556d556d:  push es; or eax, 0xffeed195; sbb al, 0xd; imul edx, ecx, -0x12; jmp dword ptr [edx]; 
0x556d553d:  push es; or eax, 0xffeed1d0; sbb al, 0xd; pop ebp; shr esi, 1; jmp dword ptr [edx]; 
0x556d577d:  push es; or eax, 0xffeed26b; sbb al, 0xd; inc ecx; shr dh, cl; jmp dword ptr [edx]; 
0x556d574d:  push es; or eax, 0xffeed2a6; sbb al, 0xd; inc ebp; shr dh, cl; jmp dword ptr [edx]; 
0x556d565d:  push es; or eax, 0xffeed303; sbb al, 0xd; inc edx; shr dh, cl; jmp dword ptr [edx]; 
0x556d5c49:  push es; or eax, 0xffeeda82; sbb al, 0xd; sbb ebx, edx; out dx, al; jmp dword ptr [edx]; 
0x556d5b5d:  push es; or eax, 0xffeedab7; sbb al, 0xd; mov bl, cl; out dx, al; jmp dword ptr [edx]; 
0x556d5b2d:  push es; or eax, 0xffeedaef; sbb al, 0xd; dec eax; fsubr st(6); jmp dword ptr [edx]; 
0x556d6131:  push es; or eax, 0xffeedeaa; sbb al, 0xd; xchg eax, edi; fsubp st(6); jmp dword ptr [edx]; 
0x556d7165:  push es; or eax, 0xffeeff94; sbb al, 0xd; push -1; out dx, al; jmp dword ptr [edx]; 
0x556d725d:  push es; or eax, 0xffeeff9b; sbb al, 0xd; jno 0x179266; out dx, al; jmp dword ptr [edx]; 
0x556d6e69:  push es; or eax, 0xffeeffec; sbb al, 0xd; out dx, al; jmp dword ptr [edx]; 
0x556d762d:  push es; or eax, 0xffef0212; sbb al, 0xd; out 1, al; out dx, eax; jmp dword ptr [edx]; 
0x556d7769:  push es; or eax, 0xffef0272; sbb al, 0xd; mov dl, 1; out dx, eax; jmp dword ptr [edx]; 
0x556d7f7d:  push es; or eax, 0xffef3d72; sbb al, 0xd; push edx; and bh, ch; jmp dword ptr [edx]; 
0x556e2a2d:  push es; or eax, 0xfff19e1c; sbb al, 0xd; popfd; int1; jmp dword ptr [edx]; 
0x556e296d:  push es; or eax, 0xfff19e46; sbb al, 0xd; sbb al, 0x9e; int1; jmp dword ptr [edx]; 
0x556e287d:  push es; or eax, 0xfff19e99; sbb al, 0xd; sahf; int1; jmp dword ptr [edx]; 
0x556e284d:  push es; or eax, 0xfff19ed1; sbb al, 0xd; or al, 0x9e; int1; jmp dword ptr [edx]; 
0x556e3455:  push es; or eax, 0xfff1c1e8; sbb al, 0xd; test al, 0xf1; jmp dword ptr [edx]; 
0x556e3365:  push es; or eax, 0xfff1c2ec; sbb al, 0xd; in eax, 0xbf; int1; jmp dword ptr [edx]; 
0x556e3e25:  push es; or eax, 0xfff25a5d; sbb al, 0xd; add ebx, dword ptr [edx - 0xe]; jmp dword ptr [edx]; 
0x556e463d:  push es; or eax, 0xfff267b1; sbb al, 0xd; cmp ah, byte ptr [edi - 0xe]; jmp dword ptr [edx]; 
0x556e4e25:  push es; or eax, 0xfff27232; sbb al, 0xd; or dword ptr [edx - 0xe], esi; jmp dword ptr [edx]; 
0x556e5021:  push es; or eax, 0xfff27449; sbb al, 0xd; sal dword ptr [edx - 0xe], cl; jmp dword ptr [edx]; 
0x556e6925:  push es; or eax, 0xfff4635e; sbb al, 0xd; fldenv dword ptr [eax - 0xc]; jmp dword ptr [edx]; 
0x556f204d:  push es; or eax, 0xfff62a52; sbb al, 0xd; iretd; sub esi, esi; jmp dword ptr [edx]; 
0x556f254d:  push es; or eax, 0xfff63558; sbb al, 0xd; in al, dx; xor al, 0xf6; jmp dword ptr [edx]; 
0x556f2f39:  push es; or eax, 0xfff63df0; sbb al, 0xd; sar byte ptr [esi + esi*8], 1; jmp dword ptr [edx]; 
0x556f3445:  push es; or eax, 0xfff64248; sbb al, 0xd; xor byte ptr [ecx - 0xa], al; jmp dword ptr [edx]; 
0x556f3a41:  push es; or eax, 0xfff6553d; sbb al, 0xd; mov dword ptr [ebp - 0xa], ecx; jmp dword ptr [edx]; 
0x556d6075:  push es; or eax, 0xfffad8ad; sbb al, 0xd; sbb eax, -6; jmp dword ptr [edx]; 
0x556d6045:  push es; or eax, 0xfffad8e8; sbb al, 0xd; imul ebx, eax, -6; jmp dword ptr [edx]; 
0x556d6359:  push es; or eax, 0xfffadc5a; sbb al, 0xd; xor ah, bl; cli; jmp dword ptr [edx]; 
0x556d6161:  push es; or eax, 0xfffadc7e; sbb al, 0xd; out dx, al; fsqrt; jmp dword ptr [edx]; 
0x556d6329:  push es; or eax, 0xfffadc95; sbb al, 0xd; inc edx; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x556d6569:  push es; or eax, 0xfffadcbf; sbb al, 0xd; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x556d6539:  push es; or eax, 0xfffadcf7; sbb al, 0xd; push ds; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x556d647d:  push es; or eax, 0xfffadcfb; sbb al, 0xd; and bl, ah; cli; jmp dword ptr [edx]; 
0x556d4c71:  push es; out dx, eax; jmp dword ptr [esi]; 
0x555e7a7c:  push es; pop edi; ret; 
0x555f296d:  push es; push esp; or dword ptr [eax], eax; add ecx, 0xc6013; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x556c4e51:  push es; std; call dword ptr [eax + 7]; 
0x556c4e51:  push es; std; call dword ptr [eax + 7]; std; jmp eax; 
0x556c4e4d:  push es; std; inc eax; push es; std; call dword ptr [eax + 7]; 
0x5567687b:  push esi; add al, 0x83; ret 0x8901; 
0x55675647:  push esi; add ch, al; and eax, 0x81000127; ret; 
0x555f2a76:  push esi; add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x556c544b:  push esi; cmp al, 0xfd; inc dword ptr [eax]; cmp al, 0xfd; call dword ptr [eax + 0x3c]; 
0x5567284f:  push esi; cmp al, 1; ret 0x4689; 
0x556f6078:  push esi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x555f2746:  push esi; or dword ptr [eax], eax; add ecx, 0xc61bb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x55563839:  push esi; push es; add byte ptr [eax + 0x22000001], bl; add byte ptr [eax + eax], cl; ret; 
0x556a6f35:  push esi; ret 0xf02; 
0x55672268:  push esi; sub al, 1; ret 0x5689; 
0x55643a5f:  push esi; sub byte ptr [ebx + 0x56892c4e], cl; xor byte ptr [ebx + 0x4e894050], cl; xor al, 0xf6; ret 0x7420; 
0x55643a65:  push esi; xor byte ptr [ebx + 0x4e894050], cl; xor al, 0xf6; ret 0x7420; 
0x556f6e6c:  push esp; aaa; clc; jmp dword ptr [eax]; 
0x556f6778:  push esp; add byte ptr [eax], al; add byte ptr [ebp + edx*4 + 2], bh; add byte ptr [eax + 0x19], ah; clc; call edx; 
0x55644357:  push esp; add byte ptr [eax], al; mov esi, eax; xchg edi, ebx; mov eax, 0x36; call dword ptr gs
0x556d2641:  push esp; add byte ptr [eax], al; pushfd; fsubr st(4); jmp dword ptr [edi]; 
0x556e4c6d:  push esp; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x55687b39:  push esp; and al, 0x10; mov dword ptr [edx], edi; pop esi; pop edi; ret; 
0x555c4c7e:  push esp; and al, 0x10; mov dword ptr [esp + 0xc], 0; call dword ptr [eax + 0x24]; 
0x55623432:  push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs
0x55605b39:  push esp; and al, 0x10; mov esi, dword ptr [esp + 0x24]; add esp, 0x2c; imul eax, edx; ret; 
0x55615d24:  push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 7; call dword ptr gs
0x55623b7c:  push esp; and al, 0x18; add esp, 0x28; pop ebx; mov eax, edx; ret; 
0x555d7860:  push esp; and al, 0x18; mov dword ptr [esp + 4], edx; call eax; 
0x555d2d66:  push esp; and al, 0x18; mov dword ptr [esp], 0; call dword ptr [ecx]; 
0x55645e66:  push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x8e; call dword ptr gs
0x555d2d43:  push esp; and al, 0x18; neg eax; mov dword ptr [esp], eax; call dword ptr [ecx]; 
0x55577f3c:  push esp; and al, 0x1c; add esp, 0x24; ret; 
0x555b344d:  push esp; and al, 0x1c; add esp, 0x28; pop ebx; mov eax, edx; ret; 
0x55636460:  push esp; and al, 0x1c; mov dword ptr [eax + 8], edx; add esp, 8; ret; 
0x55672255:  push esp; and al, 0x1c; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x55684c58:  push esp; and al, 0x1c; mov eax, dword ptr [ebx - 0xfc]; mov dword ptr [esp], edx; mov eax, dword ptr [eax + 0x1a0]; call eax; 
0x55673f35:  push esp; and al, 0x24; add esp, 0x1c; ret; 
0x555d4e26:  push esp; and al, 0x28; call dword ptr [ebp]; 
0x555d4e47:  push esp; and al, 0x28; mov dword ptr [esp + 0x2c], ecx; call eax; 
0x5567425a:  push esp; and al, 0x28; mov dword ptr [esp], edi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x5557785d:  push esp; and al, 0x30; mov dword ptr [esp], edx; call eax; 
0x55577855:  push esp; and al, 0x34; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x30]; mov dword ptr [esp], edx; call eax; 
0x555c5046:  push esp; and al, 0x34; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x2c]; 
0x55577e3b:  push esp; and al, 0x34; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x40]; add esp, 0x44; ret; 
0x555d752b:  push esp; and al, 0x3c; mov dword ptr [esp], esi; mov dword ptr [esp + 4], ebp; mov dword ptr [esp + 8], edx; call eax; 
0x555d7b5f:  push esp; and al, 0x40; mov dword ptr [esp + 4], edx; call eax; 
0x55672b75:  push esp; and al, 0x60; mov dword ptr [esp], edx; call eax; 
0x55672b6d:  push esp; and al, 0x64; mov dword ptr [esp + 4], edx; mov edx, dword ptr [esp + 0x60]; mov dword ptr [esp], edx; call eax; 
0x555c504d:  push esp; and al, 4; call dword ptr [eax + 0x2c]; 
0x55672251:  push esp; and al, 4; mov dword ptr [esp + 0x1c], edx; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x555c4a37:  push esp; and al, 4; mov dword ptr [esp + 8], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x24]; 
0x55673f2e:  push esp; and al, 4; mov dword ptr [esp], eax; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x5567212f:  push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax + 4]; 
0x5567215f:  push esp; and al, 4; mov dword ptr [esp], esi; call dword ptr [eax]; 
0x55606443:  push esp; and al, 4; mov ecx, eax; xchg ebx, ecx; mov eax, 0xd; call dword ptr gs
0x55577859:  push esp; and al, 4; mov edx, dword ptr [esp + 0x30]; mov dword ptr [esp], edx; call eax; 
0x55672b71:  push esp; and al, 4; mov edx, dword ptr [esp + 0x60]; mov dword ptr [esp], edx; call eax; 
0x555d7536:  push esp; and al, 8; call eax; 
0x55636a55:  push esp; and al, 8; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x555d785c:  push esp; and al, 8; mov edx, dword ptr [esp + 0x18]; mov dword ptr [esp + 4], edx; call eax; 
0x55674256:  push esp; and al, 8; mov edx, dword ptr [esp + 0x28]; mov dword ptr [esp], edi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0xc]; 
0x555c5042:  push esp; and al, 8; mov edx, dword ptr [esp + 0x34]; mov dword ptr [esp], esi; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x2c]; 
0x555d7b5b:  push esp; and al, 8; mov edx, dword ptr [esp + 0x40]; mov dword ptr [esp + 4], edx; call eax; 
0x55642d75:  push esp; and al, 8; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x55647571:  push esp; and al, 8; xchg ebx, edx; mov eax, 0x10f; call dword ptr gs
0x556c6e30:  push esp; fucomi st(7); call eax; 
0x5564536b:  push esp; mov dword ptr [esp + 0x2c], ebx; mov ebx, eax; mov eax, 0x14d; call dword ptr gs
0x555c5b70:  push esp; mov dword ptr [esp + 4], eax; mov dword ptr [esp], ebp; call edi; 
0x555c2a6c:  push esp; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x555c6d45:  push esp; mov ebx, dword ptr [esp + 0x20]; mov esi, dword ptr [esp + 0x24]; mov edi, dword ptr [esp + 0x28]; add esp, 0x2c; ret; 
0x555f296e:  push esp; or dword ptr [eax], eax; add ecx, 0xc6013; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x555f2951:  push esp; or dword ptr [eax], eax; add ecx, 0xc6030; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x555f2924:  push esp; or dword ptr [eax], eax; add ecx, 0xc605d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x556c5b50:  push esp; sbb bl, ch; call dword ptr [eax]; 
0x555d2026:  push esp; sbb dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x556c4c40:  push esp; std; cld; jmp esp; 
0x556f4a2b:  push esp; xchg byte ptr [edx], al; add dl, byte ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x55643027:  push esp; xor eax, eax; pop ebx; ret; 
0x55682242:  push ss; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x8965; 
0x55635158:  push ss; add dword ptr [eax + edx - 0x75], esi; xor dword ptr [eax - 1], 0xffffffff; jmp dword ptr [ebp - 0x75]; 
0x55653068:  push ss; add dword ptr [eax], eax; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x556c6069:  push ss; in al, dx; call dword ptr [eax - 0x68]; 
0x55684626:  push ss; mov byte ptr [edi + edx], al; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; add esp, 8; ret; 
0x555f2a24:  push ss; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x55583767:  push ss; mov ecx, dword ptr [ebp - 0x1d4]; xchg ebx, ecx; mov eax, 6; call dword ptr gs
0x55584961:  push ss; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x556e2945:  push ss; sahf; int1; jmp dword ptr [edx]; 
0x556c6e6c:  pushal; call 0xdeca8e72; out dx, eax; call dword ptr [eax - 0x17]; 
0x55565968:  pushal; clc; adc dword ptr [eax], eax; ret; 
0x55565138:  pushal; jp 0x7145; add byte ptr [0x22000000], dl; add byte ptr [eax + eax], cl; ret; 
0x55672b77:  pushal; mov dword ptr [esp], edx; call eax; 
0x555c4342:  pushal; mov edi, dword ptr [esp + 0x64]; mov ebp, dword ptr [esp + 0x68]; add esp, 0x6c; ret; 
0x556d267c:  pushal; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x556d6b6e:  pushal; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x556e4e68:  pushal; push edx; call dword ptr [eax]; 
0x5563704c:  pushal; ret; 
0x556f7b60:  pushal; test eax, 0x5bbc0002; clc; call dword ptr [ecx]; 
0x556f6e69:  pushfd; add al, byte ptr [eax]; push esp; aaa; clc; jmp dword ptr [eax]; 
0x555b334b:  pushfd; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x556d2644:  pushfd; fsubr st(4); jmp dword ptr [edi]; 
0x55623c68:  pushfd; sub esi, edx; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x556c4278:  rcl ah, 0xfc; push eax; aam 0xfc; push dword ptr [eax]; aad 0xfc; jmp dword ptr [eax - 0x2b]; 
0x55696e7d:  rcl byte ptr [eax], 0x83; ret 0x8310; 
0x555f286b:  rcl byte ptr [eax], 0xe8; add eax, 0x81000955; rcl dword ptr [edx + 0x3000c60], 0xc; xchg eax, ecx; jmp ecx; 
0x55693a22:  rcl byte ptr [eax], 3; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x55606668:  rcl byte ptr [eax], cl; push cs; add byte ptr [eax], al; pop esi; add eax, edx; ret; 
0x55583d79:  rcl byte ptr [edi], cl; add byte ptr [ebx - 0x1577d], cl; jmp dword ptr [ebp - 0x75]; 
0x556c5974:  rcl byte ptr [edx - 0x6cbf0004], 0xfc; call eax; 
0x555f6527:  rcl dword ptr [eax], -0x7b; div byte ptr [ebx + esi - 0x7d]; ret 0x8310; 
0x555f3635:  rcl dword ptr [eax], -0x7d; ret 0x2910; 
0x55693721:  rcl dword ptr [ebx + eax], 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x555f2972:  rcl dword ptr [ebx], 0x60; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x555f2873:  rcl dword ptr [edx + 0x3000c60], 0xc; xchg eax, ecx; jmp ecx; 
0x555f2830:  rcl ebp, 0x60; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x55637f3f:  rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret 0x14; 
0x55684f33:  rcr byte ptr [ebx - 0x3d], 1; mov dword ptr [esp], edx; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 4]; 
0x556c5050:  rcr byte ptr [edi], 1; std; jmp dword ptr [eax]; 
0x556c4f58:  rcr byte ptr [esi], 1; std; jmp dword ptr [eax]; 
0x556c4934:  rcr dh, 0xfc; call dword ptr [eax - 0x21]; 
0x556c4934:  rcr dh, 0xfc; call dword ptr [eax - 0x21]; cld; jmp eax; 
0x555f2928:  rcr dword ptr [ebp + 0x60], 0xc; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x556e284f:  rcr dword ptr [esi + 0xd1cfff1], 1; or al, 0x9e; int1; jmp dword ptr [edx]; 
0x556c4348:  rcr eax, cl; cld; call dword ptr [ebx]; 
0x556c4348:  rcr eax, cl; cld; call dword ptr [ebx]; frndint; call dword ptr [ebx - 0x27]; 
0x556c4358:  rcr ecx, cl; cld; call dword ptr [ebx]; 
0x55577340:  rdtsc; mov dword ptr [ecx + 0x500], eax; mov dword ptr [ecx + 0x504], edx; pop ebx; ret; 
0x5558407e:  ret 0x100; 
0x55583330:  ret 0x101; 
0x55667c2b:  ret 0x1079; 
0x5557606b:  ret 0x108; 
0x55575e7a:  ret 0x10; 
0x5569247e:  ret 0x110; 
0x555b2f30:  ret 0x1174; 
0x55563379:  ret 0x12; 
0x5560344d:  ret 0x1375; 
0x555c6e34:  ret 0x13a1; 
0x555b2b34:  ret 0x14e4; 
0x555e464a:  ret 0x15; 
0x555a3368:  ret 0x16eb; 
0x55584d78:  ret 0x17; 
0x55644162:  ret 0x180; 
0x55606538:  ret 0x18b; 
0x55596350:  ret 0x18e9; 
0x555b4a71:  ret 0x1974; 
0x555b772b:  ret 0x1c77; 
0x555f305e:  ret 0x1d75; 
0x55694b6e:  ret 0x1e72; 
0x55655a63:  ret 0x1e7e; 
0x556a793e:  ret 0x1f75; 
0x55637520:  ret 0x2574; 
0x555f3877:  ret 0x267c; 
0x555f3079:  ret 0x275; 
0x555a3241:  ret 0x29eb; 
0x555f5c52:  ret 0x2a76; 
0x555a3865:  ret 0x3274; 
0x55575f26:  ret 0x348d; 
0x555f3867:  ret 0x367c; 
0x55665f66:  ret 0x3775; 
0x555f3043:  ret 0x3875; 
0x55567444:  ret 0x38; 
0x55583723:  ret 0x3910; 
0x556a7923:  ret 0x3a75; 
0x555d3750:  ret 0x3b30; 
0x55606876:  ret 0x3c8d; 
0x55663f7e:  ret 0x4075; 
0x55585d40:  ret 0x408b; 
0x5558752c:  ret 0x40c7; 
0x5567223a:  ret 0x4375; 
0x555d5929:  ret 0x440b; 
0x55594265:  ret 0x44c7; 
0x555a772d:  ret 0x4589; 
0x55644b42:  ret 0x4b74; 
0x55577d2c:  ret 0x4c89; 
0x555d2346:  ret 0x528b; 
0x555e237e:  ret 0x528d; 
0x55562234:  ret 0x52; 
0x555f3028:  ret 0x5375; 
0x555d2245:  ret 0x5488; 
0x555c327b:  ret 0x548d; 
0x555c7576:  ret 0x562b; 
0x555d254f:  ret 0x5675; 
0x5567226b:  ret 0x5689; 
0x5565776c:  ret 0x568d; 
0x555e3b7a:  ret 0x5c8d; 
0x556a372c:  ret 0x5d5e; 
0x55596b57:  ret 0x62e9; 
0x55596a64:  ret 0x689; 
0x555b2240:  ret 0x6974; 
0x55577c6a:  ret 0x6c89; 
0x555c2c59:  ret 0x7420; 
0x55642973:  ret 0x7440; 
0x5560596b:  ret 0x76c; 
0x556a6721:  ret 0x7c0e; 
0x556a6731:  ret 0x7c0f; 
0x555b7342:  ret 0x7d77; 
0x555d315c:  ret 0x8108; 
0x555a5031:  ret 0x8120; 
0x55685171:  ret 0x828b; 
0x555f5c67:  ret 0x8310; 
0x55657338:  ret 0x8318; 
0x55575a7c:  ret 0x831e; 
0x5568326d:  ret 0x8328; 
0x55575a69:  ret 0x840f; 
0x55593577:  ret 0x843b; 
0x55596467:  ret 0x848d; 
0x555f6036:  ret 0x8510; 
0x556b6926:  ret 0x871e; 
0x5563242f:  ret 0x8940; 
0x5560365d:  ret 0x895e; 
0x555f3b31:  ret 0x8d10; 
0x55617947:  ret 0x8dc3; 
0x55576750:  ret 0x904; 
0x55605b45:  ret 0x90c3; 
0x555d2361:  ret 0x933b; 
0x55607a2f:  ret 0x9389; 
0x556a7959:  ret 0x9474; 
0x55613b76:  ret 0x95eb; 
0x555d2d7b:  ret 0x9f74; 
0x5565745b:  ret 0xa274; 
0x55626d7d:  ret 0xa5e9; 
0x55605928:  ret 0xa5eb; 
0x55655a55:  ret 0xa7d; 
0x55644556:  ret 0xac75; 
0x55637837:  ret 0xace9; 
0x55605e71:  ret 0xb801; 
0x5560462a:  ret 0xb; 
0x55675e46:  ret 0xbc80; 
0x55576f7b:  ret 0xbd80; 
0x555a462c:  ret 0xbd89; 
0x55577549:  ret 0xc031; 
0x55636745:  ret 0xc374; 
0x556b5a62:  ret 0xc4c3; 
0x55577a32:  ret 0xc589; 
0x55636e7f:  ret 0xc689; 
0x55675833:  ret 0xc707; 
0x55682539:  ret 0xc709; 
0x55587535:  ret 0xc740; 
0x55617e4d:  ret 0xcb87; 
0x555d3659:  ret 0xcc75; 
0x556b734a:  ret 0xcca7; 
0x55603656:  ret 0xcf74; 
0x55587a2b:  ret 0xd001; 
0x5561784f:  ret 0xd028; 
0x55602c65:  ret 0xd029; 
0x55606157:  ret 0xd138; 
0x555a7051:  ret 0xd689; 
0x55634966:  ret 0xd772; 
0x55585928:  ret 0xd789; 
0x555b4f7d:  ret 0xd; 
0x555c2946:  ret 0xdeeb; 
0x5566306c:  ret 0xe181; 
0x55575572:  ret 0xe283; 
0x5558647b:  ret 0xe901; 
0x55673846:  ret 0xe904; 
0x5558653a:  ret 0xe90a; 
0x556b7427:  ret 0xe970; 
0x5557714f:  ret 0xeac1; 
0x55646b31:  ret 0xeb03; 
0x55623e66:  ret 0xeb18; 
0x55684f41:  ret 0xebeb; 
0x55606852:  ret 0xed85; 
0x556d5468:  ret 0xef13; 
0x556d5c30:  ret 0xef21; 
0x555a4622:  ret 0xefc1; 
0x556a666c:  ret 0xf0c; 
0x556a5243:  ret 0xf10; 
0x556a5254:  ret 0xf20; 
0x55623c2b:  ret 0xf304; 
0x556a5265:  ret 0xf40; 
0x55655530:  ret 0xf618; 
0x55656322:  ret 0xf631; 
0x55655a5f:  ret 0xf67c; 
0x555d654b:  ret 0xf9b8; 
0x5563444b:  ret 0xfa73; 
0x555d667f:  ret 0xfab8; 
0x555b3e5a:  ret 0xfbd2; 
0x556c4038:  ret 0xfcd1; 
0x556c5168:  ret 0xfd2c; 
0x556c5260:  ret 0xfd2d; 
0x556c5324:  ret 0xfd3a; 
0x556c5470:  ret 0xfd49; 
0x556c546c:  ret 0xfd4b; 
0x556c5764:  ret 0xfd5c; 
0x556a7a7a:  ret 0xfe89; 
0x55665e6a:  ret 0xff7f; 
0x555f5c7e:  ret 0xff85; 
0x555a2a79:  ret 0xffdf; 
0x55595157:  ret 0xfff2; 
0x5557765e:  ret 0xfffb; 
0x55664d43:  ret 9; 
0x55685848:  rol byte ptr [eax + 0x747a097e], 9; add esp, 0x24; pop esi; pop edi; ret; 
0x55575f20:  rol byte ptr [eax - 0x6bf0a2c8], cl; ret 0x348d; 
0x5561755f:  rol byte ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs
0x555f3c40:  rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x555e5847:  rol byte ptr [ebx + 0x4a8d02eb], 1; add cl, byte ptr [edi]; test dword ptr [0x5bffffff], edi; ret; 
0x555e596f:  rol byte ptr [ebx + 0x4a8d0beb], 1; or ecx, dword ptr [edi]; test dword ptr [0x5bfffffe], edx; ret; 
0x5558543f:  rol byte ptr [ebx + 0x5e5b2cc4], 1; pop edi; pop ebp; ret; 
0x55667a31:  rol byte ptr [ebx + 0x5e5b5cc4], 0x5f; pop ebp; ret; 
0x5566716e:  rol byte ptr [ebx - 0x27ca817], 1; or dword ptr [edi], ecx; inc esi; int 0x80; 
0x55646440:  rol byte ptr [ebx - 0x3b7cfe18], 0x24; pop ebx; pop esi; ret; 
0x555f3872:  rol byte ptr [ebx - 0x3dfecf16], 0x7c; lea eax, dword ptr es
0x55672e7b:  rol byte ptr [ebx - 0x49f0e33c], 0xc0; ret; 
0x556a6e36:  rol byte ptr [ebx], 0x5f; ret; 
0x55683f7a:  rol byte ptr [ecx + 0x14cc4], 0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x556e6531:  rol byte ptr [ecx + 0x22fff3], 1; add byte ptr [eax + eax], ch; add byte ptr [eax], al; mov word ptr [esi + 0x1a850001], cs; hlt; call dword ptr [eax]; 
0x55647a75:  rol byte ptr [ecx + 0x80000a], 1; add byte ptr [ebx + 0x1b018c4], al; pop ebx; ret; 
0x555b3348:  rol byte ptr [ecx + 0x9cc4], 0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x55663072:  rol byte ptr [ecx + 0xffe2], 0; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x5562367f:  rol byte ptr [ecx], 0x39; ret 0xf377; 
0x556d4920:  rol byte ptr [ecx], 0xef; call dword ptr [ebx]; 
0x555f3127:  rol byte ptr [ecx], 0xf8; pop edi; ret; 
0x555f3275:  rol byte ptr [ecx], 0xf8; sub eax, 0x10; pop edi; ret; 
0x55662e4c:  rol byte ptr [ecx], 1; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x556a6e5c:  rol byte ptr [edi], 0x5f; ret; 
0x556c4e34:  rol byte ptr [edx], 1; std; jmp dword ptr [eax + 3]; 
0x556c4e50:  rol byte ptr [esi], 0xfd; call dword ptr [eax + 7]; 
0x556c4e50:  rol byte ptr [esi], 0xfd; call dword ptr [eax + 7]; std; jmp eax; 
0x556b5a60:  rol cl, 0xc2; ret; 
0x55635155:  rol dh, 4; push ss; add dword ptr [eax + edx - 0x75], esi; xor dword ptr [eax - 1], 0xffffffff; jmp dword ptr [ebp - 0x75]; 
0x556c6825:  rol dword ptr [eax], 0; in al, 0x6c; in eax, dx; jmp dword ptr [eax - 0x3f]; 
0x556c6855:  rol dword ptr [eax], 0; mov eax, dword ptr [0x10ffed74]; ret 0; 
0x55617464:  rol dword ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs
0x555f3551:  rol dword ptr [ebp + 0x315a75c0], -0x40; pop edi; ret; 
0x556b712a:  rol dword ptr [edi + 0x42923bbd], 1; jmp dword ptr [edx - 0x71]; 
0x55582f4e:  rol dword ptr [edi + 0x6b8cb], 1; add byte ptr [eax], al; call dword ptr gs
0x5561712e:  rol dword ptr [edi + 0xd5b8cb], 1; add byte ptr [eax], al; call dword ptr gs
0x55697f41:  rol dword ptr [edx], 1; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x55663049:  ror ax, 8; ret; 
0x556f5650:  ror bl, 0xf7; jmp dword ptr [edx]; 
0x55674b23:  ror byte ptr [eax], 0x89; add al, 0x24; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x55677678:  ror byte ptr [ebp + 0x26b4], 0; add byte ptr [ebx], bh; lodsb al, byte ptr [esi]; ret; 
0x55645530:  ror byte ptr [ebp + 0x5e5bf465], 1; pop edi; pop ebp; ret 4; 
0x55605268:  ror byte ptr [ebp + 0x5eff0044], 0x5f; ret; 
0x555d6771:  ror byte ptr [ebx + 0x748b241c], 1; and al, 4; mov edi, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x555b367d:  ror byte ptr [ebx + 0x7c8b2434], 0x24; add al, 0x8b; insb byte ptr es
0x55636279:  ror byte ptr [ebx + 0xf302474], cl; xchg eax, ebp; ror byte ptr [ebx - 0x74cbdb84], 0x6c; and al, 0x38; add esp, 0x3c; ret; 
0x55606441:  ror byte ptr [ebx - 0x76fbdbac], 0xc1; xchg ebx, ecx; mov eax, 0xd; call dword ptr gs
0x55596a41:  ror byte ptr [ebx - 0x9e58aea], cl; ret 0x7501; 
0x55646920:  ror byte ptr [ebx - 0xf77f], cl; push dword ptr [edi + ecx + 0x65]; mov dword ptr [eax], 0x26; mov eax, 0xffffffff; ret; 
0x55687e3c:  ror byte ptr [ecx + 0x1ffac1c2], 1; add esp, 0x18; pop esi; ret; 
0x555d2340:  ror byte ptr [ecx + 0x291b75f2], cl; ret 0x528b; 
0x5561705f:  ror byte ptr [ecx + 0x65da75c1], cl; mov dword ptr [0x68], ecx; nop; lea esi, dword ptr [esi]; ret; 
0x55672960:  ror byte ptr [ecx - 0x76f7dbbc], 1; insb byte ptr es
0x55625364:  ror byte ptr [ecx - 0x77f04fab], cl; ret; 
0x556d4f20:  ror byte ptr [ecx], 0xef; jmp dword ptr [ebx]; 
0x5565233f:  ror byte ptr [edi], 0x44; ret 0x4489; 
0x5568276b:  ror byte ptr [edi], 0x44; salc; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; mov eax, edx; ret; 
0x55676f2e:  ror byte ptr [edi], 0x84; mov byte ptr [eax], 0; add byte ptr [ebx + 0x1c42484], cl; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x55674931:  ror byte ptr [edi], 0x84; mov byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ebp + 0xb0]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x555f3754:  ror byte ptr [edi], 0x85; cmc; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x555d6d6b:  ror byte ptr [edi], 0x85; nop; add dword ptr [eax], eax; add byte ptr [ebx - 0x1876d], cl; jmp dword ptr [ebp - 0x75]; 
0x555f347b:  ror byte ptr [edi], 0x85; out dx, al; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x55633778:  ror byte ptr [edi], 0x85; ret 2; 
0x555b3257:  ror byte ptr [edi], 0x89; push cs; add dword ptr [eax], eax; add byte ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x7d]; 
0x5561784c:  ror byte ptr [edi], 0x92; ret 0xd028; 
0x55626d7a:  ror byte ptr [edi], 0x94; ret 0xa5e9; 
0x55655c58:  ror byte ptr [edi], 0x95; ret 0x7c8b; 
0x55672e47:  ror byte ptr [edi], 0x95; ret 0xd089; 
0x55603d60:  ror byte ptr [edi], 0x95; ret 0xd589; 
0x55585925:  ror byte ptr [edi], 0x95; ret 0xd789; 
0x55672e78:  ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0e33c], 0xc0; ret; 
0x55637829:  ror byte ptr [edi], 0x9e; ret 0xf883; 
0x55605265:  ror byte ptr [edi], 0xb6; ror byte ptr [ebp + 0x5eff0044], 0x5f; ret; 
0x555c212e:  ror byte ptr [edi], 1; inc edx; ret 0x4589; 
0x555b4d43:  ror byte ptr [edi], 1; xchg dword ptr [ecx + eax], esp; add byte ptr [ecx], al; test dword ptr [eax - 0x16000011], esi; ret 0xfffc; 
0x555b694d:  ror byte ptr [edi], cl; dec ecx; ret 0x8589; 
0x556a4857:  ror byte ptr [edi], cl; test byte ptr [edx - 0xa000000], ah; ret 0x7501; 
0x55606154:  ror byte ptr [edi], cl; xchg eax, ebp; ret 0xd138; 
0x556a7232:  ror byte ptr [esi], 0x5f; ret; 
0x55587454:  ror dword ptr [ebx - 0xf775], cl; jmp dword ptr [ebp - 0x7d]; 
0x55643e4d:  ror dword ptr [ebx], 1; add byte ptr [ebx - 0x8f7dbbc], cl; ret 0xeff0; 
0x5564616c:  ror dword ptr [ecx + 0x245c8bda], 4; mov eax, 0x94; call dword ptr gs
0x55643e7a:  ror dword ptr [ecx - 0x3fcef7b8], 1; pop ebx; ret; 
0x55605262:  ror dword ptr [edi], -0x62; ror byte ptr [edi], 0xb6; ror byte ptr [ebp + 0x5eff0044], 0x5f; ret; 
0x556a7c79:  ror dword ptr [edi], 0x74; adc eax, dword ptr [ebx - 0x218bfe20]; lea eax, dword ptr [edi - 0x10]; pop edi; ret; 
0x5566304a:  ror eax, 8; ret; 
0x55577528:  ror eax, 9; xor eax, dword ptr gs
0x55585226:  ror edi, -0x43; pop ss; add byte ptr [ebx - 0x12f7f], cl; jmp dword ptr [ebp + 3]; 
0x556e2856:  sahf; int1; jmp dword ptr [edx]; 
0x5563782b:  sahf; ret 0xf883; 
0x55584c58:  sahf; ret; 
0x55605264:  sahf; ror byte ptr [edi], 0xb6; ror byte ptr [ebp + 0x5eff0044], 0x5f; ret; 
0x55616579:  sal bh, 1; fdiv dword ptr [ebp + 5]; mov eax, 0x80000000; mov dword ptr gs
0x556e6131:  sal bl, 1; call dword ptr [eax]; 
0x5561703d:  sal bl, 1; ret; 
0x555f2742:  sal byte ptr [eax], 0xe8; push esi; or dword ptr [eax], eax; add ecx, 0xc61bb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x5561712a:  sal byte ptr [ebp + 0x1e], 0x89; rol dword ptr [edi + 0xd5b8cb], 1; add byte ptr [eax], al; call dword ptr gs
0x55617559:  sal byte ptr [ebp + 0x23], 0x87; fistp qword ptr [eax + 0xd2]; call dword ptr gs
0x55644d6d:  sal byte ptr [ebp + 0x2b], 0x87; fistp qword ptr [eax + 0x91]; call dword ptr gs
0x55644e2d:  sal byte ptr [ebp + 0x2b], 0x87; fistp qword ptr [eax + 0x92]; call dword ptr gs
0x55615c5a:  sal byte ptr [ebp + 0x36], cl; mov edi, 0xffffffff; mov esi, edx; xchg edi, ebx; mov eax, 0x72; call dword ptr gs
0x555d2d5a:  sal byte ptr [ebp + 0x37], 0x8b; mov esp, dword ptr [esi + edi*8 - 0x12ce0001]; mov dword ptr [esp + 0x18], edx; mov dword ptr [esp], 0; call dword ptr [ecx]; 
0x555e5a51:  sal byte ptr [ebp + 0x38], 0x83; ret; 
0x555f3c60:  sal byte ptr [ebp + 0x3d], 0x66; pmovmskb eax, mm1; bsf eax, eax; lea eax, dword ptr [edx + eax + 0x30]; ret; 
0x55623a79:  sal byte ptr [ebp + 0x47], 0x89; call 0x1c30b70b; mov ebx, eax; mov eax, 0xb5; call dword ptr gs
0x55684e33:  sal byte ptr [ebp + 0xa], cl; add esp, 0x34; pop ebx; pop esi; ret; 
0x555f7966:  sal byte ptr [ebp - 0x41], 0x89; clc; pop esi; pop edi; ret; 
0x55582445:  sal byte ptr [ebp - 0x50], 0x83; ret 0x8901; 
0x55687a49:  sal byte ptr [ebp - 0xa], 0xb8; add al, 0; add byte ptr [eax], al; add esp, 0xc; ret; 
0x55606459:  sal byte ptr [edx + eax - 0x77], cl; add dh, bl; ret; 
0x555d4e43:  sal byte ptr [edx + edx - 0x77], 0x54; and al, 0x28; mov dword ptr [esp + 0x2c], ecx; call eax; 
0x555c4746:  sal byte ptr [edx + edx - 0x77], 0xf0; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x556c5370:  sal byte ptr [edx], 0xfd; call dword ptr [eax + 0x33]; 
0x556c5370:  sal byte ptr [edx], 0xfd; call dword ptr [eax + 0x33]; std; jmp eax; 
0x55687967:  sal byte ptr [esi + ecx - 0x75], 0x44; and al, 0x1c; add esp, 0x28; pop ebx; ret; 
0x556e4a40:  sal dl, 0xf2; call ecx; 
0x555f2955:  sal dword ptr [eax], 0x60; or al, 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x556c6868:  sal dword ptr [ebp + ebp*8 - 1], 0x70; ret 0; 
0x55617061:  sal dword ptr [ebp - 0x26], 0x65; mov dword ptr [0x68], ecx; nop; lea esi, dword ptr [esi]; ret; 
0x556e5029:  sal dword ptr [edx - 0xe], cl; jmp dword ptr [edx]; 
0x55617a66:  sal ebx, 1; ret; 
0x556e3458:  sal ecx, -1; sbb al, 0xd; test al, 0xf1; jmp dword ptr [edx]; 
0x556f597d:  sal edi, 1; call dword ptr [esi]; 
0x556c6b7d:  salc; add byte ptr [eax], al; add al, 0xd9; out dx, al; call eax; 
0x556c4251:  salc; cld; jmp dword ptr [ebp - 0x2a]; 
0x55692f2f:  salc; inc edx; test dword ptr [edi], 0x88ff48b6; dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x5568276e:  salc; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; mov eax, edx; ret; 
0x556c5040:  salc; pop ds; std; jmp dword ptr [esi]; 
0x556c4f48:  salc; push ds; std; jmp dword ptr [esi]; 
0x55615c63:  salc; xchg edi, ebx; mov eax, 0x72; call dword ptr gs
0x556c3e2d:  sar ah, 1; call ebx; 
0x556c3e31:  sar ah, 1; inc dword ptr [ebx]; sar esp, 1; push dword ptr [ebx]; sar esp, 1; jmp dword ptr [ebx - 0x2f]; 
0x556c3e4d:  sar ah, cl; jmp dword ptr [ebx - 0x2e]; 
0x555c774f:  sar bh, cl; jmp dword ptr [ecx]; 
0x55667973:  sar bl, 1; dec dword ptr [ecx - 0x72cbdbac]; xchg eax, ebx; call eax; 
0x55663057:  sar byte ptr [eax + 0xe], cl; mov eax, edx; and eax, 0xffffff; ret; 
0x555a307a:  sar byte ptr [eax + 1], 0xf; inc ebp; ret 0x8588; 
0x555c612a:  sar byte ptr [eax + 3], 0xf3; ret; 
0x55687b35:  sar byte ptr [eax - 0x18], cl; mov edx, dword ptr [esp + 0x10]; mov dword ptr [edx], edi; pop esi; pop edi; ret; 
0x555c352b:  sar byte ptr [esi + 0x5a], 0x8b; inc esi; push esp; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x555c565a:  sar byte ptr [esi + 0x5b], 0x8b; inc esi; push esp; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x556f2f41:  sar byte ptr [esi + esi*8], 1; jmp dword ptr [edx]; 
0x556c4a38:  sar cl, cl; cld; jmp dword ptr [edx - 6]; 
0x55635323:  sar dh, 0xff; jmp dword ptr [eax]; 
0x55647575:  sar dword ptr [eax + 0x10f], cl; call dword ptr gs
0x555f2849:  sar dword ptr [eax + 0xc03000c], -0x6f; jmp ecx; 
0x555f274a:  sar dword ptr [ebx + 0x3000c61], 0xc; xchg eax, ecx; jmp ecx; 
0x55644a67:  sar eax, 0x1f; add esp, 0xc; ret; 
0x55687e3f:  sar edx, 0x1f; add esp, 0x18; pop esi; ret; 
0x555b7253:  sar edx, 2; mov dword ptr [esp + 8], edx; mov dword ptr [ebp - 0x1120], edx; mov dword ptr [esp + 4], ecx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x555b4a58:  sar edx, 2; mov dword ptr [esp + 8], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x556c4071:  sar esp, 1; call dword ptr [esi - 0x4900032f]; sar esp, 1; call esi; 
0x556c4079:  sar esp, 1; call esi; 
0x556c402d:  sar esp, 1; inc dword ptr [edx - 0x5d00032f]; sar esp, 1; inc edx; sar esp, 1; jmp edx; 
0x556c3e41:  sar esp, 1; inc ebx; sar esp, 1; push ebx; sar esp, 1; jmp dword ptr [ebx]; 
0x556c4035:  sar esp, 1; inc edx; sar esp, 1; jmp edx; 
0x556c3e39:  sar esp, 1; jmp dword ptr [ebx - 0x2f]; 
0x556c3e49:  sar esp, 1; jmp dword ptr [ebx]; 
0x556c4039:  sar esp, 1; jmp edx; 
0x556c407d:  sar esp, 1; push dword ptr [ebx - 0x2f]; cld; call dword ptr [ebx - 0x4c00032f]; sar esp, 1; call ebx; 
0x556c3e35:  sar esp, 1; push dword ptr [ebx]; sar esp, 1; jmp dword ptr [ebx - 0x2f]; 
0x556c406d:  sar esp, 1; push dword ptr [esi - 0x2f]; cld; call dword ptr [esi - 0x4900032f]; sar esp, 1; call esi; 
0x556c3e45:  sar esp, 1; push ebx; sar esp, 1; jmp dword ptr [ebx]; 
0x556c4261:  sar esp, cl; call eax; 
0x556c4221:  sar esp, cl; call ebp; sar esp, cl; inc dword ptr [0x35fffcd4]; aam 0xfc; jmp dword ptr [ebp - 0x2c]; 
0x556c4225:  sar esp, cl; inc dword ptr [0x35fffcd4]; aam 0xfc; jmp dword ptr [ebp - 0x2c]; 
0x556c4265:  sar esp, cl; inc dword ptr [eax]; aam 0xfc; push dword ptr [eax]; aam 0xfc; jmp dword ptr [eax - 0x2c]; 
0x556c4161:  sar esp, cl; jmp esp; 
0x556c4924:  sbb ah, 0xfc; call dword ptr [eax]; 
0x556c4834:  sbb ah, bh; cld; ljmp ptr [edx + 0x3afffce7]; call 0xe6c7683e; cld; jmp dword ptr [eax - 0x19]; 
0x5562545b:  sbb al, 0; add byte ptr [eax], al; add dh, dh; ret 0xc740; 
0x556f7d38:  sbb al, 0; add byte ptr [eax], al; cmp al, 0xab; add al, byte ptr [eax]; and byte ptr [esi - 8], bl; jmp dword ptr [ebx]; 
0x556f3d3c:  sbb al, 0; add byte ptr [eax], al; inc eax; imul eax, dword ptr [edx], 0; mov word ptr [edi - 9], es; jmp dword ptr [esi]; 
0x556d5624:  sbb al, 0x15; out dx, eax; jmp dword ptr [eax]; 
0x555f503d:  sbb al, 0x21; ret 0xd789; 
0x55583f76:  sbb al, 0x24; mov esi, dword ptr [esp + 4]; add esp, 8; ret; 
0x55623c62:  sbb al, 0x2c; dec dword ptr [ebp - 0xdd4636d]; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x55605142:  sbb al, 0x39; dec edi; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x55603654:  sbb al, 0x39; ret 0xcf74; 
0x55672261:  sbb al, 0x83; clc; push dword ptr [ecx + eax*2 - 0x77]; push esi; sub al, 1; ret 0x5689; 
0x555f5b34:  sbb al, 0x83; ret 0x3901; 
0x55627642:  sbb al, 0x83; ret 0x8501; 
0x55582443:  sbb al, 0x85; sal byte ptr [ebp - 0x50], 0x83; ret 0x8901; 
0x55672257:  sbb al, 0x89; add al, 0x24; call dword ptr [esi + 0x20]; 
0x555b4a64:  sbb al, 0x89; ret 0x478b; 
0x55615e2e:  sbb al, 0x89; ret; 
0x555d2d3b:  sbb al, 0x8b; mov esp, dword ptr [esi + edi*8 + 0x5489ffff]; and al, 0x18; neg eax; mov dword ptr [esp], eax; call dword ptr [ecx]; 
0x555c2129:  sbb al, 0x8b; push ebp; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x4589; 
0x556e2975:  sbb al, 0x9e; int1; jmp dword ptr [edx]; 
0x555d7071:  sbb al, 0xc7; add al, 0x24; pop eax; add al, 0; add al, ch; ret 0xfffc; 
0x556e3e2b:  sbb al, 0xd; add ebx, dword ptr [edx - 0xe]; jmp dword ptr [edx]; 
0x556d5723:  sbb al, 0xd; and dl, dl; out dx, al; jmp dword ptr [edx]; 
0x556e4643:  sbb al, 0xd; cmp ah, byte ptr [edi - 0xe]; jmp dword ptr [edx]; 
0x556d4647:  sbb al, 0xd; cmp al, dl; out dx, al; jmp dword ptr [edx]; 
0x556d373f:  sbb al, 0xd; cmp byte ptr [ecx], dh; out dx, al; jmp dword ptr [edx]; 
0x556d5b33:  sbb al, 0xd; dec eax; fsubr st(6); jmp dword ptr [edx]; 
0x556d6423:  sbb al, 0xd; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x556e692b:  sbb al, 0xd; fldenv dword ptr [eax - 0xc]; jmp dword ptr [edx]; 
0x556d604b:  sbb al, 0xd; imul ebx, eax, -6; jmp dword ptr [edx]; 
0x556d5573:  sbb al, 0xd; imul edx, ecx, -0x12; jmp dword ptr [edx]; 
0x556f2553:  sbb al, 0xd; in al, dx; xor al, 0xf6; jmp dword ptr [edx]; 
0x556d277b:  sbb al, 0xd; in eax, 0xb6; in al, dx; jmp dword ptr [edx]; 
0x556e336b:  sbb al, 0xd; in eax, 0xbf; int1; jmp dword ptr [edx]; 
0x556d5753:  sbb al, 0xd; inc ebp; shr dh, cl; jmp dword ptr [edx]; 
0x556d632f:  sbb al, 0xd; inc edx; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x556d5663:  sbb al, 0xd; inc edx; shr dh, cl; jmp dword ptr [edx]; 
0x556d524b:  sbb al, 0xd; into; iretd; out dx, al; jmp dword ptr [edx]; 
0x556d3b4b:  sbb al, 0xd; iretd; mov bh, 0xee; jmp dword ptr [edx]; 
0x556f2053:  sbb al, 0xd; iretd; sub esi, esi; jmp dword ptr [edx]; 
0x556d7263:  sbb al, 0xd; jno 0x179266; out dx, al; jmp dword ptr [edx]; 
0x556d4023:  sbb al, 0xd; jns 0x175fe4; out dx, al; jmp dword ptr [edx]; 
0x556d5b63:  sbb al, 0xd; mov bl, cl; out dx, al; jmp dword ptr [edx]; 
0x556d3437:  sbb al, 0xd; mov dl, 0xd5; in eax, dx; jmp dword ptr [edx]; 
0x556d776f:  sbb al, 0xd; mov dl, 1; out dx, eax; jmp dword ptr [edx]; 
0x556f3a47:  sbb al, 0xd; mov dword ptr [ebp - 0xa], ecx; jmp dword ptr [edx]; 
0x556d4b7b:  sbb al, 0xd; mov ecx, ecx; out dx, al; jmp dword ptr [edx]; 
0x556d3527:  sbb al, 0xd; mov ss, ebp; in eax, dx; jmp dword ptr [edx]; 
0x556e2853:  sbb al, 0xd; or al, 0x9e; int1; jmp dword ptr [edx]; 
0x556d6723:  sbb al, 0xd; or al, 0xd7; out dx, al; jmp dword ptr [edx]; 
0x556d4e5b:  sbb al, 0xd; or cl, bl; out dx, al; jmp dword ptr [edx]; 
0x556e4e2b:  sbb al, 0xd; or dword ptr [edx - 0xe], esi; jmp dword ptr [edx]; 
0x556d7633:  sbb al, 0xd; out 1, al; out dx, eax; jmp dword ptr [edx]; 
0x556d6167:  sbb al, 0xd; out dx, al; fsqrt; jmp dword ptr [edx]; 
0x556d6e6f:  sbb al, 0xd; out dx, al; jmp dword ptr [edx]; 
0x556d4677:  sbb al, 0xd; pop ds; ret; 
0x556d5543:  sbb al, 0xd; pop ebp; shr esi, 1; jmp dword ptr [edx]; 
0x556e2a33:  sbb al, 0xd; popfd; int1; jmp dword ptr [edx]; 
0x556d716b:  sbb al, 0xd; push -1; out dx, al; jmp dword ptr [edx]; 
0x556d653f:  sbb al, 0xd; push ds; fdiv st(2), st(0); jmp dword ptr [edx]; 
0x556e2943:  sbb al, 0xd; push ss; sahf; int1; jmp dword ptr [edx]; 
0x556e5027:  sbb al, 0xd; sal dword ptr [edx - 0xe], cl; jmp dword ptr [edx]; 
0x556f2f3f:  sbb al, 0xd; sar byte ptr [esi + esi*8], 1; jmp dword ptr [edx]; 
0x556e2973:  sbb al, 0xd; sbb al, 0x9e; int1; jmp dword ptr [edx]; 
0x556d607b:  sbb al, 0xd; sbb eax, -6; jmp dword ptr [edx]; 
0x556d5c4f:  sbb al, 0xd; sbb ebx, edx; out dx, al; jmp dword ptr [edx]; 
0x556d4533:  sbb al, 0xd; test al, 0xc1; out dx, al; jmp dword ptr [edx]; 
0x556d3347:  sbb al, 0xd; test al, 0xd5; in eax, dx; jmp dword ptr [edx]; 
0x556e345b:  sbb al, 0xd; test al, 0xf1; jmp dword ptr [edx]; 
0x556d5077:  sbb al, 0xd; wait; iretd; out dx, al; jmp dword ptr [edx]; 
0x556d517f:  sbb al, 0xd; xchg eax, ebp; iretd; out dx, al; jmp dword ptr [edx]; 
0x556d6137:  sbb al, 0xd; xchg eax, edi; fsubp st(6); jmp dword ptr [edx]; 
0x556d514f:  sbb al, 0xd; xchg eax, edi; iretd; out dx, al; jmp dword ptr [edx]; 
0x556d5a73:  sbb al, 0xd; xlatb; xlatb; out dx, al; jmp dword ptr [edx]; 
0x556d635f:  sbb al, 0xd; xor ah, bl; cli; jmp dword ptr [edx]; 
0x556f344b:  sbb al, 0xd; xor byte ptr [ecx - 0xa], al; jmp dword ptr [edx]; 
0x555c6b6e:  sbb al, 0xe8; call dword ptr [ecx]; 
0x55693763:  sbb al, 0xe8; or al, byte ptr [esi - 1]; inc dword ptr [ecx + 0x31437c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x55672e7e:  sbb al, 0xf; mov dh, 0xc0; ret; 
0x55605145:  sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x5569615c:  sbb al, 0xff; inc dword ptr [ecx + 0x2edc1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x5569616c:  sbb al, 0xff; inc dword ptr [ecx + 0x2eeb1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x55615e32:  sbb al, 1; add byte ptr [eax], al; call dword ptr gs
0x555e5470:  sbb al, 3; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x55617453:  sbb al, 9; pop es; add byte ptr [ecx + 0xe9b9dc3], al; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xd3]; call dword ptr gs
0x55683265:  sbb al, byte ptr [eax + 0x7400287a]; adc al, 0x83; ret 0x8328; 
0x555f695f:  sbb al, byte ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x555e5172:  sbb al, byte ptr [esi]; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x555d2d68:  sbb bh, al; add al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [ecx]; 
0x55696476:  sbb bh, bh; inc dword ptr [ecx + 0x2eaa7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x5569636c:  sbb bh, bh; inc dword ptr [ecx + 0x2ebb1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x556c5b51:  sbb bl, ch; call dword ptr [eax]; 
0x55646c51:  sbb byte ptr [eax + 1], bh; pop ebx; ret; 
0x555f7d74:  sbb byte ptr [eax + eax], dh; add esp, 0x18; pop ebx; ret; 
0x5557752e:  sbb byte ptr [eax], al; add byte ptr [eax], al; call eax; 
0x55577659:  sbb byte ptr [eax], al; lea eax, dword ptr [ecx - 0x43dee]; ret; 
0x55577639:  sbb byte ptr [eax], al; lea eax, dword ptr [ecx - 0x46116]; ret; 
0x55577b59:  sbb byte ptr [eax], al; mov eax, dword ptr [ecx - 0xf8]; add eax, dword ptr gs
0x55607361:  sbb byte ptr [eax], bh; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x555d2d75:  sbb byte ptr [ebp + 0x29a374c0], al; ret 0x9f74; 
0x556c5758:  sbb byte ptr [ebp - 3], bl; ljmp ptr [eax + 0x5d]; std; jmp dword ptr [edx + 0x5c]; 
0x55592f35:  sbb byte ptr [ebx + 0x1402444], cl; ret 0x448b; 
0x555d726c:  sbb byte ptr [ebx - 0x17], bl; in eax, dx; ret 0xffff; 
0x55682772:  sbb byte ptr [ebx - 0x2f76e33c], al; ret; 
0x55645e68:  sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x8e; call dword ptr gs
0x5558243f:  sbb byte ptr [ebx - 0x7ae3dbb4], cl; sal byte ptr [ebp - 0x50], 0x83; ret 0x8901; 
0x55592673:  sbb byte ptr [ebx - 0x7cbfdbac], cl; ret 0xf01; 
0x555b4a69:  sbb byte ptr [ebx], ch; inc edi; adc al, 0xc1; clc; add bh, byte ptr [ecx]; ret 0x1974; 
0x5561795f:  sbb byte ptr [ecx + 0x2478f9], al; add byte ptr [ebp - 0x46], dh; mov eax, 0xfffa; pop ebx; ret; 
0x5566313e:  sbb byte ptr [ecx - 0x76e7dbac], cl; ret 0xeac1; 
0x55665767:  sbb byte ptr [ecx], al; add byte ptr [eax], al; mov dword ptr gs
0x55605127:  sbb byte ptr [ecx], bh; dec edi; sbb byte ptr [edi], cl; test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x555f6567:  sbb byte ptr [ecx], ch; ret 0xd089; 
0x55675c7b:  sbb byte ptr [ecx], cl; ret 0xb60f; 
0x5560512a:  sbb byte ptr [edi], cl; test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x556c4f54:  sbb byte ptr [esi], 0xfd; call eax; 
0x556c4f54:  sbb byte ptr [esi], 0xfd; call eax; push ds; std; jmp dword ptr [eax]; 
0x556c4760:  sbb cl, 0xfc; push dword ptr [eax - 0x1f000327]; frndint; call dword ptr [eax]; 
0x55655225:  sbb cl, byte ptr [ebx - 0x12f75]; lcall ptr [ebx + 0x65]; mov ecx, dword ptr [ecx]; test byte ptr [ecx + eax*2 + 1], 0x40; cmove eax, edx; ret; 
0x55684e2d:  sbb cl, byte ptr [ebx - 0x7ad7dbac]; sal byte ptr [ebp + 0xa], cl; add esp, 0x34; pop ebx; pop esi; ret; 
0x555c2c57:  sbb dh, dh; ret 0x7420; 
0x55596a45:  sbb dh, dh; ret 0x7501; 
0x556a7977:  sbb dh, dh; ret 0xf0f; 
0x556e2b2d:  sbb dh, dl; jmp ebx; 
0x555f3d2e:  sbb dword ptr [eax - 0x72fffc86], eax; inc edx; add esi, dword ptr [eax + edx - 0x7d]; ret 0x3904; 
0x55607360:  sbb dword ptr [eax], 0x38; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x555d2027:  sbb dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x555d2c50:  sbb dword ptr [eax], eax; add byte ptr [ebp + 0x44c8b], cl; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x77]; 
0x555f5d4d:  sbb dword ptr [ebp + esi - 0x10], -1; pop ebx; ret; 
0x556a6523:  sbb dword ptr [edx], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x55623c5a:  sbb dword ptr [esi - 0x7fffffca], -0x73; sbb dword ptr [esp + ebp], -0xe; dec dword ptr [ebp - 0xdd4636d]; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x55623c61:  sbb dword ptr [esp + ebp], -0xe; dec dword ptr [ebp - 0xdd4636d]; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x556d607d:  sbb eax, -6; jmp dword ptr [edx]; 
0x555d4f48:  sbb eax, 0x5c247c80; add byte ptr [esp + ecx*4 - 0x75], dh; and dword ptr [esi + edi*8 + 0x4c7ffff], 0x24; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [eax]; 
0x55686b52:  sbb eax, 0x81000012; ret; 
0x55684f52:  sbb eax, 0x8100002e; ret; 
0x55684552:  sbb eax, 0x81000038; ret; 
0x55646a52:  sbb eax, 0x81000413; ret; 
0x55623b52:  sbb eax, 0x81000642; ret; 
0x55613c52:  sbb eax, 0x81000741; ret; 
0x555f7b52:  sbb eax, 0x81000902; ret; 
0x555f6452:  sbb eax, 0x81000919; ret; 
0x55593b52:  sbb eax, 0x81000f42; ret; 
0x55593a52:  sbb eax, 0x81000f43; ret; 
0x55584c52:  sbb eax, 0x81001031; ret; 
0x55603445:  sbb eax, 0x83b4558b; ret 0x3901; 
0x5564602e:  sbb eax, 0xc1810004; ret; 
0x55696049:  sbb eax, 0xc381ffff; adc al, 0xee; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55607a27:  sbb eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x9389; 
0x55607827:  sbb eax, dword ptr [eax]; add byte ptr [ecx], cl; ret 0x840f; 
0x55607f77:  sbb eax, dword ptr [eax]; add byte ptr [ecx], cl; ret 0x850f; 
0x556a5d31:  sbb eax, dword ptr [ecx]; add byte ptr [eax], al; lea eax, dword ptr [edi + 3]; pop edi; ret; 
0x55613152:  sbb eax, dword ptr [edi]; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp + 3]; 
0x5561623b:  sbb eax, dword ptr [edi]; add byte ptr [ecx + 0xeadb6c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x555d2344:  sbb ebp, dword ptr [ecx]; ret 0x528b; 
0x556d5c51:  sbb ebx, edx; out dx, al; jmp dword ptr [edx]; 
0x5564304c:  sbb ecx, dword ptr [ebx - 0xf77d]; jmp dword ptr [ebp - 0x39]; 
0x55696265:  sbb edi, edi; inc dword ptr [ecx + 0x2ecb8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x556f2141:  sbb edi, esi; call dword ptr [eax]; 
0x556e6b2d:  sbb esi, esp; jmp dword ptr [ebx]; 
0x556e6a6d:  sbb esp, esi; call eax; 
0x556a6f6e:  scasb al, byte ptr es
0x55697f37:  scasb al, byte ptr es
0x55696f67:  scasb al, byte ptr es
0x55684c48:  scasb al, byte ptr es
0x556c6525:  scasd eax, dword ptr es
0x556c5a21:  scasd eax, dword ptr es
0x556c6529:  scasd eax, dword ptr es
0x556c6549:  scasd eax, dword ptr es
0x556c6559:  scasd eax, dword ptr es
0x556c6521:  scasd eax, dword ptr es
0x55605b44:  scasd eax, dword ptr es
0x55617b6a:  sete al; movzx eax, al; lea eax, dword ptr [eax + eax - 1]; ret; 
0x5558504a:  sete al; ret; 
0x5564643e:  sete al; sub eax, 1; add esp, 0x24; pop ebx; pop esi; ret; 
0x555b2e41:  sete dl; mov eax, edx; add esp, 0x7c; ret; 
0x5560552e:  setg al; movzx eax, al; lea eax, dword ptr [eax + eax - 1]; pop esi; pop edi; ret; 
0x55605263:  setle al; movzx eax, al; lea eax, dword ptr [eax + eax - 1]; pop esi; pop edi; ret; 
0x55672e79:  setne al; add esp, 0x1c; movzx eax, al; ret; 
0x5563627e:  setne al; mov edi, dword ptr [esp + 0x34]; mov ebp, dword ptr [esp + 0x38]; add esp, 0x3c; ret; 
0x55672e48:  setne dl; mov eax, edx; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x55697f36:  sfence; call 0x129d73; add ebx, 0x2d1a2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x55696f66:  sfence; call 0x129d73; add ebx, 0x2dfb2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x556c4958:  shl bl, 1; cld; jmp dword ptr [eax - 0x1c]; 
0x5566305b:  shl byte ptr [0xffffff], 1; ret; 
0x55612079:  shl byte ptr [edx], 0x83; ret 0x8304; 
0x555f3746:  shl byte ptr [esi + 0xf], 1; xlatb; ret 0xc085; 
0x5569225a:  shl cl, cl; cld; jmp dword ptr [esi - 0x70]; 
0x556e4430:  shl dh, 0xf2; jmp dword ptr [edx]; 
0x556c4968:  shr ah, cl; cld; jmp dword ptr [edx - 0x13]; 
0x55687979:  shr bl, 0xf2; lea esi, dword ptr [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x55647639:  shr bl, cl; ret 0x748d; 
0x556c7944:  shr byte ptr [0xb3e40001], 0xf0; jmp eax; 
0x55603421:  shr byte ptr [ecx], 1; ret 0x48b; 
0x556c6b59:  shr dh, cl; jmp esp; 
0x55606666:  shr dword ptr [ecx - 0x2e], 1; adc byte ptr [esi], cl; add byte ptr [eax], al; pop esi; add eax, edx; ret; 
0x55612629:  shr dword ptr [edx - 0x77cfffe], cl; push dword ptr [ebx + ebp - 0x77]; ret 0xe283; 
0x55696161:  shr ebp, 2; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x55646a3e:  sldt word ptr [eax]; add esp, 0x18; pop ebx; ret; 
0x556c4a35:  stc; cld; call edx; 
0x556c4a35:  stc; cld; call edx; stc; cld; jmp dword ptr [edx - 6]; 
0x556c4a79:  stc; cld; dec dword ptr [esi - 6]; cld; call esp; 
0x556c4a39:  stc; cld; jmp dword ptr [edx - 6]; 
0x556c4a25:  stc; cld; jmp dword ptr [edx]; 
0x55606544:  stc; ret 0x10; 
0x556a2346:  std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x556a524f:  std; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x556c535e:  std; call dword ptr [eax + 0x2e]; 
0x556c535e:  std; call dword ptr [eax + 0x2e]; std; call dword ptr [eax]; 
0x556c5372:  std; call dword ptr [eax + 0x33]; 
0x556c5372:  std; call dword ptr [eax + 0x33]; std; jmp eax; 
0x556c535a:  std; call dword ptr [eax + 0x3b]; 
0x556c535a:  std; call dword ptr [eax + 0x3b]; std; call dword ptr [eax + 0x2e]; std; call dword ptr [eax]; 
0x556c5452:  std; call dword ptr [eax + 0x3c]; 
0x556c4e52:  std; call dword ptr [eax + 7]; 
0x556c4e52:  std; call dword ptr [eax + 7]; std; jmp eax; 
0x556c4d4a:  std; call dword ptr [eax - 0x7f0002f4]; or bh, ch; jmp dword ptr [eax]; 
0x556c5472:  std; call dword ptr [eax]; dec edx; std; jmp edx; 
0x555a3934:  std; call dword ptr [edi - 0x77]; 
0x556c5626:  std; call dword ptr [edx + 0x4f]; 
0x556c5626:  std; call dword ptr [edx + 0x4f]; std; jmp edx; 
0x556c5862:  std; call dword ptr [edx + 0x5e]; 
0x556c515e:  std; call dword ptr [edx]; 
0x556c5326:  std; call dword ptr [edx]; cmp edi, ebp; jmp dword ptr [edx + 0x3b]; 
0x556c5766:  std; call dword ptr [edx]; pop ebp; std; jmp dword ptr [edx + 0x5d]; 
0x556c5262:  std; call dword ptr [edx]; std; push dword ptr [edx + 0x2e]; std; call edx; 
0x556c534a:  std; call dword ptr [esi + 0x3b]; 
0x556c5442:  std; call dword ptr [esi + 0x3c]; 
0x556c577e:  std; call dword ptr [esi + 0x5c]; 
0x556c4f3e:  std; call dword ptr [esi]; 
0x556c4e32:  std; call eax; add bh, ch; jmp dword ptr [eax + 3]; 
0x556c504e:  std; call eax; pop ds; std; jmp dword ptr [eax]; 
0x556c4f56:  std; call eax; push ds; std; jmp dword ptr [eax]; 
0x556c502a:  std; call edx; 
0x556c4f46:  std; call esi; 
0x556c503e:  std; call esi; pop ds; std; jmp dword ptr [esi]; 
0x556c4f46:  std; call esi; push ds; std; jmp dword ptr [esi]; 
0x556c4c51:  std; cld; call dword ptr [ebp + edi*8 - 0x1cb0004]; cld; call esp; 
0x556c4c41:  std; cld; jmp esp; 
0x556c4c55:  std; cld; push dword ptr [esi + edi*8]; cld; call esp; 
0x556c4e62:  std; dec dword ptr [eax]; adc ch, bh; jmp edx; 
0x556c517a:  std; dec dword ptr [ebp + 0x2c06fffd]; std; jmp dword ptr [esi + 0x2c]; 
0x556c5776:  std; dec dword ptr [ebx*2 + 0x5d5cfffd]; std; call dword ptr [esi + 0x5c]; 
0x556c5226:  std; dec dword ptr [edx - 0x150002d2]; std; call esp; 
0x556c503a:  std; dec esp; and ch, bh; call esi; 
0x556c527a:  std; dec esp; std; push dword ptr [esi + 0x6fffd2d]; std; jmp dword ptr [esi + 0x2e]; 
0x556d3121:  std; in eax, dx; jmp dword ptr [eax + 1]; 
0x556c534e:  std; inc dword ptr [eax + 0x3a]; std; push dword ptr [eax + 0xfffd3a]; cmp edi, ebp; call dword ptr [eax + 0x3b]; 
0x556c4e2e:  std; inc dword ptr [eax + 2]; std; call eax; 
0x556c4e2e:  std; inc dword ptr [eax + 2]; std; call eax; add bh, ch; jmp dword ptr [eax + 3]; 
0x556c4f52:  std; inc dword ptr [eax - 0x2f0002e2]; push ds; std; jmp dword ptr [eax]; 
0x556c544e:  std; inc dword ptr [eax]; cmp al, 0xfd; call dword ptr [eax + 0x3c]; 
0x556c5356:  std; inc dword ptr [eax]; cmp edi, ebp; call dword ptr [eax + 0x3b]; 
0x556c4d46:  std; inc dword ptr [eax]; or al, 0xfd; call dword ptr [eax - 0x7f0002f4]; or bh, ch; jmp dword ptr [eax]; 
0x556c537e:  std; inc dword ptr [eax]; xor eax, 0x3590fffd; std; jmp dword ptr [eax]; 
0x556c5552:  std; inc dword ptr [ebx + ecx*2 + 0x4c34fffd]; std; jmp esp; 
0x556c585e:  std; inc dword ptr [edx]; pop esi; std; call dword ptr [edx + 0x5e]; 
0x556c533e:  std; inc dword ptr [esi + 0x3a]; std; push dword ptr [esi + 0x6fffd3a]; cmp edi, ebp; call dword ptr [esi + 0x3b]; 
0x556c4e5e:  std; inc dword ptr [esi + 0x8fffd0f]; adc ch, bh; jmp edx; 
0x556c4f42:  std; inc dword ptr [esi - 0x290002e2]; push ds; std; jmp dword ptr [esi]; 
0x556c543e:  std; inc dword ptr [esi]; cmp al, 0xfd; call dword ptr [esi + 0x3c]; 
0x556c5346:  std; inc dword ptr [esi]; cmp edi, ebp; call dword ptr [esi + 0x3b]; 
0x556c517e:  std; inc dword ptr [esi]; sub al, 0xfd; jmp dword ptr [esi + 0x2c]; 
0x556c4e4e:  std; inc eax; push es; std; call dword ptr [eax + 7]; 
0x556c536e:  std; inc eax; xor bh, ch; call dword ptr [eax + 0x33]; 
0x556c536e:  std; inc eax; xor bh, ch; call dword ptr [eax + 0x33]; std; jmp eax; 
0x556c5322:  std; inc edx; cmp bh, ch; call dword ptr [edx]; 
0x556c5322:  std; inc edx; cmp bh, ch; call dword ptr [edx]; cmp edi, ebp; jmp dword ptr [edx + 0x3b]; 
0x556c546e:  std; inc edx; dec ecx; std; call dword ptr [eax]; 
0x556c5762:  std; inc edx; pop esp; std; call dword ptr [edx]; 
0x556c5166:  std; inc edx; sub al, 0xfd; call dword ptr [edx]; 
0x556c504a:  std; inc esi; and ch, bh; call eax; 
0x556c5532:  std; jmp dword ptr [eax + 0x4b]; 
0x556c4e36:  std; jmp dword ptr [eax + 3]; 
0x556c4d52:  std; jmp dword ptr [eax]; 
0x556c532a:  std; jmp dword ptr [edx + 0x3b]; 
0x556c5422:  std; jmp dword ptr [edx + 0x3c]; 
0x556c575e:  std; jmp dword ptr [edx + 0x5c]; 
0x556c576a:  std; jmp dword ptr [edx + 0x5d]; 
0x556c4e7a:  std; jmp dword ptr [edx]; 
0x556c4f4a:  std; jmp dword ptr [esi]; 
0x556c5622:  std; lcall ptr [eax + 0x52fffd4e]; dec edi; std; jmp edx; 
0x556c577a:  std; lcall ptr [ebp + ebx*2 - 3]; call dword ptr [esi + 0x5c]; 
0x556c575a:  std; ljmp ptr [eax + 0x5d]; std; jmp dword ptr [edx + 0x5c]; 
0x556c4f3a:  std; ljmp ptr [edi + ebx]; std; call dword ptr [esi]; 
0x556c5222:  std; ljmp ptr [edx]; std; dec dword ptr [edx - 0x150002d2]; std; call esp; 
0x556c5436:  std; ljmp ptr [esp + edi + 0x3cfcfffd]; std; inc dword ptr [esi]; cmp al, 0xfd; call dword ptr [esi + 0x3c]; 
0x55667173:  std; or dword ptr [edi], ecx; inc esi; int 0x80; 
0x556a5942:  std; pop edi; ret; 
0x555f3a77:  std; pop esi; pop edi; pop ebp; ret; 
0x556c4e2a:  std; push dword ptr [eax + 0x40fffd01]; add bh, ch; call eax; 
0x556c5352:  std; push dword ptr [eax + 0xfffd3a]; cmp edi, ebp; call dword ptr [eax + 0x3b]; 
0x556c4e5a:  std; push dword ptr [eax + 8]; std; inc dword ptr [esi + 0x8fffd0f]; adc ch, bh; jmp edx; 
0x556c536a:  std; push dword ptr [eax]; xor bh, ch; inc eax; xor bh, ch; call dword ptr [eax + 0x33]; 
0x556c554e:  std; push dword ptr [ebp + ecx*2 + 0x4b84fffd]; std; push dword ptr [esp + ecx*2]; std; jmp esp; 
0x556c553e:  std; push dword ptr [ebx + ecx*2]; std; jmp esp; 
0x556c5162:  std; push dword ptr [edx + 0x2c]; std; inc edx; sub al, 0xfd; call dword ptr [edx]; 
0x556c5266:  std; push dword ptr [edx + 0x2e]; std; call edx; 
0x556c5046:  std; push dword ptr [esi + 0x20]; std; inc esi; and ch, bh; call eax; 
0x556c527e:  std; push dword ptr [esi + 0x6fffd2d]; std; jmp dword ptr [esi + 0x2e]; 
0x556c5342:  std; push dword ptr [esi + 0x6fffd3a]; cmp edi, ebp; call dword ptr [esi + 0x3b]; 
0x556c572e:  std; push dword ptr [esp + ebx*2 - 3]; call esp; 
0x556c5556:  std; push dword ptr [esp + ecx*2]; std; jmp esp; 
0x556c544a:  std; push esi; cmp al, 0xfd; inc dword ptr [eax]; cmp al, 0xfd; call dword ptr [eax + 0x3c]; 
0x556c4b79:  sti; cld; call dword ptr [eax]; 
0x556c4b65:  sti; cld; push dword ptr [eax - 0x7f000305]; cld; cld; jmp eax; 
0x55667974:  sti; dec dword ptr [ecx - 0x72cbdbac]; xchg eax, ebx; call eax; 
0x55605924:  sti; dec dword ptr [edi]; inc ebp; ret 0xa5eb; 
0x55694328:  sti; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x55694367:  sti; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x55623b43:  sti; neg eax; pop edi; ret; 
0x556a5932:  sti; pop edi; ret; 
0x556c6e68:  stosb byte ptr es
0x55643e4c:  stosb byte ptr es
0x556f7d3d:  stosd dword ptr es
0x556f7d75:  stosd dword ptr es
0x556c643d:  stosd dword ptr es
0x556e7d29:  stosd dword ptr es
0x55605b23:  str word ptr [ebx - 0x76dfdba4]; ret 0x7c8b; 
0x55567f7a:  str word ptr [ecx]; add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; ret 0x11; 
0x556c4978:  sub ah, 0xfc; call dword ptr [edx]; 
0x556e5a3c:  sub al, 0; add byte ptr [eax], al; inc eax; mov byte ptr [ecx], al; add byte ptr [edx - 0xd], bl; jmp dword ptr [eax + 3]; 
0x556d3d58:  sub al, 0; add byte ptr [eax], al; lodsb al, byte ptr [esi]; add byte ptr [eax], al; ret; 
0x556d5460:  sub al, 0; add byte ptr [eax], al; mov ah, 0x7d; add byte ptr [eax], al; ret 0xef13; 
0x556f324c:  sub al, 0; add byte ptr [eax], al; mov al, byte ptr [0x3f00025b]; xor al, 0xf7; call dword ptr [eax]; 
0x556e6538:  sub al, 0; add byte ptr [eax], al; mov word ptr [esi + 0x1a850001], cs; hlt; call dword ptr [eax]; 
0x556d723c:  sub al, 0; add byte ptr [eax], al; nop; wait; add byte ptr [eax], al; ret; 
0x556c4f3c:  sub al, 0x1f; std; call dword ptr [esi]; 
0x55676f3d:  sub al, 0x24; call dword ptr [eax + 0x10]; 
0x555c5e3f:  sub al, 0x24; call dword ptr [eax + 0x40]; 
0x555d7b58:  sub al, 0x24; mov dword ptr [esp + 8], edx; mov edx, dword ptr [esp + 0x40]; mov dword ptr [esp + 4], edx; call eax; 
0x556f2c2c:  sub al, 0x5a; add al, byte ptr [eax]; inc eax; sub edi, esi; call dword ptr [ecx]; 
0x556e442c:  sub al, 0x72; add dword ptr [eax], eax; shl dh, 0xf2; jmp dword ptr [edx]; 
0x55674b21:  sub al, 0x83; ror byte ptr [eax], 0x89; add al, 0x24; call dword ptr [esp + 0x24]; add esp, 0x1c; ret; 
0x5564265d:  sub al, 0x89; call 0x5d6da4bf; ret; 
0x55643a63:  sub al, 0x89; push esi; xor byte ptr [ebx + 0x4e894050], cl; xor al, 0xf6; ret 0x7420; 
0x555c3b74:  sub al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x556e612c:  sub al, 0x8f; add dword ptr [eax], eax; adc al, 0xf3; call dword ptr [eax]; 
0x556e6d2c:  sub al, 0x9b; add dword ptr [eax], eax; push eax; and esp, esi; jmp dword ptr [edi]; 
0x55687d6d:  sub al, 0xe9; sub eax, 0x8bfffffe; sbb al, 0x24; ret; 
0x556c7c69:  sub al, 0xf1; jmp esp; 
0x55623c63:  sub al, 0xf2; dec dword ptr [ebp - 0xdd4636d]; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x556e326d:  sub al, 0xf2; jmp dword ptr [ebp + 5]; 
0x556f2162:  sub al, 0xf6; jmp dword ptr [edx]; 
0x556f6a45:  sub al, 0xf8; call dword ptr [eax]; 
0x55646a3d:  sub al, 0xf; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x55605b42:  sub al, 0xf; scasd eax, dword ptr es
0x556c484c:  sub al, 0xfc; push dword ptr [eax - 0x1a]; cld; call dword ptr [eax]; 
0x556c5169:  sub al, 0xfd; call dword ptr [edx]; 
0x556c5135:  sub al, 0xfd; call esp; 
0x556c5179:  sub al, 0xfd; dec dword ptr [ebp + 0x2c06fffd]; std; jmp dword ptr [esi + 0x2c]; 
0x556c5165:  sub al, 0xfd; inc edx; sub al, 0xfd; call dword ptr [edx]; 
0x556c5161:  sub al, 0xfd; push dword ptr [edx + 0x2c]; std; inc edx; sub al, 0xfd; call dword ptr [edx]; 
0x55672269:  sub al, 1; ret 0x5689; 
0x556d5f29:  sub bh, ch; call edx; 
0x556f2b59:  sub bh, dh; call esi; 
0x556f2d7d:  sub bh, dh; jmp dword ptr [edi]; 
0x556e4a38:  sub byte ptr [eax], al; add byte ptr [eax], al; cmp al, 0x78; add dword ptr [eax], eax; sal dl, 0xf2; call ecx; 
0x556e5464:  sub byte ptr [eax], al; add byte ptr [eax], al; push 0x84000182; or ebx, esi; call edi; 
0x55617d6d:  sub byte ptr [ebp - 0xf], 0xff; jmp eax; 
0x55643a60:  sub byte ptr [ebx + 0x56892c4e], cl; xor byte ptr [ebx + 0x4e894050], cl; xor al, 0xf6; ret 0x7420; 
0x556e7d28:  sub byte ptr [ebx - 0x205bffff], ch; hlt; call dword ptr [edx]; 
0x556e6b28:  sub byte ptr [ecx + 0x1b040001], bl; hlt; jmp dword ptr [ebx]; 
0x5567425c:  sub byte ptr [ecx + 0x5489243c], cl; and al, 4; call dword ptr [eax + 0xc]; 
0x555c746e:  sub byte ptr [ecx + 0x748b0c56], cl; and al, 0x24; add esp, 0x2c; ret; 
0x5564487f:  sub byte ptr [ecx + 0x9e9c1d1], cl; cmp edx, -1; cmovne eax, ecx; add esp, 0x2c; ret; 
0x55684f31:  sub byte ptr [ecx - 0x763ca430], cl; adc al, 0x24; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 4]; 
0x5566794d:  sub byte ptr [ecx - 0x76cfdbbc], cl; ret 0x448d; 
0x556a5d54:  sub byte ptr [ecx], al; add byte ptr [eax], al; lea eax, dword ptr [edi + 7]; pop edi; ret; 
0x55605e7b:  sub byte ptr [ecx], al; add byte ptr [eax], al; or byte ptr [edi], 0x4e; ret 0xc483; 
0x556d6928:  sub byte ptr [edi + 0x2a440000], dl; out dx, eax; jmp dword ptr [ebx]; 
0x556d692d:  sub ch, bh; jmp dword ptr [ebx]; 
0x556c5224:  sub ch, byte ptr [esi]; std; dec dword ptr [edx - 0x150002d2]; std; call esp; 
0x55605f30:  sub cl, al; cli; add eax, 0x291ff8c1; ret 0x1b8; 
0x556a7c77:  sub dh, dh; ror dword ptr [edi], 0x74; adc eax, dword ptr [ebx - 0x218bfe20]; lea eax, dword ptr [edi - 0x10]; pop edi; ret; 
0x556c7e20:  sub dword ptr [ecx], esi; int1; jmp esp; 
0x555f323b:  sub eax, 0x10; pop edi; ret; 
0x55644030:  sub eax, 0x2346b60f; mov byte ptr [esp + 0x2f], al; xchg edi, ebx; mov eax, 0x36; call dword ptr gs
0x556c517d:  sub eax, 0x2c06fffd; std; jmp dword ptr [esi + 0x2c]; 
0x556c5261:  sub eax, 0x2e12fffd; std; push dword ptr [edx + 0x2e]; std; call edx; 
0x556c5221:  sub eax, 0x2e2afffd; std; dec dword ptr [edx - 0x150002d2]; std; call esp; 
0x55684c42:  sub eax, 0x81000031; ret; 
0x55645c42:  sub eax, 0x81000421; ret; 
0x55643142:  sub eax, 0x8100044c; ret; 
0x55623c42:  sub eax, 0x81000641; ret; 
0x55616a42:  sub eax, 0x81000713; ret; 
0x55616742:  sub eax, 0x81000716; ret; 
0x555f7d42:  sub eax, 0x81000900; ret; 
0x555f7c42:  sub eax, 0x81000901; ret; 
0x555f6942:  sub eax, 0x81000914; ret; 
0x555f5e42:  sub eax, 0x8100091f; ret; 
0x555c6b42:  sub eax, 0x81000c12; ret; 
0x55592042:  sub eax, 0x81000f5d; ret; 
0x5559677b:  sub eax, 0x83d9fffc; xor al, 0x2d; cld; jmp dword ptr [ebp - 0x39]; 
0x55674d4f:  sub eax, 0x89ffffdd; clc; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x55687d6f:  sub eax, 0x8bfffffe; sbb al, 0x24; ret; 
0x55646441:  sub eax, 1; add esp, 0x24; pop ebx; pop esi; ret; 
0x55654f5a:  sub eax, 1; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; add esp, 0x1c; ret; 
0x555d5f39:  sub eax, dword ptr [eax]; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x77]; 
0x55617d6a:  sub eax, dword ptr [ebx + esi*4 - 0xe9280]; jmp eax; 
0x55647758:  sub eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs
0x55644d6f:  sub eax, dword ptr [edi + 0x91b8df]; add byte ptr [eax], al; call dword ptr gs
0x55644e2f:  sub eax, dword ptr [edi + 0x92b8df]; add byte ptr [eax], al; call dword ptr gs
0x556a3279:  sub eax, ecx; pop ebp; pop ebx; ret; 
0x55696044:  sub eax, ecx; pop esi; call 0x129d73; add ebx, 0x2ee14; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x555f3d4d:  sub eax, edi; pop esi; pop edi; ret; 
0x5567295f:  sub eax, edx; mov dword ptr [esp + 8], eax; mov dword ptr [esp + 4], ebp; mov eax, dword ptr [esi]; mov dword ptr [esp], eax; call dword ptr [esi + 0x20]; 
0x555c5c5d:  sub eax, esi; pop esi; pop edi; pop ebp; ret; 
0x5560372e:  sub ebp, eax; mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x55613151:  sub ebx, dword ptr [ebx]; pop es; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp + 3]; 
0x555f2968:  sub ebx, ecx; add esi, ecx; call 0x129d77; add ecx, 0xc6013; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x5563236d:  sub ecx, dword ptr [ebx + edx*4 - 0xcec7c]; jmp ecx; 
0x556f2c31:  sub edi, esi; call dword ptr [ecx]; 
0x55655321:  sub edi, esp; int1; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x55585262:  sub edx, dword ptr [eax]; add byte ptr [ecx + 0x17bd8fc1], al; add byte ptr [ebx - 0x8f7f], cl; jmp dword ptr [ebp + 3]; 
0x55585242:  sub edx, dword ptr [eax]; add byte ptr [ecx + 0x17bdafc1], al; add byte ptr [ebx - 0xbf7f], cl; jmp dword ptr [ebp + 3]; 
0x55585222:  sub edx, dword ptr [eax]; add byte ptr [ecx + 0x17bdcfc1], al; add byte ptr [ebx - 0x12f7f], cl; jmp dword ptr [ebp + 3]; 
0x5560365c:  sub edx, eax; pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x555f2828:  sub edx, ecx; call 0x129d77; add ecx, 0xc60d5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x555b4a56:  sub edx, ecx; sar edx, 2; mov dword ptr [esp + 8], edx; mov dword ptr [esp], esi; call dword ptr [eax + 0x1c]; 
0x55677a42:  sub esi, dword ptr [ebx + eax*4 - 0x895a8]; jmp esi; 
0x555d2f6e:  sub esi, eax; mov dword ptr [esp], esi; call dword ptr [edx]; 
0x556f2c5d:  sub esi, edi; call dword ptr [eax]; 
0x55623c69:  sub esi, edx; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x556f2026:  sub esi, esi; jmp dword ptr [edx]; 
0x55685552:  sub esp, 8; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; mov ebp, dword ptr [esp + 0x28]; add esp, 0x2c; ret 4; 
0x55655a49:  test ah, al; add byte ptr [eax], al; add byte ptr [ebx + 0x518b1445], cl; adc al, 0x39; ret 0xa7d; 
0x556d7a31:  test al, 0; add ah, cl; pop eax; out dx, eax; jmp dword ptr [ebx]; 
0x556a6a24:  test al, 0; add byte ptr [eax], al; lea eax, dword ptr [edx + 7]; ret; 
0x55593b44:  test al, 0x63; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x556c6464:  test al, 0xac; add byte ptr [eax], al; add al, 0x96; in al, dx; call eax; 
0x556d4535:  test al, 0xc1; out dx, al; jmp dword ptr [edx]; 
0x556d3349:  test al, 0xd5; in eax, dx; jmp dword ptr [edx]; 
0x556d2366:  test al, 0xec; jmp dword ptr [edx]; 
0x556e345d:  test al, 0xf1; jmp dword ptr [edx]; 
0x555c4a7a:  test al, 0xfc; dec dword ptr [ebp + 0x468b0076]; or byte ptr [ebx], ch; inc esi; add al, 0x89; ret 0xfac1; 
0x55613148:  test al, bh; add byte ptr [eax], al; add byte ptr [ecx + 0x2be82404], cl; sbb eax, dword ptr [edi]; add byte ptr [ebx - 0xf77d], cl; jmp dword ptr [ebp + 3]; 
0x556c6c38:  test bh, bl; out dx, al; jmp dword ptr [eax]; 
0x5559633f:  test byte ptr [eax + eax*4], ah; add byte ptr [eax], al; add byte ptr [ecx], ch; mov dword ptr [ebp - 0x5a71f001], 0x89fffffe; ret 0x18e9; 
0x5567365b:  test byte ptr [eax + eax], al; add byte ptr [ebx + 0x48824ac], cl; add byte ptr [eax], al; add esp, 0x48c; ret; 
0x555c7522:  test byte ptr [eax + ecx*8], ah; add byte ptr [eax], al; add byte ptr [ebx + 0x468b0c4e], cl; or byte ptr [ecx + 0x29cd29d5], cl; ret 0xe75; 
0x55643326:  test byte ptr [eax + edi], ah; add al, 0; add byte ptr [ecx], cl; ret 0x850f; 
0x556a7151:  test byte ptr [eax - 0x48000000], bh; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x55674933:  test byte ptr [eax - 0x75000000], cl; test dword ptr [eax - 0x77000000], esi; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x555a5358:  test byte ptr [eax], bh; ret 0xffff; 
0x555e5678:  test byte ptr [ebp + 0x27bc], 0; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; pop ebx; ret; 
0x555d362b:  test byte ptr [ebp - 0x76fffffb], bh; ret 0xd285; 
0x555f3120:  test byte ptr [ebx + 1], bl; add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x556a3273:  test byte ptr [ebx - 0x567f4], al; sub eax, ecx; pop ebp; pop ebx; ret; 
0x55617d6b:  test byte ptr [ebx - 0xe9280], dh; jmp eax; 
0x55686c6b:  test byte ptr [ebx - 0xf76eb3c], 0x5b; pop esi; ret; 
0x556c5554:  test byte ptr [ebx - 3], cl; push dword ptr [esp + ecx*2]; std; jmp esp; 
0x55655230:  test byte ptr [ecx + eax*2 + 1], 0x40; cmove eax, edx; ret; 
0x555f7332:  test byte ptr [ecx - 0x7b000000], cl; ror byte ptr [edi], 0x95; ret 0xf883; 
0x555a3262:  test byte ptr [ecx - 0x7d000000], dh; ret 0x8301; 
0x5561737d:  test byte ptr [ecx], 7; add byte ptr [ecx + 0xe9c73c1], al; add byte ptr [ebx - 0xf777], cl; push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0x8965; 
0x556a4c58:  test byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; ret; 
0x555e634a:  test byte ptr [ecx], dl; idiv bh; inc dword ptr [eax + 0xf000a79]; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x55602c62:  test byte ptr [edi], 0x95; ret 0xd029; 
0x555e6354:  test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x556a4859:  test byte ptr [edx - 0xa000000], ah; ret 0x7501; 
0x556c5238:  test byte ptr [esi], ch; std; jmp esp; 
0x55676f30:  test dh, al; add byte ptr [eax], al; add byte ptr [ebx + 0x1c42484], cl; add byte ptr [eax], al; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x556a713e:  test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x55577258:  test dl, ah; pop es; add byte ptr [ecx - 0x47fbdbbc], cl; ret 0; 
0x555e5977:  test dword ptr [0x5bfffffe], edx; ret; 
0x555e584f:  test dword ptr [0x5bffffff], edi; ret; 
0x555b7725:  test dword ptr [eax + 0x39ffffef], esi; ret 0x1c77; 
0x555b733c:  test dword ptr [eax + 0x39ffffef], esi; ret 0x7d77; 
0x555f377b:  test dword ptr [eax + 0x66000000], esi; pmovmskb eax, mm1; bsr eax, eax; add eax, ecx; ret; 
0x55605147:  test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x555b4d4b:  test dword ptr [eax - 0x16000011], esi; ret 0xfffc; 
0x556a6a23:  test dword ptr [eax - 0x73000000], ebp; inc edx; pop es; ret; 
0x556a5853:  test dword ptr [eax - 0x73000000], ecx; inc edi; hlt; pop edi; ret; 
0x55674939:  test dword ptr [eax - 0x77000000], esi; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x556a622b:  test dword ptr [eax - 0x77ffffff], esi; ret 0xe280; 
0x556a5246:  test dword ptr [ebp - 0x57fffffe], edx; and byte ptr [edi], cl; test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x556a6356:  test dword ptr [ebp - 0x78000000], eax; ret 0xe280; 
0x556a6666:  test dword ptr [ebp - 0x7d000000], esp; ret 0xf0c; 
0x556a582e:  test dword ptr [ebp], edi; add byte ptr [eax], al; lea eax, dword ptr [edi - 0x10]; pop edi; ret; 
0x556a5268:  test dword ptr [ebx + 2], esi; add byte ptr [eax], al; lea eax, dword ptr [edi + 7]; pop edi; ret; 
0x555e546f:  test dword ptr [ebx + eax], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x556a6e7d:  test dword ptr [ebx - 0x7cfffffd], ebx; ror byte ptr [ebx], 0x5f; ret; 
0x55592768:  test dword ptr [ebx - 0x7d000000], ebx; ret 0x3901; 
0x55605162:  test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x556a2340:  test dword ptr [ecx - 0x7cfffff2], ebp; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x556a6f3a:  test dword ptr [ecx - 0xa000000], esi; ret 0xf04; 
0x555d5f37:  test dword ptr [ecx], ebx; sub eax, dword ptr [eax]; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x77]; 
0x5560512c:  test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x555b786f:  test dword ptr [edi + ebp*8 - 1], ebx; dec dword ptr [edx]; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x8589; 
0x55576968:  test dword ptr [edi + edi*8 - 1], eax; inc dword ptr [ebx - 0xb77b]; jmp dword ptr [eax]; 
0x556a663c:  test dword ptr [edi - 0x7d000000], ebx; ret 0xf08; 
0x556a6f64:  test dword ptr [edi - 0xa000000], esp; ret 0xf20; 
0x55692f31:  test dword ptr [edi], 0x88ff48b6; dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x555e5539:  test dword ptr [edx + 2], edx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x555e5567:  test dword ptr [edx + eax], esp; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x556a6e4d:  test dword ptr [edx - 0x9fffffd], esi; ret 0xf40; 
0x556e5f34:  test dword ptr [edx], eax; inc edx; or eax, 0x3874305; inc edx; add dword ptr [0x5d030486], 6; ret; 
0x556e6540:  test dword ptr [edx], ebx; hlt; call dword ptr [eax]; 
0x555e5171:  test dword ptr [edx], ebx; push es; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x555e512d:  test dword ptr [esi + 6], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x556a5235:  test dword ptr [esi - 0x57fffffe], esp; adc byte ptr [edi], cl; test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x556a587d:  test dword ptr [esi - 0x73000000], ecx; inc edi; clc; pop edi; ret; 
0x556a6e56:  test dword ptr [esi - 0x7cfffffd], ebp; rol byte ptr [edi], 0x5f; ret; 
0x556a6e44:  test dword ptr [esi - 0x9fffffd], esi; ret 0xf20; 
0x556a6f6d:  test dword ptr [esi - 0xa000000], ebp; ret 0xf40; 
0x555e544d:  test dword ptr [esi], edi; add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x55653067:  test dword ptr [esi], edx; add dword ptr [eax], eax; add byte ptr [ebx - 0x12f6d], cl; jmp dword ptr [ebp - 0x75]; 
0x556f7b61:  test eax, 0x5bbc0002; clc; call dword ptr [ecx]; 
0x556a2341:  test eax, 0x8300000e; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x556c4568:  test eax, 0xc9fffcd8; fdivr st(4); jmp dword ptr [esi - 0x28]; 
0x5568276a:  test eax, eax; cmove edx, esi; mov esi, dword ptr [esp + 0x18]; add esp, 0x1c; mov eax, edx; ret; 
0x55672e77:  test eax, eax; setne al; add esp, 0x1c; movzx eax, al; ret; 
0x5566796b:  test eax, esp; add byte ptr [eax], al; add byte ptr [ebp - 0x42f0c6d], cl; dec dword ptr [ecx - 0x72cbdbac]; xchg eax, ebx; call eax; 
0x55624c48:  test ebp, ebp; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret 0x840f; 
0x556a524e:  test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x555f3756:  test ebp, esi; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x555f347d:  test esi, ebp; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x556a523d:  test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x556a6e27:  test esp, eax; add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x55682a6b:  test esp, edi; add byte ptr [eax], al; add byte ptr [ebx - 0x2f76e73c], al; pop ebx; ret; 
0x556a7a73:  test esp, edi; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x556a525f:  test esp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x556d7241:  wait; add byte ptr [eax], al; ret; 
0x556e6d2d:  wait; add dword ptr [eax], eax; push eax; and esp, esi; jmp dword ptr [edi]; 
0x556d5079:  wait; iretd; out dx, al; jmp dword ptr [edx]; 
0x5561745a:  wait; push cs; add byte ptr [ebx - 0x78f3db84], cl; fistp qword ptr [eax + 0xd3]; call dword ptr gs
0x5567775b:  wait; sti; inc dword ptr [ebx]; xchg eax, esp; ret; 
0x556a234c:  xchg bh, bh; adc byte ptr [eax], al; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x556e5f3f:  xchg byte ptr [ebx + eax], al; pop ebp; push es; ret; 
0x556d297d:  xchg byte ptr [ebx], al; inc ebx; push cs; adc byte ptr [ebx + 0x300e4304], al; add ah, byte ptr [ecx + 0x43100e0a]; ret; 
0x556f6e51:  xchg byte ptr [ebx], al; inc ebx; push cs; adc byte ptr [ebx + 0xc0e7e04], al; ret; 
0x556e7a2e:  xchg byte ptr [ecx + eax*2], al; push cs; adc al, 0x83; add eax, 0x2400e43; ret 0xe0a; 
0x556e273c:  xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; imul eax, dword ptr [ecx], 0xa; ret; 
0x556d5e70:  xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; int1; add dword ptr [edx], ecx; ret; 
0x556d2a4c:  xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; pop ecx; add al, 0xa; ret; 
0x556e5f6c:  xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; push ebx; add cl, byte ptr [edx]; ret; 
0x556f687c:  xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; salc; add cl, byte ptr [edx]; ret; 
0x556e5c38:  xchg byte ptr [edi + eax*4], al; add eax, dword ptr [ebx]; xchg byte ptr [edx + ecx], al; ret; 
0x556f3e2c:  xchg byte ptr [edi + eax*4], al; add eax, dword ptr [edx]; jno 0x195e3d; ret; 
0x556a312c:  xchg byte ptr [edi], bl; add eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x556a2a3c:  xchg byte ptr [edi], cl; or al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x556c4e60:  xchg byte ptr [edi], cl; std; dec dword ptr [eax]; adc ch, bh; jmp edx; 
0x555f3341:  xchg byte ptr [edx + 0x1000002], bl; clc; add eax, ecx; pop edi; ret; 
0x556e5c3d:  xchg byte ptr [edx + ecx], al; ret; 
0x556e3c21:  xchg byte ptr [edx], al; add ah, byte ptr [edx + 0xe]; add al, 0xc6; ret; 
0x556f5528:  xchg byte ptr [edx], al; add bl, byte ptr [eax + 0xe]; add al, 0xc6; ret; 
0x556f4a2c:  xchg byte ptr [edx], al; add dl, byte ptr [ecx + 0xa]; push cs; add al, 0xc6; ret; 
0x556f395d:  xchg byte ptr [edx], al; add dword ptr [ebx], 2; pop ecx; push cs; add al, 0xc6; ret; 
0x556d7820:  xchg byte ptr [edx], al; bound ecx, qword ptr [edx]; push cs; add al, 0xc6; ret; 
0x556d6b69:  xchg byte ptr [edx], al; inc esp; add dword ptr [ebx], 0x60; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x556d7d35:  xchg byte ptr [edx], al; inc esp; add dword ptr [ebx], 0x79; push cs; add al, 0xc6; ret; 
0x556f5038:  xchg byte ptr [edx], al; jno 0x19704a; add al, 0xc6; ret; 
0x556f3b44:  xchg byte ptr [edx], al; jo 0x195b56; add al, 0xc6; ret; 
0x556d7c70:  xchg byte ptr [edx], al; jp 0x179c7e; push cs; add al, 0xc6; ret; 
0x556d227c:  xchg byte ptr [edx], al; or cl, byte ptr gs
0x556f616c:  xchg byte ptr [edx], al; pop ebp; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x556e3830:  xchg byte ptr [edx], al; pop edx; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x556d2224:  xchg byte ptr [edx], al; pop esp; or cl, byte ptr [esi]; add al, 0xc6; ret; 
0x556f6c44:  xchg byte ptr [edx], al; push 0xc6040e0a; ret; 
0x556c4f44:  xchg byte ptr [esi], bl; std; call esi; 
0x556c4f44:  xchg byte ptr [esi], bl; std; call esi; push ds; std; jmp dword ptr [esi]; 
0x55666c45:  xchg dword ptr [eax - 1], edi; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x556c5d5d:  xchg dword ptr [eax], eax; add ah, dl; mov al, 0xeb; call eax; 
0x556d285e:  xchg dword ptr [ebx], eax; add ah, al; ret; 
0x556e6322:  xchg dword ptr [ebx], eax; add ah, byte ptr [esi + 0xa]; ret; 
0x556e3662:  xchg dword ptr [ebx], eax; add cl, byte ptr [edi + 0xa]; ret; 
0x556f3e2e:  xchg dword ptr [ebx], eax; add dh, byte ptr [ecx + 0xa]; ret; 
0x556e5552:  xchg dword ptr [ebx], eax; add ebx, esi; add dword ptr [edx], ecx; ret; 
0x556f687e:  xchg dword ptr [ebx], eax; add edx, esi; add cl, byte ptr [edx]; ret; 
0x556f4032:  xchg dword ptr [ebx], eax; add esi, dword ptr [ecx + eax + 0xa]; ret; 
0x556d5e72:  xchg dword ptr [ebx], eax; add esi, ecx; add dword ptr [edx], ecx; ret; 
0x556e5f3a:  xchg dword ptr [ebx], eax; inc edx; add dword ptr [0x5d030486], 6; ret; 
0x555b4d45:  xchg dword ptr [ecx + eax], esp; add byte ptr [ecx], al; test dword ptr [eax - 0x16000011], esi; ret 0xfffc; 
0x556f4e3b:  xchg dword ptr [edx], eax; add dl, byte ptr [edx - 0x3938fbf2]; ret; 
0x556e593c:  xchg dword ptr [edx], eax; insb byte ptr es
0x55666645:  xchg dword ptr [esi - 1], edi; dec dword ptr [ebx - 0xf76d]; jmp dword ptr [ebp - 0x75]; 
0x556b6d2f:  xchg dword ptr [esp + eax + 0x6fa9ce9d], esp; ret; 
0x556a5247:  xchg eax, ebp; add al, byte ptr [eax]; add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x556f677d:  xchg eax, ebp; add al, byte ptr [eax]; pushal; sbb eax, edi; call edx; 
0x555f4b33:  xchg eax, ebp; add byte ptr [ebx + 0x29202454], cl; ret 0xc083; 
0x555b3561:  xchg eax, ebp; ficom dword ptr [eax + eax]; mov edi, dword ptr [esp + 0x10]; xchg edi, ebx; mov eax, 0x12e; call dword ptr gs
0x556b6848:  xchg eax, ebp; push es; cld; ret; 
0x555d5928:  xchg eax, ebp; ret 0x440b; 
0x5567267f:  xchg eax, ebp; ret 0x463b; 
0x55655c5a:  xchg eax, ebp; ret 0x7c8b; 
0x55602c64:  xchg eax, ebp; ret 0xd029; 
0x55672e49:  xchg eax, ebp; ret 0xd089; 
0x55606156:  xchg eax, ebp; ret 0xd138; 
0x55603d62:  xchg eax, ebp; ret 0xd589; 
0x55585927:  xchg eax, ebp; ret 0xd789; 
0x55672e7a:  xchg eax, ebp; rol byte ptr [ebx - 0x49f0e33c], 0xc0; ret; 
0x5563627f:  xchg eax, ebp; ror byte ptr [ebx - 0x74cbdb84], 0x6c; and al, 0x38; add esp, 0x3c; ret; 
0x5566797b:  xchg eax, ebx; call eax; 
0x556c5979:  xchg eax, ebx; cld; call eax; 
0x555f4827:  xchg eax, ebx; dec esp; xor al, 0xef; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x556c4344:  xchg eax, ebx; fdivr st(4); call ebx; 
0x556c4344:  xchg eax, ebx; fdivr st(4); call ebx; fdivr st(4); call dword ptr [ebx]; 
0x556c4354:  xchg eax, ebx; frndint; call ebx; 
0x556c4354:  xchg eax, ebx; frndint; call ebx; frndint; call dword ptr [ebx]; 
0x555d2c4e:  xchg eax, ebx; inc eax; sbb dword ptr [eax], eax; add byte ptr [ebp + 0x44c8b], cl; add byte ptr [ebx - 0x1877d], cl; jmp dword ptr [ebp - 0x77]; 
0x55577a2c:  xchg eax, ebx; mov al, byte ptr [0x89000036]; ret 0xc589; 
0x55605921:  xchg eax, ebx; or al, 0x7d; sti; dec dword ptr [edi]; inc ebp; ret 0xa5eb; 
0x55623c67:  xchg eax, ebx; pushfd; sub esi, edx; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x55585943:  xchg eax, ebx; ret 0xd789; 
0x55667971:  xchg eax, ebx; sar bl, 1; dec dword ptr [ecx - 0x72cbdbac]; xchg eax, ebx; call eax; 
0x55577349:  xchg eax, ecx; add al, 5; add byte ptr [eax], al; pop ebx; ret; 
0x556e6879:  xchg eax, ecx; add dword ptr [eax], eax; cld; hlt; call dword ptr [eax]; 
0x556c596d:  xchg eax, ecx; cld; call dword ptr [eax - 0x6e]; 
0x55697351:  xchg eax, ecx; fld qword ptr [edx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x55617d65:  xchg eax, ecx; push cs; add byte ptr [ecx - 0x4c7bd428], cl; sub byte ptr [ebp - 0xf], 0xff; jmp eax; 
0x556d6929:  xchg eax, edi; add byte ptr [eax], al; inc esp; sub ch, bh; jmp dword ptr [ebx]; 
0x556c6065:  xchg eax, edi; add byte ptr [eax], al; mov ah, 0x16; in al, dx; call dword ptr [eax - 0x68]; 
0x556d6139:  xchg eax, edi; fsubp st(6); jmp dword ptr [edx]; 
0x556d5151:  xchg eax, edi; iretd; out dx, al; jmp dword ptr [edx]; 
0x556f6061:  xchg eax, edi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x5564783a:  xchg eax, edi; or eax, dword ptr [eax]; mov edi, dword ptr [esp + 0xc]; xchg edi, ebx; mov eax, 0xc1; call dword ptr gs
0x55643468:  xchg eax, edi; ret 0xd689; 
0x5558595f:  xchg eax, edi; ret 0xd789; 
0x5561784b:  xchg eax, edi; ror byte ptr [edi], 0x92; ret 0xd028; 
0x556c4e78:  xchg eax, edx; adc ch, bh; jmp dword ptr [edx]; 
0x556f695d:  xchg eax, edx; add al, byte ptr [eax]; cdq; xor bh, al; call dword ptr [eax]; 
0x556c5f5d:  xchg eax, edx; add byte ptr [eax], al; imul bl; jmp eax; 
0x556c5975:  xchg eax, edx; cld; inc dword ptr [eax - 0x6d]; cld; call eax; 
0x556c5634:  xchg eax, edx; dec esi; std; call dword ptr [edx]; 
0x556c6441:  xchg eax, edx; in al, dx; jmp eax; 
0x556b712e:  xchg eax, edx; inc edx; jmp dword ptr [edx - 0x71]; 
0x556c4f24:  xchg eax, edx; push ds; std; jmp edx; 
0x555f2874:  xchg eax, edx; pushal; or al, 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x5561784e:  xchg eax, edx; ret 0xd028; 
0x5564346d:  xchg eax, edx; ret 0xf189; 
0x556c4a24:  xchg eax, edx; stc; cld; jmp dword ptr [edx]; 
0x5565423d:  xchg eax, esi; add dword ptr [eax], eax; add byte ptr [ebx - 0x12f7d], cl; jmp dword ptr [ebp - 0x75]; 
0x556c6469:  xchg eax, esi; in al, dx; call eax; 
0x555c2d7a:  xchg eax, esp; add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov eax, 0x5b000000; ret; 
0x555c487b:  xchg eax, esp; add byte ptr [eax], al; add byte ptr [ecx - 0x76f7db94], cl; adc al, 0x24; mov dword ptr [esp + 4], ecx; call dword ptr [eax + 0x1c]; 
0x55582438:  xchg eax, esp; cwde; add eax, 0x24548b00; sbb byte ptr [ebx - 0x7ae3dbb4], cl; sal byte ptr [ebp - 0x50], 0x83; ret 0x8901; 
0x556c6461:  xchg eax, esp; in al, dx; ljmp ptr [eax + 0x40000ac]; xchg eax, esi; in al, dx; call eax; 
0x556d6144:  xchg eax, esp; mov al, byte ptr [eax]; add dh, ch; sti; call dword ptr [eax]; 
0x555a3034:  xchg eax, esp; or dword ptr [eax + ebp*2 - 5], 0xffffffff; add edx, dword ptr [ebp - 0x49c]; mov dword ptr [ebp - 0x510], 1; mov dword ptr [ebp - 0x4b8], edi; jmp edx; 
0x55575f25:  xchg eax, esp; ret 0x348d; 
0x55632869:  xchg eax, esp; ret 0x3d; 
0x555c327a:  xchg eax, esp; ret 0x548d; 
0x55626220:  xchg eax, esp; ret 0x8d89; 
0x55626d7c:  xchg eax, esp; ret 0xa5e9; 
0x55644d62:  xchg eax, esp; ret 0xb; 
0x55577548:  xchg eax, esp; ret 0xc031; 
0x5566356d:  xchg eax, esp; ret 0xd285; 
0x55667a30:  xchg eax, esp; rol byte ptr [ebx + 0x5e5b5cc4], 0x5f; pop ebp; ret; 
0x5564643f:  xchg eax, esp; rol byte ptr [ebx - 0x3b7cfe18], 0x24; pop ebx; pop esi; ret; 
0x55577b58:  xchg eax, esp; sbb byte ptr [eax], al; mov eax, dword ptr [ecx - 0xf8]; add eax, dword ptr gs
0x556c4c54:  xchg eax, esp; std; cld; push dword ptr [esi + edi*8]; cld; call esp; 
0x5561712f:  xchg ebx, ecx; mov eax, 0xd5; call dword ptr gs
0x55606448:  xchg ebx, ecx; mov eax, 0xd; call dword ptr gs
0x55623b42:  xchg ebx, edi; neg eax; pop edi; ret; 
0x55647574:  xchg ebx, edx; mov eax, 0x10f; call dword ptr gs
0x55647755:  xchg edi, ebx; mov eax, 0x12b; call dword ptr gs
0x555b3569:  xchg edi, ebx; mov eax, 0x12e; call dword ptr gs
0x55615c64:  xchg edi, ebx; mov eax, 0x72; call dword ptr gs
0x55644d70:  xchg edi, ebx; mov eax, 0x91; call dword ptr gs
0x55647841:  xchg edi, ebx; mov eax, 0xc1; call dword ptr gs
0x5561755c:  xchg edi, ebx; mov eax, 0xd2; call dword ptr gs
0x55617461:  xchg edi, ebx; mov eax, 0xd3; call dword ptr gs
0x55623b34:  xchg edi, ebx; mov eax, 0xdb; call dword ptr gs
0x5569745b:  xchg esp, ebx; add al, byte ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x556c4329:  xlatb; cld; jmp dword ptr [ebx - 0x29]; 
0x556c4339:  xlatb; cld; jmp dword ptr [ebx]; 
0x556c4325:  xlatb; cld; push dword ptr [ebx]; xlatb; cld; jmp dword ptr [ebx - 0x29]; 
0x556c4335:  xlatb; cld; push ebx; xlatb; cld; jmp dword ptr [ebx]; 
0x5562574a:  xlatb; ret 0xfffb; 
0x555f3c3f:  xlatb; rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x555f3550:  xlatb; rol dword ptr [ebp + 0x315a75c0], -0x40; pop edi; ret; 
0x55645b5f:  xlatb; xchg edi, ebx; mov eax, 0xd2; call dword ptr gs
0x556d5a75:  xlatb; xlatb; out dx, al; jmp dword ptr [edx]; 
0x556d6361:  xor ah, bl; cli; jmp dword ptr [edx]; 
0x556c426c:  xor ah, dl; cld; jmp dword ptr [eax - 0x2c]; 
0x556e6a64:  xor al, 0; add byte ptr [eax], al; push 0xf4000198; sbb esp, esi; call eax; 
0x555c4a3f:  xor al, 0x24; call dword ptr [eax + 0x24]; 
0x555c4e77:  xor al, 0x24; call dword ptr [eax + 0x2c]; 
0x55672133:  xor al, 0x24; call dword ptr [eax + 4]; 
0x55672163:  xor al, 0x24; call dword ptr [eax]; 
0x555d2f71:  xor al, 0x24; call dword ptr [edx]; 
0x555b3667:  xor al, 0x24; mov dword ptr [eax + 4], 1; xor eax, eax; add esp, 0xc; ret; 
0x555c4c7b:  xor al, 0x24; mov dword ptr [esp + 0x10], edx; mov dword ptr [esp + 0xc], 0; call dword ptr [eax + 0x24]; 
0x555d752f:  xor al, 0x24; mov dword ptr [esp + 4], ebp; mov dword ptr [esp + 8], edx; call eax; 
0x555c504a:  xor al, 0x24; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x2c]; 
0x5562604e:  xor al, 0x24; mov dword ptr [esp + 8], ecx; call dword ptr [ebp - 0x78]; 
0x55584927:  xor al, 0x24; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x55577524:  xor al, 0x39; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs
0x556c7f50:  xor al, 0x3b; int1; call eax; 
0x556c5540:  xor al, 0x4b; std; jmp esp; 
0x556c5558:  xor al, 0x4c; std; jmp esp; 
0x556c6358:  xor al, 0x73; in al, dx; call dword ptr [eax]; 
0x556f5134:  xor al, 0x7f; add al, byte ptr [eax]; dec eax; mov cl, 0xf7; jmp dword ptr [esi]; 
0x55633043:  xor al, 0x83; ret 0x8b01; 
0x55577857:  xor al, 0x89; push esp; and al, 4; mov edx, dword ptr [esp + 0x30]; mov dword ptr [esp], edx; call eax; 
0x555c666f:  xor al, 0x89; ret 0xfac1; 
0x555c5048:  xor al, 0x89; xor al, 0x24; mov dword ptr [esp + 4], edx; call dword ptr [eax + 0x2c]; 
0x555d4c29:  xor al, 0x89; xor ch, cl; ret 0xfffe; 
0x55667979:  xor al, 0x8d; xchg eax, ebx; call eax; 
0x556c6c34:  xor al, 0xda; add byte ptr [eax], al; test bh, bl; out dx, al; jmp dword ptr [eax]; 
0x556c5c49:  xor al, 0xeb; dec dword ptr [esi + edi*2]; add ah, al; xor al, 0xeb; jmp dword ptr [eax + 0x7e]; 
0x556c5c51:  xor al, 0xeb; jmp dword ptr [eax + 0x7e]; 
0x555f4829:  xor al, 0xef; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x556e5b31:  xor al, 0xf3; call dword ptr [esi]; 
0x55643a6c:  xor al, 0xf6; ret 0x7420; 
0x5558517a:  xor al, 0xf; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x5558513a:  xor al, 0xf; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x5558505a:  xor al, 0xf; mov bh, 4; push eax; and eax, 1; ret; 
0x5558515a:  xor al, 0xf; mov bh, 4; push eax; and eax, 4; ret; 
0x5558507a:  xor al, 0xf; mov bh, 4; push eax; and eax, 8; ret; 
0x556c537d:  xor al, 0xfd; inc dword ptr [eax]; xor eax, 0x3590fffd; std; jmp dword ptr [eax]; 
0x556c4c58:  xor al, 0xfe; cld; call esp; 
0x55676a60:  xor al, 4; add byte ptr [eax], al; mov eax, edx; pop esi; pop edi; ret; 
0x55644a77:  xor al, byte ptr [eax + eax]; add ebx, 0xbc57a; mov edx, dword ptr [esp + 8]; xchg ebx, edx; mov eax, 0x60; call dword ptr gs
0x556e537d:  xor al, byte ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x556c6e64:  xor al, ch; add byte ptr [eax], al; stosb byte ptr es
0x555f2743:  xor al, ch; push esi; or dword ptr [eax], eax; add ecx, 0xc61bb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x55647938:  xor al, ch; xor eax, 0x81000404; ret; 
0x556f6961:  xor bh, al; call dword ptr [eax]; 
0x555f2e31:  xor bh, bh; mov byte ptr [eax + 0x40], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x556c5371:  xor bh, ch; call dword ptr [eax + 0x33]; 
0x556c5371:  xor bh, ch; call dword ptr [eax + 0x33]; std; jmp eax; 
0x556c536d:  xor bh, ch; inc eax; xor bh, ch; call dword ptr [eax + 0x33]; 
0x556c536d:  xor bh, ch; inc eax; xor bh, ch; call dword ptr [eax + 0x33]; std; jmp eax; 
0x556f3045:  xor bh, dh; call dword ptr [eax]; 
0x556d7a30:  xor byte ptr [eax + 0x58cc0000], ch; out dx, eax; jmp dword ptr [ebx]; 
0x555f2956:  xor byte ptr [eax + 0xc], ah; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x555f2e30:  xor byte ptr [eax], dh; dec dword ptr [eax + 0x448b4078]; and al, 0xc; pop ebx; pop esi; ret; 
0x5559367b:  xor byte ptr [ebx + 0x1642444], cl; ret 0x448b; 
0x555f2740:  xor byte ptr [ebx + 0x2ee830c0], al; push esi; or dword ptr [eax], eax; add ecx, 0xc61bb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x55643a66:  xor byte ptr [ebx + 0x4e894050], cl; xor al, 0xf6; ret 0x7420; 
0x5565567c:  xor byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x55613560:  xor byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x555c545d:  xor byte ptr [ecx + 0x458b0450], cl; push esp; mov dword ptr [esp], eax; call dword ptr [eax + 0x10]; 
0x556f344d:  xor byte ptr [ecx - 0xa], al; jmp dword ptr [edx]; 
0x555f3875:  xor byte ptr [ecx], al; ret 0x267c; 
0x556f7130:  xor byte ptr [edi + 0x3ebc0002], bl; clc; jmp dword ptr [eax]; 
0x5563627d:  xor byte ptr [edi], cl; xchg eax, ebp; ror byte ptr [ebx - 0x74cbdb84], 0x6c; and al, 0x38; add esp, 0x3c; ret; 
0x556e2430:  xor byte ptr [edx + 1], dl; add ah, bl; cmc; int1; call dword ptr [ebx]; 
0x556f7c68:  xor byte ptr [edx], al; inc edi; push cs; or byte ptr [esi + ecx + 4], al; ret; 
0x556c536c:  xor byte ptr [edx], dh; std; inc eax; xor bh, ch; call dword ptr [eax + 0x33]; 
0x556c4e4c:  xor byte ptr [esi], al; std; inc eax; push es; std; call dword ptr [eax + 7]; 
0x556d3120:  xor ch, bh; in eax, dx; jmp dword ptr [eax + 1]; 
0x55585241:  xor ch, byte ptr [ebx]; adc byte ptr [eax], al; add ecx, 0x17bdaf; mov eax, dword ptr [ecx - 0xc0]; add eax, dword ptr gs
0x556c6f2c:  xor ch, ch; add byte ptr [eax], al; aam 0xee; out dx, eax; jmp dword ptr [eax]; 
0x555f3966:  xor ch, ch; add eax, ecx; pop edi; ret; 
0x556d296d:  xor ch, ch; call dword ptr [ebx + 1]; 
0x555d4c2b:  xor ch, cl; ret 0xfffe; 
0x556e6f51:  xor dh, ah; jmp dword ptr [esi]; 
0x556f335d:  xor dh, bh; call ebx; 
0x556c4930:  xor dh, bl; cld; inc eax; fdivp st(4); call dword ptr [eax - 0x21]; 
0x55696139:  xor dl, 0xa2; cld; jmp dword ptr [esi - 0x70]; 
0x556b6843:  xor dl, byte ptr [ebx + 0x71]; cld; out 0x95, eax; push es; cld; ret; 
0x5558526c:  xor dword ptr [eax - 1], 0x365ffff; add eax, 0; ret; 
0x556f6220:  xor dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e6f02], al; ret; 
0x5566783b:  xor dword ptr [eax], eax; add byte ptr [ecx], al; mov esi, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; add esp, 0x1c; ret; 
0x555d3657:  xor dword ptr [ecx], edi; ret 0xcc75; 
0x556c4758:  xor eax, 0x75fffcdc; fdiv st(4), st(0); inc dword ptr [eax - 0x4f000327]; frndint; jmp eax; 
0x5568203a:  xor eax, 0x8100005d; ret; 
0x5564793a:  xor eax, 0x81000404; ret; 
0x55697f3a:  xor eax, 0x81fffefe; ret; 
0x556f2550:  xor eax, 0xd1cfff6; in al, dx; xor al, 0xf6; jmp dword ptr [edx]; 
0x5557752c:  xor eax, dword ptr [0x18]; call eax; 
0x5556754c:  xor eax, dword ptr [eax]; add byte ptr [eax], al; adc al, byte ptr [eax]; or al, 0; mov eax, dword ptr [0xd0000010]; ret 7; 
0x55617a32:  xor eax, dword ptr [ecx]; adc eax, 0xb8907174; and byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x5557752b:  xor eax, dword ptr gs
0x555b3670:  xor eax, eax; add esp, 0xc; ret; 
0x55606440:  xor eax, eax; mov edx, dword ptr [esp + 4]; mov ecx, eax; xchg ebx, ecx; mov eax, 0xd; call dword ptr gs
0x555b367c:  xor eax, eax; mov esi, dword ptr [esp]; mov edi, dword ptr [esp + 4]; mov ebp, dword ptr [esp + 8]; add esp, 0xc; ret; 
0x55637f3e:  xor eax, eax; pop ebx; pop esi; pop edi; pop ebp; ret 0x14; 
0x555d2d63:  xor ebp, ebp; mov dword ptr [esp + 0x18], edx; mov dword ptr [esp], 0; call dword ptr [ecx]; 
0x556c5c31:  xor ebp, ebx; jmp esp; 
0x556c5369:  xor ebp, edi; push dword ptr [eax]; xor bh, ch; inc eax; xor bh, ch; call dword ptr [eax + 0x33]; 
0x556e6532:  xor ebx, 0x22ff; sub al, 0; add byte ptr [eax], al; mov word ptr [esi + 0x1a850001], cs; hlt; call dword ptr [eax]; 
0x5563364b:  xor ebx, ebp; ret; 
0x556c7e49:  xor ecx, esi; call esp; 
0x556c7e21:  xor ecx, esi; jmp esp; 
0x556c5375:  xor edi, ebp; jmp eax; 
0x556f3339:  xor edi, esi; jmp dword ptr [ebx]; 
0x556c3e38:  xor edx, ecx; cld; jmp dword ptr [ebx - 0x2f]; 
0x556c4328:  xor edx, edi; cld; jmp dword ptr [ebx - 0x29]; 
0x556d3742:  xor esi, ebp; jmp dword ptr [edx]; 
0x55686c6a:  xor esi, esi; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x556a6f2c:  xor esi, esi; ret 0xf01; 
